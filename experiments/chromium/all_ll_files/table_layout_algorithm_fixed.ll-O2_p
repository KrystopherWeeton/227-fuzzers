; ModuleID = '../../third_party/blink/renderer/core/layout/table_layout_algorithm_fixed.cc'
source_filename = "../../third_party/blink/renderer/core/layout/table_layout_algorithm_fixed.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::TableLayoutAlgorithmFixed" = type { %"class.blink::TableLayoutAlgorithm", i8, %"class.WTF::Vector.701" }
%"class.blink::TableLayoutAlgorithm" = type { i32 (...)**, %"class.blink::LayoutTable"* }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::LayoutTable" = type { %"class.blink::LayoutBlock.base", %"class.blink::LayoutNGTableInterface", %"class.WTF::Vector.1667", %"class.WTF::Vector.1672", %"class.WTF::Vector.1677", %"class.WTF::Vector.1682", %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"*, %"class.std::__1::unique_ptr.1753", i16, i32, i16, i16, i32, i32, i32, i32, i32, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutBlock.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16 }>
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1623, %"class.WTF::Vector.1624", %"class.std::__1::unique_ptr.1629", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1650, %"class.blink::Persistent.1651" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1601", [4 x i8] }>
%"class.WTF::RefCounted.1601" = type { %"class.base::RefCounted.1602" }
%"class.base::RefCounted.1602" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1594", i64 }
%"class.std::__1::vector.1594" = type { %"class.std::__1::__vector_base.1595" }
%"class.std::__1::__vector_base.1595" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1596" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1596" = type { %"struct.std::__1::__compressed_pair_elem.1597" }
%"struct.std::__1::__compressed_pair_elem.1597" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1796 }
%class.scoped_refptr.1796 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.1797", %"class.WTF::Vector.630", %"class.WTF::Vector.1799", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.1797" = type { %"class.base::RefCounted.1798" }
%"class.base::RefCounted.1798" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.1799" = type { %"class.WTF::VectorBuffer.1800" }
%"class.WTF::VectorBuffer.1800" = type { %"class.WTF::VectorBufferBase.1801" }
%"class.WTF::VectorBufferBase.1801" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.1802 }
%union.anon.1802 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1322", i8, [7 x i8], %"class.blink::HeapHashMap.1324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1331", %"class.blink::Member.1336", %"class.blink::Member.1338", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1340", %"class.blink::HeapVector.1342", %"class.std::__1::unique_ptr.1350", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1356", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1369", %"class.WTF::Vector.1371", i8, i8, %"class.std::__1::unique_ptr.1376", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1382", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1390", i8, i32, %"class.blink::Member.1392", %"class.blink::Member.1394", %"class.blink::Member.1396", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1398", %"class.WTF::HashMap.1400", %"class.blink::Member.1405", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::Member.1411", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1413", i8, i32, %"class.blink::Member.1420", %"class.blink::Member.1422", i32, %"class.blink::Member.1424", %"class.blink::Member.1426", %"class.blink::Member.1428", %"class.std::__1::unique_ptr.1430", i64, %"class.std::__1::unique_ptr.1436", i32, i32, %"class.blink::Member.1447", %"class.blink::Member.1449", %"class.blink::Member.1451", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1453", %"class.WTF::Vector.1455", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1460", %"class.blink::Member.1467", %"class.std::__1::unique_ptr.1469", %"class.blink::Member.1475", i8, i8, %"class.WTF::String", %"class.blink::Member.1477", i8, [7 x i8], %"class.blink::HeapHashMap.1479", %"class.blink::HeapObserverSet", %"class.blink::Member.1493", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1495", i32, i8, i8, %"class.blink::WeakMember.1497", %"class.blink::Member.1498" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1522", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1563", i32, i8, [3 x i8], %"class.blink::HeapVector.1565", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1573", %"class.blink::Member.1575", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1584", %"class.blink::Member.1590", %"class.blink::Member.1592", i8, [7 x i8] }>
%"class.blink::Supplementable.1522" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1523" }
%"class.blink::HeapHashMap.1523" = type { %"class.WTF::HashMap.1526" }
%"class.WTF::HashMap.1526" = type { %"class.WTF::HashTable.1527" }
%"class.WTF::HashTable.1527" = type <{ %"struct.WTF::KeyValuePair.1529"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1529" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1538" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1530" }
%"class.blink::HeapObserverSet.1530" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1531" }
%"class.blink::HeapHashSet.1531" = type { %"class.WTF::HashSet.1534" }
%"class.WTF::HashSet.1534" = type { %"class.WTF::HashTable.1535" }
%"class.WTF::HashTable.1535" = type <{ %"class.blink::WeakMember.1537"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1537" = type opaque
%"class.blink::Supplementable.1538" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1539" }
%"class.blink::HeapHashMap.1539" = type { %"class.WTF::HashMap.1542" }
%"class.WTF::HashMap.1542" = type { %"class.WTF::HashTable.1543" }
%"class.WTF::HashTable.1543" = type <{ %"struct.WTF::KeyValuePair.1545"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1545" = type { i8*, %"class.blink::Member.1782" }
%"class.blink::Member.1782" = type { %"class.blink::MemberBase.1783" }
%"class.blink::MemberBase.1783" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1784" }
%"class.blink::Member.1784" = type { %"class.blink::MemberBase.1785" }
%"class.blink::MemberBase.1785" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1546, %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1553", %"class.std::__1::unique_ptr.1553", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1559", i32, i32 }
%class.scoped_refptr.1546 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.1547" = type { %"class.std::__1::__compressed_pair.1548" }
%"class.std::__1::__compressed_pair.1548" = type { %"struct.std::__1::__compressed_pair_elem.1549" }
%"struct.std::__1::__compressed_pair_elem.1549" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1553" = type { %"class.std::__1::__compressed_pair.1554" }
%"class.std::__1::__compressed_pair.1554" = type { %"struct.std::__1::__compressed_pair_elem.1555" }
%"struct.std::__1::__compressed_pair_elem.1555" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1559" = type { %"class.WTF::HashTable.1560" }
%"class.WTF::HashTable.1560" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1563" = type { %"class.blink::MemberBase.1564" }
%"class.blink::MemberBase.1564" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1565" = type { %"class.WTF::Vector.1568" }
%"class.WTF::Vector.1568" = type { %"class.WTF::VectorBuffer.1569" }
%"class.WTF::VectorBuffer.1569" = type { %"class.WTF::VectorBufferBase.1570" }
%"class.WTF::VectorBufferBase.1570" = type { %"class.blink::Member.1571"*, i32, i32 }
%"class.blink::Member.1571" = type opaque
%"class.blink::Member.1573" = type { %"class.blink::MemberBase.1574" }
%"class.blink::MemberBase.1574" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1575" = type { %"class.blink::MemberBase.1576" }
%"class.blink::MemberBase.1576" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1577", i32, i32 }
%"class.blink::HeapHashMap.1577" = type { %"class.WTF::HashMap.1580" }
%"class.WTF::HashMap.1580" = type { %"class.WTF::HashTable.1581" }
%"class.WTF::HashTable.1581" = type <{ %"struct.WTF::KeyValuePair.1583"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1583" = type opaque
%"class.std::__1::unique_ptr.1584" = type { %"class.std::__1::__compressed_pair.1585" }
%"class.std::__1::__compressed_pair.1585" = type { %"struct.std::__1::__compressed_pair_elem.1586" }
%"struct.std::__1::__compressed_pair_elem.1586" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1590" = type { %"class.blink::MemberBase.1591" }
%"class.blink::MemberBase.1591" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1513", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1513" = type { %"class.WTF::Vector.1516" }
%"class.WTF::Vector.1516" = type { %"class.WTF::VectorBuffer.1517" }
%"class.WTF::VectorBuffer.1517" = type { %"class.WTF::VectorBufferBase.1518" }
%"class.WTF::VectorBufferBase.1518" = type { %"class.blink::Member.1050"*, i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1810 }
%class.scoped_refptr.1810 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.1820" }
%"class.blink::Member.1820" = type { %"class.blink::MemberBase.1821" }
%"class.blink::MemberBase.1821" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.1816" }
%"class.blink::MemberBase.1816" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.1817" }
%"class.blink::MemberBase.1817" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.1818" }
%"class.blink::MemberBase.1818" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.1819" }
%"class.blink::MemberBase.1819" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.1811", %"class.WTF::Vector.1811" }
%"class.WTF::Vector.1811" = type { %"class.WTF::VectorBuffer.1812" }
%"class.WTF::VectorBuffer.1812" = type { %"class.WTF::VectorBufferBase.1813" }
%"class.WTF::VectorBufferBase.1813" = type { %class.scoped_refptr.1810*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1342" = type { %"class.WTF::Vector.1345" }
%"class.WTF::Vector.1345" = type { %"class.WTF::VectorBuffer.1346" }
%"class.WTF::VectorBuffer.1346" = type { %"class.WTF::VectorBufferBase.1347" }
%"class.WTF::VectorBufferBase.1347" = type { %"class.blink::Member.1348"*, i32, i32 }
%"class.blink::Member.1348" = type opaque
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1356" = type { %"class.WTF::HashSet.1359" }
%"class.WTF::HashSet.1359" = type { %"class.WTF::HashTable.1360" }
%"class.WTF::HashTable.1360" = type <{ %"class.blink::WeakMember.1362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1362" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1363", i32, [4 x i8] }>
%"class.WTF::Vector.1363" = type { %"class.WTF::VectorBuffer.1364" }
%"class.WTF::VectorBuffer.1364" = type { %"class.WTF::VectorBufferBase.1365" }
%"class.WTF::VectorBufferBase.1365" = type { %"struct.std::__1::pair.1366"*, i32, i32 }
%"struct.std::__1::pair.1366" = type opaque
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1382" = type { %"class.WTF::Vector.1385" }
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { %"class.blink::Member.1388"*, i32, i32 }
%"class.blink::Member.1388" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1400" = type { %"class.WTF::HashTable.1401" }
%"class.WTF::HashTable.1401" = type <{ %"struct.WTF::KeyValuePair.1404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1404" = type opaque
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1413" = type { %"class.WTF::HashSet.1416" }
%"class.WTF::HashSet.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"class.blink::Member.1419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1419" = type opaque
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1430" = type { %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1436" = type { %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1439" = type { %"class.WTF::HashTable.1440" }
%"class.WTF::HashTable.1440" = type <{ %"struct.WTF::KeyValuePair.1443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1443" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1455" = type { %"class.WTF::VectorBuffer.1456" }
%"class.WTF::VectorBuffer.1456" = type { %"class.WTF::VectorBufferBase.1457" }
%"class.WTF::VectorBufferBase.1457" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1460" = type { %"class.WTF::HashMap.1463" }
%"class.WTF::HashMap.1463" = type { %"class.WTF::HashTable.1464" }
%"class.WTF::HashTable.1464" = type <{ %"struct.WTF::KeyValuePair.1466"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1466" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1469" = type { %"class.std::__1::__compressed_pair.1470" }
%"class.std::__1::__compressed_pair.1470" = type { %"struct.std::__1::__compressed_pair_elem.1471" }
%"struct.std::__1::__compressed_pair_elem.1471" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1479" = type { %"class.WTF::HashMap.1482" }
%"class.WTF::HashMap.1482" = type { %"class.WTF::HashTable.1483" }
%"class.WTF::HashTable.1483" = type <{ %"struct.WTF::KeyValuePair.1485"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1485" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1486" }
%"class.blink::HeapHashSet.1486" = type { %"class.WTF::HashSet.1489" }
%"class.WTF::HashSet.1489" = type { %"class.WTF::HashTable.1490" }
%"class.WTF::HashTable.1490" = type <{ %"class.blink::WeakMember.1492"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1492" = type opaque
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1502", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1509", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::Member.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1508" = type opaque
%"class.blink::HeapTaskRunnerTimer.1509" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1510", { i64, i64 } }
%"class.blink::WeakMember.1510" = type { %"class.blink::MemberBase.1496" }
%"class.blink::WeakMember.1497" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.1786" }
%"class.WTF::Vector.1786" = type { %"class.WTF::VectorBuffer.1787" }
%"class.WTF::VectorBuffer.1787" = type { %"class.WTF::VectorBufferBase.1788" }
%"class.WTF::VectorBufferBase.1788" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1791", %"class.absl::optional.1791", %"class.absl::optional.1791" }
%"class.absl::optional.1791" = type { %"class.absl::optional_internal::optional_data.1792" }
%"class.absl::optional_internal::optional_data.1792" = type { %"class.absl::optional_internal::optional_data_base.1793" }
%"class.absl::optional_internal::optional_data_base.1793" = type { %"class.absl::optional_internal::optional_data_dtor_base.1794" }
%"class.absl::optional_internal::optional_data_dtor_base.1794" = type { i8, %union.anon.1795 }
%union.anon.1795 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.1806" }
%"class.WTF::VectorBuffer.1806" = type { %"class.WTF::VectorBufferBase.1807", [32 x i8] }
%"class.WTF::VectorBufferBase.1807" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1623 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type opaque
%"class.WTF::Vector.1624" = type { %"class.WTF::VectorBuffer.1625" }
%"class.WTF::VectorBuffer.1625" = type { %"class.WTF::VectorBufferBase.1626", [8 x i8] }
%"class.WTF::VectorBufferBase.1626" = type { %class.scoped_refptr.1623*, i32, i32 }
%"class.std::__1::unique_ptr.1629" = type { %"class.std::__1::__compressed_pair.1630" }
%"class.std::__1::__compressed_pair.1630" = type { %"struct.std::__1::__compressed_pair_elem.1631" }
%"struct.std::__1::__compressed_pair_elem.1631" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1632", %"class.absl::optional.1637", %"class.absl::optional.1642" }
%"class.absl::optional.1632" = type { %"class.absl::optional_internal::optional_data.1633" }
%"class.absl::optional_internal::optional_data.1633" = type { %"class.absl::optional_internal::optional_data_base.1634" }
%"class.absl::optional_internal::optional_data_base.1634" = type { %"class.absl::optional_internal::optional_data_dtor_base.1635" }
%"class.absl::optional_internal::optional_data_dtor_base.1635" = type { i8, %union.anon.1636 }
%union.anon.1636 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1637" = type { %"class.absl::optional_internal::optional_data.1638" }
%"class.absl::optional_internal::optional_data.1638" = type { %"class.absl::optional_internal::optional_data_base.1639" }
%"class.absl::optional_internal::optional_data_base.1639" = type { %"class.absl::optional_internal::optional_data_dtor_base.1640" }
%"class.absl::optional_internal::optional_data_dtor_base.1640" = type { i8, [3 x i8], %union.anon.1641 }
%union.anon.1641 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1642" = type { %"class.absl::optional_internal::optional_data.1643" }
%"class.absl::optional_internal::optional_data.1643" = type { %"class.absl::optional_internal::optional_data_base.1644" }
%"class.absl::optional_internal::optional_data_base.1644" = type { %"class.absl::optional_internal::optional_data_dtor_base.1645" }
%"class.absl::optional_internal::optional_data_dtor_base.1645" = type { i8, %union.anon.1646 }
%union.anon.1646 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1650 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1603" = type { %"class.std::__1::__compressed_pair.1604" }
%"class.std::__1::__compressed_pair.1604" = type { %"struct.std::__1::__compressed_pair_elem.1605" }
%"struct.std::__1::__compressed_pair_elem.1605" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1606", %"class.absl::optional.1615" }
%"class.absl::optional.1606" = type { %"class.absl::optional_internal::optional_data.1607" }
%"class.absl::optional_internal::optional_data.1607" = type { %"class.absl::optional_internal::optional_data_base.1608" }
%"class.absl::optional_internal::optional_data_base.1608" = type { %"class.absl::optional_internal::optional_data_dtor_base.1609" }
%"class.absl::optional_internal::optional_data_dtor_base.1609" = type { i8, %union.anon.1610 }
%union.anon.1610 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.absl::optional.1615" = type { %"class.absl::optional_internal::optional_data.1616" }
%"class.absl::optional_internal::optional_data.1616" = type { %"class.absl::optional_internal::optional_data_base.1617" }
%"class.absl::optional_internal::optional_data_base.1617" = type { %"class.absl::optional_internal::optional_data_dtor_base.1618" }
%"class.absl::optional_internal::optional_data_dtor_base.1618" = type { i8, %union.anon.1619 }
%union.anon.1619 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.blink::Persistent.1651" = type { %"class.blink::PersistentBase.1652" }
%"class.blink::PersistentBase.1652" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1655", %"struct.blink::PhysicalRect", %"class.blink::Member.1665" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.std::__1::unique_ptr.1655" = type { %"class.std::__1::__compressed_pair.1656" }
%"class.std::__1::__compressed_pair.1656" = type { %"struct.std::__1::__compressed_pair_elem.1657" }
%"struct.std::__1::__compressed_pair_elem.1657" = type { %"class.WTF::HashSet.1658"* }
%"class.WTF::HashSet.1658" = type { %"class.WTF::HashTable.1659" }
%"class.WTF::HashTable.1659" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1665" = type { %"class.blink::MemberBase.1666" }
%"class.blink::MemberBase.1666" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.blink::LayoutNGTableInterface" = type { i32 (...)** }
%"class.WTF::Vector.1667" = type { %"class.WTF::VectorBuffer.1668" }
%"class.WTF::VectorBuffer.1668" = type { %"class.WTF::VectorBufferBase.1669" }
%"class.WTF::VectorBufferBase.1669" = type { %"struct.blink::LayoutTable::ColumnStruct"*, i32, i32 }
%"struct.blink::LayoutTable::ColumnStruct" = type { i32 }
%"class.WTF::Vector.1672" = type { %"class.WTF::VectorBuffer.1673" }
%"class.WTF::VectorBuffer.1673" = type { %"class.WTF::VectorBufferBase.1674" }
%"class.WTF::VectorBufferBase.1674" = type { i32*, i32, i32 }
%"class.WTF::Vector.1677" = type { %"class.WTF::VectorBuffer.1678" }
%"class.WTF::VectorBuffer.1678" = type { %"class.WTF::VectorBufferBase.1679" }
%"class.WTF::VectorBufferBase.1679" = type { %"class.blink::LayoutTableCaption"**, i32, i32 }
%"class.blink::LayoutTableCaption" = type opaque
%"class.WTF::Vector.1682" = type { %"class.WTF::VectorBuffer.1683" }
%"class.WTF::VectorBuffer.1683" = type { %"class.WTF::VectorBufferBase.1684" }
%"class.WTF::VectorBufferBase.1684" = type { %"class.blink::LayoutTableCol"**, i32, i32 }
%"class.blink::LayoutTableCol" = type { %"class.blink::LayoutTableBoxComponent.base", i32 }
%"class.blink::LayoutTableBoxComponent.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i32, %"class.blink::CullRect" }>
%"class.blink::LayoutTableSection" = type <{ %"class.blink::LayoutTableBoxComponent.base", [4 x i8], %"class.blink::LayoutNGTableSectionInterface", %"class.WTF::Vector.1687", %"class.WTF::Vector.1672", %"class.WTF::Vector.1672", i8, [3 x i8], i32, i32, i8, [3 x i8], %"class.WTF::HashSet.1749", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::LayoutNGTableSectionInterface" = type { i32 (...)** }
%"class.WTF::Vector.1687" = type { %"class.WTF::VectorBuffer.1688" }
%"class.WTF::VectorBuffer.1688" = type { %"class.WTF::VectorBufferBase.1689" }
%"class.WTF::VectorBufferBase.1689" = type { %"struct.blink::LayoutTableSection::TableGridRow"*, i32, i32 }
%"struct.blink::LayoutTableSection::TableGridRow" = type <{ %"class.WTF::Vector.1690", %"class.blink::LayoutTableRow"*, %"class.blink::LayoutUnit", %"class.blink::Length", [4 x i8] }>
%"class.WTF::Vector.1690" = type { %"class.WTF::VectorBuffer.1691" }
%"class.WTF::VectorBuffer.1691" = type { %"class.WTF::VectorBufferBase.1692" }
%"class.WTF::VectorBufferBase.1692" = type { %"class.blink::TableGridCell"*, i32, i32 }
%"class.blink::TableGridCell" = type <{ %"class.WTF::Vector.1693", i8, [7 x i8] }>
%"class.WTF::Vector.1693" = type { %"class.WTF::VectorBuffer.1694" }
%"class.WTF::VectorBuffer.1694" = type { %"class.WTF::VectorBufferBase.1695", [8 x i8] }
%"class.WTF::VectorBufferBase.1695" = type { %"class.blink::LayoutTableCell"**, i32, i32 }
%"class.blink::LayoutTableCell" = type { %"class.blink::LayoutBlockFlow", %"class.blink::LayoutNGTableCellInterface", i32, %"class.std::__1::unique_ptr.1737", i32, i32 }
%"class.blink::LayoutBlockFlow" = type { %"class.blink::LayoutBlock.base", %"class.blink::LineBoxList", %"class.blink::Persistent.1696", %"class.std::__1::unique_ptr.1706" }
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"class.blink::Persistent.1696" = type { %"class.blink::PersistentBase.1697" }
%"class.blink::PersistentBase.1697" = type { %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData" = type <{ %"class.blink::LayoutBlockFlow::MarginValues", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutMultiColumnFlowThread"*, %"class.std::__1::unique_ptr.1700", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow::MarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutMultiColumnFlowThread" = type opaque
%"class.std::__1::unique_ptr.1700" = type { %"class.std::__1::__compressed_pair.1701" }
%"class.std::__1::__compressed_pair.1701" = type { %"struct.std::__1::__compressed_pair_elem.1702" }
%"struct.std::__1::__compressed_pair_elem.1702" = type { %"class.blink::NGOffsetMapping"* }
%"class.blink::NGOffsetMapping" = type opaque
%"class.std::__1::unique_ptr.1706" = type { %"class.std::__1::__compressed_pair.1707" }
%"class.std::__1::__compressed_pair.1707" = type { %"struct.std::__1::__compressed_pair_elem.1708" }
%"struct.std::__1::__compressed_pair_elem.1708" = type { %"class.blink::FloatingObjects"* }
%"class.blink::FloatingObjects" = type <{ %"class.WTF::ListHashSet.1709", %"class.WTF::PODIntervalTree", i32, i32, i8, [7 x i8], %"class.blink::LayoutBlockFlow"*, [2 x %"struct.blink::FloatingObjects::FloatBottomCachedValue"], i8, [7 x i8] }>
%"class.WTF::ListHashSet.1709" = type { %"class.WTF::HashTable.1712", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" }
%"class.WTF::HashTable.1712" = type <{ %"class.WTF::MallocedListHashSetNode"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::MallocedListHashSetNode" = type { %"class.std::__1::unique_ptr.1715", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"* }
%"class.std::__1::unique_ptr.1715" = type { %"class.std::__1::__compressed_pair.1716" }
%"class.std::__1::__compressed_pair.1716" = type { %"struct.std::__1::__compressed_pair_elem.1717" }
%"struct.std::__1::__compressed_pair_elem.1717" = type { %"class.blink::FloatingObject"* }
%"class.blink::FloatingObject" = type <{ %"class.blink::LayoutBox"*, %"class.blink::RootInlineBox"*, %"class.blink::LayoutRect", i8, [7 x i8] }>
%"class.blink::RootInlineBox" = type { %"class.blink::InlineFlowBox.base", i32, %"class.blink::LineLayoutItem", %class.scoped_refptr.1718, %"class.std::__1::unique_ptr.1719", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineFlowBox.base" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32 }>
%class.scoped_refptr.1718 = type { %"class.blink::BidiContext"* }
%"class.blink::BidiContext" = type { %"class.WTF::ThreadSafeRefCounted.1759", i16, %class.scoped_refptr.1718 }
%"class.WTF::ThreadSafeRefCounted.1759" = type { %"class.base::RefCountedThreadSafe.1760" }
%"class.base::RefCountedThreadSafe.1760" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1719" = type { %"class.std::__1::__compressed_pair.1720" }
%"class.std::__1::__compressed_pair.1720" = type { %"struct.std::__1::__compressed_pair_elem.1721" }
%"struct.std::__1::__compressed_pair_elem.1721" = type { %"class.WTF::Vector.1722"* }
%"class.WTF::Vector.1722" = type { %"class.WTF::VectorBuffer.1723" }
%"class.WTF::VectorBuffer.1723" = type { %"class.WTF::VectorBufferBase.1724" }
%"class.WTF::VectorBufferBase.1724" = type { %"class.blink::LayoutBox"**, i32, i32 }
%"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" = type { %"struct.WTF::MallocedListHashSetAllocator"* }
%"struct.WTF::MallocedListHashSetAllocator" = type { %"class.WTF::MallocedListHashSetNode"*, i8, [7 x i8], [96 x i8] }
%"class.WTF::PODIntervalTree" = type { %"class.WTF::PODRedBlackTree.base", [7 x i8] }
%"class.WTF::PODRedBlackTree.base" = type <{ i32 (...)**, %class.scoped_refptr.1733, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node"*, i8 }>
%class.scoped_refptr.1733 = type { %"class.WTF::PODFreeListArena"* }
%"class.WTF::PODFreeListArena" = type opaque
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node" = type opaque
%"struct.blink::FloatingObjects::FloatBottomCachedValue" = type <{ %"class.blink::FloatingObject"*, i8, [7 x i8] }>
%"class.blink::LayoutNGTableCellInterface" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1737" = type { %"class.std::__1::__compressed_pair.1738" }
%"class.std::__1::__compressed_pair.1738" = type { %"struct.std::__1::__compressed_pair_elem.1739" }
%"struct.std::__1::__compressed_pair_elem.1739" = type { %"class.blink::CollapsedBorderValues"* }
%"class.blink::CollapsedBorderValues" = type { [4 x %"class.blink::CollapsedBorderValue"], %"class.blink::LayoutRect" }
%"class.blink::CollapsedBorderValue" = type { %"class.blink::Color", i32 }
%"class.blink::LayoutTableRow" = type <{ %"class.blink::LayoutTableBoxComponent.base", [4 x i8], %"class.blink::LayoutNGTableRowInterface", i32, [4 x i8] }>
%"class.blink::LayoutNGTableRowInterface" = type { i32 (...)** }
%"class.WTF::HashSet.1749" = type { %"class.WTF::HashTable.1750" }
%"class.WTF::HashTable.1750" = type <{ %"class.blink::LayoutTableCell"**, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1753" = type { %"class.std::__1::__compressed_pair.1754" }
%"class.std::__1::__compressed_pair.1754" = type { %"struct.std::__1::__compressed_pair_elem.1755" }
%"struct.std::__1::__compressed_pair_elem.1755" = type { %"class.blink::TableLayoutAlgorithm"* }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::CalculationValue" = type <{ %"class.WTF::RefCounted.1761", [4 x i8], %"union.blink::CalculationValue::DataUnion", i8, [7 x i8] }>
%"class.WTF::RefCounted.1761" = type { %"class.base::RefCounted.1762" }
%"class.base::RefCounted.1762" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::CalculationValue::DataUnion" = type { %class.scoped_refptr.1763 }
%class.scoped_refptr.1763 = type { %"class.blink::CalculationExpressionNode"* }
%"class.blink::CalculationExpressionNode" = type opaque
%"struct.blink::PixelsAndPercent" = type { float, float }
%"struct.blink::LayoutTable::ColAndColGroup" = type <{ %"class.blink::LayoutTableCol"*, %"class.blink::LayoutTableCol"*, i8, i8, [6 x i8] }>
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8], [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZNK5blink15LayoutTableCell22StyleOrColLogicalWidthEv = comdat any

$_ZNK5blink11LayoutTable38BordersPaddingAndSpacingInRowDirectionEv = comdat any

$_ZN5blink25TableLayoutAlgorithmFixedD2Ev = comdat any

$_ZN5blink25TableLayoutAlgorithmFixedD0Ev = comdat any

$_ZN5blink20TableLayoutAlgorithm29ScaledWidthFromPercentColumnsEv = comdat any

$_ZN3WTF6VectorIN5blink11LayoutTable12ColumnStructELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink6LengthELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink6LengthEEEmm = comdat any

$_ZN3WTF6VectorIN5blink6LengthELj0ENS_18PartitionAllocatorEE4FillIS3_EENSt3__19enable_ifIXntsrT_19kIsGarbageCollectedEvE4typeERKS2_j = comdat any

$_ZN3WTF6VectorIN5blink6LengthELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6LengthELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm = comdat any

@_ZTVN5blink25TableLayoutAlgorithmFixedE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::TableLayoutAlgorithmFixed"*)* @_ZN5blink25TableLayoutAlgorithmFixedD2Ev to i8*), i8* bitcast (void (%"class.blink::TableLayoutAlgorithmFixed"*)* @_ZN5blink25TableLayoutAlgorithmFixedD0Ev to i8*), i8* bitcast (void (%"class.blink::TableLayoutAlgorithmFixed"*, %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"*)* @_ZN5blink25TableLayoutAlgorithmFixed29ComputeIntrinsicLogicalWidthsERNS_10LayoutUnitES2_ to i8*), i8* bitcast (i32 (%"class.blink::TableLayoutAlgorithm"*)* @_ZN5blink20TableLayoutAlgorithm29ScaledWidthFromPercentColumnsEv to i8*), i8* bitcast (void (%"class.blink::TableLayoutAlgorithmFixed"*, %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"*)* @_ZNK5blink25TableLayoutAlgorithmFixed32ApplyPreferredLogicalWidthQuirksERNS_10LayoutUnitES2_ to i8*), i8* bitcast (void (%"class.blink::TableLayoutAlgorithmFixed"*)* @_ZN5blink25TableLayoutAlgorithmFixed12UpdateLayoutEv to i8*), i8* bitcast (void (%"class.blink::TableLayoutAlgorithmFixed"*)* @_ZN5blink25TableLayoutAlgorithmFixed21WillChangeTableLayoutEv to i8*)] }, align 8
@.str = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.3 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.4 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink6LengthEEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::Length]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv = private unnamed_addr constant [51 x i8] c"const char *WTF::GetStringWithTypeName() [T = int]\00", align 1

@_ZN5blink25TableLayoutAlgorithmFixedC1EPNS_11LayoutTableE = hidden unnamed_addr alias void (%"class.blink::TableLayoutAlgorithmFixed"*, %"class.blink::LayoutTable"*), void (%"class.blink::TableLayoutAlgorithmFixed"*, %"class.blink::LayoutTable"*)* @_ZN5blink25TableLayoutAlgorithmFixedC2EPNS_11LayoutTableE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25TableLayoutAlgorithmFixedC2EPNS_11LayoutTableE(%"class.blink::TableLayoutAlgorithmFixed"* nocapture, %"class.blink::LayoutTable"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::TableLayoutAlgorithmFixed", %"class.blink::TableLayoutAlgorithmFixed"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::TableLayoutAlgorithmFixed", %"class.blink::TableLayoutAlgorithmFixed"* %0, i64 0, i32 0, i32 1
  store %"class.blink::LayoutTable"* %1, %"class.blink::LayoutTable"** %4, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink25TableLayoutAlgorithmFixedE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::TableLayoutAlgorithmFixed", %"class.blink::TableLayoutAlgorithmFixed"* %0, i64 0, i32 1
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %"class.blink::TableLayoutAlgorithmFixed", %"class.blink::TableLayoutAlgorithmFixed"* %0, i64 0, i32 2
  %7 = bitcast %"class.WTF::Vector.701"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink25TableLayoutAlgorithmFixed14CalcWidthArrayEv(%"class.blink::TableLayoutAlgorithmFixed"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::Length", align 4
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %"class.blink::Length"*
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"class.blink::Length"*
  %7 = alloca i64, align 8
  %8 = bitcast i64* %7 to %"class.blink::Length"*
  %9 = alloca i64, align 8
  %10 = bitcast i64* %9 to %"class.blink::Length"*
  %11 = alloca i64, align 8
  %12 = bitcast i64* %11 to %"class.blink::Length"*
  %13 = alloca i64, align 8
  %14 = bitcast i64* %13 to %"class.blink::Length"*
  %15 = getelementptr inbounds %"class.blink::TableLayoutAlgorithmFixed", %"class.blink::TableLayoutAlgorithmFixed"* %0, i64 0, i32 0, i32 1
  %16 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %16, i64 0, i32 2, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.blink::TableLayoutAlgorithmFixed", %"class.blink::TableLayoutAlgorithmFixed"* %0, i64 0, i32 2
  %20 = getelementptr inbounds %"class.blink::TableLayoutAlgorithmFixed", %"class.blink::TableLayoutAlgorithmFixed"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = icmp ult i32 %21, %18
  br i1 %22, label %41, label %23

23:                                               ; preds = %1
  %24 = getelementptr inbounds %"class.WTF::Vector.701", %"class.WTF::Vector.701"* %19, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.blink::Length"*, %"class.blink::Length"** %24, align 8
  %26 = zext i32 %21 to i64
  %27 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %25, i64 %26
  %28 = icmp eq i32 %21, %18
  br i1 %28, label %114, label %29

29:                                               ; preds = %23
  %30 = zext i32 %18 to i64
  %31 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %25, i64 %30
  br label %32

32:                                               ; preds = %38, %29
  %33 = phi %"class.blink::Length"* [ %39, %38 ], [ %31, %29 ]
  %34 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %33, i64 0, i32 2
  %35 = load i8, i8* %34, align 1
  %36 = icmp eq i8 %35, 8
  br i1 %36, label %37, label %38

37:                                               ; preds = %32
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %33) #7
  br label %38

38:                                               ; preds = %37, %32
  %39 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %33, i64 1
  %40 = icmp eq %"class.blink::Length"* %39, %27
  br i1 %40, label %114, label %32

41:                                               ; preds = %1
  %42 = getelementptr inbounds %"class.blink::TableLayoutAlgorithmFixed", %"class.blink::TableLayoutAlgorithmFixed"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = icmp ult i32 %43, %18
  br i1 %44, label %45, label %67

45:                                               ; preds = %41
  %46 = lshr i32 %43, 2
  %47 = add nuw i32 %43, 1
  %48 = add i32 %47, %46
  %49 = icmp ugt i32 %48, 4
  %50 = select i1 %49, i32 %48, i32 4
  %51 = icmp ugt i32 %50, %18
  %52 = select i1 %51, i32 %50, i32 %18
  %53 = icmp ult i32 %43, %52
  br i1 %53, label %54, label %67, !prof !2

54:                                               ; preds = %45
  %55 = getelementptr inbounds %"class.WTF::Vector.701", %"class.WTF::Vector.701"* %19, i64 0, i32 0, i32 0, i32 0
  %56 = load %"class.blink::Length"*, %"class.blink::Length"** %55, align 8
  %57 = icmp eq %"class.blink::Length"* %56, null
  br i1 %57, label %58, label %66

58:                                               ; preds = %54
  %59 = zext i32 %52 to i64
  %60 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink6LengthEEEmm(i64 %59) #7
  %61 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %60, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink6LengthEEEPKcv, i64 0, i64 0)) #7
  %62 = ptrtoint i8* %61 to i64
  %63 = bitcast %"class.WTF::Vector.701"* %19 to i64*
  store atomic i64 %62, i64* %63 monotonic, align 8
  %64 = lshr i64 %60, 3
  %65 = trunc i64 %64 to i32
  store i32 %65, i32* %42, align 8
  br label %67

66:                                               ; preds = %54
  tail call void @_ZN3WTF6VectorIN5blink6LengthELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.701"* %19, i32 %52) #7
  br label %67

67:                                               ; preds = %66, %58, %45, %41
  %68 = getelementptr inbounds %"class.WTF::Vector.701", %"class.WTF::Vector.701"* %19, i64 0, i32 0, i32 0, i32 0
  %69 = load %"class.blink::Length"*, %"class.blink::Length"** %68, align 8
  %70 = load i32, i32* %20, align 4
  %71 = zext i32 %18 to i64
  %72 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %69, i64 %71
  %73 = icmp eq i32 %70, %18
  br i1 %73, label %114, label %74

74:                                               ; preds = %67
  %75 = zext i32 %70 to i64
  %76 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %69, i64 %75
  %77 = shl nuw nsw i64 %71, 3
  %78 = add nsw i64 %77, -8
  %79 = shl nuw nsw i64 %75, 3
  %80 = sub nsw i64 %78, %79
  %81 = lshr exact i64 %80, 3
  %82 = add nuw nsw i64 %81, 1
  %83 = and i64 %82, 7
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %92, label %85

85:                                               ; preds = %74, %85
  %86 = phi %"class.blink::Length"* [ %89, %85 ], [ %76, %74 ]
  %87 = phi i64 [ %90, %85 ], [ %83, %74 ]
  %88 = bitcast %"class.blink::Length"* %86 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %88, i8 0, i64 7, i1 false) #7
  %89 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %86, i64 1
  %90 = add i64 %87, -1
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %92, label %85, !llvm.loop !3

92:                                               ; preds = %85, %74
  %93 = phi %"class.blink::Length"* [ %76, %74 ], [ %89, %85 ]
  %94 = icmp ult i64 %80, 56
  br i1 %94, label %114, label %95

95:                                               ; preds = %92, %95
  %96 = phi %"class.blink::Length"* [ %112, %95 ], [ %93, %92 ]
  %97 = bitcast %"class.blink::Length"* %96 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %97, i8 0, i64 7, i1 false) #7
  %98 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %96, i64 1
  %99 = bitcast %"class.blink::Length"* %98 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %99, i8 0, i64 7, i1 false) #7
  %100 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %96, i64 2
  %101 = bitcast %"class.blink::Length"* %100 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %101, i8 0, i64 7, i1 false) #7
  %102 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %96, i64 3
  %103 = bitcast %"class.blink::Length"* %102 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %103, i8 0, i64 7, i1 false) #7
  %104 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %96, i64 4
  %105 = bitcast %"class.blink::Length"* %104 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %105, i8 0, i64 7, i1 false) #7
  %106 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %96, i64 5
  %107 = bitcast %"class.blink::Length"* %106 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %107, i8 0, i64 7, i1 false) #7
  %108 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %96, i64 6
  %109 = bitcast %"class.blink::Length"* %108 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %109, i8 0, i64 7, i1 false) #7
  %110 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %96, i64 7
  %111 = bitcast %"class.blink::Length"* %110 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %111, i8 0, i64 7, i1 false) #7
  %112 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %96, i64 8
  %113 = icmp eq %"class.blink::Length"* %112, %72
  br i1 %113, label %114, label %95

114:                                              ; preds = %38, %92, %95, %23, %67
  store i32 %18, i32* %20, align 4
  %115 = bitcast %"class.blink::Length"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %115) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %115, i8 0, i64 7, i1 false) #7, !alias.scope !5
  call void @_ZN3WTF6VectorIN5blink6LengthELj0ENS_18PartitionAllocatorEE4FillIS3_EENSt3__19enable_ifIXntsrT_19kIsGarbageCollectedEvE4typeERKS2_j(%"class.WTF::Vector.701"* %19, %"class.blink::Length"* nonnull dereferenceable(8) %2, i32 %18) #7
  %116 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %2, i64 0, i32 2
  %117 = load i8, i8* %116, align 1
  %118 = icmp eq i8 %117, 8
  br i1 %118, label %119, label %120

119:                                              ; preds = %114
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %2) #7
  br label %120

120:                                              ; preds = %114, %119
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %115) #7
  %121 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %15, align 8
  %122 = call %"class.blink::LayoutTableCol"* @_ZNK5blink11LayoutTable11FirstColumnEv(%"class.blink::LayoutTable"* %121) #7
  %123 = icmp eq %"class.blink::LayoutTableCol"* %122, null
  br i1 %123, label %131, label %124

124:                                              ; preds = %120
  %125 = bitcast i64* %3 to i8*
  %126 = getelementptr inbounds %"class.blink::TableLayoutAlgorithmFixed", %"class.blink::TableLayoutAlgorithmFixed"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %127 = getelementptr inbounds %"class.WTF::Vector.701", %"class.WTF::Vector.701"* %19, i64 0, i32 0, i32 0, i32 0
  %128 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %4, i64 0, i32 2
  %129 = bitcast i64* %5 to i8*
  %130 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %6, i64 0, i32 2
  br label %137

131:                                              ; preds = %317, %120
  %132 = phi i32 [ 0, %120 ], [ %318, %317 ]
  %133 = phi i32 [ %18, %120 ], [ %319, %317 ]
  %134 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %15, align 8
  %135 = call %"class.blink::LayoutTableSection"* @_ZNK5blink11LayoutTable18TopNonEmptySectionEv(%"class.blink::LayoutTable"* %134) #7
  %136 = icmp eq %"class.blink::LayoutTableSection"* %135, null
  br i1 %136, label %515, label %323

137:                                              ; preds = %124, %317
  %138 = phi %"class.blink::LayoutTableCol"* [ %122, %124 ], [ %321, %317 ]
  %139 = phi i32 [ 0, %124 ], [ %320, %317 ]
  %140 = phi i32 [ %18, %124 ], [ %319, %317 ]
  %141 = phi i32 [ 0, %124 ], [ %318, %317 ]
  call void @_ZN5blink14LayoutTableCol36ClearIntrinsicLogicalWidthsDirtyBitsEv(%"class.blink::LayoutTableCol"* nonnull %138) #7
  %142 = getelementptr inbounds %"class.blink::LayoutTableCol", %"class.blink::LayoutTableCol"* %138, i64 0, i32 0, i32 1, i32 0
  %143 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %142, align 8
  %144 = icmp eq %"class.blink::LayoutObject"* %143, null
  br i1 %144, label %145, label %317

145:                                              ; preds = %137
  %146 = getelementptr inbounds %"class.blink::LayoutTableCol", %"class.blink::LayoutTableCol"* %138, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %147 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %146, align 8
  %148 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %147, i64 0, i32 0, i32 9
  %149 = bitcast [20 x i8]* %148 to i160*
  %150 = load i160, i160* %149, align 8
  %151 = and i160 %150, 15211807202738752817960438464512
  %152 = icmp eq i160 %151, 0
  %153 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %147, i64 0, i32 0, i32 5, i32 0, i32 0
  %154 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %153, align 8
  %155 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %154, i64 0, i32 8
  %156 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %154, i64 0, i32 3
  %157 = select i1 %152, %"class.blink::Length"* %155, %"class.blink::Length"* %156
  %158 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %157, i64 0, i32 2
  %159 = load i8, i8* %158, align 1
  %160 = icmp eq i8 %159, 2
  br i1 %160, label %161, label %183

161:                                              ; preds = %145
  %162 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %157, i64 0, i32 3
  %163 = load i8, i8* %162, align 2, !range !8
  %164 = icmp eq i8 %163, 0
  br i1 %164, label %169, label %165

165:                                              ; preds = %161
  %166 = bitcast %"class.blink::Length"* %157 to float*
  %167 = load float, float* %166, align 4
  %168 = bitcast float %167 to i32
  br label %174

169:                                              ; preds = %161
  %170 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %157, i64 0, i32 0, i32 0
  %171 = load i32, i32* %170, align 4
  %172 = sitofp i32 %171 to float
  %173 = bitcast i32 %171 to float
  br label %174

174:                                              ; preds = %165, %169
  %175 = phi i32 [ %168, %165 ], [ %171, %169 ]
  %176 = phi float [ %167, %165 ], [ %173, %169 ]
  %177 = phi float [ %167, %165 ], [ %172, %169 ]
  %178 = fcmp ogt float %177, 0.000000e+00
  br i1 %178, label %179, label %183

179:                                              ; preds = %174
  %180 = sitofp i32 %175 to float
  %181 = select i1 %164, float %180, float %176
  %182 = fptosi float %181 to i32
  br label %183

183:                                              ; preds = %179, %174, %145
  %184 = phi i32 [ %182, %179 ], [ 0, %174 ], [ 0, %145 ]
  %185 = getelementptr inbounds %"class.blink::LayoutTableCol", %"class.blink::LayoutTableCol"* %138, i64 0, i32 1
  %186 = load i32, i32* %185, align 4
  %187 = icmp eq i32 %186, 0
  br i1 %187, label %317, label %188

188:                                              ; preds = %183
  %189 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %157, i64 0, i32 3
  %190 = bitcast %"class.blink::Length"* %157 to float*
  %191 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %157, i64 0, i32 0, i32 0
  %192 = bitcast %"class.blink::Length"* %157 to i64*
  br label %193

193:                                              ; preds = %188, %312
  %194 = phi i32 [ %186, %188 ], [ %314, %312 ]
  %195 = phi i32 [ %139, %188 ], [ %315, %312 ]
  %196 = phi i32 [ %140, %188 ], [ %261, %312 ]
  %197 = phi i32 [ %141, %188 ], [ %313, %312 ]
  %198 = icmp ult i32 %195, %196
  %199 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %15, align 8
  br i1 %198, label %223, label %200

200:                                              ; preds = %193
  call void @_ZN5blink11LayoutTable21AppendEffectiveColumnEj(%"class.blink::LayoutTable"* %199, i32 %194) #7
  %201 = add i32 %196, 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %125) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %125, i8 0, i64 7, i1 false) #7
  %202 = load i32, i32* %20, align 4
  %203 = load i32, i32* %126, align 8
  %204 = icmp eq i32 %202, %203
  br i1 %204, label %217, label %205, !prof !9

205:                                              ; preds = %200
  %206 = load %"class.blink::Length"*, %"class.blink::Length"** %127, align 8
  %207 = zext i32 %202 to i64
  %208 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %206, i64 %207
  %209 = bitcast %"class.blink::Length"* %208 to i64*
  %210 = load i64, i64* %3, align 8
  store i64 %210, i64* %209, align 4
  %211 = and i64 %210, 280375465082880
  %212 = icmp eq i64 %211, 8796093022208
  br i1 %212, label %213, label %214

213:                                              ; preds = %205
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %208) #7
  br label %214

214:                                              ; preds = %213, %205
  %215 = load i32, i32* %20, align 4
  %216 = add i32 %215, 1
  store i32 %216, i32* %20, align 4
  br label %218

217:                                              ; preds = %200
  call void @_ZN3WTF6VectorIN5blink6LengthELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.701"* %19, %"class.blink::Length"* nonnull dereferenceable(8) %4) #7
  br label %218

218:                                              ; preds = %214, %217
  %219 = load i8, i8* %128, align 1
  %220 = icmp eq i8 %219, 8
  br i1 %220, label %221, label %222

221:                                              ; preds = %218
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %4) #7
  br label %222

222:                                              ; preds = %218, %221
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %125) #7
  br label %260

223:                                              ; preds = %193
  %224 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %199, i64 0, i32 2
  %225 = call dereferenceable(4) %"struct.blink::LayoutTable::ColumnStruct"* @_ZN3WTF6VectorIN5blink11LayoutTable12ColumnStructELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1667"* %224, i32 %195) #7
  %226 = getelementptr inbounds %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %225, i64 0, i32 0
  %227 = load i32, i32* %226, align 4
  %228 = icmp ult i32 %194, %227
  br i1 %228, label %229, label %253

229:                                              ; preds = %223
  %230 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %15, align 8
  call void @_ZN5blink11LayoutTable20SplitEffectiveColumnEjj(%"class.blink::LayoutTable"* %230, i32 %195, i32 %194) #7
  %231 = add i32 %196, 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %129) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %129, i8 0, i64 7, i1 false) #7
  %232 = load i32, i32* %20, align 4
  %233 = load i32, i32* %126, align 8
  %234 = icmp eq i32 %232, %233
  br i1 %234, label %247, label %235, !prof !9

235:                                              ; preds = %229
  %236 = load %"class.blink::Length"*, %"class.blink::Length"** %127, align 8
  %237 = zext i32 %232 to i64
  %238 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %236, i64 %237
  %239 = bitcast %"class.blink::Length"* %238 to i64*
  %240 = load i64, i64* %5, align 8
  store i64 %240, i64* %239, align 4
  %241 = and i64 %240, 280375465082880
  %242 = icmp eq i64 %241, 8796093022208
  br i1 %242, label %243, label %244

243:                                              ; preds = %235
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %238) #7
  br label %244

244:                                              ; preds = %243, %235
  %245 = load i32, i32* %20, align 4
  %246 = add i32 %245, 1
  store i32 %246, i32* %20, align 4
  br label %248

247:                                              ; preds = %229
  call void @_ZN3WTF6VectorIN5blink6LengthELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.701"* %19, %"class.blink::Length"* nonnull dereferenceable(8) %6) #7
  br label %248

248:                                              ; preds = %244, %247
  %249 = load i8, i8* %130, align 1
  %250 = icmp eq i8 %249, 8
  br i1 %250, label %251, label %252

251:                                              ; preds = %248
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %6) #7
  br label %252

252:                                              ; preds = %248, %251
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %129) #7
  br label %253

253:                                              ; preds = %252, %223
  %254 = phi i32 [ %231, %252 ], [ %196, %223 ]
  %255 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %15, align 8
  %256 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %255, i64 0, i32 2
  %257 = call dereferenceable(4) %"struct.blink::LayoutTable::ColumnStruct"* @_ZN3WTF6VectorIN5blink11LayoutTable12ColumnStructELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1667"* %256, i32 %195) #7
  %258 = getelementptr inbounds %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %257, i64 0, i32 0
  %259 = load i32, i32* %258, align 4
  br label %260

260:                                              ; preds = %253, %222
  %261 = phi i32 [ %201, %222 ], [ %254, %253 ]
  %262 = phi i32 [ %194, %222 ], [ %259, %253 ]
  %263 = load i8, i8* %158, align 1
  %264 = add i8 %263, -1
  %265 = icmp ult i8 %264, 2
  br i1 %265, label %266, label %312

266:                                              ; preds = %260
  %267 = load i8, i8* %189, align 2, !range !8
  %268 = icmp eq i8 %267, 0
  br i1 %268, label %271, label %269

269:                                              ; preds = %266
  %270 = load float, float* %190, align 4
  br label %274

271:                                              ; preds = %266
  %272 = load i32, i32* %191, align 4
  %273 = sitofp i32 %272 to float
  br label %274

274:                                              ; preds = %269, %271
  %275 = phi float [ %270, %269 ], [ %273, %271 ]
  %276 = fcmp ogt float %275, 0.000000e+00
  br i1 %276, label %277, label %312

277:                                              ; preds = %274
  %278 = call dereferenceable(8) %"class.blink::Length"* @_ZN3WTF6VectorIN5blink6LengthELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.701"* %19, i32 %195) #7
  %279 = load i8, i8* %158, align 1
  %280 = icmp eq i8 %279, 8
  br i1 %280, label %281, label %282

281:                                              ; preds = %277
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %157) #7
  br label %282

282:                                              ; preds = %281, %277
  %283 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %278, i64 0, i32 2
  %284 = load i8, i8* %283, align 1
  %285 = icmp eq i8 %284, 8
  br i1 %285, label %286, label %287

286:                                              ; preds = %282
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %278) #7
  br label %287

287:                                              ; preds = %282, %286
  %288 = bitcast %"class.blink::Length"* %278 to i64*
  %289 = load i64, i64* %192, align 4
  store i64 %289, i64* %288, align 4
  %290 = uitofp i32 %262 to float
  %291 = call dereferenceable(8) %"class.blink::Length"* @_ZN3WTF6VectorIN5blink6LengthELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.701"* %19, i32 %195) #7
  %292 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %291, i64 0, i32 2
  %293 = load i8, i8* %292, align 1
  %294 = icmp eq i8 %293, 8
  br i1 %294, label %309, label %295

295:                                              ; preds = %287
  %296 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %291, i64 0, i32 3
  %297 = load i8, i8* %296, align 2, !range !8
  %298 = icmp eq i8 %297, 0
  br i1 %298, label %303, label %299

299:                                              ; preds = %295
  %300 = bitcast %"class.blink::Length"* %291 to float*
  %301 = load float, float* %300, align 4
  %302 = fmul float %301, %290
  store float %302, float* %300, align 4
  br label %309

303:                                              ; preds = %295
  %304 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %291, i64 0, i32 0, i32 0
  %305 = load i32, i32* %304, align 4
  %306 = sitofp i32 %305 to float
  %307 = fmul float %290, %306
  %308 = fptosi float %307 to i32
  store i32 %308, i32* %304, align 4
  br label %309

309:                                              ; preds = %287, %299, %303
  %310 = mul i32 %262, %184
  %311 = add i32 %310, %197
  br label %312

312:                                              ; preds = %260, %309, %274
  %313 = phi i32 [ %311, %309 ], [ %197, %274 ], [ %197, %260 ]
  %314 = sub i32 %194, %262
  %315 = add i32 %195, 1
  %316 = icmp eq i32 %314, 0
  br i1 %316, label %317, label %193

317:                                              ; preds = %312, %183, %137
  %318 = phi i32 [ %141, %137 ], [ %141, %183 ], [ %313, %312 ]
  %319 = phi i32 [ %140, %137 ], [ %140, %183 ], [ %261, %312 ]
  %320 = phi i32 [ %139, %137 ], [ %139, %183 ], [ %315, %312 ]
  %321 = call %"class.blink::LayoutTableCol"* @_ZNK5blink14LayoutTableCol10NextColumnEv(%"class.blink::LayoutTableCol"* nonnull %138) #7
  %322 = icmp eq %"class.blink::LayoutTableCol"* %321, null
  br i1 %322, label %131, label %137

323:                                              ; preds = %131
  %324 = getelementptr inbounds %"class.blink::LayoutTableSection", %"class.blink::LayoutTableSection"* %135, i64 0, i32 0, i32 1, i32 0
  %325 = bitcast %"class.blink::LayoutObject"** %324 to %"class.blink::LayoutTableRow"**
  %326 = load %"class.blink::LayoutTableRow"*, %"class.blink::LayoutTableRow"** %325, align 8
  %327 = getelementptr inbounds %"class.blink::LayoutTableRow", %"class.blink::LayoutTableRow"* %326, i64 0, i32 0, i32 1, i32 0
  %328 = bitcast %"class.blink::LayoutObject"** %327 to %"class.blink::LayoutTableCell"**
  %329 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %328, align 8
  %330 = icmp eq %"class.blink::LayoutTableCell"* %329, null
  br i1 %330, label %515, label %331

331:                                              ; preds = %323
  %332 = bitcast i64* %7 to i8*
  %333 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %8, i64 0, i32 2
  %334 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %8, i64 0, i32 3
  %335 = bitcast i64* %11 to i8*
  %336 = bitcast i64* %11 to i32*
  %337 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %12, i64 0, i32 1
  %338 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %12, i64 0, i32 2
  %339 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %12, i64 0, i32 3
  %340 = bitcast i64* %9 to i8*
  %341 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %10, i64 0, i32 2
  %342 = bitcast i64* %7 to float*
  %343 = bitcast i64* %13 to i8*
  %344 = bitcast i64* %13 to i32*
  %345 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %14, i64 0, i32 1
  %346 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %14, i64 0, i32 2
  %347 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %14, i64 0, i32 3
  br label %348

348:                                              ; preds = %331, %510
  %349 = phi %"class.blink::LayoutTableCell"* [ %329, %331 ], [ %513, %510 ]
  %350 = phi i32 [ 0, %331 ], [ %498, %510 ]
  %351 = phi i32 [ %132, %331 ], [ %497, %510 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %332) #7
  store i64 -6148914691236517206, i64* %7, align 8
  call void @_ZNK5blink15LayoutTableCell22StyleOrColLogicalWidthEv(%"class.blink::Length"* nonnull sret %8, %"class.blink::LayoutTableCell"* nonnull %349)
  %352 = load i8, i8* %333, align 1
  %353 = icmp eq i8 %352, 8
  br i1 %353, label %354, label %391

354:                                              ; preds = %348
  %355 = call dereferenceable(24) %"class.blink::CalculationValue"* @_ZNK5blink6Length19GetCalculationValueEv(%"class.blink::Length"* nonnull %8) #7
  %356 = getelementptr inbounds %"class.blink::CalculationValue", %"class.blink::CalculationValue"* %355, i64 0, i32 3
  %357 = load i8, i8* %356, align 8
  %358 = and i8 %357, 1
  %359 = icmp eq i8 %358, 0
  br i1 %359, label %360, label %365

360:                                              ; preds = %354
  %361 = getelementptr inbounds %"class.blink::CalculationValue", %"class.blink::CalculationValue"* %355, i64 0, i32 2
  %362 = bitcast %"union.blink::CalculationValue::DataUnion"* %361 to float*
  %363 = load float, float* %362, align 8
  %364 = fcmp une float %363, 0.000000e+00
  br i1 %364, label %365, label %375

365:                                              ; preds = %354, %360
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %340) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %340, i8 0, i64 7, i1 false) #7
  %366 = load i8, i8* %333, align 1
  %367 = icmp eq i8 %366, 8
  br i1 %367, label %370, label %368

368:                                              ; preds = %365
  %369 = load i64, i64* %9, align 8
  store i64 %369, i64* %7, align 8
  br label %389

370:                                              ; preds = %365
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %8) #7
  %371 = load i8, i8* %341, align 1
  %372 = load i64, i64* %9, align 8
  store i64 %372, i64* %7, align 8
  %373 = icmp eq i8 %371, 8
  br i1 %373, label %374, label %389

374:                                              ; preds = %370
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %10) #7
  br label %389

375:                                              ; preds = %360
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %335) #7
  %376 = bitcast %"union.blink::CalculationValue::DataUnion"* %361 to %"struct.blink::PixelsAndPercent"*
  %377 = getelementptr inbounds %"struct.blink::PixelsAndPercent", %"struct.blink::PixelsAndPercent"* %376, i64 0, i32 1
  %378 = bitcast float* %377 to i32*
  %379 = load i32, i32* %378, align 4
  store i32 %379, i32* %336, align 8, !alias.scope !10
  store i8 0, i8* %337, align 4, !alias.scope !10
  store i8 1, i8* %338, align 1, !alias.scope !10
  store i8 1, i8* %339, align 2, !alias.scope !10
  %380 = load i8, i8* %333, align 1
  %381 = icmp eq i8 %380, 8
  br i1 %381, label %384, label %382

382:                                              ; preds = %375
  %383 = load i64, i64* %11, align 8
  store i64 %383, i64* %7, align 8
  br label %389

384:                                              ; preds = %375
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %8) #7
  %385 = load i8, i8* %338, align 1
  %386 = load i64, i64* %11, align 8
  store i64 %386, i64* %7, align 8
  %387 = icmp eq i8 %385, 8
  br i1 %387, label %388, label %389

388:                                              ; preds = %384
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %12) #7
  br label %389

389:                                              ; preds = %388, %384, %382, %374, %370, %368
  %390 = phi i8* [ %340, %368 ], [ %340, %370 ], [ %340, %374 ], [ %335, %382 ], [ %335, %384 ], [ %335, %388 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %390) #7
  br label %391

391:                                              ; preds = %389, %348
  %392 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %349, i64 0, i32 2
  %393 = load i32, i32* %392, align 8
  %394 = and i32 %393, 67108864
  %395 = icmp eq i32 %394, 0
  br i1 %395, label %398, label %396

396:                                              ; preds = %391
  %397 = call i32 @_ZNK5blink15LayoutTableCell19ParseColSpanFromDOMEv(%"class.blink::LayoutTableCell"* nonnull %349) #7
  br label %398

398:                                              ; preds = %391, %396
  %399 = phi i32 [ %397, %396 ], [ 1, %391 ]
  %400 = load i8, i8* %333, align 1
  %401 = icmp eq i8 %400, 2
  br i1 %401, label %402, label %424

402:                                              ; preds = %398
  %403 = load i8, i8* %334, align 2, !range !8
  %404 = icmp eq i8 %403, 0
  %405 = load float, float* %342, align 8
  %406 = bitcast float %405 to i32
  %407 = sitofp i32 %406 to float
  %408 = select i1 %404, float %407, float %405
  %409 = fcmp ogt float %408, 0.000000e+00
  br i1 %409, label %410, label %424

410:                                              ; preds = %402
  %411 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %349, i64 0, i32 0, i32 0, i32 0
  %412 = call i32 @_ZNK5blink9LayoutBox39AdjustBorderBoxLogicalWidthForBoxSizingEf(%"class.blink::LayoutBox"* %411, float %408) #7
  %413 = sdiv i32 %412, 64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %343) #7
  store i32 %413, i32* %344, align 8, !alias.scope !13
  store i8 0, i8* %345, align 4, !alias.scope !13
  store i8 2, i8* %346, align 1, !alias.scope !13
  store i8 0, i8* %347, align 2, !alias.scope !13
  %414 = load i8, i8* %333, align 1
  %415 = icmp eq i8 %414, 8
  br i1 %415, label %418, label %416

416:                                              ; preds = %410
  %417 = load i64, i64* %13, align 8
  store i64 %417, i64* %7, align 8
  br label %423

418:                                              ; preds = %410
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %8) #7
  %419 = load i8, i8* %346, align 1
  %420 = load i64, i64* %13, align 8
  store i64 %420, i64* %7, align 8
  %421 = icmp eq i8 %419, 8
  br i1 %421, label %422, label %423

422:                                              ; preds = %418
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %14) #7
  br label %423

423:                                              ; preds = %416, %418, %422
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %343) #7
  br label %424

424:                                              ; preds = %423, %402, %398
  %425 = phi i32 [ %413, %423 ], [ 0, %402 ], [ 0, %398 ]
  %426 = icmp ne i32 %399, 0
  %427 = icmp ult i32 %350, %133
  %428 = and i1 %427, %426
  br i1 %428, label %429, label %496

429:                                              ; preds = %424
  %430 = uitofp i32 %399 to float
  %431 = sitofp i32 %425 to float
  br label %432

432:                                              ; preds = %429, %487
  %433 = phi i32 [ 0, %429 ], [ %491, %487 ]
  %434 = phi i32 [ %350, %429 ], [ %492, %487 ]
  %435 = phi i32 [ %351, %429 ], [ %488, %487 ]
  %436 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %15, align 8
  %437 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %436, i64 0, i32 2
  %438 = call dereferenceable(4) %"struct.blink::LayoutTable::ColumnStruct"* @_ZN3WTF6VectorIN5blink11LayoutTable12ColumnStructELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1667"* %437, i32 %434) #7
  %439 = getelementptr inbounds %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %438, i64 0, i32 0
  %440 = load i32, i32* %439, align 4
  %441 = uitofp i32 %440 to float
  %442 = call dereferenceable(8) %"class.blink::Length"* @_ZN3WTF6VectorIN5blink6LengthELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.701"* %19, i32 %434) #7
  %443 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %442, i64 0, i32 2
  %444 = load i8, i8* %443, align 1
  %445 = icmp ne i8 %444, 0
  %446 = load i8, i8* %333, align 1
  %447 = icmp eq i8 %446, 0
  %448 = or i1 %445, %447
  br i1 %448, label %487, label %449

449:                                              ; preds = %432
  %450 = call dereferenceable(8) %"class.blink::Length"* @_ZN3WTF6VectorIN5blink6LengthELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.701"* %19, i32 %434) #7
  %451 = load i8, i8* %333, align 1
  %452 = icmp eq i8 %451, 8
  br i1 %452, label %453, label %454

453:                                              ; preds = %449
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %8) #7
  br label %454

454:                                              ; preds = %453, %449
  %455 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %450, i64 0, i32 2
  %456 = load i8, i8* %455, align 1
  %457 = icmp eq i8 %456, 8
  br i1 %457, label %458, label %459

458:                                              ; preds = %454
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %450) #7
  br label %459

459:                                              ; preds = %454, %458
  %460 = bitcast %"class.blink::Length"* %450 to i64*
  %461 = load i64, i64* %7, align 8
  store i64 %461, i64* %460, align 4
  %462 = fdiv float %441, %430
  %463 = call dereferenceable(8) %"class.blink::Length"* @_ZN3WTF6VectorIN5blink6LengthELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.701"* %19, i32 %434) #7
  %464 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %463, i64 0, i32 2
  %465 = load i8, i8* %464, align 1
  %466 = icmp eq i8 %465, 8
  br i1 %466, label %481, label %467

467:                                              ; preds = %459
  %468 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %463, i64 0, i32 3
  %469 = load i8, i8* %468, align 2, !range !8
  %470 = icmp eq i8 %469, 0
  br i1 %470, label %475, label %471

471:                                              ; preds = %467
  %472 = bitcast %"class.blink::Length"* %463 to float*
  %473 = load float, float* %472, align 4
  %474 = fmul float %462, %473
  store float %474, float* %472, align 4
  br label %481

475:                                              ; preds = %467
  %476 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %463, i64 0, i32 0, i32 0
  %477 = load i32, i32* %476, align 4
  %478 = sitofp i32 %477 to float
  %479 = fmul float %462, %478
  %480 = fptosi float %479 to i32
  store i32 %480, i32* %476, align 4
  br label %481

481:                                              ; preds = %459, %471, %475
  %482 = fmul float %431, %441
  %483 = fdiv float %482, %430
  %484 = sitofp i32 %435 to float
  %485 = fadd float %483, %484
  %486 = fptosi float %485 to i32
  br label %487

487:                                              ; preds = %432, %481
  %488 = phi i32 [ %486, %481 ], [ %435, %432 ]
  %489 = uitofp i32 %433 to float
  %490 = fadd float %489, %441
  %491 = fptoui float %490 to i32
  %492 = add nuw i32 %434, 1
  %493 = icmp ugt i32 %399, %491
  %494 = icmp ult i32 %492, %133
  %495 = and i1 %494, %493
  br i1 %495, label %432, label %496

496:                                              ; preds = %487, %424
  %497 = phi i32 [ %351, %424 ], [ %488, %487 ]
  %498 = phi i32 [ %350, %424 ], [ %492, %487 ]
  %499 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %349, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %500 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %499 to i96*
  %501 = load i96, i96* %500, align 4
  %502 = and i96 %501, 256
  %503 = icmp eq i96 %502, 0
  br i1 %503, label %506, label %504

504:                                              ; preds = %496
  %505 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %349, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN5blink12LayoutObject32ClearIntrinsicLogicalWidthsDirtyEv(%"class.blink::LayoutObject"* %505) #7
  br label %506

506:                                              ; preds = %496, %504
  %507 = load i8, i8* %333, align 1
  %508 = icmp eq i8 %507, 8
  br i1 %508, label %509, label %510

509:                                              ; preds = %506
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %8) #7
  br label %510

510:                                              ; preds = %506, %509
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %332) #7
  %511 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %349, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %512 = bitcast %"class.blink::LayoutObject"** %511 to %"class.blink::LayoutTableCell"**
  %513 = load %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCell"** %512, align 8
  %514 = icmp eq %"class.blink::LayoutTableCell"* %513, null
  br i1 %514, label %515, label %348

515:                                              ; preds = %510, %323, %131
  %516 = phi i32 [ %132, %131 ], [ %132, %323 ], [ %497, %510 ]
  ret i32 %516
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.blink::LayoutTableCol"* @_ZNK5blink11LayoutTable11FirstColumnEv(%"class.blink::LayoutTable"*) local_unnamed_addr #2

declare void @_ZN5blink14LayoutTableCol36ClearIntrinsicLogicalWidthsDirtyBitsEv(%"class.blink::LayoutTableCol"*) local_unnamed_addr #2

declare void @_ZN5blink11LayoutTable21AppendEffectiveColumnEj(%"class.blink::LayoutTable"*, i32) local_unnamed_addr #2

declare void @_ZN5blink11LayoutTable20SplitEffectiveColumnEjj(%"class.blink::LayoutTable"*, i32, i32) local_unnamed_addr #2

declare %"class.blink::LayoutTableCol"* @_ZNK5blink14LayoutTableCol10NextColumnEv(%"class.blink::LayoutTableCol"*) local_unnamed_addr #2

declare %"class.blink::LayoutTableSection"* @_ZNK5blink11LayoutTable18TopNonEmptySectionEv(%"class.blink::LayoutTable"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink15LayoutTableCell22StyleOrColLogicalWidthEv(%"class.blink::Length"* noalias sret, %"class.blink::LayoutTableCell"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.blink::LayoutTable::ColAndColGroup", align 8
  %4 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %5 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 9
  %7 = bitcast [20 x i8]* %6 to i160*
  %8 = load i160, i160* %7, align 8
  %9 = and i160 %8, 15211807202738752817960438464512
  %10 = icmp eq i160 %9, 0
  %11 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 5, i32 0, i32 0
  %12 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %12, i64 0, i32 8
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %12, i64 0, i32 3
  %15 = select i1 %10, %"class.blink::Length"* %13, %"class.blink::Length"* %14
  %16 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %15, i64 0, i32 2
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %2
  %20 = bitcast %"class.blink::Length"* %15 to i64*
  %21 = bitcast %"class.blink::Length"* %0 to i64*
  %22 = load i64, i64* %20, align 4
  store i64 %22, i64* %21, align 4
  %23 = and i64 %22, 280375465082880
  %24 = icmp eq i64 %23, 8796093022208
  br i1 %24, label %25, label %61

25:                                               ; preds = %19
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %0) #7
  br label %61

26:                                               ; preds = %2
  %27 = bitcast %"struct.blink::LayoutTable::ColAndColGroup"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #7
  %28 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %29 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %29, i64 0, i32 7
  %31 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %31, i64 0, i32 7
  %33 = bitcast %"class.blink::LayoutObject"** %32 to %"class.blink::LayoutTable"**
  %34 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %34, i64 0, i32 10
  %36 = load i16, i16* %35, align 8, !noalias !16
  %37 = and i16 %36, 64
  %38 = icmp eq i16 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %26
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 0, i64 24, i1 false) #7, !alias.scope !16
  br label %48

40:                                               ; preds = %26
  %41 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 2
  %42 = load i32, i32* %41, align 8
  %43 = and i32 %42, 33554431
  call void @_ZNK5blink11LayoutTable30SlowColElementAtAbsoluteColumnEj(%"struct.blink::LayoutTable::ColAndColGroup"* nonnull sret %3, %"class.blink::LayoutTable"* %34, i32 %43) #7
  %44 = getelementptr inbounds %"struct.blink::LayoutTable::ColAndColGroup", %"struct.blink::LayoutTable::ColAndColGroup"* %3, i64 0, i32 0
  %45 = load %"class.blink::LayoutTableCol"*, %"class.blink::LayoutTableCol"** %44, align 8
  %46 = icmp eq %"class.blink::LayoutTableCol"* %45, null
  br i1 %46, label %48, label %47

47:                                               ; preds = %40
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #7
  br label %52

48:                                               ; preds = %39, %40
  %49 = getelementptr inbounds %"struct.blink::LayoutTable::ColAndColGroup", %"struct.blink::LayoutTable::ColAndColGroup"* %3, i64 0, i32 1
  %50 = load %"class.blink::LayoutTableCol"*, %"class.blink::LayoutTableCol"** %49, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #7
  %51 = icmp eq %"class.blink::LayoutTableCol"* %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %47, %48
  %53 = phi %"class.blink::LayoutTableCol"* [ %45, %47 ], [ %50, %48 ]
  call void @_ZNK5blink15LayoutTableCell23LogicalWidthFromColumnsEPNS_14LayoutTableColERKNS_6LengthE(%"class.blink::Length"* sret %0, %"class.blink::LayoutTableCell"* %1, %"class.blink::LayoutTableCol"* nonnull %53, %"class.blink::Length"* dereferenceable(8) %15) #7
  br label %61

54:                                               ; preds = %48
  %55 = bitcast %"class.blink::Length"* %15 to i64*
  %56 = bitcast %"class.blink::Length"* %0 to i64*
  %57 = load i64, i64* %55, align 4
  store i64 %57, i64* %56, align 4
  %58 = and i64 %57, 280375465082880
  %59 = icmp eq i64 %58, 8796093022208
  br i1 %59, label %60, label %61

60:                                               ; preds = %54
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %0) #7
  br label %61

61:                                               ; preds = %60, %54, %25, %19, %52
  ret void
}

declare dereferenceable(24) %"class.blink::CalculationValue"* @_ZNK5blink6Length19GetCalculationValueEv(%"class.blink::Length"*) local_unnamed_addr #2

declare i32 @_ZNK5blink9LayoutBox39AdjustBorderBoxLogicalWidthForBoxSizingEf(%"class.blink::LayoutBox"*, float) local_unnamed_addr #2

declare void @_ZN5blink12LayoutObject32ClearIntrinsicLogicalWidthsDirtyEv(%"class.blink::LayoutObject"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25TableLayoutAlgorithmFixed29ComputeIntrinsicLogicalWidthsERNS_10LayoutUnitES2_(%"class.blink::TableLayoutAlgorithmFixed"*, %"class.blink::LayoutUnit"* nocapture dereferenceable(4), %"class.blink::LayoutUnit"* nocapture dereferenceable(4)) unnamed_addr #0 align 2 {
  %4 = tail call i32 @_ZN5blink25TableLayoutAlgorithmFixed14CalcWidthArrayEv(%"class.blink::TableLayoutAlgorithmFixed"* %0)
  %5 = icmp sgt i32 %4, 33554431
  br i1 %5, label %10, label %6

6:                                                ; preds = %3
  %7 = icmp slt i32 %4, -33554432
  %8 = shl i32 %4, 6
  %9 = select i1 %7, i32 -2147483648, i32 %8
  br label %10

10:                                               ; preds = %6, %3
  %11 = phi i32 [ 2147483647, %3 ], [ %9, %6 ]
  %12 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %2, i64 0, i32 0
  store i32 %11, i32* %12, align 4
  %13 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %1, i64 0, i32 0
  store i32 %11, i32* %13, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink25TableLayoutAlgorithmFixed32ApplyPreferredLogicalWidthQuirksERNS_10LayoutUnitES2_(%"class.blink::TableLayoutAlgorithmFixed"* nocapture readonly, %"class.blink::LayoutUnit"* nocapture dereferenceable(4), %"class.blink::LayoutUnit"* nocapture dereferenceable(4)) unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %"class.blink::TableLayoutAlgorithmFixed", %"class.blink::TableLayoutAlgorithmFixed"* %0, i64 0, i32 0, i32 1
  %6 = bitcast %"class.blink::LayoutTable"** %5 to %"class.blink::LayoutObject"**
  %7 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %7, i64 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = and i160 %12, 15211807202738752817960438464512
  %14 = icmp eq i160 %13, 0
  %15 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 5, i32 0, i32 0
  %16 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %16, i64 0, i32 8
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %16, i64 0, i32 3
  %19 = select i1 %14, %"class.blink::Length"* %17, %"class.blink::Length"* %18
  %20 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %19, i64 0, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 2
  %23 = bitcast %"class.blink::LayoutObject"* %7 to %"class.blink::LayoutTable"*
  br i1 %22, label %24, label %70

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %19, i64 0, i32 3
  %26 = load i8, i8* %25, align 2, !range !8
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %24
  %29 = bitcast %"class.blink::Length"* %19 to float*
  %30 = load float, float* %29, align 4
  %31 = bitcast float %30 to i32
  br label %37

32:                                               ; preds = %24
  %33 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %19, i64 0, i32 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = sitofp i32 %34 to float
  %36 = bitcast i32 %34 to float
  br label %37

37:                                               ; preds = %28, %32
  %38 = phi i32 [ %31, %28 ], [ %34, %32 ]
  %39 = phi float [ %30, %28 ], [ %36, %32 ]
  %40 = phi float [ %30, %28 ], [ %35, %32 ]
  %41 = fcmp ogt float %40, 0.000000e+00
  br i1 %41, label %42, label %70

42:                                               ; preds = %37
  %43 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %43)
  %44 = sitofp i32 %38 to float
  %45 = select i1 %27, float %44, float %39
  %46 = tail call i32 @_ZNK5blink11LayoutTable38BordersPaddingAndSpacingInRowDirectionEv(%"class.blink::LayoutTable"* %23)
  %47 = sitofp i32 %46 to float
  %48 = fmul float %47, 1.562500e-02
  %49 = fsub float %45, %48
  %50 = fmul float %49, 6.400000e+01
  %51 = fcmp ult float %50, 0xC1E0000000000000
  %52 = fcmp ugt float %50, 0x41DFFFFFE0000000
  %53 = fcmp ogt float %50, 0xC1E0000000000000
  %54 = select i1 %53, float %50, float 0xC1E0000000000000
  %55 = fptosi float %54 to i32
  %56 = select i1 %51, i32 0, i32 2147483647
  %57 = select i1 %52, i32 %56, i32 %55
  store i32 %57, i32* %4, align 4
  %58 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %1, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp slt i32 %59, %57
  %61 = bitcast i32* %4 to %"class.blink::LayoutUnit"*
  %62 = select i1 %60, %"class.blink::LayoutUnit"* %61, %"class.blink::LayoutUnit"* %1
  %63 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %62, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = icmp slt i32 %64, -2147483584
  %66 = and i32 %64, -64
  %67 = select i1 %65, i32 -2147483648, i32 %66, !prof !9
  %68 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %2, i64 0, i32 0
  store i32 %67, i32* %68, align 4
  store i32 %67, i32* %58, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %43)
  %69 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %6, align 8
  br label %70

70:                                               ; preds = %42, %37, %3
  %71 = phi %"class.blink::LayoutObject"* [ %69, %42 ], [ %7, %37 ], [ %7, %3 ]
  %72 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %71, i64 0, i32 4
  %73 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %72 to i96*
  %74 = load i96, i96* %73, align 4
  %75 = and i96 %74, 113336795588871485128704
  %76 = icmp eq i96 %75, 75557863725914323419136
  br i1 %76, label %97, label %77

77:                                               ; preds = %70
  %78 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %71, i64 0, i32 5, i32 0
  %79 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %78, align 8
  %80 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %79, i64 0, i32 0, i32 9
  %81 = bitcast [20 x i8]* %80 to i160*
  %82 = load i160, i160* %81, align 8
  %83 = and i160 %82, 15211807202738752817960438464512
  %84 = icmp eq i160 %83, 0
  %85 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %79, i64 0, i32 0, i32 5, i32 0, i32 0
  %86 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %85, align 8
  %87 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %86, i64 0, i32 8
  %88 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %86, i64 0, i32 3
  %89 = select i1 %84, %"class.blink::Length"* %87, %"class.blink::Length"* %88
  %90 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %89, i64 0, i32 2
  %91 = load i8, i8* %90, align 1
  switch i8 %91, label %97 [
    i8 8, label %92
    i8 1, label %92
  ]

92:                                               ; preds = %77, %77
  %93 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %2, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  %95 = icmp slt i32 %94, 64000000
  br i1 %95, label %96, label %97

96:                                               ; preds = %92
  store i32 64000000, i32* %93, align 4
  br label %97

97:                                               ; preds = %77, %96, %92, %70
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink11LayoutTable38BordersPaddingAndSpacingInRowDirectionEv(%"class.blink::LayoutTable"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !19
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8, !noalias !19
  %7 = bitcast %"class.blink::LayoutTable"* %0 to i8*
  %8 = and i160 %6, 15211807202738752817960438464512
  %9 = icmp eq i160 %8, 0
  %10 = and i160 %6, 41538374868278621028243970633760768
  %11 = icmp eq i160 %10, 0
  %12 = select i1 %11, { i64, i64 } { i64 977, i64 0 }, { i64, i64 } { i64 985, i64 0 }
  %13 = select i1 %11, { i64, i64 } { i64 993, i64 0 }, { i64, i64 } { i64 1001, i64 0 }
  %14 = select i1 %9, { i64, i64 } %13, { i64, i64 } %12
  %15 = select i1 %9, { i64, i64 } %13, { i64, i64 } %12
  %16 = extractvalue { i64, i64 } %14, 0
  %17 = extractvalue { i64, i64 } %15, 1
  %18 = getelementptr inbounds i8, i8* %7, i64 %17
  %19 = bitcast i8* %18 to %"class.blink::LayoutBoxModelObject"*
  %20 = and i64 %16, 1
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %29, label %22

22:                                               ; preds = %1
  %23 = bitcast i8* %18 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = add i64 %16, -1
  %26 = getelementptr i8, i8* %24, i64 %25
  %27 = bitcast i8* %26 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %28 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %27, align 8
  br label %31

29:                                               ; preds = %1
  %30 = inttoptr i64 %16 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %31

31:                                               ; preds = %22, %29
  %32 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %28, %22 ], [ %30, %29 ]
  %33 = tail call i32 %32(%"class.blink::LayoutBoxModelObject"* %19) #7
  %34 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !22
  %35 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %34, i64 0, i32 0, i32 9
  %36 = bitcast [20 x i8]* %35 to i160*
  %37 = load i160, i160* %36, align 8, !noalias !22
  %38 = and i160 %37, 15211807202738752817960438464512
  %39 = icmp eq i160 %38, 0
  %40 = and i160 %37, 41538374868278621028243970633760768
  %41 = icmp eq i160 %40, 0
  %42 = select i1 %41, { i64, i64 } { i64 985, i64 0 }, { i64, i64 } { i64 977, i64 0 }
  %43 = select i1 %41, { i64, i64 } { i64 1001, i64 0 }, { i64, i64 } { i64 993, i64 0 }
  %44 = select i1 %39, { i64, i64 } %43, { i64, i64 } %42
  %45 = select i1 %39, { i64, i64 } %43, { i64, i64 } %42
  %46 = extractvalue { i64, i64 } %44, 0
  %47 = extractvalue { i64, i64 } %45, 1
  %48 = getelementptr inbounds i8, i8* %7, i64 %47
  %49 = bitcast i8* %48 to %"class.blink::LayoutBoxModelObject"*
  %50 = and i64 %46, 1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %59, label %52

52:                                               ; preds = %31
  %53 = bitcast i8* %48 to i8**
  %54 = load i8*, i8** %53, align 8
  %55 = add i64 %46, -1
  %56 = getelementptr i8, i8* %54, i64 %55
  %57 = bitcast i8* %56 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %58 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %57, align 8
  br label %61

59:                                               ; preds = %31
  %60 = inttoptr i64 %46 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %61

61:                                               ; preds = %52, %59
  %62 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %58, %52 ], [ %60, %59 ]
  %63 = tail call i32 %62(%"class.blink::LayoutBoxModelObject"* %49) #7
  %64 = icmp slt i32 %63, 0
  %65 = select i1 %64, i32 -2147483648, i32 2147483647
  %66 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %33, i32 %63) #7
  %67 = extractvalue { i32, i1 } %66, 1
  %68 = extractvalue { i32, i1 } %66, 0
  %69 = select i1 %67, i32 %65, i32 %68, !prof !9
  %70 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %71 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %71, i64 0, i32 9
  %73 = bitcast [20 x i8]* %72 to i160*
  %74 = load i160, i160* %73, align 8
  %75 = and i160 %74, 81129638414606681695789005144064
  %76 = icmp eq i160 %75, 0
  br i1 %76, label %178, label %77

77:                                               ; preds = %61
  %78 = and i160 %74, 15211807202738752817960438464512
  %79 = icmp eq i160 %78, 0
  %80 = and i160 %74, 41538374868278621028243970633760768
  %81 = icmp eq i160 %80, 0
  %82 = select i1 %81, { i64, i64 } { i64 945, i64 0 }, { i64, i64 } { i64 953, i64 0 }
  %83 = select i1 %81, { i64, i64 } { i64 961, i64 0 }, { i64, i64 } { i64 969, i64 0 }
  %84 = select i1 %79, { i64, i64 } %83, { i64, i64 } %82
  %85 = select i1 %79, { i64, i64 } %83, { i64, i64 } %82
  %86 = extractvalue { i64, i64 } %84, 0
  %87 = extractvalue { i64, i64 } %85, 1
  %88 = getelementptr inbounds i8, i8* %7, i64 %87
  %89 = bitcast i8* %88 to %"class.blink::LayoutBoxModelObject"*
  %90 = and i64 %86, 1
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %99, label %92

92:                                               ; preds = %77
  %93 = bitcast i8* %88 to i8**
  %94 = load i8*, i8** %93, align 8
  %95 = add i64 %86, -1
  %96 = getelementptr i8, i8* %94, i64 %95
  %97 = bitcast i8* %96 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %98 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %97, align 8
  br label %101

99:                                               ; preds = %77
  %100 = inttoptr i64 %86 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %101

101:                                              ; preds = %92, %99
  %102 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %98, %92 ], [ %100, %99 ]
  %103 = tail call i32 %102(%"class.blink::LayoutBoxModelObject"* %89) #7
  %104 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !25
  %105 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %104, i64 0, i32 0, i32 9
  %106 = bitcast [20 x i8]* %105 to i160*
  %107 = load i160, i160* %106, align 8, !noalias !25
  %108 = and i160 %107, 15211807202738752817960438464512
  %109 = icmp eq i160 %108, 0
  %110 = and i160 %107, 41538374868278621028243970633760768
  %111 = icmp eq i160 %110, 0
  %112 = select i1 %111, { i64, i64 } { i64 953, i64 0 }, { i64, i64 } { i64 945, i64 0 }
  %113 = select i1 %111, { i64, i64 } { i64 969, i64 0 }, { i64, i64 } { i64 961, i64 0 }
  %114 = select i1 %109, { i64, i64 } %113, { i64, i64 } %112
  %115 = select i1 %109, { i64, i64 } %113, { i64, i64 } %112
  %116 = extractvalue { i64, i64 } %114, 0
  %117 = extractvalue { i64, i64 } %115, 1
  %118 = getelementptr inbounds i8, i8* %7, i64 %117
  %119 = bitcast i8* %118 to %"class.blink::LayoutBoxModelObject"*
  %120 = and i64 %116, 1
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %129, label %122

122:                                              ; preds = %101
  %123 = bitcast i8* %118 to i8**
  %124 = load i8*, i8** %123, align 8
  %125 = add i64 %116, -1
  %126 = getelementptr i8, i8* %124, i64 %125
  %127 = bitcast i8* %126 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %128 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %127, align 8
  br label %131

129:                                              ; preds = %101
  %130 = inttoptr i64 %116 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %131

131:                                              ; preds = %122, %129
  %132 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %128, %122 ], [ %130, %129 ]
  %133 = tail call i32 %132(%"class.blink::LayoutBoxModelObject"* %119) #7
  %134 = icmp slt i32 %133, 0
  %135 = select i1 %134, i32 -2147483648, i32 2147483647
  %136 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %103, i32 %133) #7
  %137 = extractvalue { i32, i1 } %136, 1
  %138 = extractvalue { i32, i1 } %136, 0
  %139 = select i1 %137, i32 %135, i32 %138, !prof !9
  %140 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %141 = load i32, i32* %140, align 4
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %169, label %143

143:                                              ; preds = %131
  %144 = add i32 %141, 1
  %145 = icmp ugt i32 %144, 33554430
  %146 = shl i32 %144, 6
  %147 = select i1 %145, i32 2147483647, i32 %146
  %148 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %0, i64 0, i32 12
  %149 = load i16, i16* %148, align 8
  %150 = sext i16 %149 to i32
  %151 = shl nsw i32 %150, 6
  %152 = sext i32 %147 to i64
  %153 = sext i32 %151 to i64
  %154 = mul nsw i64 %153, %152
  %155 = sdiv i64 %154, 64
  %156 = ashr i64 %155, 32
  %157 = trunc i64 %156 to i32
  %158 = trunc i64 %155 to i32
  %159 = ashr i32 %158, 31
  %160 = icmp eq i32 %159, %157
  br i1 %160, label %165, label %161

161:                                              ; preds = %143
  %162 = xor i32 %151, %147
  %163 = lshr i32 %162, 31
  %164 = add nuw i32 %163, 2147483647
  br label %165

165:                                              ; preds = %143, %161
  %166 = phi i32 [ %158, %143 ], [ %164, %161 ]
  %167 = icmp slt i32 %166, 0
  %168 = select i1 %167, i32 -2147483648, i32 2147483647
  br label %169

169:                                              ; preds = %165, %131
  %170 = phi i32 [ 0, %131 ], [ %166, %165 ]
  %171 = phi i32 [ 2147483647, %131 ], [ %168, %165 ]
  %172 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %139, i32 %170) #7
  %173 = extractvalue { i32, i1 } %172, 1
  %174 = extractvalue { i32, i1 } %172, 0
  %175 = select i1 %173, i32 %171, i32 %174, !prof !9
  %176 = icmp slt i32 %175, 0
  %177 = select i1 %176, i32 -2147483648, i32 2147483647
  br label %178

178:                                              ; preds = %169, %61
  %179 = phi i32 [ 0, %61 ], [ %175, %169 ]
  %180 = phi i32 [ 2147483647, %61 ], [ %177, %169 ]
  %181 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %69, i32 %179) #7
  %182 = extractvalue { i32, i1 } %181, 1
  %183 = extractvalue { i32, i1 } %181, 0
  %184 = select i1 %182, i32 %180, i32 %183, !prof !9
  ret i32 %184
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25TableLayoutAlgorithmFixed12UpdateLayoutEv(%"class.blink::TableLayoutAlgorithmFixed"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::Vector.1672", align 8
  %3 = getelementptr inbounds %"class.blink::TableLayoutAlgorithmFixed", %"class.blink::TableLayoutAlgorithmFixed"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.blink::LayoutTable"** %3 to %"class.blink::LayoutBox"**
  %5 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %5, i64 0, i32 0, i32 0, i32 5, i32 0
  %7 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %7, i64 0, i32 0, i32 9
  %9 = bitcast [20 x i8]* %8 to i160*
  %10 = load i160, i160* %9, align 8
  %11 = and i160 %10, 15211807202738752817960438464512
  %12 = icmp eq i160 %11, 0
  %13 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %5, i64 0, i32 2, i32 1, i32 0, i32 0
  %14 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %5, i64 0, i32 2, i32 1, i32 1, i32 0
  %15 = select i1 %12, i32* %13, i32* %14
  %16 = load i32, i32* %15, align 4
  %17 = bitcast %"class.blink::LayoutBox"* %5 to %"class.blink::LayoutTable"*
  %18 = tail call i32 @_ZNK5blink11LayoutTable38BordersPaddingAndSpacingInRowDirectionEv(%"class.blink::LayoutTable"* %17)
  %19 = icmp sgt i32 %18, -1
  %20 = select i1 %19, i32 -2147483648, i32 2147483647
  %21 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %16, i32 %18) #7
  %22 = extractvalue { i32, i1 } %21, 1
  %23 = extractvalue { i32, i1 } %21, 0
  %24 = select i1 %22, i32 %20, i32 %23, !prof !9
  %25 = sdiv i32 %24, 64
  %26 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %3, align 8
  %27 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %26, i64 0, i32 2, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"class.blink::TableLayoutAlgorithmFixed", %"class.blink::TableLayoutAlgorithmFixed"* %0, i64 0, i32 2
  %30 = getelementptr inbounds %"class.blink::TableLayoutAlgorithmFixed", %"class.blink::TableLayoutAlgorithmFixed"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %28, %31
  br i1 %32, label %38, label %33

33:                                               ; preds = %1
  %34 = tail call i32 @_ZN5blink25TableLayoutAlgorithmFixed14CalcWidthArrayEv(%"class.blink::TableLayoutAlgorithmFixed"* %0)
  %35 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %3, align 8
  %36 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %35, i64 0, i32 2, i32 0, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  br label %38

38:                                               ; preds = %1, %33
  %39 = phi i32 [ %37, %33 ], [ %28, %1 ]
  %40 = bitcast %"class.WTF::Vector.1672"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #7
  %41 = getelementptr inbounds %"class.WTF::Vector.1672", %"class.WTF::Vector.1672"* %2, i64 0, i32 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.WTF::Vector.1672", %"class.WTF::Vector.1672"* %2, i64 0, i32 0, i32 0, i32 1
  %43 = getelementptr inbounds %"class.WTF::Vector.1672", %"class.WTF::Vector.1672"* %2, i64 0, i32 0, i32 0, i32 2
  %44 = bitcast %"class.WTF::Vector.1672"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 16, i1 false)
  store i32* null, i32** %41, align 8
  store i32 0, i32* %42, align 8
  %45 = icmp eq i32 %39, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %38
  store i32 0, i32* %43, align 4
  br label %57

47:                                               ; preds = %38
  %48 = zext i32 %39 to i64
  %49 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64 %48) #7
  %50 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %49, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #7
  %51 = ptrtoint i8* %50 to i64
  %52 = bitcast %"class.WTF::Vector.1672"* %2 to i64*
  store atomic i64 %51, i64* %52 monotonic, align 8
  %53 = lshr i64 %49, 2
  %54 = trunc i64 %53 to i32
  store i32 %54, i32* %42, align 8
  store i32 %39, i32* %43, align 4
  %55 = shl nuw nsw i64 %48, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %50, i8 0, i64 %55, i1 false)
  %56 = shl nsw i32 %25, 6
  br label %70

57:                                               ; preds = %138, %46
  %58 = phi i32 [ 0, %46 ], [ %139, %138 ]
  %59 = phi i32 [ 0, %46 ], [ %140, %138 ]
  %60 = phi i32 [ 0, %46 ], [ %141, %138 ]
  %61 = phi float [ 0.000000e+00, %46 ], [ %142, %138 ]
  %62 = phi i32 [ 0, %46 ], [ %143, %138 ]
  %63 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %3, align 8
  %64 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %63, i64 0, i32 12
  %65 = load i16, i16* %64, align 8
  %66 = add nsw i32 %60, %59
  %67 = icmp eq i32 %62, 0
  %68 = icmp sgt i32 %66, %25
  %69 = or i1 %68, %67
  br i1 %69, label %146, label %249

70:                                               ; preds = %138, %47
  %71 = phi i32 [ 0, %47 ], [ %143, %138 ]
  %72 = phi i32 [ 0, %47 ], [ %144, %138 ]
  %73 = phi float [ 0.000000e+00, %47 ], [ %142, %138 ]
  %74 = phi i32 [ 0, %47 ], [ %141, %138 ]
  %75 = phi i32 [ 0, %47 ], [ %140, %138 ]
  %76 = phi i32 [ 0, %47 ], [ %139, %138 ]
  %77 = call dereferenceable(8) %"class.blink::Length"* @_ZN3WTF6VectorIN5blink6LengthELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.701"* %29, i32 %72) #7
  %78 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %77, i64 0, i32 2
  %79 = load i8, i8* %78, align 1
  %80 = icmp eq i8 %79, 2
  %81 = call dereferenceable(8) %"class.blink::Length"* @_ZN3WTF6VectorIN5blink6LengthELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.701"* %29, i32 %72) #7
  br i1 %80, label %82, label %100

82:                                               ; preds = %70
  %83 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %81, i64 0, i32 3
  %84 = load i8, i8* %83, align 2, !range !8
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %89, label %86

86:                                               ; preds = %82
  %87 = bitcast %"class.blink::Length"* %81 to float*
  %88 = load float, float* %87, align 4
  br label %93

89:                                               ; preds = %82
  %90 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %81, i64 0, i32 0, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = sitofp i32 %91 to float
  br label %93

93:                                               ; preds = %86, %89
  %94 = phi float [ %88, %86 ], [ %92, %89 ]
  %95 = fptosi float %94 to i32
  %96 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1672"* nonnull %2, i32 %72) #7
  store i32 %95, i32* %96, align 4
  %97 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1672"* nonnull %2, i32 %72) #7
  %98 = load i32, i32* %97, align 4
  %99 = add nsw i32 %98, %75
  br label %138

100:                                              ; preds = %70
  %101 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %81, i64 0, i32 2
  %102 = load i8, i8* %101, align 1
  %103 = icmp eq i8 %102, 1
  %104 = call dereferenceable(8) %"class.blink::Length"* @_ZN3WTF6VectorIN5blink6LengthELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.701"* %29, i32 %72) #7
  br i1 %103, label %105, label %126

105:                                              ; preds = %100
  %106 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %104, i32 %56) #7
  %107 = sdiv i32 %106, 64
  %108 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1672"* nonnull %2, i32 %72) #7
  store i32 %107, i32* %108, align 4
  %109 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1672"* nonnull %2, i32 %72) #7
  %110 = load i32, i32* %109, align 4
  %111 = add nsw i32 %110, %74
  %112 = call dereferenceable(8) %"class.blink::Length"* @_ZN3WTF6VectorIN5blink6LengthELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.701"* %29, i32 %72) #7
  %113 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %112, i64 0, i32 3
  %114 = load i8, i8* %113, align 2, !range !8
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %119, label %116

116:                                              ; preds = %105
  %117 = bitcast %"class.blink::Length"* %112 to float*
  %118 = load float, float* %117, align 4
  br label %123

119:                                              ; preds = %105
  %120 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %112, i64 0, i32 0, i32 0
  %121 = load i32, i32* %120, align 4
  %122 = sitofp i32 %121 to float
  br label %123

123:                                              ; preds = %116, %119
  %124 = phi float [ %118, %116 ], [ %122, %119 ]
  %125 = fadd float %73, %124
  br label %138

126:                                              ; preds = %100
  %127 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %104, i64 0, i32 2
  %128 = load i8, i8* %127, align 1
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %130, label %138

130:                                              ; preds = %126
  %131 = add i32 %71, 1
  %132 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %3, align 8
  %133 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %132, i64 0, i32 2
  %134 = call dereferenceable(4) %"struct.blink::LayoutTable::ColumnStruct"* @_ZN3WTF6VectorIN5blink11LayoutTable12ColumnStructELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1667"* %133, i32 %72) #7
  %135 = getelementptr inbounds %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %134, i64 0, i32 0
  %136 = load i32, i32* %135, align 4
  %137 = add i32 %136, %76
  br label %138

138:                                              ; preds = %93, %126, %130, %123
  %139 = phi i32 [ %76, %93 ], [ %76, %123 ], [ %137, %130 ], [ %76, %126 ]
  %140 = phi i32 [ %99, %93 ], [ %75, %123 ], [ %75, %130 ], [ %75, %126 ]
  %141 = phi i32 [ %74, %93 ], [ %111, %123 ], [ %74, %130 ], [ %74, %126 ]
  %142 = phi float [ %73, %93 ], [ %125, %123 ], [ %73, %130 ], [ %73, %126 ]
  %143 = phi i32 [ %71, %93 ], [ %71, %123 ], [ %131, %130 ], [ %71, %126 ]
  %144 = add nuw i32 %72, 1
  %145 = icmp eq i32 %144, %39
  br i1 %145, label %57, label %70

146:                                              ; preds = %57
  %147 = icmp eq i32 %66, %25
  br i1 %147, label %328, label %148

148:                                              ; preds = %146
  %149 = icmp eq i32 %59, 0
  br i1 %149, label %209, label %150

150:                                              ; preds = %148
  %151 = icmp slt i32 %66, %25
  br i1 %151, label %152, label %209

152:                                              ; preds = %150
  %153 = sub nsw i32 %25, %60
  br i1 %45, label %209, label %154

154:                                              ; preds = %152
  %155 = getelementptr inbounds %"class.blink::TableLayoutAlgorithmFixed", %"class.blink::TableLayoutAlgorithmFixed"* %0, i64 0, i32 1
  %156 = bitcast %"class.blink::LayoutTable"** %3 to %"class.blink::LayoutObject"**
  br label %157

157:                                              ; preds = %205, %154
  %158 = phi i32 [ 0, %154 ], [ %207, %205 ]
  %159 = phi i32 [ 0, %154 ], [ %206, %205 ]
  %160 = call dereferenceable(8) %"class.blink::Length"* @_ZN3WTF6VectorIN5blink6LengthELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.701"* %29, i32 %158) #7
  %161 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %160, i64 0, i32 2
  %162 = load i8, i8* %161, align 1
  %163 = icmp eq i8 %162, 2
  br i1 %163, label %164, label %205

164:                                              ; preds = %157
  %165 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1672"* nonnull %2, i32 %158) #7
  %166 = load i32, i32* %165, align 4
  %167 = mul nsw i32 %166, %25
  %168 = sdiv i32 %167, %66
  %169 = load i8, i8* %155, align 8, !range !8
  %170 = icmp eq i8 %169, 0
  br i1 %170, label %171, label %200

171:                                              ; preds = %164
  %172 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1672"* nonnull %2, i32 %158) #7
  %173 = load i32, i32* %172, align 4
  %174 = mul nsw i32 %173, %153
  %175 = sdiv i32 %174, %59
  %176 = icmp eq i32 %175, %168
  br i1 %176, label %200, label %177

177:                                              ; preds = %171
  store i8 1, i8* %155, align 8
  %178 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %156, align 8
  %179 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %178, i64 0, i32 6, i32 0, i32 0
  %180 = load %"class.blink::Node"*, %"class.blink::Node"** %179, align 8
  %181 = icmp eq %"class.blink::Node"* %180, null
  br i1 %181, label %182, label %189

182:                                              ; preds = %177, %182
  %183 = phi %"class.blink::LayoutObject"* [ %185, %182 ], [ %178, %177 ]
  %184 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %183, i64 0, i32 7
  %185 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %184, align 8
  %186 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %185, i64 0, i32 6, i32 0, i32 0
  %187 = load %"class.blink::Node"*, %"class.blink::Node"** %186, align 8
  %188 = icmp eq %"class.blink::Node"* %187, null
  br i1 %188, label %182, label %189

189:                                              ; preds = %182, %177
  %190 = phi %"class.blink::Node"* [ %180, %177 ], [ %187, %182 ]
  %191 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %190, i64 0, i32 3, i32 0, i32 0
  %192 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %191, align 8
  %193 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %192, i64 0, i32 2, i32 0, i32 0
  %194 = load %"class.blink::Document"*, %"class.blink::Document"** %193, align 8
  %195 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %194, i64 0, i32 2
  %196 = bitcast %"class.blink::UseCounter"* %195 to void (%"class.blink::UseCounter"*, i32)***
  %197 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %196, align 8
  %198 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %197, i64 3
  %199 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %198, align 8
  call void %199(%"class.blink::UseCounter"* %195, i32 2122) #7
  br label %200

200:                                              ; preds = %189, %171, %164
  %201 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1672"* nonnull %2, i32 %158) #7
  store i32 %168, i32* %201, align 4
  %202 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1672"* nonnull %2, i32 %158) #7
  %203 = load i32, i32* %202, align 4
  %204 = add nsw i32 %203, %159
  br label %205

205:                                              ; preds = %157, %200
  %206 = phi i32 [ %204, %200 ], [ %159, %157 ]
  %207 = add nuw i32 %158, 1
  %208 = icmp eq i32 %207, %39
  br i1 %208, label %209, label %157

209:                                              ; preds = %205, %152, %148, %150
  %210 = phi i32 [ %59, %150 ], [ 0, %148 ], [ 0, %152 ], [ %206, %205 ]
  %211 = fcmp oeq float %61, 0.000000e+00
  %212 = or i1 %211, %45
  %213 = select i1 %211, i32 %60, i32 0
  br i1 %212, label %300, label %214

214:                                              ; preds = %209
  %215 = sub nsw i32 %25, %210
  %216 = sitofp i32 %215 to float
  br label %217

217:                                              ; preds = %245, %214
  %218 = phi i32 [ 0, %214 ], [ %247, %245 ]
  %219 = phi i32 [ 0, %214 ], [ %246, %245 ]
  %220 = call dereferenceable(8) %"class.blink::Length"* @_ZN3WTF6VectorIN5blink6LengthELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.701"* %29, i32 %218) #7
  %221 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %220, i64 0, i32 2
  %222 = load i8, i8* %221, align 1
  %223 = icmp eq i8 %222, 1
  br i1 %223, label %224, label %245

224:                                              ; preds = %217
  %225 = call dereferenceable(8) %"class.blink::Length"* @_ZN3WTF6VectorIN5blink6LengthELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.701"* %29, i32 %218) #7
  %226 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %225, i64 0, i32 3
  %227 = load i8, i8* %226, align 2, !range !8
  %228 = icmp eq i8 %227, 0
  br i1 %228, label %232, label %229

229:                                              ; preds = %224
  %230 = bitcast %"class.blink::Length"* %225 to float*
  %231 = load float, float* %230, align 4
  br label %236

232:                                              ; preds = %224
  %233 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %225, i64 0, i32 0, i32 0
  %234 = load i32, i32* %233, align 4
  %235 = sitofp i32 %234 to float
  br label %236

236:                                              ; preds = %229, %232
  %237 = phi float [ %231, %229 ], [ %235, %232 ]
  %238 = fmul float %237, %216
  %239 = fdiv float %238, %61
  %240 = fptosi float %239 to i32
  %241 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1672"* nonnull %2, i32 %218) #7
  store i32 %240, i32* %241, align 4
  %242 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1672"* nonnull %2, i32 %218) #7
  %243 = load i32, i32* %242, align 4
  %244 = add nsw i32 %243, %219
  br label %245

245:                                              ; preds = %217, %236
  %246 = phi i32 [ %244, %236 ], [ %219, %217 ]
  %247 = add nuw i32 %218, 1
  %248 = icmp eq i32 %247, %39
  br i1 %248, label %300, label %217

249:                                              ; preds = %57
  %250 = sub i32 %25, %59
  %251 = sub i32 %250, %60
  %252 = sext i16 %65 to i32
  %253 = sub i32 %58, %62
  %254 = mul i32 %253, %252
  %255 = sub i32 %251, %254
  br i1 %45, label %289, label %256

256:                                              ; preds = %249, %283
  %257 = phi i32 [ %287, %283 ], [ 0, %249 ]
  %258 = phi i32 [ %286, %283 ], [ 0, %249 ]
  %259 = phi i32 [ %285, %283 ], [ %255, %249 ]
  %260 = phi i32 [ %284, %283 ], [ %58, %249 ]
  %261 = call dereferenceable(8) %"class.blink::Length"* @_ZN3WTF6VectorIN5blink6LengthELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.701"* %29, i32 %257) #7
  %262 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %261, i64 0, i32 2
  %263 = load i8, i8* %262, align 1
  %264 = icmp eq i8 %263, 0
  br i1 %264, label %265, label %283

265:                                              ; preds = %256
  %266 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %3, align 8
  %267 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %266, i64 0, i32 2
  %268 = call dereferenceable(4) %"struct.blink::LayoutTable::ColumnStruct"* @_ZN3WTF6VectorIN5blink11LayoutTable12ColumnStructELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1667"* %267, i32 %257) #7
  %269 = getelementptr inbounds %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %268, i64 0, i32 0
  %270 = load i32, i32* %269, align 4
  %271 = mul i32 %270, %259
  %272 = udiv i32 %271, %260
  %273 = add i32 %270, -1
  %274 = mul i32 %273, %252
  %275 = add i32 %274, %272
  %276 = icmp sgt i32 %275, 0
  %277 = select i1 %276, i32 %275, i32 0
  %278 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1672"* nonnull %2, i32 %257) #7
  store i32 %277, i32* %278, align 4
  %279 = sub nsw i32 %259, %272
  %280 = icmp eq i32 %279, 0
  %281 = select i1 %280, i32 0, i32 %270
  %282 = sub i32 %260, %281
  br i1 %280, label %328, label %283

283:                                              ; preds = %265, %256
  %284 = phi i32 [ %282, %265 ], [ %260, %256 ]
  %285 = phi i32 [ %279, %265 ], [ %259, %256 ]
  %286 = phi i32 [ %257, %265 ], [ %258, %256 ]
  %287 = add nuw i32 %257, 1
  %288 = icmp eq i32 %287, %39
  br i1 %288, label %289, label %256

289:                                              ; preds = %283, %249
  %290 = phi i32 [ %255, %249 ], [ %285, %283 ]
  %291 = phi i32 [ 0, %249 ], [ %286, %283 ]
  %292 = icmp eq i32 %290, 0
  br i1 %292, label %328, label %293

293:                                              ; preds = %289
  %294 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1672"* nonnull %2, i32 %291) #7
  %295 = load i32, i32* %294, align 4
  %296 = add nsw i32 %295, %290
  %297 = icmp sgt i32 %296, 0
  %298 = select i1 %297, i32 %296, i32 0
  %299 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1672"* nonnull %2, i32 %291) #7
  store i32 %298, i32* %299, align 4
  br label %328

300:                                              ; preds = %245, %209
  %301 = phi i32 [ %213, %209 ], [ %246, %245 ]
  %302 = add nsw i32 %301, %210
  %303 = icmp sgt i32 %25, %302
  br i1 %303, label %304, label %328

304:                                              ; preds = %300
  br i1 %45, label %325, label %305

305:                                              ; preds = %304
  %306 = sub nsw i32 %25, %302
  br label %307

307:                                              ; preds = %305, %307
  %308 = phi i32 [ %312, %307 ], [ %39, %305 ]
  %309 = phi i32 [ %311, %307 ], [ %306, %305 ]
  %310 = sdiv i32 %309, %308
  %311 = sub nsw i32 %309, %310
  %312 = add nsw i32 %308, -1
  %313 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1672"* nonnull %2, i32 %312) #7
  %314 = load i32, i32* %313, align 4
  %315 = add nsw i32 %314, %310
  store i32 %315, i32* %313, align 4
  %316 = icmp eq i32 %312, 0
  br i1 %316, label %317, label %307

317:                                              ; preds = %307
  br i1 %45, label %325, label %318

318:                                              ; preds = %317
  %319 = add i32 %39, -1
  %320 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1672"* nonnull %2, i32 %319) #7
  %321 = load i32, i32* %320, align 4
  %322 = add nsw i32 %321, %311
  store i32 %322, i32* %320, align 4
  %323 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %3, align 8
  %324 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %323, i64 0, i32 3
  br label %331

325:                                              ; preds = %317, %304
  %326 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %3, align 8
  %327 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %326, i64 0, i32 3
  br label %335

328:                                              ; preds = %265, %146, %293, %289, %300
  %329 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %3, align 8
  %330 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %329, i64 0, i32 3
  br i1 %45, label %335, label %331

331:                                              ; preds = %318, %328
  %332 = phi %"class.WTF::Vector.1672"* [ %324, %318 ], [ %330, %328 ]
  %333 = phi %"class.blink::LayoutTable"* [ %323, %318 ], [ %329, %328 ]
  %334 = sext i16 %65 to i32
  br label %357

335:                                              ; preds = %357, %325, %328
  %336 = phi i32 [ 0, %328 ], [ 0, %325 ], [ %374, %357 ]
  %337 = phi %"class.blink::LayoutTable"* [ %329, %328 ], [ %326, %325 ], [ %376, %357 ]
  %338 = phi %"class.WTF::Vector.1672"* [ %330, %328 ], [ %327, %325 ], [ %377, %357 ]
  %339 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1672"* %338, i32 %39) #7
  %340 = load i32, i32* %339, align 4
  %341 = icmp ne i32 %340, %336
  %342 = zext i1 %341 to i16
  %343 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %337, i64 0, i32 10
  %344 = load i16, i16* %343, align 8
  %345 = shl nuw nsw i16 %342, 8
  %346 = or i16 %345, %344
  store i16 %346, i16* %343, align 8
  %347 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1672"* %338, i32 %39) #7
  store i32 %336, i32* %347, align 4
  %348 = load i32*, i32** %41, align 8
  %349 = icmp eq i32* %348, null
  %350 = bitcast i32* %348 to i8*
  br i1 %349, label %356, label %351, !prof !2

351:                                              ; preds = %335
  %352 = load i32, i32* %43, align 4
  %353 = icmp eq i32 %352, 0
  br i1 %353, label %355, label %354, !prof !9

354:                                              ; preds = %351
  store i32 0, i32* %43, align 4
  br label %355

355:                                              ; preds = %354, %351
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %350) #7
  store i32* null, i32** %41, align 8
  br label %356

356:                                              ; preds = %335, %355
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #7
  ret void

357:                                              ; preds = %357, %331
  %358 = phi %"class.WTF::Vector.1672"* [ %332, %331 ], [ %377, %357 ]
  %359 = phi %"class.blink::LayoutTable"* [ %333, %331 ], [ %376, %357 ]
  %360 = phi i32 [ 0, %331 ], [ %375, %357 ]
  %361 = phi i32 [ 0, %331 ], [ %374, %357 ]
  %362 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1672"* %358, i32 %360) #7
  %363 = load i32, i32* %362, align 4
  %364 = icmp ne i32 %363, %361
  %365 = zext i1 %364 to i16
  %366 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %359, i64 0, i32 10
  %367 = load i16, i16* %366, align 8
  %368 = shl nuw nsw i16 %365, 8
  %369 = or i16 %368, %367
  store i16 %369, i16* %366, align 8
  %370 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1672"* %358, i32 %360) #7
  store i32 %361, i32* %370, align 4
  %371 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1672"* nonnull %2, i32 %360) #7
  %372 = load i32, i32* %371, align 4
  %373 = add i32 %361, %334
  %374 = add i32 %373, %372
  %375 = add nuw i32 %360, 1
  %376 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %3, align 8
  %377 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %376, i64 0, i32 3
  %378 = icmp eq i32 %375, %39
  br i1 %378, label %335, label %357
}

declare i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8), i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25TableLayoutAlgorithmFixed21WillChangeTableLayoutEv(%"class.blink::TableLayoutAlgorithmFixed"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::TableLayoutAlgorithmFixed", %"class.blink::TableLayoutAlgorithmFixed"* %0, i64 0, i32 0, i32 1
  %3 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %3, i64 0, i32 10
  %5 = load i16, i16* %4, align 8
  %6 = trunc i16 %5 to i8
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %1
  tail call void @_ZNK5blink11LayoutTable14RecalcSectionsEv(%"class.blink::LayoutTable"* %3) #7
  %9 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %2, align 8
  br label %10

10:                                               ; preds = %1, %8
  %11 = phi %"class.blink::LayoutTable"* [ %3, %1 ], [ %9, %8 ]
  tail call void @_ZN5blink11LayoutTable39MarkAllCellsWidthsDirtyAndOrNeedsLayoutENS0_18WhatToMarkAllCellsE(%"class.blink::LayoutTable"* %11, i32 0) #7
  ret void
}

declare void @_ZN5blink11LayoutTable39MarkAllCellsWidthsDirtyAndOrNeedsLayoutENS0_18WhatToMarkAllCellsE(%"class.blink::LayoutTable"*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25TableLayoutAlgorithmFixedD2Ev(%"class.blink::TableLayoutAlgorithmFixed"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::TableLayoutAlgorithmFixed", %"class.blink::TableLayoutAlgorithmFixed"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink25TableLayoutAlgorithmFixedE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::TableLayoutAlgorithmFixed", %"class.blink::TableLayoutAlgorithmFixed"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.WTF::Vector.701", %"class.WTF::Vector.701"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::Length"*, %"class.blink::Length"** %4, align 8
  %6 = icmp eq %"class.blink::Length"* %5, null
  br i1 %6, label %29, label %7, !prof !2

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::Length"* %5 to i8*
  %9 = getelementptr inbounds %"class.blink::TableLayoutAlgorithmFixed", %"class.blink::TableLayoutAlgorithmFixed"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %27, label %12, !prof !9

12:                                               ; preds = %7
  %13 = zext i32 %10 to i64
  %14 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %5, i64 %13
  br label %15

15:                                               ; preds = %21, %12
  %16 = phi %"class.blink::Length"* [ %22, %21 ], [ %5, %12 ]
  %17 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %16, i64 0, i32 2
  %18 = load i8, i8* %17, align 1
  %19 = icmp eq i8 %18, 8
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %16) #7
  br label %21

21:                                               ; preds = %20, %15
  %22 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %16, i64 1
  %23 = icmp eq %"class.blink::Length"* %22, %14
  br i1 %23, label %24, label %15

24:                                               ; preds = %21
  store i32 0, i32* %9, align 4
  %25 = bitcast %"class.WTF::Vector.701"* %3 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %7
  %28 = phi i8* [ %26, %24 ], [ %8, %7 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %28) #7
  store %"class.blink::Length"* null, %"class.blink::Length"** %4, align 8
  br label %29

29:                                               ; preds = %1, %27
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25TableLayoutAlgorithmFixedD0Ev(%"class.blink::TableLayoutAlgorithmFixed"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::TableLayoutAlgorithmFixed", %"class.blink::TableLayoutAlgorithmFixed"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink25TableLayoutAlgorithmFixedE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::TableLayoutAlgorithmFixed", %"class.blink::TableLayoutAlgorithmFixed"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.WTF::Vector.701", %"class.WTF::Vector.701"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::Length"*, %"class.blink::Length"** %4, align 8
  %6 = icmp eq %"class.blink::Length"* %5, null
  br i1 %6, label %29, label %7, !prof !2

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::Length"* %5 to i8*
  %9 = getelementptr inbounds %"class.blink::TableLayoutAlgorithmFixed", %"class.blink::TableLayoutAlgorithmFixed"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %27, label %12, !prof !9

12:                                               ; preds = %7
  %13 = zext i32 %10 to i64
  %14 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %5, i64 %13
  br label %15

15:                                               ; preds = %21, %12
  %16 = phi %"class.blink::Length"* [ %22, %21 ], [ %5, %12 ]
  %17 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %16, i64 0, i32 2
  %18 = load i8, i8* %17, align 1
  %19 = icmp eq i8 %18, 8
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %16) #7
  br label %21

21:                                               ; preds = %20, %15
  %22 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %16, i64 1
  %23 = icmp eq %"class.blink::Length"* %22, %14
  br i1 %23, label %24, label %15

24:                                               ; preds = %21
  store i32 0, i32* %9, align 4
  %25 = bitcast %"class.WTF::Vector.701"* %3 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %7
  %28 = phi i8* [ %26, %24 ], [ %8, %7 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %28) #7
  br label %29

29:                                               ; preds = %1, %27
  %30 = bitcast %"class.blink::TableLayoutAlgorithmFixed"* %0 to i8*
  tail call void @free(i8* %30) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN5blink20TableLayoutAlgorithm29ScaledWidthFromPercentColumnsEv(%"class.blink::TableLayoutAlgorithm"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

declare void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) %"struct.blink::LayoutTable::ColumnStruct"* @_ZN3WTF6VectorIN5blink11LayoutTable12ColumnStructELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1667"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1667", %"class.WTF::Vector.1667"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #7
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #7
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #7
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  %23 = getelementptr inbounds %"class.WTF::Vector.1667", %"class.WTF::Vector.1667"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::LayoutTable::ColumnStruct"*, %"struct.blink::LayoutTable::ColumnStruct"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::LayoutTable::ColumnStruct", %"struct.blink::LayoutTable::ColumnStruct"* %24, i64 %25
  ret %"struct.blink::LayoutTable::ColumnStruct"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #2

declare void @_ZNK5blink15LayoutTableCell23LogicalWidthFromColumnsEPNS_14LayoutTableColERKNS_6LengthE(%"class.blink::Length"* sret, %"class.blink::LayoutTableCell"*, %"class.blink::LayoutTableCol"*, %"class.blink::Length"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZNK5blink11LayoutTable30SlowColElementAtAbsoluteColumnEj(%"struct.blink::LayoutTable::ColAndColGroup"* sret, %"class.blink::LayoutTable"*, i32) local_unnamed_addr #2

declare i32 @_ZNK5blink15LayoutTableCell19ParseColSpanFromDOMEv(%"class.blink::LayoutTableCell"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #5

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #5

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZNK5blink11LayoutTable14RecalcSectionsEv(%"class.blink::LayoutTable"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1672"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1672", %"class.WTF::Vector.1672"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #7
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #7
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #7
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  %23 = getelementptr inbounds %"class.WTF::Vector.1672", %"class.WTF::Vector.1672"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds i32, i32* %24, i64 %25
  ret i32* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6LengthELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.701"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %34

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.701", %"class.WTF::Vector.701"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::Length"*, %"class.blink::Length"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.701", %"class.WTF::Vector.701"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.701"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.701", %"class.WTF::Vector.701"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %32, label %14

14:                                               ; preds = %4, %28
  %15 = phi %"class.blink::Length"* [ %30, %28 ], [ %6, %4 ]
  %16 = phi %"class.blink::Length"* [ %29, %28 ], [ null, %4 ]
  %17 = bitcast %"class.blink::Length"* %15 to i64*
  %18 = bitcast %"class.blink::Length"* %16 to i64*
  %19 = load i64, i64* %17, align 4
  store i64 %19, i64* %18, align 4
  %20 = and i64 %19, 280375465082880
  %21 = icmp eq i64 %20, 8796093022208
  br i1 %21, label %22, label %23

22:                                               ; preds = %14
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %16) #7
  br label %23

23:                                               ; preds = %22, %14
  %24 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %15, i64 0, i32 2
  %25 = load i8, i8* %24, align 1
  %26 = icmp eq i8 %25, 8
  br i1 %26, label %27, label %28

27:                                               ; preds = %23
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %15) #7
  br label %28

28:                                               ; preds = %27, %23
  %29 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %16, i64 1
  %30 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %15, i64 1
  %31 = icmp eq %"class.blink::Length"* %30, %10
  br i1 %31, label %32, label %14

32:                                               ; preds = %28, %4
  %33 = bitcast %"class.blink::Length"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %33) #7
  br label %77

34:                                               ; preds = %2
  %35 = zext i32 %1 to i64
  %36 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink6LengthEEEmm(i64 %35) #7
  %37 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %36, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink6LengthEEEPKcv, i64 0, i64 0)) #7
  %38 = lshr i64 %36, 3
  %39 = ptrtoint i8* %37 to i64
  %40 = getelementptr inbounds %"class.WTF::Vector.701", %"class.WTF::Vector.701"* %0, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::Length"*, %"class.blink::Length"** %40, align 8
  %42 = getelementptr inbounds %"class.WTF::Vector.701", %"class.WTF::Vector.701"* %0, i64 0, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %41, i64 %44
  %46 = icmp eq i32 %43, 0
  br i1 %46, label %47, label %49

47:                                               ; preds = %34
  %48 = bitcast %"class.blink::Length"* %41 to i8*
  br label %72

49:                                               ; preds = %34
  %50 = bitcast i8* %37 to %"class.blink::Length"*
  br label %51

51:                                               ; preds = %49, %65
  %52 = phi %"class.blink::Length"* [ %67, %65 ], [ %41, %49 ]
  %53 = phi %"class.blink::Length"* [ %66, %65 ], [ %50, %49 ]
  %54 = bitcast %"class.blink::Length"* %52 to i64*
  %55 = bitcast %"class.blink::Length"* %53 to i64*
  %56 = load i64, i64* %54, align 4
  store i64 %56, i64* %55, align 4
  %57 = and i64 %56, 280375465082880
  %58 = icmp eq i64 %57, 8796093022208
  br i1 %58, label %59, label %60

59:                                               ; preds = %51
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %53) #7
  br label %60

60:                                               ; preds = %59, %51
  %61 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %52, i64 0, i32 2
  %62 = load i8, i8* %61, align 1
  %63 = icmp eq i8 %62, 8
  br i1 %63, label %64, label %65

64:                                               ; preds = %60
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %52) #7
  br label %65

65:                                               ; preds = %64, %60
  %66 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %53, i64 1
  %67 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %52, i64 1
  %68 = icmp eq %"class.blink::Length"* %67, %45
  br i1 %68, label %69, label %51

69:                                               ; preds = %65
  %70 = bitcast %"class.WTF::Vector.701"* %0 to i8**
  %71 = load i8*, i8** %70, align 8
  br label %72

72:                                               ; preds = %47, %69
  %73 = phi i8* [ %71, %69 ], [ %48, %47 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %73) #7
  %74 = bitcast %"class.WTF::Vector.701"* %0 to i64*
  store atomic i64 %39, i64* %74 monotonic, align 8
  %75 = trunc i64 %38 to i32
  %76 = getelementptr inbounds %"class.WTF::Vector.701", %"class.WTF::Vector.701"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %75, i32* %76, align 8
  br label %77

77:                                               ; preds = %72, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink6LengthEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i8* %11, i8* %12) #7
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.4, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #7
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #7
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6LengthELj0ENS_18PartitionAllocatorEE4FillIS3_EENSt3__19enable_ifIXntsrT_19kIsGarbageCollectedEvE4typeERKS2_j(%"class.WTF::Vector.701"*, %"class.blink::Length"* dereferenceable(8), i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.WTF::Vector.701", %"class.WTF::Vector.701"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp ugt i32 %6, %2
  br i1 %7, label %8, label %25

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.WTF::Vector.701", %"class.WTF::Vector.701"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::Length"*, %"class.blink::Length"** %9, align 8
  %11 = zext i32 %6 to i64
  %12 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %10, i64 %11
  %13 = zext i32 %2 to i64
  %14 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %10, i64 %13
  br label %15

15:                                               ; preds = %21, %8
  %16 = phi %"class.blink::Length"* [ %22, %21 ], [ %14, %8 ]
  %17 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %16, i64 0, i32 2
  %18 = load i8, i8* %17, align 1
  %19 = icmp eq i8 %18, 8
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %16) #7
  br label %21

21:                                               ; preds = %20, %15
  %22 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %16, i64 1
  %23 = icmp eq %"class.blink::Length"* %22, %12
  br i1 %23, label %24, label %15

24:                                               ; preds = %21
  store i32 %2, i32* %5, align 4
  br label %71

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.WTF::Vector.701", %"class.WTF::Vector.701"* %0, i64 0, i32 0, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = icmp ult i32 %27, %2
  br i1 %28, label %29, label %69

29:                                               ; preds = %25
  %30 = icmp eq i32 %27, 0
  br i1 %30, label %53, label %31

31:                                               ; preds = %29
  %32 = icmp eq i32 %6, 0
  br i1 %32, label %48, label %33

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"class.WTF::Vector.701", %"class.WTF::Vector.701"* %0, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::Length"*, %"class.blink::Length"** %34, align 8
  %36 = zext i32 %6 to i64
  %37 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %35, i64 %36
  br label %38

38:                                               ; preds = %44, %33
  %39 = phi %"class.blink::Length"* [ %45, %44 ], [ %35, %33 ]
  %40 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %39, i64 0, i32 2
  %41 = load i8, i8* %40, align 1
  %42 = icmp eq i8 %41, 8
  br i1 %42, label %43, label %44

43:                                               ; preds = %38
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %39) #7
  br label %44

44:                                               ; preds = %43, %38
  %45 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %39, i64 1
  %46 = icmp eq %"class.blink::Length"* %45, %37
  br i1 %46, label %47, label %38

47:                                               ; preds = %44
  store i32 0, i32* %5, align 4
  br label %48

48:                                               ; preds = %47, %31
  %49 = bitcast %"class.WTF::Vector.701"* %0 to i8**
  %50 = load i8*, i8** %49, align 8
  %51 = bitcast %"class.WTF::Vector.701"* %0 to i64*
  store atomic i64 0, i64* %51 monotonic, align 8
  store i32 0, i32* %26, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #7
  %52 = load i32, i32* %26, align 8
  br label %53

53:                                               ; preds = %29, %48
  %54 = phi i32 [ 0, %29 ], [ %52, %48 ]
  %55 = icmp ult i32 %54, %2
  br i1 %55, label %56, label %69, !prof !2

56:                                               ; preds = %53
  %57 = getelementptr inbounds %"class.WTF::Vector.701", %"class.WTF::Vector.701"* %0, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.blink::Length"*, %"class.blink::Length"** %57, align 8
  %59 = icmp eq %"class.blink::Length"* %58, null
  br i1 %59, label %60, label %68

60:                                               ; preds = %56
  %61 = zext i32 %2 to i64
  %62 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink6LengthEEEmm(i64 %61) #7
  %63 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %62, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink6LengthEEEPKcv, i64 0, i64 0)) #7
  %64 = ptrtoint i8* %63 to i64
  %65 = bitcast %"class.WTF::Vector.701"* %0 to i64*
  store atomic i64 %64, i64* %65 monotonic, align 8
  %66 = lshr i64 %62, 3
  %67 = trunc i64 %66 to i32
  store i32 %67, i32* %26, align 8
  br label %69

68:                                               ; preds = %56
  tail call void @_ZN3WTF6VectorIN5blink6LengthELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.701"* %0, i32 %2) #7
  br label %69

69:                                               ; preds = %25, %53, %60, %68
  %70 = load i32, i32* %5, align 4
  br label %71

71:                                               ; preds = %69, %24
  %72 = phi i32 [ %70, %69 ], [ %2, %24 ]
  %73 = getelementptr inbounds %"class.WTF::Vector.701", %"class.WTF::Vector.701"* %0, i64 0, i32 0, i32 0, i32 0
  %74 = icmp eq i32 %72, 0
  br i1 %74, label %99, label %75

75:                                               ; preds = %71
  %76 = zext i32 %72 to i64
  %77 = load %"class.blink::Length"*, %"class.blink::Length"** %73, align 8
  %78 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 2
  %79 = bitcast %"class.blink::Length"* %1 to i64*
  br label %80

80:                                               ; preds = %91, %75
  %81 = phi %"class.blink::Length"* [ %77, %75 ], [ %94, %91 ]
  %82 = phi i64 [ %76, %75 ], [ %95, %91 ]
  %83 = load i8, i8* %78, align 1
  %84 = icmp eq i8 %83, 8
  br i1 %84, label %85, label %86

85:                                               ; preds = %80
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %1) #7
  br label %86

86:                                               ; preds = %85, %80
  %87 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %81, i64 0, i32 2
  %88 = load i8, i8* %87, align 1
  %89 = icmp eq i8 %88, 8
  br i1 %89, label %90, label %91

90:                                               ; preds = %86
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %81) #7
  br label %91

91:                                               ; preds = %90, %86
  %92 = bitcast %"class.blink::Length"* %81 to i64*
  %93 = load i64, i64* %79, align 4
  store i64 %93, i64* %92, align 4
  %94 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %81, i64 1
  %95 = add nsw i64 %82, -1
  %96 = icmp sgt i64 %95, 0
  br i1 %96, label %80, label %97

97:                                               ; preds = %91
  %98 = load i32, i32* %5, align 4
  br label %99

99:                                               ; preds = %97, %71
  %100 = phi i32 [ %98, %97 ], [ 0, %71 ]
  %101 = load %"class.blink::Length"*, %"class.blink::Length"** %73, align 8
  %102 = zext i32 %2 to i64
  %103 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %101, i64 %102
  %104 = bitcast i64* %4 to %"class.blink::Length"*
  %105 = icmp eq i32 %100, %2
  br i1 %105, label %132, label %106

106:                                              ; preds = %99
  %107 = zext i32 %100 to i64
  %108 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %101, i64 %107
  %109 = bitcast i64* %4 to i8*
  %110 = bitcast %"class.blink::Length"* %1 to i64*
  %111 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %104, i64 0, i32 2
  br label %112

112:                                              ; preds = %129, %106
  %113 = phi %"class.blink::Length"* [ %108, %106 ], [ %130, %129 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %109) #7
  %114 = load i64, i64* %110, align 4
  store i64 %114, i64* %4, align 8
  %115 = and i64 %114, 280375465082880
  %116 = icmp eq i64 %115, 8796093022208
  br i1 %116, label %117, label %119

117:                                              ; preds = %112
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %104) #7
  %118 = load i64, i64* %4, align 8
  br label %119

119:                                              ; preds = %117, %112
  %120 = phi i64 [ %114, %112 ], [ %118, %117 ]
  %121 = bitcast %"class.blink::Length"* %113 to i64*
  store i64 %120, i64* %121, align 4
  %122 = and i64 %120, 280375465082880
  %123 = icmp eq i64 %122, 8796093022208
  br i1 %123, label %124, label %125

124:                                              ; preds = %119
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %113) #7
  br label %125

125:                                              ; preds = %124, %119
  %126 = load i8, i8* %111, align 1
  %127 = icmp eq i8 %126, 8
  br i1 %127, label %128, label %129

128:                                              ; preds = %125
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %104) #7
  br label %129

129:                                              ; preds = %128, %125
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %109) #7
  %130 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %113, i64 1
  %131 = icmp eq %"class.blink::Length"* %130, %103
  br i1 %131, label %132, label %112

132:                                              ; preds = %129, %99
  store i32 %2, i32* %5, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6LengthELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.701"*, %"class.blink::Length"* dereferenceable(8)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.701", %"class.WTF::Vector.701"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.701", %"class.WTF::Vector.701"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::Length"*, %"class.blink::Length"** %6, align 8
  %8 = icmp ugt %"class.blink::Length"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %7, i64 %10
  %12 = icmp ugt %"class.blink::Length"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.701", %"class.WTF::Vector.701"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::Length"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink6LengthEEEmm(i64 %27) #7
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink6LengthEEEPKcv, i64 0, i64 0)) #7
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.701"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.blink::Length"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN5blink6LengthELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.701"* %0, i32 %22) #7
  %36 = load %"class.blink::Length"*, %"class.blink::Length"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.blink::Length"* %1 to i64
  %39 = ptrtoint %"class.blink::Length"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 3
  %42 = getelementptr inbounds %"class.WTF::Vector.701", %"class.WTF::Vector.701"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !2

52:                                               ; preds = %37
  %53 = icmp eq %"class.blink::Length"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink6LengthEEEmm(i64 %55) #7
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink6LengthEEEPKcv, i64 0, i64 0)) #7
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.701"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 3
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.blink::Length"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN5blink6LengthELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.701"* %0, i32 %50) #7
  %64 = load %"class.blink::Length"*, %"class.blink::Length"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.blink::Length"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.blink::Length"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.blink::Length"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %69, i64 %72
  %74 = bitcast %"class.blink::Length"* %70 to i64*
  %75 = bitcast %"class.blink::Length"* %73 to i64*
  %76 = load i64, i64* %74, align 4
  store i64 %76, i64* %75, align 4
  %77 = and i64 %76, 280375465082880
  %78 = icmp eq i64 %77, 8796093022208
  br i1 %78, label %79, label %80

79:                                               ; preds = %68
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %73) #7
  br label %80

80:                                               ; preds = %68, %79
  %81 = load i32, i32* %3, align 4
  %82 = add i32 %81, 1
  store i32 %82, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Length"* @_ZN3WTF6VectorIN5blink6LengthELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.701"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.701", %"class.WTF::Vector.701"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #7
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #7
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #7
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  %23 = getelementptr inbounds %"class.WTF::Vector.701", %"class.WTF::Vector.701"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Length"*, %"class.blink::Length"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %24, i64 %25
  ret %"class.blink::Length"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i8* %11, i8* %12) #7
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.4, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #7
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #7
  ret i64 %21
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN5blink6Length4AutoEv: argument 0"}
!7 = distinct !{!7, !"_ZN5blink6Length4AutoEv"}
!8 = !{i8 0, i8 2}
!9 = !{!"branch_weights", i32 1, i32 2000}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN5blink6Length7PercentIfEES0_T_: argument 0"}
!12 = distinct !{!12, !"_ZN5blink6Length7PercentIfEES0_T_"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN5blink6Length5FixedIiEES0_T_: argument 0"}
!15 = distinct !{!15, !"_ZN5blink6Length5FixedIiEES0_T_"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNK5blink11LayoutTable26ColElementAtAbsoluteColumnEj: argument 0"}
!18 = distinct !{!18, !"_ZNK5blink11LayoutTable26ColElementAtAbsoluteColumnEj"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!21 = distinct !{!21, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!24 = distinct !{!24, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!27 = distinct !{!27, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
