; ModuleID = '../../third_party/protobuf/src/google/protobuf/stubs/stringpiece.cc'
source_filename = "../../third_party/protobuf/src/google/protobuf/stubs/stringpiece.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.google::protobuf::StringPiece" = type { i8*, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.google::protobuf::internal::LogMessage" = type { i32, i8*, i32, %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.google::protobuf::internal::LogFinisher" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@.str = private unnamed_addr constant [68 x i8] c"../../third_party/protobuf/src/google/protobuf/stubs/stringpiece.cc\00", align 1
@.str.1 = private unnamed_addr constant [15 x i8] c"size too big: \00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c" details: \00", align 1
@_ZN6google8protobuf11StringPiece4nposE = hidden local_unnamed_addr constant i64 -1, align 8

@_ZN6google8protobuf11StringPieceC1ES1_l = hidden unnamed_addr alias void (%"class.google::protobuf::StringPiece"*, i8*, i64, i64), void (%"class.google::protobuf::StringPiece"*, i8*, i64, i64)* @_ZN6google8protobuf11StringPieceC2ES1_l
@_ZN6google8protobuf11StringPieceC1ES1_ll = hidden unnamed_addr alias void (%"class.google::protobuf::StringPiece"*, i8*, i64, i64, i64), void (%"class.google::protobuf::StringPiece"*, i8*, i64, i64, i64)* @_ZN6google8protobuf11StringPieceC2ES1_ll

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN6google8protobuflsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEENS0_11StringPieceE(%"class.std::__1::basic_ostream"* returned dereferenceable(160), i8*, i64) local_unnamed_addr #0 {
  %4 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5writeEPKcl(%"class.std::__1::basic_ostream"* %0, i8* %1, i64 %2) #12
  ret %"class.std::__1::basic_ostream"* %0
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5writeEPKcl(%"class.std::__1::basic_ostream"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6google8protobuf11StringPiece18LogFatalSizeTooBigEmPKc(i64, i8*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.google::protobuf::internal::LogMessage", align 8
  %4 = alloca %"class.google::protobuf::internal::LogFinisher", align 1
  %5 = bitcast %"class.google::protobuf::internal::LogMessage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %5) #12
  call void @_ZN6google8protobuf8internal10LogMessageC1ENS0_8LogLevelEPKci(%"class.google::protobuf::internal::LogMessage"* nonnull %3, i32 3, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str, i64 0, i64 0), i32 49) #12
  %6 = call dereferenceable(48) %"class.google::protobuf::internal::LogMessage"* @_ZN6google8protobuf8internal10LogMessagelsEPKc(%"class.google::protobuf::internal::LogMessage"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0)) #12
  %7 = call dereferenceable(48) %"class.google::protobuf::internal::LogMessage"* @_ZN6google8protobuf8internal10LogMessagelsEm(%"class.google::protobuf::internal::LogMessage"* %6, i64 %0) #12
  %8 = call dereferenceable(48) %"class.google::protobuf::internal::LogMessage"* @_ZN6google8protobuf8internal10LogMessagelsEPKc(%"class.google::protobuf::internal::LogMessage"* %7, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0)) #12
  %9 = call dereferenceable(48) %"class.google::protobuf::internal::LogMessage"* @_ZN6google8protobuf8internal10LogMessagelsEPKc(%"class.google::protobuf::internal::LogMessage"* %8, i8* %1) #12
  %10 = getelementptr inbounds %"class.google::protobuf::internal::LogFinisher", %"class.google::protobuf::internal::LogFinisher"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #12
  call void @_ZN6google8protobuf8internal11LogFinisheraSERNS1_10LogMessageE(%"class.google::protobuf::internal::LogFinisher"* nonnull %4, %"class.google::protobuf::internal::LogMessage"* dereferenceable(48) %9) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #12
  call void @_ZN6google8protobuf8internal10LogMessageD1Ev(%"class.google::protobuf::internal::LogMessage"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %5) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN6google8protobuf8internal10LogMessageC1ENS0_8LogLevelEPKci(%"class.google::protobuf::internal::LogMessage"*, i32, i8*, i32) unnamed_addr #1

declare dereferenceable(48) %"class.google::protobuf::internal::LogMessage"* @_ZN6google8protobuf8internal10LogMessagelsEPKc(%"class.google::protobuf::internal::LogMessage"*, i8*) local_unnamed_addr #1

declare dereferenceable(48) %"class.google::protobuf::internal::LogMessage"* @_ZN6google8protobuf8internal10LogMessagelsEm(%"class.google::protobuf::internal::LogMessage"*, i64) local_unnamed_addr #1

declare void @_ZN6google8protobuf8internal11LogFinisheraSERNS1_10LogMessageE(%"class.google::protobuf::internal::LogFinisher"*, %"class.google::protobuf::internal::LogMessage"* dereferenceable(48)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind
declare void @_ZN6google8protobuf8internal10LogMessageD1Ev(%"class.google::protobuf::internal::LogMessage"*) unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6google8protobuf11StringPieceC2ES1_l(%"class.google::protobuf::StringPiece"* nocapture, i8*, i64, i64) unnamed_addr #4 align 2 {
  %5 = getelementptr inbounds %"class.google::protobuf::StringPiece", %"class.google::protobuf::StringPiece"* %0, i64 0, i32 0
  %6 = getelementptr inbounds i8, i8* %1, i64 %3
  store i8* %6, i8** %5, align 8
  %7 = getelementptr inbounds %"class.google::protobuf::StringPiece", %"class.google::protobuf::StringPiece"* %0, i64 0, i32 1
  %8 = sub nsw i64 %2, %3
  store i64 %8, i64* %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable writeonly
define hidden void @_ZN6google8protobuf11StringPieceC2ES1_ll(%"class.google::protobuf::StringPiece"* nocapture, i8*, i64, i64, i64) unnamed_addr #5 align 2 {
  %6 = getelementptr inbounds %"class.google::protobuf::StringPiece", %"class.google::protobuf::StringPiece"* %0, i64 0, i32 0
  %7 = getelementptr inbounds i8, i8* %1, i64 %3
  store i8* %7, i8** %6, align 8
  %8 = getelementptr inbounds %"class.google::protobuf::StringPiece", %"class.google::protobuf::StringPiece"* %0, i64 0, i32 1
  %9 = sub nsw i64 %2, %3
  %10 = icmp slt i64 %9, %4
  %11 = select i1 %10, i64 %9, i64 %4
  store i64 %11, i64* %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6google8protobuf11StringPiece12CopyToStringEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.google::protobuf::StringPiece"* nocapture readonly, %"class.std::__1::basic_string"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.google::protobuf::StringPiece", %"class.google::protobuf::StringPiece"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.google::protobuf::StringPiece", %"class.google::protobuf::StringPiece"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = tail call i1 @llvm.is.constant.i64(i64 %6) #12
  %8 = icmp ult i64 %6, 23
  %9 = and i1 %8, %7
  br i1 %9, label %10, label %28

10:                                               ; preds = %2
  %11 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %19

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %6, i64* %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  br label %22

19:                                               ; preds = %10
  %20 = trunc i64 %6 to i8
  store i8 %20, i8* %12, align 1
  %21 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  br label %22

22:                                               ; preds = %19, %15
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = icmp eq i64 %6, 0
  br i1 %24, label %26, label %25

25:                                               ; preds = %22
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %23, i8* align 1 %4, i64 %6, i1 false) #12
  br label %26

26:                                               ; preds = %25, %22
  %27 = getelementptr inbounds i8, i8* %23, i64 %6
  store i8 0, i8* %27, align 1
  br label %30

28:                                               ; preds = %2
  %29 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %1, i8* %4, i64 %6) #12
  br label %30

30:                                               ; preds = %26, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6google8protobuf11StringPiece14AppendToStringEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.google::protobuf::StringPiece"* nocapture readonly, %"class.std::__1::basic_string"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.google::protobuf::StringPiece", %"class.google::protobuf::StringPiece"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.google::protobuf::StringPiece", %"class.google::protobuf::StringPiece"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %1, i8* %4, i64 %6) #12
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nofree nounwind ssp uwtable
define hidden zeroext i1 @_ZN6google8protobuf11StringPiece7ConsumeES1_(%"class.google::protobuf::StringPiece"* nocapture, i8* nocapture readonly, i64) local_unnamed_addr #6 align 2 {
  %4 = getelementptr inbounds %"class.google::protobuf::StringPiece", %"class.google::protobuf::StringPiece"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp slt i64 %5, %2
  br i1 %6, label %15, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.google::protobuf::StringPiece", %"class.google::protobuf::StringPiece"* %0, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = tail call i32 @bcmp(i8* %9, i8* %1, i64 %2) #12
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %7
  %13 = getelementptr inbounds i8, i8* %9, i64 %2
  store i8* %13, i8** %8, align 8
  %14 = sub nsw i64 %5, %2
  store i64 %14, i64* %4, align 8
  br label %15

15:                                               ; preds = %3, %7, %12
  %16 = phi i1 [ true, %12 ], [ false, %7 ], [ false, %3 ]
  ret i1 %16
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nofree nounwind ssp uwtable
define hidden zeroext i1 @_ZN6google8protobuf11StringPiece14ConsumeFromEndES1_(%"class.google::protobuf::StringPiece"* nocapture, i8* nocapture readonly, i64) local_unnamed_addr #6 align 2 {
  %4 = getelementptr inbounds %"class.google::protobuf::StringPiece", %"class.google::protobuf::StringPiece"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp slt i64 %5, %2
  br i1 %6, label %15, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.google::protobuf::StringPiece", %"class.google::protobuf::StringPiece"* %0, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = sub nsw i64 %5, %2
  %11 = getelementptr inbounds i8, i8* %9, i64 %10
  %12 = tail call i32 @bcmp(i8* %11, i8* %1, i64 %2) #12
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %7
  store i64 %10, i64* %4, align 8
  br label %15

15:                                               ; preds = %3, %7, %14
  %16 = phi i1 [ true, %14 ], [ false, %7 ], [ false, %3 ]
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK6google8protobuf11StringPiece4copyEPcmm(%"class.google::protobuf::StringPiece"* nocapture readonly, i8* nocapture, i64, i64) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.google::protobuf::StringPiece", %"class.google::protobuf::StringPiece"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = sub i64 %6, %3
  %8 = icmp ugt i64 %7, %2
  %9 = select i1 %8, i64 %2, i64 %7
  %10 = getelementptr inbounds %"class.google::protobuf::StringPiece", %"class.google::protobuf::StringPiece"* %0, i64 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds i8, i8* %11, i64 %3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %12, i64 %9, i1 false)
  ret i64 %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK6google8protobuf11StringPiece8containsES1_(%"class.google::protobuf::StringPiece"* nocapture readonly, i8* readonly, i64) local_unnamed_addr #7 align 2 {
  %4 = getelementptr inbounds %"class.google::protobuf::StringPiece", %"class.google::protobuf::StringPiece"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp slt i64 %5, 1
  br i1 %6, label %7, label %11

7:                                                ; preds = %3
  %8 = or i64 %5, %2
  %9 = icmp ne i64 %8, 0
  %10 = sext i1 %9 to i64
  br label %54

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.google::protobuf::StringPiece", %"class.google::protobuf::StringPiece"* %0, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds i8, i8* %13, i64 %5
  %15 = getelementptr inbounds i8, i8* %1, i64 %2
  %16 = icmp eq i64 %2, 0
  br i1 %16, label %47, label %17

17:                                               ; preds = %11
  %18 = icmp slt i64 %5, %2
  br i1 %18, label %47, label %19

19:                                               ; preds = %17
  %20 = sub i64 1, %2
  %21 = getelementptr inbounds i8, i8* %14, i64 %20
  %22 = icmp eq i8* %21, %13
  br i1 %22, label %47, label %23

23:                                               ; preds = %19
  %24 = load i8, i8* %1, align 1
  br label %25

25:                                               ; preds = %32, %23
  %26 = phi i8* [ %13, %23 ], [ %33, %32 ]
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, %24
  br i1 %28, label %34, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds i8, i8* %26, i64 1
  %31 = icmp eq i8* %30, %21
  br i1 %31, label %47, label %32

32:                                               ; preds = %29, %44
  %33 = phi i8* [ %30, %29 ], [ %45, %44 ]
  br label %25

34:                                               ; preds = %25, %39
  %35 = phi i8* [ %40, %39 ], [ %26, %25 ]
  %36 = phi i8* [ %37, %39 ], [ %1, %25 ]
  %37 = getelementptr inbounds i8, i8* %36, i64 1
  %38 = icmp eq i8* %37, %15
  br i1 %38, label %47, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds i8, i8* %35, i64 1
  %41 = load i8, i8* %40, align 1
  %42 = load i8, i8* %37, align 1
  %43 = icmp eq i8 %41, %42
  br i1 %43, label %34, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds i8, i8* %26, i64 1
  %46 = icmp eq i8* %45, %21
  br i1 %46, label %47, label %32

47:                                               ; preds = %44, %29, %34, %19, %17, %11
  %48 = phi i8* [ %13, %11 ], [ %14, %17 ], [ %14, %19 ], [ %26, %34 ], [ %14, %29 ], [ %14, %44 ]
  %49 = icmp eq i8* %48, %14
  %50 = ptrtoint i8* %48 to i64
  %51 = ptrtoint i8* %13 to i64
  %52 = sub i64 %50, %51
  %53 = select i1 %49, i64 -1, i64 %52
  br label %54

54:                                               ; preds = %47, %7
  %55 = phi i64 [ %10, %7 ], [ %53, %47 ]
  %56 = icmp ne i64 %55, -1
  ret i1 %56
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK6google8protobuf11StringPiece4findES1_m(%"class.google::protobuf::StringPiece"* nocapture readonly, i8*, i64, i64) local_unnamed_addr #7 align 2 {
  %5 = getelementptr inbounds %"class.google::protobuf::StringPiece", %"class.google::protobuf::StringPiece"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp slt i64 %6, 1
  %8 = icmp ult i64 %6, %3
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %15

10:                                               ; preds = %4
  %11 = or i64 %3, %2
  %12 = or i64 %11, %6
  %13 = icmp ne i64 %12, 0
  %14 = sext i1 %13 to i64
  ret i64 %14

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.google::protobuf::StringPiece", %"class.google::protobuf::StringPiece"* %0, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds i8, i8* %17, i64 %3
  %19 = getelementptr inbounds i8, i8* %17, i64 %6
  %20 = getelementptr inbounds i8, i8* %1, i64 %2
  %21 = icmp eq i64 %2, 0
  br i1 %21, label %55, label %22

22:                                               ; preds = %15
  %23 = ptrtoint i8* %18 to i64
  %24 = ptrtoint i8* %19 to i64
  %25 = sub i64 %24, %23
  %26 = icmp slt i64 %25, %2
  br i1 %26, label %55, label %27

27:                                               ; preds = %22
  %28 = sub i64 1, %2
  %29 = getelementptr inbounds i8, i8* %19, i64 %28
  %30 = icmp eq i8* %29, %18
  br i1 %30, label %55, label %31

31:                                               ; preds = %27
  %32 = load i8, i8* %1, align 1
  br label %33

33:                                               ; preds = %40, %31
  %34 = phi i8* [ %18, %31 ], [ %41, %40 ]
  %35 = load i8, i8* %34, align 1
  %36 = icmp eq i8 %35, %32
  br i1 %36, label %42, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds i8, i8* %34, i64 1
  %39 = icmp eq i8* %38, %29
  br i1 %39, label %55, label %40

40:                                               ; preds = %37, %52
  %41 = phi i8* [ %38, %37 ], [ %53, %52 ]
  br label %33

42:                                               ; preds = %33, %47
  %43 = phi i8* [ %48, %47 ], [ %34, %33 ]
  %44 = phi i8* [ %45, %47 ], [ %1, %33 ]
  %45 = getelementptr inbounds i8, i8* %44, i64 1
  %46 = icmp eq i8* %45, %20
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds i8, i8* %43, i64 1
  %49 = load i8, i8* %48, align 1
  %50 = load i8, i8* %45, align 1
  %51 = icmp eq i8 %49, %50
  br i1 %51, label %42, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds i8, i8* %34, i64 1
  %54 = icmp eq i8* %53, %29
  br i1 %54, label %55, label %40

55:                                               ; preds = %52, %37, %42, %15, %22, %27
  %56 = phi i8* [ %18, %15 ], [ %19, %22 ], [ %19, %27 ], [ %34, %42 ], [ %19, %37 ], [ %19, %52 ]
  %57 = icmp eq i8* %56, %19
  %58 = ptrtoint i8* %56 to i64
  %59 = ptrtoint i8* %17 to i64
  %60 = sub i64 %58, %59
  %61 = select i1 %57, i64 -1, i64 %60
  ret i64 %61
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZNK6google8protobuf11StringPiece4findEcm(%"class.google::protobuf::StringPiece"* nocapture readonly, i8 signext, i64) local_unnamed_addr #8 align 2 {
  %4 = getelementptr inbounds %"class.google::protobuf::StringPiece", %"class.google::protobuf::StringPiece"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp sgt i64 %5, 0
  %7 = icmp ugt i64 %5, %2
  %8 = and i1 %6, %7
  br i1 %8, label %9, label %21

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.google::protobuf::StringPiece", %"class.google::protobuf::StringPiece"* %0, i64 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds i8, i8* %11, i64 %2
  %13 = sext i8 %1 to i32
  %14 = sub i64 %5, %2
  %15 = tail call i8* @memchr(i8* %12, i32 %13, i64 %14) #13
  %16 = icmp eq i8* %15, null
  %17 = ptrtoint i8* %15 to i64
  %18 = ptrtoint i8* %11 to i64
  %19 = sub i64 %17, %18
  %20 = select i1 %16, i64 -1, i64 %19
  br label %21

21:                                               ; preds = %9, %3
  %22 = phi i64 [ -1, %3 ], [ %20, %9 ]
  ret i64 %22
}

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #9

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZNK6google8protobuf11StringPiece5rfindES1_m(%"class.google::protobuf::StringPiece"* nocapture readonly, i8*, i64, i64) local_unnamed_addr #8 align 2 {
  %5 = getelementptr inbounds %"class.google::protobuf::StringPiece", %"class.google::protobuf::StringPiece"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp slt i64 %6, %2
  br i1 %7, label %54, label %8

8:                                                ; preds = %4
  %9 = icmp eq i64 %2, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %8
  %11 = icmp ugt i64 %6, %3
  %12 = select i1 %11, i64 %3, i64 %6
  br label %54

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.google::protobuf::StringPiece", %"class.google::protobuf::StringPiece"* %0, i64 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = sub i64 %6, %2
  %17 = icmp ugt i64 %16, %3
  %18 = select i1 %17, i64 %3, i64 %16
  %19 = getelementptr inbounds i8, i8* %15, i64 %18
  %20 = getelementptr inbounds i8, i8* %19, i64 %2
  %21 = ptrtoint i8* %20 to i64
  %22 = ptrtoint i8* %15 to i64
  %23 = sub i64 %21, %22
  %24 = icmp slt i64 %23, %2
  br i1 %24, label %54, label %25

25:                                               ; preds = %13
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = add nsw i64 %2, -1
  %28 = getelementptr inbounds i8, i8* %15, i64 %27
  %29 = getelementptr inbounds i8, i8* %26, i64 -1
  br label %30

30:                                               ; preds = %38, %25
  %31 = phi i8* [ %20, %25 ], [ %34, %38 ]
  %32 = icmp eq i8* %28, %31
  br i1 %32, label %54, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds i8, i8* %31, i64 -1
  %35 = load i8, i8* %34, align 1
  %36 = load i8, i8* %29, align 1
  %37 = icmp eq i8 %35, %36
  br i1 %37, label %39, label %38

38:                                               ; preds = %43, %33
  br label %30

39:                                               ; preds = %33, %43
  %40 = phi i8* [ %44, %43 ], [ %34, %33 ]
  %41 = phi i8* [ %45, %43 ], [ %29, %33 ]
  %42 = icmp eq i8* %41, %1
  br i1 %42, label %49, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds i8, i8* %40, i64 -1
  %45 = getelementptr inbounds i8, i8* %41, i64 -1
  %46 = load i8, i8* %44, align 1
  %47 = load i8, i8* %45, align 1
  %48 = icmp eq i8 %46, %47
  br i1 %48, label %39, label %38

49:                                               ; preds = %39
  %50 = icmp eq i8* %40, %20
  br i1 %50, label %54, label %51

51:                                               ; preds = %49
  %52 = ptrtoint i8* %40 to i64
  %53 = sub i64 %52, %22
  br label %54

54:                                               ; preds = %30, %13, %10, %49, %51, %4
  %55 = phi i64 [ -1, %4 ], [ %12, %10 ], [ %53, %51 ], [ -1, %49 ], [ -1, %13 ], [ -1, %30 ]
  ret i64 %55
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZNK6google8protobuf11StringPiece5rfindEcm(%"class.google::protobuf::StringPiece"* nocapture readonly, i8 signext, i64) local_unnamed_addr #8 align 2 {
  %4 = getelementptr inbounds %"class.google::protobuf::StringPiece", %"class.google::protobuf::StringPiece"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp slt i64 %5, 1
  br i1 %6, label %23, label %7

7:                                                ; preds = %3
  %8 = add nsw i64 %5, -1
  %9 = icmp ult i64 %8, %2
  %10 = select i1 %9, i64 %8, i64 %2
  %11 = icmp sgt i64 %10, -1
  br i1 %11, label %12, label %23

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.google::protobuf::StringPiece", %"class.google::protobuf::StringPiece"* %0, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  br label %15

15:                                               ; preds = %12, %20
  %16 = phi i64 [ %10, %12 ], [ %21, %20 ]
  %17 = getelementptr inbounds i8, i8* %14, i64 %16
  %18 = load i8, i8* %17, align 1
  %19 = icmp eq i8 %18, %1
  br i1 %19, label %23, label %20

20:                                               ; preds = %15
  %21 = add nsw i64 %16, -1
  %22 = icmp sgt i64 %16, 0
  br i1 %22, label %15, label %23

23:                                               ; preds = %15, %20, %7, %3
  %24 = phi i64 [ -1, %3 ], [ -1, %7 ], [ %16, %15 ], [ -1, %20 ]
  ret i64 %24
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZNK6google8protobuf11StringPiece13find_first_ofES1_m(%"class.google::protobuf::StringPiece"* nocapture readonly, i8* nocapture readonly, i64, i64) local_unnamed_addr #8 align 2 {
  %5 = alloca [256 x i8], align 16
  %6 = getelementptr inbounds %"class.google::protobuf::StringPiece", %"class.google::protobuf::StringPiece"* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp slt i64 %7, 1
  %9 = icmp slt i64 %2, 1
  %10 = or i1 %9, %8
  br i1 %10, label %91, label %11

11:                                               ; preds = %4
  %12 = icmp eq i64 %2, 1
  br i1 %12, label %13, label %28

13:                                               ; preds = %11
  %14 = icmp ugt i64 %7, %3
  br i1 %14, label %15, label %91

15:                                               ; preds = %13
  %16 = load i8, i8* %1, align 1
  %17 = getelementptr inbounds %"class.google::protobuf::StringPiece", %"class.google::protobuf::StringPiece"* %0, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 %3
  %20 = sext i8 %16 to i32
  %21 = sub i64 %7, %3
  %22 = tail call i8* @memchr(i8* %19, i32 %20, i64 %21) #13
  %23 = icmp eq i8* %22, null
  %24 = ptrtoint i8* %22 to i64
  %25 = ptrtoint i8* %18 to i64
  %26 = sub i64 %24, %25
  %27 = select i1 %23, i64 -1, i64 %26
  br label %91

28:                                               ; preds = %11
  %29 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %29) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %29, i8 0, i64 256, i1 false)
  %30 = add i64 %2, -1
  %31 = and i64 %2, 3
  %32 = icmp ult i64 %30, 3
  br i1 %32, label %60, label %33

33:                                               ; preds = %28
  %34 = sub i64 %2, %31
  br label %35

35:                                               ; preds = %35, %33
  %36 = phi i64 [ 0, %33 ], [ %57, %35 ]
  %37 = phi i64 [ %34, %33 ], [ %58, %35 ]
  %38 = getelementptr inbounds i8, i8* %1, i64 %36
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i64
  %41 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 %40
  store i8 1, i8* %41, align 1
  %42 = or i64 %36, 1
  %43 = getelementptr inbounds i8, i8* %1, i64 %42
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i64
  %46 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 %45
  store i8 1, i8* %46, align 1
  %47 = or i64 %36, 2
  %48 = getelementptr inbounds i8, i8* %1, i64 %47
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i64
  %51 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 %50
  store i8 1, i8* %51, align 1
  %52 = or i64 %36, 3
  %53 = getelementptr inbounds i8, i8* %1, i64 %52
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i64
  %56 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 %55
  store i8 1, i8* %56, align 1
  %57 = add nuw nsw i64 %36, 4
  %58 = add i64 %37, -4
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %35

60:                                               ; preds = %35, %28
  %61 = phi i64 [ 0, %28 ], [ %57, %35 ]
  %62 = icmp eq i64 %31, 0
  br i1 %62, label %73, label %63

63:                                               ; preds = %60, %63
  %64 = phi i64 [ %70, %63 ], [ %61, %60 ]
  %65 = phi i64 [ %71, %63 ], [ %31, %60 ]
  %66 = getelementptr inbounds i8, i8* %1, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 %68
  store i8 1, i8* %69, align 1
  %70 = add nuw nsw i64 %64, 1
  %71 = add i64 %65, -1
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %63, !llvm.loop !2

73:                                               ; preds = %63, %60
  %74 = icmp sgt i64 %7, %3
  br i1 %74, label %75, label %89

75:                                               ; preds = %73
  %76 = getelementptr inbounds %"class.google::protobuf::StringPiece", %"class.google::protobuf::StringPiece"* %0, i64 0, i32 0
  %77 = load i8*, i8** %76, align 8
  br label %78

78:                                               ; preds = %86, %75
  %79 = phi i64 [ %3, %75 ], [ %87, %86 ]
  %80 = getelementptr inbounds i8, i8* %77, i64 %79
  %81 = load i8, i8* %80, align 1
  %82 = zext i8 %81 to i64
  %83 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 %82
  %84 = load i8, i8* %83, align 1, !range !4
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %78
  %87 = add i64 %79, 1
  %88 = icmp eq i64 %87, %7
  br i1 %88, label %89, label %78

89:                                               ; preds = %78, %86, %73
  %90 = phi i64 [ -1, %73 ], [ -1, %86 ], [ %79, %78 ]
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %29) #12
  br label %91

91:                                               ; preds = %15, %13, %4, %89
  %92 = phi i64 [ %90, %89 ], [ -1, %4 ], [ -1, %13 ], [ %27, %15 ]
  ret i64 %92
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZNK6google8protobuf11StringPiece17find_first_not_ofES1_m(%"class.google::protobuf::StringPiece"* nocapture readonly, i8* nocapture readonly, i64, i64) local_unnamed_addr #8 align 2 {
  %5 = alloca [256 x i8], align 16
  %6 = getelementptr inbounds %"class.google::protobuf::StringPiece", %"class.google::protobuf::StringPiece"* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp slt i64 %7, 1
  br i1 %8, label %90, label %9

9:                                                ; preds = %4
  %10 = icmp slt i64 %2, 1
  br i1 %10, label %90, label %11

11:                                               ; preds = %9
  %12 = icmp eq i64 %2, 1
  br i1 %12, label %13, label %27

13:                                               ; preds = %11
  %14 = load i8, i8* %1, align 1
  %15 = icmp ugt i64 %7, %3
  br i1 %15, label %16, label %90

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.google::protobuf::StringPiece", %"class.google::protobuf::StringPiece"* %0, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  br label %19

19:                                               ; preds = %24, %16
  %20 = phi i64 [ %3, %16 ], [ %25, %24 ]
  %21 = getelementptr inbounds i8, i8* %18, i64 %20
  %22 = load i8, i8* %21, align 1
  %23 = icmp eq i8 %22, %14
  br i1 %23, label %24, label %90

24:                                               ; preds = %19
  %25 = add i64 %20, 1
  %26 = icmp eq i64 %25, %7
  br i1 %26, label %90, label %19

27:                                               ; preds = %11
  %28 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %28) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %28, i8 0, i64 256, i1 false)
  %29 = add i64 %2, -1
  %30 = and i64 %2, 3
  %31 = icmp ult i64 %29, 3
  br i1 %31, label %59, label %32

32:                                               ; preds = %27
  %33 = sub i64 %2, %30
  br label %34

34:                                               ; preds = %34, %32
  %35 = phi i64 [ 0, %32 ], [ %56, %34 ]
  %36 = phi i64 [ %33, %32 ], [ %57, %34 ]
  %37 = getelementptr inbounds i8, i8* %1, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 %39
  store i8 1, i8* %40, align 1
  %41 = or i64 %35, 1
  %42 = getelementptr inbounds i8, i8* %1, i64 %41
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i64
  %45 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 %44
  store i8 1, i8* %45, align 1
  %46 = or i64 %35, 2
  %47 = getelementptr inbounds i8, i8* %1, i64 %46
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i64
  %50 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 %49
  store i8 1, i8* %50, align 1
  %51 = or i64 %35, 3
  %52 = getelementptr inbounds i8, i8* %1, i64 %51
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 %54
  store i8 1, i8* %55, align 1
  %56 = add nuw nsw i64 %35, 4
  %57 = add i64 %36, -4
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %59, label %34

59:                                               ; preds = %34, %27
  %60 = phi i64 [ 0, %27 ], [ %56, %34 ]
  %61 = icmp eq i64 %30, 0
  br i1 %61, label %72, label %62

62:                                               ; preds = %59, %62
  %63 = phi i64 [ %69, %62 ], [ %60, %59 ]
  %64 = phi i64 [ %70, %62 ], [ %30, %59 ]
  %65 = getelementptr inbounds i8, i8* %1, i64 %63
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i64
  %68 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 %67
  store i8 1, i8* %68, align 1
  %69 = add nuw nsw i64 %63, 1
  %70 = add i64 %64, -1
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %72, label %62, !llvm.loop !5

72:                                               ; preds = %62, %59
  %73 = icmp sgt i64 %7, %3
  br i1 %73, label %74, label %88

74:                                               ; preds = %72
  %75 = getelementptr inbounds %"class.google::protobuf::StringPiece", %"class.google::protobuf::StringPiece"* %0, i64 0, i32 0
  %76 = load i8*, i8** %75, align 8
  br label %77

77:                                               ; preds = %85, %74
  %78 = phi i64 [ %3, %74 ], [ %86, %85 ]
  %79 = getelementptr inbounds i8, i8* %76, i64 %78
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i64
  %82 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 %81
  %83 = load i8, i8* %82, align 1, !range !4
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %88, label %85

85:                                               ; preds = %77
  %86 = add i64 %78, 1
  %87 = icmp eq i64 %86, %7
  br i1 %87, label %88, label %77

88:                                               ; preds = %77, %85, %72
  %89 = phi i64 [ -1, %72 ], [ -1, %85 ], [ %78, %77 ]
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %28) #12
  br label %90

90:                                               ; preds = %24, %19, %13, %9, %4, %88
  %91 = phi i64 [ %89, %88 ], [ -1, %4 ], [ 0, %9 ], [ -1, %13 ], [ -1, %24 ], [ %20, %19 ]
  ret i64 %91
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK6google8protobuf11StringPiece17find_first_not_ofEcm(%"class.google::protobuf::StringPiece"* nocapture readonly, i8 signext, i64) local_unnamed_addr #7 align 2 {
  %4 = getelementptr inbounds %"class.google::protobuf::StringPiece", %"class.google::protobuf::StringPiece"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp sgt i64 %5, 0
  %7 = icmp ugt i64 %5, %2
  %8 = and i1 %6, %7
  br i1 %8, label %9, label %20

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.google::protobuf::StringPiece", %"class.google::protobuf::StringPiece"* %0, i64 0, i32 0
  %11 = load i8*, i8** %10, align 8
  br label %12

12:                                               ; preds = %17, %9
  %13 = phi i64 [ %2, %9 ], [ %18, %17 ]
  %14 = getelementptr inbounds i8, i8* %11, i64 %13
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, %1
  br i1 %16, label %17, label %20

17:                                               ; preds = %12
  %18 = add i64 %13, 1
  %19 = icmp eq i64 %18, %5
  br i1 %19, label %20, label %12

20:                                               ; preds = %12, %17, %3
  %21 = phi i64 [ -1, %3 ], [ %13, %12 ], [ -1, %17 ]
  ret i64 %21
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZNK6google8protobuf11StringPiece12find_last_ofES1_m(%"class.google::protobuf::StringPiece"* nocapture readonly, i8* nocapture readonly, i64, i64) local_unnamed_addr #8 align 2 {
  %5 = alloca [256 x i8], align 16
  %6 = getelementptr inbounds %"class.google::protobuf::StringPiece", %"class.google::protobuf::StringPiece"* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp slt i64 %7, 1
  %9 = icmp slt i64 %2, 1
  %10 = or i1 %9, %8
  br i1 %10, label %96, label %11

11:                                               ; preds = %4
  %12 = icmp eq i64 %2, 1
  br i1 %12, label %13, label %30

13:                                               ; preds = %11
  %14 = load i8, i8* %1, align 1
  %15 = add nsw i64 %7, -1
  %16 = icmp ult i64 %15, %3
  %17 = select i1 %16, i64 %15, i64 %3
  %18 = icmp sgt i64 %17, -1
  br i1 %18, label %19, label %96

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.google::protobuf::StringPiece", %"class.google::protobuf::StringPiece"* %0, i64 0, i32 0
  %21 = load i8*, i8** %20, align 8
  br label %22

22:                                               ; preds = %27, %19
  %23 = phi i64 [ %17, %19 ], [ %28, %27 ]
  %24 = getelementptr inbounds i8, i8* %21, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = icmp eq i8 %25, %14
  br i1 %26, label %96, label %27

27:                                               ; preds = %22
  %28 = add nsw i64 %23, -1
  %29 = icmp sgt i64 %23, 0
  br i1 %29, label %22, label %96

30:                                               ; preds = %11
  %31 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %31) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %31, i8 0, i64 256, i1 false)
  %32 = add i64 %2, -1
  %33 = and i64 %2, 3
  %34 = icmp ult i64 %32, 3
  br i1 %34, label %62, label %35

35:                                               ; preds = %30
  %36 = sub i64 %2, %33
  br label %37

37:                                               ; preds = %37, %35
  %38 = phi i64 [ 0, %35 ], [ %59, %37 ]
  %39 = phi i64 [ %36, %35 ], [ %60, %37 ]
  %40 = getelementptr inbounds i8, i8* %1, i64 %38
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i64
  %43 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 %42
  store i8 1, i8* %43, align 1
  %44 = or i64 %38, 1
  %45 = getelementptr inbounds i8, i8* %1, i64 %44
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i64
  %48 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 %47
  store i8 1, i8* %48, align 1
  %49 = or i64 %38, 2
  %50 = getelementptr inbounds i8, i8* %1, i64 %49
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i64
  %53 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 %52
  store i8 1, i8* %53, align 1
  %54 = or i64 %38, 3
  %55 = getelementptr inbounds i8, i8* %1, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i64
  %58 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 %57
  store i8 1, i8* %58, align 1
  %59 = add nuw nsw i64 %38, 4
  %60 = add i64 %39, -4
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %37

62:                                               ; preds = %37, %30
  %63 = phi i64 [ 0, %30 ], [ %59, %37 ]
  %64 = icmp eq i64 %33, 0
  br i1 %64, label %75, label %65

65:                                               ; preds = %62, %65
  %66 = phi i64 [ %72, %65 ], [ %63, %62 ]
  %67 = phi i64 [ %73, %65 ], [ %33, %62 ]
  %68 = getelementptr inbounds i8, i8* %1, i64 %66
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 %70
  store i8 1, i8* %71, align 1
  %72 = add nuw nsw i64 %66, 1
  %73 = add i64 %67, -1
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %75, label %65, !llvm.loop !6

75:                                               ; preds = %65, %62
  %76 = add nsw i64 %7, -1
  %77 = icmp ult i64 %76, %3
  %78 = select i1 %77, i64 %76, i64 %3
  %79 = icmp sgt i64 %78, -1
  br i1 %79, label %80, label %94

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.google::protobuf::StringPiece", %"class.google::protobuf::StringPiece"* %0, i64 0, i32 0
  %82 = load i8*, i8** %81, align 8
  br label %83

83:                                               ; preds = %80, %91
  %84 = phi i64 [ %78, %80 ], [ %92, %91 ]
  %85 = getelementptr inbounds i8, i8* %82, i64 %84
  %86 = load i8, i8* %85, align 1
  %87 = zext i8 %86 to i64
  %88 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 %87
  %89 = load i8, i8* %88, align 1, !range !4
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %83
  %92 = add nsw i64 %84, -1
  %93 = icmp sgt i64 %84, 0
  br i1 %93, label %83, label %94

94:                                               ; preds = %83, %91, %75
  %95 = phi i64 [ -1, %75 ], [ -1, %91 ], [ %84, %83 ]
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %31) #12
  br label %96

96:                                               ; preds = %27, %22, %13, %4, %94
  %97 = phi i64 [ %95, %94 ], [ -1, %4 ], [ -1, %13 ], [ %23, %22 ], [ -1, %27 ]
  ret i64 %97
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZNK6google8protobuf11StringPiece16find_last_not_ofES1_m(%"class.google::protobuf::StringPiece"* nocapture readonly, i8* nocapture readonly, i64, i64) local_unnamed_addr #8 align 2 {
  %5 = alloca [256 x i8], align 16
  %6 = getelementptr inbounds %"class.google::protobuf::StringPiece", %"class.google::protobuf::StringPiece"* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp slt i64 %7, 1
  br i1 %8, label %93, label %9

9:                                                ; preds = %4
  %10 = add nsw i64 %7, -1
  %11 = icmp ult i64 %10, %3
  %12 = select i1 %11, i64 %10, i64 %3
  %13 = icmp slt i64 %2, 1
  br i1 %13, label %93, label %14

14:                                               ; preds = %9
  %15 = icmp eq i64 %2, 1
  br i1 %15, label %16, label %30

16:                                               ; preds = %14
  %17 = load i8, i8* %1, align 1
  %18 = icmp sgt i64 %12, -1
  br i1 %18, label %19, label %93

19:                                               ; preds = %16
  %20 = getelementptr inbounds %"class.google::protobuf::StringPiece", %"class.google::protobuf::StringPiece"* %0, i64 0, i32 0
  %21 = load i8*, i8** %20, align 8
  br label %22

22:                                               ; preds = %27, %19
  %23 = phi i64 [ %12, %19 ], [ %28, %27 ]
  %24 = getelementptr inbounds i8, i8* %21, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = icmp eq i8 %25, %17
  br i1 %26, label %27, label %93

27:                                               ; preds = %22
  %28 = add nsw i64 %23, -1
  %29 = icmp sgt i64 %23, 0
  br i1 %29, label %22, label %93

30:                                               ; preds = %14
  %31 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %31) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %31, i8 0, i64 256, i1 false)
  %32 = add i64 %2, -1
  %33 = and i64 %2, 3
  %34 = icmp ult i64 %32, 3
  br i1 %34, label %62, label %35

35:                                               ; preds = %30
  %36 = sub i64 %2, %33
  br label %37

37:                                               ; preds = %37, %35
  %38 = phi i64 [ 0, %35 ], [ %59, %37 ]
  %39 = phi i64 [ %36, %35 ], [ %60, %37 ]
  %40 = getelementptr inbounds i8, i8* %1, i64 %38
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i64
  %43 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 %42
  store i8 1, i8* %43, align 1
  %44 = or i64 %38, 1
  %45 = getelementptr inbounds i8, i8* %1, i64 %44
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i64
  %48 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 %47
  store i8 1, i8* %48, align 1
  %49 = or i64 %38, 2
  %50 = getelementptr inbounds i8, i8* %1, i64 %49
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i64
  %53 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 %52
  store i8 1, i8* %53, align 1
  %54 = or i64 %38, 3
  %55 = getelementptr inbounds i8, i8* %1, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i64
  %58 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 %57
  store i8 1, i8* %58, align 1
  %59 = add nuw nsw i64 %38, 4
  %60 = add i64 %39, -4
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %37

62:                                               ; preds = %37, %30
  %63 = phi i64 [ 0, %30 ], [ %59, %37 ]
  %64 = icmp eq i64 %33, 0
  br i1 %64, label %75, label %65

65:                                               ; preds = %62, %65
  %66 = phi i64 [ %72, %65 ], [ %63, %62 ]
  %67 = phi i64 [ %73, %65 ], [ %33, %62 ]
  %68 = getelementptr inbounds i8, i8* %1, i64 %66
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 %70
  store i8 1, i8* %71, align 1
  %72 = add nuw nsw i64 %66, 1
  %73 = add i64 %67, -1
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %75, label %65, !llvm.loop !7

75:                                               ; preds = %65, %62
  %76 = icmp sgt i64 %12, -1
  br i1 %76, label %77, label %91

77:                                               ; preds = %75
  %78 = getelementptr inbounds %"class.google::protobuf::StringPiece", %"class.google::protobuf::StringPiece"* %0, i64 0, i32 0
  %79 = load i8*, i8** %78, align 8
  br label %80

80:                                               ; preds = %77, %88
  %81 = phi i64 [ %12, %77 ], [ %89, %88 ]
  %82 = getelementptr inbounds i8, i8* %79, i64 %81
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i64
  %85 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 %84
  %86 = load i8, i8* %85, align 1, !range !4
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %91, label %88

88:                                               ; preds = %80
  %89 = add nsw i64 %81, -1
  %90 = icmp sgt i64 %81, 0
  br i1 %90, label %80, label %91

91:                                               ; preds = %80, %88, %75
  %92 = phi i64 [ -1, %75 ], [ -1, %88 ], [ %81, %80 ]
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %31) #12
  br label %93

93:                                               ; preds = %27, %22, %16, %91, %9, %4
  %94 = phi i64 [ -1, %4 ], [ %92, %91 ], [ %12, %9 ], [ -1, %16 ], [ -1, %27 ], [ %23, %22 ]
  ret i64 %94
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZNK6google8protobuf11StringPiece16find_last_not_ofEcm(%"class.google::protobuf::StringPiece"* nocapture readonly, i8 signext, i64) local_unnamed_addr #8 align 2 {
  %4 = getelementptr inbounds %"class.google::protobuf::StringPiece", %"class.google::protobuf::StringPiece"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp slt i64 %5, 1
  br i1 %6, label %23, label %7

7:                                                ; preds = %3
  %8 = add nsw i64 %5, -1
  %9 = icmp ult i64 %8, %2
  %10 = select i1 %9, i64 %8, i64 %2
  %11 = icmp sgt i64 %10, -1
  br i1 %11, label %12, label %23

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.google::protobuf::StringPiece", %"class.google::protobuf::StringPiece"* %0, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  br label %15

15:                                               ; preds = %12, %20
  %16 = phi i64 [ %10, %12 ], [ %21, %20 ]
  %17 = getelementptr inbounds i8, i8* %14, i64 %16
  %18 = load i8, i8* %17, align 1
  %19 = icmp eq i8 %18, %1
  br i1 %19, label %20, label %23

20:                                               ; preds = %15
  %21 = add nsw i64 %16, -1
  %22 = icmp sgt i64 %16, 0
  br i1 %22, label %15, label %23

23:                                               ; preds = %15, %20, %7, %3
  %24 = phi i64 [ -1, %3 ], [ -1, %7 ], [ %16, %15 ], [ -1, %20 ]
  ret i64 %24
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { i8*, i64 } @_ZNK6google8protobuf11StringPiece6substrEmm(%"class.google::protobuf::StringPiece"* nocapture readonly, i64, i64) local_unnamed_addr #7 align 2 {
  %4 = getelementptr inbounds %"class.google::protobuf::StringPiece", %"class.google::protobuf::StringPiece"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp ult i64 %5, %1
  %7 = select i1 %6, i64 %5, i64 %1
  %8 = sub i64 %5, %7
  %9 = icmp ult i64 %8, %2
  %10 = select i1 %9, i64 %8, i64 %2
  %11 = getelementptr inbounds %"class.google::protobuf::StringPiece", %"class.google::protobuf::StringPiece"* %0, i64 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds i8, i8* %12, i64 %7
  %14 = insertvalue { i8*, i64 } undef, i8* %13, 0
  %15 = insertvalue { i8*, i64 } %14, i64 %10, 1
  ret { i8*, i64 } %15
}

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #10

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #11

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone }
attributes #11 = { nofree nounwind readonly }
attributes #12 = { nounwind }
attributes #13 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = !{i8 0, i8 2}
!5 = distinct !{!5, !3}
!6 = distinct !{!6, !3}
!7 = distinct !{!7, !3}
