; ModuleID = '../../media/gpu/vp8_reference_frame_vector.cc'
source_filename = "../../media/gpu/vp8_reference_frame_vector.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.media::Vp8ReferenceFrameVector" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [3 x %class.scoped_refptr] }
%class.scoped_refptr = type { %"class.media::VP8Picture"* }
%"class.media::VP8Picture" = type { %"class.media::CodecPicture.base", %"class.std::__1::unique_ptr.11" }
%"class.media::CodecPicture.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", i32, %"class.gfx::Rect", %"class.std::__1::unique_ptr", %"class.media::VideoColorSpace" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.media::DecryptConfig"* }
%"class.media::DecryptConfig" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.absl::optional", [4 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.media::SubsampleEntry"*, %"struct.media::SubsampleEntry"*, %"class.std::__1::__compressed_pair.4" }
%"struct.media::SubsampleEntry" = type { i32, i32 }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.media::SubsampleEntry"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.9 }
%union.anon.9 = type { %"class.media::EncryptionPattern" }
%"class.media::EncryptionPattern" = type { i32, i32 }
%"class.media::VideoColorSpace" = type { i8, i8, i8, i8 }
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.media::Vp8FrameHeader"* }
%"struct.media::Vp8FrameHeader" = type <{ i32, i8, i8, i8, i8, i64, i16, i8, i8, i16, i8, i8, %"struct.media::Vp8SegmentationHeader", %"struct.media::Vp8LoopFilterHeader", %"struct.media::Vp8QuantizationHeader", [6 x i8], i64, %"struct.media::Vp8EntropyHeader", i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8*, i64, [8 x i64], i64, i64, i8, i8, i8, i8, [4 x i8] }>
%"struct.media::Vp8SegmentationHeader" = type { i8, i8, i8, i32, [4 x i8], [4 x i8], [3 x i8] }
%"struct.media::Vp8LoopFilterHeader" = type { i32, i8, i8, i8, i8, [4 x i8], [4 x i8] }
%"struct.media::Vp8QuantizationHeader" = type { i8, i8, i8, i8, i8, i8 }
%"struct.media::Vp8EntropyHeader" = type { [4 x [8 x [3 x [11 x i8]]]], [4 x i8], [3 x i8], [2 x [19 x i8]] }
%"class.media::CodecPicture" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", i32, %"class.gfx::Rect", %"class.std::__1::unique_ptr", %"class.media::VideoColorSpace", [4 x i8] }>

@_ZN5media23Vp8ReferenceFrameVectorC1Ev = hidden unnamed_addr alias void (%"class.media::Vp8ReferenceFrameVector"*), void (%"class.media::Vp8ReferenceFrameVector"*)* @_ZN5media23Vp8ReferenceFrameVectorC2Ev
@_ZN5media23Vp8ReferenceFrameVectorD1Ev = hidden unnamed_addr alias void (%"class.media::Vp8ReferenceFrameVector"*), void (%"class.media::Vp8ReferenceFrameVector"*)* @_ZN5media23Vp8ReferenceFrameVectorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media23Vp8ReferenceFrameVectorC2Ev(%"class.media::Vp8ReferenceFrameVector"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.media::Vp8ReferenceFrameVector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media23Vp8ReferenceFrameVectorD2Ev(%"class.media::Vp8ReferenceFrameVector"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::Vp8ReferenceFrameVector", %"class.media::Vp8ReferenceFrameVector"* %0, i64 0, i32 0, i32 0, i64 2, i32 0
  %3 = load %"class.media::VP8Picture"*, %"class.media::VP8Picture"** %2, align 8
  %4 = icmp eq %"class.media::VP8Picture"* %3, null
  br i1 %4, label %17, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.media::VP8Picture", %"class.media::VP8Picture"* %3, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw sub i32* %7, i32 1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %17

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %6, i64 -2
  %12 = bitcast %"class.base::RefCountedThreadSafe"* %11 to %"class.media::CodecPicture"*
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %11 to void (%"class.media::CodecPicture"*)***
  %14 = load void (%"class.media::CodecPicture"*)**, void (%"class.media::CodecPicture"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.media::CodecPicture"*)*, void (%"class.media::CodecPicture"*)** %14, i64 1
  %16 = load void (%"class.media::CodecPicture"*)*, void (%"class.media::CodecPicture"*)** %15, align 8
  tail call void %16(%"class.media::CodecPicture"* nonnull %12) #3
  br label %17

17:                                               ; preds = %10, %5, %1
  %18 = getelementptr inbounds %"class.media::Vp8ReferenceFrameVector", %"class.media::Vp8ReferenceFrameVector"* %0, i64 0, i32 0, i32 0, i64 1, i32 0
  %19 = load %"class.media::VP8Picture"*, %"class.media::VP8Picture"** %18, align 8
  %20 = icmp eq %"class.media::VP8Picture"* %19, null
  br i1 %20, label %33, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.media::VP8Picture", %"class.media::VP8Picture"* %19, i64 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw sub i32* %23, i32 1 acq_rel
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %33

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %22, i64 -2
  %28 = bitcast %"class.base::RefCountedThreadSafe"* %27 to %"class.media::CodecPicture"*
  %29 = bitcast %"class.base::RefCountedThreadSafe"* %27 to void (%"class.media::CodecPicture"*)***
  %30 = load void (%"class.media::CodecPicture"*)**, void (%"class.media::CodecPicture"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.media::CodecPicture"*)*, void (%"class.media::CodecPicture"*)** %30, i64 1
  %32 = load void (%"class.media::CodecPicture"*)*, void (%"class.media::CodecPicture"*)** %31, align 8
  tail call void %32(%"class.media::CodecPicture"* nonnull %28) #3
  br label %33

33:                                               ; preds = %26, %21, %17
  %34 = getelementptr inbounds %"class.media::Vp8ReferenceFrameVector", %"class.media::Vp8ReferenceFrameVector"* %0, i64 0, i32 0, i32 0, i64 0, i32 0
  %35 = load %"class.media::VP8Picture"*, %"class.media::VP8Picture"** %34, align 8
  %36 = icmp eq %"class.media::VP8Picture"* %35, null
  br i1 %36, label %49, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.media::VP8Picture", %"class.media::VP8Picture"* %35, i64 0, i32 0, i32 1
  %39 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw sub i32* %39, i32 1 acq_rel
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %42, label %49

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %38, i64 -2
  %44 = bitcast %"class.base::RefCountedThreadSafe"* %43 to %"class.media::CodecPicture"*
  %45 = bitcast %"class.base::RefCountedThreadSafe"* %43 to void (%"class.media::CodecPicture"*)***
  %46 = load void (%"class.media::CodecPicture"*)**, void (%"class.media::CodecPicture"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.media::CodecPicture"*)*, void (%"class.media::CodecPicture"*)** %46, i64 1
  %48 = load void (%"class.media::CodecPicture"*)*, void (%"class.media::CodecPicture"*)** %47, align 8
  tail call void %48(%"class.media::CodecPicture"* nonnull %44) #3
  br label %49

49:                                               ; preds = %33, %37, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media23Vp8ReferenceFrameVector7RefreshE13scoped_refptrINS_10VP8PictureEE(%"class.media::Vp8ReferenceFrameVector"* nocapture, %"class.media::VP8Picture"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.media::VP8Picture", %"class.media::VP8Picture"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.media::Vp8FrameHeader"*, %"struct.media::Vp8FrameHeader"** %3, align 8
  %5 = getelementptr inbounds %"struct.media::Vp8FrameHeader", %"struct.media::Vp8FrameHeader"* %4, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %75

8:                                                ; preds = %2
  %9 = icmp eq %"class.media::VP8Picture"* %1, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %8
  %11 = getelementptr inbounds %"class.media::VP8Picture", %"class.media::VP8Picture"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw add i32* %11, i32 1 monotonic
  br label %13

13:                                               ; preds = %8, %10
  %14 = ptrtoint %"class.media::VP8Picture"* %1 to i64
  %15 = bitcast %"class.media::Vp8ReferenceFrameVector"* %0 to i64*
  %16 = getelementptr inbounds %"class.media::Vp8ReferenceFrameVector", %"class.media::Vp8ReferenceFrameVector"* %0, i64 0, i32 0, i32 0, i64 0, i32 0
  %17 = load %"class.media::VP8Picture"*, %"class.media::VP8Picture"** %16, align 8
  store i64 %14, i64* %15, align 8
  %18 = icmp eq %"class.media::VP8Picture"* %17, null
  br i1 %18, label %31, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.media::VP8Picture", %"class.media::VP8Picture"* %17, i64 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw sub i32* %21, i32 1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %31

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %20, i64 -2
  %26 = bitcast %"class.base::RefCountedThreadSafe"* %25 to %"class.media::CodecPicture"*
  %27 = bitcast %"class.base::RefCountedThreadSafe"* %25 to void (%"class.media::CodecPicture"*)***
  %28 = load void (%"class.media::CodecPicture"*)**, void (%"class.media::CodecPicture"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.media::CodecPicture"*)*, void (%"class.media::CodecPicture"*)** %28, i64 1
  %30 = load void (%"class.media::CodecPicture"*)*, void (%"class.media::CodecPicture"*)** %29, align 8
  tail call void %30(%"class.media::CodecPicture"* nonnull %26) #3
  br label %31

31:                                               ; preds = %13, %19, %24
  br i1 %9, label %35, label %32

32:                                               ; preds = %31
  %33 = getelementptr inbounds %"class.media::VP8Picture", %"class.media::VP8Picture"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 1 monotonic
  br label %35

35:                                               ; preds = %31, %32
  %36 = getelementptr inbounds %"class.media::Vp8ReferenceFrameVector", %"class.media::Vp8ReferenceFrameVector"* %0, i64 0, i32 0, i32 0, i64 1
  %37 = bitcast %class.scoped_refptr* %36 to i64*
  %38 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %36, i64 0, i32 0
  %39 = load %"class.media::VP8Picture"*, %"class.media::VP8Picture"** %38, align 8
  store i64 %14, i64* %37, align 8
  %40 = icmp eq %"class.media::VP8Picture"* %39, null
  br i1 %40, label %53, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.media::VP8Picture", %"class.media::VP8Picture"* %39, i64 0, i32 0, i32 1
  %43 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = atomicrmw sub i32* %43, i32 1 acq_rel
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %46, label %53

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %42, i64 -2
  %48 = bitcast %"class.base::RefCountedThreadSafe"* %47 to %"class.media::CodecPicture"*
  %49 = bitcast %"class.base::RefCountedThreadSafe"* %47 to void (%"class.media::CodecPicture"*)***
  %50 = load void (%"class.media::CodecPicture"*)**, void (%"class.media::CodecPicture"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.media::CodecPicture"*)*, void (%"class.media::CodecPicture"*)** %50, i64 1
  %52 = load void (%"class.media::CodecPicture"*)*, void (%"class.media::CodecPicture"*)** %51, align 8
  tail call void %52(%"class.media::CodecPicture"* nonnull %48) #3
  br label %53

53:                                               ; preds = %35, %41, %46
  br i1 %9, label %57, label %54

54:                                               ; preds = %53
  %55 = getelementptr inbounds %"class.media::VP8Picture", %"class.media::VP8Picture"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = atomicrmw add i32* %55, i32 1 monotonic
  br label %57

57:                                               ; preds = %53, %54
  %58 = getelementptr inbounds %"class.media::Vp8ReferenceFrameVector", %"class.media::Vp8ReferenceFrameVector"* %0, i64 0, i32 0, i32 0, i64 2
  %59 = bitcast %class.scoped_refptr* %58 to i64*
  %60 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %58, i64 0, i32 0
  %61 = load %"class.media::VP8Picture"*, %"class.media::VP8Picture"** %60, align 8
  store i64 %14, i64* %59, align 8
  %62 = icmp eq %"class.media::VP8Picture"* %61, null
  br i1 %62, label %270, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.media::VP8Picture", %"class.media::VP8Picture"* %61, i64 0, i32 0, i32 1
  %65 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %64, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = atomicrmw sub i32* %65, i32 1 acq_rel
  %67 = icmp eq i32 %66, 1
  br i1 %67, label %68, label %270

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %64, i64 -2
  %70 = bitcast %"class.base::RefCountedThreadSafe"* %69 to %"class.media::CodecPicture"*
  %71 = bitcast %"class.base::RefCountedThreadSafe"* %69 to void (%"class.media::CodecPicture"*)***
  %72 = load void (%"class.media::CodecPicture"*)**, void (%"class.media::CodecPicture"*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.media::CodecPicture"*)*, void (%"class.media::CodecPicture"*)** %72, i64 1
  %74 = load void (%"class.media::CodecPicture"*)*, void (%"class.media::CodecPicture"*)** %73, align 8
  tail call void %74(%"class.media::CodecPicture"* nonnull %70) #3
  br label %270

75:                                               ; preds = %2
  %76 = getelementptr inbounds %"struct.media::Vp8FrameHeader", %"struct.media::Vp8FrameHeader"* %4, i64 0, i32 20
  %77 = load i8, i8* %76, align 1, !range !2
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %103, label %79

79:                                               ; preds = %75
  %80 = icmp eq %"class.media::VP8Picture"* %1, null
  br i1 %80, label %84, label %81

81:                                               ; preds = %79
  %82 = getelementptr inbounds %"class.media::VP8Picture", %"class.media::VP8Picture"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = atomicrmw add i32* %82, i32 1 monotonic
  br label %84

84:                                               ; preds = %79, %81
  %85 = getelementptr inbounds %"class.media::Vp8ReferenceFrameVector", %"class.media::Vp8ReferenceFrameVector"* %0, i64 0, i32 0, i32 0, i64 2
  %86 = ptrtoint %"class.media::VP8Picture"* %1 to i64
  %87 = bitcast %class.scoped_refptr* %85 to i64*
  %88 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %85, i64 0, i32 0
  %89 = load %"class.media::VP8Picture"*, %"class.media::VP8Picture"** %88, align 8
  store i64 %86, i64* %87, align 8
  %90 = icmp eq %"class.media::VP8Picture"* %89, null
  br i1 %90, label %158, label %91

91:                                               ; preds = %84
  %92 = getelementptr inbounds %"class.media::VP8Picture", %"class.media::VP8Picture"* %89, i64 0, i32 0, i32 1
  %93 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %92, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = atomicrmw sub i32* %93, i32 1 acq_rel
  %95 = icmp eq i32 %94, 1
  br i1 %95, label %96, label %158

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %92, i64 -2
  %98 = bitcast %"class.base::RefCountedThreadSafe"* %97 to %"class.media::CodecPicture"*
  %99 = bitcast %"class.base::RefCountedThreadSafe"* %97 to void (%"class.media::CodecPicture"*)***
  %100 = load void (%"class.media::CodecPicture"*)**, void (%"class.media::CodecPicture"*)*** %99, align 8
  %101 = getelementptr inbounds void (%"class.media::CodecPicture"*)*, void (%"class.media::CodecPicture"*)** %100, i64 1
  %102 = load void (%"class.media::CodecPicture"*)*, void (%"class.media::CodecPicture"*)** %101, align 8
  tail call void %102(%"class.media::CodecPicture"* nonnull %98) #3
  br label %158

103:                                              ; preds = %75
  %104 = getelementptr inbounds %"struct.media::Vp8FrameHeader", %"struct.media::Vp8FrameHeader"* %4, i64 0, i32 22
  %105 = load i32, i32* %104, align 4
  switch i32 %105, label %158 [
    i32 1, label %106
    i32 2, label %132
  ]

106:                                              ; preds = %103
  %107 = getelementptr inbounds %"class.media::Vp8ReferenceFrameVector", %"class.media::Vp8ReferenceFrameVector"* %0, i64 0, i32 0, i32 0, i64 0, i32 0
  %108 = load %"class.media::VP8Picture"*, %"class.media::VP8Picture"** %107, align 8
  %109 = icmp eq %"class.media::VP8Picture"* %108, null
  br i1 %109, label %113, label %110

110:                                              ; preds = %106
  %111 = getelementptr inbounds %"class.media::VP8Picture", %"class.media::VP8Picture"* %108, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = atomicrmw add i32* %111, i32 1 monotonic
  br label %113

113:                                              ; preds = %106, %110
  %114 = getelementptr inbounds %"class.media::Vp8ReferenceFrameVector", %"class.media::Vp8ReferenceFrameVector"* %0, i64 0, i32 0, i32 0, i64 2
  %115 = ptrtoint %"class.media::VP8Picture"* %108 to i64
  %116 = bitcast %class.scoped_refptr* %114 to i64*
  %117 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %114, i64 0, i32 0
  %118 = load %"class.media::VP8Picture"*, %"class.media::VP8Picture"** %117, align 8
  store i64 %115, i64* %116, align 8
  %119 = icmp eq %"class.media::VP8Picture"* %118, null
  br i1 %119, label %158, label %120

120:                                              ; preds = %113
  %121 = getelementptr inbounds %"class.media::VP8Picture", %"class.media::VP8Picture"* %118, i64 0, i32 0, i32 1
  %122 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %121, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = atomicrmw sub i32* %122, i32 1 acq_rel
  %124 = icmp eq i32 %123, 1
  br i1 %124, label %125, label %158

125:                                              ; preds = %120
  %126 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %121, i64 -2
  %127 = bitcast %"class.base::RefCountedThreadSafe"* %126 to %"class.media::CodecPicture"*
  %128 = bitcast %"class.base::RefCountedThreadSafe"* %126 to void (%"class.media::CodecPicture"*)***
  %129 = load void (%"class.media::CodecPicture"*)**, void (%"class.media::CodecPicture"*)*** %128, align 8
  %130 = getelementptr inbounds void (%"class.media::CodecPicture"*)*, void (%"class.media::CodecPicture"*)** %129, i64 1
  %131 = load void (%"class.media::CodecPicture"*)*, void (%"class.media::CodecPicture"*)** %130, align 8
  tail call void %131(%"class.media::CodecPicture"* nonnull %127) #3
  br label %158

132:                                              ; preds = %103
  %133 = getelementptr inbounds %"class.media::Vp8ReferenceFrameVector", %"class.media::Vp8ReferenceFrameVector"* %0, i64 0, i32 0, i32 0, i64 1, i32 0
  %134 = load %"class.media::VP8Picture"*, %"class.media::VP8Picture"** %133, align 8
  %135 = icmp eq %"class.media::VP8Picture"* %134, null
  br i1 %135, label %139, label %136

136:                                              ; preds = %132
  %137 = getelementptr inbounds %"class.media::VP8Picture", %"class.media::VP8Picture"* %134, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = atomicrmw add i32* %137, i32 1 monotonic
  br label %139

139:                                              ; preds = %132, %136
  %140 = getelementptr inbounds %"class.media::Vp8ReferenceFrameVector", %"class.media::Vp8ReferenceFrameVector"* %0, i64 0, i32 0, i32 0, i64 2
  %141 = ptrtoint %"class.media::VP8Picture"* %134 to i64
  %142 = bitcast %class.scoped_refptr* %140 to i64*
  %143 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %140, i64 0, i32 0
  %144 = load %"class.media::VP8Picture"*, %"class.media::VP8Picture"** %143, align 8
  store i64 %141, i64* %142, align 8
  %145 = icmp eq %"class.media::VP8Picture"* %144, null
  br i1 %145, label %158, label %146

146:                                              ; preds = %139
  %147 = getelementptr inbounds %"class.media::VP8Picture", %"class.media::VP8Picture"* %144, i64 0, i32 0, i32 1
  %148 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %147, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = atomicrmw sub i32* %148, i32 1 acq_rel
  %150 = icmp eq i32 %149, 1
  br i1 %150, label %151, label %158

151:                                              ; preds = %146
  %152 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %147, i64 -2
  %153 = bitcast %"class.base::RefCountedThreadSafe"* %152 to %"class.media::CodecPicture"*
  %154 = bitcast %"class.base::RefCountedThreadSafe"* %152 to void (%"class.media::CodecPicture"*)***
  %155 = load void (%"class.media::CodecPicture"*)**, void (%"class.media::CodecPicture"*)*** %154, align 8
  %156 = getelementptr inbounds void (%"class.media::CodecPicture"*)*, void (%"class.media::CodecPicture"*)** %155, i64 1
  %157 = load void (%"class.media::CodecPicture"*)*, void (%"class.media::CodecPicture"*)** %156, align 8
  tail call void %157(%"class.media::CodecPicture"* nonnull %153) #3
  br label %158

158:                                              ; preds = %151, %146, %139, %125, %120, %113, %96, %91, %84, %103
  %159 = load %"struct.media::Vp8FrameHeader"*, %"struct.media::Vp8FrameHeader"** %3, align 8
  %160 = getelementptr inbounds %"struct.media::Vp8FrameHeader", %"struct.media::Vp8FrameHeader"* %159, i64 0, i32 19
  %161 = load i8, i8* %160, align 2, !range !2
  %162 = icmp eq i8 %161, 0
  br i1 %162, label %187, label %163

163:                                              ; preds = %158
  %164 = icmp eq %"class.media::VP8Picture"* %1, null
  br i1 %164, label %168, label %165

165:                                              ; preds = %163
  %166 = getelementptr inbounds %"class.media::VP8Picture", %"class.media::VP8Picture"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %167 = atomicrmw add i32* %166, i32 1 monotonic
  br label %168

168:                                              ; preds = %163, %165
  %169 = getelementptr inbounds %"class.media::Vp8ReferenceFrameVector", %"class.media::Vp8ReferenceFrameVector"* %0, i64 0, i32 0, i32 0, i64 1
  %170 = ptrtoint %"class.media::VP8Picture"* %1 to i64
  %171 = bitcast %class.scoped_refptr* %169 to i64*
  %172 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %169, i64 0, i32 0
  %173 = load %"class.media::VP8Picture"*, %"class.media::VP8Picture"** %172, align 8
  store i64 %170, i64* %171, align 8
  %174 = icmp eq %"class.media::VP8Picture"* %173, null
  br i1 %174, label %242, label %175

175:                                              ; preds = %168
  %176 = getelementptr inbounds %"class.media::VP8Picture", %"class.media::VP8Picture"* %173, i64 0, i32 0, i32 1
  %177 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %176, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %178 = atomicrmw sub i32* %177, i32 1 acq_rel
  %179 = icmp eq i32 %178, 1
  br i1 %179, label %180, label %242

180:                                              ; preds = %175
  %181 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %176, i64 -2
  %182 = bitcast %"class.base::RefCountedThreadSafe"* %181 to %"class.media::CodecPicture"*
  %183 = bitcast %"class.base::RefCountedThreadSafe"* %181 to void (%"class.media::CodecPicture"*)***
  %184 = load void (%"class.media::CodecPicture"*)**, void (%"class.media::CodecPicture"*)*** %183, align 8
  %185 = getelementptr inbounds void (%"class.media::CodecPicture"*)*, void (%"class.media::CodecPicture"*)** %184, i64 1
  %186 = load void (%"class.media::CodecPicture"*)*, void (%"class.media::CodecPicture"*)** %185, align 8
  tail call void %186(%"class.media::CodecPicture"* nonnull %182) #3
  br label %242

187:                                              ; preds = %158
  %188 = getelementptr inbounds %"struct.media::Vp8FrameHeader", %"struct.media::Vp8FrameHeader"* %159, i64 0, i32 21
  %189 = load i32, i32* %188, align 8
  switch i32 %189, label %242 [
    i32 1, label %190
    i32 2, label %216
  ]

190:                                              ; preds = %187
  %191 = getelementptr inbounds %"class.media::Vp8ReferenceFrameVector", %"class.media::Vp8ReferenceFrameVector"* %0, i64 0, i32 0, i32 0, i64 0, i32 0
  %192 = load %"class.media::VP8Picture"*, %"class.media::VP8Picture"** %191, align 8
  %193 = icmp eq %"class.media::VP8Picture"* %192, null
  br i1 %193, label %197, label %194

194:                                              ; preds = %190
  %195 = getelementptr inbounds %"class.media::VP8Picture", %"class.media::VP8Picture"* %192, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = atomicrmw add i32* %195, i32 1 monotonic
  br label %197

197:                                              ; preds = %190, %194
  %198 = getelementptr inbounds %"class.media::Vp8ReferenceFrameVector", %"class.media::Vp8ReferenceFrameVector"* %0, i64 0, i32 0, i32 0, i64 1
  %199 = ptrtoint %"class.media::VP8Picture"* %192 to i64
  %200 = bitcast %class.scoped_refptr* %198 to i64*
  %201 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %198, i64 0, i32 0
  %202 = load %"class.media::VP8Picture"*, %"class.media::VP8Picture"** %201, align 8
  store i64 %199, i64* %200, align 8
  %203 = icmp eq %"class.media::VP8Picture"* %202, null
  br i1 %203, label %242, label %204

204:                                              ; preds = %197
  %205 = getelementptr inbounds %"class.media::VP8Picture", %"class.media::VP8Picture"* %202, i64 0, i32 0, i32 1
  %206 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %205, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %207 = atomicrmw sub i32* %206, i32 1 acq_rel
  %208 = icmp eq i32 %207, 1
  br i1 %208, label %209, label %242

209:                                              ; preds = %204
  %210 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %205, i64 -2
  %211 = bitcast %"class.base::RefCountedThreadSafe"* %210 to %"class.media::CodecPicture"*
  %212 = bitcast %"class.base::RefCountedThreadSafe"* %210 to void (%"class.media::CodecPicture"*)***
  %213 = load void (%"class.media::CodecPicture"*)**, void (%"class.media::CodecPicture"*)*** %212, align 8
  %214 = getelementptr inbounds void (%"class.media::CodecPicture"*)*, void (%"class.media::CodecPicture"*)** %213, i64 1
  %215 = load void (%"class.media::CodecPicture"*)*, void (%"class.media::CodecPicture"*)** %214, align 8
  tail call void %215(%"class.media::CodecPicture"* nonnull %211) #3
  br label %242

216:                                              ; preds = %187
  %217 = getelementptr inbounds %"class.media::Vp8ReferenceFrameVector", %"class.media::Vp8ReferenceFrameVector"* %0, i64 0, i32 0, i32 0, i64 2, i32 0
  %218 = load %"class.media::VP8Picture"*, %"class.media::VP8Picture"** %217, align 8
  %219 = icmp eq %"class.media::VP8Picture"* %218, null
  br i1 %219, label %223, label %220

220:                                              ; preds = %216
  %221 = getelementptr inbounds %"class.media::VP8Picture", %"class.media::VP8Picture"* %218, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %222 = atomicrmw add i32* %221, i32 1 monotonic
  br label %223

223:                                              ; preds = %216, %220
  %224 = getelementptr inbounds %"class.media::Vp8ReferenceFrameVector", %"class.media::Vp8ReferenceFrameVector"* %0, i64 0, i32 0, i32 0, i64 1
  %225 = ptrtoint %"class.media::VP8Picture"* %218 to i64
  %226 = bitcast %class.scoped_refptr* %224 to i64*
  %227 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %224, i64 0, i32 0
  %228 = load %"class.media::VP8Picture"*, %"class.media::VP8Picture"** %227, align 8
  store i64 %225, i64* %226, align 8
  %229 = icmp eq %"class.media::VP8Picture"* %228, null
  br i1 %229, label %242, label %230

230:                                              ; preds = %223
  %231 = getelementptr inbounds %"class.media::VP8Picture", %"class.media::VP8Picture"* %228, i64 0, i32 0, i32 1
  %232 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %231, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %233 = atomicrmw sub i32* %232, i32 1 acq_rel
  %234 = icmp eq i32 %233, 1
  br i1 %234, label %235, label %242

235:                                              ; preds = %230
  %236 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %231, i64 -2
  %237 = bitcast %"class.base::RefCountedThreadSafe"* %236 to %"class.media::CodecPicture"*
  %238 = bitcast %"class.base::RefCountedThreadSafe"* %236 to void (%"class.media::CodecPicture"*)***
  %239 = load void (%"class.media::CodecPicture"*)**, void (%"class.media::CodecPicture"*)*** %238, align 8
  %240 = getelementptr inbounds void (%"class.media::CodecPicture"*)*, void (%"class.media::CodecPicture"*)** %239, i64 1
  %241 = load void (%"class.media::CodecPicture"*)*, void (%"class.media::CodecPicture"*)** %240, align 8
  tail call void %241(%"class.media::CodecPicture"* nonnull %237) #3
  br label %242

242:                                              ; preds = %235, %230, %223, %209, %204, %197, %180, %175, %168, %187
  %243 = load %"struct.media::Vp8FrameHeader"*, %"struct.media::Vp8FrameHeader"** %3, align 8
  %244 = getelementptr inbounds %"struct.media::Vp8FrameHeader", %"struct.media::Vp8FrameHeader"* %243, i64 0, i32 25
  %245 = load i8, i8* %244, align 2, !range !2
  %246 = icmp eq i8 %245, 0
  br i1 %246, label %270, label %247

247:                                              ; preds = %242
  %248 = icmp eq %"class.media::VP8Picture"* %1, null
  br i1 %248, label %252, label %249

249:                                              ; preds = %247
  %250 = getelementptr inbounds %"class.media::VP8Picture", %"class.media::VP8Picture"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %251 = atomicrmw add i32* %250, i32 1 monotonic
  br label %252

252:                                              ; preds = %247, %249
  %253 = ptrtoint %"class.media::VP8Picture"* %1 to i64
  %254 = bitcast %"class.media::Vp8ReferenceFrameVector"* %0 to i64*
  %255 = getelementptr inbounds %"class.media::Vp8ReferenceFrameVector", %"class.media::Vp8ReferenceFrameVector"* %0, i64 0, i32 0, i32 0, i64 0, i32 0
  %256 = load %"class.media::VP8Picture"*, %"class.media::VP8Picture"** %255, align 8
  store i64 %253, i64* %254, align 8
  %257 = icmp eq %"class.media::VP8Picture"* %256, null
  br i1 %257, label %270, label %258

258:                                              ; preds = %252
  %259 = getelementptr inbounds %"class.media::VP8Picture", %"class.media::VP8Picture"* %256, i64 0, i32 0, i32 1
  %260 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %259, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %261 = atomicrmw sub i32* %260, i32 1 acq_rel
  %262 = icmp eq i32 %261, 1
  br i1 %262, label %263, label %270

263:                                              ; preds = %258
  %264 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %259, i64 -2
  %265 = bitcast %"class.base::RefCountedThreadSafe"* %264 to %"class.media::CodecPicture"*
  %266 = bitcast %"class.base::RefCountedThreadSafe"* %264 to void (%"class.media::CodecPicture"*)***
  %267 = load void (%"class.media::CodecPicture"*)**, void (%"class.media::CodecPicture"*)*** %266, align 8
  %268 = getelementptr inbounds void (%"class.media::CodecPicture"*)*, void (%"class.media::CodecPicture"*)** %267, i64 1
  %269 = load void (%"class.media::CodecPicture"*)*, void (%"class.media::CodecPicture"*)** %268, align 8
  tail call void %269(%"class.media::CodecPicture"* nonnull %265) #3
  br label %270

270:                                              ; preds = %263, %258, %252, %68, %63, %57, %242
  %271 = icmp eq %"class.media::VP8Picture"* %1, null
  br i1 %271, label %284, label %272

272:                                              ; preds = %270
  %273 = getelementptr inbounds %"class.media::VP8Picture", %"class.media::VP8Picture"* %1, i64 0, i32 0, i32 1
  %274 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %273, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %275 = atomicrmw sub i32* %274, i32 1 acq_rel
  %276 = icmp eq i32 %275, 1
  br i1 %276, label %277, label %284

277:                                              ; preds = %272
  %278 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %273, i64 -2
  %279 = bitcast %"class.base::RefCountedThreadSafe"* %278 to %"class.media::CodecPicture"*
  %280 = bitcast %"class.base::RefCountedThreadSafe"* %278 to void (%"class.media::CodecPicture"*)***
  %281 = load void (%"class.media::CodecPicture"*)**, void (%"class.media::CodecPicture"*)*** %280, align 8
  %282 = getelementptr inbounds void (%"class.media::CodecPicture"*)*, void (%"class.media::CodecPicture"*)** %281, i64 1
  %283 = load void (%"class.media::CodecPicture"*)*, void (%"class.media::CodecPicture"*)** %282, align 8
  tail call void %283(%"class.media::CodecPicture"* nonnull %279) #3
  br label %284

284:                                              ; preds = %270, %272, %277
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media23Vp8ReferenceFrameVector5ClearEv(%"class.media::Vp8ReferenceFrameVector"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.media::Vp8ReferenceFrameVector"* %0 to i64*
  %3 = getelementptr inbounds %"class.media::Vp8ReferenceFrameVector", %"class.media::Vp8ReferenceFrameVector"* %0, i64 0, i32 0, i32 0, i64 0, i32 0
  %4 = load %"class.media::VP8Picture"*, %"class.media::VP8Picture"** %3, align 8
  store i64 0, i64* %2, align 8
  %5 = icmp eq %"class.media::VP8Picture"* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.media::VP8Picture", %"class.media::VP8Picture"* %4, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %18

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.media::CodecPicture"*
  %14 = bitcast %"class.base::RefCountedThreadSafe"* %12 to void (%"class.media::CodecPicture"*)***
  %15 = load void (%"class.media::CodecPicture"*)**, void (%"class.media::CodecPicture"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.media::CodecPicture"*)*, void (%"class.media::CodecPicture"*)** %15, i64 1
  %17 = load void (%"class.media::CodecPicture"*)*, void (%"class.media::CodecPicture"*)** %16, align 8
  tail call void %17(%"class.media::CodecPicture"* nonnull %13) #3
  br label %18

18:                                               ; preds = %1, %6, %11
  %19 = getelementptr inbounds %"class.media::Vp8ReferenceFrameVector", %"class.media::Vp8ReferenceFrameVector"* %0, i64 0, i32 0, i32 0, i64 1
  %20 = bitcast %class.scoped_refptr* %19 to i64*
  %21 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %19, i64 0, i32 0
  %22 = load %"class.media::VP8Picture"*, %"class.media::VP8Picture"** %21, align 8
  store i64 0, i64* %20, align 8
  %23 = icmp eq %"class.media::VP8Picture"* %22, null
  br i1 %23, label %36, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.media::VP8Picture", %"class.media::VP8Picture"* %22, i64 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw sub i32* %26, i32 1 acq_rel
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %36

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %25, i64 -2
  %31 = bitcast %"class.base::RefCountedThreadSafe"* %30 to %"class.media::CodecPicture"*
  %32 = bitcast %"class.base::RefCountedThreadSafe"* %30 to void (%"class.media::CodecPicture"*)***
  %33 = load void (%"class.media::CodecPicture"*)**, void (%"class.media::CodecPicture"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.media::CodecPicture"*)*, void (%"class.media::CodecPicture"*)** %33, i64 1
  %35 = load void (%"class.media::CodecPicture"*)*, void (%"class.media::CodecPicture"*)** %34, align 8
  tail call void %35(%"class.media::CodecPicture"* nonnull %31) #3
  br label %36

36:                                               ; preds = %29, %24, %18
  %37 = getelementptr inbounds %"class.media::Vp8ReferenceFrameVector", %"class.media::Vp8ReferenceFrameVector"* %0, i64 0, i32 0, i32 0, i64 2
  %38 = bitcast %class.scoped_refptr* %37 to i64*
  %39 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %37, i64 0, i32 0
  %40 = load %"class.media::VP8Picture"*, %"class.media::VP8Picture"** %39, align 8
  store i64 0, i64* %38, align 8
  %41 = icmp eq %"class.media::VP8Picture"* %40, null
  br i1 %41, label %54, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.media::VP8Picture", %"class.media::VP8Picture"* %40, i64 0, i32 0, i32 1
  %44 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw sub i32* %44, i32 1 acq_rel
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %54

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %43, i64 -2
  %49 = bitcast %"class.base::RefCountedThreadSafe"* %48 to %"class.media::CodecPicture"*
  %50 = bitcast %"class.base::RefCountedThreadSafe"* %48 to void (%"class.media::CodecPicture"*)***
  %51 = load void (%"class.media::CodecPicture"*)**, void (%"class.media::CodecPicture"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.media::CodecPicture"*)*, void (%"class.media::CodecPicture"*)** %51, i64 1
  %53 = load void (%"class.media::CodecPicture"*)*, void (%"class.media::CodecPicture"*)** %52, align 8
  tail call void %53(%"class.media::CodecPicture"* nonnull %49) #3
  br label %54

54:                                               ; preds = %47, %42, %36
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %"class.media::VP8Picture"* @_ZNK5media23Vp8ReferenceFrameVector8GetFrameENS_10Vp8RefTypeE(%"class.media::Vp8ReferenceFrameVector"* nocapture readonly, i64) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.media::Vp8ReferenceFrameVector", %"class.media::Vp8ReferenceFrameVector"* %0, i64 0, i32 0, i32 0, i64 %1, i32 0
  %4 = load %"class.media::VP8Picture"*, %"class.media::VP8Picture"** %3, align 8
  %5 = icmp eq %"class.media::VP8Picture"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.media::VP8Picture", %"class.media::VP8Picture"* %4, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 1 monotonic
  br label %9

9:                                                ; preds = %2, %6
  ret %"class.media::VP8Picture"* %4
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
