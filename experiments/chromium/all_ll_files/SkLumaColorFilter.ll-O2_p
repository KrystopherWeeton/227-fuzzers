; ModuleID = '../../third_party/skia/src/effects/SkLumaColorFilter.cpp'
source_filename = "../../third_party/skia/src/effects/SkLumaColorFilter.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.sk_sp = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkString = type { %class.sk_sp.2 }
%class.sk_sp.2 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.sk_sp.1 = type { %class.SkRuntimeEffect* }
%class.SkRuntimeEffect = type <{ %class.SkRefCnt.base, i32, %class.SkString, %"class.std::__1::unique_ptr", %"class.SkSL::FunctionDefinition"*, %"class.std::__1::vector", %"class.std::__1::vector.7", %"class.std::__1::vector.14", %"class.std::__1::unique_ptr.21", i32, [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.SkSL::Program"* }
%"struct.SkSL::Program" = type opaque
%"class.SkSL::FunctionDefinition" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.SkRuntimeEffect::Uniform"*, %"struct.SkRuntimeEffect::Uniform"*, %"class.std::__1::__compressed_pair.4" }
%"struct.SkRuntimeEffect::Uniform" = type <{ %class.SkString, i64, i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.SkRuntimeEffect::Uniform"* }
%"class.std::__1::vector.7" = type { %"class.std::__1::__vector_base.8" }
%"class.std::__1::__vector_base.8" = type { %"struct.SkRuntimeEffect::Child"*, %"struct.SkRuntimeEffect::Child"*, %"class.std::__1::__compressed_pair.9" }
%"struct.SkRuntimeEffect::Child" = type { %class.SkString, i32, i32 }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.SkRuntimeEffect::Child"* }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"struct.SkSL::SampleUsage"*, %"struct.SkSL::SampleUsage"*, %"class.std::__1::__compressed_pair.16" }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.SkSL::SampleUsage"* }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %class.SkFilterColorProgram* }
%class.SkFilterColorProgram = type <{ %"class.skvm::Program", %"class.std::__1::vector.30", i8, [7 x i8] }>
%"class.skvm::Program" = type { %"class.std::__1::unique_ptr.24" }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.skvm::Program::Impl"* }
%"struct.skvm::Program::Impl" = type opaque
%"class.std::__1::vector.30" = type { %"class.std::__1::__vector_base.31" }
%"class.std::__1::__vector_base.31" = type { %"struct.SkFilterColorProgram::SampleCall"*, %"struct.SkFilterColorProgram::SampleCall"*, %"class.std::__1::__compressed_pair.32" }
%"struct.SkFilterColorProgram::SampleCall" = type { i32, i32, %union.anon }
%union.anon = type { %struct.SkRGBA4f }
%struct.SkRGBA4f = type { float, float, float, float }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"struct.SkFilterColorProgram::SampleCall"* }
%class.sk_sp.40 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"struct.SkRuntimeEffect::Result" = type { %class.sk_sp.1, %class.SkString }
%"struct.SkRuntimeEffect::Options" = type { i8, i8 }

$_ZN15SkRuntimeEffect18MakeForColorFilterE8SkString = comdat any

@.str = private unnamed_addr constant [99 x i8] c"half4 main(half4 inColor) {return saturate(dot(half3(0.2126, 0.7152, 0.0722), inColor.rgb)).000r;}\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17SkLumaColorFilter4MakeEv(%class.sk_sp* noalias sret) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.SkString, align 8
  %3 = alloca %class.sk_sp.1, align 8
  %4 = alloca %class.sk_sp.40, align 8
  %5 = bitcast %class.sk_sp.1* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #4
  %6 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %3, i64 0, i32 0
  store %class.SkRuntimeEffect* inttoptr (i64 -6148914691236517206 to %class.SkRuntimeEffect*), %class.SkRuntimeEffect** %6, align 8
  %7 = bitcast %class.SkString* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %2, i8* getelementptr inbounds ([99 x i8], [99 x i8]* @.str, i64 0, i64 0)) #4, !noalias !2
  call void @_Z25SkMakeCachedRuntimeEffectPFN15SkRuntimeEffect6ResultE8SkStringES1_(%class.sk_sp.1* nonnull sret %3, void (%"struct.SkRuntimeEffect::Result"*, %class.SkString*)* nonnull @_ZN15SkRuntimeEffect18MakeForColorFilterE8SkString, %class.SkString* nonnull %2) #4
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %2) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  %8 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %6, align 8
  call void @_ZN6SkData9MakeEmptyEv(%class.sk_sp.40* nonnull sret %4) #4
  call void @_ZNK15SkRuntimeEffect15makeColorFilterE5sk_spI6SkDataE(%class.sk_sp* sret %0, %class.SkRuntimeEffect* %8, %class.sk_sp.40* nonnull %4) #4
  %9 = getelementptr inbounds %class.sk_sp.40, %class.sk_sp.40* %4, i64 0, i32 0
  %10 = load %class.SkData*, %class.SkData** %9, align 8
  %11 = icmp eq %class.SkData* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %class.SkData, %class.SkData* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw add i32* %13, i32 -1 acq_rel
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %18

16:                                               ; preds = %12
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %10) #4
  %17 = bitcast %class.SkData* %10 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %17) #4
  br label %18

18:                                               ; preds = %1, %12, %16
  %19 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %6, align 8
  %20 = icmp eq %class.SkRuntimeEffect* %19, null
  br i1 %20, label %31, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %19, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i32* %22, i32 -1 acq_rel
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %31

25:                                               ; preds = %21
  %26 = bitcast %class.SkRuntimeEffect* %19 to %class.SkRefCntBase*
  %27 = bitcast %class.SkRuntimeEffect* %19 to void (%class.SkRefCntBase*)***
  %28 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %27, align 8
  %29 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, i64 2
  %30 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %29, align 8
  call void %30(%class.SkRefCntBase* nonnull %26) #4
  br label %31

31:                                               ; preds = %18, %21, %25
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15SkRuntimeEffect18MakeForColorFilterE8SkString(%"struct.SkRuntimeEffect::Result"* noalias sret, %class.SkString*) #0 comdat align 2 {
  %3 = alloca %class.SkString, align 8
  %4 = alloca %"struct.SkRuntimeEffect::Options", align 1
  call void @_ZN8SkStringC1EOS_(%class.SkString* nonnull %3, %class.SkString* dereferenceable(8) %1) #4
  %5 = getelementptr inbounds %"struct.SkRuntimeEffect::Options", %"struct.SkRuntimeEffect::Options"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %5) #4
  store i8 0, i8* %5, align 1
  %6 = getelementptr inbounds %"struct.SkRuntimeEffect::Options", %"struct.SkRuntimeEffect::Options"* %4, i64 0, i32 1
  store i8 1, i8* %6, align 1
  call void @_ZN15SkRuntimeEffect18MakeForColorFilterE8SkStringRKNS_7OptionsE(%"struct.SkRuntimeEffect::Result"* sret %0, %class.SkString* nonnull %3, %"struct.SkRuntimeEffect::Options"* nonnull dereferenceable(2) %4) #4
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %5) #4
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %3) #4
  ret void
}

declare void @_ZNK15SkRuntimeEffect15makeColorFilterE5sk_spI6SkDataE(%class.sk_sp* sret, %class.SkRuntimeEffect*, %class.sk_sp.40*) local_unnamed_addr #2

declare void @_ZN6SkData9MakeEmptyEv(%class.sk_sp.40* sret) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_Z25SkMakeCachedRuntimeEffectPFN15SkRuntimeEffect6ResultE8SkStringES1_(%class.sk_sp.1* sret, void (%"struct.SkRuntimeEffect::Result"*, %class.SkString*)*, %class.SkString*) local_unnamed_addr #2

declare void @_ZN8SkStringC1EPKc(%class.SkString*, i8*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #3

declare void @_ZN15SkRuntimeEffect18MakeForColorFilterE8SkStringRKNS_7OptionsE(%"struct.SkRuntimeEffect::Result"* sret, %class.SkString*, %"struct.SkRuntimeEffect::Options"* dereferenceable(2)) local_unnamed_addr #2

declare void @_ZN8SkStringC1EOS_(%class.SkString*, %class.SkString* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_Z25SkMakeCachedRuntimeEffectPFN15SkRuntimeEffect6ResultE8SkStringEPKc: argument 0"}
!4 = distinct !{!4, !"_Z25SkMakeCachedRuntimeEffectPFN15SkRuntimeEffect6ResultE8SkStringEPKc"}
