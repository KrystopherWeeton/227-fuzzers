; ModuleID = '../../third_party/blink/renderer/core/css/cssom/css_transform_component.cc'
source_filename = "../../third_party/blink/renderer/core/css/cssom/css_transform_component.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::CSSTransformComponent" = type <{ %"class.blink::ScriptWrappable", i8, [7 x i8] }>
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::CSSFunctionValue" = type <{ %"class.blink::CSSValueList", i32, [4 x i8] }>
%"class.blink::CSSValueList" = type { %"class.blink::CSSValue", %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSMatrixComponent" = type { %"class.blink::CSSTransformComponent.base", %"class.blink::Member.4" }
%"class.blink::CSSTransformComponent.base" = type <{ %"class.blink::ScriptWrappable", i8 }>
%"class.blink::Member.4" = type { %"class.blink::MemberBase.5" }
%"class.blink::MemberBase.5" = type { %"class.blink::DOMMatrix"* }
%"class.blink::DOMMatrix" = type { %"class.blink::DOMMatrixReadOnly.base", [7 x i8] }
%"class.blink::DOMMatrixReadOnly.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::TransformationMatrix", i8 }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::CSSPerspective" = type { %"class.blink::CSSTransformComponent.base", %"class.blink::Member.6" }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::CSSNumericValue"* }
%"class.blink::CSSNumericValue" = type { %"class.blink::CSSStyleValue", %"class.blink::CSSNumericValueType" }
%"class.blink::CSSStyleValue" = type { %"class.blink::ScriptWrappable", %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::CSSNumericValueType" = type { %"class.WTF::Vector.9", i32, i8, i32, [4 x i8] }
%"class.WTF::Vector.9" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.11", [28 x i8] }>
%"class.WTF::VectorBufferBase.11" = type { i32*, i32, i32 }
%"class.blink::CSSRotate" = type { %"class.blink::CSSTransformComponent.base", %"class.blink::Member.6", %"class.blink::Member.6", %"class.blink::Member.6", %"class.blink::Member.6" }
%"class.blink::CSSScale" = type { %"class.blink::CSSTransformComponent.base", %"class.blink::Member.6", %"class.blink::Member.6", %"class.blink::Member.6" }
%"class.blink::CSSSkew" = type { %"class.blink::CSSTransformComponent.base", %"class.blink::Member.6", %"class.blink::Member.6" }
%"class.blink::CSSSkewX" = type { %"class.blink::CSSTransformComponent.base", %"class.blink::Member.6" }
%"class.blink::CSSSkewY" = type { %"class.blink::CSSTransformComponent.base", %"class.blink::Member.6" }
%"class.blink::CSSTranslate" = type { %"class.blink::CSSTransformComponent.base", %"class.blink::Member.6", %"class.blink::Member.6", %"class.blink::Member.6" }

@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSTransformComponent"* @_ZN5blink21CSSTransformComponent12FromCSSValueERKNS_8CSSValueE(%"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp ne i8 %3, 53
  %5 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSFunctionValue"*
  %6 = icmp eq %"class.blink::CSSValue"* %0, null
  %7 = or i1 %6, %4
  br i1 %7, label %36, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 18, i32 2
  %10 = bitcast i8* %9 to i32*
  %11 = load i32, i32* %10, align 8
  switch i32 %11, label %36 [
    i32 790, label %12
    i32 791, label %12
    i32 792, label %15
    i32 793, label %18
    i32 794, label %18
    i32 795, label %18
    i32 796, label %18
    i32 797, label %18
    i32 798, label %21
    i32 799, label %21
    i32 800, label %21
    i32 801, label %21
    i32 802, label %21
    i32 803, label %24
    i32 804, label %27
    i32 805, label %30
    i32 806, label %33
    i32 807, label %33
    i32 808, label %33
    i32 809, label %33
    i32 810, label %33
  ]

12:                                               ; preds = %8, %8
  %13 = tail call %"class.blink::CSSMatrixComponent"* @_ZN5blink18CSSMatrixComponent12FromCSSValueERKNS_16CSSFunctionValueE(%"class.blink::CSSFunctionValue"* nonnull dereferenceable(64) %5) #2
  %14 = bitcast %"class.blink::CSSMatrixComponent"* %13 to %"class.blink::CSSTransformComponent"*
  br label %36

15:                                               ; preds = %8
  %16 = tail call %"class.blink::CSSPerspective"* @_ZN5blink14CSSPerspective12FromCSSValueERKNS_16CSSFunctionValueE(%"class.blink::CSSFunctionValue"* nonnull dereferenceable(64) %5) #2
  %17 = bitcast %"class.blink::CSSPerspective"* %16 to %"class.blink::CSSTransformComponent"*
  br label %36

18:                                               ; preds = %8, %8, %8, %8, %8
  %19 = tail call %"class.blink::CSSRotate"* @_ZN5blink9CSSRotate12FromCSSValueERKNS_16CSSFunctionValueE(%"class.blink::CSSFunctionValue"* nonnull dereferenceable(64) %5) #2
  %20 = bitcast %"class.blink::CSSRotate"* %19 to %"class.blink::CSSTransformComponent"*
  br label %36

21:                                               ; preds = %8, %8, %8, %8, %8
  %22 = tail call %"class.blink::CSSScale"* @_ZN5blink8CSSScale12FromCSSValueERKNS_16CSSFunctionValueE(%"class.blink::CSSFunctionValue"* nonnull dereferenceable(64) %5) #2
  %23 = bitcast %"class.blink::CSSScale"* %22 to %"class.blink::CSSTransformComponent"*
  br label %36

24:                                               ; preds = %8
  %25 = tail call %"class.blink::CSSSkew"* @_ZN5blink7CSSSkew12FromCSSValueERKNS_16CSSFunctionValueE(%"class.blink::CSSFunctionValue"* nonnull dereferenceable(64) %5) #2
  %26 = bitcast %"class.blink::CSSSkew"* %25 to %"class.blink::CSSTransformComponent"*
  br label %36

27:                                               ; preds = %8
  %28 = tail call %"class.blink::CSSSkewX"* @_ZN5blink8CSSSkewX12FromCSSValueERKNS_16CSSFunctionValueE(%"class.blink::CSSFunctionValue"* nonnull dereferenceable(64) %5) #2
  %29 = bitcast %"class.blink::CSSSkewX"* %28 to %"class.blink::CSSTransformComponent"*
  br label %36

30:                                               ; preds = %8
  %31 = tail call %"class.blink::CSSSkewY"* @_ZN5blink8CSSSkewY12FromCSSValueERKNS_16CSSFunctionValueE(%"class.blink::CSSFunctionValue"* nonnull dereferenceable(64) %5) #2
  %32 = bitcast %"class.blink::CSSSkewY"* %31 to %"class.blink::CSSTransformComponent"*
  br label %36

33:                                               ; preds = %8, %8, %8, %8, %8
  %34 = tail call %"class.blink::CSSTranslate"* @_ZN5blink12CSSTranslate12FromCSSValueERKNS_16CSSFunctionValueE(%"class.blink::CSSFunctionValue"* nonnull dereferenceable(64) %5) #2
  %35 = bitcast %"class.blink::CSSTranslate"* %34 to %"class.blink::CSSTransformComponent"*
  br label %36

36:                                               ; preds = %8, %1, %33, %30, %27, %24, %21, %18, %15, %12
  %37 = phi %"class.blink::CSSTransformComponent"* [ %35, %33 ], [ %32, %30 ], [ %29, %27 ], [ %26, %24 ], [ %23, %21 ], [ %20, %18 ], [ %17, %15 ], [ %14, %12 ], [ null, %1 ], [ null, %8 ]
  ret %"class.blink::CSSTransformComponent"* %37
}

declare %"class.blink::CSSMatrixComponent"* @_ZN5blink18CSSMatrixComponent12FromCSSValueERKNS_16CSSFunctionValueE(%"class.blink::CSSFunctionValue"* dereferenceable(64)) local_unnamed_addr #1

declare %"class.blink::CSSPerspective"* @_ZN5blink14CSSPerspective12FromCSSValueERKNS_16CSSFunctionValueE(%"class.blink::CSSFunctionValue"* dereferenceable(64)) local_unnamed_addr #1

declare %"class.blink::CSSRotate"* @_ZN5blink9CSSRotate12FromCSSValueERKNS_16CSSFunctionValueE(%"class.blink::CSSFunctionValue"* dereferenceable(64)) local_unnamed_addr #1

declare %"class.blink::CSSScale"* @_ZN5blink8CSSScale12FromCSSValueERKNS_16CSSFunctionValueE(%"class.blink::CSSFunctionValue"* dereferenceable(64)) local_unnamed_addr #1

declare %"class.blink::CSSSkew"* @_ZN5blink7CSSSkew12FromCSSValueERKNS_16CSSFunctionValueE(%"class.blink::CSSFunctionValue"* dereferenceable(64)) local_unnamed_addr #1

declare %"class.blink::CSSSkewX"* @_ZN5blink8CSSSkewX12FromCSSValueERKNS_16CSSFunctionValueE(%"class.blink::CSSFunctionValue"* dereferenceable(64)) local_unnamed_addr #1

declare %"class.blink::CSSSkewY"* @_ZN5blink8CSSSkewY12FromCSSValueERKNS_16CSSFunctionValueE(%"class.blink::CSSFunctionValue"* dereferenceable(64)) local_unnamed_addr #1

declare %"class.blink::CSSTranslate"* @_ZN5blink12CSSTranslate12FromCSSValueERKNS_16CSSFunctionValueE(%"class.blink::CSSFunctionValue"* dereferenceable(64)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink21CSSTransformComponent8toStringEv(%"class.blink::CSSTransformComponent"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = bitcast %"class.blink::CSSTransformComponent"* %0 to %"class.blink::CSSFunctionValue"* (%"class.blink::CSSTransformComponent"*)***
  %4 = load %"class.blink::CSSFunctionValue"* (%"class.blink::CSSTransformComponent"*)**, %"class.blink::CSSFunctionValue"* (%"class.blink::CSSTransformComponent"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::CSSFunctionValue"* (%"class.blink::CSSTransformComponent"*)*, %"class.blink::CSSFunctionValue"* (%"class.blink::CSSTransformComponent"*)** %4, i64 12
  %6 = load %"class.blink::CSSFunctionValue"* (%"class.blink::CSSTransformComponent"*)*, %"class.blink::CSSFunctionValue"* (%"class.blink::CSSTransformComponent"*)** %5, align 8
  %7 = tail call %"class.blink::CSSFunctionValue"* %6(%"class.blink::CSSTransformComponent"* %0) #2
  %8 = icmp eq %"class.blink::CSSFunctionValue"* %7, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::CSSFunctionValue", %"class.blink::CSSFunctionValue"* %7, i64 0, i32 0, i32 0
  %11 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* %10) #2
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %12, align 8
  br label %16

13:                                               ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i64 0) #2
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  br label %16

16:                                               ; preds = %13, %9
  %17 = phi %"class.WTF::StringImpl"* [ %15, %13 ], [ %11, %9 ]
  ret %"class.WTF::StringImpl"* %17
}

declare %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"*) local_unnamed_addr #1

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
