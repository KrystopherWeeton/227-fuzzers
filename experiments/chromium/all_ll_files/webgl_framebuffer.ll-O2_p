; ModuleID = '../../third_party/blink/renderer/modules/webgl/webgl_framebuffer.cc'
source_filename = "../../third_party/blink/renderer/modules/webgl/webgl_framebuffer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.214", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.214" = type { %"class.base::RefCounted.215" }
%"class.base::RefCounted.215" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.218" }
%"class.blink::HeapHashMap.218" = type { %"class.WTF::HashMap.221" }
%"class.WTF::HashMap.221" = type { %"class.WTF::HashTable.222" }
%"class.WTF::HashTable.222" = type <{ %"struct.WTF::KeyValuePair.224"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.224" = type { %"class.blink::WeakMember.225", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.225" = type { %"class.blink::MemberBase.226" }
%"class.blink::MemberBase.226" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.227", i32, [4 x i8], %"class.std::__1::unique_ptr.365", %"class.std::__1::unique_ptr.365", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque.371", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.377", %"class.std::__1::unique_ptr.383", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.395", %"class.std::__1::unique_ptr.401", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.408", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.236", %"class.std::__1::unique_ptr.242", %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.254", %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.271", %"class.std::__1::unique_ptr.278", %"class.std::__1::unique_ptr.278", %"class.std::__1::unique_ptr.285", %"class.std::__1::unique_ptr.292", %"class.std::__1::unique_ptr.299", %"class.std::__1::unique_ptr.299", %"class.std::__1::unique_ptr.306", %"class.std::__1::unique_ptr.313", %"class.std::__1::unique_ptr.320", %"class.std::__1::unique_ptr.345", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.254" = type { %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.260" = type { %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.263" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.263" = type { %"struct.std::__1::__atomic_base.264" }
%"struct.std::__1::__atomic_base.264" = type { %"struct.std::__1::__atomic_base.265" }
%"struct.std::__1::__atomic_base.265" = type { %"struct.std::__1::__cxx_atomic_impl.266" }
%"struct.std::__1::__cxx_atomic_impl.266" = type { %"struct.std::__1::__cxx_atomic_base_impl.267" }
%"struct.std::__1::__cxx_atomic_base_impl.267" = type { i64 }
%"class.std::__1::unique_ptr.271" = type { %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"class.blink::Worklist.274"* }
%"class.blink::Worklist.274" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.263" }
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"class.blink::Worklist.281"* }
%"class.blink::Worklist.281" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.263" }
%"class.std::__1::unique_ptr.285" = type { %"class.std::__1::__compressed_pair.286" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.287" = type { %"class.blink::Worklist.288"* }
%"class.blink::Worklist.288" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.263" }
%"class.std::__1::unique_ptr.292" = type { %"class.std::__1::__compressed_pair.293" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"class.blink::Worklist.295"* }
%"class.blink::Worklist.295" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.263" }
%"class.std::__1::unique_ptr.299" = type { %"class.std::__1::__compressed_pair.300" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.301" }
%"struct.std::__1::__compressed_pair_elem.301" = type { %"class.blink::Worklist.302"* }
%"class.blink::Worklist.302" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.263" }
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"class.blink::Worklist.309"* }
%"class.blink::Worklist.309" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.263" }
%"class.std::__1::unique_ptr.313" = type { %"class.std::__1::__compressed_pair.314" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.315" }
%"struct.std::__1::__compressed_pair_elem.315" = type { %"class.blink::Worklist.316"* }
%"class.blink::Worklist.316" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.263" }
%"class.std::__1::unique_ptr.320" = type { %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.323", %"class.std::__1::__compressed_pair.331", %"class.std::__1::__compressed_pair.336", %"class.std::__1::__compressed_pair.338", [4 x i8] }>
%"class.std::__1::unique_ptr.323" = type { %"class.std::__1::__compressed_pair.324" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325", %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.325" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.327" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { i64 }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.339" }
%"struct.std::__1::__compressed_pair_elem.339" = type { float }
%"class.std::__1::unique_ptr.345" = type { %"class.std::__1::__compressed_pair.346" }
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"struct.std::__1::__compressed_pair_elem.347" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.348", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.348" = type { %"class.std::__1::__compressed_pair.349" }
%"class.std::__1::__compressed_pair.349" = type { %"struct.std::__1::__compressed_pair_elem.350" }
%"struct.std::__1::__compressed_pair_elem.350" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.357" }
%"class.WTF::Vector.357" = type { %"class.WTF::VectorBuffer.358" }
%"class.WTF::VectorBuffer.358" = type { %"class.WTF::VectorBufferBase.359" }
%"class.WTF::VectorBufferBase.359" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.365" = type { %"class.std::__1::__compressed_pair.366" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.367" }
%"struct.std::__1::__compressed_pair_elem.367" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque.371" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.374" }
%"class.WTF::VectorBuffer.374" = type { %"class.WTF::VectorBufferBase.375" }
%"class.WTF::VectorBufferBase.375" = type { %"struct.std::__1::pair.376"*, i32, i32 }
%"struct.std::__1::pair.376" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.377" = type { %"class.std::__1::__compressed_pair.378" }
%"class.std::__1::__compressed_pair.378" = type { %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.383" = type { %"class.std::__1::__compressed_pair.384" }
%"class.std::__1::__compressed_pair.384" = type { %"struct.std::__1::__compressed_pair_elem.385" }
%"struct.std::__1::__compressed_pair_elem.385" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.389" }
%"class.std::__1::unique_ptr.389" = type { %"class.std::__1::__compressed_pair.390" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.391" }
%"struct.std::__1::__compressed_pair_elem.391" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.274"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.281"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.288"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.295"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.302"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.471", i64 }
%"class.std::__1::vector.471" = type { %"class.std::__1::__vector_base.472" }
%"class.std::__1::__vector_base.472" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.473" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.473" = type { %"struct.std::__1::__compressed_pair_elem.474" }
%"struct.std::__1::__compressed_pair_elem.474" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.395" = type { %"class.std::__1::__compressed_pair.396" }
%"class.std::__1::__compressed_pair.396" = type { %"struct.std::__1::__compressed_pair_elem.397" }
%"struct.std::__1::__compressed_pair_elem.397" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.401" = type { %"class.std::__1::__compressed_pair.402" }
%"class.std::__1::__compressed_pair.402" = type { %"struct.std::__1::__compressed_pair_elem.403" }
%"struct.std::__1::__compressed_pair_elem.403" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.407 }
%class.scoped_refptr.407 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.408" = type { %"struct.std::__1::__atomic_base.409" }
%"struct.std::__1::__atomic_base.409" = type { %"struct.std::__1::__cxx_atomic_impl.410" }
%"struct.std::__1::__cxx_atomic_impl.410" = type { %"struct.std::__1::__cxx_atomic_base_impl.411" }
%"struct.std::__1::__cxx_atomic_base_impl.411" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::WebGLFramebuffer" = type <{ %"class.blink::WebGLContextObject", i32, [4 x i8], %"class.blink::HeapHashMap", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.WTF::Vector", %"class.WTF::Vector", i32, [4 x i8] }>
%"class.blink::WebGLContextObject" = type { %"class.blink::WebGLObject.base", %"class.blink::Member" }
%"class.blink::WebGLObject.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ThreadState::PrefinalizerRegistration", [3 x i8], i32, i32, i8, i8 }>
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::WebGLRenderingContextBase"* }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { i32, %"class.blink::Member.4" }
%"class.blink::Member.4" = type { %"class.blink::MemberBase.5" }
%"class.blink::MemberBase.5" = type { %"class.blink::WebGLFramebuffer::WebGLAttachment"* }
%"class.blink::WebGLFramebuffer::WebGLAttachment" = type { %"class.blink::NameClient" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i32*, i32, i32 }
%"class.blink::WebGLRenderingContextBase" = type <{ %"class.blink::CanvasRenderingContext.base", [7 x i8], %"class.blink::DrawingBuffer::Client", %"class.blink::NoAllocDirectCallHost", %class.scoped_refptr.108, %"class.blink::Member.167", i8, i8, [2 x i8], i32, i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer", i8, [7 x i8], %"class.blink::HeapTaskRunnerTimer", %class.scoped_refptr.71, i8, i8, i8, [5 x i8], %"class.blink::Member.170", %"class.blink::Member.172", %"class.blink::Member.172", %"class.WTF::Vector.185", i32, [4 x i8], %"class.blink::Member.190", %"class.blink::Member.192", %"class.blink::Member.194", i8, [7 x i8], %"class.blink::Member.196", %"class.blink::HeapVector.425", i32, [4 x i8], %"class.WTF::Vector", %"class.blink::WebGLRenderingContextBase::LRUCanvasResourceProviderCache", %"class.blink::WebGLRenderingContextBase::LRUCanvasResourceProviderCache", i32, i32, i32, i32, i32, [2 x i32], i32, i32, i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, i32, i8, i8, [2 x i8], i32, i32, i32, i32, [4 x float], i8, [3 x i8], [4 x i32], float, i32, [4 x i8], i8, i8, [2 x i8], i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i32, i32, %"class.std::__1::unique_ptr.143", [45 x i8], [3 x i8], %"class.blink::HeapVector.439", %"class.WTF::HashSet", %"class.WTF::Vector", %"class.WTF::Vector", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.WTF::HashSet.447", %"class.WTF::HashSet.447", %"class.WTF::HashSet.447", %"class.WTF::HashSet.447", %"class.WTF::HashSet.447", %"class.WTF::HashSet.447", %"class.WTF::HashSet.447", i32, i32, %"class.base::MRUCache.451", i32, i8, [3 x i8], %"class.blink::CanvasColorParams", [4 x i8] }>
%"class.blink::CanvasRenderingContext.base" = type <{ %"class.blink::ScriptWrappable", %"class.base::TaskObserver", %"class.blink::ThreadState::PrefinalizerRegistration.7", [7 x i8], %"class.blink::Member.8", %"class.blink::CanvasColorParams", [4 x i8], %"class.blink::CanvasContextCreationAttributesCore", i8 }>
%"class.base::TaskObserver" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration.7" = type { i8 }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::CanvasRenderingContextHost"* }
%"class.blink::CanvasRenderingContextHost" = type { %"class.blink::CanvasResourceHost.base", %"class.blink::CanvasImageSource", %"class.blink::GarbageCollectedMixin", i8, i8, i32 }
%"class.blink::CanvasResourceHost.base" = type <{ i32 (...)**, %"class.std::__1::unique_ptr", i32 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::CanvasResourceProvider"* }
%"class.blink::CanvasResourceProvider" = type { %"class.blink::WebGraphicsContext3DProviderWrapper::DestructionObserver", %"class.base::CheckedObserver", %"class.blink::CanvasMemoryDumpClient", i32, %class.sk_sp, i32, %"class.base::WeakPtr", %"class.base::WeakPtr.17", %"class.blink::IntSize", i32, %"class.blink::CanvasResourceParams", i8, %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.51", i8, i32, i32, i32, %"class.WTF::Vector.66", i8, i8, i64, i64, %"class.base::RepeatingCallback.76", %"class.blink::IdentifiabilityPaintOpDigest", %"class.base::WeakPtrFactory.92" }
%"class.blink::WebGraphicsContext3DProviderWrapper::DestructionObserver" = type { i32 (...)** }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.11" }
%"struct.std::__1::atomic.11" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl.14" }
%"struct.std::__1::__cxx_atomic_impl.14" = type { %"struct.std::__1::__cxx_atomic_base_impl.15" }
%"struct.std::__1::__cxx_atomic_base_impl.15" = type { i8 }
%"class.blink::CanvasMemoryDumpClient" = type { i32 (...)** }
%class.sk_sp = type { %class.SkSurface* }
%class.SkSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, i32, i32, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.SkSurfaceProps = type { i32, i32 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.16 }
%class.scoped_refptr.16 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtr.17" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.blink::CanvasResourceParams" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.blink::CanvasResourceProvider::CanvasImageProvider"* }
%"class.blink::CanvasResourceProvider::CanvasImageProvider" = type opaque
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.cc::SkiaPaintCanvas"* }
%"class.cc::SkiaPaintCanvas" = type <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.42", %"class.cc::ImageProvider"*, %"struct.cc::SkiaPaintCanvas::ContextFlushes", i32, [4 x i8] }>
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.25, [384 x i64], %class.sk_sp.26, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.27", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.33" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.25 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.26 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%class.SkBitmap = type { %class.sk_sp.39, %class.SkPixmap, %class.sk_sp.41 }
%class.sk_sp.39 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.40, i32, i32 }
%class.sk_sp.40 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.11" }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.41 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %class.SkCanvas* }
%"class.cc::ImageProvider" = type { i32 (...)** }
%"struct.cc::SkiaPaintCanvas::ContextFlushes" = type { i8, i32 }
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.blink::MemoryManagedPaintRecorder"* }
%"class.blink::MemoryManagedPaintRecorder" = type { %"class.cc::PaintRecorder", %"class.base::RepeatingCallback" }
%"class.cc::PaintRecorder" = type { i32 (...)**, %class.scoped_refptr.54, %"class.std::__1::unique_ptr.55" }
%class.scoped_refptr.54 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.cc::RecordPaintCanvas"* }
%"class.cc::RecordPaintCanvas" = type { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, %"class.absl::optional", %struct.SkRect }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %class.SkNoDrawCanvas }
%class.SkNoDrawCanvas = type { %class.SkCanvasVirtualEnforcer }
%class.SkCanvasVirtualEnforcer = type { %class.SkCanvas }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.61 }
%class.scoped_refptr.61 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.62", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.62" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.66" = type { %"class.WTF::VectorBuffer.67" }
%"class.WTF::VectorBuffer.67" = type { %"class.WTF::VectorBufferBase.68" }
%"class.WTF::VectorBufferBase.68" = type { %class.scoped_refptr.69*, i32, i32 }
%class.scoped_refptr.69 = type { %"class.blink::CanvasResource"* }
%"class.blink::CanvasResource" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", %"class.base::PlatformThreadRef", %class.scoped_refptr.71, %"struct.gpu::SyncToken", %"class.base::WeakPtr.73", i32, %"class.blink::CanvasResourceParams" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.70" }
%"class.base::RefCountedThreadSafe.70" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::PlatformThreadRef" = type { i64 }
%"struct.gpu::SyncToken" = type { i8, i8, %"class.util::IdType", i64 }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i64 }
%"class.base::WeakPtr.73" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::RepeatingCallback.76" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.blink::IdentifiabilityPaintOpDigest" = type <{ i32, [4 x i8], %"class.blink::IdentifiableTokenBuilder", i32, [4 x i8], i64, %"class.blink::IntSize", %"class.blink::IdentifiabilityPaintOpDigest::IdentifiabilityImageProvider", %"class.cc::ClientPaintCache", %"struct.cc::PaintOp::SerializeOptions", i8, i8, [6 x i8] }>
%"class.blink::IdentifiableTokenBuilder" = type { %"struct.std::__1::array", i8*, i64 }
%"struct.std::__1::array" = type { [64 x i8] }
%"class.blink::IdentifiabilityPaintOpDigest::IdentifiabilityImageProvider" = type { %"class.cc::ImageProvider", %"class.blink::IdentifiabilityPaintOpDigest"* }
%"class.cc::ClientPaintCache" = type { %"class.base::MRUCache", i64, i64, %"class.base::StackVector" }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list", %"class.std::__1::map", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.77" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.80", %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"class.base::StackVector" = type { %"class.base::StackContainer" }
%"class.base::StackContainer" = type { %"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source", %"class.base::StackAllocator", %"class.std::__1::vector" }
%"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source" = type { [8 x i8], i8, [3 x i8] }
%"class.base::StackAllocator" = type { %"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.89" }
%"struct.std::__1::pair" = type { i32, i32 }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90", %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"struct.std::__1::pair"* }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.base::StackAllocator" }
%"struct.cc::PaintOp::SerializeOptions" = type <{ %"class.cc::ImageProvider"*, %"class.cc::TransferCacheSerializeHelper"*, %"class.cc::ClientPaintCache"*, %class.SkStrikeServer*, %class.sk_sp.40, i8, i8, [2 x i8], i32, i8, [7 x i8] }>
%"class.cc::TransferCacheSerializeHelper" = type opaque
%class.SkStrikeServer = type opaque
%"class.base::WeakPtrFactory.92" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::CanvasImageSource" = type { i32 (...)** }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::CanvasContextCreationAttributesCore" = type <{ i32 (...)**, i8, i8, [6 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8], %"class.WTF::String", i8, i8, [6 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8] }>
%"class.WTF::String" = type { %class.scoped_refptr.96 }
%class.scoped_refptr.96 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.97" }
%"struct.std::__1::atomic.97" = type { %"struct.std::__1::__atomic_base.98" }
%"struct.std::__1::__atomic_base.98" = type { %"struct.std::__1::__atomic_base.99" }
%"struct.std::__1::__atomic_base.99" = type { %"struct.std::__1::__cxx_atomic_impl.100" }
%"struct.std::__1::__cxx_atomic_impl.100" = type { %"struct.std::__1::__cxx_atomic_base_impl.101" }
%"struct.std::__1::__cxx_atomic_base_impl.101" = type { i32 }
%"class.blink::DrawingBuffer::Client" = type { i32 (...)** }
%"class.blink::NoAllocDirectCallHost" = type { %"class.WTF::Vector.102", %"struct.v8::FastApiCallbackOptions"* }
%"class.WTF::Vector.102" = type { %"class.WTF::VectorBuffer.103" }
%"class.WTF::VectorBuffer.103" = type { %"class.WTF::VectorBufferBase.104" }
%"class.WTF::VectorBufferBase.104" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"struct.v8::FastApiCallbackOptions" = type { i8, %union.anon.107 }
%union.anon.107 = type { i64 }
%class.scoped_refptr.108 = type { %"class.blink::DrawingBuffer"* }
%"class.blink::DrawingBuffer" = type { %"class.cc::TextureLayerClient", %"class.WTF::RefCounted", %"class.WTF::Vector.109", %"class.blink::DrawingBuffer::Client"*, i32, i32, %"class.std::__1::unique_ptr.117", %"class.gpu::gles2::GLES2Interface"*, %"class.std::__1::unique_ptr.143", %"class.blink::IntSize", i8, i8, i8, i8, i8, %"struct.blink::Platform::GraphicsInfo", i8, i8, i32, %"class.blink::DrawingBuffer::ScopedStateRestorer"*, i32, i32, i32, i32, %"struct.gpu::Mailbox", i32, %class.scoped_refptr.152, %class.scoped_refptr.152, i8, i8, i32, i8, i8, %"class.gfx::ColorSpace", i32, i8, i32, i32, i32, i8, i8, i8, i32, %class.scoped_refptr.161, %"class.WTF::Deque", i32, i8, i32, i32, %"class.base::WeakPtrFactory.166" }
%"class.cc::TextureLayerClient" = type { i32 (...)** }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.109" = type { %"class.WTF::VectorBuffer.110" }
%"class.WTF::VectorBuffer.110" = type { %"class.WTF::VectorBufferBase.111" }
%"class.WTF::VectorBufferBase.111" = type { %"struct.blink::DrawingBuffer::RegisteredBitmap"*, i32, i32 }
%"struct.blink::DrawingBuffer::RegisteredBitmap" = type { %class.scoped_refptr.112, %"class.cc::SharedBitmapIdRegistration" }
%class.scoped_refptr.112 = type { %"class.cc::CrossThreadSharedBitmap"* }
%"class.cc::CrossThreadSharedBitmap" = type <{ %"class.base::RefCountedThreadSafe.113", %"struct.gpu::Mailbox", [4 x i8], %"class.base::ReadOnlySharedMemoryRegion", %"class.base::WritableSharedMemoryMapping", %"class.gfx::Size", i32, [4 x i8] }>
%"class.base::RefCountedThreadSafe.113" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::ReadOnlySharedMemoryRegion" = type { %"class.base::subtle::PlatformSharedMemoryRegion" }
%"class.base::subtle::PlatformSharedMemoryRegion" = type { %"struct.base::subtle::ScopedFDPair", i32, i64, %"class.base::UnguessableToken" }
%"struct.base::subtle::ScopedFDPair" = type { %"class.base::ScopedGeneric", %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::WritableSharedMemoryMapping" = type { %"class.base::SharedMemoryMapping" }
%"class.base::SharedMemoryMapping" = type { i32 (...)**, i8*, i64, i64, %"class.base::UnguessableToken" }
%"class.gfx::Size" = type { i32, i32 }
%"class.cc::SharedBitmapIdRegistration" = type { %"class.base::WeakPtr.114", %"struct.gpu::Mailbox" }
%"class.base::WeakPtr.114" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::WebGraphicsContext3DProviderWrapper"* }
%"class.blink::WebGraphicsContext3DProviderWrapper" = type { %"class.std::__1::unique_ptr.120", %"class.std::__1::unique_ptr.126", %"class.base::ObserverList", %"class.base::WeakPtrFactory.139" }
%"class.std::__1::unique_ptr.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"class.blink::GraphicsContext3DUtils"* }
%"class.blink::GraphicsContext3DUtils" = type { %"class.base::WeakPtr" }
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.blink::WebGraphicsContext3DProvider"* }
%"class.blink::WebGraphicsContext3DProvider" = type { i32 (...)** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.132", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.132" = type { %"class.std::__1::__vector_base.133" }
%"class.std::__1::__vector_base.133" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.134" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::WeakPtrFactory.139" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.gpu::gles2::GLES2Interface" = type { %"class.gpu::InterfaceBase" }
%"class.gpu::InterfaceBase" = type { i32 (...)** }
%"struct.blink::Platform::GraphicsInfo" = type { i32, i32, i32, i8, i8, i8, i8, i8, %"class.blink::WebString", %"class.blink::WebString", %"class.blink::WebString", %"class.blink::WebString" }
%"class.blink::WebString" = type { %class.scoped_refptr.96 }
%"class.blink::DrawingBuffer::ScopedStateRestorer" = type <{ %class.scoped_refptr.108, %"class.blink::DrawingBuffer::ScopedStateRestorer"*, i8, i8, i8, i8, i8, i8, i8, i8 }>
%"struct.gpu::Mailbox" = type { [16 x i8] }
%class.scoped_refptr.152 = type { %"struct.blink::DrawingBuffer::ColorBuffer"* }
%"struct.blink::DrawingBuffer::ColorBuffer" = type { %"class.base::RefCountedThreadSafe.153", %"class.base::PlatformThreadRef", %"class.base::WeakPtr.154", %"class.blink::IntSize", i32, i32, %"class.std::__1::unique_ptr.155", i32, %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", %"struct.gpu::SyncToken" }
%"class.base::RefCountedThreadSafe.153" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtr.154" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.gfx::GpuMemoryBuffer"* }
%"class.gfx::GpuMemoryBuffer" = type { i32 (...)** }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%class.scoped_refptr.161 = type { %"class.cc::TextureLayer"* }
%"class.cc::TextureLayer" = type opaque
%"class.WTF::Deque" = type { %"class.WTF::Deque<scoped_refptr<blink::DrawingBuffer::ColorBuffer>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<scoped_refptr<blink::DrawingBuffer::ColorBuffer>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.164" }
%"class.WTF::VectorBuffer.164" = type { %"class.WTF::VectorBufferBase.165" }
%"class.WTF::VectorBufferBase.165" = type { %class.scoped_refptr.152*, i32, i32 }
%"class.base::WeakPtrFactory.166" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.167" = type { %"class.blink::MemberBase.168" }
%"class.blink::MemberBase.168" = type { %"class.blink::WebGLContextGroup"* }
%"class.blink::WebGLContextGroup" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.71, %"class.base::WeakPtrFactory.169" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory.169" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%class.scoped_refptr.71 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.72" }>
%"class.base::RefCountedThreadSafe.72" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.170" = type { %"class.blink::MemberBase.171" }
%"class.blink::MemberBase.171" = type { %"class.blink::WebGLBuffer"* }
%"class.blink::WebGLBuffer" = type { %"class.blink::WebGLSharedPlatform3DObject.base", i32, i64 }
%"class.blink::WebGLSharedPlatform3DObject.base" = type <{ %"class.blink::WebGLSharedObject", i32 }>
%"class.blink::WebGLSharedObject" = type { %"class.blink::WebGLObject.base", %"class.blink::Member.167" }
%"class.blink::Member.172" = type { %"class.blink::MemberBase.173" }
%"class.blink::MemberBase.173" = type { %"class.blink::WebGLVertexArrayObjectBase"* }
%"class.blink::WebGLVertexArrayObjectBase" = type <{ %"class.blink::WebGLContextObject", i32, i32, i8, [7 x i8], %"class.blink::Member.170", %"class.blink::HeapVector", %"class.WTF::Vector.180", i8, [7 x i8] }>
%"class.blink::HeapVector" = type { %"class.WTF::Vector.176" }
%"class.WTF::Vector.176" = type { %"class.WTF::VectorBuffer.177" }
%"class.WTF::VectorBuffer.177" = type { %"class.WTF::VectorBufferBase.178" }
%"class.WTF::VectorBufferBase.178" = type { %"class.blink::Member.170"*, i32, i32 }
%"class.WTF::Vector.180" = type { %"class.WTF::VectorBuffer.181" }
%"class.WTF::VectorBuffer.181" = type { %"class.WTF::VectorBufferBase.182" }
%"class.WTF::VectorBufferBase.182" = type { i8*, i32, i32 }
%"class.WTF::Vector.185" = type { %"class.WTF::VectorBuffer.186" }
%"class.WTF::VectorBuffer.186" = type { %"class.WTF::VectorBufferBase.187" }
%"class.WTF::VectorBufferBase.187" = type { i32*, i32, i32 }
%"class.blink::Member.190" = type { %"class.blink::MemberBase.191" }
%"class.blink::MemberBase.191" = type { %"class.blink::WebGLProgram"* }
%"class.blink::WebGLProgram" = type opaque
%"class.blink::Member.192" = type { %"class.blink::MemberBase.193" }
%"class.blink::MemberBase.193" = type { %"class.blink::WebGLFramebuffer"* }
%"class.blink::Member.194" = type { %"class.blink::MemberBase.195" }
%"class.blink::MemberBase.195" = type { %"class.blink::WebGLRenderbuffer"* }
%"class.blink::WebGLRenderbuffer" = type <{ %"class.blink::WebGLSharedPlatform3DObject.base", i32, i32, i32, i8, i8, [6 x i8] }>
%"class.blink::Member.196" = type { %"class.blink::MemberBase.197" }
%"class.blink::MemberBase.197" = type { %"class.blink::ScriptPromiseResolver"* }
%"class.blink::ScriptPromiseResolver" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::ThreadState::PrefinalizerRegistration.208", i32, %"class.blink::Member.209", %"class.blink::TaskHandle", %"class.blink::ScriptPromise::InternalResolver", %"class.blink::TraceWrapperV8Reference.418", %"class.blink::SelfKeepAlive.422" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.200" }
%"class.blink::WeakMember.200" = type { %"class.blink::MemberBase.201" }
%"class.blink::MemberBase.201" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet.204" }
%"class.WTF::HashSet.204" = type { %"class.WTF::HashTable.205" }
%"class.WTF::HashTable.205" = type <{ %"class.blink::WeakMember.207"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.207" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration.208" = type { i8 }
%"class.blink::Member.209" = type { %"class.blink::MemberBase.210" }
%"class.blink::MemberBase.210" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.213, %"class.blink::Member.412", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.213 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.412" = type { %"class.blink::MemberBase.413" }
%"class.blink::MemberBase.413" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.414" }
%"class.blink::Persistent.414" = type { %"class.blink::PersistentBase.415" }
%"class.blink::PersistentBase.415" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias.416" }
%"class.base::StrongAlias.416" = type { %"class.base::UnguessableToken" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.417 }
%class.scoped_refptr.417 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::ScriptPromise::InternalResolver" = type { %"class.blink::Member.209", %"class.blink::ScriptValue" }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.418", %class.scoped_refptr.421 }
%class.scoped_refptr.421 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::TraceWrapperV8Reference.418" = type { %"class.v8::TracedReference.419" }
%"class.v8::TracedReference.419" = type { %"class.v8::BasicTracedReference.420" }
%"class.v8::BasicTracedReference.420" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::SelfKeepAlive.422" = type { %"class.blink::Persistent.423" }
%"class.blink::Persistent.423" = type { %"class.blink::PersistentBase.424" }
%"class.blink::PersistentBase.424" = type { %"class.blink::ScriptPromiseResolver"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapVector.425" = type { %"class.WTF::Vector.428" }
%"class.WTF::Vector.428" = type { %"class.WTF::VectorBuffer.429" }
%"class.WTF::VectorBuffer.429" = type { %"class.WTF::VectorBufferBase.430" }
%"class.WTF::VectorBufferBase.430" = type { %"class.blink::WebGLRenderingContextBase::TextureUnitState"*, i32, i32 }
%"class.blink::WebGLRenderingContextBase::TextureUnitState" = type { %"class.blink::Member.431", %"class.blink::Member.431", %"class.blink::Member.431", %"class.blink::Member.431", %"class.blink::Member.431", %"class.blink::Member.431", %"class.blink::Member.431" }
%"class.blink::Member.431" = type { %"class.blink::MemberBase.432" }
%"class.blink::MemberBase.432" = type { %"class.blink::WebGLTexture"* }
%"class.blink::WebGLTexture" = type { %"class.blink::WebGLSharedPlatform3DObject.base", i32, %"struct.blink::WebGLTexture::VideoFrameUploadMetadata" }
%"struct.blink::WebGLTexture::VideoFrameUploadMetadata" = type <{ i32, %"class.blink::IntRect", [4 x i8], %"class.base::TimeDelta", %"class.base::TimeDelta", i8, [7 x i8] }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::WebGLRenderingContextBase::LRUCanvasResourceProviderCache" = type { i32, %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.std::__1::unique_ptr"*, i32, i32 }
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.blink::Extensions3DUtil"* }
%"class.blink::Extensions3DUtil" = type <{ %"class.gpu::gles2::GLES2Interface"*, %"class.WTF::HashSet", %"class.WTF::HashSet", i8, [7 x i8] }>
%"class.blink::HeapVector.439" = type { %"class.WTF::Vector.442" }
%"class.WTF::Vector.442" = type { %"class.WTF::VectorBuffer.443" }
%"class.WTF::VectorBuffer.443" = type { %"class.WTF::VectorBufferBase.444" }
%"class.WTF::VectorBufferBase.444" = type { %"class.blink::Member.445"*, i32, i32 }
%"class.blink::Member.445" = type opaque
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.146" }
%"class.WTF::HashTable.146" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashSet.447" = type { %"class.WTF::HashTable.448" }
%"class.WTF::HashTable.448" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.base::MRUCache.451" = type { %"class.base::MRUCacheBase.452" }
%"class.base::MRUCacheBase.452" = type { i32 (...)**, %"class.std::__1::list.453", %"class.std::__1::map.460", i64 }
%"class.std::__1::list.453" = type { %"class.std::__1::__list_imp.454" }
%"class.std::__1::__list_imp.454" = type { %"struct.std::__1::__list_node_base.455", %"class.std::__1::__compressed_pair.456" }
%"struct.std::__1::__list_node_base.455" = type { %"struct.std::__1::__list_node_base.455"*, %"struct.std::__1::__list_node_base.455"* }
%"class.std::__1::__compressed_pair.456" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"class.std::__1::map.460" = type { %"class.std::__1::__tree.461" }
%"class.std::__1::__tree.461" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.462", %"class.std::__1::__compressed_pair.466" }
%"class.std::__1::__compressed_pair.462" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"class.blink::CanvasColorParams" = type { i32, i32, i32 }
%"class.blink::WebGLObject" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ThreadState::PrefinalizerRegistration", [3 x i8], i32, i32, i8, i8, [2 x i8] }>
%"class.v8::Value" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.496" }
%"class.std::__1::__compressed_pair.496" = type { %"struct.std::__1::__compressed_pair_elem.497" }
%"struct.std::__1::__compressed_pair_elem.497" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.498 }
%union.anon.498 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::(anonymous namespace)::WebGLTextureAttachment" = type <{ %"class.blink::WebGLFramebuffer::WebGLAttachment", %"class.blink::Member.431", i32, i32, i32, [4 x i8] }>
%"class.blink::WebGLSharedPlatform3DObject" = type <{ %"class.blink::WebGLSharedObject", i32, [4 x i8] }>
%"class.blink::HeapHashTableBacking" = type { i8 }
%"class.blink::(anonymous namespace)::WebGLRenderbufferAttachment" = type { %"class.blink::WebGLFramebuffer::WebGLAttachment", %"class.blink::Member.194" }

$_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEEaSERKS2_ = comdat any

$_ZNK5blink16WebGLFramebuffer18NameInHeapSnapshotEv = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZNK5blink16WebGLFramebuffer18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink16WebGLFramebuffer9HasObjectEv = comdat any

$_ZNK5blink18WebGLContextObject17HasGroupOrContextEv = comdat any

$_ZNK5blink16WebGLFramebuffer15WebGLAttachment5TraceEPNS_7VisitorE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm = comdat any

$_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_16WebGLFramebuffer15WebGLAttachmentEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_16WebGLFramebuffer15WebGLAttachmentEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_16WebGLFramebuffer15WebGLAttachmentEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_12WebGLTextureEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableIjNS_12KeyValuePairIjN5blink6MemberINS2_16WebGLFramebuffer15WebGLAttachmentEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_10HashTraitsIjEENSC_IS6_EEEESD_NS2_13HeapAllocatorEE6ExpandEPS7_ = comdat any

$_ZN3WTF9HashTableIjNS_12KeyValuePairIjN5blink6MemberINS2_16WebGLFramebuffer15WebGLAttachmentEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_10HashTraitsIjEENSC_IS6_EEEESD_NS2_13HeapAllocatorEE12ExpandBufferEjPS7_Rb = comdat any

$_ZN3WTF9HashTableIjNS_12KeyValuePairIjN5blink6MemberINS2_16WebGLFramebuffer15WebGLAttachmentEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_10HashTraitsIjEENSC_IS6_EEEESD_NS2_13HeapAllocatorEE8RehashToEPS7_jSI_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableIjNS2_12KeyValuePairIjNS_6MemberINS_16WebGLFramebuffer15WebGLAttachmentEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIjEENS2_18HashMapValueTraitsINS2_10HashTraitsIjEENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableIjNS1_12KeyValuePairIjNS_6MemberINS_16WebGLFramebuffer15WebGLAttachmentEEEEENS1_24KeyValuePairKeyExtractorENS1_7IntHashIjEENS1_18HashMapValueTraitsINS1_10HashTraitsIjEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEE14AllocateObjectISJ_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIjNS2_12KeyValuePairIjNS_6MemberINS_16WebGLFramebuffer15WebGLAttachmentEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIjEENS2_18HashMapValueTraitsINS2_10HashTraitsIjEENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableIjNS2_12KeyValuePairIjNS_6MemberINS_16WebGLFramebuffer15WebGLAttachmentEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIjEENS2_18HashMapValueTraitsINS2_10HashTraitsIjEENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_17WebGLRenderbufferEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableIjNS_12KeyValuePairIjN5blink6MemberINS2_16WebGLFramebuffer15WebGLAttachmentEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_10HashTraitsIjEENSC_IS6_EEEESD_NS2_13HeapAllocatorEE5eraseEPKS7_ = comdat any

$_ZTVN5blink16WebGLFramebuffer15WebGLAttachmentE = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_16WebGLFramebuffer15WebGLAttachmentEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_16WebGLFramebuffer15WebGLAttachmentEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIjNS2_12KeyValuePairIjNS_6MemberINS_16WebGLFramebuffer15WebGLAttachmentEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIjEENS2_18HashMapValueTraitsINS2_10HashTraitsIjEENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIjNS2_12KeyValuePairIjNS_6MemberINS_16WebGLFramebuffer15WebGLAttachmentEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIjEENS2_18HashMapValueTraitsINS2_10HashTraitsIjEENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink16WebGLFramebuffer15WebGLAttachmentE = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.blink::Visitor"*)* @_ZNK5blink16WebGLFramebuffer15WebGLAttachment5TraceEPNS_7VisitorE to i8*)] }, comdat, align 8
@_ZTVN5blink16WebGLFramebufferE = hidden unnamed_addr constant { [17 x i8*] } { [17 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::WebGLFramebuffer"*)* @_ZNK5blink16WebGLFramebuffer18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::WebGLFramebuffer"*)* @_ZN5blink16WebGLFramebufferD2Ev to i8*), i8* bitcast (void (%"class.blink::WebGLFramebuffer"*)* @_ZN5blink16WebGLFramebufferD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::WebGLFramebuffer"*, %"class.blink::Visitor"*)* @_ZNK5blink16WebGLFramebuffer5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::WebGLFramebuffer"*)* @_ZNK5blink16WebGLFramebuffer18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (i1 (%"class.blink::WebGLContextObject"*, %"class.blink::WebGLContextGroup"*, %"class.blink::WebGLRenderingContextBase"*)* @_ZNK5blink18WebGLContextObject8ValidateEPKNS_17WebGLContextGroupEPKNS_25WebGLRenderingContextBaseE to i8*), i8* bitcast (i1 (%"class.blink::WebGLFramebuffer"*)* @_ZNK5blink16WebGLFramebuffer9HasObjectEv to i8*), i8* bitcast (void (%"class.blink::WebGLFramebuffer"*, %"class.gpu::gles2::GLES2Interface"*)* @_ZN5blink16WebGLFramebuffer16DeleteObjectImplEPN3gpu5gles214GLES2InterfaceE to i8*), i8* bitcast (i1 (%"class.blink::WebGLContextObject"*)* @_ZNK5blink18WebGLContextObject17HasGroupOrContextEv to i8*), i8* bitcast (i32 (%"class.blink::WebGLContextObject"*)* @_ZNK5blink18WebGLContextObject28CurrentNumberOfContextLossesEv to i8*), i8* bitcast (%"class.gpu::gles2::GLES2Interface"* (%"class.blink::WebGLContextObject"*)* @_ZNK5blink18WebGLContextObject15GetAGLInterfaceEv to i8*)] }, align 8
@_ZN5blink12_GLOBAL__N_117kIncompleteOpaqueE = internal constant [94 x i8] c"Cannot render to a XRWebGLLayer framebuffer outside of an XRSession animation frame callback.\00", align 16
@.str = private unnamed_addr constant [52 x i8] c"conflicting DEPTH/STENCIL/DEPTH_STENCIL attachments\00", align 1
@.str.1 = private unnamed_addr constant [17 x i8] c"WebGLFramebuffer\00", align 1
@_ZN5blink16WebGLFramebuffer18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.3 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.4 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.5 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv = private unnamed_addr constant [60 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned int]\00", align 1
@.str.6 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.7 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.8 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16WebGLFramebuffer15WebGLAttachmentEEEPKcv = private unnamed_addr constant [88 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::WebGLFramebuffer::WebGLAttachment]\00", align 1
@_ZZN5blink11GCInfoTraitINS_16WebGLFramebuffer15WebGLAttachmentEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_16WebGLFramebuffer15WebGLAttachmentEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_16WebGLFramebuffer15WebGLAttachmentEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_16WebGLFramebuffer15WebGLAttachmentEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink12_GLOBAL__N_122WebGLTextureAttachmentE = internal unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::(anonymous namespace)::WebGLTextureAttachment"*)* @_ZNK5blink12_GLOBAL__N_122WebGLTextureAttachment18NameInHeapSnapshotEv to i8*), i8* bitcast (%"class.blink::WebGLSharedObject"* (%"class.blink::(anonymous namespace)::WebGLTextureAttachment"*)* @_ZNK5blink12_GLOBAL__N_122WebGLTextureAttachment6ObjectEv to i8*), i8* bitcast (i1 (%"class.blink::(anonymous namespace)::WebGLTextureAttachment"*, %"class.blink::WebGLSharedObject"*)* @_ZNK5blink12_GLOBAL__N_122WebGLTextureAttachment14IsSharedObjectEPNS_17WebGLSharedObjectE to i8*), i8* bitcast (i1 (%"class.blink::(anonymous namespace)::WebGLTextureAttachment"*)* @_ZNK5blink12_GLOBAL__N_122WebGLTextureAttachment5ValidEv to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::WebGLTextureAttachment"*, %"class.gpu::gles2::GLES2Interface"*)* @_ZN5blink12_GLOBAL__N_122WebGLTextureAttachment10OnDetachedEPN3gpu5gles214GLES2InterfaceE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::WebGLTextureAttachment"*, %"class.gpu::gles2::GLES2Interface"*, i32, i32)* @_ZN5blink12_GLOBAL__N_122WebGLTextureAttachment6AttachEPN3gpu5gles214GLES2InterfaceEjj to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::WebGLTextureAttachment"*, %"class.gpu::gles2::GLES2Interface"*, i32, i32)* @_ZN5blink12_GLOBAL__N_122WebGLTextureAttachment8UnattachEPN3gpu5gles214GLES2InterfaceEjj to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::WebGLTextureAttachment"*, %"class.blink::Visitor"*)* @_ZNK5blink12_GLOBAL__N_122WebGLTextureAttachment5TraceEPNS_7VisitorE to i8*)] }, align 8
@.str.9 = private unnamed_addr constant [23 x i8] c"WebGLTextureAttachment\00", align 1
@.str.10 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.11 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.12 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.13 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIjNS2_12KeyValuePairIjNS_6MemberINS_16WebGLFramebuffer15WebGLAttachmentEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIjEENS2_18HashMapValueTraitsINS2_10HashTraitsIjEENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIjNS2_12KeyValuePairIjNS_6MemberINS_16WebGLFramebuffer15WebGLAttachmentEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIjEENS2_18HashMapValueTraitsINS2_10HashTraitsIjEENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableIjNS2_12KeyValuePairIjNS_6MemberINS_16WebGLFramebuffer15WebGLAttachmentEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIjEENS2_18HashMapValueTraitsINS2_10HashTraitsIjEENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIjNS2_12KeyValuePairIjNS_6MemberINS_16WebGLFramebuffer15WebGLAttachmentEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIjEENS2_18HashMapValueTraitsINS2_10HashTraitsIjEENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.14 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableIjNS_12KeyValuePairIjNS1_6MemberINS1_16WebGLFramebuffer15WebGLAttachmentEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_10HashTraitsIjEENSE_IS8_EEEESF_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [441 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<unsigned int, WTF::KeyValuePair<unsigned int, blink::Member<blink::WebGLFramebuffer::WebGLAttachment> >, WTF::KeyValuePairKeyExtractor, WTF::IntHash<unsigned int>, WTF::HashMapValueTraits<WTF::HashTraits<unsigned int>, WTF::HashTraits<blink::Member<blink::WebGLFramebuffer::WebGLAttachment> > >, WTF::HashTraits<unsigned int>, blink::HeapAllocator> >]\00", align 1
@_ZTVN5blink12_GLOBAL__N_127WebGLRenderbufferAttachmentE = internal unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::(anonymous namespace)::WebGLRenderbufferAttachment"*)* @_ZNK5blink12_GLOBAL__N_127WebGLRenderbufferAttachment18NameInHeapSnapshotEv to i8*), i8* bitcast (%"class.blink::WebGLSharedObject"* (%"class.blink::(anonymous namespace)::WebGLRenderbufferAttachment"*)* @_ZNK5blink12_GLOBAL__N_127WebGLRenderbufferAttachment6ObjectEv to i8*), i8* bitcast (i1 (%"class.blink::(anonymous namespace)::WebGLRenderbufferAttachment"*, %"class.blink::WebGLSharedObject"*)* @_ZNK5blink12_GLOBAL__N_127WebGLRenderbufferAttachment14IsSharedObjectEPNS_17WebGLSharedObjectE to i8*), i8* bitcast (i1 (%"class.blink::(anonymous namespace)::WebGLRenderbufferAttachment"*)* @_ZNK5blink12_GLOBAL__N_127WebGLRenderbufferAttachment5ValidEv to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::WebGLRenderbufferAttachment"*, %"class.gpu::gles2::GLES2Interface"*)* @_ZN5blink12_GLOBAL__N_127WebGLRenderbufferAttachment10OnDetachedEPN3gpu5gles214GLES2InterfaceE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::WebGLRenderbufferAttachment"*, %"class.gpu::gles2::GLES2Interface"*, i32, i32)* @_ZN5blink12_GLOBAL__N_127WebGLRenderbufferAttachment6AttachEPN3gpu5gles214GLES2InterfaceEjj to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::WebGLRenderbufferAttachment"*, %"class.gpu::gles2::GLES2Interface"*, i32, i32)* @_ZN5blink12_GLOBAL__N_127WebGLRenderbufferAttachment8UnattachEPN3gpu5gles214GLES2InterfaceEjj to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::WebGLRenderbufferAttachment"*, %"class.blink::Visitor"*)* @_ZNK5blink12_GLOBAL__N_127WebGLRenderbufferAttachment5TraceEPNS_7VisitorE to i8*)] }, align 8
@.str.15 = private unnamed_addr constant [16 x i8] c"WebGLAttachment\00", align 1

@_ZN5blink16WebGLFramebufferC1EPNS_25WebGLRenderingContextBaseEb = hidden unnamed_addr alias void (%"class.blink::WebGLFramebuffer"*, %"class.blink::WebGLRenderingContextBase"*, i1), void (%"class.blink::WebGLFramebuffer"*, %"class.blink::WebGLRenderingContextBase"*, i1)* @_ZN5blink16WebGLFramebufferC2EPNS_25WebGLRenderingContextBaseEb
@_ZN5blink16WebGLFramebufferD1Ev = hidden unnamed_addr alias void (%"class.blink::WebGLFramebuffer"*), void (%"class.blink::WebGLFramebuffer"*)* @_ZN5blink16WebGLFramebufferD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink16WebGLFramebuffer15WebGLAttachmentC2Ev(%"class.blink::WebGLFramebuffer::WebGLAttachment"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WebGLFramebuffer::WebGLAttachment", %"class.blink::WebGLFramebuffer::WebGLAttachment"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink16WebGLFramebuffer15WebGLAttachmentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::WebGLFramebuffer"* @_ZN5blink16WebGLFramebuffer12CreateOpaqueEPNS_25WebGLRenderingContextBaseEb(%"class.blink::WebGLRenderingContextBase"*, i1 zeroext) local_unnamed_addr #1 align 2 {
  %3 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 120) #10
  %4 = bitcast i8* %3 to %"class.blink::WebGLFramebuffer"*
  %5 = bitcast i8* %3 to %"class.blink::WebGLContextObject"*
  tail call void @_ZN5blink18WebGLContextObjectC2EPNS_25WebGLRenderingContextBaseE(%"class.blink::WebGLContextObject"* %5, %"class.blink::WebGLRenderingContextBase"* %0) #10
  %6 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTVN5blink16WebGLFramebufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds i8, i8* %3, i64 40
  %8 = bitcast i8* %7 to i32*
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds i8, i8* %3, i64 48
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 20, i1 false) #10
  %10 = getelementptr inbounds i8, i8* %3, i64 72
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds i8, i8* %3, i64 73
  store i8 1, i8* %11, align 1
  %12 = getelementptr inbounds i8, i8* %3, i64 74
  store i8 0, i8* %12, align 2
  %13 = getelementptr inbounds i8, i8* %3, i64 75
  store i8 1, i8* %13, align 1
  %14 = getelementptr inbounds i8, i8* %3, i64 76
  store i8 0, i8* %14, align 4
  %15 = getelementptr inbounds i8, i8* %3, i64 77
  store i8 0, i8* %15, align 1
  %16 = getelementptr inbounds i8, i8* %3, i64 80
  %17 = getelementptr inbounds i8, i8* %3, i64 112
  %18 = bitcast i8* %17 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false) #10
  store i32 36064, i32* %18, align 8
  %19 = tail call %"class.blink::DrawingBuffer"* @_ZNK5blink25WebGLRenderingContextBase16GetDrawingBufferEv(%"class.blink::WebGLRenderingContextBase"* %0) #10
  %20 = icmp eq %"class.blink::DrawingBuffer"* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %2
  %22 = tail call %"class.gpu::gles2::GLES2Interface"* @_ZN5blink13DrawingBuffer9ContextGLEv(%"class.blink::DrawingBuffer"* nonnull %19) #10
  br label %23

23:                                               ; preds = %2, %21
  %24 = phi %"class.gpu::gles2::GLES2Interface"* [ %22, %21 ], [ null, %2 ]
  %25 = bitcast %"class.gpu::gles2::GLES2Interface"* %24 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)***
  %26 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)** %26, i64 79
  %28 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)** %27, align 8
  tail call void %28(%"class.gpu::gles2::GLES2Interface"* %24, i32 1, i32* %8) #10
  %29 = getelementptr inbounds i8, i8* %3, i64 -4
  %30 = bitcast i8* %29 to i16*
  %31 = load atomic i16, i16* %30 monotonic, align 2
  %32 = or i16 %31, 1
  store atomic i16 %32, i16* %30 release, align 2
  %33 = zext i1 %1 to i8
  store i8 %33, i8* %14, align 4
  ret %"class.blink::WebGLFramebuffer"* %4
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16WebGLFramebufferC2EPNS_25WebGLRenderingContextBaseEb(%"class.blink::WebGLFramebuffer"*, %"class.blink::WebGLRenderingContextBase"*, i1 zeroext) unnamed_addr #1 align 2 {
  %4 = zext i1 %2 to i8
  %5 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 0
  tail call void @_ZN5blink18WebGLContextObjectC2EPNS_25WebGLRenderingContextBaseE(%"class.blink::WebGLContextObject"* %5, %"class.blink::WebGLRenderingContextBase"* %1) #10
  %6 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTVN5blink16WebGLFramebufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 1
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 3
  %9 = bitcast %"class.blink::HeapHashMap"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 20, i1 false) #10
  %10 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 4
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 5
  store i8 1, i8* %11, align 1
  %12 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 6
  store i8 0, i8* %12, align 2
  %13 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 7
  store i8 %4, i8* %13, align 1
  %14 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 8
  store i8 0, i8* %14, align 4
  %15 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 9
  store i8 0, i8* %15, align 1
  %16 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 11
  %17 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 13
  %18 = bitcast %"class.WTF::Vector"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 32, i1 false)
  store i32 36064, i32* %17, align 8
  %19 = tail call %"class.blink::DrawingBuffer"* @_ZNK5blink25WebGLRenderingContextBase16GetDrawingBufferEv(%"class.blink::WebGLRenderingContextBase"* %1) #10
  %20 = icmp eq %"class.blink::DrawingBuffer"* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %3
  %22 = tail call %"class.gpu::gles2::GLES2Interface"* @_ZN5blink13DrawingBuffer9ContextGLEv(%"class.blink::DrawingBuffer"* nonnull %19) #10
  br label %23

23:                                               ; preds = %3, %21
  %24 = phi %"class.gpu::gles2::GLES2Interface"* [ %22, %21 ], [ null, %3 ]
  %25 = bitcast %"class.gpu::gles2::GLES2Interface"* %24 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)***
  %26 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)** %26, i64 79
  %28 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)** %27, align 8
  tail call void %28(%"class.gpu::gles2::GLES2Interface"* %24, i32 1, i32* %7) #10
  ret void
}

declare void @_ZN5blink18WebGLContextObjectC2EPNS_25WebGLRenderingContextBaseE(%"class.blink::WebGLContextObject"*, %"class.blink::WebGLRenderingContextBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16WebGLFramebufferD2Ev(%"class.blink::WebGLFramebuffer"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTVN5blink16WebGLFramebufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 12, i32 0, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  %6 = bitcast i32* %4 to i8*
  br i1 %5, label %13, label %7, !prof !2

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 12, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11, !prof !3

11:                                               ; preds = %7
  store i32 0, i32* %8, align 4
  br label %12

12:                                               ; preds = %11, %7
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %6) #10
  store i32* null, i32** %3, align 8
  br label %13

13:                                               ; preds = %1, %12
  %14 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %15 = load i32*, i32** %14, align 8
  %16 = icmp eq i32* %15, null
  %17 = bitcast i32* %15 to i8*
  br i1 %16, label %24, label %18, !prof !2

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 11, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %23, label %22, !prof !3

22:                                               ; preds = %18
  store i32 0, i32* %19, align 4
  br label %23

23:                                               ; preds = %22, %18
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %17) #10
  store i32* null, i32** %14, align 8
  br label %24

24:                                               ; preds = %13, %23
  %25 = bitcast %"class.blink::WebGLFramebuffer"* %0 to %"class.blink::WebGLObject"*
  tail call void @_ZN5blink11WebGLObjectD2Ev(%"class.blink::WebGLObject"* %25) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink11WebGLObjectD2Ev(%"class.blink::WebGLObject"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16WebGLFramebufferD0Ev(%"class.blink::WebGLFramebuffer"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTVN5blink16WebGLFramebufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 12, i32 0, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  %6 = bitcast i32* %4 to i8*
  br i1 %5, label %13, label %7, !prof !2

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 12, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11, !prof !3

11:                                               ; preds = %7
  store i32 0, i32* %8, align 4
  br label %12

12:                                               ; preds = %11, %7
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %6) #10
  store i32* null, i32** %3, align 8
  br label %13

13:                                               ; preds = %12, %1
  %14 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %15 = load i32*, i32** %14, align 8
  %16 = icmp eq i32* %15, null
  %17 = bitcast i32* %15 to i8*
  br i1 %16, label %24, label %18, !prof !2

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 11, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %23, label %22, !prof !3

22:                                               ; preds = %18
  store i32 0, i32* %19, align 4
  br label %23

23:                                               ; preds = %22, %18
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %17) #10
  store i32* null, i32** %14, align 8
  br label %24

24:                                               ; preds = %13, %23
  %25 = bitcast %"class.blink::WebGLFramebuffer"* %0 to %"class.blink::WebGLObject"*
  tail call void @_ZN5blink11WebGLObjectD2Ev(%"class.blink::WebGLObject"* %25) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16WebGLFramebuffer32SetAttachmentForBoundFramebufferEjjjPNS_12WebGLTextureEiii(%"class.blink::WebGLFramebuffer"*, i32, i32, i32, %"class.blink::WebGLTexture"*, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %9 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %10 = load %"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLRenderingContextBase"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::WebGLRenderingContextBase", %"class.blink::WebGLRenderingContextBase"* %10, i64 0, i32 112
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %14, label %56

14:                                               ; preds = %8
  %15 = icmp eq i32 %2, 33306
  br i1 %15, label %16, label %17

16:                                               ; preds = %14
  tail call void @_ZN5blink16WebGLFramebuffer21SetAttachmentInternalEjjjPNS_12WebGLTextureEii(%"class.blink::WebGLFramebuffer"* %0, i32 %1, i32 36096, i32 %3, %"class.blink::WebGLTexture"* %4, i32 %5, i32 %6)
  br label %17

17:                                               ; preds = %14, %16
  %18 = phi i32 [ 36128, %16 ], [ %2, %14 ]
  tail call void @_ZN5blink16WebGLFramebuffer21SetAttachmentInternalEjjjPNS_12WebGLTextureEii(%"class.blink::WebGLFramebuffer"* %0, i32 %1, i32 %18, i32 %3, %"class.blink::WebGLTexture"* %4, i32 %5, i32 %6)
  %19 = icmp eq %"class.blink::WebGLTexture"* %4, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %"class.blink::WebGLTexture", %"class.blink::WebGLTexture"* %4, i64 0, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  br label %23

23:                                               ; preds = %17, %20
  %24 = phi i32 [ %22, %20 ], [ 0, %17 ]
  switch i32 %3, label %44 [
    i32 0, label %25
    i32 32879, label %25
    i32 35866, label %25
  ]

25:                                               ; preds = %23, %23, %23
  %26 = icmp sgt i32 %7, 0
  %27 = load %"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLRenderingContextBase"** %9, align 8
  %28 = tail call %"class.blink::DrawingBuffer"* @_ZNK5blink25WebGLRenderingContextBase16GetDrawingBufferEv(%"class.blink::WebGLRenderingContextBase"* %27) #10
  %29 = icmp eq %"class.blink::DrawingBuffer"* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %25
  %31 = tail call %"class.gpu::gles2::GLES2Interface"* @_ZN5blink13DrawingBuffer9ContextGLEv(%"class.blink::DrawingBuffer"* nonnull %28) #10
  br label %32

32:                                               ; preds = %25, %30
  %33 = phi %"class.gpu::gles2::GLES2Interface"* [ %31, %30 ], [ null, %25 ]
  br i1 %26, label %34, label %39

34:                                               ; preds = %32
  %35 = bitcast %"class.gpu::gles2::GLES2Interface"* %33 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32, i32)***
  %36 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32, i32)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32, i32)** %36, i64 351
  %38 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32, i32)** %37, align 8
  tail call void %38(%"class.gpu::gles2::GLES2Interface"* %33, i32 %1, i32 %2, i32 %24, i32 %5, i32 %6, i32 %7) #10
  br label %76

39:                                               ; preds = %32
  %40 = bitcast %"class.gpu::gles2::GLES2Interface"* %33 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)***
  %41 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)** %41, i64 75
  %43 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)** %42, align 8
  tail call void %43(%"class.gpu::gles2::GLES2Interface"* %33, i32 %1, i32 %2, i32 %24, i32 %5, i32 %6) #10
  br label %76

44:                                               ; preds = %23
  %45 = load %"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLRenderingContextBase"** %9, align 8
  %46 = tail call %"class.blink::DrawingBuffer"* @_ZNK5blink25WebGLRenderingContextBase16GetDrawingBufferEv(%"class.blink::WebGLRenderingContextBase"* %45) #10
  %47 = icmp eq %"class.blink::DrawingBuffer"* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = tail call %"class.gpu::gles2::GLES2Interface"* @_ZN5blink13DrawingBuffer9ContextGLEv(%"class.blink::DrawingBuffer"* nonnull %46) #10
  br label %50

50:                                               ; preds = %44, %48
  %51 = phi %"class.gpu::gles2::GLES2Interface"* [ %49, %48 ], [ null, %44 ]
  %52 = bitcast %"class.gpu::gles2::GLES2Interface"* %51 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)***
  %53 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)** %53, i64 74
  %55 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)** %54, align 8
  tail call void %55(%"class.gpu::gles2::GLES2Interface"* %51, i32 %1, i32 %2, i32 %3, i32 %24, i32 %5) #10
  br label %76

56:                                               ; preds = %8
  tail call void @_ZN5blink16WebGLFramebuffer21SetAttachmentInternalEjjjPNS_12WebGLTextureEii(%"class.blink::WebGLFramebuffer"* %0, i32 %1, i32 %2, i32 %3, %"class.blink::WebGLTexture"* %4, i32 %5, i32 %6)
  switch i32 %2, label %58 [
    i32 36096, label %57
    i32 36128, label %57
    i32 33306, label %57
  ]

57:                                               ; preds = %56, %56, %56
  tail call void @_ZN5blink16WebGLFramebuffer36CommitWebGL1DepthStencilIfConsistentEj(%"class.blink::WebGLFramebuffer"* %0, i32 %1)
  br label %76

58:                                               ; preds = %56
  %59 = load %"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLRenderingContextBase"** %9, align 8
  %60 = tail call %"class.blink::DrawingBuffer"* @_ZNK5blink25WebGLRenderingContextBase16GetDrawingBufferEv(%"class.blink::WebGLRenderingContextBase"* %59) #10
  %61 = icmp eq %"class.blink::DrawingBuffer"* %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %58
  %63 = tail call %"class.gpu::gles2::GLES2Interface"* @_ZN5blink13DrawingBuffer9ContextGLEv(%"class.blink::DrawingBuffer"* nonnull %60) #10
  br label %64

64:                                               ; preds = %58, %62
  %65 = phi %"class.gpu::gles2::GLES2Interface"* [ %63, %62 ], [ null, %58 ]
  %66 = icmp eq %"class.blink::WebGLTexture"* %4, null
  br i1 %66, label %70, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"class.blink::WebGLTexture", %"class.blink::WebGLTexture"* %4, i64 0, i32 0, i32 1
  %69 = load i32, i32* %68, align 8
  br label %70

70:                                               ; preds = %64, %67
  %71 = phi i32 [ %69, %67 ], [ 0, %64 ]
  %72 = bitcast %"class.gpu::gles2::GLES2Interface"* %65 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)***
  %73 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)*** %72, align 8
  %74 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)** %73, i64 74
  %75 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)** %74, align 8
  tail call void %75(%"class.gpu::gles2::GLES2Interface"* %65, i32 %1, i32 %2, i32 %3, i32 %71, i32 %5) #10
  br label %76

76:                                               ; preds = %50, %39, %34, %57, %70
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16WebGLFramebuffer21SetAttachmentInternalEjjjPNS_12WebGLTextureEii(%"class.blink::WebGLFramebuffer"*, i32, i32, i32, %"class.blink::WebGLTexture"*, i32, i32) local_unnamed_addr #1 align 2 {
  %8 = ptrtoint %"class.blink::WebGLTexture"* %4 to i64
  tail call void @_ZN5blink16WebGLFramebuffer24RemoveAttachmentInternalEjj(%"class.blink::WebGLFramebuffer"* %0, i32 undef, i32 %2)
  %9 = icmp eq %"class.blink::WebGLTexture"* %4, null
  br i1 %9, label %166, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %"class.blink::WebGLTexture", %"class.blink::WebGLTexture"* %4, i64 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %166, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 3, i32 0
  %16 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_16WebGLFramebuffer15WebGLAttachmentEEEPhm(i64 32) #10
  %17 = bitcast i8* %16 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink12_GLOBAL__N_122WebGLTextureAttachmentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %18 = getelementptr inbounds i8, i8* %16, i64 8
  %19 = bitcast i8* %18 to i64*
  store i64 %8, i64* %19, align 8
  %20 = getelementptr inbounds i8, i8* %16, i64 16
  %21 = bitcast i8* %20 to i32*
  store i32 %3, i32* %21, align 8
  %22 = getelementptr inbounds i8, i8* %16, i64 20
  %23 = bitcast i8* %22 to i32*
  store i32 %5, i32* %23, align 4
  %24 = getelementptr inbounds i8, i8* %16, i64 24
  %25 = bitcast i8* %24 to i32*
  store i32 %6, i32* %25, align 8
  %26 = getelementptr inbounds i8, i8* %16, i64 -4
  %27 = bitcast i8* %26 to i16*
  %28 = load atomic i16, i16* %27 monotonic, align 2
  %29 = or i16 %28, 1
  store atomic i16 %29, i16* %27 release, align 2
  %30 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %15, i64 0, i32 0
  %31 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %15, i64 0, i32 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair"* %32, null
  br i1 %33, label %34, label %37

34:                                               ; preds = %14
  %35 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjN5blink6MemberINS2_16WebGLFramebuffer15WebGLAttachmentEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_10HashTraitsIjEENSC_IS6_EEEESD_NS2_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable"* %30, %"struct.WTF::KeyValuePair"* null) #10
  %36 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  br label %37

37:                                               ; preds = %34, %14
  %38 = phi %"struct.WTF::KeyValuePair"* [ %32, %14 ], [ %36, %34 ]
  %39 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = add i32 %40, -1
  %42 = zext i32 %41 to i64
  %43 = shl i32 %2, 15
  %44 = xor i32 %43, -1
  %45 = add i32 %44, %2
  %46 = lshr i32 %45, 10
  %47 = xor i32 %46, %45
  %48 = mul i32 %47, 9
  %49 = lshr i32 %48, 6
  %50 = xor i32 %49, %48
  %51 = shl i32 %50, 11
  %52 = xor i32 %51, -1
  %53 = add i32 %50, %52
  %54 = lshr i32 %53, 16
  %55 = xor i32 %54, %53
  %56 = and i32 %41, %55
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %38, i64 %57
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %58, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %104, label %62

62:                                               ; preds = %37
  %63 = xor i32 %55, -1
  %64 = lshr i32 %53, 23
  %65 = add i32 %64, %63
  %66 = shl i32 %65, 12
  %67 = xor i32 %66, %65
  %68 = lshr i32 %67, 7
  %69 = xor i32 %68, %67
  %70 = shl i32 %69, 2
  %71 = xor i32 %70, %69
  %72 = lshr i32 %71, 20
  %73 = xor i32 %72, %71
  %74 = or i32 %73, 1
  %75 = zext i32 %74 to i64
  br label %76

76:                                               ; preds = %83, %62
  %77 = phi i32 [ %60, %62 ], [ %92, %83 ]
  %78 = phi %"struct.WTF::KeyValuePair"* [ %58, %62 ], [ %90, %83 ]
  %79 = phi %"struct.WTF::KeyValuePair"* [ null, %62 ], [ %85, %83 ]
  %80 = phi i64 [ %57, %62 ], [ %89, %83 ]
  %81 = phi i64 [ 0, %62 ], [ %87, %83 ]
  %82 = icmp eq i32 %77, %2
  br i1 %82, label %162, label %83

83:                                               ; preds = %76
  %84 = icmp eq i32 %77, -1
  %85 = select i1 %84, %"struct.WTF::KeyValuePair"* %78, %"struct.WTF::KeyValuePair"* %79
  %86 = icmp eq i64 %81, 0
  %87 = select i1 %86, i64 %75, i64 %81
  %88 = add i64 %87, %80
  %89 = and i64 %88, %42
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %38, i64 %89
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %90, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %76

94:                                               ; preds = %83
  %95 = icmp eq %"struct.WTF::KeyValuePair"* %85, null
  br i1 %95, label %104, label %96

96:                                               ; preds = %94
  %97 = bitcast %"struct.WTF::KeyValuePair"* %85 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %97, i64 16) #10
  %98 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 3, i32 0, i32 0, i32 3
  %99 = load i32, i32* %98, align 8
  %100 = add i32 %99, 2147483647
  %101 = and i32 %100, 2147483647
  %102 = and i32 %99, -2147483648
  %103 = or i32 %101, %102
  store i32 %103, i32* %98, align 8
  br label %104

104:                                              ; preds = %96, %94, %37
  %105 = phi %"struct.WTF::KeyValuePair"* [ %85, %96 ], [ %90, %94 ], [ %58, %37 ]
  %106 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %105, i64 0, i32 0
  store i32 %2, i32* %106, align 8
  %107 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %105, i64 0, i32 1
  %108 = ptrtoint i8* %16 to i64
  %109 = bitcast %"class.blink::Member.4"* %107 to i64*
  store atomic i64 %108, i64* %109 monotonic, align 8
  %110 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %114, label %112

112:                                              ; preds = %104
  %113 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %16) #10
  br label %114

114:                                              ; preds = %112, %104
  %115 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %150, label %117

117:                                              ; preds = %114
  %118 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %119 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %118, i64 0, i32 1
  %120 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %119) #10
  %121 = icmp eq i8* %120, null
  br i1 %121, label %122, label %124, !prof !3

122:                                              ; preds = %117
  %123 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %119, i8* %123) #10
  br label %124

124:                                              ; preds = %122, %117
  %125 = phi i8* [ %123, %122 ], [ %120, %117 ]
  %126 = bitcast i8* %125 to %"class.blink::ThreadState"**
  %127 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %126, align 8
  %128 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %127, i64 0, i32 9
  %129 = load i8, i8* %128, align 1, !range !4
  %130 = icmp eq i8 %129, 0
  br i1 %130, label %150, label %131

131:                                              ; preds = %124
  %132 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %127, i64 0, i32 13
  %133 = load i64, i64* %132, align 8
  %134 = add i64 %133, 1
  store i64 %134, i64* %132, align 8
  %135 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %127, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %136 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %135, align 8
  %137 = load atomic i64, i64* %109 monotonic, align 8
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %147, label %139

139:                                              ; preds = %131
  %140 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %136, i64 0, i32 0, i32 0
  %141 = inttoptr i64 %137 to i8*
  %142 = bitcast %"class.blink::MarkingVisitor"* %136 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %143 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %142, align 8
  %144 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %143, i64 5
  %145 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %144, align 8
  tail call void %145(%"class.blink::Visitor"* %140, i8* nonnull %141, i8* %141, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16WebGLFramebuffer15WebGLAttachmentEE5TraceEPNS_7VisitorEPKv) #10
  %146 = load i64, i64* %132, align 8
  br label %147

147:                                              ; preds = %139, %131
  %148 = phi i64 [ %134, %131 ], [ %146, %139 ]
  %149 = add i64 %148, -1
  store i64 %149, i64* %132, align 8
  br label %150

150:                                              ; preds = %147, %124, %114
  %151 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %152 = load i32, i32* %151, align 4
  %153 = add i32 %152, 1
  store i32 %153, i32* %151, align 4
  %154 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 3, i32 0, i32 0, i32 3
  %155 = load i32, i32* %154, align 8
  %156 = add i32 %155, %153
  %157 = shl i32 %156, 1
  %158 = load i32, i32* %39, align 8
  %159 = icmp ult i32 %157, %158
  br i1 %159, label %162, label %160

160:                                              ; preds = %150
  %161 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjN5blink6MemberINS2_16WebGLFramebuffer15WebGLAttachmentEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_10HashTraitsIjEENSC_IS6_EEEESD_NS2_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable"* %30, %"struct.WTF::KeyValuePair"* %105) #10
  br label %162

162:                                              ; preds = %76, %150, %160
  tail call void @_ZN5blink16WebGLFramebuffer22DrawBuffersIfNecessaryEb(%"class.blink::WebGLFramebuffer"* %0, i1 zeroext false)
  %163 = getelementptr inbounds %"class.blink::WebGLTexture", %"class.blink::WebGLTexture"* %4, i64 0, i32 0, i32 0, i32 0, i32 4
  %164 = load i32, i32* %163, align 8
  %165 = add i32 %164, 1
  store i32 %165, i32* %163, align 8
  br label %166

166:                                              ; preds = %10, %7, %162
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16WebGLFramebuffer36CommitWebGL1DepthStencilIfConsistentEj(%"class.blink::WebGLFramebuffer"* nocapture, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %7 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %7, i64 %10
  br i1 %5, label %26, label %12

12:                                               ; preds = %2
  %13 = icmp eq i32 %9, 0
  br i1 %13, label %23, label %14

14:                                               ; preds = %12, %20
  %15 = phi %"struct.WTF::KeyValuePair"* [ %21, %20 ], [ %7, %12 ]
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %15, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = add i32 %17, 1
  %19 = icmp ult i32 %18, 2
  br i1 %19, label %20, label %23

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %15, i64 1
  %22 = icmp eq %"struct.WTF::KeyValuePair"* %21, %11
  br i1 %22, label %26, label %14

23:                                               ; preds = %14, %12
  %24 = phi %"struct.WTF::KeyValuePair"* [ %7, %12 ], [ %15, %14 ]
  %25 = icmp eq %"struct.WTF::KeyValuePair"* %24, %11
  br i1 %25, label %26, label %32

26:                                               ; preds = %20, %23, %2
  %27 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 5
  store i8 1, i8* %27, align 1
  br label %66

28:                                               ; preds = %48, %64, %61
  %29 = icmp slt i32 %50, 2
  %30 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 5
  %31 = zext i1 %29 to i8
  store i8 %31, i8* %30, align 1
  br i1 %29, label %66, label %126

32:                                               ; preds = %23, %64
  %33 = phi %"class.blink::WebGLFramebuffer::WebGLAttachment"* [ %52, %64 ], [ null, %23 ]
  %34 = phi %"class.blink::WebGLFramebuffer::WebGLAttachment"* [ %51, %64 ], [ null, %23 ]
  %35 = phi i32 [ %50, %64 ], [ 0, %23 ]
  %36 = phi %"class.blink::WebGLFramebuffer::WebGLAttachment"* [ %49, %64 ], [ null, %23 ]
  %37 = phi %"struct.WTF::KeyValuePair"* [ %56, %64 ], [ %24, %23 ]
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %37, i64 0, i32 1, i32 0, i32 0
  %39 = load %"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.blink::WebGLFramebuffer::WebGLAttachment"** %38, align 8
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %37, i64 0, i32 0
  %41 = load i32, i32* %40, align 8
  switch i32 %41, label %48 [
    i32 36096, label %42
    i32 36128, label %44
    i32 33306, label %46
  ]

42:                                               ; preds = %32
  %43 = add nsw i32 %35, 1
  br label %48

44:                                               ; preds = %32
  %45 = add nsw i32 %35, 1
  br label %48

46:                                               ; preds = %32
  %47 = add nsw i32 %35, 1
  br label %48

48:                                               ; preds = %32, %46, %44, %42
  %49 = phi %"class.blink::WebGLFramebuffer::WebGLAttachment"* [ %36, %32 ], [ %39, %46 ], [ %36, %44 ], [ %36, %42 ]
  %50 = phi i32 [ %35, %32 ], [ %47, %46 ], [ %45, %44 ], [ %43, %42 ]
  %51 = phi %"class.blink::WebGLFramebuffer::WebGLAttachment"* [ %34, %32 ], [ %34, %46 ], [ %39, %44 ], [ %34, %42 ]
  %52 = phi %"class.blink::WebGLFramebuffer::WebGLAttachment"* [ %33, %32 ], [ %33, %46 ], [ %33, %44 ], [ %39, %42 ]
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %37, i64 1
  %54 = icmp eq %"struct.WTF::KeyValuePair"* %53, %11
  br i1 %54, label %28, label %55

55:                                               ; preds = %48, %61
  %56 = phi %"struct.WTF::KeyValuePair"* [ %62, %61 ], [ %53, %48 ]
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %56, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = add i32 %58, 1
  %60 = icmp ult i32 %59, 2
  br i1 %60, label %61, label %64

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %56, i64 1
  %63 = icmp eq %"struct.WTF::KeyValuePair"* %62, %11
  br i1 %63, label %28, label %55

64:                                               ; preds = %55
  %65 = icmp eq %"struct.WTF::KeyValuePair"* %56, %11
  br i1 %65, label %28, label %32

66:                                               ; preds = %26, %28
  %67 = phi %"class.blink::WebGLFramebuffer::WebGLAttachment"* [ null, %26 ], [ %52, %28 ]
  %68 = phi %"class.blink::WebGLFramebuffer::WebGLAttachment"* [ null, %26 ], [ %51, %28 ]
  %69 = phi %"class.blink::WebGLFramebuffer::WebGLAttachment"* [ null, %26 ], [ %49, %28 ]
  %70 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %71 = load %"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLRenderingContextBase"** %70, align 8
  %72 = tail call %"class.blink::DrawingBuffer"* @_ZNK5blink25WebGLRenderingContextBase16GetDrawingBufferEv(%"class.blink::WebGLRenderingContextBase"* %71) #10
  %73 = icmp eq %"class.blink::DrawingBuffer"* %72, null
  br i1 %73, label %76, label %74

74:                                               ; preds = %66
  %75 = tail call %"class.gpu::gles2::GLES2Interface"* @_ZN5blink13DrawingBuffer9ContextGLEv(%"class.blink::DrawingBuffer"* nonnull %72) #10
  br label %76

76:                                               ; preds = %66, %74
  %77 = phi %"class.gpu::gles2::GLES2Interface"* [ %75, %74 ], [ null, %66 ]
  %78 = icmp eq %"class.blink::WebGLFramebuffer::WebGLAttachment"* %67, null
  br i1 %78, label %91, label %79

79:                                               ; preds = %76
  %80 = bitcast %"class.gpu::gles2::GLES2Interface"* %77 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)***
  %81 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)** %81, i64 73
  %83 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)** %82, align 8
  tail call void %83(%"class.gpu::gles2::GLES2Interface"* %77, i32 %1, i32 33306, i32 36161, i32 0) #10
  %84 = bitcast %"class.blink::WebGLFramebuffer::WebGLAttachment"* %67 to void (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.gpu::gles2::GLES2Interface"*, i32, i32)***
  %85 = load void (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.gpu::gles2::GLES2Interface"*, i32, i32)**, void (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.gpu::gles2::GLES2Interface"*, i32, i32)*** %84, align 8
  %86 = getelementptr inbounds void (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.gpu::gles2::GLES2Interface"*, i32, i32)*, void (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.gpu::gles2::GLES2Interface"*, i32, i32)** %85, i64 5
  %87 = load void (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.gpu::gles2::GLES2Interface"*, i32, i32)*, void (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.gpu::gles2::GLES2Interface"*, i32, i32)** %86, align 8
  tail call void %87(%"class.blink::WebGLFramebuffer::WebGLAttachment"* nonnull %67, %"class.gpu::gles2::GLES2Interface"* %77, i32 %1, i32 36096) #10
  %88 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)*** %80, align 8
  %89 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)** %88, i64 73
  %90 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)** %89, align 8
  tail call void %90(%"class.gpu::gles2::GLES2Interface"* %77, i32 %1, i32 36128, i32 36161, i32 0) #10
  br label %126

91:                                               ; preds = %76
  %92 = icmp eq %"class.blink::WebGLFramebuffer::WebGLAttachment"* %68, null
  br i1 %92, label %105, label %93

93:                                               ; preds = %91
  %94 = bitcast %"class.gpu::gles2::GLES2Interface"* %77 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)***
  %95 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)*** %94, align 8
  %96 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)** %95, i64 73
  %97 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)** %96, align 8
  tail call void %97(%"class.gpu::gles2::GLES2Interface"* %77, i32 %1, i32 33306, i32 36161, i32 0) #10
  %98 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)*** %94, align 8
  %99 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)** %98, i64 73
  %100 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)** %99, align 8
  tail call void %100(%"class.gpu::gles2::GLES2Interface"* %77, i32 %1, i32 36096, i32 36161, i32 0) #10
  %101 = bitcast %"class.blink::WebGLFramebuffer::WebGLAttachment"* %68 to void (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.gpu::gles2::GLES2Interface"*, i32, i32)***
  %102 = load void (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.gpu::gles2::GLES2Interface"*, i32, i32)**, void (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.gpu::gles2::GLES2Interface"*, i32, i32)*** %101, align 8
  %103 = getelementptr inbounds void (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.gpu::gles2::GLES2Interface"*, i32, i32)*, void (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.gpu::gles2::GLES2Interface"*, i32, i32)** %102, i64 5
  %104 = load void (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.gpu::gles2::GLES2Interface"*, i32, i32)*, void (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.gpu::gles2::GLES2Interface"*, i32, i32)** %103, align 8
  tail call void %104(%"class.blink::WebGLFramebuffer::WebGLAttachment"* nonnull %68, %"class.gpu::gles2::GLES2Interface"* %77, i32 %1, i32 36128) #10
  br label %126

105:                                              ; preds = %91
  %106 = icmp eq %"class.blink::WebGLFramebuffer::WebGLAttachment"* %69, null
  %107 = bitcast %"class.gpu::gles2::GLES2Interface"* %77 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)***
  %108 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)*** %107, align 8
  %109 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)** %108, i64 73
  %110 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)** %109, align 8
  br i1 %106, label %119, label %111

111:                                              ; preds = %105
  tail call void %110(%"class.gpu::gles2::GLES2Interface"* %77, i32 %1, i32 36096, i32 36161, i32 0) #10
  %112 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)*** %107, align 8
  %113 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)** %112, i64 73
  %114 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)** %113, align 8
  tail call void %114(%"class.gpu::gles2::GLES2Interface"* %77, i32 %1, i32 36128, i32 36161, i32 0) #10
  %115 = bitcast %"class.blink::WebGLFramebuffer::WebGLAttachment"* %69 to void (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.gpu::gles2::GLES2Interface"*, i32, i32)***
  %116 = load void (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.gpu::gles2::GLES2Interface"*, i32, i32)**, void (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.gpu::gles2::GLES2Interface"*, i32, i32)*** %115, align 8
  %117 = getelementptr inbounds void (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.gpu::gles2::GLES2Interface"*, i32, i32)*, void (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.gpu::gles2::GLES2Interface"*, i32, i32)** %116, i64 5
  %118 = load void (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.gpu::gles2::GLES2Interface"*, i32, i32)*, void (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.gpu::gles2::GLES2Interface"*, i32, i32)** %117, align 8
  tail call void %118(%"class.blink::WebGLFramebuffer::WebGLAttachment"* nonnull %69, %"class.gpu::gles2::GLES2Interface"* %77, i32 %1, i32 33306) #10
  br label %126

119:                                              ; preds = %105
  tail call void %110(%"class.gpu::gles2::GLES2Interface"* %77, i32 %1, i32 33306, i32 36161, i32 0) #10
  %120 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)*** %107, align 8
  %121 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)** %120, i64 73
  %122 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)** %121, align 8
  tail call void %122(%"class.gpu::gles2::GLES2Interface"* %77, i32 %1, i32 36096, i32 36161, i32 0) #10
  %123 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)*** %107, align 8
  %124 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)** %123, i64 73
  %125 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)** %124, align 8
  tail call void %125(%"class.gpu::gles2::GLES2Interface"* %77, i32 %1, i32 36128, i32 36161, i32 0) #10
  br label %126

126:                                              ; preds = %79, %111, %119, %93, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16WebGLFramebuffer32SetAttachmentForBoundFramebufferEjjPNS_17WebGLRenderbufferE(%"class.blink::WebGLFramebuffer"*, i32, i32, %"class.blink::WebGLRenderbuffer"*) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %6 = load %"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLRenderingContextBase"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::WebGLRenderingContextBase", %"class.blink::WebGLRenderingContextBase"* %6, i64 0, i32 112
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %32

10:                                               ; preds = %4
  %11 = icmp eq i32 %2, 33306
  br i1 %11, label %12, label %13

12:                                               ; preds = %10
  tail call void @_ZN5blink16WebGLFramebuffer21SetAttachmentInternalEjjPNS_17WebGLRenderbufferE(%"class.blink::WebGLFramebuffer"* %0, i32 %1, i32 36096, %"class.blink::WebGLRenderbuffer"* %3)
  br label %13

13:                                               ; preds = %10, %12
  %14 = phi i32 [ 36128, %12 ], [ %2, %10 ]
  tail call void @_ZN5blink16WebGLFramebuffer21SetAttachmentInternalEjjPNS_17WebGLRenderbufferE(%"class.blink::WebGLFramebuffer"* %0, i32 %1, i32 %14, %"class.blink::WebGLRenderbuffer"* %3)
  %15 = load %"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLRenderingContextBase"** %5, align 8
  %16 = tail call %"class.blink::DrawingBuffer"* @_ZNK5blink25WebGLRenderingContextBase16GetDrawingBufferEv(%"class.blink::WebGLRenderingContextBase"* %15) #10
  %17 = icmp eq %"class.blink::DrawingBuffer"* %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %13
  %19 = tail call %"class.gpu::gles2::GLES2Interface"* @_ZN5blink13DrawingBuffer9ContextGLEv(%"class.blink::DrawingBuffer"* nonnull %16) #10
  br label %20

20:                                               ; preds = %13, %18
  %21 = phi %"class.gpu::gles2::GLES2Interface"* [ %19, %18 ], [ null, %13 ]
  %22 = icmp eq %"class.blink::WebGLRenderbuffer"* %3, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %20
  %24 = getelementptr inbounds %"class.blink::WebGLRenderbuffer", %"class.blink::WebGLRenderbuffer"* %3, i64 0, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  br label %26

26:                                               ; preds = %20, %23
  %27 = phi i32 [ %25, %23 ], [ 0, %20 ]
  %28 = bitcast %"class.gpu::gles2::GLES2Interface"* %21 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)***
  %29 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)** %29, i64 73
  %31 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)** %30, align 8
  tail call void %31(%"class.gpu::gles2::GLES2Interface"* %21, i32 %1, i32 %2, i32 36161, i32 %27) #10
  br label %52

32:                                               ; preds = %4
  tail call void @_ZN5blink16WebGLFramebuffer21SetAttachmentInternalEjjPNS_17WebGLRenderbufferE(%"class.blink::WebGLFramebuffer"* %0, i32 %1, i32 %2, %"class.blink::WebGLRenderbuffer"* %3)
  switch i32 %2, label %34 [
    i32 36096, label %33
    i32 36128, label %33
    i32 33306, label %33
  ]

33:                                               ; preds = %32, %32, %32
  tail call void @_ZN5blink16WebGLFramebuffer36CommitWebGL1DepthStencilIfConsistentEj(%"class.blink::WebGLFramebuffer"* %0, i32 %1)
  br label %52

34:                                               ; preds = %32
  %35 = load %"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLRenderingContextBase"** %5, align 8
  %36 = tail call %"class.blink::DrawingBuffer"* @_ZNK5blink25WebGLRenderingContextBase16GetDrawingBufferEv(%"class.blink::WebGLRenderingContextBase"* %35) #10
  %37 = icmp eq %"class.blink::DrawingBuffer"* %36, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %34
  %39 = tail call %"class.gpu::gles2::GLES2Interface"* @_ZN5blink13DrawingBuffer9ContextGLEv(%"class.blink::DrawingBuffer"* nonnull %36) #10
  br label %40

40:                                               ; preds = %34, %38
  %41 = phi %"class.gpu::gles2::GLES2Interface"* [ %39, %38 ], [ null, %34 ]
  %42 = icmp eq %"class.blink::WebGLRenderbuffer"* %3, null
  br i1 %42, label %46, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.blink::WebGLRenderbuffer", %"class.blink::WebGLRenderbuffer"* %3, i64 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  br label %46

46:                                               ; preds = %40, %43
  %47 = phi i32 [ %45, %43 ], [ 0, %40 ]
  %48 = bitcast %"class.gpu::gles2::GLES2Interface"* %41 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)***
  %49 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)** %49, i64 73
  %51 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)** %50, align 8
  tail call void %51(%"class.gpu::gles2::GLES2Interface"* %41, i32 %1, i32 %2, i32 36161, i32 %47) #10
  br label %52

52:                                               ; preds = %33, %46, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16WebGLFramebuffer21SetAttachmentInternalEjjPNS_17WebGLRenderbufferE(%"class.blink::WebGLFramebuffer"*, i32, i32, %"class.blink::WebGLRenderbuffer"*) local_unnamed_addr #1 align 2 {
  %5 = ptrtoint %"class.blink::WebGLRenderbuffer"* %3 to i64
  tail call void @_ZN5blink16WebGLFramebuffer24RemoveAttachmentInternalEjj(%"class.blink::WebGLFramebuffer"* %0, i32 undef, i32 %2)
  %6 = icmp eq %"class.blink::WebGLRenderbuffer"* %3, null
  br i1 %6, label %157, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.blink::WebGLRenderbuffer", %"class.blink::WebGLRenderbuffer"* %3, i64 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %157, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 3, i32 0
  %13 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_16WebGLFramebuffer15WebGLAttachmentEEEPhm(i64 16) #10
  %14 = bitcast i8* %13 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink12_GLOBAL__N_127WebGLRenderbufferAttachmentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds i8, i8* %13, i64 8
  %16 = bitcast i8* %15 to i64*
  store i64 %5, i64* %16, align 8
  %17 = getelementptr inbounds i8, i8* %13, i64 -4
  %18 = bitcast i8* %17 to i16*
  %19 = load atomic i16, i16* %18 monotonic, align 2
  %20 = or i16 %19, 1
  store atomic i16 %20, i16* %18 release, align 2
  %21 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %12, i64 0, i32 0
  %22 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %12, i64 0, i32 0, i32 0
  %23 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %22, align 8
  %24 = icmp eq %"struct.WTF::KeyValuePair"* %23, null
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjN5blink6MemberINS2_16WebGLFramebuffer15WebGLAttachmentEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_10HashTraitsIjEENSC_IS6_EEEESD_NS2_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable"* %21, %"struct.WTF::KeyValuePair"* null) #10
  %27 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %22, align 8
  br label %28

28:                                               ; preds = %25, %11
  %29 = phi %"struct.WTF::KeyValuePair"* [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = add i32 %31, -1
  %33 = zext i32 %32 to i64
  %34 = shl i32 %2, 15
  %35 = xor i32 %34, -1
  %36 = add i32 %35, %2
  %37 = lshr i32 %36, 10
  %38 = xor i32 %37, %36
  %39 = mul i32 %38, 9
  %40 = lshr i32 %39, 6
  %41 = xor i32 %40, %39
  %42 = shl i32 %41, 11
  %43 = xor i32 %42, -1
  %44 = add i32 %41, %43
  %45 = lshr i32 %44, 16
  %46 = xor i32 %45, %44
  %47 = and i32 %32, %46
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %29, i64 %48
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %49, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %95, label %53

53:                                               ; preds = %28
  %54 = xor i32 %46, -1
  %55 = lshr i32 %44, 23
  %56 = add i32 %55, %54
  %57 = shl i32 %56, 12
  %58 = xor i32 %57, %56
  %59 = lshr i32 %58, 7
  %60 = xor i32 %59, %58
  %61 = shl i32 %60, 2
  %62 = xor i32 %61, %60
  %63 = lshr i32 %62, 20
  %64 = xor i32 %63, %62
  %65 = or i32 %64, 1
  %66 = zext i32 %65 to i64
  br label %67

67:                                               ; preds = %74, %53
  %68 = phi i32 [ %51, %53 ], [ %83, %74 ]
  %69 = phi %"struct.WTF::KeyValuePair"* [ %49, %53 ], [ %81, %74 ]
  %70 = phi %"struct.WTF::KeyValuePair"* [ null, %53 ], [ %76, %74 ]
  %71 = phi i64 [ %48, %53 ], [ %80, %74 ]
  %72 = phi i64 [ 0, %53 ], [ %78, %74 ]
  %73 = icmp eq i32 %68, %2
  br i1 %73, label %153, label %74

74:                                               ; preds = %67
  %75 = icmp eq i32 %68, -1
  %76 = select i1 %75, %"struct.WTF::KeyValuePair"* %69, %"struct.WTF::KeyValuePair"* %70
  %77 = icmp eq i64 %72, 0
  %78 = select i1 %77, i64 %66, i64 %72
  %79 = add i64 %78, %71
  %80 = and i64 %79, %33
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %29, i64 %80
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %81, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %67

85:                                               ; preds = %74
  %86 = icmp eq %"struct.WTF::KeyValuePair"* %76, null
  br i1 %86, label %95, label %87

87:                                               ; preds = %85
  %88 = bitcast %"struct.WTF::KeyValuePair"* %76 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %88, i64 16) #10
  %89 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 3, i32 0, i32 0, i32 3
  %90 = load i32, i32* %89, align 8
  %91 = add i32 %90, 2147483647
  %92 = and i32 %91, 2147483647
  %93 = and i32 %90, -2147483648
  %94 = or i32 %92, %93
  store i32 %94, i32* %89, align 8
  br label %95

95:                                               ; preds = %87, %85, %28
  %96 = phi %"struct.WTF::KeyValuePair"* [ %76, %87 ], [ %81, %85 ], [ %49, %28 ]
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %96, i64 0, i32 0
  store i32 %2, i32* %97, align 8
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %96, i64 0, i32 1
  %99 = ptrtoint i8* %13 to i64
  %100 = bitcast %"class.blink::Member.4"* %98 to i64*
  store atomic i64 %99, i64* %100 monotonic, align 8
  %101 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %105, label %103

103:                                              ; preds = %95
  %104 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %13) #10
  br label %105

105:                                              ; preds = %103, %95
  %106 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %141, label %108

108:                                              ; preds = %105
  %109 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %110 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %109, i64 0, i32 1
  %111 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %110) #10
  %112 = icmp eq i8* %111, null
  br i1 %112, label %113, label %115, !prof !3

113:                                              ; preds = %108
  %114 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %110, i8* %114) #10
  br label %115

115:                                              ; preds = %113, %108
  %116 = phi i8* [ %114, %113 ], [ %111, %108 ]
  %117 = bitcast i8* %116 to %"class.blink::ThreadState"**
  %118 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %117, align 8
  %119 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %118, i64 0, i32 9
  %120 = load i8, i8* %119, align 1, !range !4
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %141, label %122

122:                                              ; preds = %115
  %123 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %118, i64 0, i32 13
  %124 = load i64, i64* %123, align 8
  %125 = add i64 %124, 1
  store i64 %125, i64* %123, align 8
  %126 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %118, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %127 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %126, align 8
  %128 = load atomic i64, i64* %100 monotonic, align 8
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %138, label %130

130:                                              ; preds = %122
  %131 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %127, i64 0, i32 0, i32 0
  %132 = inttoptr i64 %128 to i8*
  %133 = bitcast %"class.blink::MarkingVisitor"* %127 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %134 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %133, align 8
  %135 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %134, i64 5
  %136 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %135, align 8
  tail call void %136(%"class.blink::Visitor"* %131, i8* nonnull %132, i8* %132, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16WebGLFramebuffer15WebGLAttachmentEE5TraceEPNS_7VisitorEPKv) #10
  %137 = load i64, i64* %123, align 8
  br label %138

138:                                              ; preds = %130, %122
  %139 = phi i64 [ %125, %122 ], [ %137, %130 ]
  %140 = add i64 %139, -1
  store i64 %140, i64* %123, align 8
  br label %141

141:                                              ; preds = %138, %115, %105
  %142 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %143 = load i32, i32* %142, align 4
  %144 = add i32 %143, 1
  store i32 %144, i32* %142, align 4
  %145 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 3, i32 0, i32 0, i32 3
  %146 = load i32, i32* %145, align 8
  %147 = add i32 %146, %144
  %148 = shl i32 %147, 1
  %149 = load i32, i32* %30, align 8
  %150 = icmp ult i32 %148, %149
  br i1 %150, label %153, label %151

151:                                              ; preds = %141
  %152 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjN5blink6MemberINS2_16WebGLFramebuffer15WebGLAttachmentEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_10HashTraitsIjEENSC_IS6_EEEESD_NS2_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable"* %21, %"struct.WTF::KeyValuePair"* %96) #10
  br label %153

153:                                              ; preds = %67, %141, %151
  tail call void @_ZN5blink16WebGLFramebuffer22DrawBuffersIfNecessaryEb(%"class.blink::WebGLFramebuffer"* %0, i1 zeroext false)
  %154 = getelementptr inbounds %"class.blink::WebGLRenderbuffer", %"class.blink::WebGLRenderbuffer"* %3, i64 0, i32 0, i32 0, i32 0, i32 4
  %155 = load i32, i32* %154, align 8
  %156 = add i32 %155, 1
  store i32 %156, i32* %154, align 8
  br label %157

157:                                              ; preds = %7, %4, %153
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::WebGLSharedObject"* @_ZNK5blink16WebGLFramebuffer19GetAttachmentObjectEj(%"class.blink::WebGLFramebuffer"* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %85, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %8 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %7, align 8
  %9 = icmp eq %"struct.WTF::KeyValuePair"* %8, null
  %10 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  br i1 %9, label %67, label %12

12:                                               ; preds = %6
  %13 = add i32 %11, -1
  %14 = zext i32 %13 to i64
  %15 = shl i32 %1, 15
  %16 = xor i32 %15, -1
  %17 = add i32 %16, %1
  %18 = lshr i32 %17, 10
  %19 = xor i32 %18, %17
  %20 = mul i32 %19, 9
  %21 = lshr i32 %20, 6
  %22 = xor i32 %21, %20
  %23 = shl i32 %22, 11
  %24 = xor i32 %23, -1
  %25 = add i32 %22, %24
  %26 = lshr i32 %25, 16
  %27 = xor i32 %26, %25
  %28 = and i32 %13, %27
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %8, i64 %29
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, %1
  br i1 %33, label %62, label %34

34:                                               ; preds = %12
  %35 = xor i32 %27, -1
  %36 = lshr i32 %25, 23
  %37 = add i32 %36, %35
  %38 = shl i32 %37, 12
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 7
  %41 = xor i32 %40, %39
  %42 = shl i32 %41, 2
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 20
  %45 = xor i32 %44, %43
  %46 = or i32 %45, 1
  %47 = zext i32 %46 to i64
  br label %48

48:                                               ; preds = %53, %34
  %49 = phi i32 [ %32, %34 ], [ %60, %53 ]
  %50 = phi i64 [ %29, %34 ], [ %57, %53 ]
  %51 = phi i64 [ 0, %34 ], [ %55, %53 ]
  %52 = icmp eq i32 %49, 0
  br i1 %52, label %67, label %53

53:                                               ; preds = %48
  %54 = icmp eq i64 %51, 0
  %55 = select i1 %54, i64 %47, i64 %51
  %56 = add i64 %55, %50
  %57 = and i64 %56, %14
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %8, i64 %57
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %58, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, %1
  br i1 %61, label %62, label %48

62:                                               ; preds = %53, %12
  %63 = phi %"struct.WTF::KeyValuePair"* [ %30, %12 ], [ %58, %53 ]
  %64 = icmp eq %"struct.WTF::KeyValuePair"* %63, null
  br i1 %64, label %67, label %65

65:                                               ; preds = %62
  %66 = zext i32 %11 to i64
  br label %70

67:                                               ; preds = %48, %62, %6
  %68 = zext i32 %11 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %8, i64 %68
  br label %70

70:                                               ; preds = %67, %65
  %71 = phi i64 [ %66, %65 ], [ %68, %67 ]
  %72 = phi %"struct.WTF::KeyValuePair"* [ %63, %65 ], [ %69, %67 ]
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %8, i64 %71
  %74 = icmp eq %"struct.WTF::KeyValuePair"* %72, %73
  br i1 %74, label %85, label %75

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %72, i64 0, i32 1, i32 0, i32 0
  %77 = load %"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.blink::WebGLFramebuffer::WebGLAttachment"** %76, align 8
  %78 = icmp eq %"class.blink::WebGLFramebuffer::WebGLAttachment"* %77, null
  br i1 %78, label %85, label %79

79:                                               ; preds = %75
  %80 = bitcast %"class.blink::WebGLFramebuffer::WebGLAttachment"* %77 to %"class.blink::WebGLSharedObject"* (%"class.blink::WebGLFramebuffer::WebGLAttachment"*)***
  %81 = load %"class.blink::WebGLSharedObject"* (%"class.blink::WebGLFramebuffer::WebGLAttachment"*)**, %"class.blink::WebGLSharedObject"* (%"class.blink::WebGLFramebuffer::WebGLAttachment"*)*** %80, align 8
  %82 = getelementptr inbounds %"class.blink::WebGLSharedObject"* (%"class.blink::WebGLFramebuffer::WebGLAttachment"*)*, %"class.blink::WebGLSharedObject"* (%"class.blink::WebGLFramebuffer::WebGLAttachment"*)** %81, i64 1
  %83 = load %"class.blink::WebGLSharedObject"* (%"class.blink::WebGLFramebuffer::WebGLAttachment"*)*, %"class.blink::WebGLSharedObject"* (%"class.blink::WebGLFramebuffer::WebGLAttachment"*)** %82, align 8
  %84 = tail call %"class.blink::WebGLSharedObject"* %83(%"class.blink::WebGLFramebuffer::WebGLAttachment"* nonnull %77) #10
  br label %85

85:                                               ; preds = %70, %79, %75, %2
  %86 = phi %"class.blink::WebGLSharedObject"* [ null, %2 ], [ %84, %79 ], [ null, %75 ], [ null, %70 ]
  ret %"class.blink::WebGLSharedObject"* %86
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden %"class.blink::WebGLFramebuffer::WebGLAttachment"* @_ZNK5blink16WebGLFramebuffer13GetAttachmentEj(%"class.blink::WebGLFramebuffer"* nocapture readonly, i32) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  %6 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %63, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = shl i32 %1, 15
  %12 = xor i32 %11, -1
  %13 = add i32 %12, %1
  %14 = lshr i32 %13, 10
  %15 = xor i32 %14, %13
  %16 = mul i32 %15, 9
  %17 = lshr i32 %16, 6
  %18 = xor i32 %17, %16
  %19 = shl i32 %18, 11
  %20 = xor i32 %19, -1
  %21 = add i32 %18, %20
  %22 = lshr i32 %21, 16
  %23 = xor i32 %22, %21
  %24 = and i32 %9, %23
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %25
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %26, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, %1
  br i1 %29, label %58, label %30

30:                                               ; preds = %8
  %31 = xor i32 %23, -1
  %32 = lshr i32 %21, 23
  %33 = add i32 %32, %31
  %34 = shl i32 %33, 12
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 7
  %37 = xor i32 %36, %35
  %38 = shl i32 %37, 2
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 20
  %41 = xor i32 %40, %39
  %42 = or i32 %41, 1
  %43 = zext i32 %42 to i64
  br label %44

44:                                               ; preds = %49, %30
  %45 = phi i32 [ %28, %30 ], [ %56, %49 ]
  %46 = phi i64 [ %25, %30 ], [ %53, %49 ]
  %47 = phi i64 [ 0, %30 ], [ %51, %49 ]
  %48 = icmp eq i32 %45, 0
  br i1 %48, label %63, label %49

49:                                               ; preds = %44
  %50 = icmp eq i64 %47, 0
  %51 = select i1 %50, i64 %43, i64 %47
  %52 = add i64 %51, %46
  %53 = and i64 %52, %10
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %53
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %54, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, %1
  br i1 %57, label %58, label %44

58:                                               ; preds = %49, %8
  %59 = phi %"struct.WTF::KeyValuePair"* [ %26, %8 ], [ %54, %49 ]
  %60 = icmp eq %"struct.WTF::KeyValuePair"* %59, null
  br i1 %60, label %63, label %61

61:                                               ; preds = %58
  %62 = zext i32 %7 to i64
  br label %66

63:                                               ; preds = %44, %58, %2
  %64 = zext i32 %7 to i64
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %64
  br label %66

66:                                               ; preds = %61, %63
  %67 = phi i64 [ %62, %61 ], [ %64, %63 ]
  %68 = phi %"struct.WTF::KeyValuePair"* [ %59, %61 ], [ %65, %63 ]
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %67
  %70 = icmp eq %"struct.WTF::KeyValuePair"* %68, %69
  br i1 %70, label %74, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %68, i64 0, i32 1, i32 0, i32 0
  %73 = load %"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.blink::WebGLFramebuffer::WebGLAttachment"** %72, align 8
  br label %74

74:                                               ; preds = %66, %71
  %75 = phi %"class.blink::WebGLFramebuffer::WebGLAttachment"* [ %73, %71 ], [ null, %66 ]
  ret %"class.blink::WebGLFramebuffer::WebGLAttachment"* %75
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16WebGLFramebuffer36RemoveAttachmentFromBoundFramebufferEjPNS_17WebGLSharedObjectE(%"class.blink::WebGLFramebuffer"*, i32, %"class.blink::WebGLSharedObject"*) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ne i32 %5, 0
  %7 = icmp ne %"class.blink::WebGLSharedObject"* %2, null
  %8 = and i1 %7, %6
  br i1 %8, label %9, label %107

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %11 = load %"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLRenderingContextBase"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::WebGLRenderingContextBase", %"class.blink::WebGLRenderingContextBase"* %11, i64 0, i32 112
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 1
  %15 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %16 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %18 = load i32, i32* %15, align 4
  %19 = icmp eq i32 %18, 0
  %20 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %16, align 8
  %21 = load i32, i32* %17, align 8
  br i1 %19, label %102, label %22

22:                                               ; preds = %9
  %23 = zext i32 %21 to i64
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %20, i64 %23
  br label %25

25:                                               ; preds = %22, %94
  %26 = phi %"struct.WTF::KeyValuePair"* [ %24, %22 ], [ %101, %94 ]
  %27 = phi i32 [ %21, %22 ], [ %99, %94 ]
  %28 = phi %"struct.WTF::KeyValuePair"* [ %20, %22 ], [ %98, %94 ]
  %29 = phi i8 [ 0, %22 ], [ %95, %94 ]
  %30 = icmp eq i32 %27, 0
  br i1 %30, label %40, label %31

31:                                               ; preds = %25, %37
  %32 = phi %"struct.WTF::KeyValuePair"* [ %38, %37 ], [ %28, %25 ]
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = add i32 %34, 1
  %36 = icmp ult i32 %35, 2
  br i1 %36, label %37, label %40

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 1
  %39 = icmp eq %"struct.WTF::KeyValuePair"* %38, %26
  br i1 %39, label %102, label %31

40:                                               ; preds = %31, %25
  %41 = phi %"struct.WTF::KeyValuePair"* [ %28, %25 ], [ %32, %31 ]
  %42 = icmp eq %"struct.WTF::KeyValuePair"* %41, %26
  br i1 %42, label %102, label %43

43:                                               ; preds = %40, %92
  %44 = phi %"struct.WTF::KeyValuePair"* [ %84, %92 ], [ %41, %40 ]
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %44, i64 0, i32 1, i32 0, i32 0
  %46 = load %"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.blink::WebGLFramebuffer::WebGLAttachment"** %45, align 8
  %47 = bitcast %"class.blink::WebGLFramebuffer::WebGLAttachment"* %46 to i1 (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.blink::WebGLSharedObject"*)***
  %48 = load i1 (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.blink::WebGLSharedObject"*)**, i1 (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.blink::WebGLSharedObject"*)*** %47, align 8
  %49 = getelementptr inbounds i1 (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.blink::WebGLSharedObject"*)*, i1 (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.blink::WebGLSharedObject"*)** %48, i64 2
  %50 = load i1 (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.blink::WebGLSharedObject"*)*, i1 (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.blink::WebGLSharedObject"*)** %49, align 8
  %51 = tail call zeroext i1 %50(%"class.blink::WebGLFramebuffer::WebGLAttachment"* %46, %"class.blink::WebGLSharedObject"* nonnull %2) #10
  br i1 %51, label %52, label %80

52:                                               ; preds = %43
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %44, i64 0, i32 0
  %54 = load i32, i32* %53, align 8
  switch i32 %54, label %68 [
    i32 36096, label %55
    i32 36128, label %55
    i32 33306, label %55
  ]

55:                                               ; preds = %52, %52, %52
  br i1 %14, label %56, label %94

56:                                               ; preds = %55
  %57 = load %"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLRenderingContextBase"** %10, align 8
  %58 = tail call %"class.blink::DrawingBuffer"* @_ZNK5blink25WebGLRenderingContextBase16GetDrawingBufferEv(%"class.blink::WebGLRenderingContextBase"* %57) #10
  %59 = icmp eq %"class.blink::DrawingBuffer"* %58, null
  br i1 %59, label %62, label %60

60:                                               ; preds = %56
  %61 = tail call %"class.gpu::gles2::GLES2Interface"* @_ZN5blink13DrawingBuffer9ContextGLEv(%"class.blink::DrawingBuffer"* nonnull %58) #10
  br label %62

62:                                               ; preds = %56, %60
  %63 = phi %"class.gpu::gles2::GLES2Interface"* [ %61, %60 ], [ null, %56 ]
  %64 = bitcast %"class.blink::WebGLFramebuffer::WebGLAttachment"* %46 to void (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.gpu::gles2::GLES2Interface"*, i32, i32)***
  %65 = load void (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.gpu::gles2::GLES2Interface"*, i32, i32)**, void (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.gpu::gles2::GLES2Interface"*, i32, i32)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.gpu::gles2::GLES2Interface"*, i32, i32)*, void (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.gpu::gles2::GLES2Interface"*, i32, i32)** %65, i64 6
  %67 = load void (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.gpu::gles2::GLES2Interface"*, i32, i32)*, void (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.gpu::gles2::GLES2Interface"*, i32, i32)** %66, align 8
  tail call void %67(%"class.blink::WebGLFramebuffer::WebGLAttachment"* %46, %"class.gpu::gles2::GLES2Interface"* %63, i32 %1, i32 %54) #10
  br label %94

68:                                               ; preds = %52
  %69 = load %"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLRenderingContextBase"** %10, align 8
  %70 = tail call %"class.blink::DrawingBuffer"* @_ZNK5blink25WebGLRenderingContextBase16GetDrawingBufferEv(%"class.blink::WebGLRenderingContextBase"* %69) #10
  %71 = icmp eq %"class.blink::DrawingBuffer"* %70, null
  br i1 %71, label %74, label %72

72:                                               ; preds = %68
  %73 = tail call %"class.gpu::gles2::GLES2Interface"* @_ZN5blink13DrawingBuffer9ContextGLEv(%"class.blink::DrawingBuffer"* nonnull %70) #10
  br label %74

74:                                               ; preds = %68, %72
  %75 = phi %"class.gpu::gles2::GLES2Interface"* [ %73, %72 ], [ null, %68 ]
  %76 = bitcast %"class.blink::WebGLFramebuffer::WebGLAttachment"* %46 to void (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.gpu::gles2::GLES2Interface"*, i32, i32)***
  %77 = load void (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.gpu::gles2::GLES2Interface"*, i32, i32)**, void (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.gpu::gles2::GLES2Interface"*, i32, i32)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.gpu::gles2::GLES2Interface"*, i32, i32)*, void (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.gpu::gles2::GLES2Interface"*, i32, i32)** %77, i64 6
  %79 = load void (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.gpu::gles2::GLES2Interface"*, i32, i32)*, void (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.gpu::gles2::GLES2Interface"*, i32, i32)** %78, align 8
  tail call void %79(%"class.blink::WebGLFramebuffer::WebGLAttachment"* %46, %"class.gpu::gles2::GLES2Interface"* %75, i32 %1, i32 %54) #10
  br label %94

80:                                               ; preds = %43
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %44, i64 1
  %82 = icmp eq %"struct.WTF::KeyValuePair"* %81, %26
  br i1 %82, label %102, label %83

83:                                               ; preds = %80, %89
  %84 = phi %"struct.WTF::KeyValuePair"* [ %90, %89 ], [ %81, %80 ]
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %84, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  %87 = add i32 %86, 1
  %88 = icmp ult i32 %87, 2
  br i1 %88, label %89, label %92

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %84, i64 1
  %91 = icmp eq %"struct.WTF::KeyValuePair"* %90, %26
  br i1 %91, label %102, label %83

92:                                               ; preds = %83
  %93 = icmp eq %"struct.WTF::KeyValuePair"* %84, %26
  br i1 %93, label %102, label %43

94:                                               ; preds = %55, %62, %74
  %95 = phi i8 [ %29, %74 ], [ %29, %62 ], [ 1, %55 ]
  tail call void @_ZN5blink16WebGLFramebuffer24RemoveAttachmentInternalEjj(%"class.blink::WebGLFramebuffer"* %0, i32 undef, i32 %54)
  %96 = load i32, i32* %15, align 4
  %97 = icmp eq i32 %96, 0
  %98 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %16, align 8
  %99 = load i32, i32* %17, align 8
  %100 = zext i32 %99 to i64
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %98, i64 %100
  br i1 %97, label %102, label %25

102:                                              ; preds = %40, %94, %37, %80, %92, %89, %9
  %103 = phi i8 [ 0, %9 ], [ %29, %89 ], [ %29, %92 ], [ %29, %80 ], [ %29, %37 ], [ %95, %94 ], [ %29, %40 ]
  %104 = and i8 %103, 1
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %107, label %106

106:                                              ; preds = %102
  tail call void @_ZN5blink16WebGLFramebuffer36CommitWebGL1DepthStencilIfConsistentEj(%"class.blink::WebGLFramebuffer"* %0, i32 %1)
  br label %107

107:                                              ; preds = %106, %102, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16WebGLFramebuffer24RemoveAttachmentInternalEjj(%"class.blink::WebGLFramebuffer"*, i32, i32) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  %7 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %64, label %9

9:                                                ; preds = %3
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i32 %2, 15
  %13 = xor i32 %12, -1
  %14 = add i32 %13, %2
  %15 = lshr i32 %14, 10
  %16 = xor i32 %15, %14
  %17 = mul i32 %16, 9
  %18 = lshr i32 %17, 6
  %19 = xor i32 %18, %17
  %20 = shl i32 %19, 11
  %21 = xor i32 %20, -1
  %22 = add i32 %19, %21
  %23 = lshr i32 %22, 16
  %24 = xor i32 %23, %22
  %25 = and i32 %10, %24
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %26
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %27, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, %2
  br i1 %30, label %59, label %31

31:                                               ; preds = %9
  %32 = xor i32 %24, -1
  %33 = lshr i32 %22, 23
  %34 = add i32 %33, %32
  %35 = shl i32 %34, 12
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 7
  %38 = xor i32 %37, %36
  %39 = shl i32 %38, 2
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 20
  %42 = xor i32 %41, %40
  %43 = or i32 %42, 1
  %44 = zext i32 %43 to i64
  br label %45

45:                                               ; preds = %50, %31
  %46 = phi i32 [ %29, %31 ], [ %57, %50 ]
  %47 = phi i64 [ %26, %31 ], [ %54, %50 ]
  %48 = phi i64 [ 0, %31 ], [ %52, %50 ]
  %49 = icmp eq i32 %46, 0
  br i1 %49, label %64, label %50

50:                                               ; preds = %45
  %51 = icmp eq i64 %48, 0
  %52 = select i1 %51, i64 %44, i64 %48
  %53 = add i64 %52, %47
  %54 = and i64 %53, %11
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %54
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %55, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, %2
  br i1 %58, label %59, label %45

59:                                               ; preds = %50, %9
  %60 = phi %"struct.WTF::KeyValuePair"* [ %27, %9 ], [ %55, %50 ]
  %61 = icmp eq %"struct.WTF::KeyValuePair"* %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %59
  %63 = zext i32 %8 to i64
  br label %67

64:                                               ; preds = %45, %59, %3
  %65 = zext i32 %8 to i64
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %65
  br label %67

67:                                               ; preds = %64, %62
  %68 = phi i64 [ %63, %62 ], [ %65, %64 ]
  %69 = phi %"struct.WTF::KeyValuePair"* [ %60, %62 ], [ %66, %64 ]
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %68
  %71 = icmp eq %"struct.WTF::KeyValuePair"* %69, %70
  br i1 %71, label %160, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %69, i64 0, i32 1, i32 0, i32 0
  %74 = load %"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.blink::WebGLFramebuffer::WebGLAttachment"** %73, align 8
  %75 = icmp eq %"class.blink::WebGLFramebuffer::WebGLAttachment"* %74, null
  br i1 %75, label %160, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %78 = load %"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLRenderingContextBase"** %77, align 8
  %79 = tail call %"class.blink::DrawingBuffer"* @_ZNK5blink25WebGLRenderingContextBase16GetDrawingBufferEv(%"class.blink::WebGLRenderingContextBase"* %78) #10
  %80 = icmp eq %"class.blink::DrawingBuffer"* %79, null
  br i1 %80, label %83, label %81

81:                                               ; preds = %76
  %82 = tail call %"class.gpu::gles2::GLES2Interface"* @_ZN5blink13DrawingBuffer9ContextGLEv(%"class.blink::DrawingBuffer"* nonnull %79) #10
  br label %83

83:                                               ; preds = %76, %81
  %84 = phi %"class.gpu::gles2::GLES2Interface"* [ %82, %81 ], [ null, %76 ]
  %85 = bitcast %"class.blink::WebGLFramebuffer::WebGLAttachment"* %74 to void (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.gpu::gles2::GLES2Interface"*)***
  %86 = load void (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.gpu::gles2::GLES2Interface"*)**, void (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.gpu::gles2::GLES2Interface"*)*** %85, align 8
  %87 = getelementptr inbounds void (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.gpu::gles2::GLES2Interface"*)*, void (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.gpu::gles2::GLES2Interface"*)** %86, i64 4
  %88 = load void (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.gpu::gles2::GLES2Interface"*)*, void (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.gpu::gles2::GLES2Interface"*)** %87, align 8
  tail call void %88(%"class.blink::WebGLFramebuffer::WebGLAttachment"* nonnull %74, %"class.gpu::gles2::GLES2Interface"* %84) #10
  %89 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 3, i32 0
  %90 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %89, i64 0, i32 0, i32 0
  %91 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %90, align 8
  %92 = icmp eq %"struct.WTF::KeyValuePair"* %91, null
  %93 = load i32, i32* %7, align 8
  br i1 %92, label %149, label %94

94:                                               ; preds = %83
  %95 = add i32 %93, -1
  %96 = zext i32 %95 to i64
  %97 = shl i32 %2, 15
  %98 = xor i32 %97, -1
  %99 = add i32 %98, %2
  %100 = lshr i32 %99, 10
  %101 = xor i32 %100, %99
  %102 = mul i32 %101, 9
  %103 = lshr i32 %102, 6
  %104 = xor i32 %103, %102
  %105 = shl i32 %104, 11
  %106 = xor i32 %105, -1
  %107 = add i32 %104, %106
  %108 = lshr i32 %107, 16
  %109 = xor i32 %108, %107
  %110 = and i32 %95, %109
  %111 = zext i32 %110 to i64
  %112 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %91, i64 %111
  %113 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %112, i64 0, i32 0
  %114 = load i32, i32* %113, align 4
  %115 = icmp eq i32 %114, %2
  br i1 %115, label %144, label %116

116:                                              ; preds = %94
  %117 = xor i32 %109, -1
  %118 = lshr i32 %107, 23
  %119 = add i32 %118, %117
  %120 = shl i32 %119, 12
  %121 = xor i32 %120, %119
  %122 = lshr i32 %121, 7
  %123 = xor i32 %122, %121
  %124 = shl i32 %123, 2
  %125 = xor i32 %124, %123
  %126 = lshr i32 %125, 20
  %127 = xor i32 %126, %125
  %128 = or i32 %127, 1
  %129 = zext i32 %128 to i64
  br label %130

130:                                              ; preds = %135, %116
  %131 = phi i32 [ %114, %116 ], [ %142, %135 ]
  %132 = phi i64 [ %111, %116 ], [ %139, %135 ]
  %133 = phi i64 [ 0, %116 ], [ %137, %135 ]
  %134 = icmp eq i32 %131, 0
  br i1 %134, label %149, label %135

135:                                              ; preds = %130
  %136 = icmp eq i64 %133, 0
  %137 = select i1 %136, i64 %129, i64 %133
  %138 = add i64 %137, %132
  %139 = and i64 %138, %96
  %140 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %91, i64 %139
  %141 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %140, i64 0, i32 0
  %142 = load i32, i32* %141, align 4
  %143 = icmp eq i32 %142, %2
  br i1 %143, label %144, label %130

144:                                              ; preds = %135, %94
  %145 = phi %"struct.WTF::KeyValuePair"* [ %112, %94 ], [ %140, %135 ]
  %146 = icmp eq %"struct.WTF::KeyValuePair"* %145, null
  br i1 %146, label %149, label %147

147:                                              ; preds = %144
  %148 = zext i32 %93 to i64
  br label %152

149:                                              ; preds = %130, %144, %83
  %150 = zext i32 %93 to i64
  %151 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %91, i64 %150
  br label %152

152:                                              ; preds = %149, %147
  %153 = phi i64 [ %148, %147 ], [ %150, %149 ]
  %154 = phi %"struct.WTF::KeyValuePair"* [ %145, %147 ], [ %151, %149 ]
  %155 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %91, i64 %153
  %156 = icmp eq %"struct.WTF::KeyValuePair"* %155, %154
  br i1 %156, label %159, label %157

157:                                              ; preds = %152
  %158 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %89, i64 0, i32 0
  tail call void @_ZN3WTF9HashTableIjNS_12KeyValuePairIjN5blink6MemberINS2_16WebGLFramebuffer15WebGLAttachmentEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_10HashTraitsIjEENSC_IS6_EEEESD_NS2_13HeapAllocatorEE5eraseEPKS7_(%"class.WTF::HashTable"* %158, %"struct.WTF::KeyValuePair"* %154) #10
  br label %159

159:                                              ; preds = %152, %157
  tail call void @_ZN5blink16WebGLFramebuffer22DrawBuffersIfNecessaryEb(%"class.blink::WebGLFramebuffer"* %0, i1 zeroext false)
  br label %160

160:                                              ; preds = %67, %72, %159
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZNK5blink16WebGLFramebuffer23CheckDepthStencilStatusEPPKc(%"class.blink::WebGLFramebuffer"* nocapture readonly, i8** nocapture) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 7
  %4 = load i8, i8* %3, align 1, !range !4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 9
  %8 = load i8, i8* %7, align 1, !range !4
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %6
  store i8* getelementptr inbounds ([94 x i8], [94 x i8]* @_ZN5blink12_GLOBAL__N_117kIncompleteOpaqueE, i64 0, i64 0), i8** %1, align 8
  br label %22

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %13 = load %"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLRenderingContextBase"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::WebGLRenderingContextBase", %"class.blink::WebGLRenderingContextBase"* %13, i64 0, i32 112
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %22, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 5
  %19 = load i8, i8* %18, align 1, !range !4
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %17
  store i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i8** %1, align 8
  br label %22

22:                                               ; preds = %11, %17, %6, %21, %10
  %23 = phi i32 [ 36061, %10 ], [ 36061, %21 ], [ 36053, %6 ], [ 36053, %17 ], [ 36053, %11 ]
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16WebGLFramebuffer16HasStencilBufferEv(%"class.blink::WebGLFramebuffer"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 7
  %3 = load i8, i8* %2, align 1, !range !4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 8
  %7 = load i8, i8* %6, align 4, !range !4
  %8 = icmp ne i8 %7, 0
  br label %103

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %11 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %10, align 8
  %12 = icmp eq %"struct.WTF::KeyValuePair"* %11, null
  %13 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  br i1 %12, label %43, label %15

15:                                               ; preds = %9
  %16 = add i32 %14, -1
  %17 = zext i32 %16 to i64
  %18 = and i32 %16, 1708190655
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %19
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %20, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 36128
  br i1 %23, label %38, label %24

24:                                               ; preds = %15, %29
  %25 = phi i32 [ %36, %29 ], [ %22, %15 ]
  %26 = phi i64 [ %33, %29 ], [ %19, %15 ]
  %27 = phi i64 [ %31, %29 ], [ 0, %15 ]
  %28 = icmp eq i32 %25, 0
  br i1 %28, label %43, label %29

29:                                               ; preds = %24
  %30 = icmp eq i64 %27, 0
  %31 = select i1 %30, i64 3305914133, i64 %27
  %32 = add i64 %31, %26
  %33 = and i64 %32, %17
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %33
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %34, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 36128
  br i1 %37, label %38, label %24

38:                                               ; preds = %29, %15
  %39 = phi %"struct.WTF::KeyValuePair"* [ %20, %15 ], [ %34, %29 ]
  %40 = icmp eq %"struct.WTF::KeyValuePair"* %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %38
  %42 = zext i32 %14 to i64
  br label %46

43:                                               ; preds = %24, %38, %9
  %44 = zext i32 %14 to i64
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %44
  br label %46

46:                                               ; preds = %43, %41
  %47 = phi i64 [ %42, %41 ], [ %44, %43 ]
  %48 = phi %"struct.WTF::KeyValuePair"* [ %39, %41 ], [ %45, %43 ]
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %47
  %50 = icmp eq %"struct.WTF::KeyValuePair"* %48, %49
  br i1 %50, label %55, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %48, i64 0, i32 1, i32 0, i32 0
  %53 = load %"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.blink::WebGLFramebuffer::WebGLAttachment"** %52, align 8
  %54 = icmp eq %"class.blink::WebGLFramebuffer::WebGLAttachment"* %53, null
  br i1 %54, label %55, label %96

55:                                               ; preds = %46, %51
  br i1 %12, label %84, label %56

56:                                               ; preds = %55
  %57 = add i32 %14, -1
  %58 = zext i32 %57 to i64
  %59 = and i32 %57, 1895272174
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %60
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %61, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 33306
  br i1 %64, label %79, label %65

65:                                               ; preds = %56, %70
  %66 = phi i32 [ %77, %70 ], [ %63, %56 ]
  %67 = phi i64 [ %74, %70 ], [ %60, %56 ]
  %68 = phi i64 [ %72, %70 ], [ 0, %56 ]
  %69 = icmp eq i32 %66, 0
  br i1 %69, label %84, label %70

70:                                               ; preds = %65
  %71 = icmp eq i64 %68, 0
  %72 = select i1 %71, i64 672825493, i64 %68
  %73 = add i64 %72, %67
  %74 = and i64 %73, %58
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %74
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %77, 33306
  br i1 %78, label %79, label %65

79:                                               ; preds = %70, %56
  %80 = phi %"struct.WTF::KeyValuePair"* [ %61, %56 ], [ %75, %70 ]
  %81 = icmp eq %"struct.WTF::KeyValuePair"* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = zext i32 %14 to i64
  br label %87

84:                                               ; preds = %65, %79, %55
  %85 = zext i32 %14 to i64
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %85
  br label %87

87:                                               ; preds = %84, %82
  %88 = phi i64 [ %83, %82 ], [ %85, %84 ]
  %89 = phi %"struct.WTF::KeyValuePair"* [ %80, %82 ], [ %86, %84 ]
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %88
  %91 = icmp eq %"struct.WTF::KeyValuePair"* %89, %90
  br i1 %91, label %103, label %92

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %89, i64 0, i32 1, i32 0, i32 0
  %94 = load %"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.blink::WebGLFramebuffer::WebGLAttachment"** %93, align 8
  %95 = icmp eq %"class.blink::WebGLFramebuffer::WebGLAttachment"* %94, null
  br i1 %95, label %103, label %96

96:                                               ; preds = %51, %92
  %97 = phi %"class.blink::WebGLFramebuffer::WebGLAttachment"* [ %94, %92 ], [ %53, %51 ]
  %98 = bitcast %"class.blink::WebGLFramebuffer::WebGLAttachment"* %97 to i1 (%"class.blink::WebGLFramebuffer::WebGLAttachment"*)***
  %99 = load i1 (%"class.blink::WebGLFramebuffer::WebGLAttachment"*)**, i1 (%"class.blink::WebGLFramebuffer::WebGLAttachment"*)*** %98, align 8
  %100 = getelementptr inbounds i1 (%"class.blink::WebGLFramebuffer::WebGLAttachment"*)*, i1 (%"class.blink::WebGLFramebuffer::WebGLAttachment"*)** %99, i64 3
  %101 = load i1 (%"class.blink::WebGLFramebuffer::WebGLAttachment"*)*, i1 (%"class.blink::WebGLFramebuffer::WebGLAttachment"*)** %100, align 8
  %102 = tail call zeroext i1 %101(%"class.blink::WebGLFramebuffer::WebGLAttachment"* nonnull %97) #10
  br label %103

103:                                              ; preds = %87, %96, %92, %5
  %104 = phi i1 [ %8, %5 ], [ false, %92 ], [ %102, %96 ], [ false, %87 ]
  ret i1 %104
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16WebGLFramebuffer16DeleteObjectImplEPN3gpu5gles214GLES2InterfaceE(%"class.blink::WebGLFramebuffer"*, %"class.gpu::gles2::GLES2Interface"*) unnamed_addr #1 align 2 {
  %3 = bitcast %"class.blink::WebGLFramebuffer"* %0 to %"class.blink::WebGLObject"*
  %4 = tail call zeroext i1 @_ZNK5blink11WebGLObject21DestructionInProgressEv(%"class.blink::WebGLObject"* %3) #10
  br i1 %4, label %50, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %10 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 %13
  br i1 %8, label %50, label %15

15:                                               ; preds = %5
  %16 = icmp eq i32 %12, 0
  br i1 %16, label %26, label %17

17:                                               ; preds = %15, %23
  %18 = phi %"struct.WTF::KeyValuePair"* [ %24, %23 ], [ %10, %15 ]
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %18, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = add i32 %20, 1
  %22 = icmp ult i32 %21, 2
  br i1 %22, label %23, label %26

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %18, i64 1
  %25 = icmp eq %"struct.WTF::KeyValuePair"* %24, %14
  br i1 %25, label %50, label %17

26:                                               ; preds = %17, %15
  %27 = phi %"struct.WTF::KeyValuePair"* [ %10, %15 ], [ %18, %17 ]
  %28 = icmp eq %"struct.WTF::KeyValuePair"* %27, %14
  br i1 %28, label %50, label %29

29:                                               ; preds = %26, %48
  %30 = phi %"struct.WTF::KeyValuePair"* [ %40, %48 ], [ %27, %26 ]
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 0, i32 1, i32 0, i32 0
  %32 = load %"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.blink::WebGLFramebuffer::WebGLAttachment"** %31, align 8
  %33 = bitcast %"class.blink::WebGLFramebuffer::WebGLAttachment"* %32 to void (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.gpu::gles2::GLES2Interface"*)***
  %34 = load void (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.gpu::gles2::GLES2Interface"*)**, void (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.gpu::gles2::GLES2Interface"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.gpu::gles2::GLES2Interface"*)*, void (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.gpu::gles2::GLES2Interface"*)** %34, i64 4
  %36 = load void (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.gpu::gles2::GLES2Interface"*)*, void (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.gpu::gles2::GLES2Interface"*)** %35, align 8
  tail call void %36(%"class.blink::WebGLFramebuffer::WebGLAttachment"* %32, %"class.gpu::gles2::GLES2Interface"* %1) #10
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 1
  %38 = icmp eq %"struct.WTF::KeyValuePair"* %37, %14
  br i1 %38, label %50, label %39

39:                                               ; preds = %29, %45
  %40 = phi %"struct.WTF::KeyValuePair"* [ %46, %45 ], [ %37, %29 ]
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %40, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = add i32 %42, 1
  %44 = icmp ult i32 %43, 2
  br i1 %44, label %45, label %48

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %40, i64 1
  %47 = icmp eq %"struct.WTF::KeyValuePair"* %46, %14
  br i1 %47, label %50, label %39

48:                                               ; preds = %39
  %49 = icmp eq %"struct.WTF::KeyValuePair"* %40, %14
  br i1 %49, label %50, label %29

50:                                               ; preds = %23, %29, %48, %45, %5, %26, %2
  %51 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 1
  %52 = bitcast %"class.gpu::gles2::GLES2Interface"* %1 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)***
  %53 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)** %53, i64 51
  %55 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)** %54, align 8
  tail call void %55(%"class.gpu::gles2::GLES2Interface"* %1, i32 1, i32* %51) #10
  store i32 0, i32* %51, align 8
  ret void
}

declare zeroext i1 @_ZNK5blink11WebGLObject21DestructionInProgressEv(%"class.blink::WebGLObject"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16WebGLFramebuffer7IsBoundEj(%"class.blink::WebGLFramebuffer"* readonly, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLRenderingContextBase"** %3, align 8
  %5 = bitcast %"class.blink::WebGLRenderingContextBase"* %4 to %"class.blink::WebGLFramebuffer"* (%"class.blink::WebGLRenderingContextBase"*, i32)***
  %6 = load %"class.blink::WebGLFramebuffer"* (%"class.blink::WebGLRenderingContextBase"*, i32)**, %"class.blink::WebGLFramebuffer"* (%"class.blink::WebGLRenderingContextBase"*, i32)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::WebGLFramebuffer"* (%"class.blink::WebGLRenderingContextBase"*, i32)*, %"class.blink::WebGLFramebuffer"* (%"class.blink::WebGLRenderingContextBase"*, i32)** %6, i64 91
  %8 = load %"class.blink::WebGLFramebuffer"* (%"class.blink::WebGLRenderingContextBase"*, i32)*, %"class.blink::WebGLFramebuffer"* (%"class.blink::WebGLRenderingContextBase"*, i32)** %7, align 8
  %9 = tail call %"class.blink::WebGLFramebuffer"* %8(%"class.blink::WebGLRenderingContextBase"* %4, i32 %1) #10
  %10 = icmp eq %"class.blink::WebGLFramebuffer"* %9, %0
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16WebGLFramebuffer11DrawBuffersERKN3WTF6VectorIjLj0ENS1_18PartitionAllocatorEEE(%"class.blink::WebGLFramebuffer"*, %"class.WTF::Vector"* dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 11
  %4 = tail call dereferenceable(16) %"class.WTF::Vector"* @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEEaSERKS2_(%"class.WTF::Vector"* %3, %"class.WTF::Vector"* dereferenceable(16) %1)
  %5 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 12
  %6 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 11, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 12, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp ult i32 %9, %7
  br i1 %10, label %11, label %66

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 12, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp ult i32 %13, %7
  br i1 %14, label %15, label %54

15:                                               ; preds = %11
  %16 = lshr i32 %13, 2
  %17 = add nuw i32 %13, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %7
  %22 = select i1 %21, i32 %20, i32 %7
  %23 = icmp ult i32 %13, %22
  br i1 %23, label %24, label %54, !prof !2

24:                                               ; preds = %15
  %25 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 0
  %26 = load i32*, i32** %25, align 8
  %27 = icmp eq i32* %26, null
  %28 = zext i32 %22 to i64
  %29 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64 %28) #10
  %30 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %29, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv, i64 0, i64 0)) #10
  br i1 %27, label %31, label %36

31:                                               ; preds = %24
  %32 = ptrtoint i8* %30 to i64
  %33 = bitcast %"class.WTF::Vector"* %5 to i64*
  store atomic i64 %32, i64* %33 monotonic, align 8
  %34 = lshr i64 %29, 2
  %35 = trunc i64 %34 to i32
  store i32 %35, i32* %12, align 8
  br label %54

36:                                               ; preds = %24
  %37 = lshr i64 %29, 2
  %38 = ptrtoint i8* %30 to i64
  %39 = load i32*, i32** %25, align 8
  %40 = icmp ne i8* %30, null
  %41 = icmp ne i32* %39, null
  %42 = and i1 %40, %41
  %43 = bitcast i32* %39 to i8*
  br i1 %42, label %44, label %50, !prof !2

44:                                               ; preds = %36
  %45 = load i32, i32* %8, align 4
  %46 = zext i32 %45 to i64
  %47 = shl nuw nsw i64 %46, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %30, i8* nonnull align 4 %43, i64 %47, i1 false) #10
  %48 = bitcast %"class.WTF::Vector"* %5 to i8**
  %49 = load i8*, i8** %48, align 8
  br label %50

50:                                               ; preds = %44, %36
  %51 = phi i8* [ %49, %44 ], [ %43, %36 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %51) #10
  %52 = bitcast %"class.WTF::Vector"* %5 to i64*
  store atomic i64 %38, i64* %52 monotonic, align 8
  %53 = trunc i64 %37 to i32
  store i32 %53, i32* %12, align 8
  br label %54

54:                                               ; preds = %11, %15, %31, %50
  %55 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 0
  %56 = load i32*, i32** %55, align 8
  %57 = load i32, i32* %8, align 4
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds i32, i32* %56, i64 %58
  %60 = zext i32 %7 to i64
  %61 = getelementptr inbounds i32, i32* %56, i64 %60
  %62 = bitcast i32* %59 to i8*
  %63 = ptrtoint i32* %61 to i64
  %64 = ptrtoint i32* %59 to i64
  %65 = sub i64 %63, %64
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %62, i8 0, i64 %65, i1 false) #10
  store i32 %7, i32* %8, align 4
  br label %68

66:                                               ; preds = %2
  store i32 %7, i32* %8, align 4
  %67 = icmp eq i32 %7, 0
  br i1 %67, label %69, label %68

68:                                               ; preds = %54, %66
  br label %70

69:                                               ; preds = %70, %66
  tail call void @_ZN5blink16WebGLFramebuffer22DrawBuffersIfNecessaryEb(%"class.blink::WebGLFramebuffer"* %0, i1 zeroext true)
  ret void

70:                                               ; preds = %68, %70
  %71 = phi i32 [ %73, %70 ], [ 0, %68 ]
  %72 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %5, i32 %71) #10
  store i32 0, i32* %72, align 4
  %73 = add nuw i32 %71, 1
  %74 = load i32, i32* %8, align 4
  %75 = icmp ult i32 %73, %74
  br i1 %75, label %70, label %69
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::Vector"* @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEEaSERKS2_(%"class.WTF::Vector"*, %"class.WTF::Vector"* dereferenceable(16)) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq %"class.WTF::Vector"* %1, %0
  br i1 %3, label %90, label %4, !prof !3

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %10, label %11

10:                                               ; preds = %4
  store i32 %8, i32* %5, align 4
  br label %60

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp ugt i32 %8, %13
  br i1 %14, label %15, label %60

15:                                               ; preds = %11
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %26, label %17

17:                                               ; preds = %15
  %18 = icmp eq i32 %6, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %17
  store i32 0, i32* %5, align 4
  br label %20

20:                                               ; preds = %19, %17
  %21 = bitcast %"class.WTF::Vector"* %0 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %23 monotonic, align 8
  store i32 0, i32* %12, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %22) #10
  %24 = load i32, i32* %7, align 4
  %25 = load i32, i32* %12, align 8
  br label %26

26:                                               ; preds = %15, %20
  %27 = phi i32 [ 0, %15 ], [ %25, %20 ]
  %28 = phi i32 [ %8, %15 ], [ %24, %20 ]
  %29 = icmp ult i32 %27, %28
  br i1 %29, label %30, label %60, !prof !2

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i32*, i32** %31, align 8
  %33 = icmp eq i32* %32, null
  %34 = zext i32 %28 to i64
  %35 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64 %34) #10
  %36 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %35, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv, i64 0, i64 0)) #10
  br i1 %33, label %37, label %42

37:                                               ; preds = %30
  %38 = ptrtoint i8* %36 to i64
  %39 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %38, i64* %39 monotonic, align 8
  %40 = lshr i64 %35, 2
  %41 = trunc i64 %40 to i32
  store i32 %41, i32* %12, align 8
  br label %60

42:                                               ; preds = %30
  %43 = lshr i64 %35, 2
  %44 = ptrtoint i8* %36 to i64
  %45 = load i32*, i32** %31, align 8
  %46 = icmp ne i8* %36, null
  %47 = icmp ne i32* %45, null
  %48 = and i1 %46, %47
  %49 = bitcast i32* %45 to i8*
  br i1 %48, label %50, label %56, !prof !2

50:                                               ; preds = %42
  %51 = load i32, i32* %5, align 4
  %52 = zext i32 %51 to i64
  %53 = shl nuw nsw i64 %52, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %36, i8* nonnull align 4 %49, i64 %53, i1 false) #10
  %54 = bitcast %"class.WTF::Vector"* %0 to i8**
  %55 = load i8*, i8** %54, align 8
  br label %56

56:                                               ; preds = %50, %42
  %57 = phi i8* [ %55, %50 ], [ %49, %42 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %57) #10
  %58 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %44, i64* %58 monotonic, align 8
  %59 = trunc i64 %43 to i32
  store i32 %59, i32* %12, align 8
  br label %60

60:                                               ; preds = %56, %37, %26, %11, %10
  %61 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %62 = bitcast %"class.WTF::Vector"* %1 to i8**
  %63 = load i8*, i8** %62, align 8
  %64 = load i32, i32* %5, align 4
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %67 = bitcast %"class.WTF::Vector"* %0 to i8**
  %68 = load i8*, i8** %67, align 8
  %69 = shl nuw nsw i64 %65, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %68, i8* align 4 %63, i64 %69, i1 false) #10
  %70 = load i32*, i32** %61, align 8
  %71 = load i32, i32* %5, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds i32, i32* %70, i64 %72
  %74 = load i32*, i32** %66, align 8
  %75 = getelementptr inbounds i32, i32* %74, i64 %72
  %76 = icmp ne i32* %75, null
  %77 = icmp ne i32* %73, null
  %78 = and i1 %77, %76
  br i1 %78, label %79, label %88, !prof !2

79:                                               ; preds = %60
  %80 = load i32, i32* %7, align 4
  %81 = zext i32 %80 to i64
  %82 = getelementptr inbounds i32, i32* %70, i64 %81
  %83 = bitcast i32* %75 to i8*
  %84 = bitcast i32* %73 to i8*
  %85 = ptrtoint i32* %82 to i64
  %86 = ptrtoint i32* %73 to i64
  %87 = sub i64 %85, %86
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %83, i8* nonnull align 4 %84, i64 %87, i1 false) #10
  br label %88

88:                                               ; preds = %60, %79
  %89 = load i32, i32* %7, align 4
  store i32 %89, i32* %5, align 4
  br label %90

90:                                               ; preds = %2, %88
  ret %"class.WTF::Vector"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16WebGLFramebuffer22DrawBuffersIfNecessaryEb(%"class.blink::WebGLFramebuffer"*, i1 zeroext) local_unnamed_addr #1 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLRenderingContextBase"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::WebGLRenderingContextBase", %"class.blink::WebGLRenderingContextBase"* %5, i64 0, i32 112
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::WebGLRenderingContextBase", %"class.blink::WebGLRenderingContextBase"* %5, i64 0, i32 87, i64 35
  %11 = load i8, i8* %10, align 1, !range !4
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %142, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 11
  %15 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 11, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 12
  br label %26

22:                                               ; preds = %121, %13
  %23 = phi i8 [ %3, %13 ], [ %122, %121 ]
  %24 = and i8 %23, 1
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %142, label %126

26:                                               ; preds = %18, %121
  %27 = phi i32 [ 0, %18 ], [ %123, %121 ]
  %28 = phi i8 [ %3, %18 ], [ %122, %121 ]
  %29 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %14, i32 %27) #10
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %115, label %32

32:                                               ; preds = %26
  %33 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %14, i32 %27) #10
  %34 = load i32, i32* %33, align 4
  %35 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %19, align 8
  %36 = icmp eq %"struct.WTF::KeyValuePair"* %35, null
  %37 = load i32, i32* %20, align 8
  br i1 %36, label %93, label %38

38:                                               ; preds = %32
  %39 = add i32 %37, -1
  %40 = zext i32 %39 to i64
  %41 = shl i32 %34, 15
  %42 = xor i32 %41, -1
  %43 = add i32 %34, %42
  %44 = lshr i32 %43, 10
  %45 = xor i32 %44, %43
  %46 = mul i32 %45, 9
  %47 = lshr i32 %46, 6
  %48 = xor i32 %47, %46
  %49 = shl i32 %48, 11
  %50 = xor i32 %49, -1
  %51 = add i32 %48, %50
  %52 = lshr i32 %51, 16
  %53 = xor i32 %52, %51
  %54 = and i32 %53, %39
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 %55
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %56, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, %34
  br i1 %59, label %88, label %60

60:                                               ; preds = %38
  %61 = xor i32 %53, -1
  %62 = lshr i32 %51, 23
  %63 = add i32 %62, %61
  %64 = shl i32 %63, 12
  %65 = xor i32 %64, %63
  %66 = lshr i32 %65, 7
  %67 = xor i32 %66, %65
  %68 = shl i32 %67, 2
  %69 = xor i32 %68, %67
  %70 = lshr i32 %69, 20
  %71 = xor i32 %70, %69
  %72 = or i32 %71, 1
  %73 = zext i32 %72 to i64
  br label %74

74:                                               ; preds = %79, %60
  %75 = phi i32 [ %58, %60 ], [ %86, %79 ]
  %76 = phi i64 [ %55, %60 ], [ %83, %79 ]
  %77 = phi i64 [ 0, %60 ], [ %81, %79 ]
  %78 = icmp eq i32 %75, 0
  br i1 %78, label %93, label %79

79:                                               ; preds = %74
  %80 = icmp eq i64 %77, 0
  %81 = select i1 %80, i64 %73, i64 %77
  %82 = add i64 %81, %76
  %83 = and i64 %82, %40
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 %83
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %84, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %86, %34
  br i1 %87, label %88, label %74

88:                                               ; preds = %79, %38
  %89 = phi %"struct.WTF::KeyValuePair"* [ %56, %38 ], [ %84, %79 ]
  %90 = icmp eq %"struct.WTF::KeyValuePair"* %89, null
  br i1 %90, label %93, label %91

91:                                               ; preds = %88
  %92 = zext i32 %37 to i64
  br label %96

93:                                               ; preds = %74, %88, %32
  %94 = zext i32 %37 to i64
  %95 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 %94
  br label %96

96:                                               ; preds = %93, %91
  %97 = phi i64 [ %92, %91 ], [ %94, %93 ]
  %98 = phi %"struct.WTF::KeyValuePair"* [ %89, %91 ], [ %95, %93 ]
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 %97
  %100 = icmp eq %"struct.WTF::KeyValuePair"* %98, %99
  br i1 %100, label %115, label %101

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %98, i64 0, i32 1, i32 0, i32 0
  %103 = load %"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.blink::WebGLFramebuffer::WebGLAttachment"** %102, align 8
  %104 = icmp eq %"class.blink::WebGLFramebuffer::WebGLAttachment"* %103, null
  br i1 %104, label %115, label %105

105:                                              ; preds = %101
  %106 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %21, i32 %27) #10
  %107 = load i32, i32* %106, align 4
  %108 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %14, i32 %27) #10
  %109 = load i32, i32* %108, align 4
  %110 = icmp eq i32 %107, %109
  br i1 %110, label %121, label %111

111:                                              ; preds = %105
  %112 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %14, i32 %27) #10
  %113 = load i32, i32* %112, align 4
  %114 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %21, i32 %27) #10
  store i32 %113, i32* %114, align 4
  br label %121

115:                                              ; preds = %96, %101, %26
  %116 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %21, i32 %27) #10
  %117 = load i32, i32* %116, align 4
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %121, label %119

119:                                              ; preds = %115
  %120 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %21, i32 %27) #10
  store i32 0, i32* %120, align 4
  br label %121

121:                                              ; preds = %105, %115, %111, %119
  %122 = phi i8 [ 1, %111 ], [ %28, %105 ], [ 1, %119 ], [ %28, %115 ]
  %123 = add nuw i32 %27, 1
  %124 = load i32, i32* %15, align 4
  %125 = icmp ult i32 %123, %124
  br i1 %125, label %26, label %22

126:                                              ; preds = %22
  %127 = load %"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLRenderingContextBase"** %4, align 8
  %128 = tail call %"class.blink::DrawingBuffer"* @_ZNK5blink25WebGLRenderingContextBase16GetDrawingBufferEv(%"class.blink::WebGLRenderingContextBase"* %127) #10
  %129 = icmp eq %"class.blink::DrawingBuffer"* %128, null
  br i1 %129, label %132, label %130

130:                                              ; preds = %126
  %131 = tail call %"class.gpu::gles2::GLES2Interface"* @_ZN5blink13DrawingBuffer9ContextGLEv(%"class.blink::DrawingBuffer"* nonnull %128) #10
  br label %132

132:                                              ; preds = %126, %130
  %133 = phi %"class.gpu::gles2::GLES2Interface"* [ %131, %130 ], [ null, %126 ]
  %134 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 12, i32 0, i32 0, i32 2
  %135 = load i32, i32* %134, align 4
  %136 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 12, i32 0, i32 0, i32 0
  %137 = load i32*, i32** %136, align 8
  %138 = bitcast %"class.gpu::gles2::GLES2Interface"* %133 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)***
  %139 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*** %138, align 8
  %140 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)** %139, i64 319
  %141 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32*)** %140, align 8
  tail call void %141(%"class.gpu::gles2::GLES2Interface"* %133, i32 %135, i32* %137) #10
  br label %142

142:                                              ; preds = %9, %132, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink16WebGLFramebuffer13GetDrawBufferEj(%"class.blink::WebGLFramebuffer"*, i32) local_unnamed_addr #1 align 2 {
  %3 = add i32 %1, -34853
  %4 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 11, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp slt i32 %3, %5
  br i1 %6, label %7, label %11

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 11
  %9 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %8, i32 %3) #10
  %10 = load i32, i32* %9, align 4
  br label %14

11:                                               ; preds = %2
  %12 = icmp eq i32 %1, 34853
  %13 = select i1 %12, i32 36064, i32 0
  br label %14

14:                                               ; preds = %11, %7
  %15 = phi i32 [ %10, %7 ], [ %13, %11 ]
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink16WebGLFramebuffer5TraceEPNS_7VisitorE(%"class.blink::WebGLFramebuffer"*, %"class.blink::Visitor"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 3
  %4 = bitcast %"class.blink::HeapHashMap"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = bitcast %"class.blink::HeapHashMap"* %3 to i8**
  %7 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %8 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, i64 11
  %10 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, align 8
  tail call void %10(%"class.blink::Visitor"* %1, i8** %6) #10
  %11 = icmp eq i64 %5, 0
  br i1 %11, label %18, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %5 to i8*
  %14 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %15 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, i64 5
  %17 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, align 8
  tail call void %17(%"class.blink::Visitor"* %1, i8* nonnull %13, i8* nonnull %13, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIjNS2_12KeyValuePairIjNS_6MemberINS_16WebGLFramebuffer15WebGLAttachmentEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIjEENS2_18HashMapValueTraitsINS2_10HashTraitsIjEENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #10
  br label %18

18:                                               ; preds = %2, %12
  %19 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 0
  tail call void @_ZNK5blink18WebGLContextObject5TraceEPNS_7VisitorE(%"class.blink::WebGLContextObject"* %19, %"class.blink::Visitor"* %1) #10
  ret void
}

declare void @_ZNK5blink18WebGLContextObject5TraceEPNS_7VisitorE(%"class.blink::WebGLContextObject"*, %"class.blink::Visitor"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink16WebGLFramebuffer18NameInHeapSnapshotEv(%"class.blink::WebGLFramebuffer"*) unnamed_addr #1 comdat align 2 {
  ret i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink16WebGLFramebuffer18GetWrapperTypeInfoEv(%"class.blink::WebGLFramebuffer"*) unnamed_addr #1 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink16WebGLFramebuffer18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #3

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #3

declare zeroext i1 @_ZNK5blink18WebGLContextObject8ValidateEPKNS_17WebGLContextGroupEPKNS_25WebGLRenderingContextBaseE(%"class.blink::WebGLContextObject"*, %"class.blink::WebGLContextGroup"*, %"class.blink::WebGLRenderingContextBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16WebGLFramebuffer9HasObjectEv(%"class.blink::WebGLFramebuffer"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WebGLFramebuffer", %"class.blink::WebGLFramebuffer"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp ne i32 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink18WebGLContextObject17HasGroupOrContextEv(%"class.blink::WebGLContextObject"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WebGLContextObject", %"class.blink::WebGLContextObject"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::WebGLRenderingContextBase"*, %"class.blink::WebGLRenderingContextBase"** %2, align 8
  %4 = icmp ne %"class.blink::WebGLRenderingContextBase"* %3, null
  ret i1 %4
}

declare i32 @_ZNK5blink18WebGLContextObject28CurrentNumberOfContextLossesEv(%"class.blink::WebGLContextObject"*) unnamed_addr #3

declare %"class.gpu::gles2::GLES2Interface"* @_ZNK5blink18WebGLContextObject15GetAGLInterfaceEv(%"class.blink::WebGLContextObject"*) unnamed_addr #3

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink16WebGLFramebuffer15WebGLAttachment5TraceEPNS_7VisitorE(%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.blink::Visitor"*) unnamed_addr #1 comdat align 2 {
  ret void
}

declare %"class.blink::DrawingBuffer"* @_ZNK5blink25WebGLRenderingContextBase16GetDrawingBufferEv(%"class.blink::WebGLRenderingContextBase"*) local_unnamed_addr #3

declare %"class.gpu::gles2::GLES2Interface"* @_ZN5blink13DrawingBuffer9ContextGLEv(%"class.blink::DrawingBuffer"*) local_unnamed_addr #3

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.97"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.97"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #7 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #10
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* %21, i8* %22) #10
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.3, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #10
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #10
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #10
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #3

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #3

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #3

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #3

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #1 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #1 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #10
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.97"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #3

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) i32* @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds i32, i32* %24, i64 %25
  ret i32* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_16WebGLFramebuffer15WebGLAttachmentEEEPhm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_16WebGLFramebuffer15WebGLAttachmentEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_16WebGLFramebuffer15WebGLAttachmentEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.97"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_16WebGLFramebuffer15WebGLAttachmentEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.97"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16WebGLFramebuffer15WebGLAttachmentEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16WebGLFramebuffer15WebGLAttachmentEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::WebGLFramebuffer::WebGLAttachment"*
  %4 = bitcast i8* %1 to void (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.blink::Visitor"*)**, void (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.blink::Visitor"*)*, void (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.blink::Visitor"*)** %5, i64 7
  %7 = load void (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.blink::Visitor"*)*, void (%"class.blink::WebGLFramebuffer::WebGLAttachment"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::WebGLFramebuffer::WebGLAttachment"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_16WebGLFramebuffer15WebGLAttachmentEE7GetNameEPKv(i8*) #1 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #10
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i8* @_ZNK5blink12_GLOBAL__N_122WebGLTextureAttachment18NameInHeapSnapshotEv(%"class.blink::(anonymous namespace)::WebGLTextureAttachment"* nocapture readnone) unnamed_addr #8 align 2 {
  ret i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0)
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal %"class.blink::WebGLSharedObject"* @_ZNK5blink12_GLOBAL__N_122WebGLTextureAttachment6ObjectEv(%"class.blink::(anonymous namespace)::WebGLTextureAttachment"* nocapture readonly) unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::WebGLTextureAttachment", %"class.blink::(anonymous namespace)::WebGLTextureAttachment"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::WebGLTexture"*, %"class.blink::WebGLTexture"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::WebGLTexture", %"class.blink::WebGLTexture"* %3, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  %7 = select i1 %6, %"class.blink::WebGLTexture"* null, %"class.blink::WebGLTexture"* %3
  %8 = getelementptr inbounds %"class.blink::WebGLTexture", %"class.blink::WebGLTexture"* %7, i64 0, i32 0, i32 0
  ret %"class.blink::WebGLSharedObject"* %8
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal zeroext i1 @_ZNK5blink12_GLOBAL__N_122WebGLTextureAttachment14IsSharedObjectEPNS_17WebGLSharedObjectE(%"class.blink::(anonymous namespace)::WebGLTextureAttachment"* nocapture readonly, %"class.blink::WebGLSharedObject"* readnone) unnamed_addr #9 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::WebGLTextureAttachment", %"class.blink::(anonymous namespace)::WebGLTextureAttachment"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::WebGLTexture"*, %"class.blink::WebGLTexture"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::WebGLTexture", %"class.blink::WebGLTexture"* %4, i64 0, i32 0, i32 0
  %6 = icmp eq %"class.blink::WebGLSharedObject"* %5, %1
  ret i1 %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal zeroext i1 @_ZNK5blink12_GLOBAL__N_122WebGLTextureAttachment5ValidEv(%"class.blink::(anonymous namespace)::WebGLTextureAttachment"* nocapture readonly) unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::WebGLTextureAttachment", %"class.blink::(anonymous namespace)::WebGLTextureAttachment"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = bitcast %"class.blink::WebGLTexture"** %2 to %"class.blink::WebGLSharedPlatform3DObject"**
  %4 = load %"class.blink::WebGLSharedPlatform3DObject"*, %"class.blink::WebGLSharedPlatform3DObject"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::WebGLSharedPlatform3DObject", %"class.blink::WebGLSharedPlatform3DObject"* %4, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp ne i32 %6, 0
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122WebGLTextureAttachment10OnDetachedEPN3gpu5gles214GLES2InterfaceE(%"class.blink::(anonymous namespace)::WebGLTextureAttachment"* nocapture readonly, %"class.gpu::gles2::GLES2Interface"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::WebGLTextureAttachment", %"class.blink::(anonymous namespace)::WebGLTextureAttachment"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.blink::WebGLTexture"** %3 to %"class.blink::WebGLObject"**
  %5 = load %"class.blink::WebGLObject"*, %"class.blink::WebGLObject"** %4, align 8
  tail call void @_ZN5blink11WebGLObject10OnDetachedEPN3gpu5gles214GLES2InterfaceE(%"class.blink::WebGLObject"* %5, %"class.gpu::gles2::GLES2Interface"* %1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122WebGLTextureAttachment6AttachEPN3gpu5gles214GLES2InterfaceEjj(%"class.blink::(anonymous namespace)::WebGLTextureAttachment"* nocapture readonly, %"class.gpu::gles2::GLES2Interface"*, i32, i32) unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.blink::(anonymous namespace)::WebGLTextureAttachment", %"class.blink::(anonymous namespace)::WebGLTextureAttachment"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = load %"class.blink::WebGLTexture"*, %"class.blink::WebGLTexture"** %5, align 8
  %7 = icmp eq %"class.blink::WebGLTexture"* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::WebGLTexture", %"class.blink::WebGLTexture"* %6, i64 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  br label %11

11:                                               ; preds = %4, %8
  %12 = phi i32 [ %10, %8 ], [ 0, %4 ]
  %13 = getelementptr inbounds %"class.blink::(anonymous namespace)::WebGLTextureAttachment", %"class.blink::(anonymous namespace)::WebGLTextureAttachment"* %0, i64 0, i32 2
  %14 = load i32, i32* %13, align 8
  switch i32 %14, label %24 [
    i32 32879, label %15
    i32 35866, label %15
  ]

15:                                               ; preds = %11, %11
  %16 = getelementptr inbounds %"class.blink::(anonymous namespace)::WebGLTextureAttachment", %"class.blink::(anonymous namespace)::WebGLTextureAttachment"* %0, i64 0, i32 3
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.blink::(anonymous namespace)::WebGLTextureAttachment", %"class.blink::(anonymous namespace)::WebGLTextureAttachment"* %0, i64 0, i32 4
  %19 = load i32, i32* %18, align 8
  %20 = bitcast %"class.gpu::gles2::GLES2Interface"* %1 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)***
  %21 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)** %21, i64 75
  %23 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)** %22, align 8
  tail call void %23(%"class.gpu::gles2::GLES2Interface"* %1, i32 %2, i32 %3, i32 %12, i32 %17, i32 %19) #10
  br label %31

24:                                               ; preds = %11
  %25 = getelementptr inbounds %"class.blink::(anonymous namespace)::WebGLTextureAttachment", %"class.blink::(anonymous namespace)::WebGLTextureAttachment"* %0, i64 0, i32 3
  %26 = load i32, i32* %25, align 4
  %27 = bitcast %"class.gpu::gles2::GLES2Interface"* %1 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)***
  %28 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)** %28, i64 74
  %30 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)** %29, align 8
  tail call void %30(%"class.gpu::gles2::GLES2Interface"* %1, i32 %2, i32 %3, i32 %14, i32 %12, i32 %26) #10
  br label %31

31:                                               ; preds = %24, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122WebGLTextureAttachment8UnattachEPN3gpu5gles214GLES2InterfaceEjj(%"class.blink::(anonymous namespace)::WebGLTextureAttachment"* nocapture readonly, %"class.gpu::gles2::GLES2Interface"*, i32, i32) unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.blink::(anonymous namespace)::WebGLTextureAttachment", %"class.blink::(anonymous namespace)::WebGLTextureAttachment"* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  switch i32 %6, label %16 [
    i32 32879, label %7
    i32 35866, label %7
  ]

7:                                                ; preds = %4, %4
  %8 = getelementptr inbounds %"class.blink::(anonymous namespace)::WebGLTextureAttachment", %"class.blink::(anonymous namespace)::WebGLTextureAttachment"* %0, i64 0, i32 3
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"class.blink::(anonymous namespace)::WebGLTextureAttachment", %"class.blink::(anonymous namespace)::WebGLTextureAttachment"* %0, i64 0, i32 4
  %11 = load i32, i32* %10, align 8
  %12 = bitcast %"class.gpu::gles2::GLES2Interface"* %1 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)***
  %13 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)** %13, i64 75
  %15 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)** %14, align 8
  tail call void %15(%"class.gpu::gles2::GLES2Interface"* %1, i32 %2, i32 %3, i32 0, i32 %9, i32 %11) #10
  br label %23

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.blink::(anonymous namespace)::WebGLTextureAttachment", %"class.blink::(anonymous namespace)::WebGLTextureAttachment"* %0, i64 0, i32 3
  %18 = load i32, i32* %17, align 4
  %19 = bitcast %"class.gpu::gles2::GLES2Interface"* %1 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)***
  %20 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)** %20, i64 74
  %22 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32, i32)** %21, align 8
  tail call void %22(%"class.gpu::gles2::GLES2Interface"* %1, i32 %2, i32 %3, i32 %6, i32 0, i32 %18) #10
  br label %23

23:                                               ; preds = %16, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK5blink12_GLOBAL__N_122WebGLTextureAttachment5TraceEPNS_7VisitorE(%"class.blink::(anonymous namespace)::WebGLTextureAttachment"* nocapture readonly, %"class.blink::Visitor"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::WebGLTextureAttachment", %"class.blink::(anonymous namespace)::WebGLTextureAttachment"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.431"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12WebGLTextureEE5TraceEPNS_7VisitorEPKv) #10
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

declare void @_ZN5blink11WebGLObject10OnDetachedEPN3gpu5gles214GLES2InterfaceE(%"class.blink::WebGLObject"*, %"class.gpu::gles2::GLES2Interface"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_12WebGLTextureEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::WebGLSharedObject"*
  %4 = bitcast i8* %1 to void (%"class.blink::WebGLSharedObject"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::WebGLSharedObject"*, %"class.blink::Visitor"*)**, void (%"class.blink::WebGLSharedObject"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::WebGLSharedObject"*, %"class.blink::Visitor"*)*, void (%"class.blink::WebGLSharedObject"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::WebGLSharedObject"*, %"class.blink::Visitor"*)*, void (%"class.blink::WebGLSharedObject"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::WebGLSharedObject"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjN5blink6MemberINS2_16WebGLFramebuffer15WebGLAttachmentEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_10HashTraitsIjEENSC_IS6_EEEESD_NS2_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #10
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i64 0, i64 0), i8* %23, i8* %24) #10
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.11, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #10
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #10
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #10
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjN5blink6MemberINS2_16WebGLFramebuffer15WebGLAttachmentEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_10HashTraitsIjEENSC_IS6_EEEESD_NS2_13HeapAllocatorEE12ExpandBufferEjPS7_Rb(%"class.WTF::HashTable"* %0, i32 %35, %"struct.WTF::KeyValuePair"* %1, i8* nonnull dereferenceable(1) %4) #10
  %37 = load i8, i8* %4, align 1, !range !4
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #10
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableIjNS2_12KeyValuePairIjNS_6MemberINS_16WebGLFramebuffer15WebGLAttachmentEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIjEENS2_18HashMapValueTraitsINS2_10HashTraitsIjEENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #10
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"struct.WTF::KeyValuePair"*
  %44 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjN5blink6MemberINS2_16WebGLFramebuffer15WebGLAttachmentEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_10HashTraitsIjEENSC_IS6_EEEESD_NS2_13HeapAllocatorEE8RehashToEPS7_jSI_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %43, i32 %40, %"struct.WTF::KeyValuePair"* %1) #10
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjN5blink6MemberINS2_16WebGLFramebuffer15WebGLAttachmentEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_10HashTraitsIjEENSC_IS6_EEEESD_NS2_13HeapAllocatorEE12ExpandBufferEjPS7_Rb(%"class.WTF::HashTable"*, i32, %"struct.WTF::KeyValuePair"*, i8* dereferenceable(1)) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #10
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !3

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #10
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !4
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.11, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7, i64 0, i64 0)) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair"* %32, null
  br i1 %33, label %82, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #10
  br i1 %38, label %39, label %82

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableIjNS2_12KeyValuePairIjNS_6MemberINS_16WebGLFramebuffer15WebGLAttachmentEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIjEENS2_18HashMapValueTraitsINS2_10HashTraitsIjEENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #10
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"struct.WTF::KeyValuePair"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %79, %39
  %48 = phi %"struct.WTF::KeyValuePair"* [ null, %39 ], [ %65, %79 ]
  %49 = bitcast %"class.WTF::HashTable"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %49, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #10
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"struct.WTF::KeyValuePair"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %36, i1 false)
  %57 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjN5blink6MemberINS2_16WebGLFramebuffer15WebGLAttachmentEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_10HashTraitsIjEENSC_IS6_EEEESD_NS2_13HeapAllocatorEE8RehashToEPS7_jSI_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %42, i32 %1, %"struct.WTF::KeyValuePair"* %48)
  br label %82

58:                                               ; preds = %39, %79
  %59 = phi i64 [ %80, %79 ], [ 0, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair"* [ %65, %79 ], [ null, %39 ]
  %61 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %61, i64 %59
  %63 = icmp eq %"struct.WTF::KeyValuePair"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %59
  %65 = select i1 %63, %"struct.WTF::KeyValuePair"* %64, %"struct.WTF::KeyValuePair"* %60
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = add i32 %67, 1
  %69 = icmp ult i32 %68, 2
  br i1 %69, label %70, label %72

70:                                               ; preds = %58
  %71 = bitcast %"struct.WTF::KeyValuePair"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 16, i1 false)
  br label %79

72:                                               ; preds = %58
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 0
  store i32 %67, i32* %73, align 8
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %59, i32 1
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %61, i64 %59, i32 1
  %76 = bitcast %"class.blink::Member.4"* %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = bitcast %"class.blink::Member.4"* %74 to i64*
  store i64 %77, i64* %78, align 8
  br label %79

79:                                               ; preds = %70, %72
  %80 = add nuw nsw i64 %59, 1
  %81 = icmp eq i64 %80, %43
  br i1 %81, label %47, label %58

82:                                               ; preds = %34, %30, %55
  %83 = phi %"struct.WTF::KeyValuePair"* [ %57, %55 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair"* %83
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjN5blink6MemberINS2_16WebGLFramebuffer15WebGLAttachmentEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_10HashTraitsIjEENSC_IS6_EEEESD_NS2_13HeapAllocatorEE8RehashToEPS7_jSI_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #1 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %11 = add i32 %2, -1
  %12 = zext i32 %11 to i64
  %13 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %10, align 8
  br label %37

14:                                               ; preds = %124, %4
  %15 = phi %"struct.WTF::KeyValuePair"* [ null, %4 ], [ %127, %124 ]
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = bitcast %"struct.WTF::KeyValuePair"* %1 to i8*
  tail call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %19) #10
  br label %20

20:                                               ; preds = %14, %18
  %21 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %22 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %21, align 8
  %23 = bitcast %"class.WTF::HashTable"* %0 to i64*
  store atomic i64 %5, i64* %23 monotonic, align 8
  %24 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = bitcast %"struct.WTF::KeyValuePair"* %1 to i8*
  %28 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %27) #10
  br label %29

29:                                               ; preds = %20, %26
  store i32 %2, i32* %6, align 8
  %30 = icmp eq %"struct.WTF::KeyValuePair"* %22, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = bitcast %"struct.WTF::KeyValuePair"* %22 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %32) #10
  br label %33

33:                                               ; preds = %29, %31
  %34 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, -2147483648
  store i32 %36, i32* %34, align 8
  ret %"struct.WTF::KeyValuePair"* %15

37:                                               ; preds = %9, %124
  %38 = phi i32 [ %7, %9 ], [ %125, %124 ]
  %39 = phi %"struct.WTF::KeyValuePair"* [ %13, %9 ], [ %126, %124 ]
  %40 = phi %"struct.WTF::KeyValuePair"* [ null, %9 ], [ %127, %124 ]
  %41 = phi i32 [ 0, %9 ], [ %128, %124 ]
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %39, i64 %42, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = add i32 %44, 1
  %46 = icmp ult i32 %45, 2
  br i1 %46, label %124, label %47

47:                                               ; preds = %37
  %48 = shl i32 %44, 15
  %49 = xor i32 %48, -1
  %50 = add i32 %44, %49
  %51 = lshr i32 %50, 10
  %52 = xor i32 %51, %50
  %53 = mul i32 %52, 9
  %54 = lshr i32 %53, 6
  %55 = xor i32 %54, %53
  %56 = shl i32 %55, 11
  %57 = xor i32 %56, -1
  %58 = add i32 %55, %57
  %59 = lshr i32 %58, 16
  %60 = xor i32 %59, %58
  %61 = and i32 %60, %11
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %62
  %64 = ptrtoint %"struct.WTF::KeyValuePair"* %63 to i64
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %63, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %85, label %68

68:                                               ; preds = %47
  %69 = xor i32 %60, -1
  %70 = lshr i32 %58, 23
  %71 = add i32 %70, %69
  %72 = shl i32 %71, 12
  %73 = xor i32 %72, %71
  %74 = lshr i32 %73, 7
  %75 = xor i32 %74, %73
  %76 = shl i32 %75, 2
  %77 = xor i32 %76, %75
  %78 = lshr i32 %77, 20
  %79 = xor i32 %78, %77
  %80 = or i32 %79, 1
  %81 = zext i32 %80 to i64
  br label %91

82:                                               ; preds = %98
  %83 = ptrtoint %"struct.WTF::KeyValuePair"* %105 to i64
  %84 = inttoptr i64 %100 to %"struct.WTF::KeyValuePair"*
  br label %85

85:                                               ; preds = %82, %47
  %86 = phi i64 [ %83, %82 ], [ %64, %47 ]
  %87 = phi %"struct.WTF::KeyValuePair"* [ %84, %82 ], [ null, %47 ]
  %88 = icmp eq %"struct.WTF::KeyValuePair"* %87, null
  %89 = ptrtoint %"struct.WTF::KeyValuePair"* %87 to i64
  %90 = select i1 %88, i64 %86, i64 %89
  br label %110

91:                                               ; preds = %98, %68
  %92 = phi i64 [ 0, %68 ], [ %100, %98 ]
  %93 = phi i32 [ %66, %68 ], [ %108, %98 ]
  %94 = phi i64 [ %64, %68 ], [ %106, %98 ]
  %95 = phi i64 [ %62, %68 ], [ %104, %98 ]
  %96 = phi i64 [ 0, %68 ], [ %102, %98 ]
  %97 = icmp eq i32 %93, %44
  br i1 %97, label %110, label %98

98:                                               ; preds = %91
  %99 = icmp eq i32 %93, -1
  %100 = select i1 %99, i64 %94, i64 %92
  %101 = icmp eq i64 %96, 0
  %102 = select i1 %101, i64 %81, i64 %96
  %103 = add i64 %102, %95
  %104 = and i64 %103, %12
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %104
  %106 = ptrtoint %"struct.WTF::KeyValuePair"* %105 to i64
  %107 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %105, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %82, label %91

110:                                              ; preds = %91, %85
  %111 = phi i64 [ %90, %85 ], [ %94, %91 ]
  %112 = inttoptr i64 %111 to %"struct.WTF::KeyValuePair"*
  %113 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %112, i64 0, i32 0
  store i32 %44, i32* %113, align 8
  %114 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %112, i64 0, i32 1
  %115 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %39, i64 %42, i32 1
  %116 = bitcast %"class.blink::Member.4"* %115 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = bitcast %"class.blink::Member.4"* %114 to i64*
  store i64 %117, i64* %118, align 8
  %119 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %10, align 8
  %120 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %119, i64 %42
  %121 = icmp eq %"struct.WTF::KeyValuePair"* %120, %3
  %122 = select i1 %121, %"struct.WTF::KeyValuePair"* %112, %"struct.WTF::KeyValuePair"* %40
  %123 = load i32, i32* %6, align 8
  br label %124

124:                                              ; preds = %37, %110
  %125 = phi i32 [ %38, %37 ], [ %123, %110 ]
  %126 = phi %"struct.WTF::KeyValuePair"* [ %39, %37 ], [ %119, %110 ]
  %127 = phi %"struct.WTF::KeyValuePair"* [ %40, %37 ], [ %122, %110 ]
  %128 = add i32 %41, 1
  %129 = icmp eq i32 %128, %125
  br i1 %129, label %14, label %37
}

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableIjNS2_12KeyValuePairIjNS_6MemberINS_16WebGLFramebuffer15WebGLAttachmentEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIjEENS2_18HashMapValueTraitsINS2_10HashTraitsIjEENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.12, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.13, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableIjNS1_12KeyValuePairIjNS_6MemberINS_16WebGLFramebuffer15WebGLAttachmentEEEEENS1_24KeyValuePairKeyExtractorENS1_7IntHashIjEENS1_18HashMapValueTraitsINS1_10HashTraitsIjEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEE14AllocateObjectISJ_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableIjNS1_12KeyValuePairIjNS_6MemberINS_16WebGLFramebuffer15WebGLAttachmentEEEEENS1_24KeyValuePairKeyExtractorENS1_7IntHashIjEENS1_18HashMapValueTraitsINS1_10HashTraitsIjEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEE14AllocateObjectISJ_EEPvm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIjNS2_12KeyValuePairIjNS_6MemberINS_16WebGLFramebuffer15WebGLAttachmentEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIjEENS2_18HashMapValueTraitsINS2_10HashTraitsIjEENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIjNS2_12KeyValuePairIjNS_6MemberINS_16WebGLFramebuffer15WebGLAttachmentEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIjEENS2_18HashMapValueTraitsINS2_10HashTraitsIjEENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.97"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIjNS2_12KeyValuePairIjNS_6MemberINS_16WebGLFramebuffer15WebGLAttachmentEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIjEENS2_18HashMapValueTraitsINS2_10HashTraitsIjEENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.97"*)) #10
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([441 x i8], [441 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableIjNS_12KeyValuePairIjNS1_6MemberINS1_16WebGLFramebuffer15WebGLAttachmentEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_10HashTraitsIjEENSE_IS8_EEEESF_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIjNS2_12KeyValuePairIjNS_6MemberINS_16WebGLFramebuffer15WebGLAttachmentEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIjEENS2_18HashMapValueTraitsINS2_10HashTraitsIjEENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIjNS2_12KeyValuePairIjNS_6MemberINS_16WebGLFramebuffer15WebGLAttachmentEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIjEENS2_18HashMapValueTraitsINS2_10HashTraitsIjEENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, i64 %23) #10
  br i1 %28, label %93, label %29

29:                                               ; preds = %2, %22
  %30 = bitcast i8* %1 to %"struct.WTF::KeyValuePair"*
  %31 = getelementptr inbounds i8, i8* %1, i64 -2
  %32 = bitcast i8* %31 to i16*
  %33 = load i16, i16* %32, align 2
  %34 = lshr i16 %33, 2
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %36, label %44, !prof !3

36:                                               ; preds = %29
  %37 = getelementptr inbounds i8, i8* %1, i64 -8
  %38 = ptrtoint i8* %37 to i64
  %39 = and i64 %38, -131072
  %40 = inttoptr i64 %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 4144
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 16
  br label %47

44:                                               ; preds = %29
  %45 = zext i16 %34 to i64
  %46 = shl nuw nsw i64 %45, 3
  br label %47

47:                                               ; preds = %44, %36
  %48 = phi i64 [ %43, %36 ], [ %46, %44 ]
  %49 = add i64 %48, -8
  %50 = lshr i64 %49, 4
  %51 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %52 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %51, align 8
  %53 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %52, i64 3
  %54 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %53, align 8
  %55 = tail call zeroext i1 %54(%"class.blink::Visitor"* %0) #10
  %56 = icmp eq i64 %50, 0
  br i1 %56, label %93, label %57

57:                                               ; preds = %47
  %58 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %59

59:                                               ; preds = %90, %57
  %60 = phi i64 [ 0, %57 ], [ %91, %90 ]
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 %60, i32 0
  br i1 %55, label %62, label %76

62:                                               ; preds = %59
  %63 = load atomic i32, i32* %61 monotonic, align 4
  %64 = add i32 %63, 1
  %65 = icmp ult i32 %64, 2
  br i1 %65, label %90, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 %60, i32 1
  %68 = bitcast %"class.blink::Member.4"* %67 to i64*
  %69 = load atomic i64, i64* %68 monotonic, align 8
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %90, label %71

71:                                               ; preds = %66
  %72 = inttoptr i64 %69 to i8*
  %73 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %58, align 8
  %74 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %73, i64 5
  %75 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %74, align 8
  tail call void %75(%"class.blink::Visitor"* %0, i8* nonnull %72, i8* nonnull %72, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16WebGLFramebuffer15WebGLAttachmentEE5TraceEPNS_7VisitorEPKv) #10
  br label %90

76:                                               ; preds = %59
  %77 = load i32, i32* %61, align 4
  %78 = add i32 %77, 1
  %79 = icmp ult i32 %78, 2
  br i1 %79, label %90, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 %60, i32 1
  %82 = bitcast %"class.blink::Member.4"* %81 to i64*
  %83 = load atomic i64, i64* %82 monotonic, align 8
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %90, label %85

85:                                               ; preds = %80
  %86 = inttoptr i64 %83 to i8*
  %87 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %58, align 8
  %88 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %87, i64 5
  %89 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %88, align 8
  tail call void %89(%"class.blink::Visitor"* %0, i8* nonnull %86, i8* nonnull %86, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16WebGLFramebuffer15WebGLAttachmentEE5TraceEPNS_7VisitorEPKv) #10
  br label %90

90:                                               ; preds = %85, %80, %76, %71, %66, %62
  %91 = add nuw nsw i64 %60, 1
  %92 = icmp eq i64 %91, %50
  br i1 %92, label %93, label %59

93:                                               ; preds = %90, %47, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableIjNS2_12KeyValuePairIjNS_6MemberINS_16WebGLFramebuffer15WebGLAttachmentEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIjEENS2_18HashMapValueTraitsINS2_10HashTraitsIjEENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #1 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i64 0, i64 0), i8 1 }
}

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #3

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #3

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i8* @_ZNK5blink12_GLOBAL__N_127WebGLRenderbufferAttachment18NameInHeapSnapshotEv(%"class.blink::(anonymous namespace)::WebGLRenderbufferAttachment"* nocapture readnone) unnamed_addr #8 align 2 {
  ret i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0)
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal %"class.blink::WebGLSharedObject"* @_ZNK5blink12_GLOBAL__N_127WebGLRenderbufferAttachment6ObjectEv(%"class.blink::(anonymous namespace)::WebGLRenderbufferAttachment"* nocapture readonly) unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::WebGLRenderbufferAttachment", %"class.blink::(anonymous namespace)::WebGLRenderbufferAttachment"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::WebGLRenderbuffer"*, %"class.blink::WebGLRenderbuffer"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::WebGLRenderbuffer", %"class.blink::WebGLRenderbuffer"* %3, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  %7 = select i1 %6, %"class.blink::WebGLRenderbuffer"* null, %"class.blink::WebGLRenderbuffer"* %3
  %8 = getelementptr inbounds %"class.blink::WebGLRenderbuffer", %"class.blink::WebGLRenderbuffer"* %7, i64 0, i32 0, i32 0
  ret %"class.blink::WebGLSharedObject"* %8
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal zeroext i1 @_ZNK5blink12_GLOBAL__N_127WebGLRenderbufferAttachment14IsSharedObjectEPNS_17WebGLSharedObjectE(%"class.blink::(anonymous namespace)::WebGLRenderbufferAttachment"* nocapture readonly, %"class.blink::WebGLSharedObject"* readnone) unnamed_addr #9 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::WebGLRenderbufferAttachment", %"class.blink::(anonymous namespace)::WebGLRenderbufferAttachment"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::WebGLRenderbuffer"*, %"class.blink::WebGLRenderbuffer"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::WebGLRenderbuffer", %"class.blink::WebGLRenderbuffer"* %4, i64 0, i32 0, i32 0
  %6 = icmp eq %"class.blink::WebGLSharedObject"* %5, %1
  ret i1 %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal zeroext i1 @_ZNK5blink12_GLOBAL__N_127WebGLRenderbufferAttachment5ValidEv(%"class.blink::(anonymous namespace)::WebGLRenderbufferAttachment"* nocapture readonly) unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::WebGLRenderbufferAttachment", %"class.blink::(anonymous namespace)::WebGLRenderbufferAttachment"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = bitcast %"class.blink::WebGLRenderbuffer"** %2 to %"class.blink::WebGLSharedPlatform3DObject"**
  %4 = load %"class.blink::WebGLSharedPlatform3DObject"*, %"class.blink::WebGLSharedPlatform3DObject"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::WebGLSharedPlatform3DObject", %"class.blink::WebGLSharedPlatform3DObject"* %4, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp ne i32 %6, 0
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_127WebGLRenderbufferAttachment10OnDetachedEPN3gpu5gles214GLES2InterfaceE(%"class.blink::(anonymous namespace)::WebGLRenderbufferAttachment"* nocapture readonly, %"class.gpu::gles2::GLES2Interface"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::WebGLRenderbufferAttachment", %"class.blink::(anonymous namespace)::WebGLRenderbufferAttachment"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.blink::WebGLRenderbuffer"** %3 to %"class.blink::WebGLObject"**
  %5 = load %"class.blink::WebGLObject"*, %"class.blink::WebGLObject"** %4, align 8
  tail call void @_ZN5blink11WebGLObject10OnDetachedEPN3gpu5gles214GLES2InterfaceE(%"class.blink::WebGLObject"* %5, %"class.gpu::gles2::GLES2Interface"* %1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_127WebGLRenderbufferAttachment6AttachEPN3gpu5gles214GLES2InterfaceEjj(%"class.blink::(anonymous namespace)::WebGLRenderbufferAttachment"* nocapture readonly, %"class.gpu::gles2::GLES2Interface"*, i32, i32) unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.blink::(anonymous namespace)::WebGLRenderbufferAttachment", %"class.blink::(anonymous namespace)::WebGLRenderbufferAttachment"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = load %"class.blink::WebGLRenderbuffer"*, %"class.blink::WebGLRenderbuffer"** %5, align 8
  %7 = icmp eq %"class.blink::WebGLRenderbuffer"* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::WebGLRenderbuffer", %"class.blink::WebGLRenderbuffer"* %6, i64 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  br label %11

11:                                               ; preds = %4, %8
  %12 = phi i32 [ %10, %8 ], [ 0, %4 ]
  %13 = bitcast %"class.gpu::gles2::GLES2Interface"* %1 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)***
  %14 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)** %14, i64 73
  %16 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)** %15, align 8
  tail call void %16(%"class.gpu::gles2::GLES2Interface"* %1, i32 %2, i32 %3, i32 36161, i32 %12) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_127WebGLRenderbufferAttachment8UnattachEPN3gpu5gles214GLES2InterfaceEjj(%"class.blink::(anonymous namespace)::WebGLRenderbufferAttachment"* nocapture readnone, %"class.gpu::gles2::GLES2Interface"*, i32, i32) unnamed_addr #1 align 2 {
  %5 = bitcast %"class.gpu::gles2::GLES2Interface"* %1 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)***
  %6 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)** %6, i64 73
  %8 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i32)** %7, align 8
  tail call void %8(%"class.gpu::gles2::GLES2Interface"* %1, i32 %2, i32 %3, i32 36161, i32 0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK5blink12_GLOBAL__N_127WebGLRenderbufferAttachment5TraceEPNS_7VisitorE(%"class.blink::(anonymous namespace)::WebGLRenderbufferAttachment"* nocapture readonly, %"class.blink::Visitor"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::WebGLRenderbufferAttachment", %"class.blink::(anonymous namespace)::WebGLRenderbufferAttachment"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.194"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17WebGLRenderbufferEE5TraceEPNS_7VisitorEPKv) #10
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17WebGLRenderbufferEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::WebGLRenderbuffer"*
  tail call void @_ZNK5blink17WebGLRenderbuffer5TraceEPNS_7VisitorE(%"class.blink::WebGLRenderbuffer"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

declare void @_ZNK5blink17WebGLRenderbuffer5TraceEPNS_7VisitorE(%"class.blink::WebGLRenderbuffer"*, %"class.blink::Visitor"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIjNS_12KeyValuePairIjN5blink6MemberINS2_16WebGLFramebuffer15WebGLAttachmentEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_10HashTraitsIjEENSC_IS6_EEEESD_NS2_13HeapAllocatorEE5eraseEPKS7_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0
  store i32 -1, i32* %3, align 4
  %4 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1
  %5 = bitcast %"class.blink::Member.4"* %4 to i64*
  store atomic i64 0, i64* %5 monotonic, align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = add i32 %7, 1
  %9 = and i32 %8, 2147483647
  %10 = and i32 %7, -2147483648
  %11 = or i32 %9, %10
  store i32 %11, i32* %6, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = add i32 %13, -1
  store i32 %14, i32* %12, align 4
  %15 = mul i32 %14, 6
  %16 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = icmp ult i32 %15, %17
  %19 = icmp ugt i32 %17, 8
  %20 = and i1 %18, %19
  br i1 %20, label %21, label %50

21:                                               ; preds = %2
  %22 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %23 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %22, i64 0, i32 1
  %24 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %23) #10
  %25 = icmp eq i8* %24, null
  br i1 %25, label %26, label %28, !prof !3

26:                                               ; preds = %21
  %27 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %23, i8* %27) #10
  br label %28

28:                                               ; preds = %26, %21
  %29 = phi i8* [ %27, %26 ], [ %24, %21 ]
  %30 = bitcast i8* %29 to %"class.blink::ThreadState"**
  %31 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %31, i64 0, i32 6
  %33 = load i8, i8* %32, align 8, !range !4
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %31, i64 0, i32 16
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %50, label %39

39:                                               ; preds = %28, %35
  %40 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %31, i64 0, i32 13
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %50

43:                                               ; preds = %39
  %44 = load i32, i32* %16, align 8
  %45 = lshr i32 %44, 1
  %46 = zext i32 %45 to i64
  %47 = tail call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableIjNS2_12KeyValuePairIjNS_6MemberINS_16WebGLFramebuffer15WebGLAttachmentEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIjEENS2_18HashMapValueTraitsINS2_10HashTraitsIjEENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE4CallEm(i64 %46) #10
  %48 = bitcast %"class.blink::HeapHashTableBacking"* %47 to %"struct.WTF::KeyValuePair"*
  %49 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjN5blink6MemberINS2_16WebGLFramebuffer15WebGLAttachmentEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_10HashTraitsIjEENSC_IS6_EEEESD_NS2_13HeapAllocatorEE8RehashToEPS7_jSI_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %48, i32 %45, %"struct.WTF::KeyValuePair"* null) #10
  br label %50

50:                                               ; preds = %35, %2, %43, %39
  ret void
}

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
