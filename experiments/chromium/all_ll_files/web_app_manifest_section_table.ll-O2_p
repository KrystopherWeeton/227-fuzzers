; ModuleID = '../../components/payments/content/web_app_manifest_section_table.cc'
source_filename = "../../components/payments/content/web_app_manifest_section_table.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.payments::WebAppManifestSectionTable" = type { %class.WebDatabaseTable }
%class.WebDatabaseTable = type { i32 (...)**, %"class.sql::Database"*, %"class.sql::MetaTable"* }
%"class.sql::Database" = type { %struct.sqlite3*, %"struct.sql::DatabaseOptions", %"class.base::flat_map", %"class.std::__1::set", i32, i8, i8, i8, i8, i8, i8, i32, %"class.base::RepeatingCallback", %"class.std::__1::basic_string", %"class.base::HistogramBase"*, %"class.std::__1::unique_ptr" }
%struct.sqlite3 = type opaque
%"struct.sql::DatabaseOptions" = type { i8, i8, i32, i32 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::pair"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1", %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::HistogramBase" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.sql::DatabaseMemoryDumpProvider"* }
%"class.sql::DatabaseMemoryDumpProvider" = type opaque
%"class.sql::MetaTable" = type { %"class.sql::Database"* }
%class.WebDatabase = type { i32 (...)**, %"class.sql::Database", %"class.sql::MetaTable", %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.18" }
%"class.std::__1::__tree.18" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.19", %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.sql::Statement" = type <{ %class.scoped_refptr.27, i8, i8, [6 x i8] }>
%class.scoped_refptr.27 = type { %"class.sql::Database::StatementRef"* }
%"class.sql::Database::StatementRef" = type <{ %"class.base::RefCounted", [4 x i8], %"class.sql::Database"*, %struct.sqlite3_stmt*, i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%struct.sqlite3_stmt = type opaque
%"class.std::__1::vector.28" = type { %"class.std::__1::__vector_base.29" }
%"class.std::__1::__vector_base.29" = type { %"struct.payments::WebAppManifestSection"*, %"struct.payments::WebAppManifestSection"*, %"class.std::__1::__compressed_pair.44" }
%"struct.payments::WebAppManifestSection" = type { %"class.std::__1::basic_string", i64, %"class.std::__1::vector.30" }
%"class.std::__1::vector.30" = type { %"class.std::__1::__vector_base.31" }
%"class.std::__1::__vector_base.31" = type { %"class.std::__1::vector.32"*, %"class.std::__1::vector.32"*, %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::vector.32" = type { %"class.std::__1::__vector_base.33" }
%"class.std::__1::__vector_base.33" = type { i8*, i8*, %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { i8* }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.std::__1::vector.32"* }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"struct.payments::WebAppManifestSection"* }
%"class.sql::Transaction" = type <{ %"class.sql::Database"*, i8, [7 x i8] }>
%"class.std::__1::__wrap_iter.56" = type { i8* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertINS_11__wrap_iterIPKhEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsISA_E9referenceEEE5valueENS5_IPhEEE4typeES8_SA_SA_ = comdat any

$_ZNSt3__16vectorINS0_IhNS_9allocatorIhEEEENS1_IS3_EEE24__emplace_back_slow_pathIJNS_11__wrap_iterIPKhEESA_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorIN8payments21WebAppManifestSectionENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJS2_EEEvDpOT_ = comdat any

@_ZTVN8payments26WebAppManifestSectionTableE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.payments::WebAppManifestSectionTable"*)* @_ZN8payments26WebAppManifestSectionTableD2Ev to i8*), i8* bitcast (void (%"class.payments::WebAppManifestSectionTable"*)* @_ZN8payments26WebAppManifestSectionTableD0Ev to i8*), i8* bitcast (i8* (%"class.payments::WebAppManifestSectionTable"*)* @_ZNK8payments26WebAppManifestSectionTable10GetTypeKeyEv to i8*), i8* bitcast (i1 (%"class.payments::WebAppManifestSectionTable"*)* @_ZN8payments26WebAppManifestSectionTable23CreateTablesIfNecessaryEv to i8*), i8* bitcast (i1 (%"class.payments::WebAppManifestSectionTable"*)* @_ZN8payments26WebAppManifestSectionTable10IsSyncableEv to i8*), i8* bitcast (i1 (%"class.payments::WebAppManifestSectionTable"*, i32, i8*)* @_ZN8payments26WebAppManifestSectionTable16MigrateToVersionEiPb to i8*)] }, align 8
@.str = private unnamed_addr constant [166 x i8] c"CREATE TABLE IF NOT EXISTS web_app_manifest_section ( expire_date INTEGER NOT NULL DEFAULT 0, id VARCHAR, min_version INTEGER NOT NULL DEFAULT 0, fingerprints BLOB) \00", align 1
@.str.1 = private unnamed_addr constant [60 x i8] c"DELETE FROM web_app_manifest_section WHERE expire_date < ? \00", align 1
@.str.2 = private unnamed_addr constant [49 x i8] c"DELETE FROM web_app_manifest_section WHERE id=? \00", align 1
@.str.3 = private unnamed_addr constant [102 x i8] c"INSERT INTO web_app_manifest_section (expire_date, id, min_version, fingerprints) VALUES (?, ?, ?, ?)\00", align 1
@.str.4 = private unnamed_addr constant [78 x i8] c"SELECT id, min_version, fingerprints FROM web_app_manifest_section WHERE id=?\00", align 1
@_ZZN8payments12_GLOBAL__N_120GetWebAppManifestKeyEvE9table_key = internal global i32 0, align 4

@_ZN8payments26WebAppManifestSectionTableC1Ev = hidden unnamed_addr alias void (%"class.payments::WebAppManifestSectionTable"*), void (%"class.payments::WebAppManifestSectionTable"*)* @_ZN8payments26WebAppManifestSectionTableC2Ev
@_ZN8payments26WebAppManifestSectionTableD1Ev = hidden unnamed_addr alias void (%"class.payments::WebAppManifestSectionTable"*), void (%"class.payments::WebAppManifestSectionTable"*)* @_ZN8payments26WebAppManifestSectionTableD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8payments26WebAppManifestSectionTableC2Ev(%"class.payments::WebAppManifestSectionTable"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.payments::WebAppManifestSectionTable", %"class.payments::WebAppManifestSectionTable"* %0, i64 0, i32 0
  tail call void @_ZN16WebDatabaseTableC2Ev(%class.WebDatabaseTable* %2) #9
  %3 = getelementptr inbounds %"class.payments::WebAppManifestSectionTable", %"class.payments::WebAppManifestSectionTable"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN8payments26WebAppManifestSectionTableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

declare void @_ZN16WebDatabaseTableC2Ev(%class.WebDatabaseTable*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN16WebDatabaseTableD2Ev(%class.WebDatabaseTable*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8payments26WebAppManifestSectionTableD2Ev(%"class.payments::WebAppManifestSectionTable"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.payments::WebAppManifestSectionTable", %"class.payments::WebAppManifestSectionTable"* %0, i64 0, i32 0
  tail call void @_ZN16WebDatabaseTableD2Ev(%class.WebDatabaseTable* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8payments26WebAppManifestSectionTableD0Ev(%"class.payments::WebAppManifestSectionTable"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.payments::WebAppManifestSectionTable", %"class.payments::WebAppManifestSectionTable"* %0, i64 0, i32 0
  tail call void @_ZN16WebDatabaseTableD2Ev(%class.WebDatabaseTable* %2) #9
  %3 = bitcast %"class.payments::WebAppManifestSectionTable"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.payments::WebAppManifestSectionTable"* @_ZN8payments26WebAppManifestSectionTable15FromWebDatabaseEP11WebDatabase(%class.WebDatabase*) local_unnamed_addr #0 align 2 {
  %2 = tail call %class.WebDatabaseTable* @_ZN11WebDatabase8GetTableEPv(%class.WebDatabase* %0, i8* bitcast (i32* @_ZZN8payments12_GLOBAL__N_120GetWebAppManifestKeyEvE9table_key to i8*)) #9
  %3 = bitcast %class.WebDatabaseTable* %2 to %"class.payments::WebAppManifestSectionTable"*
  ret %"class.payments::WebAppManifestSectionTable"* %3
}

declare %class.WebDatabaseTable* @_ZN11WebDatabase8GetTableEPv(%class.WebDatabase*, i8*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZNK8payments26WebAppManifestSectionTable10GetTypeKeyEv(%"class.payments::WebAppManifestSectionTable"* nocapture readnone) unnamed_addr #4 align 2 {
  ret i8* bitcast (i32* @_ZZN8payments12_GLOBAL__N_120GetWebAppManifestKeyEvE9table_key to i8*)
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8payments26WebAppManifestSectionTable23CreateTablesIfNecessaryEv(%"class.payments::WebAppManifestSectionTable"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.payments::WebAppManifestSectionTable", %"class.payments::WebAppManifestSectionTable"* %0, i64 0, i32 0, i32 1
  %3 = load %"class.sql::Database"*, %"class.sql::Database"** %2, align 8
  %4 = tail call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %3, i8* getelementptr inbounds ([166 x i8], [166 x i8]* @.str, i64 0, i64 0)) #9
  ret i1 %4
}

declare zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"*, i8*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN8payments26WebAppManifestSectionTable10IsSyncableEv(%"class.payments::WebAppManifestSectionTable"* nocapture readnone) unnamed_addr #4 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN8payments26WebAppManifestSectionTable16MigrateToVersionEiPb(%"class.payments::WebAppManifestSectionTable"* nocapture readnone, i32, i8* nocapture readnone) unnamed_addr #4 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8payments26WebAppManifestSectionTable17RemoveExpiredDataEv(%"class.payments::WebAppManifestSectionTable"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::Time", align 8
  %3 = alloca %"class.sql::Statement", align 8
  %4 = bitcast %"class.base::Time"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #9
  %5 = tail call i64 @_ZN4base4Time17NowFromSystemTimeEv() #9
  %6 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %2, i64 0, i32 0, i32 0
  store i64 %5, i64* %6, align 8
  %7 = call i64 @_ZNK4base4Time7ToTimeTEv(%"class.base::Time"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #9
  %8 = bitcast %"class.sql::Statement"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #9
  %9 = getelementptr inbounds %"class.payments::WebAppManifestSectionTable", %"class.payments::WebAppManifestSectionTable"* %0, i64 0, i32 0, i32 1
  %10 = bitcast %"class.sql::Statement"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false)
  %11 = load %"class.sql::Database"*, %"class.sql::Database"** %9, align 8
  %12 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetUniqueStatementEPKc(%"class.sql::Database"* %11, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.1, i64 0, i64 0)) #9
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %3, %"class.sql::Database::StatementRef"* %12) #9
  %13 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %3, i32 0, i64 %7) #9
  %14 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %3) #9
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

declare i64 @_ZN4base4Time17NowFromSystemTimeEv() local_unnamed_addr #1

declare i64 @_ZNK4base4Time7ToTimeTEv(%"class.base::Time"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

declare %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetUniqueStatementEPKc(%"class.sql::Database"*, i8*) local_unnamed_addr #1

declare void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"*, %"class.sql::Database::StatementRef"*) unnamed_addr #1

declare zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"*, i32, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8payments26WebAppManifestSectionTable17AddWebAppManifestERKNSt3__16vectorINS_21WebAppManifestSectionENS1_9allocatorIS3_EEEE(%"class.payments::WebAppManifestSectionTable"* nocapture readonly, %"class.std::__1::vector.28"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.sql::Transaction", align 8
  %4 = alloca %"class.sql::Statement", align 8
  %5 = alloca %"class.sql::Statement", align 8
  %6 = alloca %"class.base::Time", align 8
  %7 = bitcast %"class.sql::Transaction"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.payments::WebAppManifestSectionTable", %"class.payments::WebAppManifestSectionTable"* %0, i64 0, i32 0, i32 1
  %9 = bitcast %"class.sql::Transaction"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load %"class.sql::Database"*, %"class.sql::Database"** %8, align 8
  call void @_ZN3sql11TransactionC1EPNS_8DatabaseE(%"class.sql::Transaction"* nonnull %3, %"class.sql::Database"* %10) #9
  %11 = call zeroext i1 @_ZN3sql11Transaction5BeginEv(%"class.sql::Transaction"* nonnull %3) #9
  br i1 %11, label %12, label %107

12:                                               ; preds = %2
  %13 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #9
  %14 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false)
  %15 = load %"class.sql::Database"*, %"class.sql::Database"** %8, align 8
  %16 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetUniqueStatementEPKc(%"class.sql::Database"* %15, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2, i64 0, i64 0)) #9
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %4, %"class.sql::Database::StatementRef"* %16) #9
  %17 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %1, i64 0, i32 0, i32 0
  %18 = load %"struct.payments::WebAppManifestSection"*, %"struct.payments::WebAppManifestSection"** %17, align 8
  %19 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %1, i64 0, i32 0, i32 1
  %20 = load %"struct.payments::WebAppManifestSection"*, %"struct.payments::WebAppManifestSection"** %19, align 8
  %21 = icmp eq %"struct.payments::WebAppManifestSection"* %18, %20
  br i1 %21, label %30, label %22

22:                                               ; preds = %12, %27
  %23 = phi %"struct.payments::WebAppManifestSection"* [ %28, %27 ], [ %18, %12 ]
  %24 = getelementptr inbounds %"struct.payments::WebAppManifestSection", %"struct.payments::WebAppManifestSection"* %23, i64 0, i32 0
  %25 = call zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"* nonnull %4, i32 0, %"class.std::__1::basic_string"* dereferenceable(24) %24) #9
  %26 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %4) #9
  br i1 %26, label %27, label %105

27:                                               ; preds = %22
  call void @_ZN3sql9Statement5ResetEb(%"class.sql::Statement"* nonnull %4, i1 zeroext true) #9
  %28 = getelementptr inbounds %"struct.payments::WebAppManifestSection", %"struct.payments::WebAppManifestSection"* %23, i64 1
  %29 = icmp eq %"struct.payments::WebAppManifestSection"* %28, %20
  br i1 %29, label %30, label %22

30:                                               ; preds = %27, %12
  %31 = bitcast %"class.sql::Statement"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #9
  %32 = bitcast %"class.sql::Statement"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 16, i1 false)
  %33 = load %"class.sql::Database"*, %"class.sql::Database"** %8, align 8
  %34 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetUniqueStatementEPKc(%"class.sql::Database"* %33, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @.str.3, i64 0, i64 0)) #9
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %5, %"class.sql::Database::StatementRef"* %34) #9
  %35 = bitcast %"class.base::Time"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #9
  %36 = call i64 @_ZN4base4Time17NowFromSystemTimeEv() #9
  %37 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %6, i64 0, i32 0, i32 0
  store i64 %36, i64* %37, align 8
  %38 = call i64 @_ZNK4base4Time7ToTimeTEv(%"class.base::Time"* nonnull %6) #9
  %39 = add nsw i64 %38, 7776000
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #9
  %40 = load %"struct.payments::WebAppManifestSection"*, %"struct.payments::WebAppManifestSection"** %17, align 8
  %41 = load %"struct.payments::WebAppManifestSection"*, %"struct.payments::WebAppManifestSection"** %19, align 8
  %42 = icmp eq %"struct.payments::WebAppManifestSection"* %40, %41
  br i1 %42, label %101, label %45

43:                                               ; preds = %98
  %44 = icmp eq %"struct.payments::WebAppManifestSection"* %100, %41
  br i1 %44, label %101, label %45

45:                                               ; preds = %30, %43
  %46 = phi %"struct.payments::WebAppManifestSection"* [ %100, %43 ], [ %40, %30 ]
  %47 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %5, i32 0, i64 %39) #9
  %48 = getelementptr inbounds %"struct.payments::WebAppManifestSection", %"struct.payments::WebAppManifestSection"* %46, i64 0, i32 0
  %49 = call zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"* nonnull %5, i32 1, %"class.std::__1::basic_string"* dereferenceable(24) %48) #9
  %50 = getelementptr inbounds %"struct.payments::WebAppManifestSection", %"struct.payments::WebAppManifestSection"* %46, i64 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %5, i32 2, i64 %51) #9
  %53 = call i8* @_Znwm(i64 24) #10
  %54 = bitcast i8* %53 to %"class.std::__1::vector.32"*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 0, i64 24, i1 false) #9
  %55 = getelementptr inbounds %"struct.payments::WebAppManifestSection", %"struct.payments::WebAppManifestSection"* %46, i64 0, i32 2, i32 0, i32 0
  %56 = load %"class.std::__1::vector.32"*, %"class.std::__1::vector.32"** %55, align 8
  %57 = getelementptr inbounds %"struct.payments::WebAppManifestSection", %"struct.payments::WebAppManifestSection"* %46, i64 0, i32 2, i32 0, i32 1
  %58 = load %"class.std::__1::vector.32"*, %"class.std::__1::vector.32"** %57, align 8
  %59 = icmp eq %"class.std::__1::vector.32"* %56, %58
  br i1 %59, label %80, label %60

60:                                               ; preds = %45
  %61 = getelementptr inbounds i8, i8* %53, i64 8
  %62 = bitcast i8* %61 to i8**
  %63 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %56, i64 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %56, i64 0, i32 0, i32 1
  %66 = load i8*, i8** %65, align 8
  %67 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertINS_11__wrap_iterIPKhEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsISA_E9referenceEEE5valueENS5_IPhEEE4typeES8_SA_SA_(%"class.std::__1::vector.32"* nonnull %54, i8* null, i8* %64, i8* %66) #9
  %68 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %56, i64 1
  %69 = icmp eq %"class.std::__1::vector.32"* %68, %58
  br i1 %69, label %80, label %70

70:                                               ; preds = %60, %70
  %71 = phi %"class.std::__1::vector.32"* [ %78, %70 ], [ %68, %60 ]
  %72 = load i8*, i8** %62, align 8
  %73 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %71, i64 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %71, i64 0, i32 0, i32 1
  %76 = load i8*, i8** %75, align 8
  %77 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertINS_11__wrap_iterIPKhEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsISA_E9referenceEEE5valueENS5_IPhEEE4typeES8_SA_SA_(%"class.std::__1::vector.32"* nonnull %54, i8* %72, i8* %74, i8* %76) #9
  %78 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %71, i64 1
  %79 = icmp eq %"class.std::__1::vector.32"* %78, %58
  br i1 %79, label %80, label %70

80:                                               ; preds = %70, %60, %45
  %81 = bitcast i8* %53 to i8**
  %82 = load i8*, i8** %81, align 8
  %83 = getelementptr inbounds i8, i8* %53, i64 8
  %84 = bitcast i8* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = ptrtoint i8* %82 to i64
  %87 = sub i64 %85, %86
  %88 = trunc i64 %87 to i32
  %89 = call zeroext i1 @_ZN3sql9Statement8BindBlobEiPKvi(%"class.sql::Statement"* nonnull %5, i32 3, i8* %82, i32 %88) #9
  %90 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %5) #9
  br i1 %90, label %91, label %92

91:                                               ; preds = %80
  call void @_ZN3sql9Statement5ResetEb(%"class.sql::Statement"* nonnull %5, i1 zeroext true) #9
  br label %92

92:                                               ; preds = %91, %80
  %93 = phi i32 [ 0, %91 ], [ 1, %80 ]
  %94 = load i8*, i8** %81, align 8
  %95 = icmp eq i8* %94, null
  br i1 %95, label %98, label %96

96:                                               ; preds = %92
  %97 = ptrtoint i8* %94 to i64
  store i64 %97, i64* %84, align 8
  call void @_ZdlPv(i8* nonnull %94) #10
  br label %98

98:                                               ; preds = %92, %96
  call void @_ZdlPv(i8* nonnull %53) #10
  %99 = icmp eq i32 %93, 0
  %100 = getelementptr inbounds %"struct.payments::WebAppManifestSection", %"struct.payments::WebAppManifestSection"* %46, i64 1
  br i1 %99, label %43, label %103

101:                                              ; preds = %43, %30
  %102 = call zeroext i1 @_ZN3sql11Transaction6CommitEv(%"class.sql::Transaction"* nonnull %3) #9
  br label %103

103:                                              ; preds = %98, %101
  %104 = phi i1 [ %102, %101 ], [ false, %98 ]
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #9
  br label %105

105:                                              ; preds = %22, %103
  %106 = phi i1 [ %104, %103 ], [ false, %22 ]
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #9
  br label %107

107:                                              ; preds = %2, %105
  %108 = phi i1 [ %106, %105 ], [ false, %2 ]
  call void @_ZN3sql11TransactionD1Ev(%"class.sql::Transaction"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #9
  ret i1 %108
}

declare void @_ZN3sql11TransactionC1EPNS_8DatabaseE(%"class.sql::Transaction"*, %"class.sql::Database"*) unnamed_addr #1

declare zeroext i1 @_ZN3sql11Transaction5BeginEv(%"class.sql::Transaction"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"*, i32, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN3sql9Statement5ResetEb(%"class.sql::Statement"*, i1 zeroext) local_unnamed_addr #1

declare zeroext i1 @_ZN3sql9Statement8BindBlobEiPKvi(%"class.sql::Statement"*, i32, i8*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN3sql11Transaction6CommitEv(%"class.sql::Transaction"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3sql11TransactionD1Ev(%"class.sql::Transaction"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8payments26WebAppManifestSectionTable17GetWebAppManifestERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::vector.28"* noalias sret, %"class.payments::WebAppManifestSectionTable"* nocapture readonly, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::__wrap_iter.56", align 8
  %5 = alloca %"class.std::__1::__wrap_iter.56", align 8
  %6 = alloca %"class.sql::Statement", align 8
  %7 = alloca %"struct.payments::WebAppManifestSection", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::vector.32", align 8
  %10 = bitcast %"class.sql::Statement"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #9
  %11 = getelementptr inbounds %"class.payments::WebAppManifestSectionTable", %"class.payments::WebAppManifestSectionTable"* %1, i64 0, i32 0, i32 1
  %12 = bitcast %"class.sql::Statement"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load %"class.sql::Database"*, %"class.sql::Database"** %11, align 8
  %14 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetUniqueStatementEPKc(%"class.sql::Database"* %13, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.4, i64 0, i64 0)) #9
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %6, %"class.sql::Database::StatementRef"* %14) #9
  %15 = call zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"* nonnull %6, i32 0, %"class.std::__1::basic_string"* dereferenceable(24) %2) #9
  %16 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %0, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %0, i64 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %19 = bitcast %"class.std::__1::vector.28"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #9
  %20 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %6) #9
  br i1 %20, label %21, label %217

21:                                               ; preds = %3
  %22 = bitcast %"struct.payments::WebAppManifestSection"* %7 to i8*
  %23 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %24 = bitcast %"struct.payments::WebAppManifestSection"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = getelementptr inbounds %"struct.payments::WebAppManifestSection", %"struct.payments::WebAppManifestSection"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.payments::WebAppManifestSection", %"struct.payments::WebAppManifestSection"* %7, i64 0, i32 1
  %28 = bitcast %"class.std::__1::vector.32"* %9 to i8*
  %29 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %9, i64 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %9, i64 0, i32 0, i32 1
  %31 = getelementptr inbounds %"struct.payments::WebAppManifestSection", %"struct.payments::WebAppManifestSection"* %7, i64 0, i32 2
  %32 = bitcast i8** %30 to i64*
  %33 = bitcast %"class.std::__1::vector.32"* %9 to i64*
  %34 = bitcast %"class.std::__1::__wrap_iter.56"* %4 to i8*
  %35 = getelementptr inbounds %"class.std::__1::__wrap_iter.56", %"class.std::__1::__wrap_iter.56"* %4, i64 0, i32 0
  %36 = bitcast %"class.std::__1::__wrap_iter.56"* %5 to i8*
  %37 = getelementptr inbounds %"class.std::__1::__wrap_iter.56", %"class.std::__1::__wrap_iter.56"* %5, i64 0, i32 0
  %38 = getelementptr inbounds %"struct.payments::WebAppManifestSection", %"struct.payments::WebAppManifestSection"* %7, i64 0, i32 2, i32 0, i32 1
  %39 = getelementptr inbounds %"struct.payments::WebAppManifestSection", %"struct.payments::WebAppManifestSection"* %7, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %40 = bitcast %"class.std::__1::vector.32"** %38 to i64*
  %41 = bitcast %"struct.payments::WebAppManifestSection"** %17 to i64*
  br label %42

42:                                               ; preds = %21, %208
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %22) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 56, i1 false)
  call void @_ZN8payments21WebAppManifestSectionC1Ev(%"struct.payments::WebAppManifestSection"* nonnull %7) #9
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #9
  call void @_ZNK3sql9Statement12ColumnStringEi(%"class.std::__1::basic_string"* nonnull sret %8, %"class.sql::Statement"* nonnull %6, i32 0) #9
  %43 = load i8, i8* %25, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %47

45:                                               ; preds = %42
  %46 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %46) #10
  br label %47

47:                                               ; preds = %45, %42
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %23, i64 24, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #9
  %48 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* nonnull %6, i32 1) #9
  store i64 %48, i64* %27, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 0, i64 24, i1 false) #9
  %49 = call zeroext i1 @_ZNK3sql9Statement18ColumnBlobAsVectorEiPNSt3__16vectorIhNS1_9allocatorIhEEEE(%"class.sql::Statement"* nonnull %6, i32 2, %"class.std::__1::vector.32"* nonnull %9) #9
  br i1 %49, label %58, label %50

50:                                               ; preds = %47
  %51 = load %"struct.payments::WebAppManifestSection"*, %"struct.payments::WebAppManifestSection"** %16, align 8
  %52 = load %"struct.payments::WebAppManifestSection"*, %"struct.payments::WebAppManifestSection"** %17, align 8
  %53 = icmp eq %"struct.payments::WebAppManifestSection"* %52, %51
  br i1 %53, label %210, label %54

54:                                               ; preds = %50, %54
  %55 = phi %"struct.payments::WebAppManifestSection"* [ %56, %54 ], [ %52, %50 ]
  %56 = getelementptr inbounds %"struct.payments::WebAppManifestSection", %"struct.payments::WebAppManifestSection"* %55, i64 -1
  call void @_ZN8payments21WebAppManifestSectionD1Ev(%"struct.payments::WebAppManifestSection"* %56) #9
  %57 = icmp eq %"struct.payments::WebAppManifestSection"* %56, %51
  br i1 %57, label %210, label %54

58:                                               ; preds = %47
  %59 = load i64, i64* %32, align 8
  %60 = load i64, i64* %33, align 8
  %61 = sub i64 %59, %60
  %62 = and i64 %61, 31
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %64, label %187

64:                                               ; preds = %58
  %65 = icmp eq i64 %59, %60
  br i1 %65, label %195, label %66

66:                                               ; preds = %64, %181
  %67 = phi i64 [ %184, %181 ], [ %60, %64 ]
  %68 = phi i64 [ %182, %181 ], [ 0, %64 ]
  %69 = inttoptr i64 %67 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #9
  %70 = getelementptr inbounds i8, i8* %69, i64 %68
  store i8* %70, i8** %35, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #9
  %71 = getelementptr inbounds i8, i8* %70, i64 32
  store i8* %71, i8** %37, align 8
  %72 = load %"class.std::__1::vector.32"*, %"class.std::__1::vector.32"** %38, align 8
  %73 = load %"class.std::__1::vector.32"*, %"class.std::__1::vector.32"** %39, align 8
  %74 = icmp ult %"class.std::__1::vector.32"* %72, %73
  br i1 %74, label %75, label %180

75:                                               ; preds = %66
  %76 = bitcast %"class.std::__1::vector.32"* %72 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 24, i1 false) #9
  %77 = call i8* @_Znwm(i64 32) #10
  %78 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %72, i64 0, i32 0, i32 1
  store i8* %77, i8** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %72, i64 0, i32 0, i32 0
  store i8* %77, i8** %79, align 8
  %80 = getelementptr inbounds i8, i8* %77, i64 32
  %81 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %72, i64 0, i32 0, i32 2, i32 0, i32 0
  store i8* %80, i8** %81, align 8
  %82 = load i8, i8* %70, align 1
  store i8 %82, i8* %77, align 1
  %83 = getelementptr inbounds i8, i8* %77, i64 1
  %84 = getelementptr inbounds i8, i8* %70, i64 1
  %85 = load i8, i8* %84, align 1
  store i8 %85, i8* %83, align 1
  %86 = getelementptr inbounds i8, i8* %77, i64 2
  %87 = getelementptr inbounds i8, i8* %70, i64 2
  %88 = load i8, i8* %87, align 1
  store i8 %88, i8* %86, align 1
  %89 = getelementptr inbounds i8, i8* %77, i64 3
  %90 = getelementptr inbounds i8, i8* %70, i64 3
  %91 = load i8, i8* %90, align 1
  store i8 %91, i8* %89, align 1
  %92 = getelementptr inbounds i8, i8* %77, i64 4
  %93 = getelementptr inbounds i8, i8* %70, i64 4
  %94 = load i8, i8* %93, align 1
  store i8 %94, i8* %92, align 1
  %95 = getelementptr inbounds i8, i8* %77, i64 5
  %96 = getelementptr inbounds i8, i8* %70, i64 5
  %97 = load i8, i8* %96, align 1
  store i8 %97, i8* %95, align 1
  %98 = getelementptr inbounds i8, i8* %77, i64 6
  %99 = getelementptr inbounds i8, i8* %70, i64 6
  %100 = load i8, i8* %99, align 1
  store i8 %100, i8* %98, align 1
  %101 = getelementptr inbounds i8, i8* %77, i64 7
  %102 = getelementptr inbounds i8, i8* %70, i64 7
  %103 = load i8, i8* %102, align 1
  store i8 %103, i8* %101, align 1
  %104 = getelementptr inbounds i8, i8* %77, i64 8
  %105 = getelementptr inbounds i8, i8* %70, i64 8
  %106 = load i8, i8* %105, align 1
  store i8 %106, i8* %104, align 1
  %107 = getelementptr inbounds i8, i8* %77, i64 9
  %108 = getelementptr inbounds i8, i8* %70, i64 9
  %109 = load i8, i8* %108, align 1
  store i8 %109, i8* %107, align 1
  %110 = getelementptr inbounds i8, i8* %77, i64 10
  %111 = getelementptr inbounds i8, i8* %70, i64 10
  %112 = load i8, i8* %111, align 1
  store i8 %112, i8* %110, align 1
  %113 = getelementptr inbounds i8, i8* %77, i64 11
  %114 = getelementptr inbounds i8, i8* %70, i64 11
  %115 = load i8, i8* %114, align 1
  store i8 %115, i8* %113, align 1
  %116 = getelementptr inbounds i8, i8* %77, i64 12
  %117 = getelementptr inbounds i8, i8* %70, i64 12
  %118 = load i8, i8* %117, align 1
  store i8 %118, i8* %116, align 1
  %119 = getelementptr inbounds i8, i8* %77, i64 13
  %120 = getelementptr inbounds i8, i8* %70, i64 13
  %121 = load i8, i8* %120, align 1
  store i8 %121, i8* %119, align 1
  %122 = getelementptr inbounds i8, i8* %77, i64 14
  %123 = getelementptr inbounds i8, i8* %70, i64 14
  %124 = load i8, i8* %123, align 1
  store i8 %124, i8* %122, align 1
  %125 = getelementptr inbounds i8, i8* %77, i64 15
  %126 = getelementptr inbounds i8, i8* %70, i64 15
  %127 = load i8, i8* %126, align 1
  store i8 %127, i8* %125, align 1
  %128 = getelementptr inbounds i8, i8* %77, i64 16
  %129 = getelementptr inbounds i8, i8* %70, i64 16
  %130 = load i8, i8* %129, align 1
  store i8 %130, i8* %128, align 1
  %131 = getelementptr inbounds i8, i8* %77, i64 17
  %132 = getelementptr inbounds i8, i8* %70, i64 17
  %133 = load i8, i8* %132, align 1
  store i8 %133, i8* %131, align 1
  %134 = getelementptr inbounds i8, i8* %77, i64 18
  %135 = getelementptr inbounds i8, i8* %70, i64 18
  %136 = load i8, i8* %135, align 1
  store i8 %136, i8* %134, align 1
  %137 = getelementptr inbounds i8, i8* %77, i64 19
  %138 = getelementptr inbounds i8, i8* %70, i64 19
  %139 = load i8, i8* %138, align 1
  store i8 %139, i8* %137, align 1
  %140 = getelementptr inbounds i8, i8* %77, i64 20
  %141 = getelementptr inbounds i8, i8* %70, i64 20
  %142 = load i8, i8* %141, align 1
  store i8 %142, i8* %140, align 1
  %143 = getelementptr inbounds i8, i8* %77, i64 21
  %144 = getelementptr inbounds i8, i8* %70, i64 21
  %145 = load i8, i8* %144, align 1
  store i8 %145, i8* %143, align 1
  %146 = getelementptr inbounds i8, i8* %77, i64 22
  %147 = getelementptr inbounds i8, i8* %70, i64 22
  %148 = load i8, i8* %147, align 1
  store i8 %148, i8* %146, align 1
  %149 = getelementptr inbounds i8, i8* %77, i64 23
  %150 = getelementptr inbounds i8, i8* %70, i64 23
  %151 = load i8, i8* %150, align 1
  store i8 %151, i8* %149, align 1
  %152 = getelementptr inbounds i8, i8* %77, i64 24
  %153 = getelementptr inbounds i8, i8* %70, i64 24
  %154 = load i8, i8* %153, align 1
  store i8 %154, i8* %152, align 1
  %155 = getelementptr inbounds i8, i8* %77, i64 25
  %156 = getelementptr inbounds i8, i8* %70, i64 25
  %157 = load i8, i8* %156, align 1
  store i8 %157, i8* %155, align 1
  %158 = getelementptr inbounds i8, i8* %77, i64 26
  %159 = getelementptr inbounds i8, i8* %70, i64 26
  %160 = load i8, i8* %159, align 1
  store i8 %160, i8* %158, align 1
  %161 = getelementptr inbounds i8, i8* %77, i64 27
  %162 = getelementptr inbounds i8, i8* %70, i64 27
  %163 = load i8, i8* %162, align 1
  store i8 %163, i8* %161, align 1
  %164 = getelementptr inbounds i8, i8* %77, i64 28
  %165 = getelementptr inbounds i8, i8* %70, i64 28
  %166 = load i8, i8* %165, align 1
  store i8 %166, i8* %164, align 1
  %167 = getelementptr inbounds i8, i8* %77, i64 29
  %168 = getelementptr inbounds i8, i8* %70, i64 29
  %169 = load i8, i8* %168, align 1
  store i8 %169, i8* %167, align 1
  %170 = getelementptr inbounds i8, i8* %77, i64 30
  %171 = getelementptr inbounds i8, i8* %70, i64 30
  %172 = load i8, i8* %171, align 1
  store i8 %172, i8* %170, align 1
  %173 = getelementptr inbounds i8, i8* %77, i64 31
  %174 = getelementptr inbounds i8, i8* %70, i64 31
  %175 = load i8, i8* %174, align 1
  store i8 %175, i8* %173, align 1
  %176 = bitcast i8** %78 to i64*
  %177 = ptrtoint i8* %80 to i64
  store i64 %177, i64* %176, align 8
  %178 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %72, i64 1
  %179 = ptrtoint %"class.std::__1::vector.32"* %178 to i64
  store i64 %179, i64* %40, align 8
  br label %181

180:                                              ; preds = %66
  call void @_ZNSt3__16vectorINS0_IhNS_9allocatorIhEEEENS1_IS3_EEE24__emplace_back_slow_pathIJNS_11__wrap_iterIPKhEESA_EEEvDpOT_(%"class.std::__1::vector.30"* %31, %"class.std::__1::__wrap_iter.56"* nonnull dereferenceable(8) %4, %"class.std::__1::__wrap_iter.56"* nonnull dereferenceable(8) %5) #9
  br label %181

181:                                              ; preds = %180, %75
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #9
  %182 = add i64 %68, 32
  %183 = load i64, i64* %32, align 8
  %184 = load i64, i64* %33, align 8
  %185 = sub i64 %183, %184
  %186 = icmp ult i64 %182, %185
  br i1 %186, label %66, label %195

187:                                              ; preds = %58
  %188 = load %"struct.payments::WebAppManifestSection"*, %"struct.payments::WebAppManifestSection"** %16, align 8
  %189 = load %"struct.payments::WebAppManifestSection"*, %"struct.payments::WebAppManifestSection"** %17, align 8
  %190 = icmp eq %"struct.payments::WebAppManifestSection"* %189, %188
  br i1 %190, label %210, label %191

191:                                              ; preds = %187, %191
  %192 = phi %"struct.payments::WebAppManifestSection"* [ %193, %191 ], [ %189, %187 ]
  %193 = getelementptr inbounds %"struct.payments::WebAppManifestSection", %"struct.payments::WebAppManifestSection"* %192, i64 -1
  call void @_ZN8payments21WebAppManifestSectionD1Ev(%"struct.payments::WebAppManifestSection"* %193) #9
  %194 = icmp eq %"struct.payments::WebAppManifestSection"* %193, %188
  br i1 %194, label %210, label %191

195:                                              ; preds = %181, %64
  %196 = load %"struct.payments::WebAppManifestSection"*, %"struct.payments::WebAppManifestSection"** %17, align 8
  %197 = load %"struct.payments::WebAppManifestSection"*, %"struct.payments::WebAppManifestSection"** %18, align 8
  %198 = icmp ult %"struct.payments::WebAppManifestSection"* %196, %197
  br i1 %198, label %199, label %202

199:                                              ; preds = %195
  call void @_ZN8payments21WebAppManifestSectionC1ERKS0_(%"struct.payments::WebAppManifestSection"* %196, %"struct.payments::WebAppManifestSection"* nonnull dereferenceable(56) %7) #9
  %200 = getelementptr inbounds %"struct.payments::WebAppManifestSection", %"struct.payments::WebAppManifestSection"* %196, i64 1
  %201 = ptrtoint %"struct.payments::WebAppManifestSection"* %200 to i64
  store i64 %201, i64* %41, align 8
  br label %203

202:                                              ; preds = %195
  call void @_ZNSt3__16vectorIN8payments21WebAppManifestSectionENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJS2_EEEvDpOT_(%"class.std::__1::vector.28"* %0, %"struct.payments::WebAppManifestSection"* nonnull dereferenceable(56) %7) #9
  br label %203

203:                                              ; preds = %199, %202
  %204 = load i8*, i8** %29, align 8
  %205 = icmp eq i8* %204, null
  br i1 %205, label %208, label %206

206:                                              ; preds = %203
  %207 = ptrtoint i8* %204 to i64
  store i64 %207, i64* %32, align 8
  call void @_ZdlPv(i8* nonnull %204) #10
  br label %208

208:                                              ; preds = %203, %206
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #9
  call void @_ZN8payments21WebAppManifestSectionD1Ev(%"struct.payments::WebAppManifestSection"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %22) #9
  %209 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %6) #9
  br i1 %209, label %42, label %217

210:                                              ; preds = %54, %191, %187, %50
  %211 = phi %"struct.payments::WebAppManifestSection"* [ %51, %50 ], [ %188, %187 ], [ %188, %191 ], [ %51, %54 ]
  store %"struct.payments::WebAppManifestSection"* %211, %"struct.payments::WebAppManifestSection"** %17, align 8
  %212 = load i8*, i8** %29, align 8
  %213 = icmp eq i8* %212, null
  br i1 %213, label %216, label %214

214:                                              ; preds = %210
  %215 = ptrtoint i8* %212 to i64
  store i64 %215, i64* %32, align 8
  call void @_ZdlPv(i8* nonnull %212) #10
  br label %216

216:                                              ; preds = %210, %214
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #9
  call void @_ZN8payments21WebAppManifestSectionD1Ev(%"struct.payments::WebAppManifestSection"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %22) #9
  br label %217

217:                                              ; preds = %208, %3, %216
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #9
  ret void
}

declare zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

declare void @_ZN8payments21WebAppManifestSectionC1Ev(%"struct.payments::WebAppManifestSection"*) unnamed_addr #1

declare void @_ZNK3sql9Statement12ColumnStringEi(%"class.std::__1::basic_string"* sret, %"class.sql::Statement"*, i32) local_unnamed_addr #1

declare i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK3sql9Statement18ColumnBlobAsVectorEiPNSt3__16vectorIhNS1_9allocatorIhEEEE(%"class.sql::Statement"*, i32, %"class.std::__1::vector.32"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN8payments21WebAppManifestSectionD1Ev(%"struct.payments::WebAppManifestSection"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertINS_11__wrap_iterIPKhEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsISA_E9referenceEEE5valueENS5_IPhEEE4typeES8_SA_SA_(%"class.std::__1::vector.32"*, i8*, i8*, i8*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i8* %1 to i64
  %6 = ptrtoint i8* %2 to i64
  %7 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %0, i64 0, i32 0, i32 0
  %8 = ptrtoint i8* %3 to i64
  %9 = sub i64 %8, %6
  %10 = icmp sgt i64 %9, 0
  br i1 %10, label %11, label %518

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %0, i64 0, i32 0, i32 1
  %16 = load i8*, i8** %15, align 8
  %17 = ptrtoint i8* %16 to i64
  %18 = sub i64 %14, %17
  %19 = icmp sgt i64 %9, %18
  %20 = bitcast i8** %15 to i64*
  br i1 %19, label %268, label %21

21:                                               ; preds = %11
  %22 = sub i64 %17, %5
  %23 = icmp sgt i64 %9, %22
  br i1 %23, label %24, label %141

24:                                               ; preds = %21
  %25 = getelementptr inbounds i8, i8* %2, i64 %22
  %26 = icmp eq i8* %25, %3
  br i1 %26, label %136, label %27

27:                                               ; preds = %24
  %28 = sub i64 %5, %6
  %29 = sub i64 %28, %17
  %30 = getelementptr i8, i8* %3, i64 %29
  %31 = ptrtoint i8* %30 to i64
  %32 = icmp ult i8* %30, inttoptr (i64 32 to i8*)
  br i1 %32, label %123, label %33

33:                                               ; preds = %27
  %34 = sub i64 %5, %6
  %35 = sub i64 %34, %17
  %36 = getelementptr i8, i8* %3, i64 %35
  %37 = ptrtoint i8* %36 to i64
  %38 = getelementptr i8, i8* %16, i64 %37
  %39 = icmp ult i8* %16, %3
  %40 = icmp ult i8* %25, %38
  %41 = and i1 %39, %40
  br i1 %41, label %123, label %42

42:                                               ; preds = %33
  %43 = and i64 %31, -32
  %44 = getelementptr i8, i8* %16, i64 %43
  %45 = getelementptr i8, i8* %25, i64 %43
  %46 = add i64 %43, -32
  %47 = lshr exact i64 %46, 5
  %48 = add nuw nsw i64 %47, 1
  %49 = and i64 %48, 3
  %50 = icmp ult i64 %46, 96
  br i1 %50, label %102, label %51

51:                                               ; preds = %42
  %52 = sub nsw i64 %48, %49
  br label %53

53:                                               ; preds = %53, %51
  %54 = phi i64 [ 0, %51 ], [ %99, %53 ]
  %55 = phi i64 [ %52, %51 ], [ %100, %53 ]
  %56 = getelementptr i8, i8* %16, i64 %54
  %57 = getelementptr i8, i8* %25, i64 %54
  %58 = bitcast i8* %57 to <16 x i8>*
  %59 = load <16 x i8>, <16 x i8>* %58, align 1, !alias.scope !2
  %60 = getelementptr i8, i8* %57, i64 16
  %61 = bitcast i8* %60 to <16 x i8>*
  %62 = load <16 x i8>, <16 x i8>* %61, align 1, !alias.scope !2
  %63 = bitcast i8* %56 to <16 x i8>*
  store <16 x i8> %59, <16 x i8>* %63, align 1, !alias.scope !5, !noalias !2
  %64 = getelementptr i8, i8* %56, i64 16
  %65 = bitcast i8* %64 to <16 x i8>*
  store <16 x i8> %62, <16 x i8>* %65, align 1, !alias.scope !5, !noalias !2
  %66 = or i64 %54, 32
  %67 = getelementptr i8, i8* %16, i64 %66
  %68 = getelementptr i8, i8* %25, i64 %66
  %69 = bitcast i8* %68 to <16 x i8>*
  %70 = load <16 x i8>, <16 x i8>* %69, align 1, !alias.scope !2
  %71 = getelementptr i8, i8* %68, i64 16
  %72 = bitcast i8* %71 to <16 x i8>*
  %73 = load <16 x i8>, <16 x i8>* %72, align 1, !alias.scope !2
  %74 = bitcast i8* %67 to <16 x i8>*
  store <16 x i8> %70, <16 x i8>* %74, align 1, !alias.scope !5, !noalias !2
  %75 = getelementptr i8, i8* %67, i64 16
  %76 = bitcast i8* %75 to <16 x i8>*
  store <16 x i8> %73, <16 x i8>* %76, align 1, !alias.scope !5, !noalias !2
  %77 = or i64 %54, 64
  %78 = getelementptr i8, i8* %16, i64 %77
  %79 = getelementptr i8, i8* %25, i64 %77
  %80 = bitcast i8* %79 to <16 x i8>*
  %81 = load <16 x i8>, <16 x i8>* %80, align 1, !alias.scope !2
  %82 = getelementptr i8, i8* %79, i64 16
  %83 = bitcast i8* %82 to <16 x i8>*
  %84 = load <16 x i8>, <16 x i8>* %83, align 1, !alias.scope !2
  %85 = bitcast i8* %78 to <16 x i8>*
  store <16 x i8> %81, <16 x i8>* %85, align 1, !alias.scope !5, !noalias !2
  %86 = getelementptr i8, i8* %78, i64 16
  %87 = bitcast i8* %86 to <16 x i8>*
  store <16 x i8> %84, <16 x i8>* %87, align 1, !alias.scope !5, !noalias !2
  %88 = or i64 %54, 96
  %89 = getelementptr i8, i8* %16, i64 %88
  %90 = getelementptr i8, i8* %25, i64 %88
  %91 = bitcast i8* %90 to <16 x i8>*
  %92 = load <16 x i8>, <16 x i8>* %91, align 1, !alias.scope !2
  %93 = getelementptr i8, i8* %90, i64 16
  %94 = bitcast i8* %93 to <16 x i8>*
  %95 = load <16 x i8>, <16 x i8>* %94, align 1, !alias.scope !2
  %96 = bitcast i8* %89 to <16 x i8>*
  store <16 x i8> %92, <16 x i8>* %96, align 1, !alias.scope !5, !noalias !2
  %97 = getelementptr i8, i8* %89, i64 16
  %98 = bitcast i8* %97 to <16 x i8>*
  store <16 x i8> %95, <16 x i8>* %98, align 1, !alias.scope !5, !noalias !2
  %99 = add i64 %54, 128
  %100 = add i64 %55, -4
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %102, label %53, !llvm.loop !7

102:                                              ; preds = %53, %42
  %103 = phi i64 [ 0, %42 ], [ %99, %53 ]
  %104 = icmp eq i64 %49, 0
  br i1 %104, label %121, label %105

105:                                              ; preds = %102, %105
  %106 = phi i64 [ %118, %105 ], [ %103, %102 ]
  %107 = phi i64 [ %119, %105 ], [ %49, %102 ]
  %108 = getelementptr i8, i8* %16, i64 %106
  %109 = getelementptr i8, i8* %25, i64 %106
  %110 = bitcast i8* %109 to <16 x i8>*
  %111 = load <16 x i8>, <16 x i8>* %110, align 1, !alias.scope !2
  %112 = getelementptr i8, i8* %109, i64 16
  %113 = bitcast i8* %112 to <16 x i8>*
  %114 = load <16 x i8>, <16 x i8>* %113, align 1, !alias.scope !2
  %115 = bitcast i8* %108 to <16 x i8>*
  store <16 x i8> %111, <16 x i8>* %115, align 1, !alias.scope !5, !noalias !2
  %116 = getelementptr i8, i8* %108, i64 16
  %117 = bitcast i8* %116 to <16 x i8>*
  store <16 x i8> %114, <16 x i8>* %117, align 1, !alias.scope !5, !noalias !2
  %118 = add i64 %106, 32
  %119 = add i64 %107, -1
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %105, !llvm.loop !9

121:                                              ; preds = %105, %102
  %122 = icmp eq i64 %43, %31
  br i1 %122, label %133, label %123

123:                                              ; preds = %121, %33, %27
  %124 = phi i8* [ %16, %33 ], [ %16, %27 ], [ %44, %121 ]
  %125 = phi i8* [ %25, %33 ], [ %25, %27 ], [ %45, %121 ]
  br label %126

126:                                              ; preds = %123, %126
  %127 = phi i8* [ %131, %126 ], [ %124, %123 ]
  %128 = phi i8* [ %130, %126 ], [ %125, %123 ]
  %129 = load i8, i8* %128, align 1
  store i8 %129, i8* %127, align 1
  %130 = getelementptr inbounds i8, i8* %128, i64 1
  %131 = getelementptr inbounds i8, i8* %127, i64 1
  %132 = icmp eq i8* %130, %3
  br i1 %132, label %133, label %126, !llvm.loop !11

133:                                              ; preds = %126, %121
  %134 = phi i8* [ %44, %121 ], [ %131, %126 ]
  %135 = ptrtoint i8* %134 to i64
  br label %136

136:                                              ; preds = %133, %24
  %137 = phi i64 [ %17, %24 ], [ %135, %133 ]
  store i64 %137, i64* %20, align 8
  %138 = icmp sgt i64 %22, 0
  br i1 %138, label %139, label %518

139:                                              ; preds = %136
  %140 = inttoptr i64 %137 to i8*
  br label %141

141:                                              ; preds = %139, %21
  %142 = phi i64 [ %137, %139 ], [ %17, %21 ]
  %143 = phi i8* [ %140, %139 ], [ %16, %21 ]
  %144 = phi i8* [ %25, %139 ], [ %3, %21 ]
  %145 = getelementptr inbounds i8, i8* %1, i64 %9
  %146 = ptrtoint i8* %145 to i64
  %147 = sub i64 %142, %146
  %148 = getelementptr inbounds i8, i8* %1, i64 %147
  %149 = icmp ult i8* %148, %16
  br i1 %149, label %150, label %250

150:                                              ; preds = %141
  %151 = sub i64 %9, %142
  %152 = getelementptr i8, i8* %16, i64 %151
  %153 = ptrtoint i8* %152 to i64
  %154 = icmp ult i8* %152, inttoptr (i64 32 to i8*)
  br i1 %154, label %155, label %158

155:                                              ; preds = %245, %158, %150
  %156 = phi i8* [ %148, %158 ], [ %148, %150 ], [ %168, %245 ]
  %157 = phi i8* [ %143, %158 ], [ %143, %150 ], [ %169, %245 ]
  br label %256

158:                                              ; preds = %150
  %159 = sub i64 %9, %142
  %160 = getelementptr i8, i8* %16, i64 %159
  %161 = ptrtoint i8* %160 to i64
  %162 = getelementptr i8, i8* %143, i64 %161
  %163 = icmp ult i8* %143, %16
  %164 = icmp ult i8* %148, %162
  %165 = and i1 %163, %164
  br i1 %165, label %155, label %166

166:                                              ; preds = %158
  %167 = and i64 %153, -32
  %168 = getelementptr i8, i8* %148, i64 %167
  %169 = getelementptr i8, i8* %143, i64 %167
  %170 = add i64 %167, -32
  %171 = lshr exact i64 %170, 5
  %172 = add nuw nsw i64 %171, 1
  %173 = and i64 %172, 3
  %174 = icmp ult i64 %170, 96
  br i1 %174, label %226, label %175

175:                                              ; preds = %166
  %176 = sub nsw i64 %172, %173
  br label %177

177:                                              ; preds = %177, %175
  %178 = phi i64 [ 0, %175 ], [ %223, %177 ]
  %179 = phi i64 [ %176, %175 ], [ %224, %177 ]
  %180 = getelementptr i8, i8* %148, i64 %178
  %181 = getelementptr i8, i8* %143, i64 %178
  %182 = bitcast i8* %180 to <16 x i8>*
  %183 = load <16 x i8>, <16 x i8>* %182, align 1, !alias.scope !12
  %184 = getelementptr i8, i8* %180, i64 16
  %185 = bitcast i8* %184 to <16 x i8>*
  %186 = load <16 x i8>, <16 x i8>* %185, align 1, !alias.scope !12
  %187 = bitcast i8* %181 to <16 x i8>*
  store <16 x i8> %183, <16 x i8>* %187, align 1, !alias.scope !15, !noalias !12
  %188 = getelementptr i8, i8* %181, i64 16
  %189 = bitcast i8* %188 to <16 x i8>*
  store <16 x i8> %186, <16 x i8>* %189, align 1, !alias.scope !15, !noalias !12
  %190 = or i64 %178, 32
  %191 = getelementptr i8, i8* %148, i64 %190
  %192 = getelementptr i8, i8* %143, i64 %190
  %193 = bitcast i8* %191 to <16 x i8>*
  %194 = load <16 x i8>, <16 x i8>* %193, align 1, !alias.scope !12
  %195 = getelementptr i8, i8* %191, i64 16
  %196 = bitcast i8* %195 to <16 x i8>*
  %197 = load <16 x i8>, <16 x i8>* %196, align 1, !alias.scope !12
  %198 = bitcast i8* %192 to <16 x i8>*
  store <16 x i8> %194, <16 x i8>* %198, align 1, !alias.scope !15, !noalias !12
  %199 = getelementptr i8, i8* %192, i64 16
  %200 = bitcast i8* %199 to <16 x i8>*
  store <16 x i8> %197, <16 x i8>* %200, align 1, !alias.scope !15, !noalias !12
  %201 = or i64 %178, 64
  %202 = getelementptr i8, i8* %148, i64 %201
  %203 = getelementptr i8, i8* %143, i64 %201
  %204 = bitcast i8* %202 to <16 x i8>*
  %205 = load <16 x i8>, <16 x i8>* %204, align 1, !alias.scope !12
  %206 = getelementptr i8, i8* %202, i64 16
  %207 = bitcast i8* %206 to <16 x i8>*
  %208 = load <16 x i8>, <16 x i8>* %207, align 1, !alias.scope !12
  %209 = bitcast i8* %203 to <16 x i8>*
  store <16 x i8> %205, <16 x i8>* %209, align 1, !alias.scope !15, !noalias !12
  %210 = getelementptr i8, i8* %203, i64 16
  %211 = bitcast i8* %210 to <16 x i8>*
  store <16 x i8> %208, <16 x i8>* %211, align 1, !alias.scope !15, !noalias !12
  %212 = or i64 %178, 96
  %213 = getelementptr i8, i8* %148, i64 %212
  %214 = getelementptr i8, i8* %143, i64 %212
  %215 = bitcast i8* %213 to <16 x i8>*
  %216 = load <16 x i8>, <16 x i8>* %215, align 1, !alias.scope !12
  %217 = getelementptr i8, i8* %213, i64 16
  %218 = bitcast i8* %217 to <16 x i8>*
  %219 = load <16 x i8>, <16 x i8>* %218, align 1, !alias.scope !12
  %220 = bitcast i8* %214 to <16 x i8>*
  store <16 x i8> %216, <16 x i8>* %220, align 1, !alias.scope !15, !noalias !12
  %221 = getelementptr i8, i8* %214, i64 16
  %222 = bitcast i8* %221 to <16 x i8>*
  store <16 x i8> %219, <16 x i8>* %222, align 1, !alias.scope !15, !noalias !12
  %223 = add i64 %178, 128
  %224 = add i64 %179, -4
  %225 = icmp eq i64 %224, 0
  br i1 %225, label %226, label %177, !llvm.loop !17

226:                                              ; preds = %177, %166
  %227 = phi i64 [ 0, %166 ], [ %223, %177 ]
  %228 = icmp eq i64 %173, 0
  br i1 %228, label %245, label %229

229:                                              ; preds = %226, %229
  %230 = phi i64 [ %242, %229 ], [ %227, %226 ]
  %231 = phi i64 [ %243, %229 ], [ %173, %226 ]
  %232 = getelementptr i8, i8* %148, i64 %230
  %233 = getelementptr i8, i8* %143, i64 %230
  %234 = bitcast i8* %232 to <16 x i8>*
  %235 = load <16 x i8>, <16 x i8>* %234, align 1, !alias.scope !12
  %236 = getelementptr i8, i8* %232, i64 16
  %237 = bitcast i8* %236 to <16 x i8>*
  %238 = load <16 x i8>, <16 x i8>* %237, align 1, !alias.scope !12
  %239 = bitcast i8* %233 to <16 x i8>*
  store <16 x i8> %235, <16 x i8>* %239, align 1, !alias.scope !15, !noalias !12
  %240 = getelementptr i8, i8* %233, i64 16
  %241 = bitcast i8* %240 to <16 x i8>*
  store <16 x i8> %238, <16 x i8>* %241, align 1, !alias.scope !15, !noalias !12
  %242 = add i64 %230, 32
  %243 = add i64 %231, -1
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %245, label %229, !llvm.loop !18

245:                                              ; preds = %229, %226
  %246 = icmp eq i64 %167, %153
  br i1 %246, label %247, label %155

247:                                              ; preds = %256, %245
  %248 = phi i8* [ %169, %245 ], [ %261, %256 ]
  %249 = ptrtoint i8* %248 to i64
  br label %250

250:                                              ; preds = %247, %141
  %251 = phi i64 [ %249, %247 ], [ %142, %141 ]
  store i64 %251, i64* %20, align 8
  %252 = icmp eq i64 %147, 0
  br i1 %252, label %263, label %253

253:                                              ; preds = %250
  %254 = sub i64 0, %147
  %255 = getelementptr inbounds i8, i8* %143, i64 %254
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %255, i8* align 1 %1, i64 %147, i1 false) #9
  br label %263

256:                                              ; preds = %155, %256
  %257 = phi i8* [ %260, %256 ], [ %156, %155 ]
  %258 = phi i8* [ %261, %256 ], [ %157, %155 ]
  %259 = load i8, i8* %257, align 1
  store i8 %259, i8* %258, align 1
  %260 = getelementptr inbounds i8, i8* %257, i64 1
  %261 = getelementptr inbounds i8, i8* %258, i64 1
  %262 = icmp eq i8* %260, %16
  br i1 %262, label %247, label %256, !llvm.loop !19

263:                                              ; preds = %250, %253
  %264 = ptrtoint i8* %144 to i64
  %265 = sub i64 %264, %6
  %266 = icmp eq i64 %265, 0
  br i1 %266, label %518, label %267

267:                                              ; preds = %263
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 %265, i1 false) #9
  br label %518

268:                                              ; preds = %11
  %269 = bitcast %"class.std::__1::vector.32"* %0 to i64*
  %270 = load i64, i64* %269, align 8
  %271 = sub i64 %17, %270
  %272 = add i64 %271, %9
  %273 = icmp slt i64 %272, 0
  br i1 %273, label %274, label %276

274:                                              ; preds = %268
  %275 = bitcast %"class.std::__1::vector.32"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %275) #11
  unreachable

276:                                              ; preds = %268
  %277 = sub i64 %14, %270
  %278 = icmp ult i64 %277, 4611686018427387903
  br i1 %278, label %281, label %279

279:                                              ; preds = %276
  %280 = sub i64 %5, %270
  br label %287

281:                                              ; preds = %276
  %282 = shl i64 %277, 1
  %283 = icmp ult i64 %282, %272
  %284 = select i1 %283, i64 %272, i64 %282
  %285 = sub i64 %5, %270
  %286 = icmp eq i64 %284, 0
  br i1 %286, label %291, label %287

287:                                              ; preds = %279, %281
  %288 = phi i64 [ %280, %279 ], [ %285, %281 ]
  %289 = phi i64 [ 9223372036854775807, %279 ], [ %284, %281 ]
  %290 = tail call i8* @_Znwm(i64 %289) #10
  br label %291

291:                                              ; preds = %281, %287
  %292 = phi i64 [ %288, %287 ], [ %285, %281 ]
  %293 = phi i64 [ %289, %287 ], [ 0, %281 ]
  %294 = phi i8* [ %290, %287 ], [ null, %281 ]
  %295 = getelementptr inbounds i8, i8* %294, i64 %292
  %296 = getelementptr inbounds i8, i8* %294, i64 %293
  %297 = getelementptr inbounds i8, i8* %295, i64 %9
  %298 = icmp ult i64 %9, 32
  br i1 %298, label %384, label %299

299:                                              ; preds = %291
  %300 = icmp ult i8* %295, %3
  %301 = icmp ugt i8* %297, %2
  %302 = and i1 %300, %301
  br i1 %302, label %384, label %303

303:                                              ; preds = %299
  %304 = and i64 %9, -32
  %305 = getelementptr i8, i8* %295, i64 %304
  %306 = getelementptr i8, i8* %2, i64 %304
  %307 = add i64 %304, -32
  %308 = lshr exact i64 %307, 5
  %309 = add nuw nsw i64 %308, 1
  %310 = and i64 %309, 3
  %311 = icmp ult i64 %307, 96
  br i1 %311, label %363, label %312

312:                                              ; preds = %303
  %313 = sub nsw i64 %309, %310
  br label %314

314:                                              ; preds = %314, %312
  %315 = phi i64 [ 0, %312 ], [ %360, %314 ]
  %316 = phi i64 [ %313, %312 ], [ %361, %314 ]
  %317 = getelementptr i8, i8* %295, i64 %315
  %318 = getelementptr i8, i8* %2, i64 %315
  %319 = bitcast i8* %318 to <16 x i8>*
  %320 = load <16 x i8>, <16 x i8>* %319, align 1, !alias.scope !20
  %321 = getelementptr i8, i8* %318, i64 16
  %322 = bitcast i8* %321 to <16 x i8>*
  %323 = load <16 x i8>, <16 x i8>* %322, align 1, !alias.scope !20
  %324 = bitcast i8* %317 to <16 x i8>*
  store <16 x i8> %320, <16 x i8>* %324, align 1, !alias.scope !23, !noalias !20
  %325 = getelementptr i8, i8* %317, i64 16
  %326 = bitcast i8* %325 to <16 x i8>*
  store <16 x i8> %323, <16 x i8>* %326, align 1, !alias.scope !23, !noalias !20
  %327 = or i64 %315, 32
  %328 = getelementptr i8, i8* %295, i64 %327
  %329 = getelementptr i8, i8* %2, i64 %327
  %330 = bitcast i8* %329 to <16 x i8>*
  %331 = load <16 x i8>, <16 x i8>* %330, align 1, !alias.scope !20
  %332 = getelementptr i8, i8* %329, i64 16
  %333 = bitcast i8* %332 to <16 x i8>*
  %334 = load <16 x i8>, <16 x i8>* %333, align 1, !alias.scope !20
  %335 = bitcast i8* %328 to <16 x i8>*
  store <16 x i8> %331, <16 x i8>* %335, align 1, !alias.scope !23, !noalias !20
  %336 = getelementptr i8, i8* %328, i64 16
  %337 = bitcast i8* %336 to <16 x i8>*
  store <16 x i8> %334, <16 x i8>* %337, align 1, !alias.scope !23, !noalias !20
  %338 = or i64 %315, 64
  %339 = getelementptr i8, i8* %295, i64 %338
  %340 = getelementptr i8, i8* %2, i64 %338
  %341 = bitcast i8* %340 to <16 x i8>*
  %342 = load <16 x i8>, <16 x i8>* %341, align 1, !alias.scope !20
  %343 = getelementptr i8, i8* %340, i64 16
  %344 = bitcast i8* %343 to <16 x i8>*
  %345 = load <16 x i8>, <16 x i8>* %344, align 1, !alias.scope !20
  %346 = bitcast i8* %339 to <16 x i8>*
  store <16 x i8> %342, <16 x i8>* %346, align 1, !alias.scope !23, !noalias !20
  %347 = getelementptr i8, i8* %339, i64 16
  %348 = bitcast i8* %347 to <16 x i8>*
  store <16 x i8> %345, <16 x i8>* %348, align 1, !alias.scope !23, !noalias !20
  %349 = or i64 %315, 96
  %350 = getelementptr i8, i8* %295, i64 %349
  %351 = getelementptr i8, i8* %2, i64 %349
  %352 = bitcast i8* %351 to <16 x i8>*
  %353 = load <16 x i8>, <16 x i8>* %352, align 1, !alias.scope !20
  %354 = getelementptr i8, i8* %351, i64 16
  %355 = bitcast i8* %354 to <16 x i8>*
  %356 = load <16 x i8>, <16 x i8>* %355, align 1, !alias.scope !20
  %357 = bitcast i8* %350 to <16 x i8>*
  store <16 x i8> %353, <16 x i8>* %357, align 1, !alias.scope !23, !noalias !20
  %358 = getelementptr i8, i8* %350, i64 16
  %359 = bitcast i8* %358 to <16 x i8>*
  store <16 x i8> %356, <16 x i8>* %359, align 1, !alias.scope !23, !noalias !20
  %360 = add i64 %315, 128
  %361 = add i64 %316, -4
  %362 = icmp eq i64 %361, 0
  br i1 %362, label %363, label %314, !llvm.loop !25

363:                                              ; preds = %314, %303
  %364 = phi i64 [ 0, %303 ], [ %360, %314 ]
  %365 = icmp eq i64 %310, 0
  br i1 %365, label %382, label %366

366:                                              ; preds = %363, %366
  %367 = phi i64 [ %379, %366 ], [ %364, %363 ]
  %368 = phi i64 [ %380, %366 ], [ %310, %363 ]
  %369 = getelementptr i8, i8* %295, i64 %367
  %370 = getelementptr i8, i8* %2, i64 %367
  %371 = bitcast i8* %370 to <16 x i8>*
  %372 = load <16 x i8>, <16 x i8>* %371, align 1, !alias.scope !20
  %373 = getelementptr i8, i8* %370, i64 16
  %374 = bitcast i8* %373 to <16 x i8>*
  %375 = load <16 x i8>, <16 x i8>* %374, align 1, !alias.scope !20
  %376 = bitcast i8* %369 to <16 x i8>*
  store <16 x i8> %372, <16 x i8>* %376, align 1, !alias.scope !23, !noalias !20
  %377 = getelementptr i8, i8* %369, i64 16
  %378 = bitcast i8* %377 to <16 x i8>*
  store <16 x i8> %375, <16 x i8>* %378, align 1, !alias.scope !23, !noalias !20
  %379 = add i64 %367, 32
  %380 = add i64 %368, -1
  %381 = icmp eq i64 %380, 0
  br i1 %381, label %382, label %366, !llvm.loop !26

382:                                              ; preds = %366, %363
  %383 = icmp eq i64 %9, %304
  br i1 %383, label %394, label %384

384:                                              ; preds = %382, %299, %291
  %385 = phi i8* [ %295, %299 ], [ %295, %291 ], [ %305, %382 ]
  %386 = phi i8* [ %2, %299 ], [ %2, %291 ], [ %306, %382 ]
  br label %387

387:                                              ; preds = %384, %387
  %388 = phi i8* [ %391, %387 ], [ %385, %384 ]
  %389 = phi i8* [ %392, %387 ], [ %386, %384 ]
  %390 = load i8, i8* %389, align 1
  store i8 %390, i8* %388, align 1
  %391 = getelementptr inbounds i8, i8* %388, i64 1
  %392 = getelementptr inbounds i8, i8* %389, i64 1
  %393 = icmp eq i8* %297, %391
  br i1 %393, label %394, label %387, !llvm.loop !27

394:                                              ; preds = %387, %382
  %395 = ptrtoint i8* %296 to i64
  %396 = load i8*, i8** %7, align 8
  %397 = ptrtoint i8* %396 to i64
  %398 = sub i64 %5, %397
  %399 = sub i64 0, %398
  %400 = getelementptr inbounds i8, i8* %295, i64 %399
  %401 = ptrtoint i8* %400 to i64
  %402 = icmp sgt i64 %398, 0
  br i1 %402, label %403, label %404

403:                                              ; preds = %394
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %400, i8* align 1 %396, i64 %398, i1 false) #9
  br label %404

404:                                              ; preds = %403, %394
  %405 = load i8*, i8** %15, align 8
  %406 = icmp eq i8* %405, %1
  br i1 %406, label %512, label %407

407:                                              ; preds = %404
  %408 = ptrtoint i8* %405 to i64
  %409 = sub i64 %408, %5
  %410 = icmp ult i64 %409, 32
  br i1 %410, label %502, label %411

411:                                              ; preds = %407
  %412 = add i64 %292, %8
  %413 = sub i64 %412, %5
  %414 = sub i64 %413, %6
  %415 = getelementptr i8, i8* %405, i64 %414
  %416 = ptrtoint i8* %415 to i64
  %417 = getelementptr i8, i8* %294, i64 %416
  %418 = icmp ult i8* %297, %405
  %419 = icmp ugt i8* %417, %1
  %420 = and i1 %418, %419
  br i1 %420, label %502, label %421

421:                                              ; preds = %411
  %422 = and i64 %409, -32
  %423 = getelementptr i8, i8* %297, i64 %422
  %424 = getelementptr i8, i8* %1, i64 %422
  %425 = add i64 %422, -32
  %426 = lshr exact i64 %425, 5
  %427 = add nuw nsw i64 %426, 1
  %428 = and i64 %427, 3
  %429 = icmp ult i64 %425, 96
  br i1 %429, label %481, label %430

430:                                              ; preds = %421
  %431 = sub nsw i64 %427, %428
  br label %432

432:                                              ; preds = %432, %430
  %433 = phi i64 [ 0, %430 ], [ %478, %432 ]
  %434 = phi i64 [ %431, %430 ], [ %479, %432 ]
  %435 = getelementptr i8, i8* %297, i64 %433
  %436 = getelementptr i8, i8* %1, i64 %433
  %437 = bitcast i8* %436 to <16 x i8>*
  %438 = load <16 x i8>, <16 x i8>* %437, align 1, !alias.scope !28
  %439 = getelementptr i8, i8* %436, i64 16
  %440 = bitcast i8* %439 to <16 x i8>*
  %441 = load <16 x i8>, <16 x i8>* %440, align 1, !alias.scope !28
  %442 = bitcast i8* %435 to <16 x i8>*
  store <16 x i8> %438, <16 x i8>* %442, align 1, !alias.scope !31, !noalias !28
  %443 = getelementptr i8, i8* %435, i64 16
  %444 = bitcast i8* %443 to <16 x i8>*
  store <16 x i8> %441, <16 x i8>* %444, align 1, !alias.scope !31, !noalias !28
  %445 = or i64 %433, 32
  %446 = getelementptr i8, i8* %297, i64 %445
  %447 = getelementptr i8, i8* %1, i64 %445
  %448 = bitcast i8* %447 to <16 x i8>*
  %449 = load <16 x i8>, <16 x i8>* %448, align 1, !alias.scope !28
  %450 = getelementptr i8, i8* %447, i64 16
  %451 = bitcast i8* %450 to <16 x i8>*
  %452 = load <16 x i8>, <16 x i8>* %451, align 1, !alias.scope !28
  %453 = bitcast i8* %446 to <16 x i8>*
  store <16 x i8> %449, <16 x i8>* %453, align 1, !alias.scope !31, !noalias !28
  %454 = getelementptr i8, i8* %446, i64 16
  %455 = bitcast i8* %454 to <16 x i8>*
  store <16 x i8> %452, <16 x i8>* %455, align 1, !alias.scope !31, !noalias !28
  %456 = or i64 %433, 64
  %457 = getelementptr i8, i8* %297, i64 %456
  %458 = getelementptr i8, i8* %1, i64 %456
  %459 = bitcast i8* %458 to <16 x i8>*
  %460 = load <16 x i8>, <16 x i8>* %459, align 1, !alias.scope !28
  %461 = getelementptr i8, i8* %458, i64 16
  %462 = bitcast i8* %461 to <16 x i8>*
  %463 = load <16 x i8>, <16 x i8>* %462, align 1, !alias.scope !28
  %464 = bitcast i8* %457 to <16 x i8>*
  store <16 x i8> %460, <16 x i8>* %464, align 1, !alias.scope !31, !noalias !28
  %465 = getelementptr i8, i8* %457, i64 16
  %466 = bitcast i8* %465 to <16 x i8>*
  store <16 x i8> %463, <16 x i8>* %466, align 1, !alias.scope !31, !noalias !28
  %467 = or i64 %433, 96
  %468 = getelementptr i8, i8* %297, i64 %467
  %469 = getelementptr i8, i8* %1, i64 %467
  %470 = bitcast i8* %469 to <16 x i8>*
  %471 = load <16 x i8>, <16 x i8>* %470, align 1, !alias.scope !28
  %472 = getelementptr i8, i8* %469, i64 16
  %473 = bitcast i8* %472 to <16 x i8>*
  %474 = load <16 x i8>, <16 x i8>* %473, align 1, !alias.scope !28
  %475 = bitcast i8* %468 to <16 x i8>*
  store <16 x i8> %471, <16 x i8>* %475, align 1, !alias.scope !31, !noalias !28
  %476 = getelementptr i8, i8* %468, i64 16
  %477 = bitcast i8* %476 to <16 x i8>*
  store <16 x i8> %474, <16 x i8>* %477, align 1, !alias.scope !31, !noalias !28
  %478 = add i64 %433, 128
  %479 = add i64 %434, -4
  %480 = icmp eq i64 %479, 0
  br i1 %480, label %481, label %432, !llvm.loop !33

481:                                              ; preds = %432, %421
  %482 = phi i64 [ 0, %421 ], [ %478, %432 ]
  %483 = icmp eq i64 %428, 0
  br i1 %483, label %500, label %484

484:                                              ; preds = %481, %484
  %485 = phi i64 [ %497, %484 ], [ %482, %481 ]
  %486 = phi i64 [ %498, %484 ], [ %428, %481 ]
  %487 = getelementptr i8, i8* %297, i64 %485
  %488 = getelementptr i8, i8* %1, i64 %485
  %489 = bitcast i8* %488 to <16 x i8>*
  %490 = load <16 x i8>, <16 x i8>* %489, align 1, !alias.scope !28
  %491 = getelementptr i8, i8* %488, i64 16
  %492 = bitcast i8* %491 to <16 x i8>*
  %493 = load <16 x i8>, <16 x i8>* %492, align 1, !alias.scope !28
  %494 = bitcast i8* %487 to <16 x i8>*
  store <16 x i8> %490, <16 x i8>* %494, align 1, !alias.scope !31, !noalias !28
  %495 = getelementptr i8, i8* %487, i64 16
  %496 = bitcast i8* %495 to <16 x i8>*
  store <16 x i8> %493, <16 x i8>* %496, align 1, !alias.scope !31, !noalias !28
  %497 = add i64 %485, 32
  %498 = add i64 %486, -1
  %499 = icmp eq i64 %498, 0
  br i1 %499, label %500, label %484, !llvm.loop !34

500:                                              ; preds = %484, %481
  %501 = icmp eq i64 %409, %422
  br i1 %501, label %512, label %502

502:                                              ; preds = %500, %411, %407
  %503 = phi i8* [ %297, %411 ], [ %297, %407 ], [ %423, %500 ]
  %504 = phi i8* [ %1, %411 ], [ %1, %407 ], [ %424, %500 ]
  br label %505

505:                                              ; preds = %502, %505
  %506 = phi i8* [ %510, %505 ], [ %503, %502 ]
  %507 = phi i8* [ %509, %505 ], [ %504, %502 ]
  %508 = load i8, i8* %507, align 1
  store i8 %508, i8* %506, align 1
  %509 = getelementptr inbounds i8, i8* %507, i64 1
  %510 = getelementptr inbounds i8, i8* %506, i64 1
  %511 = icmp eq i8* %509, %405
  br i1 %511, label %512, label %505, !llvm.loop !35

512:                                              ; preds = %505, %500, %404
  %513 = phi i8* [ %297, %404 ], [ %423, %500 ], [ %510, %505 ]
  %514 = ptrtoint i8* %513 to i64
  %515 = load i8*, i8** %7, align 8
  store i64 %401, i64* %269, align 8
  store i64 %514, i64* %20, align 8
  store i64 %395, i64* %13, align 8
  %516 = icmp eq i8* %515, null
  br i1 %516, label %518, label %517

517:                                              ; preds = %512
  tail call void @_ZdlPv(i8* nonnull %515) #10
  br label %518

518:                                              ; preds = %517, %512, %136, %263, %267, %4
  %519 = phi i8* [ %1, %4 ], [ %1, %267 ], [ %1, %263 ], [ %1, %136 ], [ %295, %512 ], [ %295, %517 ]
  ret i8* %519
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS0_IhNS_9allocatorIhEEEENS1_IS3_EEE24__emplace_back_slow_pathIJNS_11__wrap_iterIPKhEESA_EEEvDpOT_(%"class.std::__1::vector.30"*, %"class.std::__1::__wrap_iter.56"* dereferenceable(8), %"class.std::__1::__wrap_iter.56"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"class.std::__1::vector.32"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.30"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 24
  %11 = add nsw i64 %10, 1
  %12 = icmp ugt i64 %11, 768614336404564650
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = bitcast %"class.std::__1::vector.30"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %14) #11
  unreachable

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"class.std::__1::vector.32"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %8
  %20 = sdiv exact i64 %19, 24
  %21 = icmp ult i64 %20, 384307168202282325
  br i1 %21, label %22, label %27

22:                                               ; preds = %15
  %23 = shl nsw i64 %20, 1
  %24 = icmp ult i64 %23, %11
  %25 = select i1 %24, i64 %11, i64 %23
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %15, %22
  %28 = phi i64 [ %25, %22 ], [ 768614336404564650, %15 ]
  %29 = mul i64 %28, 24
  %30 = tail call i8* @_Znwm(i64 %29) #10
  %31 = bitcast i8* %30 to %"class.std::__1::vector.32"*
  br label %32

32:                                               ; preds = %22, %27
  %33 = phi i64 [ %28, %27 ], [ 0, %22 ]
  %34 = phi %"class.std::__1::vector.32"* [ %31, %27 ], [ null, %22 ]
  %35 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %34, i64 %10
  %36 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %34, i64 %33
  %37 = ptrtoint %"class.std::__1::vector.32"* %36 to i64
  %38 = getelementptr inbounds %"class.std::__1::__wrap_iter.56", %"class.std::__1::__wrap_iter.56"* %1, i64 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = ptrtoint i8* %39 to i64
  %41 = getelementptr inbounds %"class.std::__1::__wrap_iter.56", %"class.std::__1::__wrap_iter.56"* %2, i64 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = bitcast %"class.std::__1::vector.32"* %35 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 24, i1 false) #9
  %44 = ptrtoint i8* %42 to i64
  %45 = sub i64 %44, %40
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %164, label %47

47:                                               ; preds = %32
  %48 = icmp slt i64 %45, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %47
  %50 = bitcast %"class.std::__1::vector.32"* %35 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %50) #11
  unreachable

51:                                               ; preds = %47
  %52 = tail call i8* @_Znwm(i64 %45) #10
  %53 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %34, i64 %10, i32 0, i32 1
  store i8* %52, i8** %53, align 8
  %54 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %35, i64 0, i32 0, i32 0
  store i8* %52, i8** %54, align 8
  %55 = getelementptr inbounds i8, i8* %52, i64 %45
  %56 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %34, i64 %10, i32 0, i32 2, i32 0, i32 0
  store i8* %55, i8** %56, align 8
  %57 = bitcast i8** %53 to i64*
  %58 = icmp eq i8* %39, %42
  br i1 %58, label %161, label %59

59:                                               ; preds = %51
  %60 = ptrtoint i8* %42 to i64
  %61 = sub i64 %60, %40
  %62 = icmp ult i64 %61, 32
  br i1 %62, label %151, label %63

63:                                               ; preds = %59
  %64 = ptrtoint i8* %42 to i64
  %65 = sub i64 %64, %40
  %66 = getelementptr i8, i8* %52, i64 %65
  %67 = icmp ult i8* %52, %42
  %68 = icmp ult i8* %39, %66
  %69 = and i1 %67, %68
  br i1 %69, label %151, label %70

70:                                               ; preds = %63
  %71 = and i64 %61, -32
  %72 = getelementptr i8, i8* %52, i64 %71
  %73 = getelementptr i8, i8* %39, i64 %71
  %74 = add i64 %71, -32
  %75 = lshr exact i64 %74, 5
  %76 = add nuw nsw i64 %75, 1
  %77 = and i64 %76, 3
  %78 = icmp ult i64 %74, 96
  br i1 %78, label %130, label %79

79:                                               ; preds = %70
  %80 = sub nsw i64 %76, %77
  br label %81

81:                                               ; preds = %81, %79
  %82 = phi i64 [ 0, %79 ], [ %127, %81 ]
  %83 = phi i64 [ %80, %79 ], [ %128, %81 ]
  %84 = getelementptr i8, i8* %52, i64 %82
  %85 = getelementptr i8, i8* %39, i64 %82
  %86 = bitcast i8* %85 to <16 x i8>*
  %87 = load <16 x i8>, <16 x i8>* %86, align 1, !alias.scope !36
  %88 = getelementptr i8, i8* %85, i64 16
  %89 = bitcast i8* %88 to <16 x i8>*
  %90 = load <16 x i8>, <16 x i8>* %89, align 1, !alias.scope !36
  %91 = bitcast i8* %84 to <16 x i8>*
  store <16 x i8> %87, <16 x i8>* %91, align 1, !alias.scope !39, !noalias !36
  %92 = getelementptr i8, i8* %84, i64 16
  %93 = bitcast i8* %92 to <16 x i8>*
  store <16 x i8> %90, <16 x i8>* %93, align 1, !alias.scope !39, !noalias !36
  %94 = or i64 %82, 32
  %95 = getelementptr i8, i8* %52, i64 %94
  %96 = getelementptr i8, i8* %39, i64 %94
  %97 = bitcast i8* %96 to <16 x i8>*
  %98 = load <16 x i8>, <16 x i8>* %97, align 1, !alias.scope !36
  %99 = getelementptr i8, i8* %96, i64 16
  %100 = bitcast i8* %99 to <16 x i8>*
  %101 = load <16 x i8>, <16 x i8>* %100, align 1, !alias.scope !36
  %102 = bitcast i8* %95 to <16 x i8>*
  store <16 x i8> %98, <16 x i8>* %102, align 1, !alias.scope !39, !noalias !36
  %103 = getelementptr i8, i8* %95, i64 16
  %104 = bitcast i8* %103 to <16 x i8>*
  store <16 x i8> %101, <16 x i8>* %104, align 1, !alias.scope !39, !noalias !36
  %105 = or i64 %82, 64
  %106 = getelementptr i8, i8* %52, i64 %105
  %107 = getelementptr i8, i8* %39, i64 %105
  %108 = bitcast i8* %107 to <16 x i8>*
  %109 = load <16 x i8>, <16 x i8>* %108, align 1, !alias.scope !36
  %110 = getelementptr i8, i8* %107, i64 16
  %111 = bitcast i8* %110 to <16 x i8>*
  %112 = load <16 x i8>, <16 x i8>* %111, align 1, !alias.scope !36
  %113 = bitcast i8* %106 to <16 x i8>*
  store <16 x i8> %109, <16 x i8>* %113, align 1, !alias.scope !39, !noalias !36
  %114 = getelementptr i8, i8* %106, i64 16
  %115 = bitcast i8* %114 to <16 x i8>*
  store <16 x i8> %112, <16 x i8>* %115, align 1, !alias.scope !39, !noalias !36
  %116 = or i64 %82, 96
  %117 = getelementptr i8, i8* %52, i64 %116
  %118 = getelementptr i8, i8* %39, i64 %116
  %119 = bitcast i8* %118 to <16 x i8>*
  %120 = load <16 x i8>, <16 x i8>* %119, align 1, !alias.scope !36
  %121 = getelementptr i8, i8* %118, i64 16
  %122 = bitcast i8* %121 to <16 x i8>*
  %123 = load <16 x i8>, <16 x i8>* %122, align 1, !alias.scope !36
  %124 = bitcast i8* %117 to <16 x i8>*
  store <16 x i8> %120, <16 x i8>* %124, align 1, !alias.scope !39, !noalias !36
  %125 = getelementptr i8, i8* %117, i64 16
  %126 = bitcast i8* %125 to <16 x i8>*
  store <16 x i8> %123, <16 x i8>* %126, align 1, !alias.scope !39, !noalias !36
  %127 = add i64 %82, 128
  %128 = add i64 %83, -4
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %81, !llvm.loop !41

130:                                              ; preds = %81, %70
  %131 = phi i64 [ 0, %70 ], [ %127, %81 ]
  %132 = icmp eq i64 %77, 0
  br i1 %132, label %149, label %133

133:                                              ; preds = %130, %133
  %134 = phi i64 [ %146, %133 ], [ %131, %130 ]
  %135 = phi i64 [ %147, %133 ], [ %77, %130 ]
  %136 = getelementptr i8, i8* %52, i64 %134
  %137 = getelementptr i8, i8* %39, i64 %134
  %138 = bitcast i8* %137 to <16 x i8>*
  %139 = load <16 x i8>, <16 x i8>* %138, align 1, !alias.scope !36
  %140 = getelementptr i8, i8* %137, i64 16
  %141 = bitcast i8* %140 to <16 x i8>*
  %142 = load <16 x i8>, <16 x i8>* %141, align 1, !alias.scope !36
  %143 = bitcast i8* %136 to <16 x i8>*
  store <16 x i8> %139, <16 x i8>* %143, align 1, !alias.scope !39, !noalias !36
  %144 = getelementptr i8, i8* %136, i64 16
  %145 = bitcast i8* %144 to <16 x i8>*
  store <16 x i8> %142, <16 x i8>* %145, align 1, !alias.scope !39, !noalias !36
  %146 = add i64 %134, 32
  %147 = add i64 %135, -1
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %149, label %133, !llvm.loop !42

149:                                              ; preds = %133, %130
  %150 = icmp eq i64 %61, %71
  br i1 %150, label %161, label %151

151:                                              ; preds = %149, %63, %59
  %152 = phi i8* [ %52, %63 ], [ %52, %59 ], [ %72, %149 ]
  %153 = phi i8* [ %39, %63 ], [ %39, %59 ], [ %73, %149 ]
  br label %154

154:                                              ; preds = %151, %154
  %155 = phi i8* [ %159, %154 ], [ %152, %151 ]
  %156 = phi i8* [ %158, %154 ], [ %153, %151 ]
  %157 = load i8, i8* %156, align 1
  store i8 %157, i8* %155, align 1
  %158 = getelementptr inbounds i8, i8* %156, i64 1
  %159 = getelementptr inbounds i8, i8* %155, i64 1
  %160 = icmp eq i8* %158, %42
  br i1 %160, label %161, label %154, !llvm.loop !43

161:                                              ; preds = %154, %149, %51
  %162 = phi i8* [ %52, %51 ], [ %72, %149 ], [ %159, %154 ]
  %163 = ptrtoint i8* %162 to i64
  store i64 %163, i64* %57, align 8
  br label %164

164:                                              ; preds = %32, %161
  %165 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %35, i64 1
  %166 = ptrtoint %"class.std::__1::vector.32"* %165 to i64
  %167 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %0, i64 0, i32 0, i32 0
  %168 = load %"class.std::__1::vector.32"*, %"class.std::__1::vector.32"** %167, align 8
  %169 = load %"class.std::__1::vector.32"*, %"class.std::__1::vector.32"** %4, align 8
  %170 = icmp eq %"class.std::__1::vector.32"* %169, %168
  br i1 %170, label %171, label %173

171:                                              ; preds = %164
  %172 = ptrtoint %"class.std::__1::vector.32"* %168 to i64
  br label %197

173:                                              ; preds = %164, %173
  %174 = phi %"class.std::__1::vector.32"* [ %176, %173 ], [ %35, %164 ]
  %175 = phi %"class.std::__1::vector.32"* [ %177, %173 ], [ %169, %164 ]
  %176 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %174, i64 -1
  %177 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %175, i64 -1
  %178 = bitcast %"class.std::__1::vector.32"* %176 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %178, i8 0, i64 24, i1 false) #9
  %179 = bitcast %"class.std::__1::vector.32"* %177 to i64*
  %180 = load i64, i64* %179, align 8
  %181 = bitcast %"class.std::__1::vector.32"* %176 to i64*
  store i64 %180, i64* %181, align 8
  %182 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %175, i64 -1, i32 0, i32 1
  %183 = bitcast i8** %182 to i64*
  %184 = load i64, i64* %183, align 8
  %185 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %174, i64 -1, i32 0, i32 1
  %186 = bitcast i8** %185 to i64*
  store i64 %184, i64* %186, align 8
  %187 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %175, i64 -1, i32 0, i32 2, i32 0, i32 0
  %188 = bitcast i8** %187 to i64*
  %189 = load i64, i64* %188, align 8
  %190 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %174, i64 -1, i32 0, i32 2, i32 0, i32 0
  %191 = bitcast i8** %190 to i64*
  store i64 %189, i64* %191, align 8
  %192 = bitcast %"class.std::__1::vector.32"* %177 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %192, i8 0, i64 24, i1 false) #9
  %193 = icmp eq %"class.std::__1::vector.32"* %177, %168
  br i1 %193, label %194, label %173

194:                                              ; preds = %173
  %195 = load i64, i64* %7, align 8
  %196 = load %"class.std::__1::vector.32"*, %"class.std::__1::vector.32"** %4, align 8
  br label %197

197:                                              ; preds = %171, %194
  %198 = phi %"class.std::__1::vector.32"* [ %168, %171 ], [ %196, %194 ]
  %199 = phi %"class.std::__1::vector.32"* [ %35, %171 ], [ %176, %194 ]
  %200 = phi i64 [ %172, %171 ], [ %195, %194 ]
  %201 = ptrtoint %"class.std::__1::vector.32"* %199 to i64
  store i64 %201, i64* %7, align 8
  store i64 %166, i64* %5, align 8
  store i64 %37, i64* %17, align 8
  %202 = inttoptr i64 %200 to %"class.std::__1::vector.32"*
  %203 = icmp eq %"class.std::__1::vector.32"* %198, %202
  br i1 %203, label %216, label %204

204:                                              ; preds = %197, %214
  %205 = phi %"class.std::__1::vector.32"* [ %206, %214 ], [ %198, %197 ]
  %206 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %205, i64 -1
  %207 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %206, i64 0, i32 0, i32 0
  %208 = load i8*, i8** %207, align 8
  %209 = icmp eq i8* %208, null
  br i1 %209, label %214, label %210

210:                                              ; preds = %204
  %211 = ptrtoint i8* %208 to i64
  %212 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %205, i64 -1, i32 0, i32 1
  %213 = bitcast i8** %212 to i64*
  store i64 %211, i64* %213, align 8
  tail call void @_ZdlPv(i8* nonnull %208) #10
  br label %214

214:                                              ; preds = %210, %204
  %215 = icmp eq %"class.std::__1::vector.32"* %206, %202
  br i1 %215, label %216, label %204

216:                                              ; preds = %214, %197
  %217 = icmp eq i64 %200, 0
  br i1 %217, label %220, label %218

218:                                              ; preds = %216
  %219 = inttoptr i64 %200 to i8*
  tail call void @_ZdlPv(i8* %219) #10
  br label %220

220:                                              ; preds = %216, %218
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN8payments21WebAppManifestSectionENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJS2_EEEvDpOT_(%"class.std::__1::vector.28"*, %"struct.payments::WebAppManifestSection"* dereferenceable(56)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.payments::WebAppManifestSection"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.28"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 56
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 329406144173384850
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.28"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.payments::WebAppManifestSection"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 56
  %20 = icmp ult i64 %19, 164703072086692425
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 329406144173384850, %14 ]
  %28 = mul i64 %27, 56
  %29 = tail call i8* @_Znwm(i64 %28) #10
  %30 = bitcast i8* %29 to %"struct.payments::WebAppManifestSection"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.payments::WebAppManifestSection"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.payments::WebAppManifestSection", %"struct.payments::WebAppManifestSection"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.payments::WebAppManifestSection", %"struct.payments::WebAppManifestSection"* %33, i64 %32
  %36 = ptrtoint %"struct.payments::WebAppManifestSection"* %35 to i64
  tail call void @_ZN8payments21WebAppManifestSectionC1ERKS0_(%"struct.payments::WebAppManifestSection"* %34, %"struct.payments::WebAppManifestSection"* dereferenceable(56) %1) #9
  %37 = getelementptr inbounds %"struct.payments::WebAppManifestSection", %"struct.payments::WebAppManifestSection"* %34, i64 1
  %38 = ptrtoint %"struct.payments::WebAppManifestSection"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %0, i64 0, i32 0, i32 0
  %40 = load %"struct.payments::WebAppManifestSection"*, %"struct.payments::WebAppManifestSection"** %39, align 8
  %41 = load %"struct.payments::WebAppManifestSection"*, %"struct.payments::WebAppManifestSection"** %3, align 8
  %42 = icmp eq %"struct.payments::WebAppManifestSection"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"struct.payments::WebAppManifestSection"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"struct.payments::WebAppManifestSection"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"struct.payments::WebAppManifestSection"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"struct.payments::WebAppManifestSection", %"struct.payments::WebAppManifestSection"* %46, i64 -1
  %49 = getelementptr inbounds %"struct.payments::WebAppManifestSection", %"struct.payments::WebAppManifestSection"* %47, i64 -1
  tail call void @_ZN8payments21WebAppManifestSectionC1ERKS0_(%"struct.payments::WebAppManifestSection"* %48, %"struct.payments::WebAppManifestSection"* dereferenceable(56) %49) #9
  %50 = icmp eq %"struct.payments::WebAppManifestSection"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"struct.payments::WebAppManifestSection"*, %"struct.payments::WebAppManifestSection"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"struct.payments::WebAppManifestSection"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"struct.payments::WebAppManifestSection"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"struct.payments::WebAppManifestSection"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"struct.payments::WebAppManifestSection"*
  %60 = icmp eq %"struct.payments::WebAppManifestSection"* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"struct.payments::WebAppManifestSection"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"struct.payments::WebAppManifestSection", %"struct.payments::WebAppManifestSection"* %62, i64 -1
  tail call void @_ZN8payments21WebAppManifestSectionD1Ev(%"struct.payments::WebAppManifestSection"* %63) #9
  %64 = icmp eq %"struct.payments::WebAppManifestSection"* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #10
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

declare void @_ZN8payments21WebAppManifestSectionC1ERKS0_(%"struct.payments::WebAppManifestSection"*, %"struct.payments::WebAppManifestSection"* dereferenceable(56)) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !8}
!12 = !{!13}
!13 = distinct !{!13, !14}
!14 = distinct !{!14, !"LVerDomain"}
!15 = !{!16}
!16 = distinct !{!16, !14}
!17 = distinct !{!17, !8}
!18 = distinct !{!18, !10}
!19 = distinct !{!19, !8}
!20 = !{!21}
!21 = distinct !{!21, !22}
!22 = distinct !{!22, !"LVerDomain"}
!23 = !{!24}
!24 = distinct !{!24, !22}
!25 = distinct !{!25, !8}
!26 = distinct !{!26, !10}
!27 = distinct !{!27, !8}
!28 = !{!29}
!29 = distinct !{!29, !30}
!30 = distinct !{!30, !"LVerDomain"}
!31 = !{!32}
!32 = distinct !{!32, !30}
!33 = distinct !{!33, !8}
!34 = distinct !{!34, !10}
!35 = distinct !{!35, !8}
!36 = !{!37}
!37 = distinct !{!37, !38}
!38 = distinct !{!38, !"LVerDomain"}
!39 = !{!40}
!40 = distinct !{!40, !38}
!41 = distinct !{!41, !8}
!42 = distinct !{!42, !10}
!43 = distinct !{!43, !8}
