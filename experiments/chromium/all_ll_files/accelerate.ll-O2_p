; ModuleID = '../../third_party/webrtc/modules/audio_coding/neteq/accelerate.cc'
source_filename = "../../third_party/webrtc/modules/audio_coding/neteq/accelerate.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.webrtc::Accelerate" = type { %"class.webrtc::TimeStretch.base", [4 x i8] }
%"class.webrtc::TimeStretch.base" = type <{ i32 (...)**, i32, i32, i64, %"class.webrtc::BackgroundNoise"*, i16, [110 x i16], [51 x i16] }>
%"class.webrtc::BackgroundNoise" = type opaque
%"class.webrtc::AudioMultiVector" = type { i32 (...)**, %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.webrtc::AudioVector"**, %"class.webrtc::AudioVector"**, %"class.std::__1::__compressed_pair.1" }
%"class.webrtc::AudioVector" = type { i32 (...)**, %"class.std::__1::unique_ptr", i64, i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i16* }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.webrtc::AudioVector"** }
%"class.webrtc::TimeStretch" = type <{ i32 (...)**, i32, i32, i64, %"class.webrtc::BackgroundNoise"*, i16, [110 x i16], [51 x i16], [4 x i8] }>
%"struct.webrtc::AccelerateFactory" = type { i32 (...)** }

$_ZN6webrtc11TimeStretchD2Ev = comdat any

$_ZN6webrtc10AccelerateD0Ev = comdat any

$_ZN6webrtc17AccelerateFactoryD2Ev = comdat any

$_ZN6webrtc17AccelerateFactoryD0Ev = comdat any

@_ZTVN6webrtc10AccelerateE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::TimeStretch"*)* @_ZN6webrtc11TimeStretchD2Ev to i8*), i8* bitcast (void (%"class.webrtc::Accelerate"*)* @_ZN6webrtc10AccelerateD0Ev to i8*), i8* bitcast (void (%"class.webrtc::Accelerate"*, i64, i16*, i64*)* @_ZNK6webrtc10Accelerate29SetParametersForPassiveSpeechEmPsPm to i8*), i8* bitcast (i32 (%"class.webrtc::Accelerate"*, i16*, i64, i64, i16, i1, i1, %"class.webrtc::AudioMultiVector"*)* @_ZNK6webrtc10Accelerate23CheckCriteriaAndStretchEPKsmmsbbPNS_16AudioMultiVectorE to i8*)] }, align 8
@_ZTVN6webrtc17AccelerateFactoryE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.webrtc::AccelerateFactory"*)* @_ZN6webrtc17AccelerateFactoryD2Ev to i8*), i8* bitcast (void (%"struct.webrtc::AccelerateFactory"*)* @_ZN6webrtc17AccelerateFactoryD0Ev to i8*), i8* bitcast (%"class.webrtc::Accelerate"* (%"struct.webrtc::AccelerateFactory"*, i32, i64, %"class.webrtc::BackgroundNoise"*)* @_ZNK6webrtc17AccelerateFactory6CreateEimRKNS_15BackgroundNoiseE to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc10Accelerate7ProcessEPKsmbPNS_16AudioMultiVectorEPm(%"class.webrtc::Accelerate"*, i16*, i64, i1 zeroext, %"class.webrtc::AudioMultiVector"*, i64*) local_unnamed_addr #0 align 2 {
  %7 = bitcast %"class.webrtc::Accelerate"* %0 to %"class.webrtc::TimeStretch"*
  %8 = getelementptr inbounds %"class.webrtc::Accelerate", %"class.webrtc::Accelerate"* %0, i64 0, i32 0, i32 3
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %6
  %12 = udiv i64 %2, %9
  %13 = getelementptr inbounds %"class.webrtc::Accelerate", %"class.webrtc::Accelerate"* %0, i64 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = sext i32 %14 to i64
  %16 = mul nsw i64 %15, 239
  %17 = icmp ult i64 %12, %16
  br i1 %17, label %18, label %21

18:                                               ; preds = %11, %6
  %19 = icmp eq i64 %2, 0
  %20 = select i1 %19, i16* null, i16* %1
  tail call void @_ZN6webrtc16AudioMultiVector19PushBackInterleavedEN3rtc9ArrayViewIKsLln4711EEE(%"class.webrtc::AudioMultiVector"* %4, i16* %20, i64 %2) #8
  br label %23

21:                                               ; preds = %11
  %22 = tail call i32 @_ZN6webrtc11TimeStretch7ProcessEPKsmbPNS_16AudioMultiVectorEPm(%"class.webrtc::TimeStretch"* %7, i16* %1, i64 %2, i1 zeroext %3, %"class.webrtc::AudioMultiVector"* %4, i64* %5) #8
  br label %23

23:                                               ; preds = %21, %18
  %24 = phi i32 [ -1, %18 ], [ %22, %21 ]
  ret i32 %24
}

declare void @_ZN6webrtc16AudioMultiVector19PushBackInterleavedEN3rtc9ArrayViewIKsLln4711EEE(%"class.webrtc::AudioMultiVector"*, i16*, i64) local_unnamed_addr #1

declare i32 @_ZN6webrtc11TimeStretch7ProcessEPKsmbPNS_16AudioMultiVectorEPm(%"class.webrtc::TimeStretch"*, i16*, i64, i1 zeroext, %"class.webrtc::AudioMultiVector"*, i64*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZNK6webrtc10Accelerate29SetParametersForPassiveSpeechEmPsPm(%"class.webrtc::Accelerate"* nocapture readnone, i64, i16* nocapture, i64* nocapture readnone) unnamed_addr #2 align 2 {
  store i16 0, i16* %2, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK6webrtc10Accelerate23CheckCriteriaAndStretchEPKsmmsbbPNS_16AudioMultiVectorE(%"class.webrtc::Accelerate"* nocapture readonly, i16*, i64, i64, i16 signext, i1 zeroext, i1 zeroext, %"class.webrtc::AudioMultiVector"*) unnamed_addr #0 align 2 {
  %9 = alloca %"class.webrtc::AudioMultiVector", align 8
  %10 = select i1 %6, i32 8192, i32 14746
  %11 = sext i16 %4 to i32
  %12 = icmp slt i32 %10, %11
  %13 = xor i1 %5, true
  %14 = or i1 %12, %13
  br i1 %14, label %15, label %51

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.webrtc::Accelerate", %"class.webrtc::Accelerate"* %0, i64 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = mul nsw i32 %17, 120
  %19 = sext i32 %18 to i64
  br i1 %6, label %20, label %23

20:                                               ; preds = %15
  %21 = urem i64 %19, %3
  %22 = sub i64 %19, %21
  br label %23

23:                                               ; preds = %20, %15
  %24 = phi i64 [ %22, %20 ], [ %3, %15 ]
  %25 = getelementptr inbounds %"class.webrtc::Accelerate", %"class.webrtc::Accelerate"* %0, i64 0, i32 0, i32 3
  %26 = load i64, i64* %25, align 8
  %27 = mul i64 %26, %19
  %28 = icmp eq i64 %27, 0
  %29 = select i1 %28, i16* null, i16* %1
  tail call void @_ZN6webrtc16AudioMultiVector19PushBackInterleavedEN3rtc9ArrayViewIKsLln4711EEE(%"class.webrtc::AudioMultiVector"* %7, i16* %29, i64 %27) #8
  %30 = bitcast %"class.webrtc::AudioMultiVector"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %30) #8
  %31 = bitcast %"class.webrtc::AudioMultiVector"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 40, i1 false)
  %32 = load i64, i64* %25, align 8
  call void @_ZN6webrtc16AudioMultiVectorC1Em(%"class.webrtc::AudioMultiVector"* nonnull %9, i64 %32) #8
  %33 = load i64, i64* %25, align 8
  %34 = mul i64 %33, %19
  %35 = getelementptr inbounds i16, i16* %1, i64 %34
  %36 = mul i64 %33, %24
  %37 = icmp eq i64 %36, 0
  %38 = select i1 %37, i16* null, i16* %35
  call void @_ZN6webrtc16AudioMultiVector19PushBackInterleavedEN3rtc9ArrayViewIKsLln4711EEE(%"class.webrtc::AudioMultiVector"* nonnull %9, i16* %38, i64 %36) #8
  %39 = bitcast %"class.webrtc::AudioMultiVector"* %7 to void (%"class.webrtc::AudioMultiVector"*, %"class.webrtc::AudioMultiVector"*, i64)***
  %40 = load void (%"class.webrtc::AudioMultiVector"*, %"class.webrtc::AudioMultiVector"*, i64)**, void (%"class.webrtc::AudioMultiVector"*, %"class.webrtc::AudioMultiVector"*, i64)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.webrtc::AudioMultiVector"*, %"class.webrtc::AudioMultiVector"*, i64)*, void (%"class.webrtc::AudioMultiVector"*, %"class.webrtc::AudioMultiVector"*, i64)** %40, i64 13
  %42 = load void (%"class.webrtc::AudioMultiVector"*, %"class.webrtc::AudioMultiVector"*, i64)*, void (%"class.webrtc::AudioMultiVector"*, %"class.webrtc::AudioMultiVector"*, i64)** %41, align 8
  call void %42(%"class.webrtc::AudioMultiVector"* %7, %"class.webrtc::AudioMultiVector"* nonnull dereferenceable(40) %9, i64 %24) #8
  %43 = add i64 %24, %19
  %44 = load i64, i64* %25, align 8
  %45 = mul i64 %44, %43
  %46 = getelementptr inbounds i16, i16* %1, i64 %45
  %47 = sub i64 %2, %45
  %48 = icmp eq i64 %47, 0
  %49 = select i1 %48, i16* null, i16* %46
  call void @_ZN6webrtc16AudioMultiVector19PushBackInterleavedEN3rtc9ArrayViewIKsLln4711EEE(%"class.webrtc::AudioMultiVector"* %7, i16* %49, i64 %47) #8
  %50 = zext i1 %13 to i32
  call void @_ZN6webrtc16AudioMultiVectorD1Ev(%"class.webrtc::AudioMultiVector"* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %30) #8
  br label %54

51:                                               ; preds = %8
  %52 = icmp eq i64 %2, 0
  %53 = select i1 %52, i16* null, i16* %1
  tail call void @_ZN6webrtc16AudioMultiVector19PushBackInterleavedEN3rtc9ArrayViewIKsLln4711EEE(%"class.webrtc::AudioMultiVector"* %7, i16* %53, i64 %2) #8
  br label %54

54:                                               ; preds = %51, %23
  %55 = phi i32 [ %50, %23 ], [ 2, %51 ]
  ret i32 %55
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN6webrtc16AudioMultiVectorC1Em(%"class.webrtc::AudioMultiVector"*, i64) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN6webrtc16AudioMultiVectorD1Ev(%"class.webrtc::AudioMultiVector"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden noalias nonnull %"class.webrtc::Accelerate"* @_ZNK6webrtc17AccelerateFactory6CreateEimRKNS_15BackgroundNoiseE(%"struct.webrtc::AccelerateFactory"* nocapture readnone, i32, i64, %"class.webrtc::BackgroundNoise"*) unnamed_addr #0 align 2 {
  %5 = tail call i8* @_Znwm(i64 360) #9
  %6 = bitcast i8* %5 to %"class.webrtc::Accelerate"*
  %7 = bitcast i8* %5 to i32 (...)***
  %8 = getelementptr inbounds i8, i8* %5, i64 8
  %9 = bitcast i8* %8 to i32*
  store i32 %1, i32* %9, align 8
  %10 = getelementptr inbounds i8, i8* %5, i64 12
  %11 = bitcast i8* %10 to i32*
  %12 = sdiv i32 %1, 8000
  store i32 %12, i32* %11, align 4
  %13 = getelementptr inbounds i8, i8* %5, i64 16
  %14 = bitcast i8* %13 to i64*
  store i64 %2, i64* %14, align 8
  %15 = getelementptr inbounds i8, i8* %5, i64 24
  %16 = bitcast i8* %15 to %"class.webrtc::BackgroundNoise"**
  store %"class.webrtc::BackgroundNoise"* %3, %"class.webrtc::BackgroundNoise"** %16, align 8
  %17 = getelementptr inbounds i8, i8* %5, i64 32
  %18 = bitcast i8* %17 to i16*
  store i16 0, i16* %18, align 8
  %19 = getelementptr inbounds i8, i8* %5, i64 254
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %19, i8 0, i64 102, i1 false) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc10AccelerateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  ret %"class.webrtc::Accelerate"* %6
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc11TimeStretchD2Ev(%"class.webrtc::TimeStretch"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc10AccelerateD0Ev(%"class.webrtc::Accelerate"*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %"class.webrtc::Accelerate"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc17AccelerateFactoryD2Ev(%"struct.webrtc::AccelerateFactory"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc17AccelerateFactoryD0Ev(%"struct.webrtc::AccelerateFactory"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"struct.webrtc::AccelerateFactory"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
