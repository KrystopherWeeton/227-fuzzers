; ModuleID = '../../third_party/vulkan-deps/spirv-tools/src/source/opt/combine_access_chains.cpp'
source_filename = "../../third_party/vulkan-deps/spirv-tools/src/source/opt/combine_access_chains.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%struct.spv_position_t = type { i64, i64, i64 }
%"class.spvtools::opt::CombineAccessChains" = type { %"class.spvtools::opt::Pass.base", [7 x i8] }
%"class.spvtools::opt::Pass.base" = type <{ i32 (...)**, %"class.std::__1::function", %"class.spvtools::opt::IRContext"*, i8 }>
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)* }
%"class.spvtools::opt::IRContext" = type <{ %struct.spv_context_t*, %"class.spvtools::AssemblyGrammar", i32, [4 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::function", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.152", %"class.std::__1::unordered_map.173", %"class.std::__1::unordered_map.201", i32, [4 x i8], %"class.std::__1::unordered_map.225", %"class.std::__1::unordered_map.249", %"class.std::__1::unique_ptr.273", %"class.std::__1::map", %"class.std::__1::map.364", %"class.std::__1::unordered_map.373", %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.623", %"class.std::__1::unique_ptr.638", %"class.std::__1::unique_ptr.694", %"class.std::__1::unique_ptr.724", %"class.std::__1::unique_ptr.754", %"class.std::__1::unique_ptr.873", i32, i8, i8, [2 x i8] }>
%struct.spv_context_t = type { i32, %struct.spv_opcode_table_t*, %struct.spv_operand_table_t*, %struct.spv_ext_inst_table_t*, %"class.std::__1::function" }
%struct.spv_opcode_table_t = type { i32, %struct.spv_opcode_desc_t* }
%struct.spv_opcode_desc_t = type { i8*, i32, i32, i32*, i16, [16 x i32], i8, i8, i32, i32*, i32, i32 }
%struct.spv_operand_table_t = type { i32, %struct.spv_operand_desc_group_t* }
%struct.spv_operand_desc_group_t = type { i32, i32, %struct.spv_operand_desc_t* }
%struct.spv_operand_desc_t = type { i8*, i32, i32, i32*, i32, i32*, [16 x i32], i32, i32 }
%struct.spv_ext_inst_table_t = type { i32, %struct.spv_ext_inst_group_t* }
%struct.spv_ext_inst_group_t = type { i32, i32, %struct.spv_ext_inst_desc_t* }
%struct.spv_ext_inst_desc_t = type { i8*, i32, i32, i32*, [16 x i32] }
%"class.spvtools::AssemblyGrammar" = type { i32, %struct.spv_operand_table_t*, %struct.spv_opcode_table_t*, %struct.spv_ext_inst_table_t* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.spvtools::opt::Module"* }
%"class.spvtools::opt::Module" = type <{ %"struct.spvtools::opt::ModuleHeader", [4 x i8], %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.26", %"class.std::__1::vector.14", i8, [7 x i8] }>
%"struct.spvtools::opt::ModuleHeader" = type { i32, i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.spvtools::opt::Instruction"* }
%"class.spvtools::opt::Instruction" = type { %"class.spvtools::utils::IntrusiveNodeBase.base", %"class.spvtools::opt::IRContext"*, i32, i8, i8, i32, %"class.std::__1::vector", %"class.std::__1::vector.14", %"class.spvtools::opt::DebugScope" }
%"class.spvtools::utils::IntrusiveNodeBase.base" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8 }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"*, %"class.std::__1::__compressed_pair.9" }
%"struct.spvtools::opt::Operand" = type { i32, %"class.spvtools::utils::SmallVector" }
%"class.spvtools::utils::SmallVector" = type { i32 (...)**, i64, i32*, [2 x %"struct.std::__1::aligned_storage<4, 4>::type"], %"class.std::__1::unique_ptr.0" }
%"struct.std::__1::aligned_storage<4, 4>::type" = type { [4 x i8] }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::vector.3"* }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { i32*, i32*, %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i32* }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.spvtools::opt::Operand"* }
%"class.spvtools::opt::DebugScope" = type { i32, i32 }
%"class.spvtools::opt::InstructionList" = type { %"class.spvtools::utils::IntrusiveList" }
%"class.spvtools::utils::IntrusiveList" = type { i32 (...)**, %"class.spvtools::opt::Instruction" }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"*, %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.spvtools::opt::Function"* }
%"class.spvtools::opt::Function" = type { %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.38", %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31" }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"*, %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.spvtools::opt::BasicBlock"* }
%"class.spvtools::opt::BasicBlock" = type { %"class.spvtools::opt::Function"*, %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.std::__1::unique_ptr.40"* }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"*, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.std::__1::unique_ptr.21"* }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.std::__1::unique_ptr.28"* }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.spvtools::opt::analysis::DefUseManager"* }
%"class.spvtools::opt::analysis::DefUseManager" = type { %"class.std::__1::unordered_map", %"class.std::__1::set", %"class.std::__1::unordered_map.91" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.65", %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.81", [4 x i8] }>
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67", %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { i64 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { float }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.84", %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.91" = type { %"class.std::__1::__hash_table.92" }
%"class.std::__1::__hash_table.92" = type <{ %"class.std::__1::unique_ptr.93", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.108", %"class.std::__1::__compressed_pair.113", [4 x i8] }>
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95", %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.std::__1::__hash_node_base.96"** }
%"struct.std::__1::__hash_node_base.96" = type { %"struct.std::__1::__hash_node_base.96"* }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.std::__1::__bucket_list_deallocator.98" }
%"class.std::__1::__bucket_list_deallocator.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::__hash_node_base.96" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.spvtools::opt::analysis::DecorationManager"* }
%"class.spvtools::opt::analysis::DecorationManager" = type { %"class.std::__1::unordered_map.125", %"class.spvtools::opt::Module"* }
%"class.std::__1::unordered_map.125" = type { %"class.std::__1::__hash_table.126" }
%"class.std::__1::__hash_table.126" = type <{ %"class.std::__1::unique_ptr.127", %"class.std::__1::__compressed_pair.137", %"class.std::__1::__compressed_pair.142", %"class.std::__1::__compressed_pair.145", [4 x i8] }>
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129", %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"struct.std::__1::__hash_node_base.130"** }
%"struct.std::__1::__hash_node_base.130" = type { %"struct.std::__1::__hash_node_base.130"* }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.std::__1::__bucket_list_deallocator.132" }
%"class.std::__1::__bucket_list_deallocator.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"struct.std::__1::__hash_node_base.130" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.spvtools::opt::FeatureManager"* }
%"class.spvtools::opt::FeatureManager" = type { %"class.spvtools::AssemblyGrammar"*, %"class.spvtools::EnumSet", %"class.spvtools::EnumSet.169", i32, i32 }
%"class.spvtools::EnumSet" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.std::__1::set.158"* }
%"class.std::__1::set.158" = type { %"class.std::__1::__tree.159" }
%"class.std::__1::__tree.159" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.160", %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::EnumSet.169" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unordered_map.173" = type { %"class.std::__1::__hash_table.174" }
%"class.std::__1::__hash_table.174" = type <{ %"class.std::__1::unique_ptr.175", %"class.std::__1::__compressed_pair.185", %"class.std::__1::__compressed_pair.190", %"class.std::__1::__compressed_pair.195", [4 x i8] }>
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177", %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"struct.std::__1::__hash_node_base.178"** }
%"struct.std::__1::__hash_node_base.178" = type { %"struct.std::__1::__hash_node_base.178"* }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.std::__1::__bucket_list_deallocator.180" }
%"class.std::__1::__bucket_list_deallocator.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"struct.std::__1::__hash_node_base.178" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.201" = type { %"class.std::__1::__hash_table.202" }
%"class.std::__1::__hash_table.202" = type <{ %"class.std::__1::unique_ptr.203", %"class.std::__1::__compressed_pair.213", %"class.std::__1::__compressed_pair.218", %"class.std::__1::__compressed_pair.221", [4 x i8] }>
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205", %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.std::__1::__hash_node_base.206"** }
%"struct.std::__1::__hash_node_base.206" = type { %"struct.std::__1::__hash_node_base.206"* }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.std::__1::__bucket_list_deallocator.208" }
%"class.std::__1::__bucket_list_deallocator.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"struct.std::__1::__hash_node_base.206" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.225" = type { %"class.std::__1::__hash_table.226" }
%"class.std::__1::__hash_table.226" = type <{ %"class.std::__1::unique_ptr.227", %"class.std::__1::__compressed_pair.237", %"class.std::__1::__compressed_pair.242", %"class.std::__1::__compressed_pair.245", [4 x i8] }>
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229", %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"struct.std::__1::__hash_node_base.230"** }
%"struct.std::__1::__hash_node_base.230" = type { %"struct.std::__1::__hash_node_base.230"* }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.std::__1::__bucket_list_deallocator.232" }
%"class.std::__1::__bucket_list_deallocator.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.std::__1::__hash_node_base.230" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.249" = type { %"class.std::__1::__hash_table.250" }
%"class.std::__1::__hash_table.250" = type <{ %"class.std::__1::unique_ptr.251", %"class.std::__1::__compressed_pair.261", %"class.std::__1::__compressed_pair.266", %"class.std::__1::__compressed_pair.269", [4 x i8] }>
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253", %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"struct.std::__1::__hash_node_base.254"** }
%"struct.std::__1::__hash_node_base.254" = type { %"struct.std::__1::__hash_node_base.254"* }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.std::__1::__bucket_list_deallocator.256" }
%"class.std::__1::__bucket_list_deallocator.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.std::__1::__hash_node_base.254" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.spvtools::opt::CFG"* }
%"class.spvtools::opt::CFG" = type { %"class.spvtools::opt::Module"*, %"class.std::__1::unordered_map.276", %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock", %"class.std::__1::unordered_map.304", %"class.std::__1::unordered_map.328" }
%"class.std::__1::unordered_map.276" = type { %"class.std::__1::__hash_table.277" }
%"class.std::__1::__hash_table.277" = type <{ %"class.std::__1::unique_ptr.278", %"class.std::__1::__compressed_pair.288", %"class.std::__1::__compressed_pair.293", %"class.std::__1::__compressed_pair.298", [4 x i8] }>
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280", %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"struct.std::__1::__hash_node_base.281"** }
%"struct.std::__1::__hash_node_base.281" = type { %"struct.std::__1::__hash_node_base.281"* }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.std::__1::__bucket_list_deallocator.283" }
%"class.std::__1::__bucket_list_deallocator.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.std::__1::__hash_node_base.281" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.304" = type { %"class.std::__1::__hash_table.305" }
%"class.std::__1::__hash_table.305" = type <{ %"class.std::__1::unique_ptr.306", %"class.std::__1::__compressed_pair.316", %"class.std::__1::__compressed_pair.321", %"class.std::__1::__compressed_pair.324", [4 x i8] }>
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308", %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"struct.std::__1::__hash_node_base.309"** }
%"struct.std::__1::__hash_node_base.309" = type { %"struct.std::__1::__hash_node_base.309"* }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.std::__1::__bucket_list_deallocator.311" }
%"class.std::__1::__bucket_list_deallocator.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"struct.std::__1::__hash_node_base.309" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.328" = type { %"class.std::__1::__hash_table.329" }
%"class.std::__1::__hash_table.329" = type <{ %"class.std::__1::unique_ptr.330", %"class.std::__1::__compressed_pair.340", %"class.std::__1::__compressed_pair.345", %"class.std::__1::__compressed_pair.348", [4 x i8] }>
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332", %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"struct.std::__1::__hash_node_base.333"** }
%"struct.std::__1::__hash_node_base.333" = type { %"struct.std::__1::__hash_node_base.333"* }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.std::__1::__bucket_list_deallocator.335" }
%"class.std::__1::__bucket_list_deallocator.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"struct.std::__1::__hash_node_base.333" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.355" }
%"class.std::__1::__tree.355" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.356", %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::map.364" = type { %"class.std::__1::__tree.365" }
%"class.std::__1::__tree.365" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.366", %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.373" = type { %"class.std::__1::__hash_table.374" }
%"class.std::__1::__hash_table.374" = type <{ %"class.std::__1::unique_ptr.375", %"class.std::__1::__compressed_pair.385", %"class.std::__1::__compressed_pair.390", %"class.std::__1::__compressed_pair.395", [4 x i8] }>
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377", %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"struct.std::__1::__hash_node_base.378"** }
%"struct.std::__1::__hash_node_base.378" = type { %"struct.std::__1::__hash_node_base.378"* }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.std::__1::__bucket_list_deallocator.380" }
%"class.std::__1::__bucket_list_deallocator.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"struct.std::__1::__hash_node_base.378" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.400" = type { %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"class.spvtools::opt::analysis::ConstantManager"* }
%"class.spvtools::opt::analysis::ConstantManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.403", %"class.std::__1::multimap", %"class.std::__1::unordered_set", %"class.std::__1::vector.458" }
%"class.std::__1::unordered_map.403" = type { %"class.std::__1::__hash_table.404" }
%"class.std::__1::__hash_table.404" = type <{ %"class.std::__1::unique_ptr.405", %"class.std::__1::__compressed_pair.415", %"class.std::__1::__compressed_pair.420", %"class.std::__1::__compressed_pair.423", [4 x i8] }>
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407", %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"struct.std::__1::__hash_node_base.408"** }
%"struct.std::__1::__hash_node_base.408" = type { %"struct.std::__1::__hash_node_base.408"* }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.std::__1::__bucket_list_deallocator.410" }
%"class.std::__1::__bucket_list_deallocator.410" = type { %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"struct.std::__1::__hash_node_base.408" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.427" }
%"class.std::__1::__tree.427" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.428", %"class.std::__1::__compressed_pair.432" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.437" }
%"class.std::__1::__hash_table.437" = type <{ %"class.std::__1::unique_ptr.438", %"class.std::__1::__compressed_pair.448", %"class.std::__1::__compressed_pair.453", %"class.std::__1::__compressed_pair.455", [4 x i8] }>
%"class.std::__1::unique_ptr.438" = type { %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.440", %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.440" = type { %"struct.std::__1::__hash_node_base.441"** }
%"struct.std::__1::__hash_node_base.441" = type { %"struct.std::__1::__hash_node_base.441"* }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"class.std::__1::__bucket_list_deallocator.443" }
%"class.std::__1::__bucket_list_deallocator.443" = type { %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"struct.std::__1::__hash_node_base.441" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.458" = type { %"class.std::__1::__vector_base.459" }
%"class.std::__1::__vector_base.459" = type { %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"*, %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::unique_ptr.460" = type { %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"class.spvtools::opt::analysis::Constant"* }
%"class.spvtools::opt::analysis::Constant" = type { i32 (...)**, %"class.spvtools::opt::analysis::Type"* }
%"class.spvtools::opt::analysis::Type" = type <{ i32 (...)**, %"class.std::__1::vector.463", i32, [4 x i8] }>
%"class.std::__1::vector.463" = type { %"class.std::__1::__vector_base.464" }
%"class.std::__1::__vector_base.464" = type { %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"*, %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473" }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"class.std::__1::unique_ptr.460"* }
%"class.std::__1::unique_ptr.480" = type { %"class.std::__1::__compressed_pair.481" }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"class.spvtools::opt::analysis::TypeManager"* }
%"class.spvtools::opt::analysis::TypeManager" = type { %"class.std::__1::function"*, %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.507", %"class.std::__1::unordered_set.531", %"class.std::__1::vector.553", %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.566" }
%"class.std::__1::unordered_map.507" = type { %"class.std::__1::__hash_table.508" }
%"class.std::__1::__hash_table.508" = type <{ %"class.std::__1::unique_ptr.509", %"class.std::__1::__compressed_pair.519", %"class.std::__1::__compressed_pair.524", %"class.std::__1::__compressed_pair.527", [4 x i8] }>
%"class.std::__1::unique_ptr.509" = type { %"class.std::__1::__compressed_pair.510" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511", %"struct.std::__1::__compressed_pair_elem.513" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"struct.std::__1::__hash_node_base.512"** }
%"struct.std::__1::__hash_node_base.512" = type { %"struct.std::__1::__hash_node_base.512"* }
%"struct.std::__1::__compressed_pair_elem.513" = type { %"class.std::__1::__bucket_list_deallocator.514" }
%"class.std::__1::__bucket_list_deallocator.514" = type { %"class.std::__1::__compressed_pair.515" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.520" }
%"struct.std::__1::__compressed_pair_elem.520" = type { %"struct.std::__1::__hash_node_base.512" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_set.531" = type { %"class.std::__1::__hash_table.532" }
%"class.std::__1::__hash_table.532" = type <{ %"class.std::__1::unique_ptr.533", %"class.std::__1::__compressed_pair.543", %"class.std::__1::__compressed_pair.548", %"class.std::__1::__compressed_pair.550", [4 x i8] }>
%"class.std::__1::unique_ptr.533" = type { %"class.std::__1::__compressed_pair.534" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.535", %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.535" = type { %"struct.std::__1::__hash_node_base.536"** }
%"struct.std::__1::__hash_node_base.536" = type { %"struct.std::__1::__hash_node_base.536"* }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.std::__1::__bucket_list_deallocator.538" }
%"class.std::__1::__bucket_list_deallocator.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"struct.std::__1::__hash_node_base.536" }
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.553" = type { %"class.std::__1::__vector_base.554" }
%"class.std::__1::__vector_base.554" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.std::__1::__compressed_pair.561" }
%"class.spvtools::opt::analysis::TypeManager::UnresolvedType" = type { i32, %"class.std::__1::unique_ptr.555" }
%"class.std::__1::unique_ptr.555" = type { %"class.std::__1::__compressed_pair.556" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.557" }
%"struct.std::__1::__compressed_pair_elem.557" = type { %"class.spvtools::opt::analysis::Type"* }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* }
%"class.std::__1::unordered_map.483" = type { %"class.std::__1::__hash_table.484" }
%"class.std::__1::__hash_table.484" = type <{ %"class.std::__1::unique_ptr.485", %"class.std::__1::__compressed_pair.495", %"class.std::__1::__compressed_pair.500", %"class.std::__1::__compressed_pair.503", [4 x i8] }>
%"class.std::__1::unique_ptr.485" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487", %"struct.std::__1::__compressed_pair_elem.489" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"struct.std::__1::__hash_node_base.488"** }
%"struct.std::__1::__hash_node_base.488" = type { %"struct.std::__1::__hash_node_base.488"* }
%"struct.std::__1::__compressed_pair_elem.489" = type { %"class.std::__1::__bucket_list_deallocator.490" }
%"class.std::__1::__bucket_list_deallocator.490" = type { %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"struct.std::__1::__hash_node_base.488" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.566" = type { %"class.std::__1::__hash_table.567" }
%"class.std::__1::__hash_table.567" = type <{ %"class.std::__1::unique_ptr.568", %"class.std::__1::__compressed_pair.578", %"class.std::__1::__compressed_pair.583", %"class.std::__1::__compressed_pair.586", [4 x i8] }>
%"class.std::__1::unique_ptr.568" = type { %"class.std::__1::__compressed_pair.569" }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.570", %"struct.std::__1::__compressed_pair_elem.572" }
%"struct.std::__1::__compressed_pair_elem.570" = type { %"struct.std::__1::__hash_node_base.571"** }
%"struct.std::__1::__hash_node_base.571" = type { %"struct.std::__1::__hash_node_base.571"* }
%"struct.std::__1::__compressed_pair_elem.572" = type { %"class.std::__1::__bucket_list_deallocator.573" }
%"class.std::__1::__bucket_list_deallocator.573" = type { %"class.std::__1::__compressed_pair.574" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.579" }
%"struct.std::__1::__compressed_pair_elem.579" = type { %"struct.std::__1::__hash_node_base.571" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.spvtools::opt::analysis::DebugInfoManager"* }
%"class.spvtools::opt::analysis::DebugInfoManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::unordered_map.596" = type { %"class.std::__1::__hash_table.597" }
%"class.std::__1::__hash_table.597" = type <{ %"class.std::__1::unique_ptr.598", %"class.std::__1::__compressed_pair.608", %"class.std::__1::__compressed_pair.613", %"class.std::__1::__compressed_pair.616", [4 x i8] }>
%"class.std::__1::unique_ptr.598" = type { %"class.std::__1::__compressed_pair.599" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.600", %"struct.std::__1::__compressed_pair_elem.602" }
%"struct.std::__1::__compressed_pair_elem.600" = type { %"struct.std::__1::__hash_node_base.601"** }
%"struct.std::__1::__hash_node_base.601" = type { %"struct.std::__1::__hash_node_base.601"* }
%"struct.std::__1::__compressed_pair_elem.602" = type { %"class.std::__1::__bucket_list_deallocator.603" }
%"class.std::__1::__bucket_list_deallocator.603" = type { %"class.std::__1::__compressed_pair.604" }
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"struct.std::__1::__hash_node_base.601" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.623" = type { %"class.std::__1::__compressed_pair.624" }
%"class.std::__1::__compressed_pair.624" = type { %"struct.std::__1::__compressed_pair_elem.625" }
%"struct.std::__1::__compressed_pair_elem.625" = type { %"class.std::__1::multimap.626"* }
%"class.std::__1::multimap.626" = type { %"class.std::__1::__tree.627" }
%"class.std::__1::__tree.627" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.628", %"class.std::__1::__compressed_pair.632" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.632" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.638" = type { %"class.std::__1::__compressed_pair.639" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.640" }
%"struct.std::__1::__compressed_pair_elem.640" = type { %"class.spvtools::opt::ScalarEvolutionAnalysis"* }
%"class.spvtools::opt::ScalarEvolutionAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::map.641", %"class.spvtools::opt::SENode"*, %"class.std::__1::unordered_set.658", %"class.std::__1::map.680" }
%"class.std::__1::map.641" = type { %"class.std::__1::__tree.642" }
%"class.std::__1::__tree.642" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.643", %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::opt::SENode" = type <{ i32 (...)**, %"class.std::__1::vector.651", %"class.spvtools::opt::ScalarEvolutionAnalysis"*, i32, [4 x i8] }>
%"class.std::__1::vector.651" = type { %"class.std::__1::__vector_base.652" }
%"class.std::__1::__vector_base.652" = type { %"class.spvtools::opt::SENode"**, %"class.spvtools::opt::SENode"**, %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.spvtools::opt::SENode"** }
%"class.std::__1::unordered_set.658" = type { %"class.std::__1::__hash_table.659" }
%"class.std::__1::__hash_table.659" = type <{ %"class.std::__1::unique_ptr.660", %"class.std::__1::__compressed_pair.670", %"class.std::__1::__compressed_pair.675", %"class.std::__1::__compressed_pair.677", [4 x i8] }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662", %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"struct.std::__1::__hash_node_base.663"** }
%"struct.std::__1::__hash_node_base.663" = type { %"struct.std::__1::__hash_node_base.663"* }
%"struct.std::__1::__compressed_pair_elem.664" = type { %"class.std::__1::__bucket_list_deallocator.665" }
%"class.std::__1::__bucket_list_deallocator.665" = type { %"class.std::__1::__compressed_pair.666" }
%"class.std::__1::__compressed_pair.666" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.671" }
%"struct.std::__1::__compressed_pair_elem.671" = type { %"struct.std::__1::__hash_node_base.663" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.677" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.680" = type { %"class.std::__1::__tree.681" }
%"class.std::__1::__tree.681" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.682", %"class.std::__1::__compressed_pair.686" }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.686" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.694" = type { %"class.std::__1::__compressed_pair.695" }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.696" = type { %"class.spvtools::opt::LivenessAnalysis"* }
%"class.spvtools::opt::LivenessAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.697" }
%"class.std::__1::unordered_map.697" = type { %"class.std::__1::__hash_table.698" }
%"class.std::__1::__hash_table.698" = type <{ %"class.std::__1::unique_ptr.699", %"class.std::__1::__compressed_pair.709", %"class.std::__1::__compressed_pair.714", %"class.std::__1::__compressed_pair.717", [4 x i8] }>
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701", %"struct.std::__1::__compressed_pair_elem.703" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"struct.std::__1::__hash_node_base.702"** }
%"struct.std::__1::__hash_node_base.702" = type { %"struct.std::__1::__hash_node_base.702"* }
%"struct.std::__1::__compressed_pair_elem.703" = type { %"class.std::__1::__bucket_list_deallocator.704" }
%"class.std::__1::__bucket_list_deallocator.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem.710" }
%"struct.std::__1::__compressed_pair_elem.710" = type { %"struct.std::__1::__hash_node_base.702" }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.724" = type { %"class.std::__1::__compressed_pair.725" }
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"struct.std::__1::__compressed_pair_elem.726" = type { %"class.spvtools::opt::ValueNumberTable"* }
%"class.spvtools::opt::ValueNumberTable" = type <{ %"class.std::__1::unordered_map.727", %"class.std::__1::unordered_map.249", %"class.spvtools::opt::IRContext"*, i32, [4 x i8] }>
%"class.std::__1::unordered_map.727" = type { %"class.std::__1::__hash_table.728" }
%"class.std::__1::__hash_table.728" = type <{ %"class.std::__1::unique_ptr.729", %"class.std::__1::__compressed_pair.739", %"class.std::__1::__compressed_pair.744", %"class.std::__1::__compressed_pair.747", [4 x i8] }>
%"class.std::__1::unique_ptr.729" = type { %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731", %"struct.std::__1::__compressed_pair_elem.733" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"struct.std::__1::__hash_node_base.732"** }
%"struct.std::__1::__hash_node_base.732" = type { %"struct.std::__1::__hash_node_base.732"* }
%"struct.std::__1::__compressed_pair_elem.733" = type { %"class.std::__1::__bucket_list_deallocator.734" }
%"class.std::__1::__bucket_list_deallocator.734" = type { %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"struct.std::__1::__hash_node_base.732" }
%"class.std::__1::__compressed_pair.744" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.747" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.754" = type { %"class.std::__1::__compressed_pair.755" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"class.spvtools::opt::InstructionFolder"* }
%"class.spvtools::opt::InstructionFolder" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unique_ptr.757", %"class.std::__1::unique_ptr.817" }
%"class.std::__1::unique_ptr.757" = type { %"class.std::__1::__compressed_pair.758" }
%"class.std::__1::__compressed_pair.758" = type { %"struct.std::__1::__compressed_pair_elem.759" }
%"struct.std::__1::__compressed_pair_elem.759" = type { %"class.spvtools::opt::ConstantFoldingRules"* }
%"class.spvtools::opt::ConstantFoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.760", %"class.std::__1::map.784", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.795" }
%"class.std::__1::unordered_map.760" = type { %"class.std::__1::__hash_table.761" }
%"class.std::__1::__hash_table.761" = type <{ %"class.std::__1::unique_ptr.762", %"class.std::__1::__compressed_pair.772", %"class.std::__1::__compressed_pair.777", %"class.std::__1::__compressed_pair.780", [4 x i8] }>
%"class.std::__1::unique_ptr.762" = type { %"class.std::__1::__compressed_pair.763" }
%"class.std::__1::__compressed_pair.763" = type { %"struct.std::__1::__compressed_pair_elem.764", %"struct.std::__1::__compressed_pair_elem.766" }
%"struct.std::__1::__compressed_pair_elem.764" = type { %"struct.std::__1::__hash_node_base.765"** }
%"struct.std::__1::__hash_node_base.765" = type { %"struct.std::__1::__hash_node_base.765"* }
%"struct.std::__1::__compressed_pair_elem.766" = type { %"class.std::__1::__bucket_list_deallocator.767" }
%"class.std::__1::__bucket_list_deallocator.767" = type { %"class.std::__1::__compressed_pair.768" }
%"class.std::__1::__compressed_pair.768" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.772" = type { %"struct.std::__1::__compressed_pair_elem.773" }
%"struct.std::__1::__compressed_pair_elem.773" = type { %"struct.std::__1::__hash_node_base.765" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.784" = type { %"class.std::__1::__tree.785" }
%"class.std::__1::__tree.785" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.786", %"class.std::__1::__compressed_pair.790" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.795" = type { %"class.std::__1::__vector_base.796" }
%"class.std::__1::__vector_base.796" = type { %"class.std::__1::function.797"*, %"class.std::__1::function.797"*, %"class.std::__1::__compressed_pair.809" }
%"class.std::__1::function.797" = type { %"class.std::__1::__function::__policy_func.800" }
%"class.std::__1::__function::__policy_func.800" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.801", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.801" = type { %"class.spvtools::opt::analysis::Constant"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::vector.802" = type { %"class.std::__1::__vector_base.803" }
%"class.std::__1::__vector_base.803" = type { %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"**, %"class.std::__1::__compressed_pair.804" }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"struct.std::__1::__compressed_pair_elem.805" = type { %"class.spvtools::opt::analysis::Constant"** }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.810" }
%"struct.std::__1::__compressed_pair_elem.810" = type { %"class.std::__1::function.797"* }
%"class.std::__1::unique_ptr.817" = type { %"class.std::__1::__compressed_pair.818" }
%"class.std::__1::__compressed_pair.818" = type { %"struct.std::__1::__compressed_pair_elem.819" }
%"struct.std::__1::__compressed_pair_elem.819" = type { %"class.spvtools::opt::FoldingRules"* }
%"class.spvtools::opt::FoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.820", %"class.std::__1::map.844", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.855" }
%"class.std::__1::unordered_map.820" = type { %"class.std::__1::__hash_table.821" }
%"class.std::__1::__hash_table.821" = type <{ %"class.std::__1::unique_ptr.822", %"class.std::__1::__compressed_pair.832", %"class.std::__1::__compressed_pair.837", %"class.std::__1::__compressed_pair.840", [4 x i8] }>
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824", %"struct.std::__1::__compressed_pair_elem.826" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"struct.std::__1::__hash_node_base.825"** }
%"struct.std::__1::__hash_node_base.825" = type { %"struct.std::__1::__hash_node_base.825"* }
%"struct.std::__1::__compressed_pair_elem.826" = type { %"class.std::__1::__bucket_list_deallocator.827" }
%"class.std::__1::__bucket_list_deallocator.827" = type { %"class.std::__1::__compressed_pair.828" }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.832" = type { %"struct.std::__1::__compressed_pair_elem.833" }
%"struct.std::__1::__compressed_pair_elem.833" = type { %"struct.std::__1::__hash_node_base.825" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.840" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.844" = type { %"class.std::__1::__tree.845" }
%"class.std::__1::__tree.845" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.846", %"class.std::__1::__compressed_pair.850" }
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.855" = type { %"class.std::__1::__vector_base.856" }
%"class.std::__1::__vector_base.856" = type { %"class.std::__1::function.857"*, %"class.std::__1::function.857"*, %"class.std::__1::__compressed_pair.862" }
%"class.std::__1::function.857" = type { %"class.std::__1::__function::__policy_func.860" }
%"class.std::__1::__function::__policy_func.860" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.861", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.861" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.863" }
%"struct.std::__1::__compressed_pair_elem.863" = type { %"class.std::__1::function.857"* }
%"class.std::__1::unique_ptr.873" = type { %"class.std::__1::__compressed_pair.874" }
%"class.std::__1::__compressed_pair.874" = type { %"struct.std::__1::__compressed_pair_elem.875" }
%"struct.std::__1::__compressed_pair_elem.875" = type { %"class.spvtools::opt::StructuredCFGAnalysis"* }
%"class.spvtools::opt::StructuredCFGAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.876", %"class.spvtools::utils::BitVector" }
%"class.std::__1::unordered_map.876" = type { %"class.std::__1::__hash_table.877" }
%"class.std::__1::__hash_table.877" = type <{ %"class.std::__1::unique_ptr.878", %"class.std::__1::__compressed_pair.888", %"class.std::__1::__compressed_pair.893", %"class.std::__1::__compressed_pair.896", [4 x i8] }>
%"class.std::__1::unique_ptr.878" = type { %"class.std::__1::__compressed_pair.879" }
%"class.std::__1::__compressed_pair.879" = type { %"struct.std::__1::__compressed_pair_elem.880", %"struct.std::__1::__compressed_pair_elem.882" }
%"struct.std::__1::__compressed_pair_elem.880" = type { %"struct.std::__1::__hash_node_base.881"** }
%"struct.std::__1::__hash_node_base.881" = type { %"struct.std::__1::__hash_node_base.881"* }
%"struct.std::__1::__compressed_pair_elem.882" = type { %"class.std::__1::__bucket_list_deallocator.883" }
%"class.std::__1::__bucket_list_deallocator.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.888" = type { %"struct.std::__1::__compressed_pair_elem.889" }
%"struct.std::__1::__compressed_pair_elem.889" = type { %"struct.std::__1::__hash_node_base.881" }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.896" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.spvtools::utils::BitVector" = type { %"class.std::__1::vector.900" }
%"class.std::__1::vector.900" = type { %"class.std::__1::__vector_base.901" }
%"class.std::__1::__vector_base.901" = type { i64*, i64*, %"class.std::__1::__compressed_pair.902" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.903" }
%"struct.std::__1::__compressed_pair_elem.903" = type { i64* }
%"class.std::__1::function.910" = type { %"class.std::__1::__function::__policy_func.914" }
%"class.std::__1::__function::__policy_func.914" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.915", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.915" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::BasicBlock"*)* }
%"class.spvtools::opt::analysis::Integer" = type <{ %"class.spvtools::opt::analysis::Type.base", i32, i8, [7 x i8] }>
%"class.spvtools::opt::analysis::Type.base" = type <{ i32 (...)**, %"class.std::__1::vector.463", i32 }>
%"class.std::__1::function.916" = type { %"class.std::__1::__function::__policy_func.920" }
%"class.std::__1::__function::__policy_func.920" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.921", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.921" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }
%"struct.std::__1::default_delete.150" = type { i8 }
%"struct.std::__1::default_delete.120" = type { i8 }
%"class.spvtools::opt::analysis::Pointer" = type <{ %"class.spvtools::opt::analysis::Type.base", [4 x i8], %"class.spvtools::opt::analysis::Type"*, i32, [4 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.spvtools::opt::InstructionBuilder" = type <{ %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::InstructionList::iterator", i32, [4 x i8] }>
%"class.spvtools::opt::InstructionList::iterator" = type { %"class.spvtools::utils::IntrusiveList<spvtools::opt::Instruction>::iterator_template" }
%"class.spvtools::utils::IntrusiveList<spvtools::opt::Instruction>::iterator_template" = type { %"class.spvtools::opt::Instruction"* }
%"class.spvtools::opt::analysis::Struct" = type { %"class.spvtools::opt::analysis::Type.base", %"class.std::__1::vector.923", %"class.std::__1::map.930" }
%"class.std::__1::vector.923" = type { %"class.std::__1::__vector_base.924" }
%"class.std::__1::__vector_base.924" = type { %"class.spvtools::opt::analysis::Type"**, %"class.spvtools::opt::analysis::Type"**, %"class.std::__1::__compressed_pair.925" }
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.926" }
%"struct.std::__1::__compressed_pair_elem.926" = type { %"class.spvtools::opt::analysis::Type"** }
%"class.std::__1::map.930" = type { %"class.std::__1::__tree.931" }
%"class.std::__1::__tree.931" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.932", %"class.std::__1::__compressed_pair.936" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.936" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::opt::Pass" = type <{ i32 (...)**, %"class.std::__1::function", %"class.spvtools::opt::IRContext"*, i8, [7 x i8] }>
%"class.spvtools::utils::IntrusiveNodeBase" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8, [7 x i8] }>
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::pair.966" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::pair.966" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::__tree_node.981" = type { %"class.std::__1::__tree_node_base.base", [7 x i8], %"struct.std::__1::__value_type" }
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.982" }
%"struct.std::__1::pair.982" = type <{ %"class.spvtools::opt::analysis::Constant"*, i32, [4 x i8] }>
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.spvtools::opt::Instruction"** }
%"class.std::__1::tuple.1010" = type { i8 }
%"class.std::__1::function.999" = type { %"class.std::__1::__function::__policy_func.1003" }
%"class.std::__1::__function::__policy_func.1003" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1004", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1004" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }
%"class.std::__1::function.990" = type { %"class.std::__1::__function::__policy_func.994" }
%"class.std::__1::__function::__policy_func.994" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.995", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.995" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }

$_ZN8spvtools3opt18InstructionBuilder7AddIAddEjjj = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev = comdat any

$_ZN8spvtools3opt4PassD2Ev = comdat any

$_ZN8spvtools3opt19CombineAccessChainsD0Ev = comdat any

$_ZNK8spvtools3opt19CombineAccessChains4nameEv = comdat any

$_ZN8spvtools3opt19CombineAccessChains20GetPreservedAnalysesEv = comdat any

$_ZN8spvtools3opt3CFGD2Ev = comdat any

$_ZN8spvtools3opt15InstructionListD2Ev = comdat any

$_ZN8spvtools3opt15InstructionListD0Ev = comdat any

$_ZN8spvtools3opt11InstructionD2Ev = comdat any

$_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev = comdat any

$_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev = comdat any

$_ZN8spvtools3opt11InstructionD0Ev = comdat any

$_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev = comdat any

$_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt8analysis17DecorationManagerEEclEPS4_ = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_ = comdat any

$_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZN8spvtools3opt8analysis11TypeManagerD2Ev = comdat any

$_ZN8spvtools3opt8analysis15ConstantManagerD2Ev = comdat any

$_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE = comdat any

$_ZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEv = comdat any

$_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_ = comdat any

$_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9IRContext24BuildInstrToBlockMappingEvEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm = comdat any

$_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_ = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev = comdat any

$_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_ = comdat any

$_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE6insertINS_11__wrap_iterIPS3_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISC_E9referenceEEE5valueESA_E4typeENS8_IPKS3_EESC_SC_ = comdat any

$_ZN8spvtools3opt4PassD0Ev = comdat any

$_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv = comdat any

$_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_ = comdat any

$_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_ = comdat any

$_ZTVN8spvtools3opt15InstructionListE = comdat any

$_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE = comdat any

$_ZTVN8spvtools3opt11InstructionE = comdat any

$_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEvEUlPNS5_11InstructionEE_FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = comdat any

$_ZTVN8spvtools3opt4PassE = comdat any

@_ZTVN8spvtools3opt19CombineAccessChainsE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::CombineAccessChains"*)* @_ZN8spvtools3opt19CombineAccessChainsD0Ev to i8*), i8* bitcast (i8* (%"class.spvtools::opt::CombineAccessChains"*)* @_ZNK8spvtools3opt19CombineAccessChains4nameEv to i8*), i8* bitcast (i32 (%"class.spvtools::opt::CombineAccessChains"*)* @_ZN8spvtools3opt19CombineAccessChains20GetPreservedAnalysesEv to i8*), i8* bitcast (i32 (%"class.spvtools::opt::CombineAccessChains"*)* @_ZN8spvtools3opt19CombineAccessChains7ProcessEv to i8*)] }, align 8
@_ZTVN8spvtools3opt15InstructionListE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::InstructionList"*)* @_ZN8spvtools3opt15InstructionListD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::InstructionList"*)* @_ZN8spvtools3opt15InstructionListD0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::IntrusiveList"*)* @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::IntrusiveList"*)* @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools3opt11InstructionE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::Instruction"*)* @_ZN8spvtools3opt11InstructionD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::Instruction"*)* @_ZN8spvtools3opt11InstructionD0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::IntrusiveNodeBase"*)* @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::IntrusiveNodeBase"*)* @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev to i8*)] }, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEvEUlPNS5_11InstructionEE_FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@.str.1 = private unnamed_addr constant [38 x i8] c"ID overflow. Try running compact-ids.\00", align 1
@.str.2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.ref.tmp = private constant %struct.spv_position_t zeroinitializer, align 8
@_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools3opt4PassE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.3 = private unnamed_addr constant [22 x i8] c"combine-access-chains\00", align 1
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZZN8spvtools3opt19CombineAccessChains15ProcessFunctionERNS5_8FunctionEENK3$_0clEPNS5_10BasicBlockEEUlPNS5_11InstructionEE_FvSD_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt19CombineAccessChains15ProcessFunctionERNS5_8FunctionEE3$_0FvPNS5_10BasicBlockEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt19CombineAccessChains14GetArrayStrideEPKNS5_11InstructionEE3$_1FbRS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt19CombineAccessChains7ProcessEv(%"class.spvtools::opt::CombineAccessChains"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::CombineAccessChains", %"class.spvtools::opt::CombineAccessChains"* %0, i64 0, i32 0, i32 2
  %3 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %2, align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %3, i64 0, i32 4, i32 0, i32 0, i32 0
  %5 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %4, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %5, i64 0, i32 15, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %5, i64 0, i32 15, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr.28"* %7, %9
  br i1 %10, label %13, label %15

11:                                               ; preds = %15
  %12 = select i1 %21, i32 16, i32 17
  br label %13

13:                                               ; preds = %11, %1
  %14 = phi i32 [ 17, %1 ], [ %12, %11 ]
  ret i32 %14

15:                                               ; preds = %1, %15
  %16 = phi i1 [ %21, %15 ], [ false, %1 ]
  %17 = phi %"class.std::__1::unique_ptr.28"* [ %22, %15 ], [ %7, %1 ]
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %18, align 8
  %20 = tail call zeroext i1 @_ZN8spvtools3opt19CombineAccessChains15ProcessFunctionERNS0_8FunctionE(%"class.spvtools::opt::CombineAccessChains"* %0, %"class.spvtools::opt::Function"* dereferenceable(208) %19)
  %21 = or i1 %16, %20
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %17, i64 1
  %23 = icmp eq %"class.std::__1::unique_ptr.28"* %22, %9
  br i1 %23, label %11, label %15
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt19CombineAccessChains15ProcessFunctionERNS0_8FunctionE(%"class.spvtools::opt::CombineAccessChains"*, %"class.spvtools::opt::Function"* nocapture readonly dereferenceable(208)) local_unnamed_addr #0 align 2 {
  %3 = alloca i8, align 1
  %4 = alloca %"class.std::__1::function.910", align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #11
  store i8 0, i8* %3, align 1
  %5 = getelementptr inbounds %"class.spvtools::opt::CombineAccessChains", %"class.spvtools::opt::CombineAccessChains"* %0, i64 0, i32 0, i32 2
  %6 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 11
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 16
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %27

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  %13 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %12, align 8
  %14 = tail call i8* @_Znwm(i64 400) #12
  %15 = bitcast i8* %14 to %"class.spvtools::opt::CFG"*
  tail call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %15, %"class.spvtools::opt::Module"* %13) #11
  %16 = ptrtoint i8* %14 to i64
  %17 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 15
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %18, align 8
  %20 = bitcast %"class.std::__1::unique_ptr.273"* %17 to i64*
  store i64 %16, i64* %20, align 8
  %21 = icmp eq %"class.spvtools::opt::CFG"* %19, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %11
  tail call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %19) #11
  %23 = bitcast %"class.spvtools::opt::CFG"* %19 to i8*
  tail call void @_ZdlPv(i8* %23) #12
  br label %24

24:                                               ; preds = %22, %11
  %25 = load i32, i32* %7, align 8
  %26 = or i32 %25, 16
  store i32 %26, i32* %7, align 8
  br label %27

27:                                               ; preds = %2, %24
  %28 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 15, i32 0, i32 0, i32 0
  %29 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %28, align 8
  %30 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1, i64 0, i32 3, i32 0, i32 0
  %31 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %30, align 8
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %31, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %32, align 8
  %34 = bitcast %"class.std::__1::function.910"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %34) #11
  %35 = getelementptr inbounds %"class.std::__1::function.910", %"class.std::__1::function.910"* %4, i64 0, i32 0, i32 1, i32 0
  %36 = getelementptr inbounds %"class.std::__1::function.910", %"class.std::__1::function.910"* %4, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::BasicBlock"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt10BasicBlockEEE11__call_implINS0_20__default_alloc_funcIZNS3_19CombineAccessChains15ProcessFunctionERNS3_8FunctionEE3$_0S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::BasicBlock"*)** %35, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt19CombineAccessChains15ProcessFunctionERNS5_8FunctionEE3$_0FvPNS5_10BasicBlockEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %36, align 8
  %37 = getelementptr inbounds %"class.std::__1::function.910", %"class.std::__1::function.910"* %4, i64 0, i32 0, i32 0, i32 0
  store i8* %3, i8** %37, align 8
  %38 = getelementptr inbounds %"class.std::__1::function.910", %"class.std::__1::function.910"* %4, i64 0, i32 0, i32 0, i32 1
  %39 = bitcast [8 x i8]* %38 to %"class.spvtools::opt::CombineAccessChains"**
  store %"class.spvtools::opt::CombineAccessChains"* %0, %"class.spvtools::opt::CombineAccessChains"** %39, align 8
  call void @_ZN8spvtools3opt3CFG30ForEachBlockInReversePostOrderEPNS0_10BasicBlockERKNSt3__18functionIFvS3_EEE(%"class.spvtools::opt::CFG"* %29, %"class.spvtools::opt::BasicBlock"* %33, %"class.std::__1::function.910"* nonnull dereferenceable(32) %4) #11
  %40 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %36, align 8
  %41 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %40, i64 0, i32 1
  %42 = load void (i8*)*, void (i8*)** %41, align 8
  %43 = icmp eq void (i8*)* %42, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %27
  %45 = load i8*, i8** %37, align 8
  call void %42(i8* %45) #11
  br label %46

46:                                               ; preds = %27, %44
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %34) #11
  %47 = load i8, i8* %3, align 1, !range !2
  %48 = icmp ne i8 %47, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #11
  ret i1 %48
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN8spvtools3opt3CFG30ForEachBlockInReversePostOrderEPNS0_10BasicBlockERKNSt3__18functionIFvS3_EEE(%"class.spvtools::opt::CFG"*, %"class.spvtools::opt::BasicBlock"*, %"class.std::__1::function.910"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt19CombineAccessChains16GetConstantValueEPKNS0_8analysis8ConstantE(%"class.spvtools::opt::CombineAccessChains"* nocapture readnone, %"class.spvtools::opt::analysis::Constant"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant", %"class.spvtools::opt::analysis::Constant"* %1, i64 0, i32 1
  %4 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %3, align 8
  %5 = bitcast %"class.spvtools::opt::analysis::Type"* %4 to %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)***
  %6 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %6, i64 11
  %8 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %7, align 8
  %9 = tail call %"class.spvtools::opt::analysis::Integer"* %8(%"class.spvtools::opt::analysis::Type"* %4) #11
  %10 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %9, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp ult i32 %11, 33
  br i1 %12, label %13, label %27

13:                                               ; preds = %2
  %14 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %3, align 8
  %15 = bitcast %"class.spvtools::opt::analysis::Type"* %14 to %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)***
  %16 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*** %15, align 8
  %17 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %16, i64 11
  %18 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %17, align 8
  %19 = tail call %"class.spvtools::opt::analysis::Integer"* %18(%"class.spvtools::opt::analysis::Type"* %14) #11
  %20 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %19, i64 0, i32 2
  %21 = load i8, i8* %20, align 8, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %13
  %24 = tail call i32 @_ZNK8spvtools3opt8analysis8Constant6GetS32Ev(%"class.spvtools::opt::analysis::Constant"* %1) #11
  br label %27

25:                                               ; preds = %13
  %26 = tail call i32 @_ZNK8spvtools3opt8analysis8Constant6GetU32Ev(%"class.spvtools::opt::analysis::Constant"* %1) #11
  br label %27

27:                                               ; preds = %2, %25, %23
  %28 = phi i32 [ %24, %23 ], [ %26, %25 ], [ 0, %2 ]
  ret i32 %28
}

declare i32 @_ZNK8spvtools3opt8analysis8Constant6GetS32Ev(%"class.spvtools::opt::analysis::Constant"*) local_unnamed_addr #2

declare i32 @_ZNK8spvtools3opt8analysis8Constant6GetU32Ev(%"class.spvtools::opt::analysis::Constant"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt19CombineAccessChains14GetArrayStrideEPKNS0_11InstructionE(%"class.spvtools::opt::CombineAccessChains"* nocapture readonly, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.std::__1::function.916", align 8
  %5 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #11
  store i32 0, i32* %3, align 4
  %6 = getelementptr inbounds %"class.spvtools::opt::CombineAccessChains", %"class.spvtools::opt::CombineAccessChains"* %0, i64 0, i32 0, i32 2
  %7 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 11
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %33

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 4, i32 0, i32 0, i32 0
  %14 = bitcast %"class.spvtools::opt::Module"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = tail call i8* @_Znwm(i64 48) #12
  %17 = bitcast i8* %16 to %"class.spvtools::opt::analysis::DecorationManager"*
  %18 = getelementptr inbounds i8, i8* %16, i64 32
  %19 = bitcast i8* %18 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %19, align 4
  %20 = getelementptr inbounds i8, i8* %16, i64 40
  %21 = bitcast i8* %20 to i64*
  store i64 %15, i64* %21, align 8
  tail call void @_ZN8spvtools3opt8analysis17DecorationManager18AnalyzeDecorationsEv(%"class.spvtools::opt::analysis::DecorationManager"* nonnull %17) #11
  %22 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 7
  %23 = ptrtoint i8* %16 to i64
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.122"* %22, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %24, align 8
  %26 = bitcast %"class.std::__1::unique_ptr.122"* %22 to i64*
  store i64 %23, i64* %26, align 8
  %27 = icmp eq %"class.spvtools::opt::analysis::DecorationManager"* %25, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %12
  %29 = bitcast %"class.std::__1::unique_ptr.122"* %22 to %"struct.std::__1::default_delete.150"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis17DecorationManagerEEclEPS4_(%"struct.std::__1::default_delete.150"* %29, %"class.spvtools::opt::analysis::DecorationManager"* nonnull %25) #11
  br label %30

30:                                               ; preds = %28, %12
  %31 = load i32, i32* %8, align 8
  %32 = or i32 %31, 4
  store i32 %32, i32* %8, align 8
  br label %33

33:                                               ; preds = %2, %30
  %34 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 7, i32 0, i32 0, i32 0
  %35 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %34, align 8
  %36 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %37 = load i8, i8* %36, align 4, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %41, label %39

39:                                               ; preds = %33
  %40 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 0) #11
  br label %41

41:                                               ; preds = %33, %39
  %42 = phi i32 [ %40, %39 ], [ 0, %33 ]
  %43 = ptrtoint i32* %3 to i64
  %44 = getelementptr inbounds %"class.std::__1::function.916", %"class.std::__1::function.916"* %4, i64 0, i32 0, i32 1, i32 0
  %45 = getelementptr inbounds %"class.std::__1::function.916", %"class.std::__1::function.916"* %4, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFbRKN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_19CombineAccessChains14GetArrayStrideEPS5_E3$_1S7_EEEEbPKNS0_16__policy_storageES6_", i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %44, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt19CombineAccessChains14GetArrayStrideEPKNS5_11InstructionEE3$_1FbRS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %45, align 8
  %46 = bitcast %"class.std::__1::function.916"* %4 to i64*
  store i64 %43, i64* %46, align 8
  %47 = call zeroext i1 @_ZN8spvtools3opt8analysis17DecorationManager19WhileEachDecorationEjjNSt3__18functionIFbRKNS0_11InstructionEEEE(%"class.spvtools::opt::analysis::DecorationManager"* %35, i32 %42, i32 6, %"class.std::__1::function.916"* nonnull %4) #11
  %48 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %45, align 8
  %49 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %48, i64 0, i32 1
  %50 = load void (i8*)*, void (i8*)** %49, align 8
  %51 = icmp eq void (i8*)* %50, null
  br i1 %51, label %55, label %52

52:                                               ; preds = %41
  %53 = getelementptr inbounds %"class.std::__1::function.916", %"class.std::__1::function.916"* %4, i64 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  call void %50(i8* %54) #11
  br label %55

55:                                               ; preds = %41, %52
  %56 = load i32, i32* %3, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #11
  ret i32 %56
}

declare zeroext i1 @_ZN8spvtools3opt8analysis17DecorationManager19WhileEachDecorationEjjNSt3__18functionIFbRKNS0_11InstructionEEEE(%"class.spvtools::opt::analysis::DecorationManager"*, i32, i32, %"class.std::__1::function.916"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.spvtools::opt::analysis::Type"* @_ZN8spvtools3opt19CombineAccessChains14GetIndexedTypeEPNS0_11InstructionE(%"class.spvtools::opt::CombineAccessChains"* nocapture readonly, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.3", align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::CombineAccessChains", %"class.spvtools::opt::CombineAccessChains"* %0, i64 0, i32 0, i32 2
  %5 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %4, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 11
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 1
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %37

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 4, i32 0, i32 0, i32 0
  %12 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %11, align 8
  %13 = tail call i8* @_Znwm(i64 104) #12
  %14 = bitcast i8* %13 to %"class.spvtools::opt::analysis::DefUseManager"*
  %15 = getelementptr inbounds i8, i8* %13, i64 32
  %16 = bitcast i8* %15 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %16, align 4
  %17 = getelementptr inbounds i8, i8* %13, i64 48
  %18 = getelementptr inbounds i8, i8* %13, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #11
  %19 = bitcast i8* %18 to i8**
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds i8, i8* %13, i64 64
  %21 = getelementptr inbounds i8, i8* %13, i64 96
  %22 = bitcast i8* %21 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %22, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %14, %"class.spvtools::opt::Module"* %12) #11
  %23 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 6
  %24 = ptrtoint i8* %13 to i64
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %23, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %25, align 8
  %27 = bitcast %"class.std::__1::unique_ptr.62"* %23 to i64*
  store i64 %24, i64* %27, align 8
  %28 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %26, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %10
  %30 = bitcast %"class.std::__1::unique_ptr.62"* %23 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %30, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %26) #11
  br label %31

31:                                               ; preds = %29, %10
  %32 = load i32, i32* %6, align 8
  %33 = or i32 %32, 1
  store i32 %33, i32* %6, align 8
  %34 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %4, align 8
  %35 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %34, i64 0, i32 11
  %36 = load i32, i32* %35, align 8
  br label %37

37:                                               ; preds = %2, %31
  %38 = phi i32 [ %7, %2 ], [ %36, %31 ]
  %39 = phi %"class.spvtools::opt::IRContext"* [ %5, %2 ], [ %34, %31 ]
  %40 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 6, i32 0, i32 0, i32 0
  %41 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %40, align 8
  %42 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %39, i64 0, i32 11
  %43 = trunc i32 %38 to i16
  %44 = icmp slt i16 %43, 0
  br i1 %44, label %60, label %45

45:                                               ; preds = %37
  %46 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %39, i64 0, i32 5
  %47 = tail call i8* @_Znwm(i64 240) #12
  %48 = bitcast i8* %47 to %"class.spvtools::opt::analysis::TypeManager"*
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %48, %"class.std::__1::function"* dereferenceable(32) %46, %"class.spvtools::opt::IRContext"* %39) #11
  %49 = ptrtoint i8* %47 to i64
  %50 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %39, i64 0, i32 20
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %50, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %51, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.480"* %50 to i64*
  store i64 %49, i64* %53, align 8
  %54 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %52, null
  br i1 %54, label %57, label %55

55:                                               ; preds = %45
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %52) #11
  %56 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %52 to i8*
  tail call void @_ZdlPv(i8* %56) #12
  br label %57

57:                                               ; preds = %55, %45
  %58 = load i32, i32* %42, align 8
  %59 = or i32 %58, 32768
  store i32 %59, i32* %42, align 8
  br label %60

60:                                               ; preds = %37, %57
  %61 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %39, i64 0, i32 20, i32 0, i32 0, i32 0
  %62 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %61, align 8
  %63 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %64 = load i8, i8* %63, align 4, !range !2
  %65 = icmp eq i8 %64, 0
  %66 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %67 = load i8, i8* %66, align 1, !range !2
  %68 = icmp eq i8 %67, 0
  %69 = select i1 %68, i32 1, i32 2
  %70 = xor i1 %68, true
  %71 = zext i1 %70 to i32
  %72 = select i1 %65, i32 %71, i32 %69
  %73 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %72) #11
  %74 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %41, i32 %73) #11
  %75 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %74, i64 0, i32 3
  %76 = load i8, i8* %75, align 4, !range !2
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %80, label %78

78:                                               ; preds = %60
  %79 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %74, i32 0) #11
  br label %80

80:                                               ; preds = %60, %78
  %81 = phi i32 [ %79, %78 ], [ 0, %60 ]
  %82 = tail call %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis11TypeManager7GetTypeEj(%"class.spvtools::opt::analysis::TypeManager"* %62, i32 %81) #11
  %83 = bitcast %"class.spvtools::opt::analysis::Type"* %82 to %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)***
  %84 = load %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)*** %83, align 8
  %85 = getelementptr inbounds %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)** %84, i64 33
  %86 = load %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)** %85, align 8
  %87 = tail call %"class.spvtools::opt::analysis::Pointer"* %86(%"class.spvtools::opt::analysis::Type"* %82) #11
  %88 = getelementptr inbounds %"class.spvtools::opt::analysis::Pointer", %"class.spvtools::opt::analysis::Pointer"* %87, i64 0, i32 2
  %89 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %88, align 8
  %90 = bitcast %"class.std::__1::vector.3"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #11
  %91 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %3, i64 0, i32 0, i32 0
  %92 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %3, i64 0, i32 0, i32 1
  %93 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 0, i64 24, i1 false) #11
  %94 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %95 = load i32, i32* %94, align 8
  %96 = icmp eq i32 %95, 67
  %97 = icmp eq i32 %95, 70
  %98 = or i1 %96, %97
  %99 = select i1 %98, i32 2, i32 1
  %100 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  %101 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %102 = bitcast %"struct.spvtools::opt::Operand"** %101 to i64*
  %103 = bitcast %"class.std::__1::vector"* %100 to i64*
  %104 = bitcast i32** %92 to i64*
  %105 = bitcast %"class.std::__1::vector.3"* %3 to i64*
  %106 = bitcast i32** %93 to i64*
  br label %107

107:                                              ; preds = %293, %80
  %108 = phi i32* [ null, %80 ], [ %294, %293 ]
  %109 = phi i64 [ 0, %80 ], [ %295, %293 ]
  %110 = phi i32 [ %99, %80 ], [ %296, %293 ]
  %111 = load i64, i64* %102, align 8
  %112 = load i64, i64* %103, align 8
  %113 = sub i64 %111, %112
  %114 = sdiv exact i64 %113, 48
  %115 = load i8, i8* %63, align 4, !range !2
  %116 = icmp eq i8 %115, 0
  %117 = load i8, i8* %66, align 1, !range !2
  %118 = icmp eq i8 %117, 0
  %119 = select i1 %118, i32 1, i32 2
  %120 = xor i1 %118, true
  %121 = zext i1 %120 to i32
  %122 = select i1 %116, i32 %121, i32 %119
  %123 = trunc i64 %114 to i32
  %124 = sub i32 %123, %122
  %125 = icmp ult i32 %110, %124
  br i1 %125, label %134, label %126

126:                                              ; preds = %107
  %127 = call %"class.spvtools::opt::analysis::Type"* @_ZN8spvtools3opt8analysis11TypeManager13GetMemberTypeEPKNS1_4TypeERKNSt3__16vectorIjNS6_9allocatorIjEEEE(%"class.spvtools::opt::analysis::TypeManager"* %62, %"class.spvtools::opt::analysis::Type"* %89, %"class.std::__1::vector.3"* nonnull dereferenceable(24) %3) #11
  %128 = load i32*, i32** %91, align 8
  %129 = icmp eq i32* %128, null
  br i1 %129, label %133, label %130

130:                                              ; preds = %126
  %131 = ptrtoint i32* %128 to i64
  store i64 %131, i64* %104, align 8
  %132 = bitcast i32* %128 to i8*
  call void @_ZdlPv(i8* %132) #12
  br label %133

133:                                              ; preds = %126, %130
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #11
  ret %"class.spvtools::opt::analysis::Type"* %127

134:                                              ; preds = %107
  %135 = add i32 %122, %110
  %136 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %135) #11
  %137 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %41, i32 %136) #11
  %138 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %4, align 8
  %139 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %138, i64 0, i32 11
  %140 = load i32, i32* %139, align 8
  %141 = and i32 %140, 16384
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %157

143:                                              ; preds = %134
  %144 = tail call i8* @_Znwm(i64 136) #12
  %145 = bitcast i8* %144 to %"class.spvtools::opt::analysis::ConstantManager"*
  tail call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %145, %"class.spvtools::opt::IRContext"* %138) #11
  %146 = ptrtoint i8* %144 to i64
  %147 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %138, i64 0, i32 19
  %148 = getelementptr inbounds %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400"* %147, i64 0, i32 0, i32 0, i32 0
  %149 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %148, align 8
  %150 = bitcast %"class.std::__1::unique_ptr.400"* %147 to i64*
  store i64 %146, i64* %150, align 8
  %151 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %149, null
  br i1 %151, label %154, label %152

152:                                              ; preds = %143
  tail call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %149) #11
  %153 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %149 to i8*
  tail call void @_ZdlPv(i8* %153) #12
  br label %154

154:                                              ; preds = %152, %143
  %155 = load i32, i32* %139, align 8
  %156 = or i32 %155, 16384
  store i32 %156, i32* %139, align 8
  br label %157

157:                                              ; preds = %134, %154
  %158 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %138, i64 0, i32 19, i32 0, i32 0, i32 0
  %159 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %158, align 8
  %160 = tail call %"class.spvtools::opt::analysis::Constant"* @_ZN8spvtools3opt8analysis15ConstantManager19GetConstantFromInstEPKNS0_11InstructionE(%"class.spvtools::opt::analysis::ConstantManager"* %159, %"class.spvtools::opt::Instruction"* %137) #11
  %161 = icmp eq %"class.spvtools::opt::analysis::Constant"* %160, null
  br i1 %161, label %239, label %162

162:                                              ; preds = %157
  %163 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant", %"class.spvtools::opt::analysis::Constant"* %160, i64 0, i32 1
  %164 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %163, align 8
  %165 = bitcast %"class.spvtools::opt::analysis::Type"* %164 to %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)***
  %166 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*** %165, align 8
  %167 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %166, i64 11
  %168 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %167, align 8
  %169 = tail call %"class.spvtools::opt::analysis::Integer"* %168(%"class.spvtools::opt::analysis::Type"* %164) #11
  %170 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %169, i64 0, i32 1
  %171 = load i32, i32* %170, align 4
  %172 = icmp ult i32 %171, 33
  br i1 %172, label %173, label %187

173:                                              ; preds = %162
  %174 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %163, align 8
  %175 = bitcast %"class.spvtools::opt::analysis::Type"* %174 to %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)***
  %176 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*** %175, align 8
  %177 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %176, i64 11
  %178 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %177, align 8
  %179 = tail call %"class.spvtools::opt::analysis::Integer"* %178(%"class.spvtools::opt::analysis::Type"* %174) #11
  %180 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %179, i64 0, i32 2
  %181 = load i8, i8* %180, align 8, !range !2
  %182 = icmp eq i8 %181, 0
  br i1 %182, label %185, label %183

183:                                              ; preds = %173
  %184 = tail call i32 @_ZNK8spvtools3opt8analysis8Constant6GetS32Ev(%"class.spvtools::opt::analysis::Constant"* nonnull %160) #11
  br label %187

185:                                              ; preds = %173
  %186 = tail call i32 @_ZNK8spvtools3opt8analysis8Constant6GetU32Ev(%"class.spvtools::opt::analysis::Constant"* nonnull %160) #11
  br label %187

187:                                              ; preds = %162, %183, %185
  %188 = phi i32 [ %184, %183 ], [ %186, %185 ], [ 0, %162 ]
  %189 = load i32*, i32** %93, align 8
  %190 = icmp eq i32* %108, %189
  br i1 %190, label %194, label %191

191:                                              ; preds = %187
  store i32 %188, i32* %108, align 4
  %192 = getelementptr inbounds i32, i32* %108, i64 1
  %193 = ptrtoint i32* %192 to i64
  store i64 %193, i64* %104, align 8
  br label %293

194:                                              ; preds = %187
  %195 = ptrtoint i32* %189 to i64
  %196 = load i64, i64* %105, align 8
  %197 = sub i64 %195, %196
  %198 = ashr exact i64 %197, 2
  %199 = add nsw i64 %198, 1
  %200 = icmp ugt i64 %199, 4611686018427387903
  br i1 %200, label %201, label %203

201:                                              ; preds = %194
  %202 = bitcast %"class.std::__1::vector.3"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %202) #13
  unreachable

203:                                              ; preds = %194
  %204 = icmp ult i64 %198, 2305843009213693951
  br i1 %204, label %205, label %213

205:                                              ; preds = %203
  %206 = ashr exact i64 %197, 1
  %207 = icmp ult i64 %206, %199
  %208 = select i1 %207, i64 %199, i64 %206
  %209 = icmp eq i64 %208, 0
  br i1 %209, label %218, label %210

210:                                              ; preds = %205
  %211 = icmp ugt i64 %208, 4611686018427387903
  br i1 %211, label %212, label %213

212:                                              ; preds = %210
  tail call void @abort() #13
  unreachable

213:                                              ; preds = %210, %203
  %214 = phi i64 [ %208, %210 ], [ 4611686018427387903, %203 ]
  %215 = shl i64 %214, 2
  %216 = tail call i8* @_Znwm(i64 %215) #12
  %217 = bitcast i8* %216 to i32*
  br label %218

218:                                              ; preds = %213, %205
  %219 = phi i64 [ %214, %213 ], [ 0, %205 ]
  %220 = phi i32* [ %217, %213 ], [ null, %205 ]
  %221 = getelementptr inbounds i32, i32* %220, i64 %198
  %222 = getelementptr inbounds i32, i32* %220, i64 %219
  %223 = ptrtoint i32* %222 to i64
  store i32 %188, i32* %221, align 4
  %224 = getelementptr inbounds i32, i32* %221, i64 1
  %225 = ptrtoint i32* %224 to i64
  %226 = sub i64 %109, %196
  %227 = ashr exact i64 %226, 2
  %228 = sub nsw i64 0, %227
  %229 = getelementptr inbounds i32, i32* %221, i64 %228
  %230 = ptrtoint i32* %229 to i64
  %231 = icmp sgt i64 %226, 0
  br i1 %231, label %232, label %235

232:                                              ; preds = %218
  %233 = bitcast i32* %229 to i8*
  %234 = inttoptr i64 %196 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %233, i8* align 4 %234, i64 %226, i1 false) #11
  br label %235

235:                                              ; preds = %232, %218
  store i64 %230, i64* %105, align 8
  store i64 %225, i64* %104, align 8
  store i64 %223, i64* %106, align 8
  %236 = icmp eq i64 %196, 0
  br i1 %236, label %293, label %237

237:                                              ; preds = %235
  %238 = inttoptr i64 %196 to i8*
  tail call void @_ZdlPv(i8* %238) #12
  br label %293

239:                                              ; preds = %157
  %240 = load i32*, i32** %93, align 8
  %241 = icmp ult i32* %108, %240
  %242 = ptrtoint i32* %240 to i64
  br i1 %241, label %243, label %246

243:                                              ; preds = %239
  store i32 0, i32* %108, align 4
  %244 = getelementptr inbounds i32, i32* %108, i64 1
  %245 = ptrtoint i32* %244 to i64
  store i64 %245, i64* %104, align 8
  br label %293

246:                                              ; preds = %239
  %247 = ptrtoint i32* %108 to i64
  %248 = load i64, i64* %105, align 8
  %249 = sub i64 %247, %248
  %250 = ashr exact i64 %249, 2
  %251 = add nsw i64 %250, 1
  %252 = icmp ugt i64 %251, 4611686018427387903
  br i1 %252, label %253, label %255

253:                                              ; preds = %246
  %254 = bitcast %"class.std::__1::vector.3"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %254) #13
  unreachable

255:                                              ; preds = %246
  %256 = sub i64 %242, %248
  %257 = ashr exact i64 %256, 2
  %258 = icmp ult i64 %257, 2305843009213693951
  br i1 %258, label %259, label %267

259:                                              ; preds = %255
  %260 = ashr exact i64 %256, 1
  %261 = icmp ult i64 %260, %251
  %262 = select i1 %261, i64 %251, i64 %260
  %263 = icmp eq i64 %262, 0
  br i1 %263, label %272, label %264

264:                                              ; preds = %259
  %265 = icmp ugt i64 %262, 4611686018427387903
  br i1 %265, label %266, label %267

266:                                              ; preds = %264
  tail call void @abort() #13
  unreachable

267:                                              ; preds = %264, %255
  %268 = phi i64 [ %262, %264 ], [ 4611686018427387903, %255 ]
  %269 = shl i64 %268, 2
  %270 = tail call i8* @_Znwm(i64 %269) #12
  %271 = bitcast i8* %270 to i32*
  br label %272

272:                                              ; preds = %267, %259
  %273 = phi i64 [ %268, %267 ], [ 0, %259 ]
  %274 = phi i32* [ %271, %267 ], [ null, %259 ]
  %275 = getelementptr inbounds i32, i32* %274, i64 %250
  %276 = getelementptr inbounds i32, i32* %274, i64 %273
  %277 = ptrtoint i32* %276 to i64
  store i32 0, i32* %275, align 4
  %278 = getelementptr inbounds i32, i32* %275, i64 1
  %279 = ptrtoint i32* %278 to i64
  %280 = sub i64 %109, %248
  %281 = ashr exact i64 %280, 2
  %282 = sub nsw i64 0, %281
  %283 = getelementptr inbounds i32, i32* %275, i64 %282
  %284 = ptrtoint i32* %283 to i64
  %285 = icmp sgt i64 %280, 0
  br i1 %285, label %286, label %289

286:                                              ; preds = %272
  %287 = bitcast i32* %283 to i8*
  %288 = inttoptr i64 %248 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %287, i8* align 4 %288, i64 %280, i1 false) #11
  br label %289

289:                                              ; preds = %286, %272
  store i64 %284, i64* %105, align 8
  store i64 %279, i64* %104, align 8
  store i64 %277, i64* %106, align 8
  %290 = icmp eq i64 %248, 0
  br i1 %290, label %293, label %291

291:                                              ; preds = %289
  %292 = inttoptr i64 %248 to i8*
  tail call void @_ZdlPv(i8* %292) #12
  br label %293

293:                                              ; preds = %291, %289, %243, %237, %235, %191
  %294 = phi i32* [ %278, %291 ], [ %278, %289 ], [ %244, %243 ], [ %224, %237 ], [ %224, %235 ], [ %192, %191 ]
  %295 = phi i64 [ %279, %291 ], [ %279, %289 ], [ %245, %243 ], [ %225, %237 ], [ %225, %235 ], [ %193, %191 ]
  %296 = add nuw i32 %110, 1
  br label %107
}

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"*, i32) local_unnamed_addr #2

declare %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis11TypeManager7GetTypeEj(%"class.spvtools::opt::analysis::TypeManager"*, i32) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt19CombineAccessChains16IsPtrAccessChainE6SpvOp_(%"class.spvtools::opt::CombineAccessChains"* nocapture readnone, i32) local_unnamed_addr #3 align 2 {
  %3 = icmp eq i32 %1, 67
  %4 = icmp eq i32 %1, 70
  %5 = or i1 %3, %4
  ret i1 %5
}

declare %"class.spvtools::opt::analysis::Constant"* @_ZN8spvtools3opt8analysis15ConstantManager19GetConstantFromInstEPKNS0_11InstructionE(%"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

declare %"class.spvtools::opt::analysis::Type"* @_ZN8spvtools3opt8analysis11TypeManager13GetMemberTypeEPKNS1_4TypeERKNSt3__16vectorIjNS6_9allocatorIjEEEE(%"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::Type"*, %"class.std::__1::vector.3"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt19CombineAccessChains14CombineIndicesEPNS0_11InstructionES3_PNSt3__16vectorINS0_7OperandENS4_9allocatorIS6_EEEE(%"class.spvtools::opt::CombineAccessChains"* nocapture readonly, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::vector.3", align 8
  %6 = alloca %"class.spvtools::opt::InstructionBuilder", align 8
  %7 = alloca %"struct.spvtools::opt::Operand", align 8
  %8 = alloca %"class.spvtools::utils::SmallVector", align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::CombineAccessChains", %"class.spvtools::opt::CombineAccessChains"* %0, i64 0, i32 0, i32 2
  %10 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %9, align 8
  %11 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 11
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %42

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 4, i32 0, i32 0, i32 0
  %17 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %16, align 8
  %18 = tail call i8* @_Znwm(i64 104) #12
  %19 = bitcast i8* %18 to %"class.spvtools::opt::analysis::DefUseManager"*
  %20 = getelementptr inbounds i8, i8* %18, i64 32
  %21 = bitcast i8* %20 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %18, i64 48
  %23 = getelementptr inbounds i8, i8* %18, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #11
  %24 = bitcast i8* %23 to i8**
  store i8* %22, i8** %24, align 8
  %25 = getelementptr inbounds i8, i8* %18, i64 64
  %26 = getelementptr inbounds i8, i8* %18, i64 96
  %27 = bitcast i8* %26 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %27, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %19, %"class.spvtools::opt::Module"* %17) #11
  %28 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 6
  %29 = ptrtoint i8* %18 to i64
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %28, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %30, align 8
  %32 = bitcast %"class.std::__1::unique_ptr.62"* %28 to i64*
  store i64 %29, i64* %32, align 8
  %33 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %31, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %15
  %35 = bitcast %"class.std::__1::unique_ptr.62"* %28 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %35, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %31) #11
  br label %36

36:                                               ; preds = %34, %15
  %37 = load i32, i32* %11, align 8
  %38 = or i32 %37, 1
  store i32 %38, i32* %11, align 8
  %39 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %9, align 8
  %40 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %39, i64 0, i32 11
  %41 = load i32, i32* %40, align 8
  br label %42

42:                                               ; preds = %4, %36
  %43 = phi i32 [ %12, %4 ], [ %41, %36 ]
  %44 = phi %"class.spvtools::opt::IRContext"* [ %10, %4 ], [ %39, %36 ]
  %45 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 6, i32 0, i32 0, i32 0
  %46 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %45, align 8
  %47 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %44, i64 0, i32 11
  %48 = and i32 %43, 16384
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %64

50:                                               ; preds = %42
  %51 = tail call i8* @_Znwm(i64 136) #12
  %52 = bitcast i8* %51 to %"class.spvtools::opt::analysis::ConstantManager"*
  tail call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %52, %"class.spvtools::opt::IRContext"* %44) #11
  %53 = ptrtoint i8* %51 to i64
  %54 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %44, i64 0, i32 19
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400"* %54, i64 0, i32 0, i32 0, i32 0
  %56 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %55, align 8
  %57 = bitcast %"class.std::__1::unique_ptr.400"* %54 to i64*
  store i64 %53, i64* %57, align 8
  %58 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %56, null
  br i1 %58, label %61, label %59

59:                                               ; preds = %50
  tail call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %56) #11
  %60 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %56 to i8*
  tail call void @_ZdlPv(i8* %60) #12
  br label %61

61:                                               ; preds = %59, %50
  %62 = load i32, i32* %47, align 8
  %63 = or i32 %62, 16384
  store i32 %63, i32* %47, align 8
  br label %64

64:                                               ; preds = %42, %61
  %65 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %44, i64 0, i32 19, i32 0, i32 0, i32 0
  %66 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %65, align 8
  %67 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  %68 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %69 = bitcast %"struct.spvtools::opt::Operand"** %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = bitcast %"class.std::__1::vector"* %67 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = sub i64 %70, %72
  %74 = sdiv exact i64 %73, 48
  %75 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %76 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %77 = trunc i64 %74 to i32
  %78 = add i32 %77, -1
  %79 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %78) #11
  %80 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %46, i32 %79) #11
  %81 = tail call %"class.spvtools::opt::analysis::Constant"* @_ZN8spvtools3opt8analysis15ConstantManager19GetConstantFromInstEPKNS0_11InstructionE(%"class.spvtools::opt::analysis::ConstantManager"* %66, %"class.spvtools::opt::Instruction"* %80) #11
  %82 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2, i64 0, i32 3
  %83 = load i8, i8* %82, align 4, !range !2
  %84 = icmp eq i8 %83, 0
  %85 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2, i64 0, i32 4
  %86 = load i8, i8* %85, align 1, !range !2
  %87 = icmp eq i8 %86, 0
  %88 = select i1 %87, i32 1, i32 2
  %89 = xor i1 %87, true
  %90 = zext i1 %89 to i32
  %91 = select i1 %84, i32 %90, i32 %88
  %92 = add nuw nsw i32 %91, 1
  %93 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %2, i32 %92) #11
  %94 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %46, i32 %93) #11
  %95 = tail call %"class.spvtools::opt::analysis::Constant"* @_ZN8spvtools3opt8analysis15ConstantManager19GetConstantFromInstEPKNS0_11InstructionE(%"class.spvtools::opt::analysis::ConstantManager"* %66, %"class.spvtools::opt::Instruction"* %94) #11
  %96 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2, i64 0, i32 2
  %97 = load i32, i32* %96, align 8
  switch i32 %97, label %117 [
    i32 70, label %98
    i32 67, label %98
  ]

98:                                               ; preds = %64, %64
  %99 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %100 = load i32, i32* %99, align 8
  switch i32 %100, label %117 [
    i32 70, label %101
    i32 67, label %101
  ]

101:                                              ; preds = %98, %98
  %102 = load i64, i64* %69, align 8
  %103 = load i64, i64* %71, align 8
  %104 = sub i64 %102, %103
  %105 = sdiv exact i64 %104, 48
  %106 = load i8, i8* %75, align 4, !range !2
  %107 = icmp eq i8 %106, 0
  %108 = load i8, i8* %76, align 1, !range !2
  %109 = icmp eq i8 %108, 0
  %110 = select i1 %109, i32 1, i32 2
  %111 = xor i1 %109, true
  %112 = zext i1 %111 to i32
  %113 = select i1 %107, i32 %112, i32 %110
  %114 = trunc i64 %105 to i32
  %115 = sub i32 %114, %113
  %116 = icmp eq i32 %115, 2
  br label %117

117:                                              ; preds = %98, %64, %101
  %118 = phi i1 [ false, %98 ], [ false, %64 ], [ %116, %101 ]
  %119 = tail call %"class.spvtools::opt::analysis::Type"* @_ZN8spvtools3opt19CombineAccessChains14GetIndexedTypeEPNS0_11InstructionE(%"class.spvtools::opt::CombineAccessChains"* %0, %"class.spvtools::opt::Instruction"* %1)
  %120 = icmp ne %"class.spvtools::opt::analysis::Constant"* %81, null
  %121 = icmp ne %"class.spvtools::opt::analysis::Constant"* %95, null
  %122 = and i1 %120, %121
  br i1 %122, label %123, label %205

123:                                              ; preds = %117
  %124 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant", %"class.spvtools::opt::analysis::Constant"* %81, i64 0, i32 1
  %125 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %124, align 8
  %126 = bitcast %"class.spvtools::opt::analysis::Type"* %125 to %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)***
  %127 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*** %126, align 8
  %128 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %127, i64 11
  %129 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %128, align 8
  %130 = tail call %"class.spvtools::opt::analysis::Integer"* %129(%"class.spvtools::opt::analysis::Type"* %125) #11
  %131 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %130, i64 0, i32 1
  %132 = load i32, i32* %131, align 4
  %133 = icmp ult i32 %132, 33
  br i1 %133, label %134, label %148

134:                                              ; preds = %123
  %135 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %124, align 8
  %136 = bitcast %"class.spvtools::opt::analysis::Type"* %135 to %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)***
  %137 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*** %136, align 8
  %138 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %137, i64 11
  %139 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %138, align 8
  %140 = tail call %"class.spvtools::opt::analysis::Integer"* %139(%"class.spvtools::opt::analysis::Type"* %135) #11
  %141 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %140, i64 0, i32 2
  %142 = load i8, i8* %141, align 8, !range !2
  %143 = icmp eq i8 %142, 0
  br i1 %143, label %146, label %144

144:                                              ; preds = %134
  %145 = tail call i32 @_ZNK8spvtools3opt8analysis8Constant6GetS32Ev(%"class.spvtools::opt::analysis::Constant"* nonnull %81) #11
  br label %148

146:                                              ; preds = %134
  %147 = tail call i32 @_ZNK8spvtools3opt8analysis8Constant6GetU32Ev(%"class.spvtools::opt::analysis::Constant"* nonnull %81) #11
  br label %148

148:                                              ; preds = %123, %144, %146
  %149 = phi i32 [ %145, %144 ], [ %147, %146 ], [ 0, %123 ]
  %150 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant", %"class.spvtools::opt::analysis::Constant"* %95, i64 0, i32 1
  %151 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %150, align 8
  %152 = bitcast %"class.spvtools::opt::analysis::Type"* %151 to %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)***
  %153 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*** %152, align 8
  %154 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %153, i64 11
  %155 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %154, align 8
  %156 = tail call %"class.spvtools::opt::analysis::Integer"* %155(%"class.spvtools::opt::analysis::Type"* %151) #11
  %157 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %156, i64 0, i32 1
  %158 = load i32, i32* %157, align 4
  %159 = icmp ult i32 %158, 33
  br i1 %159, label %160, label %174

160:                                              ; preds = %148
  %161 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %150, align 8
  %162 = bitcast %"class.spvtools::opt::analysis::Type"* %161 to %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)***
  %163 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*** %162, align 8
  %164 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %163, i64 11
  %165 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %164, align 8
  %166 = tail call %"class.spvtools::opt::analysis::Integer"* %165(%"class.spvtools::opt::analysis::Type"* %161) #11
  %167 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %166, i64 0, i32 2
  %168 = load i8, i8* %167, align 8, !range !2
  %169 = icmp eq i8 %168, 0
  br i1 %169, label %172, label %170

170:                                              ; preds = %160
  %171 = tail call i32 @_ZNK8spvtools3opt8analysis8Constant6GetS32Ev(%"class.spvtools::opt::analysis::Constant"* nonnull %95) #11
  br label %174

172:                                              ; preds = %160
  %173 = tail call i32 @_ZNK8spvtools3opt8analysis8Constant6GetU32Ev(%"class.spvtools::opt::analysis::Constant"* nonnull %95) #11
  br label %174

174:                                              ; preds = %148, %170, %172
  %175 = phi i32 [ %171, %170 ], [ %173, %172 ], [ 0, %148 ]
  %176 = add i32 %175, %149
  %177 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %124, align 8
  %178 = bitcast %"class.std::__1::vector.3"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %178) #11
  %179 = tail call i8* @_Znwm(i64 4) #12
  %180 = bitcast i8* %179 to i32*
  %181 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %5, i64 0, i32 0, i32 1
  %182 = bitcast %"class.std::__1::vector.3"* %5 to i8**
  store i8* %179, i8** %182, align 8
  %183 = getelementptr inbounds i8, i8* %179, i64 4
  %184 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %185 = bitcast i32** %184 to i8**
  store i8* %183, i8** %185, align 8
  %186 = bitcast i32** %181 to i64*
  store i32 %176, i32* %180, align 4
  %187 = ptrtoint i8* %183 to i64
  store i64 %187, i64* %186, align 8
  %188 = call %"class.spvtools::opt::analysis::Constant"* @_ZN8spvtools3opt8analysis15ConstantManager11GetConstantEPKNS1_4TypeERKNSt3__16vectorIjNS6_9allocatorIjEEEE(%"class.spvtools::opt::analysis::ConstantManager"* %66, %"class.spvtools::opt::analysis::Type"* %177, %"class.std::__1::vector.3"* nonnull dereferenceable(24) %5) #11
  %189 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %5, i64 0, i32 0, i32 0
  %190 = load i32*, i32** %189, align 8
  %191 = icmp eq i32* %190, null
  br i1 %191, label %195, label %192

192:                                              ; preds = %174
  %193 = ptrtoint i32* %190 to i64
  store i64 %193, i64* %186, align 8
  %194 = bitcast i32* %190 to i8*
  call void @_ZdlPv(i8* %194) #12
  br label %195

195:                                              ; preds = %174, %192
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %178) #11
  %196 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis15ConstantManager22GetDefiningInstructionEPKNS1_8ConstantEjPNS0_15InstructionList8iteratorE(%"class.spvtools::opt::analysis::ConstantManager"* %66, %"class.spvtools::opt::analysis::Constant"* %188, i32 0, %"class.spvtools::opt::InstructionList::iterator"* null) #11
  %197 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %196, i64 0, i32 4
  %198 = load i8, i8* %197, align 1, !range !2
  %199 = icmp eq i8 %198, 0
  br i1 %199, label %336, label %200

200:                                              ; preds = %195
  %201 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %196, i64 0, i32 3
  %202 = load i8, i8* %201, align 4, !range !2
  %203 = zext i8 %202 to i32
  %204 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %196, i32 %203) #11
  br label %336

205:                                              ; preds = %117
  %206 = bitcast %"class.spvtools::opt::analysis::Type"* %119 to %"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)***
  %207 = load %"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)*** %206, align 8
  %208 = getelementptr inbounds %"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)** %207, i64 29
  %209 = load %"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)** %208, align 8
  %210 = tail call %"class.spvtools::opt::analysis::Struct"* %209(%"class.spvtools::opt::analysis::Type"* %119) #11
  %211 = icmp eq %"class.spvtools::opt::analysis::Struct"* %210, null
  %212 = or i1 %118, %211
  br i1 %212, label %213, label %411

213:                                              ; preds = %205
  %214 = bitcast %"class.spvtools::opt::InstructionBuilder"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %214) #11
  %215 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %6, i64 0, i32 0
  %216 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %6, i64 0, i32 1
  %217 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %6, i64 0, i32 3
  %218 = bitcast %"class.spvtools::opt::InstructionBuilder"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %218, i8 -86, i64 32, i1 false)
  %219 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %9, align 8
  %220 = ptrtoint %"class.spvtools::opt::Instruction"* %2 to i64
  %221 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %219, i64 0, i32 11
  %222 = load i32, i32* %221, align 8
  %223 = and i32 %222, 2
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %226

225:                                              ; preds = %213
  tail call void @_ZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEv(%"class.spvtools::opt::IRContext"* %219) #11
  br label %226

226:                                              ; preds = %225, %213
  %227 = lshr i64 %220, 32
  %228 = shl i64 %220, 3
  %229 = and i64 %228, 4294967288
  %230 = add nuw nsw i64 %229, 8
  %231 = xor i64 %230, %227
  %232 = mul i64 %231, -7070675565921424023
  %233 = lshr i64 %232, 47
  %234 = xor i64 %232, %227
  %235 = xor i64 %234, %233
  %236 = mul i64 %235, -7070675565921424023
  %237 = lshr i64 %236, 47
  %238 = xor i64 %237, %236
  %239 = mul i64 %238, -7070675565921424023
  %240 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %219, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %241 = load i64, i64* %240, align 8
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %295, label %243

243:                                              ; preds = %226
  %244 = tail call i64 @llvm.ctpop.i64(i64 %241) #11, !range !3
  %245 = icmp ugt i64 %244, 1
  br i1 %245, label %249, label %246

246:                                              ; preds = %243
  %247 = add i64 %241, -1
  %248 = and i64 %247, %239
  br label %253

249:                                              ; preds = %243
  %250 = icmp ult i64 %239, %241
  br i1 %250, label %253, label %251

251:                                              ; preds = %249
  %252 = urem i64 %239, %241
  br label %253

253:                                              ; preds = %251, %249, %246
  %254 = phi i64 [ %248, %246 ], [ %252, %251 ], [ %239, %249 ]
  %255 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %219, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %256 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %255, align 8
  %257 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %256, i64 %254
  %258 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %257, align 8
  %259 = icmp eq %"struct.std::__1::__hash_node_base.178"* %258, null
  br i1 %259, label %295, label %260

260:                                              ; preds = %253
  %261 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %258, i64 0, i32 0
  %262 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %261, align 8
  %263 = icmp eq %"struct.std::__1::__hash_node_base.178"* %262, null
  br i1 %263, label %295, label %264

264:                                              ; preds = %260
  %265 = add i64 %241, -1
  br label %266

266:                                              ; preds = %287, %264
  %267 = phi %"struct.std::__1::__hash_node_base.178"* [ %262, %264 ], [ %289, %287 ]
  %268 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %267, i64 1
  %269 = bitcast %"struct.std::__1::__hash_node_base.178"* %268 to i64*
  %270 = load i64, i64* %269, align 8
  %271 = icmp eq i64 %270, %239
  br i1 %271, label %282, label %272

272:                                              ; preds = %266
  br i1 %245, label %275, label %273

273:                                              ; preds = %272
  %274 = and i64 %270, %265
  br label %279

275:                                              ; preds = %272
  %276 = icmp ult i64 %270, %241
  br i1 %276, label %279, label %277

277:                                              ; preds = %275
  %278 = urem i64 %270, %241
  br label %279

279:                                              ; preds = %277, %275, %273
  %280 = phi i64 [ %274, %273 ], [ %278, %277 ], [ %270, %275 ]
  %281 = icmp eq i64 %280, %254
  br i1 %281, label %287, label %295

282:                                              ; preds = %266
  %283 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %267, i64 2
  %284 = bitcast %"struct.std::__1::__hash_node_base.178"* %283 to %"class.spvtools::opt::Instruction"**
  %285 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %284, align 8
  %286 = icmp eq %"class.spvtools::opt::Instruction"* %285, %2
  br i1 %286, label %291, label %287

287:                                              ; preds = %282, %279
  %288 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %267, i64 0, i32 0
  %289 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %288, align 8
  %290 = icmp eq %"struct.std::__1::__hash_node_base.178"* %289, null
  br i1 %290, label %295, label %266

291:                                              ; preds = %282
  %292 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %267, i64 3
  %293 = bitcast %"struct.std::__1::__hash_node_base.178"* %292 to %"class.spvtools::opt::BasicBlock"**
  %294 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %293, align 8
  br label %295

295:                                              ; preds = %287, %279, %260, %226, %253, %291
  %296 = phi %"class.spvtools::opt::BasicBlock"* [ %294, %291 ], [ null, %253 ], [ null, %226 ], [ null, %260 ], [ null, %279 ], [ null, %287 ]
  store %"class.spvtools::opt::IRContext"* %219, %"class.spvtools::opt::IRContext"** %215, align 8
  store %"class.spvtools::opt::BasicBlock"* %296, %"class.spvtools::opt::BasicBlock"** %216, align 8
  %297 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %6, i64 0, i32 2
  %298 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %297 to i64*
  store i64 %220, i64* %298, align 8
  store i32 3, i32* %217, align 8
  %299 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %80, i64 0, i32 3
  %300 = load i8, i8* %299, align 4, !range !2
  %301 = icmp eq i8 %300, 0
  br i1 %301, label %304, label %302

302:                                              ; preds = %295
  %303 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %80, i32 0) #11
  br label %304

304:                                              ; preds = %295, %302
  %305 = phi i32 [ %303, %302 ], [ 0, %295 ]
  %306 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %80, i64 0, i32 4
  %307 = load i8, i8* %306, align 1, !range !2
  %308 = icmp eq i8 %307, 0
  br i1 %308, label %313, label %309

309:                                              ; preds = %304
  %310 = load i8, i8* %299, align 4, !range !2
  %311 = zext i8 %310 to i32
  %312 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %80, i32 %311) #11
  br label %313

313:                                              ; preds = %304, %309
  %314 = phi i32 [ %312, %309 ], [ 0, %304 ]
  %315 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %94, i64 0, i32 4
  %316 = load i8, i8* %315, align 1, !range !2
  %317 = icmp eq i8 %316, 0
  br i1 %317, label %323, label %318

318:                                              ; preds = %313
  %319 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %94, i64 0, i32 3
  %320 = load i8, i8* %319, align 4, !range !2
  %321 = zext i8 %320 to i32
  %322 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %94, i32 %321) #11
  br label %323

323:                                              ; preds = %313, %318
  %324 = phi i32 [ %322, %318 ], [ 0, %313 ]
  %325 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder7AddIAddEjjj(%"class.spvtools::opt::InstructionBuilder"* nonnull %6, i32 %305, i32 %314, i32 %324)
  %326 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %325, i64 0, i32 4
  %327 = load i8, i8* %326, align 1, !range !2
  %328 = icmp eq i8 %327, 0
  br i1 %328, label %334, label %329

329:                                              ; preds = %323
  %330 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %325, i64 0, i32 3
  %331 = load i8, i8* %330, align 4, !range !2
  %332 = zext i8 %331 to i32
  %333 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %325, i32 %332) #11
  br label %334

334:                                              ; preds = %323, %329
  %335 = phi i32 [ %333, %329 ], [ 0, %323 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %214) #11
  br label %336

336:                                              ; preds = %200, %195, %334
  %337 = phi i32 [ %335, %334 ], [ %204, %200 ], [ 0, %195 ]
  %338 = bitcast %"struct.spvtools::opt::Operand"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %338) #11
  %339 = bitcast %"class.spvtools::utils::SmallVector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %339) #11
  %340 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %340, align 8
  %341 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 1
  %342 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 2
  %343 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 3, i64 0
  %344 = bitcast i32** %342 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %343, %"struct.std::__1::aligned_storage<4, 4>::type"** %344, align 8
  %345 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4
  %346 = bitcast %"class.std::__1::unique_ptr.0"* %345 to i64*
  store i64 0, i64* %346, align 8
  %347 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %343 to i32*
  store i64 1, i64* %341, align 8
  store i32 %337, i32* %347, align 8
  %348 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 0
  store i32 1, i32* %348, align 8
  %349 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1
  %350 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %349, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %350, align 8
  %351 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 1
  store i64 0, i64* %351, align 8
  %352 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 2
  %353 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 3, i64 0
  %354 = bitcast i32** %352 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %353, %"struct.std::__1::aligned_storage<4, 4>::type"** %354, align 8
  %355 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 4
  %356 = bitcast %"class.std::__1::unique_ptr.0"* %355 to i64*
  store i64 0, i64* %356, align 8
  %357 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %349, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %8) #11
  %358 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %359 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %358, align 8
  %360 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %361 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %360, align 8
  %362 = icmp ult %"struct.spvtools::opt::Operand"* %359, %361
  br i1 %362, label %363, label %378

363:                                              ; preds = %336
  %364 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %359, i64 0, i32 0
  %365 = load i32, i32* %348, align 8
  store i32 %365, i32* %364, align 8
  %366 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %359, i64 0, i32 1
  %367 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %366, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %367, align 8
  %368 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %359, i64 0, i32 1, i32 1
  store i64 0, i64* %368, align 8
  %369 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %359, i64 0, i32 1, i32 2
  %370 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %359, i64 0, i32 1, i32 3, i64 0
  %371 = bitcast i32** %369 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %370, %"struct.std::__1::aligned_storage<4, 4>::type"** %371, align 8
  %372 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %359, i64 0, i32 1, i32 4
  %373 = bitcast %"class.std::__1::unique_ptr.0"* %372 to i64*
  store i64 0, i64* %373, align 8
  %374 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %366, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %349) #11
  %375 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %359, i64 1
  %376 = ptrtoint %"struct.spvtools::opt::Operand"* %375 to i64
  %377 = bitcast %"struct.spvtools::opt::Operand"** %358 to i64*
  store i64 %376, i64* %377, align 8
  br label %379

378:                                              ; preds = %336
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* %3, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %7) #11
  br label %379

379:                                              ; preds = %363, %378
  %380 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %380, align 8
  %381 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %382 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %381, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %381, align 8
  %383 = icmp eq %"class.std::__1::vector.3"* %382, null
  br i1 %383, label %395, label %384

384:                                              ; preds = %379
  %385 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %382, i64 0, i32 0, i32 0
  %386 = load i32*, i32** %385, align 8
  %387 = icmp eq i32* %386, null
  br i1 %387, label %393, label %388

388:                                              ; preds = %384
  %389 = ptrtoint i32* %386 to i64
  %390 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %382, i64 0, i32 0, i32 1
  %391 = bitcast i32** %390 to i64*
  store i64 %389, i64* %391, align 8
  %392 = bitcast i32* %386 to i8*
  call void @_ZdlPv(i8* %392) #12
  br label %393

393:                                              ; preds = %388, %384
  %394 = bitcast %"class.std::__1::vector.3"* %382 to i8*
  call void @_ZdlPv(i8* %394) #12
  br label %395

395:                                              ; preds = %379, %393
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %340, align 8
  %396 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4, i32 0, i32 0, i32 0
  %397 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %396, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %396, align 8
  %398 = icmp eq %"class.std::__1::vector.3"* %397, null
  br i1 %398, label %410, label %399

399:                                              ; preds = %395
  %400 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %397, i64 0, i32 0, i32 0
  %401 = load i32*, i32** %400, align 8
  %402 = icmp eq i32* %401, null
  br i1 %402, label %408, label %403

403:                                              ; preds = %399
  %404 = ptrtoint i32* %401 to i64
  %405 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %397, i64 0, i32 0, i32 1
  %406 = bitcast i32** %405 to i64*
  store i64 %404, i64* %406, align 8
  %407 = bitcast i32* %401 to i8*
  call void @_ZdlPv(i8* %407) #12
  br label %408

408:                                              ; preds = %403, %399
  %409 = bitcast %"class.std::__1::vector.3"* %397 to i8*
  call void @_ZdlPv(i8* %409) #12
  br label %410

410:                                              ; preds = %395, %408
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %339) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %338) #11
  br label %411

411:                                              ; preds = %205, %410
  %412 = phi i1 [ true, %410 ], [ false, %205 ]
  ret i1 %412
}

declare %"class.spvtools::opt::analysis::Constant"* @_ZN8spvtools3opt8analysis15ConstantManager11GetConstantEPKNS1_4TypeERKNSt3__16vectorIjNS6_9allocatorIjEEEE(%"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::Type"*, %"class.std::__1::vector.3"* dereferenceable(24)) local_unnamed_addr #2

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis15ConstantManager22GetDefiningInstructionEPKNS1_8ConstantEjPNS0_15InstructionList8iteratorE(%"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::Constant"*, i32, %"class.spvtools::opt::InstructionList::iterator"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder7AddIAddEjjj(%"class.spvtools::opt::InstructionBuilder"*, i32, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.std::__1::unique_ptr.21", align 8
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = alloca [2 x %"struct.spvtools::opt::Operand"], align 8
  %8 = alloca %"class.spvtools::utils::SmallVector", align 8
  %9 = alloca %"class.spvtools::utils::SmallVector", align 8
  %10 = bitcast %"class.std::__1::unique_ptr.21"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"*), %"class.spvtools::opt::Instruction"** %11, align 8
  %12 = tail call i8* @_Znwm(i64 112) #12
  %13 = bitcast i8* %12 to %"class.spvtools::opt::Instruction"*
  %14 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %15 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %14, align 8
  %16 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %15, i64 0, i32 4, i32 0, i32 0, i32 0
  %17 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %16, align 8
  %18 = tail call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %17) #11
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %4
  %21 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %15, i64 0, i32 5, i32 0, i32 2
  %22 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %22, i64 0, i32 2
  %24 = load i8, i8* %23, align 8, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %32

26:                                               ; preds = %20
  %27 = tail call i8* @_Znwm(i64 48) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %27, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i64 37, i1 false) #11
  %28 = getelementptr inbounds i8, i8* %27, i64 37
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %15, i64 0, i32 5, i32 0, i32 1, i32 0
  %30 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %29, align 8
  %31 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %15, i64 0, i32 5, i32 0, i32 0
  tail call void %30(%"union.std::__1::__function::__policy_storage"* %31, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp, i8* nonnull %27) #11
  tail call void @_ZdlPv(i8* nonnull %27) #12
  br label %32

32:                                               ; preds = %4, %20, %26
  %33 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #11
  %34 = bitcast [2 x %"struct.spvtools::opt::Operand"]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %34) #11
  %35 = bitcast %"class.spvtools::utils::SmallVector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %35) #11
  %36 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %37 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 1
  %38 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 2
  %39 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 3, i64 0
  %40 = bitcast i32** %38 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %39, %"struct.std::__1::aligned_storage<4, 4>::type"** %40, align 8
  %41 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4
  %42 = bitcast %"class.std::__1::unique_ptr.0"* %41 to i64*
  store i64 0, i64* %42, align 8
  %43 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %39 to i32*
  store i64 1, i64* %37, align 8
  store i32 %2, i32* %43, align 8
  %44 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 0
  store i32 1, i32* %44, align 8
  %45 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1
  %46 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %45, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %46, align 8
  %47 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %47, align 8
  %48 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 2
  %49 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 3, i64 0
  %50 = bitcast i32** %48 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %49, %"struct.std::__1::aligned_storage<4, 4>::type"** %50, align 8
  %51 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 4
  %52 = bitcast %"class.std::__1::unique_ptr.0"* %51 to i64*
  store i64 0, i64* %52, align 8
  %53 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %45, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %8) #11
  %54 = bitcast %"class.spvtools::utils::SmallVector"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %54) #11
  %55 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %55, align 8
  %56 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 1
  %57 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 2
  %58 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 3, i64 0
  %59 = bitcast i32** %57 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %58, %"struct.std::__1::aligned_storage<4, 4>::type"** %59, align 8
  %60 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 4
  %61 = bitcast %"class.std::__1::unique_ptr.0"* %60 to i64*
  store i64 0, i64* %61, align 8
  %62 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %58 to i32*
  store i64 1, i64* %56, align 8
  store i32 %3, i32* %62, align 8
  %63 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 1, i32 0
  store i32 1, i32* %63, align 8
  %64 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 1, i32 1
  %65 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %64, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %65, align 8
  %66 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 1, i32 1, i32 1
  store i64 0, i64* %66, align 8
  %67 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 1, i32 1, i32 2
  %68 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 1, i32 1, i32 3, i64 0
  %69 = bitcast i32** %67 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %68, %"struct.std::__1::aligned_storage<4, 4>::type"** %69, align 8
  %70 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 1, i32 1, i32 4
  %71 = bitcast %"class.std::__1::unique_ptr.0"* %70 to i64*
  store i64 0, i64* %71, align 8
  %72 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %64, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %9) #11
  %73 = call i8* @_Znwm(i64 96) #12
  %74 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %75 = bitcast %"class.std::__1::vector"* %6 to i8**
  store i8* %73, i8** %75, align 8
  %76 = getelementptr inbounds i8, i8* %73, i64 96
  %77 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %78 = bitcast %"struct.spvtools::opt::Operand"** %77 to i8**
  store i8* %76, i8** %78, align 8
  %79 = bitcast i8* %73 to i32*
  %80 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 0
  %81 = load i32, i32* %80, align 8
  store i32 %81, i32* %79, align 8
  %82 = getelementptr inbounds i8, i8* %73, i64 8
  %83 = bitcast i8* %82 to %"class.spvtools::utils::SmallVector"*
  %84 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1
  %85 = bitcast i8* %82 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %85, align 8
  %86 = getelementptr inbounds i8, i8* %73, i64 16
  %87 = bitcast i8* %86 to i64*
  store i64 0, i64* %87, align 8
  %88 = getelementptr inbounds i8, i8* %73, i64 24
  %89 = getelementptr inbounds i8, i8* %73, i64 32
  %90 = bitcast i8* %88 to i8**
  store i8* %89, i8** %90, align 8
  %91 = getelementptr inbounds i8, i8* %73, i64 40
  %92 = bitcast i8* %91 to i64*
  store i64 0, i64* %92, align 8
  %93 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %83, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %84) #11
  %94 = getelementptr inbounds i8, i8* %73, i64 48
  %95 = bitcast i8* %94 to i32*
  %96 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 1, i32 0
  %97 = load i32, i32* %96, align 8
  store i32 %97, i32* %95, align 8
  %98 = getelementptr inbounds i8, i8* %73, i64 56
  %99 = bitcast i8* %98 to %"class.spvtools::utils::SmallVector"*
  %100 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 1, i32 1
  %101 = bitcast i8* %98 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %101, align 8
  %102 = getelementptr inbounds i8, i8* %73, i64 64
  %103 = bitcast i8* %102 to i64*
  store i64 0, i64* %103, align 8
  %104 = getelementptr inbounds i8, i8* %73, i64 72
  %105 = getelementptr inbounds i8, i8* %73, i64 80
  %106 = bitcast i8* %104 to i8**
  store i8* %105, i8** %106, align 8
  %107 = getelementptr inbounds i8, i8* %73, i64 88
  %108 = bitcast i8* %107 to i64*
  store i64 0, i64* %108, align 8
  %109 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %99, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %100) #11
  %110 = getelementptr inbounds i8, i8* %73, i64 96
  %111 = bitcast %"struct.spvtools::opt::Operand"** %74 to i64*
  %112 = ptrtoint i8* %110 to i64
  store i64 %112, i64* %111, align 8
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %13, %"class.spvtools::opt::IRContext"* %15, i32 128, i32 %1, i32 %18, %"class.std::__1::vector"* nonnull dereferenceable(24) %6) #11
  %113 = ptrtoint i8* %12 to i64
  %114 = bitcast %"class.std::__1::unique_ptr.21"* %5 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %116 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %115, align 8
  %117 = icmp eq %"struct.spvtools::opt::Operand"* %116, null
  br i1 %117, label %146, label %118

118:                                              ; preds = %32
  %119 = bitcast %"struct.spvtools::opt::Operand"* %116 to i8*
  %120 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %74, align 8
  %121 = icmp eq %"struct.spvtools::opt::Operand"* %120, %116
  br i1 %121, label %144, label %122

122:                                              ; preds = %118, %140
  %123 = phi %"struct.spvtools::opt::Operand"* [ %124, %140 ], [ %120, %118 ]
  %124 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %123, i64 -1
  %125 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %123, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %125, align 8
  %126 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %123, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %127 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %126, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %126, align 8
  %128 = icmp eq %"class.std::__1::vector.3"* %127, null
  br i1 %128, label %140, label %129

129:                                              ; preds = %122
  %130 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %127, i64 0, i32 0, i32 0
  %131 = load i32*, i32** %130, align 8
  %132 = icmp eq i32* %131, null
  br i1 %132, label %138, label %133

133:                                              ; preds = %129
  %134 = ptrtoint i32* %131 to i64
  %135 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %127, i64 0, i32 0, i32 1
  %136 = bitcast i32** %135 to i64*
  store i64 %134, i64* %136, align 8
  %137 = bitcast i32* %131 to i8*
  call void @_ZdlPv(i8* %137) #12
  br label %138

138:                                              ; preds = %133, %129
  %139 = bitcast %"class.std::__1::vector.3"* %127 to i8*
  call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %138, %122
  %141 = icmp eq %"struct.spvtools::opt::Operand"* %124, %116
  br i1 %141, label %142, label %122

142:                                              ; preds = %140
  %143 = load i8*, i8** %75, align 8
  br label %144

144:                                              ; preds = %142, %118
  %145 = phi i8* [ %143, %142 ], [ %119, %118 ]
  store %"struct.spvtools::opt::Operand"* %116, %"struct.spvtools::opt::Operand"** %74, align 8
  call void @_ZdlPv(i8* %145) #12
  br label %146

146:                                              ; preds = %32, %144
  %147 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %147, align 8
  %148 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 1, i32 1, i32 4, i32 0, i32 0, i32 0
  %149 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %148, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %148, align 8
  %150 = icmp eq %"class.std::__1::vector.3"* %149, null
  br i1 %150, label %162, label %151

151:                                              ; preds = %146
  %152 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %149, i64 0, i32 0, i32 0
  %153 = load i32*, i32** %152, align 8
  %154 = icmp eq i32* %153, null
  br i1 %154, label %160, label %155

155:                                              ; preds = %151
  %156 = ptrtoint i32* %153 to i64
  %157 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %149, i64 0, i32 0, i32 1
  %158 = bitcast i32** %157 to i64*
  store i64 %156, i64* %158, align 8
  %159 = bitcast i32* %153 to i8*
  call void @_ZdlPv(i8* %159) #12
  br label %160

160:                                              ; preds = %155, %151
  %161 = bitcast %"class.std::__1::vector.3"* %149 to i8*
  call void @_ZdlPv(i8* %161) #12
  br label %162

162:                                              ; preds = %146, %160
  %163 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %163, align 8
  %164 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %165 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %164, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %164, align 8
  %166 = icmp eq %"class.std::__1::vector.3"* %165, null
  br i1 %166, label %214, label %203

167:                                              ; preds = %214
  %168 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %216, i64 0, i32 0, i32 0
  %169 = load i32*, i32** %168, align 8
  %170 = icmp eq i32* %169, null
  br i1 %170, label %176, label %171

171:                                              ; preds = %167
  %172 = ptrtoint i32* %169 to i64
  %173 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %216, i64 0, i32 0, i32 1
  %174 = bitcast i32** %173 to i64*
  store i64 %172, i64* %174, align 8
  %175 = bitcast i32* %169 to i8*
  call void @_ZdlPv(i8* %175) #12
  br label %176

176:                                              ; preds = %171, %167
  %177 = bitcast %"class.std::__1::vector.3"* %216 to i8*
  call void @_ZdlPv(i8* %177) #12
  br label %178

178:                                              ; preds = %214, %176
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %54) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %179 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4, i32 0, i32 0, i32 0
  %180 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %179, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %179, align 8
  %181 = icmp eq %"class.std::__1::vector.3"* %180, null
  br i1 %181, label %193, label %182

182:                                              ; preds = %178
  %183 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %180, i64 0, i32 0, i32 0
  %184 = load i32*, i32** %183, align 8
  %185 = icmp eq i32* %184, null
  br i1 %185, label %191, label %186

186:                                              ; preds = %182
  %187 = ptrtoint i32* %184 to i64
  %188 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %180, i64 0, i32 0, i32 1
  %189 = bitcast i32** %188 to i64*
  store i64 %187, i64* %189, align 8
  %190 = bitcast i32* %184 to i8*
  call void @_ZdlPv(i8* %190) #12
  br label %191

191:                                              ; preds = %186, %182
  %192 = bitcast %"class.std::__1::vector.3"* %180 to i8*
  call void @_ZdlPv(i8* %192) #12
  br label %193

193:                                              ; preds = %178, %191
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %35) #11
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %34) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #11
  %194 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"* %0, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %5)
  %195 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %11, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %11, align 8
  %196 = icmp eq %"class.spvtools::opt::Instruction"* %195, null
  br i1 %196, label %202, label %197

197:                                              ; preds = %193
  %198 = bitcast %"class.spvtools::opt::Instruction"* %195 to void (%"class.spvtools::opt::Instruction"*)***
  %199 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %198, align 8
  %200 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %199, i64 1
  %201 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %200, align 8
  call void %201(%"class.spvtools::opt::Instruction"* nonnull %195) #11
  br label %202

202:                                              ; preds = %193, %197
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #11
  ret %"class.spvtools::opt::Instruction"* %194

203:                                              ; preds = %162
  %204 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %165, i64 0, i32 0, i32 0
  %205 = load i32*, i32** %204, align 8
  %206 = icmp eq i32* %205, null
  br i1 %206, label %212, label %207

207:                                              ; preds = %203
  %208 = ptrtoint i32* %205 to i64
  %209 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %165, i64 0, i32 0, i32 1
  %210 = bitcast i32** %209 to i64*
  store i64 %208, i64* %210, align 8
  %211 = bitcast i32* %205 to i8*
  call void @_ZdlPv(i8* %211) #12
  br label %212

212:                                              ; preds = %207, %203
  %213 = bitcast %"class.std::__1::vector.3"* %165 to i8*
  call void @_ZdlPv(i8* %213) #12
  br label %214

214:                                              ; preds = %212, %162
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %55, align 8
  %215 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 4, i32 0, i32 0, i32 0
  %216 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %215, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %215, align 8
  %217 = icmp eq %"class.std::__1::vector.3"* %216, null
  br i1 %217, label %178, label %167
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #12
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %1, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt19CombineAccessChains22CreateNewInputOperandsEPNS0_11InstructionES3_PNSt3__16vectorINS0_7OperandENS4_9allocatorIS6_EEEE(%"class.spvtools::opt::CombineAccessChains"* nocapture readonly, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector"*) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  %6 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %7 = bitcast %"struct.spvtools::opt::Operand"** %6 to i64*
  %8 = bitcast %"class.std::__1::vector"* %5 to i64*
  %9 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %10 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast %"struct.spvtools::opt::Operand"** %11 to i64*
  br label %14

14:                                               ; preds = %61, %4
  %15 = phi i32 [ 0, %4 ], [ %62, %61 ]
  %16 = load i64, i64* %7, align 8
  %17 = load i64, i64* %8, align 8
  %18 = sub i64 %16, %17
  %19 = sdiv exact i64 %18, 48
  %20 = load i8, i8* %9, align 4, !range !2
  %21 = icmp eq i8 %20, 0
  %22 = load i8, i8* %10, align 1, !range !2
  %23 = icmp eq i8 %22, 0
  %24 = select i1 %23, i32 1, i32 2
  %25 = xor i1 %23, true
  %26 = zext i1 %25 to i32
  %27 = select i1 %21, i32 %26, i32 %24
  %28 = trunc i64 %19 to i32
  %29 = xor i32 %27, -1
  %30 = add i32 %29, %28
  %31 = icmp eq i32 %15, %30
  %32 = inttoptr i64 %17 to %"struct.spvtools::opt::Operand"*
  br i1 %31, label %33, label %37

33:                                               ; preds = %14
  %34 = inttoptr i64 %17 to %"struct.spvtools::opt::Operand"*
  %35 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2, i64 0, i32 2
  %36 = load i32, i32* %35, align 8
  switch i32 %36, label %65 [
    i32 70, label %63
    i32 67, label %63
  ]

37:                                               ; preds = %14
  %38 = add i32 %27, %15
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %32, i64 %39
  %41 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %11, align 8
  %42 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %12, align 8
  %43 = icmp eq %"struct.spvtools::opt::Operand"* %41, %42
  br i1 %43, label %60, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %41, i64 0, i32 0
  %46 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %40, i64 0, i32 0
  %47 = load i32, i32* %46, align 8
  store i32 %47, i32* %45, align 8
  %48 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %41, i64 0, i32 1
  %49 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %32, i64 %39, i32 1
  %50 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %48, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %50, align 8
  %51 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %41, i64 0, i32 1, i32 1
  store i64 0, i64* %51, align 8
  %52 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %41, i64 0, i32 1, i32 2
  %53 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %41, i64 0, i32 1, i32 3, i64 0
  %54 = bitcast i32** %52 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %53, %"struct.std::__1::aligned_storage<4, 4>::type"** %54, align 8
  %55 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %41, i64 0, i32 1, i32 4
  %56 = bitcast %"class.std::__1::unique_ptr.0"* %55 to i64*
  store i64 0, i64* %56, align 8
  %57 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %48, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %49) #11
  %58 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %41, i64 1
  %59 = ptrtoint %"struct.spvtools::opt::Operand"* %58 to i64
  store i64 %59, i64* %13, align 8
  br label %61

60:                                               ; preds = %37
  tail call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector"* %3, %"struct.spvtools::opt::Operand"* dereferenceable(48) %40) #11
  br label %61

61:                                               ; preds = %44, %60
  %62 = add i32 %15, 1
  br label %14

63:                                               ; preds = %33, %33
  %64 = tail call zeroext i1 @_ZN8spvtools3opt19CombineAccessChains14CombineIndicesEPNS0_11InstructionES3_PNSt3__16vectorINS0_7OperandENS4_9allocatorIS6_EEEE(%"class.spvtools::opt::CombineAccessChains"* %0, %"class.spvtools::opt::Instruction"* %1, %"class.spvtools::opt::Instruction"* %2, %"class.std::__1::vector"* %3)
  br i1 %64, label %89, label %145

65:                                               ; preds = %33
  %66 = add nsw i64 %19, 4294967295
  %67 = and i64 %66, 4294967295
  %68 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 %67
  %69 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %11, align 8
  %70 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %12, align 8
  %71 = icmp eq %"struct.spvtools::opt::Operand"* %69, %70
  br i1 %71, label %88, label %72

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %69, i64 0, i32 0
  %74 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %68, i64 0, i32 0
  %75 = load i32, i32* %74, align 8
  store i32 %75, i32* %73, align 8
  %76 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %69, i64 0, i32 1
  %77 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 %67, i32 1
  %78 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %76, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %78, align 8
  %79 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %69, i64 0, i32 1, i32 1
  store i64 0, i64* %79, align 8
  %80 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %69, i64 0, i32 1, i32 2
  %81 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %69, i64 0, i32 1, i32 3, i64 0
  %82 = bitcast i32** %80 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %81, %"struct.std::__1::aligned_storage<4, 4>::type"** %82, align 8
  %83 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %69, i64 0, i32 1, i32 4
  %84 = bitcast %"class.std::__1::unique_ptr.0"* %83 to i64*
  store i64 0, i64* %84, align 8
  %85 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %76, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %77) #11
  %86 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %69, i64 1
  %87 = ptrtoint %"struct.spvtools::opt::Operand"* %86 to i64
  store i64 %87, i64* %13, align 8
  br label %89

88:                                               ; preds = %65
  tail call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector"* %3, %"struct.spvtools::opt::Operand"* dereferenceable(48) %68) #11
  br label %89

89:                                               ; preds = %88, %72, %63
  %90 = load i32, i32* %35, align 8
  %91 = icmp eq i32 %90, 67
  %92 = icmp eq i32 %90, 70
  %93 = or i1 %91, %92
  %94 = select i1 %93, i32 2, i32 1
  %95 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2, i64 0, i32 6
  %96 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2, i64 0, i32 6, i32 0, i32 1
  %97 = bitcast %"struct.spvtools::opt::Operand"** %96 to i64*
  %98 = bitcast %"class.std::__1::vector"* %95 to i64*
  %99 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2, i64 0, i32 3
  %100 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2, i64 0, i32 4
  br label %101

101:                                              ; preds = %143, %89
  %102 = phi i32 [ %94, %89 ], [ %144, %143 ]
  %103 = load i64, i64* %97, align 8
  %104 = load i64, i64* %98, align 8
  %105 = sub i64 %103, %104
  %106 = sdiv exact i64 %105, 48
  %107 = load i8, i8* %99, align 4, !range !2
  %108 = icmp eq i8 %107, 0
  %109 = load i8, i8* %100, align 1, !range !2
  %110 = icmp eq i8 %109, 0
  %111 = select i1 %110, i32 1, i32 2
  %112 = xor i1 %110, true
  %113 = zext i1 %112 to i32
  %114 = select i1 %108, i32 %113, i32 %111
  %115 = trunc i64 %106 to i32
  %116 = sub i32 %115, %114
  %117 = icmp ult i32 %102, %116
  %118 = inttoptr i64 %104 to %"struct.spvtools::opt::Operand"*
  br i1 %117, label %119, label %145

119:                                              ; preds = %101
  %120 = add i32 %114, %102
  %121 = zext i32 %120 to i64
  %122 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %118, i64 %121
  %123 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %11, align 8
  %124 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %12, align 8
  %125 = icmp eq %"struct.spvtools::opt::Operand"* %123, %124
  br i1 %125, label %142, label %126

126:                                              ; preds = %119
  %127 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %123, i64 0, i32 0
  %128 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %122, i64 0, i32 0
  %129 = load i32, i32* %128, align 8
  store i32 %129, i32* %127, align 8
  %130 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %123, i64 0, i32 1
  %131 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %118, i64 %121, i32 1
  %132 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %130, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %132, align 8
  %133 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %123, i64 0, i32 1, i32 1
  store i64 0, i64* %133, align 8
  %134 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %123, i64 0, i32 1, i32 2
  %135 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %123, i64 0, i32 1, i32 3, i64 0
  %136 = bitcast i32** %134 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %135, %"struct.std::__1::aligned_storage<4, 4>::type"** %136, align 8
  %137 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %123, i64 0, i32 1, i32 4
  %138 = bitcast %"class.std::__1::unique_ptr.0"* %137 to i64*
  store i64 0, i64* %138, align 8
  %139 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %130, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %131) #11
  %140 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %123, i64 1
  %141 = ptrtoint %"struct.spvtools::opt::Operand"* %140 to i64
  store i64 %141, i64* %13, align 8
  br label %143

142:                                              ; preds = %119
  tail call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector"* %3, %"struct.spvtools::opt::Operand"* dereferenceable(48) %122) #11
  br label %143

143:                                              ; preds = %126, %142
  %144 = add nuw i32 %102, 1
  br label %101

145:                                              ; preds = %101, %63
  %146 = phi i1 [ false, %63 ], [ true, %101 ]
  ret i1 %146
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt19CombineAccessChains18CombineAccessChainEPNS0_11InstructionE(%"class.spvtools::opt::CombineAccessChains"* nocapture readonly, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.spvtools::utils::SmallVector", align 8
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::CombineAccessChains", %"class.spvtools::opt::CombineAccessChains"* %0, i64 0, i32 0, i32 2
  %6 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 11
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %35

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  %13 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %12, align 8
  %14 = tail call i8* @_Znwm(i64 104) #12
  %15 = bitcast i8* %14 to %"class.spvtools::opt::analysis::DefUseManager"*
  %16 = getelementptr inbounds i8, i8* %14, i64 32
  %17 = bitcast i8* %16 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %17, align 4
  %18 = getelementptr inbounds i8, i8* %14, i64 48
  %19 = getelementptr inbounds i8, i8* %14, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false) #11
  %20 = bitcast i8* %19 to i8**
  store i8* %18, i8** %20, align 8
  %21 = getelementptr inbounds i8, i8* %14, i64 64
  %22 = getelementptr inbounds i8, i8* %14, i64 96
  %23 = bitcast i8* %22 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %23, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %15, %"class.spvtools::opt::Module"* %13) #11
  %24 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 6
  %25 = ptrtoint i8* %14 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %24, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %26, align 8
  %28 = bitcast %"class.std::__1::unique_ptr.62"* %24 to i64*
  store i64 %25, i64* %28, align 8
  %29 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %27, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %11
  %31 = bitcast %"class.std::__1::unique_ptr.62"* %24 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %31, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %27) #11
  br label %32

32:                                               ; preds = %30, %11
  %33 = load i32, i32* %7, align 8
  %34 = or i32 %33, 1
  store i32 %34, i32* %7, align 8
  br label %35

35:                                               ; preds = %2, %32
  %36 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 6, i32 0, i32 0, i32 0
  %37 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %36, align 8
  %38 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %39 = load i8, i8* %38, align 4, !range !2
  %40 = icmp eq i8 %39, 0
  %41 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %42 = load i8, i8* %41, align 1, !range !2
  %43 = icmp eq i8 %42, 0
  %44 = select i1 %43, i32 1, i32 2
  %45 = xor i1 %43, true
  %46 = zext i1 %45 to i32
  %47 = select i1 %40, i32 %46, i32 %44
  %48 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %47) #11
  %49 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %37, i32 %48) #11
  %50 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %49, i64 0, i32 2
  %51 = load i32, i32* %50, align 8
  switch i32 %51, label %264 [
    i32 65, label %52
    i32 66, label %52
    i32 67, label %52
    i32 70, label %52
  ]

52:                                               ; preds = %35, %35, %35, %35
  %53 = tail call zeroext i1 @_ZN8spvtools3opt19CombineAccessChains15Has64BitIndicesEPNS0_11InstructionE(%"class.spvtools::opt::CombineAccessChains"* %0, %"class.spvtools::opt::Instruction"* %1)
  br i1 %53, label %264, label %54

54:                                               ; preds = %52
  %55 = tail call zeroext i1 @_ZN8spvtools3opt19CombineAccessChains15Has64BitIndicesEPNS0_11InstructionE(%"class.spvtools::opt::CombineAccessChains"* %0, %"class.spvtools::opt::Instruction"* %49)
  br i1 %55, label %264, label %56

56:                                               ; preds = %54
  %57 = tail call i32 @_ZN8spvtools3opt19CombineAccessChains14GetArrayStrideEPKNS0_11InstructionE(%"class.spvtools::opt::CombineAccessChains"* %0, %"class.spvtools::opt::Instruction"* %49)
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %264

59:                                               ; preds = %56
  %60 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %49, i64 0, i32 6
  %61 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %49, i64 0, i32 6, i32 0, i32 1
  %62 = bitcast %"struct.spvtools::opt::Operand"** %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %"class.std::__1::vector"* %60 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %63, %65
  %67 = sdiv exact i64 %66, 48
  %68 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %49, i64 0, i32 3
  %69 = load i8, i8* %68, align 4, !range !2
  %70 = icmp eq i8 %69, 0
  %71 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %49, i64 0, i32 4
  %72 = load i8, i8* %71, align 1, !range !2
  %73 = icmp eq i8 %72, 0
  %74 = select i1 %73, i32 1, i32 2
  %75 = xor i1 %73, true
  %76 = zext i1 %75 to i32
  %77 = select i1 %70, i32 %76, i32 %74
  %78 = trunc i64 %67 to i32
  %79 = sub i32 %78, %77
  %80 = icmp eq i32 %79, 1
  br i1 %80, label %81, label %120

81:                                               ; preds = %59
  %82 = bitcast %"class.spvtools::utils::SmallVector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %82) #11
  %83 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %49, i32 %77) #11
  %84 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %84, align 8
  %85 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 1
  %86 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 2
  %87 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 3, i64 0
  %88 = bitcast i32** %86 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %87, %"struct.std::__1::aligned_storage<4, 4>::type"** %88, align 8
  %89 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 4
  %90 = bitcast %"class.std::__1::unique_ptr.0"* %89 to i64*
  store i64 0, i64* %90, align 8
  %91 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %87 to i32*
  store i64 1, i64* %85, align 8
  store i32 %83, i32* %91, align 8
  %92 = load i8, i8* %38, align 4, !range !2
  %93 = icmp eq i8 %92, 0
  %94 = load i8, i8* %41, align 1, !range !2
  %95 = icmp eq i8 %94, 0
  %96 = select i1 %95, i64 1, i64 2
  %97 = xor i1 %95, true
  %98 = zext i1 %97 to i64
  %99 = select i1 %93, i64 %98, i64 %96
  %100 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 0
  %101 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %100, align 8
  %102 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %101, i64 %99, i32 1
  %103 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %102, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %3) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %84, align 8
  %104 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 4, i32 0, i32 0, i32 0
  %105 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %104, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %104, align 8
  %106 = icmp eq %"class.std::__1::vector.3"* %105, null
  br i1 %106, label %118, label %107

107:                                              ; preds = %81
  %108 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %105, i64 0, i32 0, i32 0
  %109 = load i32*, i32** %108, align 8
  %110 = icmp eq i32* %109, null
  br i1 %110, label %116, label %111

111:                                              ; preds = %107
  %112 = ptrtoint i32* %109 to i64
  %113 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %105, i64 0, i32 0, i32 1
  %114 = bitcast i32** %113 to i64*
  store i64 %112, i64* %114, align 8
  %115 = bitcast i32* %109 to i8*
  call void @_ZdlPv(i8* %115) #12
  br label %116

116:                                              ; preds = %111, %107
  %117 = bitcast %"class.std::__1::vector.3"* %105 to i8*
  call void @_ZdlPv(i8* %117) #12
  br label %118

118:                                              ; preds = %81, %116
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %82) #11
  %119 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  call void @_ZN8spvtools3opt9IRContext11AnalyzeUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %119, %"class.spvtools::opt::Instruction"* %1) #11
  br label %264

120:                                              ; preds = %59
  %121 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  %122 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %123 = bitcast %"struct.spvtools::opt::Operand"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.std::__1::vector"* %121 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = sub i64 %124, %126
  %128 = sdiv exact i64 %127, 48
  %129 = load i8, i8* %38, align 4, !range !2
  %130 = icmp eq i8 %129, 0
  %131 = load i8, i8* %41, align 1, !range !2
  %132 = icmp eq i8 %131, 0
  %133 = select i1 %132, i32 1, i32 2
  %134 = xor i1 %132, true
  %135 = zext i1 %134 to i32
  %136 = select i1 %130, i32 %135, i32 %133
  %137 = trunc i64 %128 to i32
  %138 = sub i32 %137, %136
  %139 = icmp eq i32 %138, 1
  br i1 %139, label %140, label %142

140:                                              ; preds = %120
  %141 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  store i32 83, i32* %141, align 8
  br label %264

142:                                              ; preds = %120
  %143 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %143) #11
  %144 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %145 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %143, i8 0, i64 24, i1 false) #11
  %146 = call zeroext i1 @_ZN8spvtools3opt19CombineAccessChains22CreateNewInputOperandsEPNS0_11InstructionES3_PNSt3__16vectorINS0_7OperandENS4_9allocatorIS6_EEEE(%"class.spvtools::opt::CombineAccessChains"* %0, %"class.spvtools::opt::Instruction"* %49, %"class.spvtools::opt::Instruction"* %1, %"class.std::__1::vector"* nonnull %4)
  br i1 %146, label %147, label %231

147:                                              ; preds = %142
  %148 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %149 = load i32, i32* %148, align 8
  %150 = load i32, i32* %50, align 8
  switch i32 %150, label %157 [
    i32 70, label %151
    i32 66, label %154
  ]

151:                                              ; preds = %147
  %152 = or i32 %149, 4
  %153 = icmp eq i32 %152, 70
  br i1 %153, label %157, label %158

154:                                              ; preds = %147
  %155 = or i32 %149, 4
  %156 = icmp eq i32 %155, 70
  br i1 %156, label %157, label %158

157:                                              ; preds = %154, %151, %147
  br label %158

158:                                              ; preds = %151, %154, %157
  %159 = phi i32 [ %150, %157 ], [ 67, %151 ], [ 65, %154 ]
  store i32 %159, i32* %148, align 8
  %160 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %121, i64 0, i32 0, i32 0
  %161 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %160, align 8
  %162 = load i8, i8* %38, align 4, !range !2
  %163 = icmp eq i8 %162, 0
  %164 = load i8, i8* %41, align 1, !range !2
  %165 = icmp eq i8 %164, 0
  %166 = select i1 %165, i64 1, i64 2
  %167 = xor i1 %165, true
  %168 = zext i1 %167 to i64
  %169 = select i1 %163, i64 %168, i64 %166
  %170 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %161, i64 %169
  %171 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %122, align 8
  %172 = icmp eq %"struct.spvtools::opt::Operand"* %170, %171
  br i1 %172, label %194, label %173

173:                                              ; preds = %158, %191
  %174 = phi %"struct.spvtools::opt::Operand"* [ %175, %191 ], [ %171, %158 ]
  %175 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %174, i64 -1
  %176 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %174, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %176, align 8
  %177 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %174, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %178 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %177, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %177, align 8
  %179 = icmp eq %"class.std::__1::vector.3"* %178, null
  br i1 %179, label %191, label %180

180:                                              ; preds = %173
  %181 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %178, i64 0, i32 0, i32 0
  %182 = load i32*, i32** %181, align 8
  %183 = icmp eq i32* %182, null
  br i1 %183, label %189, label %184

184:                                              ; preds = %180
  %185 = ptrtoint i32* %182 to i64
  %186 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %178, i64 0, i32 0, i32 1
  %187 = bitcast i32** %186 to i64*
  store i64 %185, i64* %187, align 8
  %188 = bitcast i32* %182 to i8*
  call void @_ZdlPv(i8* %188) #12
  br label %189

189:                                              ; preds = %184, %180
  %190 = bitcast %"class.std::__1::vector.3"* %178 to i8*
  call void @_ZdlPv(i8* %190) #12
  br label %191

191:                                              ; preds = %189, %173
  %192 = icmp eq %"struct.spvtools::opt::Operand"* %175, %170
  br i1 %192, label %193, label %173

193:                                              ; preds = %191
  store %"struct.spvtools::opt::Operand"* %170, %"struct.spvtools::opt::Operand"** %122, align 8
  br label %194

194:                                              ; preds = %158, %193
  %195 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %144, align 8
  %196 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %145, align 8
  %197 = call %"struct.spvtools::opt::Operand"* @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE6insertINS_11__wrap_iterIPS3_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISC_E9referenceEEE5valueESA_E4typeENS8_IPKS3_EESC_SC_(%"class.std::__1::vector"* %121, %"struct.spvtools::opt::Operand"* %170, %"struct.spvtools::opt::Operand"* %195, %"struct.spvtools::opt::Operand"* %196) #11
  %198 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  call void @_ZN8spvtools3opt9IRContext11AnalyzeUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %198, %"class.spvtools::opt::Instruction"* %1) #11
  %199 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %144, align 8
  %200 = icmp eq %"struct.spvtools::opt::Operand"* %199, null
  br i1 %200, label %230, label %201

201:                                              ; preds = %194
  %202 = bitcast %"struct.spvtools::opt::Operand"* %199 to i8*
  %203 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %145, align 8
  %204 = icmp eq %"struct.spvtools::opt::Operand"* %203, %199
  br i1 %204, label %228, label %205

205:                                              ; preds = %201, %223
  %206 = phi %"struct.spvtools::opt::Operand"* [ %207, %223 ], [ %203, %201 ]
  %207 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %206, i64 -1
  %208 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %206, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %208, align 8
  %209 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %206, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %210 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %209, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %209, align 8
  %211 = icmp eq %"class.std::__1::vector.3"* %210, null
  br i1 %211, label %223, label %212

212:                                              ; preds = %205
  %213 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %210, i64 0, i32 0, i32 0
  %214 = load i32*, i32** %213, align 8
  %215 = icmp eq i32* %214, null
  br i1 %215, label %221, label %216

216:                                              ; preds = %212
  %217 = ptrtoint i32* %214 to i64
  %218 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %210, i64 0, i32 0, i32 1
  %219 = bitcast i32** %218 to i64*
  store i64 %217, i64* %219, align 8
  %220 = bitcast i32* %214 to i8*
  call void @_ZdlPv(i8* %220) #12
  br label %221

221:                                              ; preds = %216, %212
  %222 = bitcast %"class.std::__1::vector.3"* %210 to i8*
  call void @_ZdlPv(i8* %222) #12
  br label %223

223:                                              ; preds = %221, %205
  %224 = icmp eq %"struct.spvtools::opt::Operand"* %207, %199
  br i1 %224, label %225, label %205

225:                                              ; preds = %223
  %226 = bitcast %"class.std::__1::vector"* %4 to i8**
  %227 = load i8*, i8** %226, align 8
  br label %228

228:                                              ; preds = %225, %201
  %229 = phi i8* [ %227, %225 ], [ %202, %201 ]
  store %"struct.spvtools::opt::Operand"* %199, %"struct.spvtools::opt::Operand"** %145, align 8
  call void @_ZdlPv(i8* %229) #12
  br label %230

230:                                              ; preds = %194, %228
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %143) #11
  br label %264

231:                                              ; preds = %142
  %232 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %144, align 8
  %233 = icmp eq %"struct.spvtools::opt::Operand"* %232, null
  br i1 %233, label %263, label %234

234:                                              ; preds = %231
  %235 = bitcast %"struct.spvtools::opt::Operand"* %232 to i8*
  %236 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %145, align 8
  %237 = icmp eq %"struct.spvtools::opt::Operand"* %236, %232
  br i1 %237, label %261, label %238

238:                                              ; preds = %234, %256
  %239 = phi %"struct.spvtools::opt::Operand"* [ %240, %256 ], [ %236, %234 ]
  %240 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %239, i64 -1
  %241 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %239, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %241, align 8
  %242 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %239, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %243 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %242, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %242, align 8
  %244 = icmp eq %"class.std::__1::vector.3"* %243, null
  br i1 %244, label %256, label %245

245:                                              ; preds = %238
  %246 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %243, i64 0, i32 0, i32 0
  %247 = load i32*, i32** %246, align 8
  %248 = icmp eq i32* %247, null
  br i1 %248, label %254, label %249

249:                                              ; preds = %245
  %250 = ptrtoint i32* %247 to i64
  %251 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %243, i64 0, i32 0, i32 1
  %252 = bitcast i32** %251 to i64*
  store i64 %250, i64* %252, align 8
  %253 = bitcast i32* %247 to i8*
  call void @_ZdlPv(i8* %253) #12
  br label %254

254:                                              ; preds = %249, %245
  %255 = bitcast %"class.std::__1::vector.3"* %243 to i8*
  call void @_ZdlPv(i8* %255) #12
  br label %256

256:                                              ; preds = %254, %238
  %257 = icmp eq %"struct.spvtools::opt::Operand"* %240, %232
  br i1 %257, label %258, label %238

258:                                              ; preds = %256
  %259 = bitcast %"class.std::__1::vector"* %4 to i8**
  %260 = load i8*, i8** %259, align 8
  br label %261

261:                                              ; preds = %258, %234
  %262 = phi i8* [ %260, %258 ], [ %235, %234 ]
  store %"struct.spvtools::opt::Operand"* %232, %"struct.spvtools::opt::Operand"** %145, align 8
  call void @_ZdlPv(i8* %262) #12
  br label %263

263:                                              ; preds = %231, %261
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %143) #11
  br label %264

264:                                              ; preds = %35, %56, %263, %230, %140, %118, %52, %54
  %265 = phi i1 [ false, %54 ], [ false, %52 ], [ false, %263 ], [ false, %56 ], [ true, %230 ], [ true, %140 ], [ true, %118 ], [ false, %35 ]
  ret i1 %265
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt19CombineAccessChains15Has64BitIndicesEPNS0_11InstructionE(%"class.spvtools::opt::CombineAccessChains"* nocapture readonly, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  %4 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %5 = bitcast %"struct.spvtools::opt::Operand"** %4 to i64*
  %6 = bitcast %"class.std::__1::vector"* %3 to i64*
  %7 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %8 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %9 = getelementptr inbounds %"class.spvtools::opt::CombineAccessChains", %"class.spvtools::opt::CombineAccessChains"* %0, i64 0, i32 0, i32 2
  br label %10

10:                                               ; preds = %110, %2
  %11 = phi i32 [ 1, %2 ], [ %118, %110 ]
  %12 = load i64, i64* %5, align 8
  %13 = load i64, i64* %6, align 8
  %14 = sub i64 %12, %13
  %15 = sdiv exact i64 %14, 48
  %16 = load i8, i8* %7, align 4, !range !2
  %17 = icmp eq i8 %16, 0
  %18 = load i8, i8* %8, align 1, !range !2
  %19 = icmp eq i8 %18, 0
  %20 = select i1 %19, i32 1, i32 2
  %21 = xor i1 %19, true
  %22 = zext i1 %21 to i32
  %23 = select i1 %17, i32 %22, i32 %20
  %24 = trunc i64 %15 to i32
  %25 = sub i32 %24, %23
  %26 = icmp ult i32 %11, %25
  br i1 %26, label %27, label %119

27:                                               ; preds = %10
  %28 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %9, align 8
  %29 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %28, i64 0, i32 11
  %30 = load i32, i32* %29, align 8
  %31 = and i32 %30, 1
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %59

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %28, i64 0, i32 4, i32 0, i32 0, i32 0
  %35 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %34, align 8
  %36 = tail call i8* @_Znwm(i64 104) #12
  %37 = bitcast i8* %36 to %"class.spvtools::opt::analysis::DefUseManager"*
  %38 = getelementptr inbounds i8, i8* %36, i64 32
  %39 = bitcast i8* %38 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %39, align 4
  %40 = getelementptr inbounds i8, i8* %36, i64 48
  %41 = getelementptr inbounds i8, i8* %36, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 16, i1 false) #11
  %42 = bitcast i8* %41 to i8**
  store i8* %40, i8** %42, align 8
  %43 = getelementptr inbounds i8, i8* %36, i64 64
  %44 = getelementptr inbounds i8, i8* %36, i64 96
  %45 = bitcast i8* %44 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %45, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %37, %"class.spvtools::opt::Module"* %35) #11
  %46 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %28, i64 0, i32 6
  %47 = ptrtoint i8* %36 to i64
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %46, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %48, align 8
  %50 = bitcast %"class.std::__1::unique_ptr.62"* %46 to i64*
  store i64 %47, i64* %50, align 8
  %51 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %49, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %33
  %53 = bitcast %"class.std::__1::unique_ptr.62"* %46 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %53, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %49) #11
  br label %54

54:                                               ; preds = %52, %33
  %55 = load i32, i32* %29, align 8
  %56 = or i32 %55, 1
  store i32 %56, i32* %29, align 8
  %57 = load i8, i8* %7, align 4, !range !2
  %58 = load i8, i8* %8, align 1, !range !2
  br label %59

59:                                               ; preds = %27, %54
  %60 = phi i8 [ %18, %27 ], [ %58, %54 ]
  %61 = phi i8 [ %16, %27 ], [ %57, %54 ]
  %62 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %28, i64 0, i32 6, i32 0, i32 0, i32 0
  %63 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %62, align 8
  %64 = icmp eq i8 %61, 0
  %65 = icmp eq i8 %60, 0
  %66 = select i1 %65, i32 1, i32 2
  %67 = xor i1 %65, true
  %68 = zext i1 %67 to i32
  %69 = select i1 %64, i32 %68, i32 %66
  %70 = add i32 %69, %11
  %71 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %70) #11
  %72 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %63, i32 %71) #11
  %73 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %9, align 8
  %74 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %73, i64 0, i32 11
  %75 = load i32, i32* %74, align 8
  %76 = trunc i32 %75 to i16
  %77 = icmp slt i16 %76, 0
  br i1 %77, label %93, label %78

78:                                               ; preds = %59
  %79 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %73, i64 0, i32 5
  %80 = tail call i8* @_Znwm(i64 240) #12
  %81 = bitcast i8* %80 to %"class.spvtools::opt::analysis::TypeManager"*
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %81, %"class.std::__1::function"* dereferenceable(32) %79, %"class.spvtools::opt::IRContext"* %73) #11
  %82 = ptrtoint i8* %80 to i64
  %83 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %73, i64 0, i32 20
  %84 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %83, i64 0, i32 0, i32 0, i32 0
  %85 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %84, align 8
  %86 = bitcast %"class.std::__1::unique_ptr.480"* %83 to i64*
  store i64 %82, i64* %86, align 8
  %87 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %85, null
  br i1 %87, label %90, label %88

88:                                               ; preds = %78
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %85) #11
  %89 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %85 to i8*
  tail call void @_ZdlPv(i8* %89) #12
  br label %90

90:                                               ; preds = %88, %78
  %91 = load i32, i32* %74, align 8
  %92 = or i32 %91, 32768
  store i32 %92, i32* %74, align 8
  br label %93

93:                                               ; preds = %59, %90
  %94 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %73, i64 0, i32 20, i32 0, i32 0, i32 0
  %95 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %94, align 8
  %96 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %72, i64 0, i32 3
  %97 = load i8, i8* %96, align 4, !range !2
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %101, label %99

99:                                               ; preds = %93
  %100 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %72, i32 0) #11
  br label %101

101:                                              ; preds = %93, %99
  %102 = phi i32 [ %100, %99 ], [ 0, %93 ]
  %103 = tail call %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis11TypeManager7GetTypeEj(%"class.spvtools::opt::analysis::TypeManager"* %95, i32 %102) #11
  %104 = bitcast %"class.spvtools::opt::analysis::Type"* %103 to %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)***
  %105 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*** %104, align 8
  %106 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %105, i64 11
  %107 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %106, align 8
  %108 = tail call %"class.spvtools::opt::analysis::Integer"* %107(%"class.spvtools::opt::analysis::Type"* %103) #11
  %109 = icmp eq %"class.spvtools::opt::analysis::Integer"* %108, null
  br i1 %109, label %119, label %110

110:                                              ; preds = %101
  %111 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*** %104, align 8
  %112 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %111, i64 11
  %113 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %112, align 8
  %114 = tail call %"class.spvtools::opt::analysis::Integer"* %113(%"class.spvtools::opt::analysis::Type"* %103) #11
  %115 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %114, i64 0, i32 1
  %116 = load i32, i32* %115, align 4
  %117 = icmp eq i32 %116, 32
  %118 = add nuw i32 %11, 1
  br i1 %117, label %10, label %119

119:                                              ; preds = %10, %110, %101
  %120 = phi i1 [ true, %101 ], [ true, %110 ], [ false, %10 ]
  ret i1 %120
}

declare void @_ZN8spvtools3opt9IRContext11AnalyzeUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN8spvtools3opt19CombineAccessChains12UpdateOpcodeE6SpvOp_S2_(%"class.spvtools::opt::CombineAccessChains"* nocapture readnone, i32, i32) local_unnamed_addr #3 align 2 {
  switch i32 %2, label %10 [
    i32 70, label %4
    i32 66, label %7
  ]

4:                                                ; preds = %3
  %5 = or i32 %1, 4
  %6 = icmp eq i32 %5, 70
  br i1 %6, label %10, label %11

7:                                                ; preds = %3
  %8 = or i32 %1, 4
  %9 = icmp eq i32 %8, 70
  br i1 %9, label %10, label %11

10:                                               ; preds = %3, %7, %4
  br label %11

11:                                               ; preds = %7, %4, %10
  %12 = phi i32 [ %2, %10 ], [ 67, %4 ], [ 65, %7 ]
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt4PassD2Ev(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt4PassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 1, i32 0, i32 2
  %4 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %4, i64 0, i32 1
  %6 = load void (i8*)*, void (i8*)** %5, align 8
  %7 = icmp eq void (i8*)* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void %6(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt19CombineAccessChainsD0Ev(%"class.spvtools::opt::CombineAccessChains"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::CombineAccessChains", %"class.spvtools::opt::CombineAccessChains"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt4PassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::CombineAccessChains", %"class.spvtools::opt::CombineAccessChains"* %0, i64 0, i32 0, i32 1, i32 0, i32 2
  %4 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %4, i64 0, i32 1
  %6 = load void (i8*)*, void (i8*)** %5, align 8
  %7 = icmp eq void (i8*)* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.spvtools::opt::CombineAccessChains", %"class.spvtools::opt::CombineAccessChains"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void %6(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %8
  %12 = bitcast %"class.spvtools::opt::CombineAccessChains"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK8spvtools3opt19CombineAccessChains4nameEv(%"class.spvtools::opt::CombineAccessChains"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN8spvtools3opt19CombineAccessChains20GetPreservedAnalysesEv(%"class.spvtools::opt::CombineAccessChains"*) unnamed_addr #0 comdat align 2 {
  ret i32 49343
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"*, %"class.spvtools::opt::Module"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base.333"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1, %5
  %6 = phi %"struct.std::__1::__hash_node_base.333"* [ %8, %5 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %7, align 8
  %9 = bitcast %"struct.std::__1::__hash_node_base.333"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #12
  %10 = icmp eq %"struct.std::__1::__hash_node_base.333"* %8, null
  br i1 %10, label %11, label %5

11:                                               ; preds = %5, %1
  %12 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %12, align 8
  store %"struct.std::__1::__hash_node_base.333"** null, %"struct.std::__1::__hash_node_base.333"*** %12, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.333"** %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %"struct.std::__1::__hash_node_base.333"** %13 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %11, %15
  %18 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %18, align 8
  %20 = icmp eq %"struct.std::__1::__hash_node_base.309"* %19, null
  br i1 %20, label %37, label %21

21:                                               ; preds = %17, %34
  %22 = phi %"struct.std::__1::__hash_node_base.309"* [ %24, %34 ], [ %19, %17 ]
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %22, i64 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %22, i64 3
  %26 = bitcast %"struct.std::__1::__hash_node_base.309"* %25 to i32**
  %27 = load i32*, i32** %26, align 8
  %28 = icmp eq i32* %27, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %21
  %30 = ptrtoint i32* %27 to i64
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %22, i64 4
  %32 = bitcast %"struct.std::__1::__hash_node_base.309"* %31 to i64*
  store i64 %30, i64* %32, align 8
  %33 = bitcast i32* %27 to i8*
  tail call void @_ZdlPv(i8* %33) #12
  br label %34

34:                                               ; preds = %29, %21
  %35 = bitcast %"struct.std::__1::__hash_node_base.309"* %22 to i8*
  tail call void @_ZdlPv(i8* %35) #12
  %36 = icmp eq %"struct.std::__1::__hash_node_base.309"* %24, null
  br i1 %36, label %37, label %21

37:                                               ; preds = %34, %17
  %38 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %38, align 8
  store %"struct.std::__1::__hash_node_base.309"** null, %"struct.std::__1::__hash_node_base.309"*** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base.309"** %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %37
  %42 = bitcast %"struct.std::__1::__hash_node_base.309"** %39 to i8*
  tail call void @_ZdlPv(i8* %42) #12
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %45 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 2, i32 0, i32 1, i32 0, i32 1
  %46 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %45, align 8
  %47 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %46, i64 0, i32 0, i32 3
  %48 = load i8, i8* %47, align 8, !range !2
  %49 = icmp ne i8 %48, 0
  %50 = icmp eq %"class.spvtools::opt::Instruction"* %46, null
  %51 = or i1 %50, %49
  br i1 %51, label %79, label %52

52:                                               ; preds = %43, %52
  %53 = phi %"class.spvtools::opt::Instruction"* [ %73, %52 ], [ %46, %43 ]
  %54 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %53, i64 0, i32 0, i32 2
  %55 = bitcast %"class.spvtools::opt::Instruction"** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %53, i64 0, i32 0, i32 1
  %58 = bitcast %"class.spvtools::opt::Instruction"** %57 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %59 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %58, align 8
  %60 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %59, i64 0, i32 2
  %61 = bitcast %"class.spvtools::opt::Instruction"** %60 to i64*
  store i64 %56, i64* %61, align 8
  %62 = bitcast %"class.spvtools::opt::Instruction"** %57 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %"class.spvtools::opt::Instruction"** %54 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %65 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %64, align 8
  %66 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %65, i64 0, i32 1
  %67 = bitcast %"class.spvtools::opt::Instruction"** %66 to i64*
  store i64 %63, i64* %67, align 8
  %68 = bitcast %"class.spvtools::opt::Instruction"** %57 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 16, i1 false) #11
  %69 = bitcast %"class.spvtools::opt::Instruction"* %53 to void (%"class.spvtools::opt::Instruction"*)***
  %70 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %70, i64 1
  %72 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %71, align 8
  tail call void %72(%"class.spvtools::opt::Instruction"* nonnull %53) #11
  %73 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %45, align 8
  %74 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %73, i64 0, i32 0, i32 3
  %75 = load i8, i8* %74, align 8, !range !2
  %76 = icmp ne i8 %75, 0
  %77 = icmp eq %"class.spvtools::opt::Instruction"* %73, null
  %78 = or i1 %77, %76
  br i1 %78, label %79, label %52

79:                                               ; preds = %52, %43
  %80 = phi %"class.spvtools::opt::Instruction"* [ %46, %43 ], [ %73, %52 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %81 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %80, i64 0, i32 0, i32 3
  %82 = load i8, i8* %81, align 8, !range !2
  %83 = icmp ne i8 %82, 0
  %84 = icmp eq %"class.spvtools::opt::Instruction"* %80, null
  %85 = or i1 %84, %83
  br i1 %85, label %109, label %86

86:                                               ; preds = %79, %86
  %87 = phi %"class.spvtools::opt::Instruction"* [ %103, %86 ], [ %80, %79 ]
  %88 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %87, i64 0, i32 0, i32 2
  %89 = bitcast %"class.spvtools::opt::Instruction"** %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %87, i64 0, i32 0, i32 1
  %92 = bitcast %"class.spvtools::opt::Instruction"** %91 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %93 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %92, align 8
  %94 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %93, i64 0, i32 2
  %95 = bitcast %"class.spvtools::opt::Instruction"** %94 to i64*
  store i64 %90, i64* %95, align 8
  %96 = bitcast %"class.spvtools::opt::Instruction"** %91 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %"class.spvtools::opt::Instruction"** %88 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %99 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %98, align 8
  %100 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %99, i64 0, i32 1
  %101 = bitcast %"class.spvtools::opt::Instruction"** %100 to i64*
  store i64 %97, i64* %101, align 8
  %102 = bitcast %"class.spvtools::opt::Instruction"** %91 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 16, i1 false) #11
  %103 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %45, align 8
  %104 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %103, i64 0, i32 0, i32 3
  %105 = load i8, i8* %104, align 8, !range !2
  %106 = icmp ne i8 %105, 0
  %107 = icmp eq %"class.spvtools::opt::Instruction"* %103, null
  %108 = or i1 %107, %106
  br i1 %108, label %109, label %86

109:                                              ; preds = %86, %79
  %110 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 2, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %110) #11
  %111 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %112 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %111, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %111, align 8
  %113 = icmp eq %"class.spvtools::opt::Instruction"* %112, null
  br i1 %113, label %119, label %114

114:                                              ; preds = %109
  %115 = bitcast %"class.spvtools::opt::Instruction"* %112 to void (%"class.spvtools::opt::Instruction"*)***
  %116 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %115, align 8
  %117 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %116, i64 1
  %118 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %117, align 8
  tail call void %118(%"class.spvtools::opt::Instruction"* nonnull %112) #11
  br label %119

119:                                              ; preds = %109, %114
  %120 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %120, align 8
  %121 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 2, i32 0, i32 1, i32 0, i32 1
  %122 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %121, align 8
  %123 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %122, i64 0, i32 0, i32 3
  %124 = load i8, i8* %123, align 8, !range !2
  %125 = icmp ne i8 %124, 0
  %126 = icmp eq %"class.spvtools::opt::Instruction"* %122, null
  %127 = or i1 %126, %125
  br i1 %127, label %155, label %128

128:                                              ; preds = %119, %128
  %129 = phi %"class.spvtools::opt::Instruction"* [ %149, %128 ], [ %122, %119 ]
  %130 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %129, i64 0, i32 0, i32 2
  %131 = bitcast %"class.spvtools::opt::Instruction"** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %129, i64 0, i32 0, i32 1
  %134 = bitcast %"class.spvtools::opt::Instruction"** %133 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %135 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %134, align 8
  %136 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %135, i64 0, i32 2
  %137 = bitcast %"class.spvtools::opt::Instruction"** %136 to i64*
  store i64 %132, i64* %137, align 8
  %138 = bitcast %"class.spvtools::opt::Instruction"** %133 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"class.spvtools::opt::Instruction"** %130 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %141 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %140, align 8
  %142 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %141, i64 0, i32 1
  %143 = bitcast %"class.spvtools::opt::Instruction"** %142 to i64*
  store i64 %139, i64* %143, align 8
  %144 = bitcast %"class.spvtools::opt::Instruction"** %133 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %144, i8 0, i64 16, i1 false) #11
  %145 = bitcast %"class.spvtools::opt::Instruction"* %129 to void (%"class.spvtools::opt::Instruction"*)***
  %146 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %145, align 8
  %147 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %146, i64 1
  %148 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %147, align 8
  tail call void %148(%"class.spvtools::opt::Instruction"* nonnull %129) #11
  %149 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %121, align 8
  %150 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %149, i64 0, i32 0, i32 3
  %151 = load i8, i8* %150, align 8, !range !2
  %152 = icmp ne i8 %151, 0
  %153 = icmp eq %"class.spvtools::opt::Instruction"* %149, null
  %154 = or i1 %153, %152
  br i1 %154, label %155, label %128

155:                                              ; preds = %128, %119
  %156 = phi %"class.spvtools::opt::Instruction"* [ %122, %119 ], [ %149, %128 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %120, align 8
  %157 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %156, i64 0, i32 0, i32 3
  %158 = load i8, i8* %157, align 8, !range !2
  %159 = icmp ne i8 %158, 0
  %160 = icmp eq %"class.spvtools::opt::Instruction"* %156, null
  %161 = or i1 %160, %159
  br i1 %161, label %185, label %162

162:                                              ; preds = %155, %162
  %163 = phi %"class.spvtools::opt::Instruction"* [ %179, %162 ], [ %156, %155 ]
  %164 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %163, i64 0, i32 0, i32 2
  %165 = bitcast %"class.spvtools::opt::Instruction"** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %163, i64 0, i32 0, i32 1
  %168 = bitcast %"class.spvtools::opt::Instruction"** %167 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %169 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %168, align 8
  %170 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %169, i64 0, i32 2
  %171 = bitcast %"class.spvtools::opt::Instruction"** %170 to i64*
  store i64 %166, i64* %171, align 8
  %172 = bitcast %"class.spvtools::opt::Instruction"** %167 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = bitcast %"class.spvtools::opt::Instruction"** %164 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %175 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %174, align 8
  %176 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %175, i64 0, i32 1
  %177 = bitcast %"class.spvtools::opt::Instruction"** %176 to i64*
  store i64 %173, i64* %177, align 8
  %178 = bitcast %"class.spvtools::opt::Instruction"** %167 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %178, i8 0, i64 16, i1 false) #11
  %179 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %121, align 8
  %180 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %179, i64 0, i32 0, i32 3
  %181 = load i8, i8* %180, align 8, !range !2
  %182 = icmp ne i8 %181, 0
  %183 = icmp eq %"class.spvtools::opt::Instruction"* %179, null
  %184 = or i1 %183, %182
  br i1 %184, label %185, label %162

185:                                              ; preds = %162, %155
  %186 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 2, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %186) #11
  %187 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %188 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %187, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %187, align 8
  %189 = icmp eq %"class.spvtools::opt::Instruction"* %188, null
  br i1 %189, label %195, label %190

190:                                              ; preds = %185
  %191 = bitcast %"class.spvtools::opt::Instruction"* %188 to void (%"class.spvtools::opt::Instruction"*)***
  %192 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %191, align 8
  %193 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %192, i64 1
  %194 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %193, align 8
  tail call void %194(%"class.spvtools::opt::Instruction"* nonnull %188) #11
  br label %195

195:                                              ; preds = %185, %190
  %196 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %197 = load %"struct.std::__1::__hash_node_base.281"*, %"struct.std::__1::__hash_node_base.281"** %196, align 8
  %198 = icmp eq %"struct.std::__1::__hash_node_base.281"* %197, null
  br i1 %198, label %215, label %199

199:                                              ; preds = %195, %212
  %200 = phi %"struct.std::__1::__hash_node_base.281"* [ %202, %212 ], [ %197, %195 ]
  %201 = getelementptr inbounds %"struct.std::__1::__hash_node_base.281", %"struct.std::__1::__hash_node_base.281"* %200, i64 0, i32 0
  %202 = load %"struct.std::__1::__hash_node_base.281"*, %"struct.std::__1::__hash_node_base.281"** %201, align 8
  %203 = getelementptr inbounds %"struct.std::__1::__hash_node_base.281", %"struct.std::__1::__hash_node_base.281"* %200, i64 3
  %204 = bitcast %"struct.std::__1::__hash_node_base.281"* %203 to %"class.spvtools::opt::BasicBlock"***
  %205 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %204, align 8
  %206 = icmp eq %"class.spvtools::opt::BasicBlock"** %205, null
  br i1 %206, label %212, label %207

207:                                              ; preds = %199
  %208 = ptrtoint %"class.spvtools::opt::BasicBlock"** %205 to i64
  %209 = getelementptr inbounds %"struct.std::__1::__hash_node_base.281", %"struct.std::__1::__hash_node_base.281"* %200, i64 4
  %210 = bitcast %"struct.std::__1::__hash_node_base.281"* %209 to i64*
  store i64 %208, i64* %210, align 8
  %211 = bitcast %"class.spvtools::opt::BasicBlock"** %205 to i8*
  tail call void @_ZdlPv(i8* %211) #12
  br label %212

212:                                              ; preds = %207, %199
  %213 = bitcast %"struct.std::__1::__hash_node_base.281"* %200 to i8*
  tail call void @_ZdlPv(i8* %213) #12
  %214 = icmp eq %"struct.std::__1::__hash_node_base.281"* %202, null
  br i1 %214, label %215, label %199

215:                                              ; preds = %212, %195
  %216 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %217 = load %"struct.std::__1::__hash_node_base.281"**, %"struct.std::__1::__hash_node_base.281"*** %216, align 8
  store %"struct.std::__1::__hash_node_base.281"** null, %"struct.std::__1::__hash_node_base.281"*** %216, align 8
  %218 = icmp eq %"struct.std::__1::__hash_node_base.281"** %217, null
  br i1 %218, label %221, label %219

219:                                              ; preds = %215
  %220 = bitcast %"struct.std::__1::__hash_node_base.281"** %217 to i8*
  tail call void @_ZdlPv(i8* %220) #12
  br label %221

221:                                              ; preds = %215, %219
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt15InstructionListD2Ev(%"class.spvtools::opt::InstructionList"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %37, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %31, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #11
  %27 = bitcast %"class.spvtools::opt::Instruction"* %11 to void (%"class.spvtools::opt::Instruction"*)***
  %28 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %28, i64 1
  %30 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %29, align 8
  tail call void %30(%"class.spvtools::opt::Instruction"* nonnull %11) #11
  %31 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %31, i64 0, i32 0, i32 3
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = icmp ne i8 %33, 0
  %35 = icmp eq %"class.spvtools::opt::Instruction"* %31, null
  %36 = or i1 %35, %34
  br i1 %36, label %37, label %10

37:                                               ; preds = %10, %1
  %38 = phi %"class.spvtools::opt::Instruction"* [ %4, %1 ], [ %31, %10 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %38, i64 0, i32 0, i32 3
  %40 = load i8, i8* %39, align 8, !range !2
  %41 = icmp ne i8 %40, 0
  %42 = icmp eq %"class.spvtools::opt::Instruction"* %38, null
  %43 = or i1 %42, %41
  br i1 %43, label %67, label %44

44:                                               ; preds = %37, %44
  %45 = phi %"class.spvtools::opt::Instruction"* [ %61, %44 ], [ %38, %37 ]
  %46 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 2
  %47 = bitcast %"class.spvtools::opt::Instruction"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 1
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %51 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %51, i64 0, i32 2
  %53 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  store i64 %48, i64* %53, align 8
  %54 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.spvtools::opt::Instruction"** %46 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %57 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %56, align 8
  %58 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %57, i64 0, i32 1
  %59 = bitcast %"class.spvtools::opt::Instruction"** %58 to i64*
  store i64 %55, i64* %59, align 8
  %60 = bitcast %"class.spvtools::opt::Instruction"** %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #11
  %61 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %61, i64 0, i32 0, i32 3
  %63 = load i8, i8* %62, align 8, !range !2
  %64 = icmp ne i8 %63, 0
  %65 = icmp eq %"class.spvtools::opt::Instruction"* %61, null
  %66 = or i1 %65, %64
  br i1 %66, label %67, label %44

67:                                               ; preds = %44, %37
  %68 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %68) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt15InstructionListD0Ev(%"class.spvtools::opt::InstructionList"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %37, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %31, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #11
  %27 = bitcast %"class.spvtools::opt::Instruction"* %11 to void (%"class.spvtools::opt::Instruction"*)***
  %28 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %28, i64 1
  %30 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %29, align 8
  tail call void %30(%"class.spvtools::opt::Instruction"* nonnull %11) #11
  %31 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %31, i64 0, i32 0, i32 3
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = icmp ne i8 %33, 0
  %35 = icmp eq %"class.spvtools::opt::Instruction"* %31, null
  %36 = or i1 %35, %34
  br i1 %36, label %37, label %10

37:                                               ; preds = %10, %1
  %38 = phi %"class.spvtools::opt::Instruction"* [ %4, %1 ], [ %31, %10 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %38, i64 0, i32 0, i32 3
  %40 = load i8, i8* %39, align 8, !range !2
  %41 = icmp ne i8 %40, 0
  %42 = icmp eq %"class.spvtools::opt::Instruction"* %38, null
  %43 = or i1 %42, %41
  br i1 %43, label %67, label %44

44:                                               ; preds = %37, %44
  %45 = phi %"class.spvtools::opt::Instruction"* [ %61, %44 ], [ %38, %37 ]
  %46 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 2
  %47 = bitcast %"class.spvtools::opt::Instruction"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 1
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %51 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %51, i64 0, i32 2
  %53 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  store i64 %48, i64* %53, align 8
  %54 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.spvtools::opt::Instruction"** %46 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %57 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %56, align 8
  %58 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %57, i64 0, i32 1
  %59 = bitcast %"class.spvtools::opt::Instruction"** %58 to i64*
  store i64 %55, i64* %59, align 8
  %60 = bitcast %"class.spvtools::opt::Instruction"** %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #11
  %61 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %61, i64 0, i32 0, i32 3
  %63 = load i8, i8* %62, align 8, !range !2
  %64 = icmp ne i8 %63, 0
  %65 = icmp eq %"class.spvtools::opt::Instruction"* %61, null
  %66 = or i1 %65, %64
  br i1 %66, label %67, label %44

67:                                               ; preds = %44, %37
  %68 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %68) #11
  %69 = bitcast %"class.spvtools::opt::InstructionList"* %0 to i8*
  tail call void @_ZdlPv(i8* %69) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 7
  %4 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %4, align 8
  %6 = icmp eq %"class.spvtools::opt::Instruction"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.spvtools::opt::Instruction"* %5 to i8*
  %9 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 7, i32 0, i32 1
  %10 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %9, align 8
  %11 = icmp eq %"class.spvtools::opt::Instruction"* %10, %5
  br i1 %11, label %22, label %12

12:                                               ; preds = %7, %12
  %13 = phi %"class.spvtools::opt::Instruction"* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %13, i64 -1
  %15 = bitcast %"class.spvtools::opt::Instruction"* %14 to void (%"class.spvtools::opt::Instruction"*)***
  %16 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %15, align 8
  %17 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %16, align 8
  tail call void %17(%"class.spvtools::opt::Instruction"* %14) #11
  %18 = icmp eq %"class.spvtools::opt::Instruction"* %14, %5
  br i1 %18, label %19, label %12

19:                                               ; preds = %12
  %20 = bitcast %"class.std::__1::vector.14"* %3 to i8**
  %21 = load i8*, i8** %20, align 8
  br label %22

22:                                               ; preds = %19, %7
  %23 = phi i8* [ %21, %19 ], [ %8, %7 ]
  store %"class.spvtools::opt::Instruction"* %5, %"class.spvtools::opt::Instruction"** %9, align 8
  tail call void @_ZdlPv(i8* %23) #12
  br label %24

24:                                               ; preds = %1, %22
  %25 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6
  %26 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %25, i64 0, i32 0, i32 0
  %27 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %26, align 8
  %28 = icmp eq %"struct.spvtools::opt::Operand"* %27, null
  br i1 %28, label %59, label %29

29:                                               ; preds = %24
  %30 = bitcast %"struct.spvtools::opt::Operand"* %27 to i8*
  %31 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6, i32 0, i32 1
  %32 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %31, align 8
  %33 = icmp eq %"struct.spvtools::opt::Operand"* %32, %27
  br i1 %33, label %57, label %34

34:                                               ; preds = %29, %52
  %35 = phi %"struct.spvtools::opt::Operand"* [ %36, %52 ], [ %32, %29 ]
  %36 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %39 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %38, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %38, align 8
  %40 = icmp eq %"class.std::__1::vector.3"* %39, null
  br i1 %40, label %52, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %39, i64 0, i32 0, i32 0
  %43 = load i32*, i32** %42, align 8
  %44 = icmp eq i32* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %41
  %46 = ptrtoint i32* %43 to i64
  %47 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %39, i64 0, i32 0, i32 1
  %48 = bitcast i32** %47 to i64*
  store i64 %46, i64* %48, align 8
  %49 = bitcast i32* %43 to i8*
  tail call void @_ZdlPv(i8* %49) #12
  br label %50

50:                                               ; preds = %45, %41
  %51 = bitcast %"class.std::__1::vector.3"* %39 to i8*
  tail call void @_ZdlPv(i8* %51) #12
  br label %52

52:                                               ; preds = %50, %34
  %53 = icmp eq %"struct.spvtools::opt::Operand"* %36, %27
  br i1 %53, label %54, label %34

54:                                               ; preds = %52
  %55 = bitcast %"class.std::__1::vector"* %25 to i8**
  %56 = load i8*, i8** %55, align 8
  br label %57

57:                                               ; preds = %54, %29
  %58 = phi i8* [ %56, %54 ], [ %30, %29 ]
  store %"struct.spvtools::opt::Operand"* %27, %"struct.spvtools::opt::Operand"** %31, align 8
  tail call void @_ZdlPv(i8* %58) #12
  br label %59

59:                                               ; preds = %24, %57
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev(%"class.spvtools::utils::IntrusiveList"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %33, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %27, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #11
  %27 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %27, i64 0, i32 0, i32 3
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = icmp ne i8 %29, 0
  %31 = icmp eq %"class.spvtools::opt::Instruction"* %27, null
  %32 = or i1 %31, %30
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %1
  %34 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %34) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev(%"class.spvtools::utils::IntrusiveList"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %33, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %27, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #11
  %27 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %27, i64 0, i32 0, i32 3
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = icmp ne i8 %29, 0
  %31 = icmp eq %"class.spvtools::opt::Instruction"* %27, null
  %32 = or i1 %31, %30
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %1
  %34 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %34) #11
  %35 = bitcast %"class.spvtools::utils::IntrusiveList"* %0 to i8*
  tail call void @_ZdlPv(i8* %35) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt11InstructionD0Ev(%"class.spvtools::opt::Instruction"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %0) #11
  %2 = bitcast %"class.spvtools::opt::Instruction"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev(%"class.spvtools::utils::IntrusiveNodeBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev(%"class.spvtools::utils::IntrusiveNodeBase"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.spvtools::utils::IntrusiveNodeBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

declare void @_ZN8spvtools3opt8analysis17DecorationManager18AnalyzeDecorationsEv(%"class.spvtools::opt::analysis::DecorationManager"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis17DecorationManagerEEclEPS4_(%"struct.std::__1::default_delete.150"*, %"class.spvtools::opt::analysis::DecorationManager"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::analysis::DecorationManager"* %1, null
  br i1 %3, label %52, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::analysis::DecorationManager", %"class.spvtools::opt::analysis::DecorationManager"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::__hash_node_base.130"*, %"struct.std::__1::__hash_node_base.130"** %5, align 8
  %7 = icmp eq %"struct.std::__1::__hash_node_base.130"* %6, null
  br i1 %7, label %44, label %8

8:                                                ; preds = %4, %41
  %9 = phi %"struct.std::__1::__hash_node_base.130"* [ %11, %41 ], [ %6, %4 ]
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 0, i32 0
  %11 = load %"struct.std::__1::__hash_node_base.130"*, %"struct.std::__1::__hash_node_base.130"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 9
  %13 = bitcast %"struct.std::__1::__hash_node_base.130"* %12 to %"class.spvtools::opt::Instruction"***
  %14 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %13, align 8
  %15 = icmp eq %"class.spvtools::opt::Instruction"** %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %8
  %17 = ptrtoint %"class.spvtools::opt::Instruction"** %14 to i64
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 10
  %19 = bitcast %"struct.std::__1::__hash_node_base.130"* %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %14 to i8*
  tail call void @_ZdlPv(i8* %20) #12
  br label %21

21:                                               ; preds = %16, %8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 6
  %23 = bitcast %"struct.std::__1::__hash_node_base.130"* %22 to %"class.spvtools::opt::Instruction"***
  %24 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %23, align 8
  %25 = icmp eq %"class.spvtools::opt::Instruction"** %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %21
  %27 = ptrtoint %"class.spvtools::opt::Instruction"** %24 to i64
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 7
  %29 = bitcast %"struct.std::__1::__hash_node_base.130"* %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = bitcast %"class.spvtools::opt::Instruction"** %24 to i8*
  tail call void @_ZdlPv(i8* %30) #12
  br label %31

31:                                               ; preds = %26, %21
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 3
  %33 = bitcast %"struct.std::__1::__hash_node_base.130"* %32 to %"class.spvtools::opt::Instruction"***
  %34 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %33, align 8
  %35 = icmp eq %"class.spvtools::opt::Instruction"** %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %31
  %37 = ptrtoint %"class.spvtools::opt::Instruction"** %34 to i64
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 4
  %39 = bitcast %"struct.std::__1::__hash_node_base.130"* %38 to i64*
  store i64 %37, i64* %39, align 8
  %40 = bitcast %"class.spvtools::opt::Instruction"** %34 to i8*
  tail call void @_ZdlPv(i8* %40) #12
  br label %41

41:                                               ; preds = %36, %31
  %42 = bitcast %"struct.std::__1::__hash_node_base.130"* %9 to i8*
  tail call void @_ZdlPv(i8* %42) #12
  %43 = icmp eq %"struct.std::__1::__hash_node_base.130"* %11, null
  br i1 %43, label %44, label %8

44:                                               ; preds = %41, %4
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::DecorationManager", %"class.spvtools::opt::analysis::DecorationManager"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base.130"**, %"struct.std::__1::__hash_node_base.130"*** %45, align 8
  store %"struct.std::__1::__hash_node_base.130"** null, %"struct.std::__1::__hash_node_base.130"*** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base.130"** %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = bitcast %"struct.std::__1::__hash_node_base.130"** %46 to i8*
  tail call void @_ZdlPv(i8* %49) #12
  br label %50

50:                                               ; preds = %44, %48
  %51 = bitcast %"class.spvtools::opt::analysis::DecorationManager"* %1 to i8*
  tail call void @_ZdlPv(i8* %51) #12
  br label %52

52:                                               ; preds = %50, %2
  ret void
}

declare i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"*, i32) local_unnamed_addr #2

declare void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Module"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"*, %"class.spvtools::opt::analysis::DefUseManager"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %1, null
  br i1 %3, label %52, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %5, align 8
  %7 = icmp eq %"struct.std::__1::__hash_node_base.96"* %6, null
  br i1 %7, label %24, label %8

8:                                                ; preds = %4, %21
  %9 = phi %"struct.std::__1::__hash_node_base.96"* [ %11, %21 ], [ %6, %4 ]
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 0, i32 0
  %11 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 3
  %13 = bitcast %"struct.std::__1::__hash_node_base.96"* %12 to i32**
  %14 = load i32*, i32** %13, align 8
  %15 = icmp eq i32* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %8
  %17 = ptrtoint i32* %14 to i64
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 4
  %19 = bitcast %"struct.std::__1::__hash_node_base.96"* %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast i32* %14 to i8*
  tail call void @_ZdlPv(i8* %20) #12
  br label %21

21:                                               ; preds = %16, %8
  %22 = bitcast %"struct.std::__1::__hash_node_base.96"* %9 to i8*
  tail call void @_ZdlPv(i8* %22) #12
  %23 = icmp eq %"struct.std::__1::__hash_node_base.96"* %11, null
  br i1 %23, label %24, label %8

24:                                               ; preds = %21, %4
  %25 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base.96"**, %"struct.std::__1::__hash_node_base.96"*** %25, align 8
  store %"struct.std::__1::__hash_node_base.96"** null, %"struct.std::__1::__hash_node_base.96"*** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.96"** %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = bitcast %"struct.std::__1::__hash_node_base.96"** %26 to i8*
  tail call void @_ZdlPv(i8* %29) #12
  br label %30

30:                                               ; preds = %28, %24
  %31 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %33 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"class.std::__1::__tree_node"**
  %34 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %33, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %31, %"class.std::__1::__tree_node"* %34) #11
  %35 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base"* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %30, %38
  %39 = phi %"struct.std::__1::__hash_node_base"* [ %41, %38 ], [ %36, %30 ]
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %40, align 8
  %42 = bitcast %"struct.std::__1::__hash_node_base"* %39 to i8*
  tail call void @_ZdlPv(i8* %42) #12
  %43 = icmp eq %"struct.std::__1::__hash_node_base"* %41, null
  br i1 %43, label %44, label %38

44:                                               ; preds = %38, %30
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %45, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base"** %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = bitcast %"struct.std::__1::__hash_node_base"** %46 to i8*
  tail call void @_ZdlPv(i8* %49) #12
  br label %50

50:                                               ; preds = %44, %48
  %51 = bitcast %"class.spvtools::opt::analysis::DefUseManager"* %1 to i8*
  tail call void @_ZdlPv(i8* %51) #12
  br label %52

52:                                               ; preds = %50, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #11
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #11
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  ret void

11:                                               ; preds = %2
  ret void
}

declare void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"*, %"class.std::__1::function"* dereferenceable(32), %"class.spvtools::opt::IRContext"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.571"*, %"struct.std::__1::__hash_node_base.571"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base.571"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1, %5
  %6 = phi %"struct.std::__1::__hash_node_base.571"* [ %8, %5 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base.571", %"struct.std::__1::__hash_node_base.571"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.571"*, %"struct.std::__1::__hash_node_base.571"** %7, align 8
  %9 = bitcast %"struct.std::__1::__hash_node_base.571"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #12
  %10 = icmp eq %"struct.std::__1::__hash_node_base.571"* %8, null
  br i1 %10, label %11, label %5

11:                                               ; preds = %5, %1
  %12 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.571"**, %"struct.std::__1::__hash_node_base.571"*** %12, align 8
  store %"struct.std::__1::__hash_node_base.571"** null, %"struct.std::__1::__hash_node_base.571"*** %12, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.571"** %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %"struct.std::__1::__hash_node_base.571"** %13 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %11, %15
  %18 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %18, align 8
  %20 = icmp eq %"struct.std::__1::__hash_node_base.488"* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %17, %21
  %22 = phi %"struct.std::__1::__hash_node_base.488"* [ %24, %21 ], [ %19, %17 ]
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.488", %"struct.std::__1::__hash_node_base.488"* %22, i64 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %23, align 8
  %25 = bitcast %"struct.std::__1::__hash_node_base.488"* %22 to i8*
  tail call void @_ZdlPv(i8* %25) #12
  %26 = icmp eq %"struct.std::__1::__hash_node_base.488"* %24, null
  br i1 %26, label %27, label %21

27:                                               ; preds = %21, %17
  %28 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"struct.std::__1::__hash_node_base.488"**, %"struct.std::__1::__hash_node_base.488"*** %28, align 8
  store %"struct.std::__1::__hash_node_base.488"** null, %"struct.std::__1::__hash_node_base.488"*** %28, align 8
  %30 = icmp eq %"struct.std::__1::__hash_node_base.488"** %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  %32 = bitcast %"struct.std::__1::__hash_node_base.488"** %29 to i8*
  tail call void @_ZdlPv(i8* %32) #12
  br label %33

33:                                               ; preds = %27, %31
  %34 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 5
  %35 = getelementptr inbounds %"class.std::__1::vector.553", %"class.std::__1::vector.553"* %34, i64 0, i32 0, i32 0
  %36 = load %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"** %35, align 8
  %37 = icmp eq %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %36, null
  br i1 %37, label %61, label %38

38:                                               ; preds = %33
  %39 = bitcast %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %36 to i8*
  %40 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 5, i32 0, i32 1
  %41 = load %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"** %40, align 8
  %42 = icmp eq %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %41, %36
  br i1 %42, label %59, label %43

43:                                               ; preds = %38, %54
  %44 = phi %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* [ %45, %54 ], [ %41, %38 ]
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager::UnresolvedType", %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %44, i64 -1
  %46 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager::UnresolvedType", %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %44, i64 -1, i32 1, i32 0, i32 0, i32 0
  %47 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %46, align 8
  store %"class.spvtools::opt::analysis::Type"* null, %"class.spvtools::opt::analysis::Type"** %46, align 8
  %48 = icmp eq %"class.spvtools::opt::analysis::Type"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %43
  %50 = bitcast %"class.spvtools::opt::analysis::Type"* %47 to void (%"class.spvtools::opt::analysis::Type"*)***
  %51 = load void (%"class.spvtools::opt::analysis::Type"*)**, void (%"class.spvtools::opt::analysis::Type"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %51, i64 1
  %53 = load void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %52, align 8
  tail call void %53(%"class.spvtools::opt::analysis::Type"* nonnull %47) #11
  br label %54

54:                                               ; preds = %49, %43
  %55 = icmp eq %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %45, %36
  br i1 %55, label %56, label %43

56:                                               ; preds = %54
  %57 = bitcast %"class.std::__1::vector.553"* %34 to i8**
  %58 = load i8*, i8** %57, align 8
  br label %59

59:                                               ; preds = %56, %38
  %60 = phi i8* [ %58, %56 ], [ %39, %38 ]
  store %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %36, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"** %40, align 8
  tail call void @_ZdlPv(i8* %60) #12
  br label %61

61:                                               ; preds = %33, %59
  %62 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %63 = load %"struct.std::__1::__hash_node_base.536"*, %"struct.std::__1::__hash_node_base.536"** %62, align 8
  %64 = icmp eq %"struct.std::__1::__hash_node_base.536"* %63, null
  br i1 %64, label %81, label %65

65:                                               ; preds = %61, %78
  %66 = phi %"struct.std::__1::__hash_node_base.536"* [ %68, %78 ], [ %63, %61 ]
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.536", %"struct.std::__1::__hash_node_base.536"* %66, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.536"*, %"struct.std::__1::__hash_node_base.536"** %67, align 8
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.536", %"struct.std::__1::__hash_node_base.536"* %66, i64 2
  %70 = bitcast %"struct.std::__1::__hash_node_base.536"* %69 to %"class.spvtools::opt::analysis::Type"**
  %71 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %70, align 8
  store %"class.spvtools::opt::analysis::Type"* null, %"class.spvtools::opt::analysis::Type"** %70, align 8
  %72 = icmp eq %"class.spvtools::opt::analysis::Type"* %71, null
  br i1 %72, label %78, label %73

73:                                               ; preds = %65
  %74 = bitcast %"class.spvtools::opt::analysis::Type"* %71 to void (%"class.spvtools::opt::analysis::Type"*)***
  %75 = load void (%"class.spvtools::opt::analysis::Type"*)**, void (%"class.spvtools::opt::analysis::Type"*)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %75, i64 1
  %77 = load void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %76, align 8
  tail call void %77(%"class.spvtools::opt::analysis::Type"* nonnull %71) #11
  br label %78

78:                                               ; preds = %73, %65
  %79 = bitcast %"struct.std::__1::__hash_node_base.536"* %66 to i8*
  tail call void @_ZdlPv(i8* %79) #12
  %80 = icmp eq %"struct.std::__1::__hash_node_base.536"* %68, null
  br i1 %80, label %81, label %65

81:                                               ; preds = %78, %61
  %82 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load %"struct.std::__1::__hash_node_base.536"**, %"struct.std::__1::__hash_node_base.536"*** %82, align 8
  store %"struct.std::__1::__hash_node_base.536"** null, %"struct.std::__1::__hash_node_base.536"*** %82, align 8
  %84 = icmp eq %"struct.std::__1::__hash_node_base.536"** %83, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %81
  %86 = bitcast %"struct.std::__1::__hash_node_base.536"** %83 to i8*
  tail call void @_ZdlPv(i8* %86) #12
  br label %87

87:                                               ; preds = %81, %85
  %88 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %89 = load %"struct.std::__1::__hash_node_base.512"*, %"struct.std::__1::__hash_node_base.512"** %88, align 8
  %90 = icmp eq %"struct.std::__1::__hash_node_base.512"* %89, null
  br i1 %90, label %97, label %91

91:                                               ; preds = %87, %91
  %92 = phi %"struct.std::__1::__hash_node_base.512"* [ %94, %91 ], [ %89, %87 ]
  %93 = getelementptr inbounds %"struct.std::__1::__hash_node_base.512", %"struct.std::__1::__hash_node_base.512"* %92, i64 0, i32 0
  %94 = load %"struct.std::__1::__hash_node_base.512"*, %"struct.std::__1::__hash_node_base.512"** %93, align 8
  %95 = bitcast %"struct.std::__1::__hash_node_base.512"* %92 to i8*
  tail call void @_ZdlPv(i8* %95) #12
  %96 = icmp eq %"struct.std::__1::__hash_node_base.512"* %94, null
  br i1 %96, label %97, label %91

97:                                               ; preds = %91, %87
  %98 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base.512"**, %"struct.std::__1::__hash_node_base.512"*** %98, align 8
  store %"struct.std::__1::__hash_node_base.512"** null, %"struct.std::__1::__hash_node_base.512"*** %98, align 8
  %100 = icmp eq %"struct.std::__1::__hash_node_base.512"** %99, null
  br i1 %100, label %103, label %101

101:                                              ; preds = %97
  %102 = bitcast %"struct.std::__1::__hash_node_base.512"** %99 to i8*
  tail call void @_ZdlPv(i8* %102) #12
  br label %103

103:                                              ; preds = %97, %101
  %104 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %104, align 8
  %106 = icmp eq %"struct.std::__1::__hash_node_base.488"* %105, null
  br i1 %106, label %113, label %107

107:                                              ; preds = %103, %107
  %108 = phi %"struct.std::__1::__hash_node_base.488"* [ %110, %107 ], [ %105, %103 ]
  %109 = getelementptr inbounds %"struct.std::__1::__hash_node_base.488", %"struct.std::__1::__hash_node_base.488"* %108, i64 0, i32 0
  %110 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %109, align 8
  %111 = bitcast %"struct.std::__1::__hash_node_base.488"* %108 to i8*
  tail call void @_ZdlPv(i8* %111) #12
  %112 = icmp eq %"struct.std::__1::__hash_node_base.488"* %110, null
  br i1 %112, label %113, label %107

113:                                              ; preds = %107, %103
  %114 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load %"struct.std::__1::__hash_node_base.488"**, %"struct.std::__1::__hash_node_base.488"*** %114, align 8
  store %"struct.std::__1::__hash_node_base.488"** null, %"struct.std::__1::__hash_node_base.488"*** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.488"** %115, null
  br i1 %116, label %119, label %117

117:                                              ; preds = %113
  %118 = bitcast %"struct.std::__1::__hash_node_base.488"** %115 to i8*
  tail call void @_ZdlPv(i8* %118) #12
  br label %119

119:                                              ; preds = %113, %117
  ret void
}

declare void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::IRContext"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"class.std::__1::vector.458", %"class.std::__1::vector.458"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"** %3, align 8
  %5 = icmp eq %"class.std::__1::unique_ptr.460"* %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::unique_ptr.460"* %4 to i8*
  %8 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 4, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr.460"* %9, %4
  br i1 %10, label %27, label %11

11:                                               ; preds = %6, %22
  %12 = phi %"class.std::__1::unique_ptr.460"* [ %13, %22 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %12, i64 -1
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %14, align 8
  store %"class.spvtools::opt::analysis::Constant"* null, %"class.spvtools::opt::analysis::Constant"** %14, align 8
  %16 = icmp eq %"class.spvtools::opt::analysis::Constant"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.spvtools::opt::analysis::Constant"* %15 to void (%"class.spvtools::opt::analysis::Constant"*)***
  %19 = load void (%"class.spvtools::opt::analysis::Constant"*)**, void (%"class.spvtools::opt::analysis::Constant"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.spvtools::opt::analysis::Constant"*)*, void (%"class.spvtools::opt::analysis::Constant"*)** %19, i64 1
  %21 = load void (%"class.spvtools::opt::analysis::Constant"*)*, void (%"class.spvtools::opt::analysis::Constant"*)** %20, align 8
  tail call void %21(%"class.spvtools::opt::analysis::Constant"* nonnull %15) #11
  br label %22

22:                                               ; preds = %17, %11
  %23 = icmp eq %"class.std::__1::unique_ptr.460"* %13, %4
  br i1 %23, label %24, label %11

24:                                               ; preds = %22
  %25 = bitcast %"class.std::__1::vector.458"* %2 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %6
  %28 = phi i8* [ %26, %24 ], [ %7, %6 ]
  store %"class.std::__1::unique_ptr.460"* %4, %"class.std::__1::unique_ptr.460"** %8, align 8
  tail call void @_ZdlPv(i8* %28) #12
  br label %29

29:                                               ; preds = %1, %27
  %30 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.441"*, %"struct.std::__1::__hash_node_base.441"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.441"* %31, null
  br i1 %32, label %39, label %33

33:                                               ; preds = %29, %33
  %34 = phi %"struct.std::__1::__hash_node_base.441"* [ %36, %33 ], [ %31, %29 ]
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.441", %"struct.std::__1::__hash_node_base.441"* %34, i64 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base.441"*, %"struct.std::__1::__hash_node_base.441"** %35, align 8
  %37 = bitcast %"struct.std::__1::__hash_node_base.441"* %34 to i8*
  tail call void @_ZdlPv(i8* %37) #12
  %38 = icmp eq %"struct.std::__1::__hash_node_base.441"* %36, null
  br i1 %38, label %39, label %33

39:                                               ; preds = %33, %29
  %40 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base.441"**, %"struct.std::__1::__hash_node_base.441"*** %40, align 8
  store %"struct.std::__1::__hash_node_base.441"** null, %"struct.std::__1::__hash_node_base.441"*** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base.441"** %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %39
  %44 = bitcast %"struct.std::__1::__hash_node_base.441"** %41 to i8*
  tail call void @_ZdlPv(i8* %44) #12
  br label %45

45:                                               ; preds = %39, %43
  %46 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 2, i32 0
  %47 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %48 = bitcast %"class.std::__1::__tree_end_node"* %47 to %"class.std::__1::__tree_node.981"**
  %49 = load %"class.std::__1::__tree_node.981"*, %"class.std::__1::__tree_node.981"** %48, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.427"* %46, %"class.std::__1::__tree_node.981"* %49) #11
  %50 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %51 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %50, align 8
  %52 = icmp eq %"struct.std::__1::__hash_node_base.408"* %51, null
  br i1 %52, label %59, label %53

53:                                               ; preds = %45, %53
  %54 = phi %"struct.std::__1::__hash_node_base.408"* [ %56, %53 ], [ %51, %45 ]
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %54, i64 0, i32 0
  %56 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %55, align 8
  %57 = bitcast %"struct.std::__1::__hash_node_base.408"* %54 to i8*
  tail call void @_ZdlPv(i8* %57) #12
  %58 = icmp eq %"struct.std::__1::__hash_node_base.408"* %56, null
  br i1 %58, label %59, label %53

59:                                               ; preds = %53, %45
  %60 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load %"struct.std::__1::__hash_node_base.408"**, %"struct.std::__1::__hash_node_base.408"*** %60, align 8
  store %"struct.std::__1::__hash_node_base.408"** null, %"struct.std::__1::__hash_node_base.408"*** %60, align 8
  %62 = icmp eq %"struct.std::__1::__hash_node_base.408"** %61, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %59
  %64 = bitcast %"struct.std::__1::__hash_node_base.408"** %61 to i8*
  tail call void @_ZdlPv(i8* %64) #12
  br label %65

65:                                               ; preds = %59, %63
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.427"*, %"class.std::__1::__tree_node.981"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.981"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.981"* %1 to %"class.std::__1::__tree_node.981"**
  %6 = load %"class.std::__1::__tree_node.981"*, %"class.std::__1::__tree_node.981"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.427"* %0, %"class.std::__1::__tree_node.981"* %6) #11
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.981", %"class.std::__1::__tree_node.981"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.981"**
  %9 = load %"class.std::__1::__tree_node.981"*, %"class.std::__1::__tree_node.981"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.427"* %0, %"class.std::__1::__tree_node.981"* %9) #11
  %10 = bitcast %"class.std::__1::__tree_node.981"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEv(%"class.spvtools::opt::IRContext"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::tuple", align 8
  %3 = alloca %"class.std::__1::tuple.1010", align 1
  %4 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %5 = alloca %"class.std::__1::function.999", align 8
  %6 = alloca %"class.std::__1::function.990", align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %60, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %11, align 8
  %13 = icmp eq %"struct.std::__1::__hash_node_base.178"* %12, null
  br i1 %13, label %20, label %14

14:                                               ; preds = %10, %14
  %15 = phi %"struct.std::__1::__hash_node_base.178"* [ %17, %14 ], [ %12, %10 ]
  %16 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %15, i64 0, i32 0
  %17 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %16, align 8
  %18 = bitcast %"struct.std::__1::__hash_node_base.178"* %15 to i8*
  tail call void @_ZdlPv(i8* %18) #12
  %19 = icmp eq %"struct.std::__1::__hash_node_base.178"* %17, null
  br i1 %19, label %20, label %14

20:                                               ; preds = %14, %10
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %11, align 8
  %21 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %42, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = add i64 %22, -1
  %27 = and i64 %22, 3
  %28 = icmp ult i64 %26, 3
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = sub i64 %22, %27
  br label %43

31:                                               ; preds = %43, %24
  %32 = phi i64 [ 0, %24 ], [ %57, %43 ]
  %33 = icmp eq i64 %27, 0
  br i1 %33, label %42, label %34

34:                                               ; preds = %31, %34
  %35 = phi i64 [ %39, %34 ], [ %32, %31 ]
  %36 = phi i64 [ %40, %34 ], [ %27, %31 ]
  %37 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %37, i64 %35
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %38, align 8
  %39 = add nuw i64 %35, 1
  %40 = add i64 %36, -1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %34, !llvm.loop !4

42:                                               ; preds = %31, %34, %20
  store i64 0, i64* %7, align 8
  br label %60

43:                                               ; preds = %43, %29
  %44 = phi i64 [ 0, %29 ], [ %57, %43 ]
  %45 = phi i64 [ %30, %29 ], [ %58, %43 ]
  %46 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %46, i64 %44
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %47, align 8
  %48 = or i64 %44, 1
  %49 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %50, align 8
  %51 = or i64 %44, 2
  %52 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %53, align 8
  %54 = or i64 %44, 3
  %55 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %55, i64 %54
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %56, align 8
  %57 = add nuw i64 %44, 4
  %58 = add i64 %45, -4
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %31, label %43

60:                                               ; preds = %1, %42
  %61 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %62 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %61, align 8
  %63 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %62, i64 0, i32 15, i32 0, i32 0
  %64 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %63, align 8
  %65 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %62, i64 0, i32 15, i32 0, i32 1
  %66 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %65, align 8
  %67 = icmp eq %"class.std::__1::unique_ptr.28"* %64, %66
  br i1 %67, label %88, label %68

68:                                               ; preds = %60
  %69 = bitcast %"class.std::__1::function.990"* %6 to i8*
  %70 = getelementptr inbounds %"class.std::__1::function.990", %"class.std::__1::function.990"* %6, i64 0, i32 0, i32 1, i32 0
  %71 = getelementptr inbounds %"class.std::__1::function.990", %"class.std::__1::function.990"* %6, i64 0, i32 0, i32 2
  %72 = bitcast %"class.std::__1::function.990"* %6 to %"class.spvtools::opt::IRContext"**
  %73 = getelementptr inbounds %"class.std::__1::function.990", %"class.std::__1::function.990"* %6, i64 0, i32 0, i32 0, i32 1
  %74 = bitcast [8 x i8]* %73 to %"class.spvtools::opt::BasicBlock"**
  %75 = bitcast %"class.std::__1::function.999"* %5 to i8*
  %76 = ptrtoint %"class.std::__1::function.990"* %6 to i64
  %77 = getelementptr inbounds %"class.std::__1::function.999", %"class.std::__1::function.999"* %5, i64 0, i32 0, i32 1, i32 0
  %78 = getelementptr inbounds %"class.std::__1::function.999", %"class.std::__1::function.999"* %5, i64 0, i32 0, i32 2
  %79 = bitcast %"class.std::__1::function.999"* %5 to i64*
  %80 = getelementptr inbounds %"class.std::__1::function.999", %"class.std::__1::function.999"* %5, i64 0, i32 0, i32 0
  %81 = getelementptr inbounds %"class.std::__1::function.999", %"class.std::__1::function.999"* %5, i64 0, i32 0, i32 0, i32 0
  %82 = getelementptr inbounds %"class.std::__1::function.990", %"class.std::__1::function.990"* %6, i64 0, i32 0, i32 0, i32 0
  %83 = bitcast %"class.spvtools::opt::Instruction"** %4 to i8*
  %84 = bitcast %"class.std::__1::tuple"* %2 to i8*
  %85 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 0, i32 0
  %86 = getelementptr inbounds %"class.std::__1::tuple.1010", %"class.std::__1::tuple.1010"* %3, i64 0, i32 0
  %87 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0
  br label %92

88:                                               ; preds = %101, %60
  %89 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 11
  %90 = load i32, i32* %89, align 8
  %91 = or i32 %90, 2
  store i32 %91, i32* %89, align 8
  ret void

92:                                               ; preds = %68, %101
  %93 = phi %"class.std::__1::unique_ptr.28"* [ %64, %68 ], [ %102, %101 ]
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %93, i64 0, i32 0, i32 0, i32 0
  %95 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %94, align 8
  %96 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %95, i64 0, i32 3, i32 0, i32 0
  %97 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %96, align 8
  %98 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %95, i64 0, i32 3, i32 0, i32 1
  %99 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %98, align 8
  %100 = icmp eq %"class.std::__1::unique_ptr.40"* %97, %99
  br i1 %100, label %101, label %104

101:                                              ; preds = %151, %92
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %93, i64 1
  %103 = icmp eq %"class.std::__1::unique_ptr.28"* %102, %66
  br i1 %103, label %88, label %92

104:                                              ; preds = %92, %151
  %105 = phi %"class.std::__1::unique_ptr.40"* [ %152, %151 ], [ %97, %92 ]
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %105, i64 0, i32 0, i32 0, i32 0
  %107 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %106, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %69) #11
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9IRContext24BuildInstrToBlockMappingEvEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %70, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEvEUlPNS5_11InstructionEE_FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %71, align 8
  store %"class.spvtools::opt::IRContext"* %0, %"class.spvtools::opt::IRContext"** %72, align 8
  store %"class.spvtools::opt::BasicBlock"* %107, %"class.spvtools::opt::BasicBlock"** %74, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %75) #11
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %77, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %78, align 8
  store i64 %76, i64* %79, align 8
  %108 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %107, i64 0, i32 1, i32 0, i32 0, i32 0
  %109 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %108, align 8
  %110 = icmp eq %"class.spvtools::opt::Instruction"* %109, null
  br i1 %110, label %117, label %111

111:                                              ; preds = %104
  %112 = ptrtoint %"class.spvtools::opt::BasicBlock"* %107 to i64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83)
  store %"class.spvtools::opt::Instruction"* %109, %"class.spvtools::opt::Instruction"** %4, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #11
  store %"class.spvtools::opt::Instruction"** %4, %"class.spvtools::opt::Instruction"*** %85, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %86) #11
  %113 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %87, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %4, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %2, %"class.std::__1::tuple.1010"* nonnull dereferenceable(1) %3) #11
  %114 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %113, 0
  %115 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %114, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %86) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #11
  %116 = bitcast %"struct.std::__1::__hash_node_base.178"* %115 to i64*
  store i64 %112, i64* %116, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83)
  br label %117

117:                                              ; preds = %111, %104
  %118 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %107, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %119 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %118, align 8
  %120 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %119, i64 0, i32 0, i32 3
  %121 = load i8, i8* %120, align 8, !range !2
  %122 = icmp ne i8 %121, 0
  %123 = icmp eq %"class.spvtools::opt::Instruction"* %119, null
  %124 = or i1 %123, %122
  br i1 %124, label %137, label %125

125:                                              ; preds = %117, %128
  %126 = phi %"class.spvtools::opt::Instruction"* [ %134, %128 ], [ %119, %117 ]
  %127 = icmp eq %"class.spvtools::opt::Instruction"* %126, null
  br i1 %127, label %137, label %128

128:                                              ; preds = %125
  %129 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %126, i64 0, i32 0, i32 1
  %130 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %129, align 8
  %131 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %130, i64 0, i32 0, i32 3
  %132 = load i8, i8* %131, align 8, !range !2
  %133 = icmp eq i8 %132, 0
  %134 = select i1 %133, %"class.spvtools::opt::Instruction"* %130, %"class.spvtools::opt::Instruction"* null
  %135 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %77, align 8
  %136 = call zeroext i1 %135(%"union.std::__1::__function::__policy_storage"* nonnull %80, %"class.spvtools::opt::Instruction"* nonnull %126) #11
  br i1 %136, label %125, label %137

137:                                              ; preds = %128, %125, %117
  %138 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %78, align 8
  %139 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %138, i64 0, i32 1
  %140 = load void (i8*)*, void (i8*)** %139, align 8
  %141 = icmp eq void (i8*)* %140, null
  br i1 %141, label %144, label %142

142:                                              ; preds = %137
  %143 = load i8*, i8** %81, align 8
  call void %140(i8* %143) #11
  br label %144

144:                                              ; preds = %137, %142
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %75) #11
  %145 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %71, align 8
  %146 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %145, i64 0, i32 1
  %147 = load void (i8*)*, void (i8*)** %146, align 8
  %148 = icmp eq void (i8*)* %147, null
  br i1 %148, label %151, label %149

149:                                              ; preds = %144
  %150 = load i8*, i8** %82, align 8
  call void %147(i8* %150) #11
  br label %151

151:                                              ; preds = %144, %149
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %69) #11
  %152 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %105, i64 1
  %153 = icmp eq %"class.std::__1::unique_ptr.40"* %152, %99
  br i1 %153, label %101, label %104
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_(%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*) #0 comdat align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::function.990"**
  %4 = load %"class.std::__1::function.990"*, %"class.std::__1::function.990"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::function.990", %"class.std::__1::function.990"* %4, i64 0, i32 0, i32 1, i32 0
  %6 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::function.990", %"class.std::__1::function.990"* %4, i64 0, i32 0, i32 0
  tail call void %6(%"union.std::__1::__function::__policy_storage"* %7, %"class.spvtools::opt::Instruction"* %1) #11
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9IRContext24BuildInstrToBlockMappingEvEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_(%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*) #0 comdat align 2 {
  %3 = alloca %"class.std::__1::tuple", align 8
  %4 = alloca %"class.std::__1::tuple.1010", align 1
  %5 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %6 = ptrtoint %"class.spvtools::opt::Instruction"* %1 to i64
  %7 = bitcast %"class.spvtools::opt::Instruction"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  %8 = bitcast %"class.spvtools::opt::Instruction"** %5 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::IRContext"**
  %10 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %9, align 8
  %11 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %12 = bitcast [8 x i8]* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 9, i32 0
  %15 = bitcast %"class.std::__1::tuple"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"** %5, %"class.spvtools::opt::Instruction"*** %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::tuple.1010", %"class.std::__1::tuple.1010"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #11
  %18 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %14, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1010"* nonnull dereferenceable(1) %4) #11
  %19 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %18, 0
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %19, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #11
  %21 = bitcast %"struct.std::__1::__hash_node_base.178"* %20 to i64*
  store i64 %13, i64* %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"*, %"class.spvtools::opt::Instruction"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.1010"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.spvtools::opt::Instruction"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.spvtools::opt::Instruction"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #11, !range !3
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.178"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.178"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.178"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.178"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.178"* %65 to %"class.spvtools::opt::Instruction"**
  %67 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %66, align 8
  %68 = icmp eq %"class.spvtools::opt::Instruction"* %67, %24
  br i1 %68, label %160, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 32) #12, !noalias !6
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !6
  %75 = load i64, i64* %74, align 8, !noalias !6
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !6
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  %78 = bitcast i8* %77 to %"class.spvtools::opt::BasicBlock"**
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %78, align 8, !noalias !6
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %20, i64* %80, align 8, !noalias !6
  %81 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.178"**
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %81, align 8, !noalias !6
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %22 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %23, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %69
  %93 = shl i64 %22, 1
  %94 = icmp ult i64 %22, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %22) #11, !range !3
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #11
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.174"* %0, i64 %104)
  %105 = load i64, i64* %21, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #11, !range !3
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %20
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %20, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %20, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %69
  %116 = phi i64 [ %22, %69 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %70, %69 ], [ %110, %108 ], [ %20, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.178"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.178"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %71 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.178"* %124 to i8**
  store i8* %71, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.178"* %124, %"struct.std::__1::__hash_node_base.178"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.178"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.178"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #11, !range !3
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.178"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.178"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %71 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.178"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %71, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.178"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base.178"* [ %157, %156 ], [ %47, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } undef, %"struct.std::__1::__hash_node_base.178"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.178"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.174"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.174"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.174"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.174"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #13
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.174"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.178"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.178"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.180", %"class.std::__1::__bucket_list_deallocator.180"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !9

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.178"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.178"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.178"* %36, %"struct.std::__1::__hash_node_base.178"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.178"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.178"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.178"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.178"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.178"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.178"* %101 to %"class.spvtools::opt::Instruction"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.178"* %82, %"struct.std::__1::__hash_node_base.178"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.178"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.178"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.178"* %110 to %"class.spvtools::opt::Instruction"**
  %112 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %102, align 8
  %113 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %111, align 8
  %114 = icmp eq %"class.spvtools::opt::Instruction"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.178"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.178"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.178"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.178"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.178"* %80, %"struct.std::__1::__hash_node_base.178"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.178"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.178"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.178"** null, %"struct.std::__1::__hash_node_base.178"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.178"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.178"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.180", %"class.std::__1::__bucket_list_deallocator.180"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #8

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #8

declare void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::IRContext"*, i32, i32, i32, %"class.std::__1::vector"* dereferenceable(24)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"*, %"class.std::__1::unique_ptr.21"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::tuple", align 8
  %4 = alloca %"class.std::__1::tuple.1010", align 1
  %5 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %6 = alloca %"class.spvtools::opt::InstructionList::iterator", align 8
  %7 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 2
  call void @_ZN8spvtools3opt15InstructionList8iterator12InsertBeforeEONSt3__110unique_ptrINS0_11InstructionENS3_14default_deleteIS5_EEEE(%"class.spvtools::opt::InstructionList::iterator"* nonnull sret %6, %"class.spvtools::opt::InstructionList::iterator"* %8, %"class.std::__1::unique_ptr.21"* dereferenceable(8) %1) #11
  %9 = getelementptr inbounds %"class.spvtools::opt::InstructionList::iterator", %"class.spvtools::opt::InstructionList::iterator"* %6, i64 0, i32 0, i32 0
  %10 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %9, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  %11 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %12 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %13 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 11
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %39, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 3
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %39, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 1
  %24 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %23, align 8
  %25 = icmp eq %"class.spvtools::opt::BasicBlock"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %22
  %27 = bitcast %"class.spvtools::opt::Instruction"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  store %"class.spvtools::opt::Instruction"* %10, %"class.spvtools::opt::Instruction"** %5, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 9, i32 0
  %29 = bitcast %"class.std::__1::tuple"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #11
  %30 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"** %5, %"class.spvtools::opt::Instruction"*** %30, align 8
  %31 = getelementptr inbounds %"class.std::__1::tuple.1010", %"class.std::__1::tuple.1010"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %31) #11
  %32 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %28, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1010"* nonnull dereferenceable(1) %4) #11
  %33 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %32, 0
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %33, i64 3
  %35 = bitcast %"struct.std::__1::__hash_node_base.178"* %34 to %"class.spvtools::opt::BasicBlock"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %31) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #11
  store %"class.spvtools::opt::BasicBlock"* %24, %"class.spvtools::opt::BasicBlock"** %35, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  %36 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %37 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %36, i64 0, i32 11
  %38 = load i32, i32* %37, align 8
  br label %39

39:                                               ; preds = %2, %17, %22, %26
  %40 = phi i32 [ %14, %2 ], [ %14, %17 ], [ %14, %22 ], [ %38, %26 ]
  %41 = phi %"class.spvtools::opt::IRContext"* [ %12, %2 ], [ %12, %17 ], [ %12, %22 ], [ %36, %26 ]
  %42 = and i32 %40, 1
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %52, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 3
  %46 = load i32, i32* %45, align 8
  %47 = and i32 %46, 1
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %52, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %41, i64 0, i32 6, i32 0, i32 0, i32 0
  %51 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %50, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %51, %"class.spvtools::opt::Instruction"* %10) #11
  br label %52

52:                                               ; preds = %39, %44, %49
  ret %"class.spvtools::opt::Instruction"* %10
}

declare i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"*, %"class.spvtools::utils::SmallVector"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  %6 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %7, align 8
  br i1 %5, label %54, label %9

9:                                                ; preds = %2
  %10 = icmp eq %"class.std::__1::vector.3"* %8, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %9
  %12 = icmp eq %"class.std::__1::vector.3"* %8, %4
  br i1 %12, label %107, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %15 = load i32*, i32** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %17 = load i32*, i32** %16, align 8
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.3"* nonnull %8, i32* %15, i32* %17) #11
  br label %107

18:                                               ; preds = %9
  %19 = tail call i8* @_Znwm(i64 24) #12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #11
  %20 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %21 = bitcast i32** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::vector.3"* %4 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %22, %24
  %26 = ashr exact i64 %25, 2
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %51, label %28

28:                                               ; preds = %18
  %29 = icmp ugt i64 %26, 4611686018427387903
  br i1 %29, label %30, label %32

30:                                               ; preds = %28
  %31 = bitcast i8* %19 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %31) #13
  unreachable

32:                                               ; preds = %28
  %33 = tail call i8* @_Znwm(i64 %25) #12
  %34 = bitcast i8* %33 to i32*
  %35 = getelementptr inbounds i8, i8* %19, i64 8
  %36 = bitcast i8* %35 to i8**
  store i8* %33, i8** %36, align 8
  %37 = bitcast i8* %19 to i8**
  store i8* %33, i8** %37, align 8
  %38 = getelementptr inbounds i32, i32* %34, i64 %26
  %39 = getelementptr inbounds i8, i8* %19, i64 16
  %40 = bitcast i8* %39 to i32**
  store i32* %38, i32** %40, align 8
  %41 = bitcast i8* %35 to i64*
  %42 = ptrtoint i8* %33 to i64
  %43 = icmp sgt i64 %25, 0
  br i1 %43, label %44, label %49

44:                                               ; preds = %32
  %45 = lshr exact i64 %25, 2
  %46 = inttoptr i64 %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %33, i8* align 4 %46, i64 %25, i1 false) #11
  %47 = getelementptr inbounds i32, i32* %34, i64 %45
  %48 = ptrtoint i32* %47 to i64
  br label %49

49:                                               ; preds = %44, %32
  %50 = phi i64 [ %48, %44 ], [ %42, %32 ]
  store i64 %50, i64* %41, align 8
  br label %51

51:                                               ; preds = %18, %49
  %52 = ptrtoint i8* %19 to i64
  %53 = bitcast %"class.std::__1::unique_ptr.0"* %6 to i64*
  store i64 %52, i64* %53, align 8
  br label %107

54:                                               ; preds = %2
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %7, align 8
  %55 = icmp eq %"class.std::__1::vector.3"* %8, null
  br i1 %55, label %67, label %56

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 0, i32 0, i32 0
  %58 = load i32*, i32** %57, align 8
  %59 = icmp eq i32* %58, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %56
  %61 = ptrtoint i32* %58 to i64
  %62 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 0, i32 0, i32 1
  %63 = bitcast i32** %62 to i64*
  store i64 %61, i64* %63, align 8
  %64 = bitcast i32* %58 to i8*
  tail call void @_ZdlPv(i8* %64) #12
  br label %65

65:                                               ; preds = %60, %56
  %66 = bitcast %"class.std::__1::vector.3"* %8 to i8*
  tail call void @_ZdlPv(i8* %66) #12
  br label %67

67:                                               ; preds = %54, %65
  %68 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  %69 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %88, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  %74 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  br label %75

75:                                               ; preds = %72, %79
  %76 = phi i64 [ 0, %72 ], [ %85, %79 ]
  %77 = load i64, i64* %68, align 8
  %78 = icmp ult i64 %76, %77
  br i1 %78, label %79, label %88

79:                                               ; preds = %75
  %80 = load i32*, i32** %73, align 8
  %81 = getelementptr inbounds i32, i32* %80, i64 %76
  %82 = load i32, i32* %81, align 4
  %83 = load i32*, i32** %74, align 8
  %84 = getelementptr inbounds i32, i32* %83, i64 %76
  store i32 %82, i32* %84, align 4
  %85 = add nuw i64 %76, 1
  %86 = load i64, i64* %69, align 8
  %87 = icmp ult i64 %85, %86
  br i1 %87, label %75, label %88

88:                                               ; preds = %75, %79, %67
  %89 = phi i64 [ 0, %67 ], [ %85, %79 ], [ %76, %75 ]
  %90 = load i64, i64* %68, align 8
  %91 = icmp ult i64 %89, %90
  br i1 %91, label %92, label %105

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  %94 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  br label %95

95:                                               ; preds = %92, %95
  %96 = phi i64 [ %89, %92 ], [ %102, %95 ]
  %97 = load i32*, i32** %93, align 8
  %98 = getelementptr inbounds i32, i32* %97, i64 %96
  %99 = load i32*, i32** %94, align 8
  %100 = getelementptr inbounds i32, i32* %99, i64 %96
  %101 = load i32, i32* %100, align 4
  store i32 %101, i32* %98, align 4
  %102 = add nuw i64 %96, 1
  %103 = load i64, i64* %68, align 8
  %104 = icmp ult i64 %102, %103
  br i1 %104, label %95, label %105

105:                                              ; preds = %95, %88
  %106 = phi i64 [ %90, %88 ], [ %103, %95 ]
  store i64 %106, i64* %69, align 8
  br label %107

107:                                              ; preds = %13, %11, %51, %105
  ret %"class.spvtools::utils::SmallVector"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #12
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %1, %15
  %18 = bitcast %"class.spvtools::utils::SmallVector"* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.3"*, i32*, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %2 to i64
  %5 = ptrtoint i32* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.3"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i32*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i32, i32* %1, i64 %22
  %25 = select i1 %23, i32* %24, i32* %2
  %26 = ptrtoint i32* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #11
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i32* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #11
  %42 = inttoptr i64 %35 to i32*
  %43 = getelementptr inbounds i32, i32* %42, i64 %39
  %44 = ptrtoint i32* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i32, i32* %16, i64 %28
  store i32* %48, i32** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #12
  %55 = bitcast %"class.std::__1::vector.3"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #11
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.3"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #13
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.3"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #13
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #12
  %75 = bitcast i8* %74 to i32*
  %76 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i32** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.3"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i32, i32* %75, i64 %72
  store i32* %79, i32** %8, align 8
  %80 = bitcast i32** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast i32* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #11
  %86 = getelementptr inbounds i32, i32* %75, i64 %84
  %87 = ptrtoint i32* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN8spvtools3opt15InstructionList8iterator12InsertBeforeEONSt3__110unique_ptrINS0_11InstructionENS3_14default_deleteIS5_EEEE(%"class.spvtools::opt::InstructionList::iterator"* sret, %"class.spvtools::opt::InstructionList::iterator"*, %"class.std::__1::unique_ptr.21"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"*, %"class.spvtools::utils::SmallVector"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  %6 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4
  br i1 %5, label %22, label %7

7:                                                ; preds = %2
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %8, align 8
  store %"class.std::__1::vector.3"* %4, %"class.std::__1::vector.3"** %8, align 8
  %10 = icmp eq %"class.std::__1::vector.3"* %9, null
  br i1 %10, label %77, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = icmp eq i32* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint i32* %13 to i64
  %17 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 1
  %18 = bitcast i32** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast i32* %13 to i8*
  tail call void @_ZdlPv(i8* %19) #12
  br label %20

20:                                               ; preds = %15, %11
  %21 = bitcast %"class.std::__1::vector.3"* %9 to i8*
  tail call void @_ZdlPv(i8* %21) #12
  br label %77

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %23, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %23, align 8
  %25 = icmp eq %"class.std::__1::vector.3"* %24, null
  br i1 %25, label %37, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %24, i64 0, i32 0, i32 0
  %28 = load i32*, i32** %27, align 8
  %29 = icmp eq i32* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %26
  %31 = ptrtoint i32* %28 to i64
  %32 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %24, i64 0, i32 0, i32 1
  %33 = bitcast i32** %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = bitcast i32* %28 to i8*
  tail call void @_ZdlPv(i8* %34) #12
  br label %35

35:                                               ; preds = %30, %26
  %36 = bitcast %"class.std::__1::vector.3"* %24 to i8*
  tail call void @_ZdlPv(i8* %36) #12
  br label %37

37:                                               ; preds = %22, %35
  %38 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  %39 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %58, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  %44 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  br label %45

45:                                               ; preds = %42, %49
  %46 = phi i64 [ 0, %42 ], [ %55, %49 ]
  %47 = load i64, i64* %38, align 8
  %48 = icmp ult i64 %46, %47
  br i1 %48, label %49, label %58

49:                                               ; preds = %45
  %50 = load i32*, i32** %43, align 8
  %51 = getelementptr inbounds i32, i32* %50, i64 %46
  %52 = load i32, i32* %51, align 4
  %53 = load i32*, i32** %44, align 8
  %54 = getelementptr inbounds i32, i32* %53, i64 %46
  store i32 %52, i32* %54, align 4
  %55 = add nuw i64 %46, 1
  %56 = load i64, i64* %39, align 8
  %57 = icmp ult i64 %55, %56
  br i1 %57, label %45, label %58

58:                                               ; preds = %45, %49, %37
  %59 = phi i64 [ 0, %37 ], [ %55, %49 ], [ %46, %45 ]
  %60 = load i64, i64* %38, align 8
  %61 = icmp ult i64 %59, %60
  br i1 %61, label %62, label %75

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  %64 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  br label %65

65:                                               ; preds = %62, %65
  %66 = phi i64 [ %59, %62 ], [ %72, %65 ]
  %67 = load i32*, i32** %63, align 8
  %68 = getelementptr inbounds i32, i32* %67, i64 %66
  %69 = load i32*, i32** %64, align 8
  %70 = getelementptr inbounds i32, i32* %69, i64 %66
  %71 = load i32, i32* %70, align 4
  store i32 %71, i32* %68, align 4
  %72 = add nuw i64 %66, 1
  %73 = load i64, i64* %38, align 8
  %74 = icmp ult i64 %72, %73
  br i1 %74, label %65, label %75

75:                                               ; preds = %65, %58
  %76 = phi i64 [ %60, %58 ], [ %73, %65 ]
  store i64 %76, i64* %39, align 8
  br label %77

77:                                               ; preds = %20, %7, %75
  %78 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  store i64 0, i64* %78, align 8
  ret %"class.spvtools::utils::SmallVector"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.spvtools::opt::Operand"* @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE6insertINS_11__wrap_iterIPS3_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISC_E9referenceEEE5valueESA_E4typeENS8_IPKS3_EESC_SC_(%"class.std::__1::vector"*, %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.spvtools::opt::Operand"* %1 to i64
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %7 = ptrtoint %"struct.spvtools::opt::Operand"* %2 to i64
  %8 = ptrtoint %"struct.spvtools::opt::Operand"* %3 to i64
  %9 = sub i64 %8, %7
  %10 = sdiv exact i64 %9, 48
  %11 = icmp sgt i64 %9, 0
  br i1 %11, label %12, label %250

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"struct.spvtools::opt::Operand"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %17 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %16, align 8
  %18 = ptrtoint %"struct.spvtools::opt::Operand"* %17 to i64
  %19 = sub i64 %15, %18
  %20 = sdiv exact i64 %19, 48
  %21 = icmp sgt i64 %10, %20
  %22 = bitcast %"struct.spvtools::opt::Operand"** %16 to i64*
  br i1 %21, label %116, label %23

23:                                               ; preds = %12
  %24 = sub i64 %18, %5
  %25 = sdiv exact i64 %24, 48
  %26 = icmp sgt i64 %10, %25
  br i1 %26, label %27, label %56

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %2, i64 %25
  %29 = icmp eq %"struct.spvtools::opt::Operand"* %28, %3
  br i1 %29, label %51, label %30

30:                                               ; preds = %27, %30
  %31 = phi %"struct.spvtools::opt::Operand"* [ %47, %30 ], [ %17, %27 ]
  %32 = phi %"struct.spvtools::opt::Operand"* [ %46, %30 ], [ %28, %27 ]
  %33 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %31, i64 0, i32 0
  %34 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %32, i64 0, i32 0
  %35 = load i32, i32* %34, align 8
  store i32 %35, i32* %33, align 8
  %36 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %31, i64 0, i32 1
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %32, i64 0, i32 1
  %38 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %36, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %38, align 8
  %39 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %31, i64 0, i32 1, i32 1
  store i64 0, i64* %39, align 8
  %40 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %31, i64 0, i32 1, i32 2
  %41 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %31, i64 0, i32 1, i32 3, i64 0
  %42 = bitcast i32** %40 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %41, %"struct.std::__1::aligned_storage<4, 4>::type"** %42, align 8
  %43 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %31, i64 0, i32 1, i32 4
  %44 = bitcast %"class.std::__1::unique_ptr.0"* %43 to i64*
  store i64 0, i64* %44, align 8
  %45 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %36, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %37) #11
  %46 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %32, i64 1
  %47 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %31, i64 1
  %48 = icmp eq %"struct.spvtools::opt::Operand"* %46, %3
  br i1 %48, label %49, label %30

49:                                               ; preds = %30
  %50 = ptrtoint %"struct.spvtools::opt::Operand"* %47 to i64
  br label %51

51:                                               ; preds = %49, %27
  %52 = phi i64 [ %18, %27 ], [ %50, %49 ]
  store i64 %52, i64* %22, align 8
  %53 = icmp sgt i64 %24, 0
  br i1 %53, label %54, label %250

54:                                               ; preds = %51
  %55 = inttoptr i64 %52 to %"struct.spvtools::opt::Operand"*
  br label %56

56:                                               ; preds = %54, %23
  %57 = phi i64 [ %52, %54 ], [ %18, %23 ]
  %58 = phi %"struct.spvtools::opt::Operand"* [ %55, %54 ], [ %17, %23 ]
  %59 = phi %"struct.spvtools::opt::Operand"* [ %28, %54 ], [ %3, %23 ]
  %60 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 %10
  %61 = ptrtoint %"struct.spvtools::opt::Operand"* %60 to i64
  %62 = sub i64 %57, %61
  %63 = sdiv exact i64 %62, 48
  %64 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 %63
  %65 = icmp ult %"struct.spvtools::opt::Operand"* %64, %17
  br i1 %65, label %83, label %68

66:                                               ; preds = %83
  %67 = ptrtoint %"struct.spvtools::opt::Operand"* %100 to i64
  br label %68

68:                                               ; preds = %66, %56
  %69 = phi i64 [ %67, %66 ], [ %57, %56 ]
  store i64 %69, i64* %22, align 8
  %70 = icmp eq i64 %62, 0
  br i1 %70, label %102, label %71

71:                                               ; preds = %68, %71
  %72 = phi %"struct.spvtools::opt::Operand"* [ %75, %71 ], [ %58, %68 ]
  %73 = phi %"struct.spvtools::opt::Operand"* [ %74, %71 ], [ %64, %68 ]
  %74 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %73, i64 -1
  %75 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %72, i64 -1
  %76 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %74, i64 0, i32 0
  %77 = load i32, i32* %76, align 8
  %78 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %75, i64 0, i32 0
  store i32 %77, i32* %78, align 8
  %79 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %72, i64 -1, i32 1
  %80 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %73, i64 -1, i32 1
  %81 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %79, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %80) #11
  %82 = icmp eq %"struct.spvtools::opt::Operand"* %74, %1
  br i1 %82, label %102, label %71

83:                                               ; preds = %56, %83
  %84 = phi %"struct.spvtools::opt::Operand"* [ %100, %83 ], [ %58, %56 ]
  %85 = phi %"struct.spvtools::opt::Operand"* [ %99, %83 ], [ %64, %56 ]
  %86 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %84, i64 0, i32 0
  %87 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %85, i64 0, i32 0
  %88 = load i32, i32* %87, align 8
  store i32 %88, i32* %86, align 8
  %89 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %84, i64 0, i32 1
  %90 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %85, i64 0, i32 1
  %91 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %89, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %91, align 8
  %92 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %84, i64 0, i32 1, i32 1
  store i64 0, i64* %92, align 8
  %93 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %84, i64 0, i32 1, i32 2
  %94 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %84, i64 0, i32 1, i32 3, i64 0
  %95 = bitcast i32** %93 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %94, %"struct.std::__1::aligned_storage<4, 4>::type"** %95, align 8
  %96 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %84, i64 0, i32 1, i32 4
  %97 = bitcast %"class.std::__1::unique_ptr.0"* %96 to i64*
  store i64 0, i64* %97, align 8
  %98 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %89, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %90) #11
  %99 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %85, i64 1
  %100 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %84, i64 1
  %101 = icmp ult %"struct.spvtools::opt::Operand"* %99, %17
  br i1 %101, label %83, label %66

102:                                              ; preds = %71, %68
  %103 = icmp eq %"struct.spvtools::opt::Operand"* %59, %2
  br i1 %103, label %250, label %104

104:                                              ; preds = %102, %104
  %105 = phi %"struct.spvtools::opt::Operand"* [ %114, %104 ], [ %1, %102 ]
  %106 = phi %"struct.spvtools::opt::Operand"* [ %113, %104 ], [ %2, %102 ]
  %107 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %106, i64 0, i32 0
  %108 = load i32, i32* %107, align 8
  %109 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %105, i64 0, i32 0
  store i32 %108, i32* %109, align 8
  %110 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %105, i64 0, i32 1
  %111 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %106, i64 0, i32 1
  %112 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %110, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %111) #11
  %113 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %106, i64 1
  %114 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %105, i64 1
  %115 = icmp eq %"struct.spvtools::opt::Operand"* %113, %59
  br i1 %115, label %250, label %104

116:                                              ; preds = %12
  %117 = bitcast %"class.std::__1::vector"* %0 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = sub i64 %18, %118
  %120 = sdiv exact i64 %119, 48
  %121 = add nsw i64 %120, %10
  %122 = icmp ugt i64 %121, 384307168202282325
  br i1 %122, label %123, label %125

123:                                              ; preds = %116
  %124 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %124) #13
  unreachable

125:                                              ; preds = %116
  %126 = sub i64 %15, %118
  %127 = sdiv exact i64 %126, 48
  %128 = icmp ult i64 %127, 192153584101141162
  br i1 %128, label %132, label %129

129:                                              ; preds = %125
  %130 = sub i64 %5, %118
  %131 = sdiv exact i64 %130, 48
  br label %139

132:                                              ; preds = %125
  %133 = shl nsw i64 %127, 1
  %134 = icmp ult i64 %133, %121
  %135 = select i1 %134, i64 %121, i64 %133
  %136 = sub i64 %5, %118
  %137 = sdiv exact i64 %136, 48
  %138 = icmp eq i64 %135, 0
  br i1 %138, label %145, label %139

139:                                              ; preds = %132, %129
  %140 = phi i64 [ %131, %129 ], [ %137, %132 ]
  %141 = phi i64 [ 384307168202282325, %129 ], [ %135, %132 ]
  %142 = mul i64 %141, 48
  %143 = tail call i8* @_Znwm(i64 %142) #12
  %144 = bitcast i8* %143 to %"struct.spvtools::opt::Operand"*
  br label %145

145:                                              ; preds = %139, %132
  %146 = phi i64 [ %140, %139 ], [ %137, %132 ]
  %147 = phi i64 [ %141, %139 ], [ 0, %132 ]
  %148 = phi %"struct.spvtools::opt::Operand"* [ %144, %139 ], [ null, %132 ]
  %149 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %148, i64 %146
  %150 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %148, i64 %147
  %151 = ptrtoint %"struct.spvtools::opt::Operand"* %150 to i64
  %152 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %149, i64 %10
  br label %153

153:                                              ; preds = %145, %153
  %154 = phi %"struct.spvtools::opt::Operand"* [ %169, %153 ], [ %149, %145 ]
  %155 = phi %"struct.spvtools::opt::Operand"* [ %170, %153 ], [ %2, %145 ]
  %156 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %154, i64 0, i32 0
  %157 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %155, i64 0, i32 0
  %158 = load i32, i32* %157, align 8
  store i32 %158, i32* %156, align 8
  %159 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %154, i64 0, i32 1
  %160 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %155, i64 0, i32 1
  %161 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %159, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %161, align 8
  %162 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %154, i64 0, i32 1, i32 1
  store i64 0, i64* %162, align 8
  %163 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %154, i64 0, i32 1, i32 2
  %164 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %154, i64 0, i32 1, i32 3, i64 0
  %165 = bitcast i32** %163 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %164, %"struct.std::__1::aligned_storage<4, 4>::type"** %165, align 8
  %166 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %154, i64 0, i32 1, i32 4
  %167 = bitcast %"class.std::__1::unique_ptr.0"* %166 to i64*
  store i64 0, i64* %167, align 8
  %168 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %159, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %160) #11
  %169 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %154, i64 1
  %170 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %155, i64 1
  %171 = icmp eq %"struct.spvtools::opt::Operand"* %152, %169
  br i1 %171, label %172, label %153

172:                                              ; preds = %153
  %173 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %6, align 8
  %174 = icmp eq %"struct.spvtools::opt::Operand"* %173, %1
  br i1 %174, label %194, label %175

175:                                              ; preds = %172, %175
  %176 = phi %"struct.spvtools::opt::Operand"* [ %192, %175 ], [ %149, %172 ]
  %177 = phi %"struct.spvtools::opt::Operand"* [ %178, %175 ], [ %1, %172 ]
  %178 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %177, i64 -1
  %179 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %176, i64 -1, i32 0
  %180 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %178, i64 0, i32 0
  %181 = load i32, i32* %180, align 8
  store i32 %181, i32* %179, align 8
  %182 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %176, i64 -1, i32 1
  %183 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %177, i64 -1, i32 1
  %184 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %182, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %184, align 8
  %185 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %176, i64 -1, i32 1, i32 1
  store i64 0, i64* %185, align 8
  %186 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %176, i64 -1, i32 1, i32 2
  %187 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %176, i64 -1, i32 1, i32 3, i64 0
  %188 = bitcast i32** %186 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %187, %"struct.std::__1::aligned_storage<4, 4>::type"** %188, align 8
  %189 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %176, i64 -1, i32 1, i32 4
  %190 = bitcast %"class.std::__1::unique_ptr.0"* %189 to i64*
  store i64 0, i64* %190, align 8
  %191 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %182, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %183) #11
  %192 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %176, i64 -1
  %193 = icmp eq %"struct.spvtools::opt::Operand"* %178, %173
  br i1 %193, label %194, label %175

194:                                              ; preds = %175, %172
  %195 = phi %"struct.spvtools::opt::Operand"* [ %149, %172 ], [ %192, %175 ]
  %196 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %16, align 8
  %197 = icmp eq %"struct.spvtools::opt::Operand"* %196, %1
  br i1 %197, label %219, label %198

198:                                              ; preds = %194, %198
  %199 = phi %"struct.spvtools::opt::Operand"* [ %215, %198 ], [ %152, %194 ]
  %200 = phi %"struct.spvtools::opt::Operand"* [ %214, %198 ], [ %1, %194 ]
  %201 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %199, i64 0, i32 0
  %202 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %200, i64 0, i32 0
  %203 = load i32, i32* %202, align 8
  store i32 %203, i32* %201, align 8
  %204 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %199, i64 0, i32 1
  %205 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %200, i64 0, i32 1
  %206 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %204, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %206, align 8
  %207 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %199, i64 0, i32 1, i32 1
  store i64 0, i64* %207, align 8
  %208 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %199, i64 0, i32 1, i32 2
  %209 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %199, i64 0, i32 1, i32 3, i64 0
  %210 = bitcast i32** %208 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %209, %"struct.std::__1::aligned_storage<4, 4>::type"** %210, align 8
  %211 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %199, i64 0, i32 1, i32 4
  %212 = bitcast %"class.std::__1::unique_ptr.0"* %211 to i64*
  store i64 0, i64* %212, align 8
  %213 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %204, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %205) #11
  %214 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %200, i64 1
  %215 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %199, i64 1
  %216 = icmp eq %"struct.spvtools::opt::Operand"* %214, %196
  br i1 %216, label %217, label %198

217:                                              ; preds = %198
  %218 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %16, align 8
  br label %219

219:                                              ; preds = %194, %217
  %220 = phi %"struct.spvtools::opt::Operand"* [ %218, %217 ], [ %1, %194 ]
  %221 = phi %"struct.spvtools::opt::Operand"* [ %215, %217 ], [ %152, %194 ]
  %222 = ptrtoint %"struct.spvtools::opt::Operand"* %195 to i64
  %223 = ptrtoint %"struct.spvtools::opt::Operand"* %221 to i64
  %224 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %6, align 8
  store i64 %222, i64* %117, align 8
  store i64 %223, i64* %22, align 8
  store i64 %151, i64* %14, align 8
  %225 = icmp eq %"struct.spvtools::opt::Operand"* %220, %224
  br i1 %225, label %246, label %226

226:                                              ; preds = %219, %244
  %227 = phi %"struct.spvtools::opt::Operand"* [ %228, %244 ], [ %220, %219 ]
  %228 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %227, i64 -1
  %229 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %227, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %229, align 8
  %230 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %227, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %231 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %230, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %230, align 8
  %232 = icmp eq %"class.std::__1::vector.3"* %231, null
  br i1 %232, label %244, label %233

233:                                              ; preds = %226
  %234 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %231, i64 0, i32 0, i32 0
  %235 = load i32*, i32** %234, align 8
  %236 = icmp eq i32* %235, null
  br i1 %236, label %242, label %237

237:                                              ; preds = %233
  %238 = ptrtoint i32* %235 to i64
  %239 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %231, i64 0, i32 0, i32 1
  %240 = bitcast i32** %239 to i64*
  store i64 %238, i64* %240, align 8
  %241 = bitcast i32* %235 to i8*
  tail call void @_ZdlPv(i8* %241) #12
  br label %242

242:                                              ; preds = %237, %233
  %243 = bitcast %"class.std::__1::vector.3"* %231 to i8*
  tail call void @_ZdlPv(i8* %243) #12
  br label %244

244:                                              ; preds = %242, %226
  %245 = icmp eq %"struct.spvtools::opt::Operand"* %228, %224
  br i1 %245, label %246, label %226

246:                                              ; preds = %244, %219
  %247 = icmp eq %"struct.spvtools::opt::Operand"* %224, null
  br i1 %247, label %250, label %248

248:                                              ; preds = %246
  %249 = bitcast %"struct.spvtools::opt::Operand"* %224 to i8*
  tail call void @_ZdlPv(i8* %249) #12
  br label %250

250:                                              ; preds = %104, %248, %246, %51, %102, %4
  %251 = phi %"struct.spvtools::opt::Operand"* [ %1, %4 ], [ %1, %102 ], [ %1, %51 ], [ %149, %246 ], [ %149, %248 ], [ %1, %104 ]
  ret %"struct.spvtools::opt::Operand"* %251
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt4PassD0Ev(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"*, %"struct.spvtools::opt::Operand"* dereferenceable(48)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.spvtools::opt::Operand"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 48
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 384307168202282325
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.spvtools::opt::Operand"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 48
  %20 = icmp ult i64 %19, 192153584101141162
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 384307168202282325, %14 ]
  %28 = mul i64 %27, 48
  %29 = tail call i8* @_Znwm(i64 %28) #12
  %30 = bitcast i8* %29 to %"struct.spvtools::opt::Operand"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.spvtools::opt::Operand"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %32
  %36 = ptrtoint %"struct.spvtools::opt::Operand"* %35 to i64
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 0
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 0
  %39 = load i32, i32* %38, align 8
  store i32 %39, i32* %37, align 8
  %40 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1
  %41 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 1
  %42 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %40, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %43 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 1
  store i64 0, i64* %43, align 8
  %44 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 2
  %45 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 3, i64 0
  %46 = bitcast i32** %44 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %45, %"struct.std::__1::aligned_storage<4, 4>::type"** %46, align 8
  %47 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 4
  %48 = bitcast %"class.std::__1::unique_ptr.0"* %47 to i64*
  store i64 0, i64* %48, align 8
  %49 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %40, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %41) #11
  %50 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 1
  %51 = ptrtoint %"struct.spvtools::opt::Operand"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %53 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %52, align 8
  %54 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %3, align 8
  %55 = icmp eq %"struct.spvtools::opt::Operand"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %31
  %57 = ptrtoint %"struct.spvtools::opt::Operand"* %53 to i64
  br label %80

58:                                               ; preds = %31, %58
  %59 = phi %"struct.spvtools::opt::Operand"* [ %75, %58 ], [ %34, %31 ]
  %60 = phi %"struct.spvtools::opt::Operand"* [ %61, %58 ], [ %54, %31 ]
  %61 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %60, i64 -1
  %62 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 0
  %63 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %61, i64 0, i32 0
  %64 = load i32, i32* %63, align 8
  store i32 %64, i32* %62, align 8
  %65 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1
  %66 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %60, i64 -1, i32 1
  %67 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %65, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %67, align 8
  %68 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 1
  store i64 0, i64* %68, align 8
  %69 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 2
  %70 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 3, i64 0
  %71 = bitcast i32** %69 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %70, %"struct.std::__1::aligned_storage<4, 4>::type"** %71, align 8
  %72 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 4
  %73 = bitcast %"class.std::__1::unique_ptr.0"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %65, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %66) #11
  %75 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1
  %76 = icmp eq %"struct.spvtools::opt::Operand"* %61, %53
  br i1 %76, label %77, label %58

77:                                               ; preds = %58
  %78 = load i64, i64* %6, align 8
  %79 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %3, align 8
  br label %80

80:                                               ; preds = %56, %77
  %81 = phi %"struct.spvtools::opt::Operand"* [ %53, %56 ], [ %79, %77 ]
  %82 = phi %"struct.spvtools::opt::Operand"* [ %34, %56 ], [ %75, %77 ]
  %83 = phi i64 [ %57, %56 ], [ %78, %77 ]
  %84 = ptrtoint %"struct.spvtools::opt::Operand"* %82 to i64
  store i64 %84, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %85 = inttoptr i64 %83 to %"struct.spvtools::opt::Operand"*
  %86 = icmp eq %"struct.spvtools::opt::Operand"* %81, %85
  br i1 %86, label %107, label %87

87:                                               ; preds = %80, %105
  %88 = phi %"struct.spvtools::opt::Operand"* [ %89, %105 ], [ %81, %80 ]
  %89 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1
  %90 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %90, align 8
  %91 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %92 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %91, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %91, align 8
  %93 = icmp eq %"class.std::__1::vector.3"* %92, null
  br i1 %93, label %105, label %94

94:                                               ; preds = %87
  %95 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 0
  %96 = load i32*, i32** %95, align 8
  %97 = icmp eq i32* %96, null
  br i1 %97, label %103, label %98

98:                                               ; preds = %94
  %99 = ptrtoint i32* %96 to i64
  %100 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 1
  %101 = bitcast i32** %100 to i64*
  store i64 %99, i64* %101, align 8
  %102 = bitcast i32* %96 to i8*
  tail call void @_ZdlPv(i8* %102) #12
  br label %103

103:                                              ; preds = %98, %94
  %104 = bitcast %"class.std::__1::vector.3"* %92 to i8*
  tail call void @_ZdlPv(i8* %104) #12
  br label %105

105:                                              ; preds = %103, %87
  %106 = icmp eq %"struct.spvtools::opt::Operand"* %89, %85
  br i1 %106, label %107, label %87

107:                                              ; preds = %105, %80
  %108 = icmp eq i64 %83, 0
  br i1 %108, label %111, label %109

109:                                              ; preds = %107
  %110 = inttoptr i64 %83 to i8*
  tail call void @_ZdlPv(i8* %110) #12
  br label %111

111:                                              ; preds = %107, %109
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt10BasicBlockEEE11__call_implINS0_20__default_alloc_funcIZNS3_19CombineAccessChains15ProcessFunctionERNS3_8FunctionEE3$_0S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::BasicBlock"*) #0 align 2 {
  %3 = alloca %"class.std::__1::function.999", align 8
  %4 = alloca %"class.std::__1::function.990", align 8
  %5 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %6 = bitcast [8 x i8]* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::function.990"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #11
  %9 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::function.990", %"class.std::__1::function.990"* %4, i64 0, i32 0, i32 1, i32 0
  %12 = getelementptr inbounds %"class.std::__1::function.990", %"class.std::__1::function.990"* %4, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZZNS3_19CombineAccessChains15ProcessFunctionERNS3_8FunctionEENK3$_0clEPNS3_10BasicBlockEEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %11, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZZN8spvtools3opt19CombineAccessChains15ProcessFunctionERNS5_8FunctionEENK3$_0clEPNS5_10BasicBlockEEUlPNS5_11InstructionEE_FvSD_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %12, align 8
  %13 = getelementptr inbounds %"class.std::__1::function.990", %"class.std::__1::function.990"* %4, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.std::__1::function.990"* %4 to i64*
  store i64 %10, i64* %14, align 8
  %15 = getelementptr inbounds %"class.std::__1::function.990", %"class.std::__1::function.990"* %4, i64 0, i32 0, i32 0, i32 1
  %16 = bitcast [8 x i8]* %15 to i64*
  store i64 %7, i64* %16, align 8
  %17 = bitcast %"class.std::__1::function.999"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #11
  %18 = ptrtoint %"class.std::__1::function.990"* %4 to i64
  %19 = getelementptr inbounds %"class.std::__1::function.999", %"class.std::__1::function.999"* %3, i64 0, i32 0, i32 1, i32 0
  %20 = getelementptr inbounds %"class.std::__1::function.999", %"class.std::__1::function.999"* %3, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %19, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %20, align 8
  %21 = bitcast %"class.std::__1::function.999"* %3 to i64*
  store i64 %18, i64* %21, align 8
  %22 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %23 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %22, align 8
  %24 = icmp eq %"class.spvtools::opt::Instruction"* %23, null
  %25 = inttoptr i64 %7 to %"class.spvtools::opt::CombineAccessChains"*
  br i1 %24, label %35, label %26

26:                                               ; preds = %2
  %27 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %23, i64 0, i32 2
  %28 = load i32, i32* %27, align 8
  switch i32 %28, label %35 [
    i32 65, label %29
    i32 66, label %29
    i32 67, label %29
    i32 70, label %29
  ]

29:                                               ; preds = %26, %26, %26, %26
  %30 = call zeroext i1 @_ZN8spvtools3opt19CombineAccessChains18CombineAccessChainEPNS0_11InstructionE(%"class.spvtools::opt::CombineAccessChains"* %25, %"class.spvtools::opt::Instruction"* nonnull %23) #11
  %31 = zext i1 %30 to i8
  %32 = load i8*, i8** %13, align 8
  %33 = load i8, i8* %32, align 1, !range !2
  %34 = or i8 %33, %31
  store i8 %34, i8* %32, align 1
  br label %35

35:                                               ; preds = %29, %26, %2
  %36 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %37 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %36, align 8
  %38 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %37, i64 0, i32 0, i32 3
  %39 = load i8, i8* %38, align 8, !range !2
  %40 = icmp ne i8 %39, 0
  %41 = icmp eq %"class.spvtools::opt::Instruction"* %37, null
  %42 = or i1 %41, %40
  br i1 %42, label %57, label %43

43:                                               ; preds = %35
  %44 = getelementptr inbounds %"class.std::__1::function.999", %"class.std::__1::function.999"* %3, i64 0, i32 0, i32 0
  br label %45

45:                                               ; preds = %48, %43
  %46 = phi %"class.spvtools::opt::Instruction"* [ %54, %48 ], [ %37, %43 ]
  %47 = icmp eq %"class.spvtools::opt::Instruction"* %46, null
  br i1 %47, label %57, label %48

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %46, i64 0, i32 0, i32 1
  %50 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %49, align 8
  %51 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %50, i64 0, i32 0, i32 3
  %52 = load i8, i8* %51, align 8, !range !2
  %53 = icmp eq i8 %52, 0
  %54 = select i1 %53, %"class.spvtools::opt::Instruction"* %50, %"class.spvtools::opt::Instruction"* null
  %55 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %19, align 8
  %56 = call zeroext i1 %55(%"union.std::__1::__function::__policy_storage"* nonnull %44, %"class.spvtools::opt::Instruction"* nonnull %46) #11
  br i1 %56, label %45, label %57

57:                                               ; preds = %48, %45, %35
  %58 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %20, align 8
  %59 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %58, i64 0, i32 1
  %60 = load void (i8*)*, void (i8*)** %59, align 8
  %61 = icmp eq void (i8*)* %60, null
  br i1 %61, label %65, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.std::__1::function.999", %"class.std::__1::function.999"* %3, i64 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  call void %60(i8* %64) #11
  br label %65

65:                                               ; preds = %62, %57
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #11
  %66 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %12, align 8
  %67 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %66, i64 0, i32 1
  %68 = load void (i8*)*, void (i8*)** %67, align 8
  %69 = icmp eq void (i8*)* %68, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %65
  %71 = load i8*, i8** %13, align 8
  call void %68(i8* %71) #11
  br label %72

72:                                               ; preds = %65, %70
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZZNS3_19CombineAccessChains15ProcessFunctionERNS3_8FunctionEENK3$_0clEPNS3_10BasicBlockEEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %15 [
    i32 65, label %5
    i32 66, label %5
    i32 67, label %5
    i32 70, label %5
  ]

5:                                                ; preds = %2, %2, %2, %2
  %6 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %7 = bitcast [8 x i8]* %6 to %"class.spvtools::opt::CombineAccessChains"**
  %8 = load %"class.spvtools::opt::CombineAccessChains"*, %"class.spvtools::opt::CombineAccessChains"** %7, align 8
  %9 = tail call zeroext i1 @_ZN8spvtools3opt19CombineAccessChains18CombineAccessChainEPNS0_11InstructionE(%"class.spvtools::opt::CombineAccessChains"* %8, %"class.spvtools::opt::Instruction"* %1) #11
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = load i8, i8* %12, align 1, !range !2
  %14 = or i8 %13, %10
  store i8 %14, i8* %12, align 1
  br label %15

15:                                               ; preds = %2, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbRKN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_19CombineAccessChains14GetArrayStrideEPS5_E3$_1S7_EEEEbPKNS0_16__policy_storageES6_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"* dereferenceable(112)) #0 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 71
  %6 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp eq i8 %7, 0
  %9 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %10 = load i8, i8* %9, align 1, !range !2
  %11 = icmp eq i8 %10, 0
  %12 = select i1 %11, i32 1, i32 2
  %13 = xor i1 %11, true
  %14 = zext i1 %13 to i32
  %15 = select i1 %8, i32 %14, i32 %12
  %16 = select i1 %5, i32 1, i32 2
  %17 = add nuw nsw i32 %15, %16
  %18 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %17) #11
  %19 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to i32**
  %20 = load i32*, i32** %19, align 8
  store i32 %18, i32* %20, align 4
  ret i1 false
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector"*, %"struct.spvtools::opt::Operand"* dereferenceable(48)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.spvtools::opt::Operand"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 48
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 384307168202282325
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.spvtools::opt::Operand"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 48
  %20 = icmp ult i64 %19, 192153584101141162
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 384307168202282325, %14 ]
  %28 = mul i64 %27, 48
  %29 = tail call i8* @_Znwm(i64 %28) #12
  %30 = bitcast i8* %29 to %"struct.spvtools::opt::Operand"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.spvtools::opt::Operand"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %32
  %36 = ptrtoint %"struct.spvtools::opt::Operand"* %35 to i64
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 0
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 0
  %39 = load i32, i32* %38, align 8
  store i32 %39, i32* %37, align 8
  %40 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1
  %41 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 1
  %42 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %40, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %43 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 1
  store i64 0, i64* %43, align 8
  %44 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 2
  %45 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 3, i64 0
  %46 = bitcast i32** %44 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %45, %"struct.std::__1::aligned_storage<4, 4>::type"** %46, align 8
  %47 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 4
  %48 = bitcast %"class.std::__1::unique_ptr.0"* %47 to i64*
  store i64 0, i64* %48, align 8
  %49 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %40, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %41) #11
  %50 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 1
  %51 = ptrtoint %"struct.spvtools::opt::Operand"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %53 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %52, align 8
  %54 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %3, align 8
  %55 = icmp eq %"struct.spvtools::opt::Operand"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %31
  %57 = ptrtoint %"struct.spvtools::opt::Operand"* %53 to i64
  br label %80

58:                                               ; preds = %31, %58
  %59 = phi %"struct.spvtools::opt::Operand"* [ %75, %58 ], [ %34, %31 ]
  %60 = phi %"struct.spvtools::opt::Operand"* [ %61, %58 ], [ %54, %31 ]
  %61 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %60, i64 -1
  %62 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 0
  %63 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %61, i64 0, i32 0
  %64 = load i32, i32* %63, align 8
  store i32 %64, i32* %62, align 8
  %65 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1
  %66 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %60, i64 -1, i32 1
  %67 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %65, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %67, align 8
  %68 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 1
  store i64 0, i64* %68, align 8
  %69 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 2
  %70 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 3, i64 0
  %71 = bitcast i32** %69 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %70, %"struct.std::__1::aligned_storage<4, 4>::type"** %71, align 8
  %72 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 4
  %73 = bitcast %"class.std::__1::unique_ptr.0"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %65, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %66) #11
  %75 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1
  %76 = icmp eq %"struct.spvtools::opt::Operand"* %61, %53
  br i1 %76, label %77, label %58

77:                                               ; preds = %58
  %78 = load i64, i64* %6, align 8
  %79 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %3, align 8
  br label %80

80:                                               ; preds = %56, %77
  %81 = phi %"struct.spvtools::opt::Operand"* [ %53, %56 ], [ %79, %77 ]
  %82 = phi %"struct.spvtools::opt::Operand"* [ %34, %56 ], [ %75, %77 ]
  %83 = phi i64 [ %57, %56 ], [ %78, %77 ]
  %84 = ptrtoint %"struct.spvtools::opt::Operand"* %82 to i64
  store i64 %84, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %85 = inttoptr i64 %83 to %"struct.spvtools::opt::Operand"*
  %86 = icmp eq %"struct.spvtools::opt::Operand"* %81, %85
  br i1 %86, label %107, label %87

87:                                               ; preds = %80, %105
  %88 = phi %"struct.spvtools::opt::Operand"* [ %89, %105 ], [ %81, %80 ]
  %89 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1
  %90 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %90, align 8
  %91 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %92 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %91, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %91, align 8
  %93 = icmp eq %"class.std::__1::vector.3"* %92, null
  br i1 %93, label %105, label %94

94:                                               ; preds = %87
  %95 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 0
  %96 = load i32*, i32** %95, align 8
  %97 = icmp eq i32* %96, null
  br i1 %97, label %103, label %98

98:                                               ; preds = %94
  %99 = ptrtoint i32* %96 to i64
  %100 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 1
  %101 = bitcast i32** %100 to i64*
  store i64 %99, i64* %101, align 8
  %102 = bitcast i32* %96 to i8*
  tail call void @_ZdlPv(i8* %102) #12
  br label %103

103:                                              ; preds = %98, %94
  %104 = bitcast %"class.std::__1::vector.3"* %92 to i8*
  tail call void @_ZdlPv(i8* %104) #12
  br label %105

105:                                              ; preds = %103, %87
  %106 = icmp eq %"struct.spvtools::opt::Operand"* %89, %85
  br i1 %106, label %107, label %87

107:                                              ; preds = %105, %80
  %108 = icmp eq i64 %83, 0
  br i1 %108, label %111, label %109

109:                                              ; preds = %107
  %110 = inttoptr i64 %83 to i8*
  tail call void @_ZdlPv(i8* %110) #12
  br label %111

111:                                              ; preds = %107, %109
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{i64 0, i64 65}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISW_EEEEEEmOT_DpOT0_: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISW_EEEEEEmOT_DpOT0_"}
!9 = distinct !{!9, !5}
