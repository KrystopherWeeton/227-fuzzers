; ModuleID = '../../third_party/libjpeg_turbo/jcparam.c'
source_filename = "../../third_party/libjpeg_turbo/jcparam.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.jpeg_compress_struct = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i8*, i32, i32, %struct.jpeg_destination_mgr*, i32, i32, i32, i32, double, i32, i32, i32, %struct.jpeg_component_info*, [4 x %struct.JQUANT_TBL*], [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*], [16 x i8], [16 x i8], [16 x i8], i32, %struct.jpeg_scan_info*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i16, i16, i32, i32, i32, i32, i32, i32, i32, [4 x %struct.jpeg_component_info*], i32, i32, i32, [10 x i32], i32, i32, i32, i32, %struct.jpeg_comp_master*, %struct.jpeg_c_main_controller*, %struct.jpeg_c_prep_controller*, %struct.jpeg_c_coef_controller*, %struct.jpeg_marker_writer*, %struct.jpeg_color_converter*, %struct.jpeg_downsampler*, %struct.jpeg_forward_dct*, %struct.jpeg_entropy_encoder*, %struct.jpeg_scan_info*, i32 }
%struct.jpeg_error_mgr = type { void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*, i8*)*, void (%struct.jpeg_common_struct*)*, i32, %union.anon, i32, i64, i8**, i32, i8**, i32, i32 }
%struct.jpeg_common_struct = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i8*, i32, i32 }
%union.anon = type { [8 x i32], [48 x i8] }
%struct.jpeg_memory_mgr = type { i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)*, i8** (%struct.jpeg_common_struct*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, i32, i32, i32)*, %struct.jvirt_sarray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)*, %struct.jvirt_barray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)*, {}*, i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, %struct.jvirt_barray_control*, i32, i32, i32)*, void (%struct.jpeg_common_struct*, i32)*, {}*, i64, i64 }
%struct.jvirt_sarray_control = type opaque
%struct.jvirt_barray_control = type opaque
%struct.jpeg_progress_mgr = type { {}*, i64, i64, i32, i32 }
%struct.jpeg_destination_mgr = type { i8*, i64, void (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)* }
%struct.jpeg_component_info = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.JQUANT_TBL*, i8* }
%struct.JQUANT_TBL = type { [64 x i16], i32 }
%struct.JHUFF_TBL = type { [17 x i8], [256 x i8], i32 }
%struct.jpeg_comp_master = type { void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)*, i32, i32 }
%struct.jpeg_c_main_controller = type { void (%struct.jpeg_compress_struct*, i32)*, void (%struct.jpeg_compress_struct*, i8**, i32*, i32)* }
%struct.jpeg_c_prep_controller = type { void (%struct.jpeg_compress_struct*, i32)*, void (%struct.jpeg_compress_struct*, i8**, i32*, i32, i8***, i32*, i32)* }
%struct.jpeg_c_coef_controller = type { void (%struct.jpeg_compress_struct*, i32)*, i32 (%struct.jpeg_compress_struct*, i8***)* }
%struct.jpeg_marker_writer = type { void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*, i32, i32)*, void (%struct.jpeg_compress_struct*, i32)* }
%struct.jpeg_color_converter = type { void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*, i8**, i8***, i32, i32)* }
%struct.jpeg_downsampler = type { void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*, i8***, i32, i8***, i32)*, i32 }
%struct.jpeg_forward_dct = type { void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*, %struct.jpeg_component_info*, i8**, [64 x i16]*, i32, i32, i32)* }
%struct.jpeg_entropy_encoder = type { void (%struct.jpeg_compress_struct*, i32)*, i32 (%struct.jpeg_compress_struct*, [64 x i16]**)*, void (%struct.jpeg_compress_struct*)* }
%struct.jpeg_scan_info = type { i32, [4 x i32], i32, i32, i32, i32 }

@std_luminance_quant_tbl = internal unnamed_addr constant [64 x i32] [i32 16, i32 11, i32 10, i32 16, i32 24, i32 40, i32 51, i32 61, i32 12, i32 12, i32 14, i32 19, i32 26, i32 58, i32 60, i32 55, i32 14, i32 13, i32 16, i32 24, i32 40, i32 57, i32 69, i32 56, i32 14, i32 17, i32 22, i32 29, i32 51, i32 87, i32 80, i32 62, i32 18, i32 22, i32 37, i32 56, i32 68, i32 109, i32 103, i32 77, i32 24, i32 35, i32 55, i32 64, i32 81, i32 104, i32 113, i32 92, i32 49, i32 64, i32 78, i32 87, i32 103, i32 121, i32 120, i32 101, i32 72, i32 92, i32 95, i32 98, i32 112, i32 100, i32 103, i32 99], align 16
@std_chrominance_quant_tbl = internal unnamed_addr constant [64 x i32] [i32 17, i32 18, i32 24, i32 47, i32 99, i32 99, i32 99, i32 99, i32 18, i32 21, i32 26, i32 66, i32 99, i32 99, i32 99, i32 99, i32 24, i32 26, i32 56, i32 99, i32 99, i32 99, i32 99, i32 99, i32 47, i32 66, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99, i32 99], align 16
@std_huff_tables.bits_dc_luminance = internal constant [17 x i8] c"\00\00\01\05\01\01\01\01\01\01\00\00\00\00\00\00\00", align 16
@std_huff_tables.val_dc_luminance = internal constant [12 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B", align 1
@std_huff_tables.bits_dc_chrominance = internal constant [17 x i8] c"\00\00\03\01\01\01\01\01\01\01\01\01\00\00\00\00\00", align 16
@std_huff_tables.val_dc_chrominance = internal constant [12 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B", align 1
@std_huff_tables.bits_ac_luminance = internal constant [17 x i8] c"\00\00\02\01\03\03\02\04\03\05\05\04\04\00\00\01}", align 16
@std_huff_tables.val_ac_luminance = internal constant [162 x i8] c"\01\02\03\00\04\11\05\12!1A\06\13Qa\07\22q\142\81\91\A1\08#B\B1\C1\15R\D1\F0$3br\82\09\0A\16\17\18\19\1A%&'()*456789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz\83\84\85\86\87\88\89\8A\92\93\94\95\96\97\98\99\9A\A2\A3\A4\A5\A6\A7\A8\A9\AA\B2\B3\B4\B5\B6\B7\B8\B9\BA\C2\C3\C4\C5\C6\C7\C8\C9\CA\D2\D3\D4\D5\D6\D7\D8\D9\DA\E1\E2\E3\E4\E5\E6\E7\E8\E9\EA\F1\F2\F3\F4\F5\F6\F7\F8\F9\FA", align 16
@std_huff_tables.bits_ac_chrominance = internal constant [17 x i8] c"\00\00\02\01\02\04\04\03\04\07\05\04\04\00\01\02w", align 16
@std_huff_tables.val_ac_chrominance = internal constant [162 x i8] c"\00\01\02\03\11\04\05!1\06\12AQ\07aq\13\222\81\08\14B\91\A1\B1\C1\09#3R\F0\15br\D1\0A\16$4\E1%\F1\17\18\19\1A&'()*56789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz\82\83\84\85\86\87\88\89\8A\92\93\94\95\96\97\98\99\9A\A2\A3\A4\A5\A6\A7\A8\A9\AA\B2\B3\B4\B5\B6\B7\B8\B9\BA\C2\C3\C4\C5\C6\C7\C8\C9\CA\D2\D3\D4\D5\D6\D7\D8\D9\DA\E2\E3\E4\E5\E6\E7\E8\E9\EA\F2\F3\F4\F5\F6\F7\F8\F9\FA", align 16

; Function Attrs: nounwind ssp uwtable
define hidden void @jpeg_add_quant_table(%struct.jpeg_compress_struct*, i32, i32* nocapture readonly, i32, i32) local_unnamed_addr #0 {
  %6 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 5
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 100
  br i1 %8, label %20, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %11 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %10, align 8
  %12 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %11, i64 0, i32 5
  store i32 20, i32* %12, align 8
  %13 = load i32, i32* %6, align 4
  %14 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %10, align 8
  %15 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %14, i64 0, i32 6, i32 0, i64 0
  store i32 %13, i32* %15, align 4
  %16 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %10, align 8
  %17 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %16, i64 0, i32 0
  %18 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %17, align 8
  %19 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %18(%struct.jpeg_common_struct* %19) #4
  br label %20

20:                                               ; preds = %5, %9
  %21 = icmp ugt i32 %1, 3
  br i1 %21, label %22, label %32

22:                                               ; preds = %20
  %23 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %24 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %23, align 8
  %25 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %24, i64 0, i32 5
  store i32 31, i32* %25, align 8
  %26 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %23, align 8
  %27 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %26, i64 0, i32 6, i32 0, i64 0
  store i32 %1, i32* %27, align 4
  %28 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %23, align 8
  %29 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %28, i64 0, i32 0
  %30 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %29, align 8
  %31 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %30(%struct.jpeg_common_struct* %31) #4
  br label %32

32:                                               ; preds = %20, %22
  %33 = sext i32 %1 to i64
  %34 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 16, i64 %33
  %35 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %34, align 8
  %36 = icmp eq %struct.JQUANT_TBL* %35, null
  br i1 %36, label %37, label %40

37:                                               ; preds = %32
  %38 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %39 = tail call %struct.JQUANT_TBL* @jpeg_alloc_quant_table(%struct.jpeg_common_struct* %38) #4
  store %struct.JQUANT_TBL* %39, %struct.JQUANT_TBL** %34, align 8
  br label %40

40:                                               ; preds = %37, %32
  %41 = phi %struct.JQUANT_TBL* [ %39, %37 ], [ %35, %32 ]
  %42 = sext i32 %3 to i64
  %43 = icmp ne i32 %4, 0
  br label %44

44:                                               ; preds = %44, %40
  %45 = phi %struct.JQUANT_TBL* [ %41, %40 ], [ %64, %44 ]
  %46 = phi i64 [ 0, %40 ], [ %62, %44 ]
  %47 = getelementptr inbounds i32, i32* %2, i64 %46
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i64
  %50 = mul nsw i64 %49, %42
  %51 = add nsw i64 %50, 50
  %52 = sdiv i64 %51, 100
  %53 = icmp sgt i64 %52, 1
  %54 = select i1 %53, i64 %52, i64 1
  %55 = icmp slt i64 %54, 32767
  %56 = select i1 %55, i64 %54, i64 32767
  %57 = icmp sgt i64 %56, 255
  %58 = and i1 %43, %57
  %59 = trunc i64 %56 to i16
  %60 = select i1 %58, i16 255, i16 %59
  %61 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %45, i64 0, i32 0, i64 %46
  store i16 %60, i16* %61, align 2
  %62 = add nuw nsw i64 %46, 1
  %63 = icmp eq i64 %62, 64
  %64 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %34, align 8
  br i1 %63, label %65, label %44

65:                                               ; preds = %44
  %66 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %64, i64 0, i32 1
  store i32 0, i32* %66, align 4
  ret void
}

declare %struct.JQUANT_TBL* @jpeg_alloc_quant_table(%struct.jpeg_common_struct*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @jpeg_set_linear_quality(%struct.jpeg_compress_struct*, i32, i32) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 5
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 100
  br i1 %6, label %18, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %9 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %8, align 8
  %10 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %9, i64 0, i32 5
  store i32 20, i32* %10, align 8
  %11 = load i32, i32* %4, align 4
  %12 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %8, align 8
  %13 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %12, i64 0, i32 6, i32 0, i64 0
  store i32 %11, i32* %13, align 4
  %14 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %8, align 8
  %15 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %14, i64 0, i32 0
  %16 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %15, align 8
  %17 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %16(%struct.jpeg_common_struct* %17) #4
  br label %18

18:                                               ; preds = %7, %3
  %19 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 16, i64 0
  %20 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %19, align 8
  %21 = icmp eq %struct.JQUANT_TBL* %20, null
  br i1 %21, label %22, label %25

22:                                               ; preds = %18
  %23 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %24 = tail call %struct.JQUANT_TBL* @jpeg_alloc_quant_table(%struct.jpeg_common_struct* %23) #4
  store %struct.JQUANT_TBL* %24, %struct.JQUANT_TBL** %19, align 8
  br label %25

25:                                               ; preds = %22, %18
  %26 = phi %struct.JQUANT_TBL* [ %24, %22 ], [ %20, %18 ]
  %27 = sext i32 %1 to i64
  %28 = icmp ne i32 %2, 0
  br label %29

29:                                               ; preds = %29, %25
  %30 = phi %struct.JQUANT_TBL* [ %26, %25 ], [ %49, %29 ]
  %31 = phi i64 [ 0, %25 ], [ %47, %29 ]
  %32 = getelementptr inbounds [64 x i32], [64 x i32]* @std_luminance_quant_tbl, i64 0, i64 %31
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i64
  %35 = mul nsw i64 %34, %27
  %36 = add nsw i64 %35, 50
  %37 = sdiv i64 %36, 100
  %38 = icmp sgt i64 %37, 1
  %39 = select i1 %38, i64 %37, i64 1
  %40 = icmp slt i64 %39, 32767
  %41 = select i1 %40, i64 %39, i64 32767
  %42 = icmp sgt i64 %41, 255
  %43 = and i1 %28, %42
  %44 = trunc i64 %41 to i16
  %45 = select i1 %43, i16 255, i16 %44
  %46 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %30, i64 0, i32 0, i64 %31
  store i16 %45, i16* %46, align 2
  %47 = add nuw nsw i64 %31, 1
  %48 = icmp eq i64 %47, 64
  %49 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %19, align 8
  br i1 %48, label %50, label %29

50:                                               ; preds = %29
  %51 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %49, i64 0, i32 1
  store i32 0, i32* %51, align 4
  %52 = load i32, i32* %4, align 4
  %53 = icmp eq i32 %52, 100
  br i1 %53, label %65, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %56 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %55, align 8
  %57 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %56, i64 0, i32 5
  store i32 20, i32* %57, align 8
  %58 = load i32, i32* %4, align 4
  %59 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %55, align 8
  %60 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %59, i64 0, i32 6, i32 0, i64 0
  store i32 %58, i32* %60, align 4
  %61 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %55, align 8
  %62 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %61, i64 0, i32 0
  %63 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %62, align 8
  %64 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %63(%struct.jpeg_common_struct* %64) #4
  br label %65

65:                                               ; preds = %54, %50
  %66 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 16, i64 1
  %67 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %66, align 8
  %68 = icmp eq %struct.JQUANT_TBL* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %65
  %70 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %71 = tail call %struct.JQUANT_TBL* @jpeg_alloc_quant_table(%struct.jpeg_common_struct* %70) #4
  store %struct.JQUANT_TBL* %71, %struct.JQUANT_TBL** %66, align 8
  br label %72

72:                                               ; preds = %69, %65
  %73 = phi %struct.JQUANT_TBL* [ %67, %65 ], [ %71, %69 ]
  br label %74

74:                                               ; preds = %72, %74
  %75 = phi %struct.JQUANT_TBL* [ %94, %74 ], [ %73, %72 ]
  %76 = phi i64 [ %92, %74 ], [ 0, %72 ]
  %77 = getelementptr inbounds [64 x i32], [64 x i32]* @std_chrominance_quant_tbl, i64 0, i64 %76
  %78 = load i32, i32* %77, align 4
  %79 = zext i32 %78 to i64
  %80 = mul nsw i64 %79, %27
  %81 = add nsw i64 %80, 50
  %82 = sdiv i64 %81, 100
  %83 = icmp sgt i64 %82, 1
  %84 = select i1 %83, i64 %82, i64 1
  %85 = icmp slt i64 %84, 32767
  %86 = select i1 %85, i64 %84, i64 32767
  %87 = icmp sgt i64 %86, 255
  %88 = and i1 %28, %87
  %89 = trunc i64 %86 to i16
  %90 = select i1 %88, i16 255, i16 %89
  %91 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %75, i64 0, i32 0, i64 %76
  store i16 %90, i16* %91, align 2
  %92 = add nuw nsw i64 %76, 1
  %93 = icmp eq i64 %92, 64
  %94 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %66, align 8
  br i1 %93, label %95, label %74

95:                                               ; preds = %74
  %96 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %94, i64 0, i32 1
  store i32 0, i32* %96, align 4
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @jpeg_quality_scaling(i32) local_unnamed_addr #2 {
  %2 = icmp sgt i32 %0, 1
  %3 = select i1 %2, i32 %0, i32 1
  %4 = icmp slt i32 %3, 100
  %5 = select i1 %4, i32 %3, i32 100
  %6 = icmp slt i32 %5, 50
  br i1 %6, label %7, label %9

7:                                                ; preds = %1
  %8 = udiv i32 5000, %5
  br label %12

9:                                                ; preds = %1
  %10 = shl nuw nsw i32 %5, 1
  %11 = sub nsw i32 200, %10
  br label %12

12:                                               ; preds = %9, %7
  %13 = phi i32 [ %8, %7 ], [ %11, %9 ]
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @jpeg_set_quality(%struct.jpeg_compress_struct*, i32, i32) local_unnamed_addr #0 {
  %4 = icmp sgt i32 %1, 1
  %5 = select i1 %4, i32 %1, i32 1
  %6 = icmp slt i32 %5, 100
  %7 = select i1 %6, i32 %5, i32 100
  %8 = icmp slt i32 %7, 50
  br i1 %8, label %9, label %11

9:                                                ; preds = %3
  %10 = udiv i32 5000, %7
  br label %14

11:                                               ; preds = %3
  %12 = shl nuw nsw i32 %7, 1
  %13 = sub nsw i32 200, %12
  br label %14

14:                                               ; preds = %9, %11
  %15 = phi i32 [ %10, %9 ], [ %13, %11 ]
  tail call void @jpeg_set_linear_quality(%struct.jpeg_compress_struct* %0, i32 %15, i32 %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @jpeg_set_defaults(%struct.jpeg_compress_struct*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 100
  br i1 %4, label %16, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %7 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %6, align 8
  %8 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %7, i64 0, i32 5
  store i32 20, i32* %8, align 8
  %9 = load i32, i32* %2, align 4
  %10 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %6, align 8
  %11 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %10, i64 0, i32 6, i32 0, i64 0
  store i32 %9, i32* %11, align 4
  %12 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %6, align 8
  %13 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %12, i64 0, i32 0
  %14 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %13, align 8
  %15 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %14(%struct.jpeg_common_struct* %15) #4
  br label %16

16:                                               ; preds = %1, %5
  %17 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 15
  %18 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %17, align 8
  %19 = icmp eq %struct.jpeg_component_info* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %16
  %21 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  br label %30

22:                                               ; preds = %16
  %23 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 1
  %24 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %23, align 8
  %25 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %24, i64 0, i32 0
  %26 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %25, align 8
  %27 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %28 = tail call i8* %26(%struct.jpeg_common_struct* %27, i32 0, i64 960) #4
  %29 = bitcast %struct.jpeg_component_info** %17 to i8**
  store i8* %28, i8** %29, align 8
  br label %30

30:                                               ; preds = %20, %22
  %31 = phi %struct.jpeg_common_struct* [ %21, %20 ], [ %27, %22 ]
  %32 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 12
  store i32 8, i32* %32, align 8
  tail call void @jpeg_set_linear_quality(%struct.jpeg_compress_struct* %0, i32 50, i32 1) #4
  %33 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 4
  %34 = load i32, i32* %33, align 8
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 21, i64 8
  %37 = bitcast i8* %36 to %struct.JHUFF_TBL**
  %38 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 26
  %39 = bitcast i32* %38 to %struct.JHUFF_TBL**
  %40 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 17, i64 0
  %41 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 18, i64 0
  %42 = select i1 %35, %struct.JHUFF_TBL** %40, %struct.JHUFF_TBL** %37
  %43 = select i1 %35, %struct.JHUFF_TBL** %41, %struct.JHUFF_TBL** %39
  tail call fastcc void @add_huff_table(%struct.jpeg_common_struct* %31, %struct.JHUFF_TBL** %42, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @std_huff_tables.bits_dc_luminance, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @std_huff_tables.val_dc_luminance, i64 0, i64 0)) #4
  tail call fastcc void @add_huff_table(%struct.jpeg_common_struct* %31, %struct.JHUFF_TBL** %43, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @std_huff_tables.bits_ac_luminance, i64 0, i64 0), i8* getelementptr inbounds ([162 x i8], [162 x i8]* @std_huff_tables.val_ac_luminance, i64 0, i64 0)) #4
  %44 = getelementptr inbounds %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %42, i64 1
  tail call fastcc void @add_huff_table(%struct.jpeg_common_struct* %31, %struct.JHUFF_TBL** %44, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @std_huff_tables.bits_dc_chrominance, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @std_huff_tables.val_dc_chrominance, i64 0, i64 0)) #4
  %45 = getelementptr inbounds %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %43, i64 1
  tail call fastcc void @add_huff_table(%struct.jpeg_common_struct* %31, %struct.JHUFF_TBL** %45, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @std_huff_tables.bits_ac_chrominance, i64 0, i64 0), i8* getelementptr inbounds ([162 x i8], [162 x i8]* @std_huff_tables.val_ac_chrominance, i64 0, i64 0)) #4
  %46 = getelementptr %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 19, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %46, i8 0, i64 16, i1 false)
  %47 = getelementptr %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 20, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %47, i8 1, i64 16, i1 false)
  %48 = getelementptr %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 21, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %48, i8 5, i64 16, i1 false)
  %49 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 23
  %50 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 22
  store i32 0, i32* %50, align 8
  %51 = bitcast %struct.jpeg_scan_info** %49 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 16, i1 false)
  %52 = load i32, i32* %32, align 8
  %53 = icmp sgt i32 %52, 8
  %54 = zext i1 %53 to i32
  store i32 %54, i32* %38, align 8
  %55 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 27
  %56 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 33
  %57 = bitcast i32* %55 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %57, i8 0, i64 20, i1 false)
  store i8 1, i8* %56, align 4
  %58 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 34
  store i8 1, i8* %58, align 1
  %59 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 35
  store i8 0, i8* %59, align 2
  %60 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 36
  store i16 1, i16* %60, align 8
  %61 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 37
  store i16 1, i16* %61, align 2
  tail call void @jpeg_default_colorspace(%struct.jpeg_compress_struct* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @jpeg_default_colorspace(%struct.jpeg_compress_struct*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 10
  %3 = load i32, i32* %2, align 4
  switch i32 %3, label %237 [
    i32 1, label %4
    i32 2, label %30
    i32 6, label %30
    i32 7, label %30
    i32 8, label %30
    i32 9, label %30
    i32 10, label %30
    i32 11, label %30
    i32 12, label %30
    i32 13, label %30
    i32 14, label %30
    i32 15, label %30
    i32 3, label %66
    i32 4, label %102
    i32 5, label %143
    i32 0, label %184
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 5
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 100
  br i1 %7, label %19, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %10 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %9, align 8
  %11 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %10, i64 0, i32 5
  store i32 20, i32* %11, align 8
  %12 = load i32, i32* %5, align 4
  %13 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %9, align 8
  %14 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %13, i64 0, i32 6, i32 0, i64 0
  store i32 %12, i32* %14, align 4
  %15 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %9, align 8
  %16 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %15, i64 0, i32 0
  %17 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %16, align 8
  %18 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %17(%struct.jpeg_common_struct* %18) #4
  br label %19

19:                                               ; preds = %4, %8
  %20 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 14
  store i32 1, i32* %20, align 8
  %21 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 32
  %22 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 38
  store i32 0, i32* %22, align 4
  store i32 1, i32* %21, align 8
  %23 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 13
  store i32 1, i32* %23, align 4
  %24 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 15
  %25 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %24, align 8
  %26 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %25, i64 0, i32 0
  store i32 1, i32* %26, align 8
  %27 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %25, i64 0, i32 2
  %28 = bitcast i32* %27 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 0, i32 0>, <4 x i32>* %28, align 8
  %29 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %25, i64 0, i32 6
  store i32 0, i32* %29, align 8
  br label %245

30:                                               ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  %31 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 5
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 100
  br i1 %33, label %45, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %36 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %35, align 8
  %37 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %36, i64 0, i32 5
  store i32 20, i32* %37, align 8
  %38 = load i32, i32* %31, align 4
  %39 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %35, align 8
  %40 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %39, i64 0, i32 6, i32 0, i64 0
  store i32 %38, i32* %40, align 4
  %41 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %35, align 8
  %42 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %41, i64 0, i32 0
  %43 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %42, align 8
  %44 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %43(%struct.jpeg_common_struct* %44) #4
  br label %45

45:                                               ; preds = %30, %34
  %46 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 14
  store i32 3, i32* %46, align 8
  %47 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 32
  %48 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 38
  store i32 0, i32* %48, align 4
  store i32 1, i32* %47, align 8
  %49 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 13
  store i32 3, i32* %49, align 4
  %50 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 15
  %51 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %50, align 8
  %52 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %51, i64 0, i32 0
  store i32 1, i32* %52, align 8
  %53 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %51, i64 0, i32 2
  %54 = bitcast i32* %53 to <4 x i32>*
  store <4 x i32> <i32 2, i32 2, i32 0, i32 0>, <4 x i32>* %54, align 8
  %55 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %51, i64 0, i32 6
  store i32 0, i32* %55, align 8
  %56 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %50, align 8
  %57 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %56, i64 1, i32 0
  store i32 2, i32* %57, align 8
  %58 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %56, i64 1, i32 2
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %59, align 8
  %60 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %56, i64 1, i32 6
  store i32 1, i32* %60, align 8
  %61 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %50, align 8
  %62 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %61, i64 2, i32 0
  store i32 3, i32* %62, align 8
  %63 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %61, i64 2, i32 2
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %64, align 8
  %65 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %61, i64 2, i32 6
  store i32 1, i32* %65, align 8
  br label %245

66:                                               ; preds = %1
  %67 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 5
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, 100
  br i1 %69, label %81, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %72 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %71, align 8
  %73 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %72, i64 0, i32 5
  store i32 20, i32* %73, align 8
  %74 = load i32, i32* %67, align 4
  %75 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %71, align 8
  %76 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %75, i64 0, i32 6, i32 0, i64 0
  store i32 %74, i32* %76, align 4
  %77 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %71, align 8
  %78 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %77, i64 0, i32 0
  %79 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %78, align 8
  %80 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %79(%struct.jpeg_common_struct* %80) #4
  br label %81

81:                                               ; preds = %66, %70
  %82 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 14
  store i32 3, i32* %82, align 8
  %83 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 32
  %84 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 38
  store i32 0, i32* %84, align 4
  store i32 1, i32* %83, align 8
  %85 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 13
  store i32 3, i32* %85, align 4
  %86 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 15
  %87 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %86, align 8
  %88 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %87, i64 0, i32 0
  store i32 1, i32* %88, align 8
  %89 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %87, i64 0, i32 2
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> <i32 2, i32 2, i32 0, i32 0>, <4 x i32>* %90, align 8
  %91 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %87, i64 0, i32 6
  store i32 0, i32* %91, align 8
  %92 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %86, align 8
  %93 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %92, i64 1, i32 0
  store i32 2, i32* %93, align 8
  %94 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %92, i64 1, i32 2
  %95 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %95, align 8
  %96 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %92, i64 1, i32 6
  store i32 1, i32* %96, align 8
  %97 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %86, align 8
  %98 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %97, i64 2, i32 0
  store i32 3, i32* %98, align 8
  %99 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %97, i64 2, i32 2
  %100 = bitcast i32* %99 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %100, align 8
  %101 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %97, i64 2, i32 6
  store i32 1, i32* %101, align 8
  br label %245

102:                                              ; preds = %1
  %103 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 5
  %104 = load i32, i32* %103, align 4
  %105 = icmp eq i32 %104, 100
  br i1 %105, label %117, label %106

106:                                              ; preds = %102
  %107 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %108 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %107, align 8
  %109 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %108, i64 0, i32 5
  store i32 20, i32* %109, align 8
  %110 = load i32, i32* %103, align 4
  %111 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %107, align 8
  %112 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %111, i64 0, i32 6, i32 0, i64 0
  store i32 %110, i32* %112, align 4
  %113 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %107, align 8
  %114 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %113, i64 0, i32 0
  %115 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %114, align 8
  %116 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %115(%struct.jpeg_common_struct* %116) #4
  br label %117

117:                                              ; preds = %102, %106
  %118 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 14
  store i32 4, i32* %118, align 8
  %119 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 32
  store i32 0, i32* %119, align 8
  %120 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 38
  store i32 1, i32* %120, align 4
  %121 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 13
  store i32 4, i32* %121, align 4
  %122 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 15
  %123 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %122, align 8
  %124 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %123, i64 0, i32 0
  store i32 67, i32* %124, align 8
  %125 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %123, i64 0, i32 2
  %126 = bitcast i32* %125 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 0, i32 0>, <4 x i32>* %126, align 8
  %127 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %123, i64 0, i32 6
  store i32 0, i32* %127, align 8
  %128 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %122, align 8
  %129 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %128, i64 1, i32 0
  store i32 77, i32* %129, align 8
  %130 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %128, i64 1, i32 2
  %131 = bitcast i32* %130 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 0, i32 0>, <4 x i32>* %131, align 8
  %132 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %128, i64 1, i32 6
  store i32 0, i32* %132, align 8
  %133 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %122, align 8
  %134 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %133, i64 2, i32 0
  store i32 89, i32* %134, align 8
  %135 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %133, i64 2, i32 2
  %136 = bitcast i32* %135 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 0, i32 0>, <4 x i32>* %136, align 8
  %137 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %133, i64 2, i32 6
  store i32 0, i32* %137, align 8
  %138 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %122, align 8
  %139 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %138, i64 3, i32 0
  store i32 75, i32* %139, align 8
  %140 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %138, i64 3, i32 2
  %141 = bitcast i32* %140 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 0, i32 0>, <4 x i32>* %141, align 8
  %142 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %138, i64 3, i32 6
  store i32 0, i32* %142, align 8
  br label %245

143:                                              ; preds = %1
  %144 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 5
  %145 = load i32, i32* %144, align 4
  %146 = icmp eq i32 %145, 100
  br i1 %146, label %158, label %147

147:                                              ; preds = %143
  %148 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %149 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %148, align 8
  %150 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %149, i64 0, i32 5
  store i32 20, i32* %150, align 8
  %151 = load i32, i32* %144, align 4
  %152 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %148, align 8
  %153 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %152, i64 0, i32 6, i32 0, i64 0
  store i32 %151, i32* %153, align 4
  %154 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %148, align 8
  %155 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %154, i64 0, i32 0
  %156 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %155, align 8
  %157 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %156(%struct.jpeg_common_struct* %157) #4
  br label %158

158:                                              ; preds = %143, %147
  %159 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 14
  store i32 5, i32* %159, align 8
  %160 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 32
  store i32 0, i32* %160, align 8
  %161 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 38
  store i32 1, i32* %161, align 4
  %162 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 13
  store i32 4, i32* %162, align 4
  %163 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 15
  %164 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %163, align 8
  %165 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %164, i64 0, i32 0
  store i32 1, i32* %165, align 8
  %166 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %164, i64 0, i32 2
  %167 = bitcast i32* %166 to <4 x i32>*
  store <4 x i32> <i32 2, i32 2, i32 0, i32 0>, <4 x i32>* %167, align 8
  %168 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %164, i64 0, i32 6
  store i32 0, i32* %168, align 8
  %169 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %163, align 8
  %170 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %169, i64 1, i32 0
  store i32 2, i32* %170, align 8
  %171 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %169, i64 1, i32 2
  %172 = bitcast i32* %171 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %172, align 8
  %173 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %169, i64 1, i32 6
  store i32 1, i32* %173, align 8
  %174 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %163, align 8
  %175 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %174, i64 2, i32 0
  store i32 3, i32* %175, align 8
  %176 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %174, i64 2, i32 2
  %177 = bitcast i32* %176 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %177, align 8
  %178 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %174, i64 2, i32 6
  store i32 1, i32* %178, align 8
  %179 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %163, align 8
  %180 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %179, i64 3, i32 0
  store i32 4, i32* %180, align 8
  %181 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %179, i64 3, i32 2
  %182 = bitcast i32* %181 to <4 x i32>*
  store <4 x i32> <i32 2, i32 2, i32 0, i32 0>, <4 x i32>* %182, align 8
  %183 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %179, i64 3, i32 6
  store i32 0, i32* %183, align 8
  br label %245

184:                                              ; preds = %1
  %185 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 5
  %186 = load i32, i32* %185, align 4
  %187 = icmp eq i32 %186, 100
  br i1 %187, label %199, label %188

188:                                              ; preds = %184
  %189 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %190 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %189, align 8
  %191 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %190, i64 0, i32 5
  store i32 20, i32* %191, align 8
  %192 = load i32, i32* %185, align 4
  %193 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %189, align 8
  %194 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %193, i64 0, i32 6, i32 0, i64 0
  store i32 %192, i32* %194, align 4
  %195 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %189, align 8
  %196 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %195, i64 0, i32 0
  %197 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %196, align 8
  %198 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %197(%struct.jpeg_common_struct* %198) #4
  br label %199

199:                                              ; preds = %188, %184
  %200 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 14
  store i32 0, i32* %200, align 8
  %201 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 32
  store i32 0, i32* %201, align 8
  %202 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 38
  store i32 0, i32* %202, align 4
  %203 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 9
  %204 = load i32, i32* %203, align 8
  %205 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 13
  store i32 %204, i32* %205, align 4
  %206 = add i32 %204, -1
  %207 = icmp ugt i32 %206, 9
  br i1 %207, label %208, label %223

208:                                              ; preds = %199
  %209 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %210 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %209, align 8
  %211 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %210, i64 0, i32 5
  store i32 26, i32* %211, align 8
  %212 = load i32, i32* %205, align 4
  %213 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %209, align 8
  %214 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %213, i64 0, i32 6, i32 0, i64 0
  store i32 %212, i32* %214, align 4
  %215 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %209, align 8
  %216 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %215, i64 0, i32 6, i32 0, i64 1
  store i32 10, i32* %216, align 4
  %217 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %209, align 8
  %218 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %217, i64 0, i32 0
  %219 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %218, align 8
  %220 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %219(%struct.jpeg_common_struct* %220) #4
  %221 = load i32, i32* %205, align 4
  %222 = icmp sgt i32 %221, 0
  br i1 %222, label %223, label %245

223:                                              ; preds = %208, %199
  %224 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 15
  br label %225

225:                                              ; preds = %225, %223
  %226 = phi i64 [ 0, %223 ], [ %233, %225 ]
  %227 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %224, align 8
  %228 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %227, i64 %226, i32 0
  %229 = trunc i64 %226 to i32
  store i32 %229, i32* %228, align 8
  %230 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %227, i64 %226, i32 2
  %231 = bitcast i32* %230 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 0, i32 0>, <4 x i32>* %231, align 8
  %232 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %227, i64 %226, i32 6
  store i32 0, i32* %232, align 8
  %233 = add nuw nsw i64 %226, 1
  %234 = load i32, i32* %205, align 4
  %235 = sext i32 %234 to i64
  %236 = icmp slt i64 %233, %235
  br i1 %236, label %225, label %245

237:                                              ; preds = %1
  %238 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %239 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %238, align 8
  %240 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %239, i64 0, i32 5
  store i32 9, i32* %240, align 8
  %241 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %238, align 8
  %242 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %241, i64 0, i32 0
  %243 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %242, align 8
  %244 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %243(%struct.jpeg_common_struct* %244) #4
  br label %245

245:                                              ; preds = %225, %208, %237, %158, %117, %81, %45, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @jpeg_set_colorspace(%struct.jpeg_compress_struct*, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 5
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 100
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %8 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %9 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %8, i64 0, i32 5
  store i32 20, i32* %9, align 8
  %10 = load i32, i32* %3, align 4
  %11 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %12 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %11, i64 0, i32 6, i32 0, i64 0
  store i32 %10, i32* %12, align 4
  %13 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %14 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %13, i64 0, i32 0
  %15 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %14, align 8
  %16 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %15(%struct.jpeg_common_struct* %16) #4
  br label %17

17:                                               ; preds = %2, %6
  %18 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 14
  store i32 %1, i32* %18, align 8
  %19 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 32
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 38
  store i32 0, i32* %20, align 4
  switch i32 %1, label %146 [
    i32 1, label %21
    i32 2, label %29
    i32 3, label %47
    i32 4, label %65
    i32 5, label %88
    i32 0, label %111
  ]

21:                                               ; preds = %17
  store i32 1, i32* %19, align 8
  %22 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 13
  store i32 1, i32* %22, align 4
  %23 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 15
  %24 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %23, align 8
  %25 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %24, i64 0, i32 0
  store i32 1, i32* %25, align 8
  %26 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %24, i64 0, i32 2
  %27 = bitcast i32* %26 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 0, i32 0>, <4 x i32>* %27, align 8
  %28 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %24, i64 0, i32 6
  store i32 0, i32* %28, align 8
  br label %154

29:                                               ; preds = %17
  store i32 1, i32* %20, align 4
  %30 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 13
  store i32 3, i32* %30, align 4
  %31 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 15
  %32 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %31, align 8
  %33 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %32, i64 0, i32 0
  store i32 82, i32* %33, align 8
  %34 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %32, i64 0, i32 2
  %35 = bitcast i32* %34 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 0, i32 0>, <4 x i32>* %35, align 8
  %36 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %32, i64 0, i32 6
  store i32 0, i32* %36, align 8
  %37 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %31, align 8
  %38 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %37, i64 1, i32 0
  store i32 71, i32* %38, align 8
  %39 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %37, i64 1, i32 2
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 0, i32 0>, <4 x i32>* %40, align 8
  %41 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %37, i64 1, i32 6
  store i32 0, i32* %41, align 8
  %42 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %31, align 8
  %43 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %42, i64 2, i32 0
  store i32 66, i32* %43, align 8
  %44 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %42, i64 2, i32 2
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 0, i32 0>, <4 x i32>* %45, align 8
  %46 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %42, i64 2, i32 6
  store i32 0, i32* %46, align 8
  br label %154

47:                                               ; preds = %17
  store i32 1, i32* %19, align 8
  %48 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 13
  store i32 3, i32* %48, align 4
  %49 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 15
  %50 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %49, align 8
  %51 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %50, i64 0, i32 0
  store i32 1, i32* %51, align 8
  %52 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %50, i64 0, i32 2
  %53 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> <i32 2, i32 2, i32 0, i32 0>, <4 x i32>* %53, align 8
  %54 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %50, i64 0, i32 6
  store i32 0, i32* %54, align 8
  %55 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %49, align 8
  %56 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %55, i64 1, i32 0
  store i32 2, i32* %56, align 8
  %57 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %55, i64 1, i32 2
  %58 = bitcast i32* %57 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %58, align 8
  %59 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %55, i64 1, i32 6
  store i32 1, i32* %59, align 8
  %60 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %49, align 8
  %61 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %60, i64 2, i32 0
  store i32 3, i32* %61, align 8
  %62 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %60, i64 2, i32 2
  %63 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %63, align 8
  %64 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %60, i64 2, i32 6
  store i32 1, i32* %64, align 8
  br label %154

65:                                               ; preds = %17
  store i32 1, i32* %20, align 4
  %66 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 13
  store i32 4, i32* %66, align 4
  %67 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 15
  %68 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %67, align 8
  %69 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %68, i64 0, i32 0
  store i32 67, i32* %69, align 8
  %70 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %68, i64 0, i32 2
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 0, i32 0>, <4 x i32>* %71, align 8
  %72 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %68, i64 0, i32 6
  store i32 0, i32* %72, align 8
  %73 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %67, align 8
  %74 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %73, i64 1, i32 0
  store i32 77, i32* %74, align 8
  %75 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %73, i64 1, i32 2
  %76 = bitcast i32* %75 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 0, i32 0>, <4 x i32>* %76, align 8
  %77 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %73, i64 1, i32 6
  store i32 0, i32* %77, align 8
  %78 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %67, align 8
  %79 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %78, i64 2, i32 0
  store i32 89, i32* %79, align 8
  %80 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %78, i64 2, i32 2
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 0, i32 0>, <4 x i32>* %81, align 8
  %82 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %78, i64 2, i32 6
  store i32 0, i32* %82, align 8
  %83 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %67, align 8
  %84 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %83, i64 3, i32 0
  store i32 75, i32* %84, align 8
  %85 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %83, i64 3, i32 2
  %86 = bitcast i32* %85 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 0, i32 0>, <4 x i32>* %86, align 8
  %87 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %83, i64 3, i32 6
  store i32 0, i32* %87, align 8
  br label %154

88:                                               ; preds = %17
  store i32 1, i32* %20, align 4
  %89 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 13
  store i32 4, i32* %89, align 4
  %90 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 15
  %91 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %90, align 8
  %92 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %91, i64 0, i32 0
  store i32 1, i32* %92, align 8
  %93 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %91, i64 0, i32 2
  %94 = bitcast i32* %93 to <4 x i32>*
  store <4 x i32> <i32 2, i32 2, i32 0, i32 0>, <4 x i32>* %94, align 8
  %95 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %91, i64 0, i32 6
  store i32 0, i32* %95, align 8
  %96 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %90, align 8
  %97 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %96, i64 1, i32 0
  store i32 2, i32* %97, align 8
  %98 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %96, i64 1, i32 2
  %99 = bitcast i32* %98 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %99, align 8
  %100 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %96, i64 1, i32 6
  store i32 1, i32* %100, align 8
  %101 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %90, align 8
  %102 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %101, i64 2, i32 0
  store i32 3, i32* %102, align 8
  %103 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %101, i64 2, i32 2
  %104 = bitcast i32* %103 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %104, align 8
  %105 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %101, i64 2, i32 6
  store i32 1, i32* %105, align 8
  %106 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %90, align 8
  %107 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %106, i64 3, i32 0
  store i32 4, i32* %107, align 8
  %108 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %106, i64 3, i32 2
  %109 = bitcast i32* %108 to <4 x i32>*
  store <4 x i32> <i32 2, i32 2, i32 0, i32 0>, <4 x i32>* %109, align 8
  %110 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %106, i64 3, i32 6
  store i32 0, i32* %110, align 8
  br label %154

111:                                              ; preds = %17
  %112 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 9
  %113 = load i32, i32* %112, align 8
  %114 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 13
  store i32 %113, i32* %114, align 4
  %115 = add i32 %113, -1
  %116 = icmp ugt i32 %115, 9
  br i1 %116, label %117, label %132

117:                                              ; preds = %111
  %118 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %119 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %118, align 8
  %120 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %119, i64 0, i32 5
  store i32 26, i32* %120, align 8
  %121 = load i32, i32* %114, align 4
  %122 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %118, align 8
  %123 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %122, i64 0, i32 6, i32 0, i64 0
  store i32 %121, i32* %123, align 4
  %124 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %118, align 8
  %125 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %124, i64 0, i32 6, i32 0, i64 1
  store i32 10, i32* %125, align 4
  %126 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %118, align 8
  %127 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %126, i64 0, i32 0
  %128 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %127, align 8
  %129 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %128(%struct.jpeg_common_struct* %129) #4
  %130 = load i32, i32* %114, align 4
  %131 = icmp sgt i32 %130, 0
  br i1 %131, label %132, label %154

132:                                              ; preds = %111, %117
  %133 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 15
  br label %134

134:                                              ; preds = %132, %134
  %135 = phi i64 [ 0, %132 ], [ %142, %134 ]
  %136 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %133, align 8
  %137 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %136, i64 %135, i32 0
  %138 = trunc i64 %135 to i32
  store i32 %138, i32* %137, align 8
  %139 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %136, i64 %135, i32 2
  %140 = bitcast i32* %139 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 0, i32 0>, <4 x i32>* %140, align 8
  %141 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %136, i64 %135, i32 6
  store i32 0, i32* %141, align 8
  %142 = add nuw nsw i64 %135, 1
  %143 = load i32, i32* %114, align 4
  %144 = sext i32 %143 to i64
  %145 = icmp slt i64 %142, %144
  br i1 %145, label %134, label %154

146:                                              ; preds = %17
  %147 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %148 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %147, align 8
  %149 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %148, i64 0, i32 5
  store i32 10, i32* %149, align 8
  %150 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %147, align 8
  %151 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %150, i64 0, i32 0
  %152 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %151, align 8
  %153 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %152(%struct.jpeg_common_struct* %153) #4
  br label %154

154:                                              ; preds = %134, %117, %146, %88, %65, %47, %29, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @jpeg_simple_progression(%struct.jpeg_compress_struct*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 13
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 5
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 100
  br i1 %6, label %18, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %9 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %8, align 8
  %10 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %9, i64 0, i32 5
  store i32 20, i32* %10, align 8
  %11 = load i32, i32* %4, align 4
  %12 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %8, align 8
  %13 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %12, i64 0, i32 6, i32 0, i64 0
  store i32 %11, i32* %13, align 4
  %14 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %8, align 8
  %15 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %14, i64 0, i32 0
  %16 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %15, align 8
  %17 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %16(%struct.jpeg_common_struct* %17) #4
  br label %18

18:                                               ; preds = %1, %7
  %19 = icmp eq i32 %3, 3
  br i1 %19, label %20, label %24

20:                                               ; preds = %18
  %21 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 14
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 3
  br i1 %23, label %31, label %28

24:                                               ; preds = %18
  %25 = icmp sgt i32 %3, 4
  br i1 %25, label %26, label %28

26:                                               ; preds = %24
  %27 = mul nsw i32 %3, 6
  br label %31

28:                                               ; preds = %20, %24
  %29 = shl nsw i32 %3, 2
  %30 = or i32 %29, 2
  br label %31

31:                                               ; preds = %20, %26, %28
  %32 = phi i32 [ %27, %26 ], [ %30, %28 ], [ 10, %20 ]
  %33 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 63
  %34 = load %struct.jpeg_scan_info*, %struct.jpeg_scan_info** %33, align 8
  %35 = icmp eq %struct.jpeg_scan_info* %34, null
  br i1 %35, label %40, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 64
  %38 = load i32, i32* %37, align 8
  %39 = icmp slt i32 %38, %32
  br i1 %39, label %40, label %54

40:                                               ; preds = %36, %31
  %41 = icmp sgt i32 %32, 10
  %42 = select i1 %41, i32 %32, i32 10
  %43 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 64
  store i32 %42, i32* %43, align 8
  %44 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 1
  %45 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %44, align 8
  %46 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %45, i64 0, i32 0
  %47 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %46, align 8
  %48 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %49 = zext i32 %42 to i64
  %50 = mul nuw nsw i64 %49, 36
  %51 = tail call i8* %47(%struct.jpeg_common_struct* %48, i32 0, i64 %50) #4
  %52 = bitcast %struct.jpeg_scan_info** %33 to i8**
  store i8* %51, i8** %52, align 8
  %53 = bitcast i8* %51 to %struct.jpeg_scan_info*
  br label %54

54:                                               ; preds = %40, %36
  %55 = phi %struct.jpeg_scan_info* [ %53, %40 ], [ %34, %36 ]
  %56 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 23
  store %struct.jpeg_scan_info* %55, %struct.jpeg_scan_info** %56, align 8
  %57 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 22
  store i32 %32, i32* %57, align 8
  br i1 %19, label %58, label %105

58:                                               ; preds = %54
  %59 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 14
  %60 = load i32, i32* %59, align 8
  %61 = icmp eq i32 %60, 3
  %62 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %55, i64 0, i32 0
  store i32 3, i32* %62, align 4
  br i1 %61, label %63, label %116

63:                                               ; preds = %58
  %64 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %55, i64 0, i32 1, i64 0
  store i32 0, i32* %64, align 4
  %65 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %55, i64 0, i32 1, i64 1
  store i32 1, i32* %65, align 4
  %66 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %55, i64 0, i32 1, i64 2
  store i32 2, i32* %66, align 4
  %67 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %55, i64 0, i32 2
  %68 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 0, i32 1>, <4 x i32>* %68, align 4
  %69 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %55, i64 1, i32 0
  store i32 1, i32* %69, align 4
  %70 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %55, i64 1, i32 1, i64 0
  store i32 0, i32* %70, align 4
  %71 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %55, i64 1, i32 2
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 5, i32 0, i32 2>, <4 x i32>* %72, align 4
  %73 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %55, i64 2, i32 0
  store i32 1, i32* %73, align 4
  %74 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %55, i64 2, i32 1, i64 0
  store i32 2, i32* %74, align 4
  %75 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %55, i64 2, i32 2
  store i32 1, i32* %75, align 4
  %76 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %55, i64 2, i32 3
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 63, i32 0, i32 1, i32 1>, <4 x i32>* %77, align 4
  %78 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %55, i64 3, i32 1, i64 0
  store i32 1, i32* %78, align 4
  %79 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %55, i64 3, i32 2
  %80 = bitcast i32* %79 to <4 x i32>*
  store <4 x i32> <i32 1, i32 63, i32 0, i32 1>, <4 x i32>* %80, align 4
  %81 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %55, i64 4, i32 0
  store i32 1, i32* %81, align 4
  %82 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %55, i64 4, i32 1, i64 0
  store i32 0, i32* %82, align 4
  %83 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %55, i64 4, i32 2
  %84 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> <i32 6, i32 63, i32 0, i32 2>, <4 x i32>* %84, align 4
  %85 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %55, i64 5, i32 0
  store i32 1, i32* %85, align 4
  %86 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %55, i64 5, i32 1, i64 0
  store i32 0, i32* %86, align 4
  %87 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %55, i64 5, i32 2
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> <i32 1, i32 63, i32 2, i32 1>, <4 x i32>* %88, align 4
  %89 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %55, i64 6, i32 0
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> <i32 3, i32 0, i32 1, i32 2>, <4 x i32>* %90, align 4
  %91 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %55, i64 6, i32 2
  %92 = bitcast i32* %91 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 1, i32 0>, <4 x i32>* %92, align 4
  %93 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %55, i64 7, i32 0
  store i32 1, i32* %93, align 4
  %94 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %55, i64 7, i32 1, i64 0
  store i32 2, i32* %94, align 4
  %95 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %55, i64 7, i32 2
  store i32 1, i32* %95, align 4
  %96 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %55, i64 7, i32 3
  %97 = bitcast i32* %96 to <4 x i32>*
  store <4 x i32> <i32 63, i32 1, i32 0, i32 1>, <4 x i32>* %97, align 4
  %98 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %55, i64 8, i32 1, i64 0
  store i32 1, i32* %98, align 4
  %99 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %55, i64 8, i32 2
  %100 = bitcast i32* %99 to <4 x i32>*
  store <4 x i32> <i32 1, i32 63, i32 1, i32 0>, <4 x i32>* %100, align 4
  %101 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %55, i64 9, i32 0
  store i32 1, i32* %101, align 4
  %102 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %55, i64 9, i32 1, i64 0
  store i32 0, i32* %102, align 4
  %103 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %55, i64 9, i32 2
  %104 = bitcast i32* %103 to <4 x i32>*
  store <4 x i32> <i32 1, i32 63, i32 1, i32 0>, <4 x i32>* %104, align 4
  br label %575

105:                                              ; preds = %54
  %106 = icmp slt i32 %3, 5
  br i1 %106, label %113, label %107

107:                                              ; preds = %105
  %108 = add i32 %3, -1
  %109 = and i32 %3, 3
  %110 = icmp ult i32 %108, 3
  br i1 %110, label %220, label %111

111:                                              ; preds = %107
  %112 = sub i32 %3, %109
  br label %193

113:                                              ; preds = %105
  %114 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %55, i64 0, i32 0
  store i32 %3, i32* %114, align 4
  %115 = icmp sgt i32 %3, 0
  br i1 %115, label %116, label %189

116:                                              ; preds = %58, %113
  %117 = zext i32 %3 to i64
  %118 = icmp ult i32 %3, 8
  br i1 %118, label %181, label %119

119:                                              ; preds = %116
  %120 = and i64 %117, 4294967288
  %121 = add nsw i64 %120, -8
  %122 = lshr exact i64 %121, 3
  %123 = add nuw nsw i64 %122, 1
  %124 = and i64 %123, 3
  %125 = icmp ult i64 %121, 24
  br i1 %125, label %162, label %126

126:                                              ; preds = %119
  %127 = sub nsw i64 %123, %124
  br label %128

128:                                              ; preds = %128, %126
  %129 = phi i64 [ 0, %126 ], [ %158, %128 ]
  %130 = phi <4 x i32> [ <i32 0, i32 1, i32 2, i32 3>, %126 ], [ %159, %128 ]
  %131 = phi i64 [ %127, %126 ], [ %160, %128 ]
  %132 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %55, i64 0, i32 1, i64 %129
  %133 = add <4 x i32> %130, <i32 4, i32 4, i32 4, i32 4>
  %134 = bitcast i32* %132 to <4 x i32>*
  store <4 x i32> %130, <4 x i32>* %134, align 4
  %135 = getelementptr inbounds i32, i32* %132, i64 4
  %136 = bitcast i32* %135 to <4 x i32>*
  store <4 x i32> %133, <4 x i32>* %136, align 4
  %137 = or i64 %129, 8
  %138 = add <4 x i32> %130, <i32 8, i32 8, i32 8, i32 8>
  %139 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %55, i64 0, i32 1, i64 %137
  %140 = add <4 x i32> %130, <i32 12, i32 12, i32 12, i32 12>
  %141 = bitcast i32* %139 to <4 x i32>*
  store <4 x i32> %138, <4 x i32>* %141, align 4
  %142 = getelementptr inbounds i32, i32* %139, i64 4
  %143 = bitcast i32* %142 to <4 x i32>*
  store <4 x i32> %140, <4 x i32>* %143, align 4
  %144 = or i64 %129, 16
  %145 = add <4 x i32> %130, <i32 16, i32 16, i32 16, i32 16>
  %146 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %55, i64 0, i32 1, i64 %144
  %147 = add <4 x i32> %130, <i32 20, i32 20, i32 20, i32 20>
  %148 = bitcast i32* %146 to <4 x i32>*
  store <4 x i32> %145, <4 x i32>* %148, align 4
  %149 = getelementptr inbounds i32, i32* %146, i64 4
  %150 = bitcast i32* %149 to <4 x i32>*
  store <4 x i32> %147, <4 x i32>* %150, align 4
  %151 = or i64 %129, 24
  %152 = add <4 x i32> %130, <i32 24, i32 24, i32 24, i32 24>
  %153 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %55, i64 0, i32 1, i64 %151
  %154 = add <4 x i32> %130, <i32 28, i32 28, i32 28, i32 28>
  %155 = bitcast i32* %153 to <4 x i32>*
  store <4 x i32> %152, <4 x i32>* %155, align 4
  %156 = getelementptr inbounds i32, i32* %153, i64 4
  %157 = bitcast i32* %156 to <4 x i32>*
  store <4 x i32> %154, <4 x i32>* %157, align 4
  %158 = add i64 %129, 32
  %159 = add <4 x i32> %130, <i32 32, i32 32, i32 32, i32 32>
  %160 = add i64 %131, -4
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %162, label %128, !llvm.loop !2

162:                                              ; preds = %128, %119
  %163 = phi i64 [ 0, %119 ], [ %158, %128 ]
  %164 = phi <4 x i32> [ <i32 0, i32 1, i32 2, i32 3>, %119 ], [ %159, %128 ]
  %165 = icmp eq i64 %124, 0
  br i1 %165, label %179, label %166

166:                                              ; preds = %162, %166
  %167 = phi i64 [ %175, %166 ], [ %163, %162 ]
  %168 = phi <4 x i32> [ %176, %166 ], [ %164, %162 ]
  %169 = phi i64 [ %177, %166 ], [ %124, %162 ]
  %170 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %55, i64 0, i32 1, i64 %167
  %171 = add <4 x i32> %168, <i32 4, i32 4, i32 4, i32 4>
  %172 = bitcast i32* %170 to <4 x i32>*
  store <4 x i32> %168, <4 x i32>* %172, align 4
  %173 = getelementptr inbounds i32, i32* %170, i64 4
  %174 = bitcast i32* %173 to <4 x i32>*
  store <4 x i32> %171, <4 x i32>* %174, align 4
  %175 = add i64 %167, 8
  %176 = add <4 x i32> %168, <i32 8, i32 8, i32 8, i32 8>
  %177 = add i64 %169, -1
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %179, label %166, !llvm.loop !4

179:                                              ; preds = %166, %162
  %180 = icmp eq i64 %120, %117
  br i1 %180, label %189, label %181

181:                                              ; preds = %179, %116
  %182 = phi i64 [ 0, %116 ], [ %120, %179 ]
  br label %183

183:                                              ; preds = %181, %183
  %184 = phi i64 [ %187, %183 ], [ %182, %181 ]
  %185 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %55, i64 0, i32 1, i64 %184
  %186 = trunc i64 %184 to i32
  store i32 %186, i32* %185, align 4
  %187 = add nuw nsw i64 %184, 1
  %188 = icmp eq i64 %187, %117
  br i1 %188, label %189, label %183, !llvm.loop !6

189:                                              ; preds = %183, %179, %113
  %190 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %55, i64 0, i32 2
  %191 = bitcast i32* %190 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 0, i32 1>, <4 x i32>* %191, align 4
  %192 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %55, i64 1
  br label %237

193:                                              ; preds = %193, %111
  %194 = phi i32 [ 0, %111 ], [ %217, %193 ]
  %195 = phi %struct.jpeg_scan_info* [ %55, %111 ], [ %216, %193 ]
  %196 = phi i32 [ %112, %111 ], [ %218, %193 ]
  %197 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %195, i64 0, i32 0
  store i32 1, i32* %197, align 4
  %198 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %195, i64 0, i32 1, i64 0
  store i32 %194, i32* %198, align 4
  %199 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %195, i64 0, i32 2
  %200 = bitcast i32* %199 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 0, i32 1>, <4 x i32>* %200, align 4
  %201 = or i32 %194, 1
  %202 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %195, i64 1, i32 0
  store i32 1, i32* %202, align 4
  %203 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %195, i64 1, i32 1, i64 0
  store i32 %201, i32* %203, align 4
  %204 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %195, i64 1, i32 2
  %205 = bitcast i32* %204 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 0, i32 1>, <4 x i32>* %205, align 4
  %206 = or i32 %194, 2
  %207 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %195, i64 2, i32 0
  store i32 1, i32* %207, align 4
  %208 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %195, i64 2, i32 1, i64 0
  store i32 %206, i32* %208, align 4
  %209 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %195, i64 2, i32 2
  %210 = bitcast i32* %209 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 0, i32 1>, <4 x i32>* %210, align 4
  %211 = or i32 %194, 3
  %212 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %195, i64 3, i32 0
  store i32 1, i32* %212, align 4
  %213 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %195, i64 3, i32 1, i64 0
  store i32 %211, i32* %213, align 4
  %214 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %195, i64 3, i32 2
  %215 = bitcast i32* %214 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 0, i32 1>, <4 x i32>* %215, align 4
  %216 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %195, i64 4
  %217 = add nuw nsw i32 %194, 4
  %218 = add i32 %196, -4
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %220, label %193

220:                                              ; preds = %193, %107
  %221 = phi %struct.jpeg_scan_info* [ undef, %107 ], [ %216, %193 ]
  %222 = phi i32 [ 0, %107 ], [ %217, %193 ]
  %223 = phi %struct.jpeg_scan_info* [ %55, %107 ], [ %216, %193 ]
  %224 = icmp eq i32 %109, 0
  br i1 %224, label %237, label %225

225:                                              ; preds = %220, %225
  %226 = phi i32 [ %234, %225 ], [ %222, %220 ]
  %227 = phi %struct.jpeg_scan_info* [ %233, %225 ], [ %223, %220 ]
  %228 = phi i32 [ %235, %225 ], [ %109, %220 ]
  %229 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %227, i64 0, i32 0
  store i32 1, i32* %229, align 4
  %230 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %227, i64 0, i32 1, i64 0
  store i32 %226, i32* %230, align 4
  %231 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %227, i64 0, i32 2
  %232 = bitcast i32* %231 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 0, i32 1>, <4 x i32>* %232, align 4
  %233 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %227, i64 1
  %234 = add nuw nsw i32 %226, 1
  %235 = add i32 %228, -1
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %237, label %225, !llvm.loop !8

237:                                              ; preds = %220, %225, %189
  %238 = phi i1 [ true, %189 ], [ false, %225 ], [ false, %220 ]
  %239 = phi %struct.jpeg_scan_info* [ %192, %189 ], [ %221, %220 ], [ %233, %225 ]
  %240 = icmp sgt i32 %3, 0
  br i1 %240, label %241, label %393

241:                                              ; preds = %237
  %242 = add i32 %3, -1
  %243 = and i32 %3, 3
  %244 = icmp ult i32 %242, 3
  br i1 %244, label %274, label %245

245:                                              ; preds = %241
  %246 = sub i32 %3, %243
  br label %247

247:                                              ; preds = %247, %245
  %248 = phi i32 [ 0, %245 ], [ %271, %247 ]
  %249 = phi %struct.jpeg_scan_info* [ %239, %245 ], [ %270, %247 ]
  %250 = phi i32 [ %246, %245 ], [ %272, %247 ]
  %251 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %249, i64 0, i32 0
  store i32 1, i32* %251, align 4
  %252 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %249, i64 0, i32 1, i64 0
  store i32 %248, i32* %252, align 4
  %253 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %249, i64 0, i32 2
  %254 = bitcast i32* %253 to <4 x i32>*
  store <4 x i32> <i32 1, i32 5, i32 0, i32 2>, <4 x i32>* %254, align 4
  %255 = or i32 %248, 1
  %256 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %249, i64 1, i32 0
  store i32 1, i32* %256, align 4
  %257 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %249, i64 1, i32 1, i64 0
  store i32 %255, i32* %257, align 4
  %258 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %249, i64 1, i32 2
  %259 = bitcast i32* %258 to <4 x i32>*
  store <4 x i32> <i32 1, i32 5, i32 0, i32 2>, <4 x i32>* %259, align 4
  %260 = or i32 %248, 2
  %261 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %249, i64 2, i32 0
  store i32 1, i32* %261, align 4
  %262 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %249, i64 2, i32 1, i64 0
  store i32 %260, i32* %262, align 4
  %263 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %249, i64 2, i32 2
  %264 = bitcast i32* %263 to <4 x i32>*
  store <4 x i32> <i32 1, i32 5, i32 0, i32 2>, <4 x i32>* %264, align 4
  %265 = or i32 %248, 3
  %266 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %249, i64 3, i32 0
  store i32 1, i32* %266, align 4
  %267 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %249, i64 3, i32 1, i64 0
  store i32 %265, i32* %267, align 4
  %268 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %249, i64 3, i32 2
  %269 = bitcast i32* %268 to <4 x i32>*
  store <4 x i32> <i32 1, i32 5, i32 0, i32 2>, <4 x i32>* %269, align 4
  %270 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %249, i64 4
  %271 = add nuw nsw i32 %248, 4
  %272 = add i32 %250, -4
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %274, label %247

274:                                              ; preds = %247, %241
  %275 = phi %struct.jpeg_scan_info* [ undef, %241 ], [ %270, %247 ]
  %276 = phi i32 [ 0, %241 ], [ %271, %247 ]
  %277 = phi %struct.jpeg_scan_info* [ %239, %241 ], [ %270, %247 ]
  %278 = icmp eq i32 %243, 0
  br i1 %278, label %291, label %279

279:                                              ; preds = %274, %279
  %280 = phi i32 [ %288, %279 ], [ %276, %274 ]
  %281 = phi %struct.jpeg_scan_info* [ %287, %279 ], [ %277, %274 ]
  %282 = phi i32 [ %289, %279 ], [ %243, %274 ]
  %283 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %281, i64 0, i32 0
  store i32 1, i32* %283, align 4
  %284 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %281, i64 0, i32 1, i64 0
  store i32 %280, i32* %284, align 4
  %285 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %281, i64 0, i32 2
  %286 = bitcast i32* %285 to <4 x i32>*
  store <4 x i32> <i32 1, i32 5, i32 0, i32 2>, <4 x i32>* %286, align 4
  %287 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %281, i64 1
  %288 = add nuw nsw i32 %280, 1
  %289 = add i32 %282, -1
  %290 = icmp eq i32 %289, 0
  br i1 %290, label %291, label %279, !llvm.loop !9

291:                                              ; preds = %279, %274
  %292 = phi %struct.jpeg_scan_info* [ %275, %274 ], [ %287, %279 ]
  %293 = add i32 %3, -1
  %294 = and i32 %3, 3
  %295 = icmp ult i32 %293, 3
  br i1 %295, label %325, label %296

296:                                              ; preds = %291
  %297 = sub i32 %3, %294
  br label %298

298:                                              ; preds = %298, %296
  %299 = phi i32 [ 0, %296 ], [ %322, %298 ]
  %300 = phi %struct.jpeg_scan_info* [ %292, %296 ], [ %321, %298 ]
  %301 = phi i32 [ %297, %296 ], [ %323, %298 ]
  %302 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %300, i64 0, i32 0
  store i32 1, i32* %302, align 4
  %303 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %300, i64 0, i32 1, i64 0
  store i32 %299, i32* %303, align 4
  %304 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %300, i64 0, i32 2
  %305 = bitcast i32* %304 to <4 x i32>*
  store <4 x i32> <i32 6, i32 63, i32 0, i32 2>, <4 x i32>* %305, align 4
  %306 = or i32 %299, 1
  %307 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %300, i64 1, i32 0
  store i32 1, i32* %307, align 4
  %308 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %300, i64 1, i32 1, i64 0
  store i32 %306, i32* %308, align 4
  %309 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %300, i64 1, i32 2
  %310 = bitcast i32* %309 to <4 x i32>*
  store <4 x i32> <i32 6, i32 63, i32 0, i32 2>, <4 x i32>* %310, align 4
  %311 = or i32 %299, 2
  %312 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %300, i64 2, i32 0
  store i32 1, i32* %312, align 4
  %313 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %300, i64 2, i32 1, i64 0
  store i32 %311, i32* %313, align 4
  %314 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %300, i64 2, i32 2
  %315 = bitcast i32* %314 to <4 x i32>*
  store <4 x i32> <i32 6, i32 63, i32 0, i32 2>, <4 x i32>* %315, align 4
  %316 = or i32 %299, 3
  %317 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %300, i64 3, i32 0
  store i32 1, i32* %317, align 4
  %318 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %300, i64 3, i32 1, i64 0
  store i32 %316, i32* %318, align 4
  %319 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %300, i64 3, i32 2
  %320 = bitcast i32* %319 to <4 x i32>*
  store <4 x i32> <i32 6, i32 63, i32 0, i32 2>, <4 x i32>* %320, align 4
  %321 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %300, i64 4
  %322 = add nuw nsw i32 %299, 4
  %323 = add i32 %301, -4
  %324 = icmp eq i32 %323, 0
  br i1 %324, label %325, label %298

325:                                              ; preds = %298, %291
  %326 = phi %struct.jpeg_scan_info* [ undef, %291 ], [ %321, %298 ]
  %327 = phi i32 [ 0, %291 ], [ %322, %298 ]
  %328 = phi %struct.jpeg_scan_info* [ %292, %291 ], [ %321, %298 ]
  %329 = icmp eq i32 %294, 0
  br i1 %329, label %342, label %330

330:                                              ; preds = %325, %330
  %331 = phi i32 [ %339, %330 ], [ %327, %325 ]
  %332 = phi %struct.jpeg_scan_info* [ %338, %330 ], [ %328, %325 ]
  %333 = phi i32 [ %340, %330 ], [ %294, %325 ]
  %334 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %332, i64 0, i32 0
  store i32 1, i32* %334, align 4
  %335 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %332, i64 0, i32 1, i64 0
  store i32 %331, i32* %335, align 4
  %336 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %332, i64 0, i32 2
  %337 = bitcast i32* %336 to <4 x i32>*
  store <4 x i32> <i32 6, i32 63, i32 0, i32 2>, <4 x i32>* %337, align 4
  %338 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %332, i64 1
  %339 = add nuw nsw i32 %331, 1
  %340 = add i32 %333, -1
  %341 = icmp eq i32 %340, 0
  br i1 %341, label %342, label %330, !llvm.loop !10

342:                                              ; preds = %330, %325
  %343 = phi %struct.jpeg_scan_info* [ %326, %325 ], [ %338, %330 ]
  %344 = add i32 %3, -1
  %345 = and i32 %3, 3
  %346 = icmp ult i32 %344, 3
  br i1 %346, label %376, label %347

347:                                              ; preds = %342
  %348 = sub i32 %3, %345
  br label %349

349:                                              ; preds = %349, %347
  %350 = phi i32 [ 0, %347 ], [ %373, %349 ]
  %351 = phi %struct.jpeg_scan_info* [ %343, %347 ], [ %372, %349 ]
  %352 = phi i32 [ %348, %347 ], [ %374, %349 ]
  %353 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %351, i64 0, i32 0
  store i32 1, i32* %353, align 4
  %354 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %351, i64 0, i32 1, i64 0
  store i32 %350, i32* %354, align 4
  %355 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %351, i64 0, i32 2
  %356 = bitcast i32* %355 to <4 x i32>*
  store <4 x i32> <i32 1, i32 63, i32 2, i32 1>, <4 x i32>* %356, align 4
  %357 = or i32 %350, 1
  %358 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %351, i64 1, i32 0
  store i32 1, i32* %358, align 4
  %359 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %351, i64 1, i32 1, i64 0
  store i32 %357, i32* %359, align 4
  %360 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %351, i64 1, i32 2
  %361 = bitcast i32* %360 to <4 x i32>*
  store <4 x i32> <i32 1, i32 63, i32 2, i32 1>, <4 x i32>* %361, align 4
  %362 = or i32 %350, 2
  %363 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %351, i64 2, i32 0
  store i32 1, i32* %363, align 4
  %364 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %351, i64 2, i32 1, i64 0
  store i32 %362, i32* %364, align 4
  %365 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %351, i64 2, i32 2
  %366 = bitcast i32* %365 to <4 x i32>*
  store <4 x i32> <i32 1, i32 63, i32 2, i32 1>, <4 x i32>* %366, align 4
  %367 = or i32 %350, 3
  %368 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %351, i64 3, i32 0
  store i32 1, i32* %368, align 4
  %369 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %351, i64 3, i32 1, i64 0
  store i32 %367, i32* %369, align 4
  %370 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %351, i64 3, i32 2
  %371 = bitcast i32* %370 to <4 x i32>*
  store <4 x i32> <i32 1, i32 63, i32 2, i32 1>, <4 x i32>* %371, align 4
  %372 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %351, i64 4
  %373 = add nuw nsw i32 %350, 4
  %374 = add i32 %352, -4
  %375 = icmp eq i32 %374, 0
  br i1 %375, label %376, label %349

376:                                              ; preds = %349, %342
  %377 = phi %struct.jpeg_scan_info* [ undef, %342 ], [ %372, %349 ]
  %378 = phi i32 [ 0, %342 ], [ %373, %349 ]
  %379 = phi %struct.jpeg_scan_info* [ %343, %342 ], [ %372, %349 ]
  %380 = icmp eq i32 %345, 0
  br i1 %380, label %393, label %381

381:                                              ; preds = %376, %381
  %382 = phi i32 [ %390, %381 ], [ %378, %376 ]
  %383 = phi %struct.jpeg_scan_info* [ %389, %381 ], [ %379, %376 ]
  %384 = phi i32 [ %391, %381 ], [ %345, %376 ]
  %385 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %383, i64 0, i32 0
  store i32 1, i32* %385, align 4
  %386 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %383, i64 0, i32 1, i64 0
  store i32 %382, i32* %386, align 4
  %387 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %383, i64 0, i32 2
  %388 = bitcast i32* %387 to <4 x i32>*
  store <4 x i32> <i32 1, i32 63, i32 2, i32 1>, <4 x i32>* %388, align 4
  %389 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %383, i64 1
  %390 = add nuw nsw i32 %382, 1
  %391 = add i32 %384, -1
  %392 = icmp eq i32 %391, 0
  br i1 %392, label %393, label %381, !llvm.loop !11

393:                                              ; preds = %376, %381, %237
  %394 = phi %struct.jpeg_scan_info* [ %239, %237 ], [ %377, %376 ], [ %389, %381 ]
  br i1 %238, label %401, label %395

395:                                              ; preds = %393
  %396 = add i32 %3, -1
  %397 = and i32 %3, 3
  %398 = icmp ult i32 %396, 3
  br i1 %398, label %507, label %399

399:                                              ; preds = %395
  %400 = sub i32 %3, %397
  br label %480

401:                                              ; preds = %393
  %402 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %394, i64 0, i32 0
  store i32 %3, i32* %402, align 4
  br i1 %240, label %403, label %476

403:                                              ; preds = %401
  %404 = zext i32 %3 to i64
  %405 = icmp ult i32 %3, 8
  br i1 %405, label %468, label %406

406:                                              ; preds = %403
  %407 = and i64 %404, 4294967288
  %408 = add nsw i64 %407, -8
  %409 = lshr exact i64 %408, 3
  %410 = add nuw nsw i64 %409, 1
  %411 = and i64 %410, 3
  %412 = icmp ult i64 %408, 24
  br i1 %412, label %449, label %413

413:                                              ; preds = %406
  %414 = sub nsw i64 %410, %411
  br label %415

415:                                              ; preds = %415, %413
  %416 = phi i64 [ 0, %413 ], [ %445, %415 ]
  %417 = phi <4 x i32> [ <i32 0, i32 1, i32 2, i32 3>, %413 ], [ %446, %415 ]
  %418 = phi i64 [ %414, %413 ], [ %447, %415 ]
  %419 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %394, i64 0, i32 1, i64 %416
  %420 = add <4 x i32> %417, <i32 4, i32 4, i32 4, i32 4>
  %421 = bitcast i32* %419 to <4 x i32>*
  store <4 x i32> %417, <4 x i32>* %421, align 4
  %422 = getelementptr inbounds i32, i32* %419, i64 4
  %423 = bitcast i32* %422 to <4 x i32>*
  store <4 x i32> %420, <4 x i32>* %423, align 4
  %424 = or i64 %416, 8
  %425 = add <4 x i32> %417, <i32 8, i32 8, i32 8, i32 8>
  %426 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %394, i64 0, i32 1, i64 %424
  %427 = add <4 x i32> %417, <i32 12, i32 12, i32 12, i32 12>
  %428 = bitcast i32* %426 to <4 x i32>*
  store <4 x i32> %425, <4 x i32>* %428, align 4
  %429 = getelementptr inbounds i32, i32* %426, i64 4
  %430 = bitcast i32* %429 to <4 x i32>*
  store <4 x i32> %427, <4 x i32>* %430, align 4
  %431 = or i64 %416, 16
  %432 = add <4 x i32> %417, <i32 16, i32 16, i32 16, i32 16>
  %433 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %394, i64 0, i32 1, i64 %431
  %434 = add <4 x i32> %417, <i32 20, i32 20, i32 20, i32 20>
  %435 = bitcast i32* %433 to <4 x i32>*
  store <4 x i32> %432, <4 x i32>* %435, align 4
  %436 = getelementptr inbounds i32, i32* %433, i64 4
  %437 = bitcast i32* %436 to <4 x i32>*
  store <4 x i32> %434, <4 x i32>* %437, align 4
  %438 = or i64 %416, 24
  %439 = add <4 x i32> %417, <i32 24, i32 24, i32 24, i32 24>
  %440 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %394, i64 0, i32 1, i64 %438
  %441 = add <4 x i32> %417, <i32 28, i32 28, i32 28, i32 28>
  %442 = bitcast i32* %440 to <4 x i32>*
  store <4 x i32> %439, <4 x i32>* %442, align 4
  %443 = getelementptr inbounds i32, i32* %440, i64 4
  %444 = bitcast i32* %443 to <4 x i32>*
  store <4 x i32> %441, <4 x i32>* %444, align 4
  %445 = add i64 %416, 32
  %446 = add <4 x i32> %417, <i32 32, i32 32, i32 32, i32 32>
  %447 = add i64 %418, -4
  %448 = icmp eq i64 %447, 0
  br i1 %448, label %449, label %415, !llvm.loop !12

449:                                              ; preds = %415, %406
  %450 = phi i64 [ 0, %406 ], [ %445, %415 ]
  %451 = phi <4 x i32> [ <i32 0, i32 1, i32 2, i32 3>, %406 ], [ %446, %415 ]
  %452 = icmp eq i64 %411, 0
  br i1 %452, label %466, label %453

453:                                              ; preds = %449, %453
  %454 = phi i64 [ %462, %453 ], [ %450, %449 ]
  %455 = phi <4 x i32> [ %463, %453 ], [ %451, %449 ]
  %456 = phi i64 [ %464, %453 ], [ %411, %449 ]
  %457 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %394, i64 0, i32 1, i64 %454
  %458 = add <4 x i32> %455, <i32 4, i32 4, i32 4, i32 4>
  %459 = bitcast i32* %457 to <4 x i32>*
  store <4 x i32> %455, <4 x i32>* %459, align 4
  %460 = getelementptr inbounds i32, i32* %457, i64 4
  %461 = bitcast i32* %460 to <4 x i32>*
  store <4 x i32> %458, <4 x i32>* %461, align 4
  %462 = add i64 %454, 8
  %463 = add <4 x i32> %455, <i32 8, i32 8, i32 8, i32 8>
  %464 = add i64 %456, -1
  %465 = icmp eq i64 %464, 0
  br i1 %465, label %466, label %453, !llvm.loop !13

466:                                              ; preds = %453, %449
  %467 = icmp eq i64 %407, %404
  br i1 %467, label %476, label %468

468:                                              ; preds = %466, %403
  %469 = phi i64 [ 0, %403 ], [ %407, %466 ]
  br label %470

470:                                              ; preds = %468, %470
  %471 = phi i64 [ %474, %470 ], [ %469, %468 ]
  %472 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %394, i64 0, i32 1, i64 %471
  %473 = trunc i64 %471 to i32
  store i32 %473, i32* %472, align 4
  %474 = add nuw nsw i64 %471, 1
  %475 = icmp eq i64 %474, %404
  br i1 %475, label %476, label %470, !llvm.loop !14

476:                                              ; preds = %470, %466, %401
  %477 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %394, i64 0, i32 2
  %478 = bitcast i32* %477 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 1, i32 0>, <4 x i32>* %478, align 4
  %479 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %394, i64 1
  br label %524

480:                                              ; preds = %480, %399
  %481 = phi i32 [ 0, %399 ], [ %504, %480 ]
  %482 = phi %struct.jpeg_scan_info* [ %394, %399 ], [ %503, %480 ]
  %483 = phi i32 [ %400, %399 ], [ %505, %480 ]
  %484 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %482, i64 0, i32 0
  store i32 1, i32* %484, align 4
  %485 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %482, i64 0, i32 1, i64 0
  store i32 %481, i32* %485, align 4
  %486 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %482, i64 0, i32 2
  %487 = bitcast i32* %486 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 1, i32 0>, <4 x i32>* %487, align 4
  %488 = or i32 %481, 1
  %489 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %482, i64 1, i32 0
  store i32 1, i32* %489, align 4
  %490 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %482, i64 1, i32 1, i64 0
  store i32 %488, i32* %490, align 4
  %491 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %482, i64 1, i32 2
  %492 = bitcast i32* %491 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 1, i32 0>, <4 x i32>* %492, align 4
  %493 = or i32 %481, 2
  %494 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %482, i64 2, i32 0
  store i32 1, i32* %494, align 4
  %495 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %482, i64 2, i32 1, i64 0
  store i32 %493, i32* %495, align 4
  %496 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %482, i64 2, i32 2
  %497 = bitcast i32* %496 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 1, i32 0>, <4 x i32>* %497, align 4
  %498 = or i32 %481, 3
  %499 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %482, i64 3, i32 0
  store i32 1, i32* %499, align 4
  %500 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %482, i64 3, i32 1, i64 0
  store i32 %498, i32* %500, align 4
  %501 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %482, i64 3, i32 2
  %502 = bitcast i32* %501 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 1, i32 0>, <4 x i32>* %502, align 4
  %503 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %482, i64 4
  %504 = add nuw nsw i32 %481, 4
  %505 = add i32 %483, -4
  %506 = icmp eq i32 %505, 0
  br i1 %506, label %507, label %480

507:                                              ; preds = %480, %395
  %508 = phi %struct.jpeg_scan_info* [ undef, %395 ], [ %503, %480 ]
  %509 = phi i32 [ 0, %395 ], [ %504, %480 ]
  %510 = phi %struct.jpeg_scan_info* [ %394, %395 ], [ %503, %480 ]
  %511 = icmp eq i32 %397, 0
  br i1 %511, label %524, label %512

512:                                              ; preds = %507, %512
  %513 = phi i32 [ %521, %512 ], [ %509, %507 ]
  %514 = phi %struct.jpeg_scan_info* [ %520, %512 ], [ %510, %507 ]
  %515 = phi i32 [ %522, %512 ], [ %397, %507 ]
  %516 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %514, i64 0, i32 0
  store i32 1, i32* %516, align 4
  %517 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %514, i64 0, i32 1, i64 0
  store i32 %513, i32* %517, align 4
  %518 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %514, i64 0, i32 2
  %519 = bitcast i32* %518 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 1, i32 0>, <4 x i32>* %519, align 4
  %520 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %514, i64 1
  %521 = add nuw nsw i32 %513, 1
  %522 = add i32 %515, -1
  %523 = icmp eq i32 %522, 0
  br i1 %523, label %524, label %512, !llvm.loop !15

524:                                              ; preds = %507, %512, %476
  %525 = phi %struct.jpeg_scan_info* [ %479, %476 ], [ %508, %507 ], [ %520, %512 ]
  br i1 %240, label %526, label %575

526:                                              ; preds = %524
  %527 = add i32 %3, -1
  %528 = and i32 %3, 3
  %529 = icmp ult i32 %527, 3
  br i1 %529, label %559, label %530

530:                                              ; preds = %526
  %531 = sub i32 %3, %528
  br label %532

532:                                              ; preds = %532, %530
  %533 = phi i32 [ 0, %530 ], [ %556, %532 ]
  %534 = phi %struct.jpeg_scan_info* [ %525, %530 ], [ %555, %532 ]
  %535 = phi i32 [ %531, %530 ], [ %557, %532 ]
  %536 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %534, i64 0, i32 0
  store i32 1, i32* %536, align 4
  %537 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %534, i64 0, i32 1, i64 0
  store i32 %533, i32* %537, align 4
  %538 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %534, i64 0, i32 2
  %539 = bitcast i32* %538 to <4 x i32>*
  store <4 x i32> <i32 1, i32 63, i32 1, i32 0>, <4 x i32>* %539, align 4
  %540 = or i32 %533, 1
  %541 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %534, i64 1, i32 0
  store i32 1, i32* %541, align 4
  %542 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %534, i64 1, i32 1, i64 0
  store i32 %540, i32* %542, align 4
  %543 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %534, i64 1, i32 2
  %544 = bitcast i32* %543 to <4 x i32>*
  store <4 x i32> <i32 1, i32 63, i32 1, i32 0>, <4 x i32>* %544, align 4
  %545 = or i32 %533, 2
  %546 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %534, i64 2, i32 0
  store i32 1, i32* %546, align 4
  %547 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %534, i64 2, i32 1, i64 0
  store i32 %545, i32* %547, align 4
  %548 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %534, i64 2, i32 2
  %549 = bitcast i32* %548 to <4 x i32>*
  store <4 x i32> <i32 1, i32 63, i32 1, i32 0>, <4 x i32>* %549, align 4
  %550 = or i32 %533, 3
  %551 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %534, i64 3, i32 0
  store i32 1, i32* %551, align 4
  %552 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %534, i64 3, i32 1, i64 0
  store i32 %550, i32* %552, align 4
  %553 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %534, i64 3, i32 2
  %554 = bitcast i32* %553 to <4 x i32>*
  store <4 x i32> <i32 1, i32 63, i32 1, i32 0>, <4 x i32>* %554, align 4
  %555 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %534, i64 4
  %556 = add nuw nsw i32 %533, 4
  %557 = add i32 %535, -4
  %558 = icmp eq i32 %557, 0
  br i1 %558, label %559, label %532

559:                                              ; preds = %532, %526
  %560 = phi i32 [ 0, %526 ], [ %556, %532 ]
  %561 = phi %struct.jpeg_scan_info* [ %525, %526 ], [ %555, %532 ]
  %562 = icmp eq i32 %528, 0
  br i1 %562, label %575, label %563

563:                                              ; preds = %559, %563
  %564 = phi i32 [ %572, %563 ], [ %560, %559 ]
  %565 = phi %struct.jpeg_scan_info* [ %571, %563 ], [ %561, %559 ]
  %566 = phi i32 [ %573, %563 ], [ %528, %559 ]
  %567 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %565, i64 0, i32 0
  store i32 1, i32* %567, align 4
  %568 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %565, i64 0, i32 1, i64 0
  store i32 %564, i32* %568, align 4
  %569 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %565, i64 0, i32 2
  %570 = bitcast i32* %569 to <4 x i32>*
  store <4 x i32> <i32 1, i32 63, i32 1, i32 0>, <4 x i32>* %570, align 4
  %571 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %565, i64 1
  %572 = add nuw nsw i32 %564, 1
  %573 = add i32 %566, -1
  %574 = icmp eq i32 %573, 0
  br i1 %574, label %575, label %563, !llvm.loop !16

575:                                              ; preds = %559, %563, %524, %63
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @add_huff_table(%struct.jpeg_common_struct*, %struct.JHUFF_TBL** nocapture, i8* nocapture readonly, i8* nocapture readonly) unnamed_addr #0 {
  %5 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %1, align 8
  %6 = icmp eq %struct.JHUFF_TBL* %5, null
  br i1 %6, label %7, label %42

7:                                                ; preds = %4
  %8 = tail call %struct.JHUFF_TBL* @jpeg_alloc_huff_table(%struct.jpeg_common_struct* %0) #4
  store %struct.JHUFF_TBL* %8, %struct.JHUFF_TBL** %1, align 8
  %9 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %8, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 1 %2, i64 17, i1 false)
  %10 = getelementptr inbounds i8, i8* %2, i64 1
  %11 = bitcast i8* %10 to <16 x i8>*
  %12 = load <16 x i8>, <16 x i8>* %11, align 1
  %13 = zext <16 x i8> %12 to <16 x i32>
  %14 = shufflevector <16 x i32> %13, <16 x i32> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %15 = add nuw nsw <16 x i32> %14, %13
  %16 = shufflevector <16 x i32> %15, <16 x i32> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %17 = add nuw nsw <16 x i32> %15, %16
  %18 = shufflevector <16 x i32> %17, <16 x i32> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %19 = add nuw nsw <16 x i32> %17, %18
  %20 = shufflevector <16 x i32> %19, <16 x i32> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %21 = add nuw nsw <16 x i32> %19, %20
  %22 = extractelement <16 x i32> %21, i32 0
  %23 = add nsw i32 %22, -1
  %24 = icmp ugt i32 %23, 255
  br i1 %24, label %25, label %32

25:                                               ; preds = %7
  %26 = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %0, i64 0, i32 0
  %27 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %26, align 8
  %28 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %27, i64 0, i32 5
  store i32 8, i32* %28, align 8
  %29 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %26, align 8
  %30 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %29, i64 0, i32 0
  %31 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %30, align 8
  tail call void %31(%struct.jpeg_common_struct* %0) #4
  br label %32

32:                                               ; preds = %7, %25
  %33 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %1, align 8
  %34 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %33, i64 0, i32 1, i64 0
  %35 = zext i32 %22 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %34, i8* align 1 %3, i64 %35, i1 false)
  %36 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %1, align 8
  %37 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %36, i64 0, i32 1, i64 %35
  %38 = sub nsw i32 256, %22
  %39 = sext i32 %38 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %37, i8 0, i64 %39, i1 false)
  %40 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %1, align 8
  %41 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %40, i64 0, i32 2
  store i32 0, i32* %41, align 4
  br label %42

42:                                               ; preds = %4, %32
  ret void
}

declare %struct.JHUFF_TBL* @jpeg_alloc_huff_table(%struct.jpeg_common_struct*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
!6 = distinct !{!6, !7, !3}
!7 = !{!"llvm.loop.unroll.runtime.disable"}
!8 = distinct !{!8, !5}
!9 = distinct !{!9, !5}
!10 = distinct !{!10, !5}
!11 = distinct !{!11, !5}
!12 = distinct !{!12, !3}
!13 = distinct !{!13, !5}
!14 = distinct !{!14, !7, !3}
!15 = distinct !{!15, !5}
!16 = distinct !{!16, !5}
