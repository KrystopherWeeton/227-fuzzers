; ModuleID = '../../third_party/libaom/source/libaom/third_party/fastfeat/nonmax.c'
source_filename = "../../third_party/libaom/source/libaom/third_party/fastfeat/nonmax.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.xy = type { i32, i32 }

; Function Attrs: nounwind ssp uwtable
define hidden noalias %struct.xy* @aom_nonmax_suppression(%struct.xy* nocapture readonly, i32* nocapture readonly, i32, i32* nocapture) local_unnamed_addr #0 {
  %5 = icmp slt i32 %2, 1
  br i1 %5, label %259, label %6

6:                                                ; preds = %4
  %7 = sext i32 %2 to i64
  %8 = shl nsw i64 %7, 3
  %9 = tail call noalias i8* @malloc(i64 %8) #4
  %10 = bitcast i8* %9 to %struct.xy*
  %11 = add nsw i32 %2, -1
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds %struct.xy, %struct.xy* %0, i64 %12, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = add i32 %14, 1
  %16 = sext i32 %15 to i64
  %17 = shl nsw i64 %16, 2
  %18 = tail call noalias i8* @malloc(i64 %17) #4
  %19 = bitcast i8* %18 to i32*
  %20 = icmp slt i32 %14, 0
  br i1 %20, label %25, label %21

21:                                               ; preds = %6
  %22 = zext i32 %14 to i64
  %23 = shl nuw nsw i64 %22, 2
  %24 = add nuw nsw i64 %23, 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %18, i8 -1, i64 %24, i1 false)
  br label %25

25:                                               ; preds = %6, %21
  %26 = zext i32 %2 to i64
  %27 = and i64 %26, 1
  %28 = icmp eq i32 %2, 1
  br i1 %28, label %31, label %29

29:                                               ; preds = %25
  %30 = sub nsw i64 %26, %27
  br label %45

31:                                               ; preds = %266, %25
  %32 = phi i64 [ 0, %25 ], [ %268, %266 ]
  %33 = phi i32 [ -1, %25 ], [ %267, %266 ]
  %34 = icmp eq i64 %27, 0
  br i1 %34, label %43, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %struct.xy, %struct.xy* %0, i64 %32, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, %33
  br i1 %38, label %43, label %39

39:                                               ; preds = %35
  %40 = sext i32 %37 to i64
  %41 = getelementptr inbounds i32, i32* %19, i64 %40
  %42 = trunc i64 %32 to i32
  store i32 %42, i32* %41, align 4
  br label %43

43:                                               ; preds = %39, %35, %31
  %44 = zext i32 %2 to i64
  br label %62

45:                                               ; preds = %266, %29
  %46 = phi i64 [ 0, %29 ], [ %268, %266 ]
  %47 = phi i32 [ -1, %29 ], [ %267, %266 ]
  %48 = phi i64 [ %30, %29 ], [ %269, %266 ]
  %49 = getelementptr inbounds %struct.xy, %struct.xy* %0, i64 %46, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, %47
  br i1 %51, label %56, label %52

52:                                               ; preds = %45
  %53 = sext i32 %50 to i64
  %54 = getelementptr inbounds i32, i32* %19, i64 %53
  %55 = trunc i64 %46 to i32
  store i32 %55, i32* %54, align 4
  br label %56

56:                                               ; preds = %45, %52
  %57 = phi i32 [ %50, %52 ], [ %47, %45 ]
  %58 = or i64 %46, 1
  %59 = getelementptr inbounds %struct.xy, %struct.xy* %0, i64 %58, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, %57
  br i1 %61, label %266, label %262

62:                                               ; preds = %252, %43
  %63 = phi i64 [ 0, %43 ], [ %256, %252 ]
  %64 = phi i32 [ 0, %43 ], [ %255, %252 ]
  %65 = phi i32 [ 0, %43 ], [ %254, %252 ]
  %66 = phi i32 [ 0, %43 ], [ %253, %252 ]
  %67 = getelementptr inbounds i32, i32* %1, i64 %63
  %68 = load i32, i32* %67, align 4
  %69 = getelementptr inbounds %struct.xy, %struct.xy* %0, i64 %63
  %70 = getelementptr inbounds %struct.xy, %struct.xy* %69, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = getelementptr inbounds %struct.xy, %struct.xy* %0, i64 %63, i32 1
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i64 %63, 0
  br i1 %74, label %89, label %75

75:                                               ; preds = %62
  %76 = add nsw i64 %63, -1
  %77 = getelementptr inbounds %struct.xy, %struct.xy* %0, i64 %76, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = add nsw i32 %71, -1
  %80 = icmp eq i32 %78, %79
  br i1 %80, label %81, label %89

81:                                               ; preds = %75
  %82 = getelementptr inbounds %struct.xy, %struct.xy* %0, i64 %76, i32 1
  %83 = load i32, i32* %82, align 4
  %84 = icmp eq i32 %83, %73
  br i1 %84, label %85, label %89

85:                                               ; preds = %81
  %86 = getelementptr inbounds i32, i32* %1, i64 %76
  %87 = load i32, i32* %86, align 4
  %88 = icmp slt i32 %87, %68
  br i1 %88, label %89, label %252

89:                                               ; preds = %85, %62, %75, %81
  %90 = icmp slt i64 %63, %12
  br i1 %90, label %91, label %105

91:                                               ; preds = %89
  %92 = add nuw nsw i64 %63, 1
  %93 = getelementptr inbounds %struct.xy, %struct.xy* %0, i64 %92, i32 0
  %94 = load i32, i32* %93, align 4
  %95 = add nsw i32 %71, 1
  %96 = icmp eq i32 %94, %95
  br i1 %96, label %97, label %105

97:                                               ; preds = %91
  %98 = getelementptr inbounds %struct.xy, %struct.xy* %0, i64 %92, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = icmp eq i32 %99, %73
  br i1 %100, label %101, label %105

101:                                              ; preds = %97
  %102 = getelementptr inbounds i32, i32* %1, i64 %92
  %103 = load i32, i32* %102, align 4
  %104 = icmp slt i32 %103, %68
  br i1 %104, label %105, label %252

105:                                              ; preds = %101, %91, %97, %89
  %106 = icmp sgt i32 %73, 0
  br i1 %106, label %107, label %172

107:                                              ; preds = %105
  %108 = add nsw i32 %73, -1
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds i32, i32* %19, i64 %109
  %111 = load i32, i32* %110, align 4
  %112 = icmp eq i32 %111, -1
  br i1 %112, label %172, label %113

113:                                              ; preds = %107
  %114 = sext i32 %65 to i64
  %115 = getelementptr inbounds %struct.xy, %struct.xy* %0, i64 %114, i32 1
  %116 = load i32, i32* %115, align 4
  %117 = icmp slt i32 %116, %108
  %118 = select i1 %117, i32 %111, i32 %65
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds %struct.xy, %struct.xy* %0, i64 %119, i32 1
  %121 = load i32, i32* %120, align 4
  %122 = icmp slt i32 %121, %73
  br i1 %122, label %123, label %144

123:                                              ; preds = %113
  %124 = add nsw i32 %71, -1
  br label %125

125:                                              ; preds = %123, %131
  %126 = phi i64 [ %119, %123 ], [ %132, %131 ]
  %127 = phi i32 [ %118, %123 ], [ %133, %131 ]
  %128 = getelementptr inbounds %struct.xy, %struct.xy* %0, i64 %126, i32 0
  %129 = load i32, i32* %128, align 4
  %130 = icmp slt i32 %129, %124
  br i1 %130, label %131, label %137

131:                                              ; preds = %125
  %132 = add i64 %126, 1
  %133 = add nsw i32 %127, 1
  %134 = getelementptr inbounds %struct.xy, %struct.xy* %0, i64 %132, i32 1
  %135 = load i32, i32* %134, align 4
  %136 = icmp slt i32 %135, %73
  br i1 %136, label %125, label %139

137:                                              ; preds = %125
  %138 = trunc i64 %126 to i32
  br label %139

139:                                              ; preds = %131, %137
  %140 = phi i32 [ %138, %137 ], [ %133, %131 ]
  %141 = sext i32 %140 to i64
  %142 = getelementptr inbounds %struct.xy, %struct.xy* %0, i64 %141, i32 1
  %143 = load i32, i32* %142, align 4
  br label %144

144:                                              ; preds = %139, %113
  %145 = phi i32 [ %143, %139 ], [ %121, %113 ]
  %146 = phi i64 [ %141, %139 ], [ %119, %113 ]
  %147 = phi i32 [ %140, %139 ], [ %118, %113 ]
  %148 = icmp slt i32 %145, %73
  br i1 %148, label %149, label %172

149:                                              ; preds = %144
  %150 = add nsw i32 %71, 1
  %151 = add nsw i32 %71, -1
  br label %152

152:                                              ; preds = %149, %167
  %153 = phi i64 [ %146, %149 ], [ %168, %167 ]
  %154 = getelementptr inbounds %struct.xy, %struct.xy* %0, i64 %153, i32 0
  %155 = load i32, i32* %154, align 4
  %156 = icmp sgt i32 %155, %150
  br i1 %156, label %172, label %157

157:                                              ; preds = %152
  %158 = icmp eq i32 %155, %151
  %159 = icmp eq i32 %155, %71
  %160 = or i1 %158, %159
  %161 = icmp eq i32 %155, %150
  %162 = or i1 %161, %160
  br i1 %162, label %163, label %167

163:                                              ; preds = %157
  %164 = getelementptr inbounds i32, i32* %1, i64 %153
  %165 = load i32, i32* %164, align 4
  %166 = icmp slt i32 %165, %68
  br i1 %166, label %167, label %252

167:                                              ; preds = %163, %157
  %168 = add i64 %153, 1
  %169 = getelementptr inbounds %struct.xy, %struct.xy* %0, i64 %168, i32 1
  %170 = load i32, i32* %169, align 4
  %171 = icmp slt i32 %170, %73
  br i1 %171, label %152, label %172

172:                                              ; preds = %167, %152, %144, %107, %105
  %173 = phi i32 [ %65, %107 ], [ %65, %105 ], [ %147, %144 ], [ %147, %152 ], [ %147, %167 ]
  %174 = icmp slt i32 %73, 0
  %175 = icmp eq i32 %73, %14
  %176 = or i1 %174, %175
  br i1 %176, label %244, label %177

177:                                              ; preds = %172
  %178 = add nuw nsw i32 %73, 1
  %179 = sext i32 %178 to i64
  %180 = getelementptr inbounds i32, i32* %19, i64 %179
  %181 = load i32, i32* %180, align 4
  %182 = icmp ne i32 %181, -1
  %183 = icmp slt i32 %64, %2
  %184 = and i1 %183, %182
  br i1 %184, label %185, label %244

185:                                              ; preds = %177
  %186 = sext i32 %64 to i64
  %187 = getelementptr inbounds %struct.xy, %struct.xy* %0, i64 %186, i32 1
  %188 = load i32, i32* %187, align 4
  %189 = icmp sgt i32 %188, %73
  %190 = select i1 %189, i32 %64, i32 %181
  %191 = icmp slt i32 %190, %2
  br i1 %191, label %192, label %214

192:                                              ; preds = %185
  %193 = add nsw i32 %71, -1
  %194 = sext i32 %190 to i64
  br label %195

195:                                              ; preds = %205, %192
  %196 = phi i64 [ %194, %192 ], [ %206, %205 ]
  %197 = phi i32 [ %190, %192 ], [ %207, %205 ]
  %198 = getelementptr inbounds %struct.xy, %struct.xy* %0, i64 %196, i32 1
  %199 = load i32, i32* %198, align 4
  %200 = icmp eq i32 %199, %178
  br i1 %200, label %201, label %210

201:                                              ; preds = %195
  %202 = getelementptr inbounds %struct.xy, %struct.xy* %0, i64 %196, i32 0
  %203 = load i32, i32* %202, align 4
  %204 = icmp slt i32 %203, %193
  br i1 %204, label %205, label %212

205:                                              ; preds = %201
  %206 = add nsw i64 %196, 1
  %207 = add nsw i32 %197, 1
  %208 = trunc i64 %206 to i32
  %209 = icmp eq i32 %208, %2
  br i1 %209, label %214, label %195

210:                                              ; preds = %195
  %211 = trunc i64 %196 to i32
  br label %214

212:                                              ; preds = %201
  %213 = trunc i64 %196 to i32
  br label %214

214:                                              ; preds = %205, %210, %212, %185
  %215 = phi i32 [ %190, %185 ], [ %211, %210 ], [ %213, %212 ], [ %207, %205 ]
  %216 = icmp slt i32 %215, %2
  br i1 %216, label %217, label %244

217:                                              ; preds = %214
  %218 = add nsw i32 %71, 1
  %219 = add nsw i32 %71, -1
  %220 = sext i32 %215 to i64
  br label %221

221:                                              ; preds = %240, %217
  %222 = phi i64 [ %220, %217 ], [ %241, %240 ]
  %223 = getelementptr inbounds %struct.xy, %struct.xy* %0, i64 %222, i32 1
  %224 = load i32, i32* %223, align 4
  %225 = icmp eq i32 %224, %178
  br i1 %225, label %226, label %244

226:                                              ; preds = %221
  %227 = getelementptr inbounds %struct.xy, %struct.xy* %0, i64 %222, i32 0
  %228 = load i32, i32* %227, align 4
  %229 = icmp sgt i32 %228, %218
  br i1 %229, label %244, label %230

230:                                              ; preds = %226
  %231 = icmp eq i32 %228, %219
  %232 = icmp eq i32 %228, %71
  %233 = or i1 %231, %232
  %234 = icmp eq i32 %228, %218
  %235 = or i1 %234, %233
  br i1 %235, label %236, label %240

236:                                              ; preds = %230
  %237 = getelementptr inbounds i32, i32* %1, i64 %222
  %238 = load i32, i32* %237, align 4
  %239 = icmp slt i32 %238, %68
  br i1 %239, label %240, label %252

240:                                              ; preds = %236, %230
  %241 = add nsw i64 %222, 1
  %242 = trunc i64 %241 to i32
  %243 = icmp eq i32 %242, %2
  br i1 %243, label %244, label %221

244:                                              ; preds = %221, %226, %240, %214, %177, %172
  %245 = phi i32 [ %64, %177 ], [ %64, %172 ], [ %215, %214 ], [ %215, %240 ], [ %215, %226 ], [ %215, %221 ]
  %246 = add nsw i32 %66, 1
  %247 = sext i32 %66 to i64
  %248 = getelementptr inbounds %struct.xy, %struct.xy* %10, i64 %247
  %249 = bitcast %struct.xy* %69 to i64*
  %250 = bitcast %struct.xy* %248 to i64*
  %251 = load i64, i64* %249, align 4
  store i64 %251, i64* %250, align 4
  br label %252

252:                                              ; preds = %163, %236, %244, %101, %85
  %253 = phi i32 [ %66, %85 ], [ %66, %101 ], [ %246, %244 ], [ %66, %236 ], [ %66, %163 ]
  %254 = phi i32 [ %65, %85 ], [ %65, %101 ], [ %173, %244 ], [ %173, %236 ], [ %147, %163 ]
  %255 = phi i32 [ %64, %85 ], [ %64, %101 ], [ %245, %244 ], [ %215, %236 ], [ %64, %163 ]
  %256 = add nuw nsw i64 %63, 1
  %257 = icmp eq i64 %256, %44
  br i1 %257, label %258, label %62

258:                                              ; preds = %252
  tail call void @free(i8* %18) #4
  br label %259

259:                                              ; preds = %4, %258
  %260 = phi i32 [ %253, %258 ], [ 0, %4 ]
  %261 = phi %struct.xy* [ %10, %258 ], [ null, %4 ]
  store i32 %260, i32* %3, align 4
  ret %struct.xy* %261

262:                                              ; preds = %56
  %263 = sext i32 %60 to i64
  %264 = getelementptr inbounds i32, i32* %19, i64 %263
  %265 = trunc i64 %58 to i32
  store i32 %265, i32* %264, align 4
  br label %266

266:                                              ; preds = %262, %56
  %267 = phi i32 [ %60, %262 ], [ %57, %56 ]
  %268 = add nuw nsw i64 %46, 2
  %269 = add i64 %48, -2
  %270 = icmp eq i64 %269, 0
  br i1 %270, label %31, label %45
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
