; ModuleID = '../../third_party/pdfium/core/fxcodec/bmp/bmp_progressive_decoder.cpp'
source_filename = "../../third_party/pdfium/core/fxcodec/bmp/bmp_progressive_decoder.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.pdfium::base::NoDestructor" = type { [8 x i8] }
%"class.fxcodec::BmpProgressiveDecoder" = type { %"class.fxcodec::ProgressiveDecoderIface" }
%"class.fxcodec::ProgressiveDecoderIface" = type { i32 (...)** }
%"class.fxcodec::ProgressiveDecoderIface::Context" = type { i32 (...)** }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.CFX_CodecMemory* }
%class.CFX_CodecMemory = type { %"class.fxcrt::Retainable", %"class.std::__1::unique_ptr.0", i64, i64 }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i8* }
%"class.fxcodec::CFX_DIBAttribute" = type opaque

@_ZZN7fxcodec21BmpProgressiveDecoder11GetInstanceEvE1s = internal global %"class.pdfium::base::NoDestructor" zeroinitializer, align 8
@_ZGVZN7fxcodec21BmpProgressiveDecoder11GetInstanceEvE1s = internal global i64 0, align 8
@_ZTVN7fxcodec21BmpProgressiveDecoderE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.fxcodec::BmpProgressiveDecoder"*)* @_ZN7fxcodec21BmpProgressiveDecoderD2Ev to i8*), i8* bitcast (void (%"class.fxcodec::BmpProgressiveDecoder"*)* @_ZN7fxcodec21BmpProgressiveDecoderD0Ev to i8*), i8* bitcast (i64 (%"class.fxcodec::BmpProgressiveDecoder"*, %"class.fxcodec::ProgressiveDecoderIface::Context"*)* @_ZNK7fxcodec21BmpProgressiveDecoder13GetAvailInputEPNS_23ProgressiveDecoderIface7ContextE to i8*), i8* bitcast (i1 (%"class.fxcodec::BmpProgressiveDecoder"*, %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcrt::RetainPtr"*, %"class.fxcodec::CFX_DIBAttribute"*)* @_ZN7fxcodec21BmpProgressiveDecoder5InputEPNS_23ProgressiveDecoderIface7ContextEN5fxcrt9RetainPtrI15CFX_CodecMemoryEEPNS_16CFX_DIBAttributeE to i8*)] }, align 8

@_ZN7fxcodec21BmpProgressiveDecoderC1Ev = hidden unnamed_addr alias void (%"class.fxcodec::BmpProgressiveDecoder"*), void (%"class.fxcodec::BmpProgressiveDecoder"*)* @_ZN7fxcodec21BmpProgressiveDecoderC2Ev
@_ZN7fxcodec21BmpProgressiveDecoderD1Ev = hidden unnamed_addr alias void (%"class.fxcodec::BmpProgressiveDecoder"*), void (%"class.fxcodec::BmpProgressiveDecoder"*)* @_ZN7fxcodec21BmpProgressiveDecoderD2Ev

; Function Attrs: nofree nounwind ssp uwtable
define hidden %"class.fxcodec::BmpProgressiveDecoder"* @_ZN7fxcodec21BmpProgressiveDecoder11GetInstanceEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN7fxcodec21BmpProgressiveDecoder11GetInstanceEvE1s to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %7, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN7fxcodec21BmpProgressiveDecoder11GetInstanceEvE1s) #7
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN7fxcodec21BmpProgressiveDecoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** bitcast (%"class.pdfium::base::NoDestructor"* @_ZZN7fxcodec21BmpProgressiveDecoder11GetInstanceEvE1s to i32 (...)***), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN7fxcodec21BmpProgressiveDecoder11GetInstanceEvE1s) #7
  br label %7

7:                                                ; preds = %3, %6, %0
  ret %"class.fxcodec::BmpProgressiveDecoder"* bitcast (%"class.pdfium::base::NoDestructor"* @_ZZN7fxcodec21BmpProgressiveDecoder11GetInstanceEvE1s to %"class.fxcodec::BmpProgressiveDecoder"*)
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7fxcodec21BmpProgressiveDecoderC2Ev(%"class.fxcodec::BmpProgressiveDecoder"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.fxcodec::BmpProgressiveDecoder", %"class.fxcodec::BmpProgressiveDecoder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN7fxcodec21BmpProgressiveDecoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7fxcodec21BmpProgressiveDecoderD2Ev(%"class.fxcodec::BmpProgressiveDecoder"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7fxcodec21BmpProgressiveDecoderD0Ev(%"class.fxcodec::BmpProgressiveDecoder"*) unnamed_addr #4 align 2 {
  %2 = bitcast %"class.fxcodec::BmpProgressiveDecoder"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK7fxcodec21BmpProgressiveDecoder13GetAvailInputEPNS_23ProgressiveDecoderIface7ContextE(%"class.fxcodec::BmpProgressiveDecoder"* nocapture readnone, %"class.fxcodec::ProgressiveDecoderIface::Context"*) unnamed_addr #4 align 2 {
  %3 = tail call i64 @_ZN7fxcodec10BmpDecoder13GetAvailInputEPNS_23ProgressiveDecoderIface7ContextE(%"class.fxcodec::ProgressiveDecoderIface::Context"* %1) #7
  ret i64 %3
}

declare i64 @_ZN7fxcodec10BmpDecoder13GetAvailInputEPNS_23ProgressiveDecoderIface7ContextE(%"class.fxcodec::ProgressiveDecoderIface::Context"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7fxcodec21BmpProgressiveDecoder5InputEPNS_23ProgressiveDecoderIface7ContextEN5fxcrt9RetainPtrI15CFX_CodecMemoryEEPNS_16CFX_DIBAttributeE(%"class.fxcodec::BmpProgressiveDecoder"* nocapture readnone, %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcrt::RetainPtr"* nocapture readonly, %"class.fxcodec::CFX_DIBAttribute"*) unnamed_addr #4 align 2 {
  %5 = alloca %"class.fxcrt::RetainPtr", align 8
  %6 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %class.CFX_CodecMemory*, %class.CFX_CodecMemory** %6, align 8
  %8 = ptrtoint %class.CFX_CodecMemory* %7 to i64
  %9 = bitcast %"class.fxcrt::RetainPtr"* %5 to i64*
  store i64 %8, i64* %9, align 8
  %10 = icmp eq %class.CFX_CodecMemory* %7, null
  br i1 %10, label %15, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %class.CFX_CodecMemory, %class.CFX_CodecMemory* %7, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = add nsw i64 %13, 1
  store i64 %14, i64* %12, align 8
  br label %15

15:                                               ; preds = %4, %11
  %16 = call zeroext i1 @_ZN7fxcodec10BmpDecoder5InputEPNS_23ProgressiveDecoderIface7ContextEN5fxcrt9RetainPtrI15CFX_CodecMemoryEEPNS_16CFX_DIBAttributeE(%"class.fxcodec::ProgressiveDecoderIface::Context"* %1, %"class.fxcrt::RetainPtr"* nonnull %5, %"class.fxcodec::CFX_DIBAttribute"* %3) #7
  %17 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = load %class.CFX_CodecMemory*, %class.CFX_CodecMemory** %17, align 8
  store %class.CFX_CodecMemory* null, %class.CFX_CodecMemory** %17, align 8
  %19 = icmp eq %class.CFX_CodecMemory* %18, null
  br i1 %19, label %31, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %class.CFX_CodecMemory, %class.CFX_CodecMemory* %18, i64 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = add nsw i64 %22, -1
  store i64 %23, i64* %21, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %25, label %31

25:                                               ; preds = %20
  %26 = getelementptr inbounds %class.CFX_CodecMemory, %class.CFX_CodecMemory* %18, i64 0, i32 0
  %27 = bitcast %class.CFX_CodecMemory* %18 to void (%"class.fxcrt::Retainable"*)***
  %28 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %28, i64 1
  %30 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %29, align 8
  call void %30(%"class.fxcrt::Retainable"* nonnull %26) #7
  br label %31

31:                                               ; preds = %15, %20, %25
  ret i1 %16
}

declare zeroext i1 @_ZN7fxcodec10BmpDecoder5InputEPNS_23ProgressiveDecoderIface7ContextEN5fxcrt9RetainPtrI15CFX_CodecMemoryEEPNS_16CFX_DIBAttributeE(%"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcrt::RetainPtr"*, %"class.fxcodec::CFX_DIBAttribute"*) local_unnamed_addr #6

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
