; ModuleID = '../../third_party/blink/common/frame/frame_ad_evidence.cc'
source_filename = "../../third_party/blink/common/frame/frame_ad_evidence.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }

@_ZN5blink15FrameAdEvidenceC1Eb = hidden unnamed_addr alias void (%"class.blink::FrameAdEvidence"*, i1), void (%"class.blink::FrameAdEvidence"*, i1)* @_ZN5blink15FrameAdEvidenceC2Eb
@_ZN5blink15FrameAdEvidenceC1ERKS0_ = hidden unnamed_addr alias void (%"class.blink::FrameAdEvidence"*, %"class.blink::FrameAdEvidence"*), void (%"class.blink::FrameAdEvidence"*, %"class.blink::FrameAdEvidence"*)* @_ZN5blink15FrameAdEvidenceC2ERKS0_
@_ZN5blink15FrameAdEvidenceD1Ev = hidden unnamed_addr alias void (%"class.blink::FrameAdEvidence"*), void (%"class.blink::FrameAdEvidence"*)* @_ZN5blink15FrameAdEvidenceD2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5blink33MoreRestrictiveFilterListEvidenceENS_5mojom16FilterListResultES1_(i32, i32) local_unnamed_addr #0 {
  %3 = icmp slt i32 %0, %1
  %4 = select i1 %3, i32 %1, i32 %0
  ret i32 %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink15FrameAdEvidenceC2Eb(%"class.blink::FrameAdEvidence"* nocapture, i1 zeroext) unnamed_addr #1 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.blink::FrameAdEvidence", %"class.blink::FrameAdEvidence"* %0, i64 0, i32 0
  store i8 0, i8* %4, align 4
  %5 = getelementptr inbounds %"class.blink::FrameAdEvidence", %"class.blink::FrameAdEvidence"* %0, i64 0, i32 1
  store i8 %3, i8* %5, align 1
  %6 = getelementptr inbounds %"class.blink::FrameAdEvidence", %"class.blink::FrameAdEvidence"* %0, i64 0, i32 2
  store i32 0, i32* %6, align 4
  %7 = getelementptr inbounds %"class.blink::FrameAdEvidence", %"class.blink::FrameAdEvidence"* %0, i64 0, i32 3
  store i32 0, i32* %7, align 4
  %8 = getelementptr inbounds %"class.blink::FrameAdEvidence", %"class.blink::FrameAdEvidence"* %0, i64 0, i32 4
  store i32 0, i32* %8, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15FrameAdEvidenceC2ERKS0_(%"class.blink::FrameAdEvidence"* nocapture, %"class.blink::FrameAdEvidence"* nocapture readonly dereferenceable(16)) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::FrameAdEvidence", %"class.blink::FrameAdEvidence"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::FrameAdEvidence", %"class.blink::FrameAdEvidence"* %1, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 16, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink15FrameAdEvidenceD2Ev(%"class.blink::FrameAdEvidence"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink15FrameAdEvidence19IndicatesAdSubframeEv(%"class.blink::FrameAdEvidence"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::FrameAdEvidence", %"class.blink::FrameAdEvidence"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 1, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %13

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::FrameAdEvidence", %"class.blink::FrameAdEvidence"* %0, i64 0, i32 4
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %13, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::FrameAdEvidence", %"class.blink::FrameAdEvidence"* %0, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 3
  br label %13

13:                                               ; preds = %1, %9, %5
  %14 = phi i1 [ true, %5 ], [ true, %1 ], [ %12, %9 ]
  ret i1 %14
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink15FrameAdEvidence22UpdateFilterListResultENS_5mojom16FilterListResultE(%"class.blink::FrameAdEvidence"* nocapture, i32) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.blink::FrameAdEvidence", %"class.blink::FrameAdEvidence"* %0, i64 0, i32 2
  store i32 %1, i32* %3, align 4
  %4 = getelementptr inbounds %"class.blink::FrameAdEvidence", %"class.blink::FrameAdEvidence"* %0, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = icmp slt i32 %5, %1
  %7 = select i1 %6, i32 %1, i32 %5
  store i32 %7, i32* %4, align 4
  ret void
}

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
