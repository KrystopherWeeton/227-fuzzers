; ModuleID = '../../third_party/blink/renderer/modules/canvas/htmlcanvas/canvas_context_creation_attributes_helpers.cc'
source_filename = "../../third_party/blink/renderer/modules/canvas/htmlcanvas/canvas_context_creation_attributes_helpers.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::CanvasContextCreationAttributesModule" = type <{ %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8], %"class.WTF::String", %"class.WTF::String", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::CanvasContextCreationAttributesCore" = type <{ i32 (...)**, i8, i8, [6 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8], %"class.WTF::String", i8, i8, [6 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8] }>
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.v8::Isolate" = type { i8 }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink33ToCanvasContextCreationAttributesEPKNS_37CanvasContextCreationAttributesModuleERNS_35CanvasContextCreationAttributesCoreERNS_14ExceptionStateE(%"class.blink::CanvasContextCreationAttributesModule"*, %"class.blink::CanvasContextCreationAttributesCore"* nocapture dereferenceable(64), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %0, i64 0, i32 14
  %5 = tail call zeroext i1 @_ZN5blink21ColorSpaceNameIsValidERKN3WTF6StringERNS_14ExceptionStateE(%"class.WTF::String"* dereferenceable(8) %4, %"class.blink::ExceptionState"* dereferenceable(72) %2) #4
  br i1 %5, label %6, label %160

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %0, i64 0, i32 11
  %8 = load i8, i8* %7, align 2, !range !2
  %9 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesCore", %"class.blink::CanvasContextCreationAttributesCore"* %1, i64 0, i32 1
  store i8 %8, i8* %9, align 8
  %10 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %0, i64 0, i32 12
  %11 = load i8, i8* %10, align 1, !range !2
  %12 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesCore", %"class.blink::CanvasContextCreationAttributesCore"* %1, i64 0, i32 2
  store i8 %11, i8* %12, align 1
  %13 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesCore", %"class.blink::CanvasContextCreationAttributesCore"* %1, i64 0, i32 4
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %34, label %17

17:                                               ; preds = %6
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %34

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i33
  %26 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %25, i33 1) #4
  %27 = extractvalue { i33, i1 } %26, 1
  %28 = extractvalue { i33, i1 } %26, 0
  %29 = icmp slt i33 %28, 0
  %30 = or i1 %27, %29
  br i1 %30, label %31, label %32, !prof !3

31:                                               ; preds = %22
  tail call void @llvm.trap() #4
  unreachable

32:                                               ; preds = %22
  %33 = trunc i33 %28 to i32
  store i32 %33, i32* %23, align 4
  br label %34

34:                                               ; preds = %32, %17, %6
  %35 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %36 = bitcast %"class.WTF::String"* %13 to i64*
  %37 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  store i64 %35, i64* %36, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #4
  br label %53

53:                                               ; preds = %34, %49, %52
  %54 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %0, i64 0, i32 15
  %55 = load i8, i8* %54, align 8, !range !2
  %56 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesCore", %"class.blink::CanvasContextCreationAttributesCore"* %1, i64 0, i32 5
  store i8 %55, i8* %56, align 8
  %57 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %0, i64 0, i32 17
  %58 = load i8, i8* %57, align 2, !range !2
  %59 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesCore", %"class.blink::CanvasContextCreationAttributesCore"* %1, i64 0, i32 6
  store i8 %58, i8* %59, align 1
  %60 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %0, i64 0, i32 16
  %61 = load i8, i8* %60, align 1, !range !2
  %62 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesCore", %"class.blink::CanvasContextCreationAttributesCore"* %1, i64 0, i32 7
  store i8 %61, i8* %62, align 2
  %63 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesCore", %"class.blink::CanvasContextCreationAttributesCore"* %1, i64 0, i32 9
  %64 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %0, i64 0, i32 19, i32 0, i32 0
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %66, label %84, label %67

67:                                               ; preds = %53
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  %75 = zext i32 %74 to i33
  %76 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %75, i33 1) #4
  %77 = extractvalue { i33, i1 } %76, 1
  %78 = extractvalue { i33, i1 } %76, 0
  %79 = icmp slt i33 %78, 0
  %80 = or i1 %77, %79
  br i1 %80, label %81, label %82, !prof !3

81:                                               ; preds = %72
  tail call void @llvm.trap() #4
  unreachable

82:                                               ; preds = %72
  %83 = trunc i33 %78 to i32
  store i32 %83, i32* %73, align 4
  br label %84

84:                                               ; preds = %82, %67, %53
  %85 = ptrtoint %"class.WTF::StringImpl"* %65 to i64
  %86 = bitcast %"class.WTF::String"* %63 to i64*
  %87 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %63, i64 0, i32 0, i32 0
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %87, align 8
  store i64 %85, i64* %86, align 8
  %89 = icmp eq %"class.WTF::StringImpl"* %88, null
  br i1 %89, label %103, label %90

90:                                               ; preds = %84
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  br i1 %94, label %97, label %99

97:                                               ; preds = %90
  %98 = add i32 %96, -1
  store i32 %98, i32* %95, align 4
  br label %99

99:                                               ; preds = %97, %90
  %100 = phi i32 [ %98, %97 ], [ %96, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %99
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %88) #4
  br label %103

103:                                              ; preds = %84, %99, %102
  %104 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %0, i64 0, i32 21
  %105 = load i8, i8* %104, align 8, !range !2
  %106 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesCore", %"class.blink::CanvasContextCreationAttributesCore"* %1, i64 0, i32 10
  store i8 %105, i8* %106, align 8
  %107 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %0, i64 0, i32 22
  %108 = load i8, i8* %107, align 1, !range !2
  %109 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesCore", %"class.blink::CanvasContextCreationAttributesCore"* %1, i64 0, i32 11
  store i8 %108, i8* %109, align 1
  %110 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesCore", %"class.blink::CanvasContextCreationAttributesCore"* %1, i64 0, i32 13
  %111 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %0, i64 0, i32 20, i32 0, i32 0
  %112 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %111, align 8
  %113 = icmp eq %"class.WTF::StringImpl"* %112, null
  br i1 %113, label %131, label %114

114:                                              ; preds = %103
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load atomic i32, i32* %115 monotonic, align 4
  %117 = and i32 %116, 2
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %131

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  %122 = zext i32 %121 to i33
  %123 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %122, i33 1) #4
  %124 = extractvalue { i33, i1 } %123, 1
  %125 = extractvalue { i33, i1 } %123, 0
  %126 = icmp slt i33 %125, 0
  %127 = or i1 %124, %126
  br i1 %127, label %128, label %129, !prof !3

128:                                              ; preds = %119
  tail call void @llvm.trap() #4
  unreachable

129:                                              ; preds = %119
  %130 = trunc i33 %125 to i32
  store i32 %130, i32* %120, align 4
  br label %131

131:                                              ; preds = %129, %114, %103
  %132 = ptrtoint %"class.WTF::StringImpl"* %112 to i64
  %133 = bitcast %"class.WTF::String"* %110 to i64*
  %134 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %110, i64 0, i32 0, i32 0
  %135 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %134, align 8
  store i64 %132, i64* %133, align 8
  %136 = icmp eq %"class.WTF::StringImpl"* %135, null
  br i1 %136, label %150, label %137

137:                                              ; preds = %131
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = load atomic i32, i32* %138 monotonic, align 4
  %140 = and i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 0
  %143 = load i32, i32* %142, align 4
  br i1 %141, label %144, label %146

144:                                              ; preds = %137
  %145 = add i32 %143, -1
  store i32 %145, i32* %142, align 4
  br label %146

146:                                              ; preds = %144, %137
  %147 = phi i32 [ %145, %144 ], [ %143, %137 ]
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %150

149:                                              ; preds = %146
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %135) #4
  br label %150

150:                                              ; preds = %131, %146, %149
  %151 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %0, i64 0, i32 23
  %152 = load i8, i8* %151, align 2, !range !2
  %153 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesCore", %"class.blink::CanvasContextCreationAttributesCore"* %1, i64 0, i32 14
  store i8 %152, i8* %153, align 8
  %154 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %0, i64 0, i32 24
  %155 = load i8, i8* %154, align 1, !range !2
  %156 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesCore", %"class.blink::CanvasContextCreationAttributesCore"* %1, i64 0, i32 15
  store i8 %155, i8* %156, align 1
  %157 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %0, i64 0, i32 25
  %158 = load i8, i8* %157, align 4, !range !2
  %159 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesCore", %"class.blink::CanvasContextCreationAttributesCore"* %1, i64 0, i32 16
  store i8 %158, i8* %159, align 2
  br label %160

160:                                              ; preds = %3, %150
  %161 = phi i1 [ true, %150 ], [ false, %3 ]
  ret i1 %161
}

declare zeroext i1 @_ZN5blink21ColorSpaceNameIsValidERKN3WTF6StringERNS_14ExceptionStateE(%"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone speculatable }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
