; ModuleID = '../../net/third_party/quiche/src/quic/core/qpack/qpack_blocking_manager.cc'
source_filename = "../../net/third_party/quiche/src/quic/core/qpack/qpack_blocking_manager.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.quic::QpackBlockingManager" = type { %"class.absl::flat_hash_map", %"class.std::__1::map", i64 }
%"class.absl::flat_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"union.absl::container_internal::map_slot_type"*, i64, i64, %"class.absl::container_internal::CompressedTuple" }
%"union.absl::container_internal::map_slot_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.18" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { i64 }
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage" = type { i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::multiset" }
%"class.std::__1::multiset" = type { %"class.std::__1::__tree.11" }
%"class.std::__1::__tree.11" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.12", %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", i64 }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.std::__1::__tree_node.44" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.22" }
%"struct.std::__1::pair.22" = type { i64, i64 }
%"struct.std::__1::pair.34" = type <{ %"class.absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<unsigned int, std::__1::list<std::__1::multiset<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >, std::__1::allocator<std::__1::multiset<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> > > > >, absl::hash_internal::Hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::list<std::__1::multiset<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >, std::__1::allocator<std::__1::multiset<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> > > > > > >::iterator", i8, [7 x i8] }>
%"class.absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<unsigned int, std::__1::list<std::__1::multiset<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >, std::__1::allocator<std::__1::multiset<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> > > > >, absl::hash_internal::Hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::list<std::__1::multiset<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >, std::__1::allocator<std::__1::multiset<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> > > > > > >::iterator" = type { i8*, %union.anon }
%union.anon = type { %"union.absl::container_internal::map_slot_type"* }

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjNSt3__14listINS3_8multisetImNS3_4lessImEENS3_9allocatorImEEEENS8_ISA_EEEEEENS_13hash_internal4HashIjEENS3_8equal_toIjEENS8_INS3_4pairIKjSC_EEEEE5eraseENSN_8iteratorE = comdat any

$_ZNSt3__16__treeImNS_4lessImEENS_9allocatorImEEE7destroyEPNS_11__tree_nodeImPvEE = comdat any

$_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIjNSt3__14listINS3_8multisetImNS3_4lessImEENS3_9allocatorImEEEENS8_ISA_EEEEEENS_13hash_internal4HashIjEENS3_8equal_toIjEENS8_INS3_4pairIKjSC_EEEEE16try_emplace_implIRSK_JEEENSJ_INS0_12raw_hash_setISD_SG_SI_SM_E8iteratorEbEEOT_DpOT0_ = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjNSt3__14listINS3_8multisetImNS3_4lessImEENS3_9allocatorImEEEENS8_ISA_EEEEEENS_13hash_internal4HashIjEENS3_8equal_toIjEENS8_INS3_4pairIKjSC_EEEEE14prepare_insertEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjNSt3__14listINS3_8multisetImNS3_4lessImEENS3_9allocatorImEEEENS8_ISA_EEEEEENS_13hash_internal4HashIjEENS3_8equal_toIjEENS8_INS3_4pairIKjSC_EEEEE6resizeEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjNSt3__14listINS3_8multisetImNS3_4lessImEENS3_9allocatorImEEEENS8_ISA_EEEEEENS_13hash_internal4HashIjEENS3_8equal_toIjEENS8_INS3_4pairIKjSC_EEEEE27drop_deletes_without_resizeEv = comdat any

$_ZNSt3__16__treeINS_12__value_typeImmEENS_19__map_value_compareImS2_NS_4lessImEELb1EEENS_9allocatorIS2_EEE12__find_equalImEERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS2_PNS_11__tree_nodeIS2_SC_EElEERPNS_15__tree_end_nodeISE_EESF_RKT_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZZN4absl18container_internal10EmptyGroupEvE11empty_group = comdat any

@_ZZN4absl18container_internal10EmptyGroupEvE11empty_group = linkonce_odr hidden constant [16 x i8] c"\FF\80\80\80\80\80\80\80\80\80\80\80\80\80\80\80", comdat, align 16
@_ZN4absl13hash_internal15MixingHashState5kSeedE = external local_unnamed_addr constant i8*, align 8

@_ZN4quic20QpackBlockingManagerC1Ev = hidden unnamed_addr alias void (%"class.quic::QpackBlockingManager"*), void (%"class.quic::QpackBlockingManager"*)* @_ZN4quic20QpackBlockingManagerC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic20QpackBlockingManagerC2Ev(%"class.quic::QpackBlockingManager"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QpackBlockingManager", %"class.quic::QpackBlockingManager"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %2, align 8
  %3 = getelementptr inbounds %"class.quic::QpackBlockingManager", %"class.quic::QpackBlockingManager"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %4 = bitcast %"union.absl::container_internal::map_slot_type"** %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 32, i1 false) #5
  %5 = getelementptr inbounds %"class.quic::QpackBlockingManager", %"class.quic::QpackBlockingManager"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.quic::QpackBlockingManager", %"class.quic::QpackBlockingManager"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %7 = getelementptr inbounds %"class.quic::QpackBlockingManager", %"class.quic::QpackBlockingManager"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_node_base"** %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #5
  store %"class.std::__1::__tree_end_node"* %6, %"class.std::__1::__tree_end_node"** %7, align 8
  %9 = getelementptr inbounds %"class.quic::QpackBlockingManager", %"class.quic::QpackBlockingManager"* %0, i64 0, i32 2
  store i64 0, i64* %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic20QpackBlockingManager23OnHeaderAcknowledgementEj(%"class.quic::QpackBlockingManager"*, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.quic::QpackBlockingManager", %"class.quic::QpackBlockingManager"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %5 = zext i32 %1 to i64
  %6 = add i64 %4, %5
  %7 = zext i64 %6 to i128
  %8 = mul nuw i128 %7, 11376068507788127593
  %9 = lshr i128 %8, 64
  %10 = xor i128 %9, %8
  %11 = trunc i128 %10 to i64
  %12 = getelementptr inbounds %"class.quic::QpackBlockingManager", %"class.quic::QpackBlockingManager"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.quic::QpackBlockingManager", %"class.quic::QpackBlockingManager"* %0, i64 0, i32 0, i32 0, i32 0, i32 3
  %15 = load i64, i64* %14, align 8
  %16 = lshr i64 %11, 7
  %17 = ptrtoint i8* %13 to i64
  %18 = lshr i64 %17, 12
  %19 = xor i64 %16, %18
  %20 = trunc i128 %10 to i8
  %21 = and i8 %20, 127
  %22 = insertelement <16 x i8> undef, i8 %21, i32 0
  %23 = shufflevector <16 x i8> %22, <16 x i8> undef, <16 x i32> zeroinitializer
  %24 = getelementptr inbounds %"class.quic::QpackBlockingManager", %"class.quic::QpackBlockingManager"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  br label %25

25:                                               ; preds = %56, %2
  %26 = phi i64 [ %19, %2 ], [ %58, %56 ]
  %27 = phi i64 [ 0, %2 ], [ %57, %56 ]
  %28 = and i64 %26, %15
  %29 = getelementptr inbounds i8, i8* %13, i64 %28
  %30 = bitcast i8* %29 to <16 x i8>*
  %31 = load <16 x i8>, <16 x i8>* %30, align 1
  %32 = icmp eq <16 x i8> %23, %31
  %33 = bitcast <16 x i1> %32 to i16
  %34 = icmp eq i16 %33, 0
  br i1 %34, label %52, label %35

35:                                               ; preds = %25
  %36 = zext i16 %33 to i32
  %37 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %24, align 8
  br label %38

38:                                               ; preds = %48, %35
  %39 = phi i32 [ %36, %35 ], [ %50, %48 ]
  %40 = tail call i32 @llvm.cttz.i32(i32 %39, i1 false) #5, !range !2
  %41 = zext i32 %40 to i64
  %42 = add i64 %28, %41
  %43 = and i64 %42, %15
  %44 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %37, i64 %43
  %45 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %44, i64 0, i32 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, %1
  br i1 %47, label %59, label %48, !prof !3

48:                                               ; preds = %38
  %49 = add i32 %39, -1
  %50 = and i32 %49, %39
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %38

52:                                               ; preds = %48, %25
  %53 = icmp eq <16 x i8> %31, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %54 = bitcast <16 x i1> %53 to i16
  %55 = icmp eq i16 %54, 0
  br i1 %55, label %56, label %133, !prof !4

56:                                               ; preds = %52
  %57 = add i64 %27, 16
  %58 = add i64 %57, %28
  br label %25

59:                                               ; preds = %38
  %60 = getelementptr inbounds i8, i8* %13, i64 %43
  %61 = icmp ne i8* %60, null
  tail call void @llvm.assume(i1 %61) #5
  %62 = load i8, i8* %60, align 1
  %63 = icmp sgt i8 %62, -1
  br i1 %63, label %65, label %64, !prof !3

64:                                               ; preds = %59
  tail call void @llvm.trap() #5
  unreachable

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %37, i64 %43, i32 0, i32 1, i32 0, i32 0, i32 1
  %67 = bitcast %"struct.std::__1::__list_node_base"** %66 to %"struct.std::__1::__list_node"**
  %68 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %67, align 8
  %69 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %68, i64 0, i32 1
  %70 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %68, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %71 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %70, i64 0, i32 0
  %72 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %71, align 8
  %73 = icmp eq %"class.std::__1::__tree_node_base"* %72, null
  br i1 %73, label %79, label %74

74:                                               ; preds = %65, %74
  %75 = phi %"class.std::__1::__tree_node_base"* [ %77, %74 ], [ %72, %65 ]
  %76 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %75, i64 0, i32 1
  %77 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %76, align 8
  %78 = icmp eq %"class.std::__1::__tree_node_base"* %77, null
  br i1 %78, label %90, label %74

79:                                               ; preds = %65, %79
  %80 = phi %"class.std::__1::__tree_end_node"* [ %84, %79 ], [ %70, %65 ]
  %81 = bitcast %"class.std::__1::__tree_end_node"* %80 to %"class.std::__1::__tree_node_base"*
  %82 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 2
  %83 = bitcast %"class.std::__1::__tree_end_node"* %82 to %"class.std::__1::__tree_end_node"**
  %84 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %83, align 8
  %85 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %84, i64 0, i32 0
  %86 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %85, align 8
  %87 = icmp eq %"class.std::__1::__tree_node_base"* %86, %81
  br i1 %87, label %79, label %88

88:                                               ; preds = %79
  %89 = bitcast %"class.std::__1::__tree_end_node"* %84 to %"class.std::__1::__tree_node_base"*
  br label %90

90:                                               ; preds = %74, %88
  %91 = phi %"class.std::__1::__tree_node_base"* [ %89, %88 ], [ %75, %74 ]
  %92 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %91, i64 1
  %93 = bitcast %"class.std::__1::__tree_node_base"* %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, 1
  %96 = getelementptr inbounds %"class.quic::QpackBlockingManager", %"class.quic::QpackBlockingManager"* %0, i64 0, i32 2
  %97 = load i64, i64* %96, align 8
  %98 = icmp ult i64 %97, %95
  br i1 %98, label %99, label %100

99:                                               ; preds = %90
  store i64 %95, i64* %96, align 8
  br label %100

100:                                              ; preds = %90, %99
  tail call void @_ZN4quic20QpackBlockingManager23DecreaseReferenceCountsERKNSt3__18multisetImNS1_4lessImEENS1_9allocatorImEEEE(%"class.quic::QpackBlockingManager"* %0, %"class.std::__1::multiset"* dereferenceable(24) %69)
  %101 = load i8, i8* %60, align 1
  %102 = icmp sgt i8 %101, -1
  br i1 %102, label %104, label %103, !prof !3

103:                                              ; preds = %100
  tail call void @llvm.trap() #5
  unreachable

104:                                              ; preds = %100
  %105 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %66, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %105, i64 0, i32 1
  %107 = bitcast %"struct.std::__1::__list_node_base"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %105, i64 0, i32 0
  %110 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %109, align 8
  %111 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %110, i64 0, i32 1
  %112 = bitcast %"struct.std::__1::__list_node_base"** %111 to i64*
  store i64 %108, i64* %112, align 8
  %113 = bitcast %"struct.std::__1::__list_node_base"* %105 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"struct.std::__1::__list_node_base"** %106 to i64**
  %116 = load i64*, i64** %115, align 8
  store i64 %114, i64* %116, align 8
  %117 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %37, i64 %43, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %118 = load i64, i64* %117, align 8
  %119 = add i64 %118, -1
  store i64 %119, i64* %117, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %105, i64 1
  %121 = bitcast %"struct.std::__1::__list_node_base"* %120 to %"class.std::__1::__tree.11"*
  %122 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %105, i64 1, i32 1
  %123 = bitcast %"struct.std::__1::__list_node_base"** %122 to %"class.std::__1::__tree_node"**
  %124 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %123, align 8
  tail call void @_ZNSt3__16__treeImNS_4lessImEENS_9allocatorImEEE7destroyEPNS_11__tree_nodeImPvEE(%"class.std::__1::__tree.11"* %121, %"class.std::__1::__tree_node"* %124) #5
  %125 = bitcast %"struct.std::__1::__list_node_base"* %105 to i8*
  tail call void @_ZdlPv(i8* %125) #12
  %126 = load i8, i8* %60, align 1
  %127 = icmp sgt i8 %126, -1
  br i1 %127, label %129, label %128, !prof !3

128:                                              ; preds = %104
  tail call void @llvm.trap() #5
  unreachable

129:                                              ; preds = %104
  %130 = load i64, i64* %117, align 8
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %133

132:                                              ; preds = %129
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjNSt3__14listINS3_8multisetImNS3_4lessImEENS3_9allocatorImEEEENS8_ISA_EEEEEENS_13hash_internal4HashIjEENS3_8equal_toIjEENS8_INS3_4pairIKjSC_EEEEE5eraseENSN_8iteratorE(%"class.absl::container_internal::raw_hash_set"* %3, i8* nonnull %60, %"union.absl::container_internal::map_slot_type"* %44)
  br label %133

133:                                              ; preds = %52, %129, %132
  %134 = phi i1 [ true, %132 ], [ true, %129 ], [ false, %52 ]
  ret i1 %134
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZN4quic20QpackBlockingManager19RequiredInsertCountERKNSt3__18multisetImNS1_4lessImEENS1_9allocatorImEEEE(%"class.std::__1::multiset"* dereferenceable(24)) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.std::__1::multiset", %"class.std::__1::multiset"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %3 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %2, i64 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1, %6
  %7 = phi %"class.std::__1::__tree_node_base"* [ %9, %6 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %9 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %8, align 8
  %10 = icmp eq %"class.std::__1::__tree_node_base"* %9, null
  br i1 %10, label %22, label %6

11:                                               ; preds = %1, %11
  %12 = phi %"class.std::__1::__tree_end_node"* [ %16, %11 ], [ %2, %1 ]
  %13 = bitcast %"class.std::__1::__tree_end_node"* %12 to %"class.std::__1::__tree_node_base"*
  %14 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %12, i64 2
  %15 = bitcast %"class.std::__1::__tree_end_node"* %14 to %"class.std::__1::__tree_end_node"**
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %13
  br i1 %19, label %11, label %20

20:                                               ; preds = %11
  %21 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br label %22

22:                                               ; preds = %6, %20
  %23 = phi %"class.std::__1::__tree_node_base"* [ %21, %20 ], [ %7, %6 ]
  %24 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 1
  %25 = bitcast %"class.std::__1::__tree_node_base"* %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = add i64 %26, 1
  ret i64 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic20QpackBlockingManager23DecreaseReferenceCountsERKNSt3__18multisetImNS1_4lessImEENS1_9allocatorImEEEE(%"class.quic::QpackBlockingManager"*, %"class.std::__1::multiset"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::multiset", %"class.std::__1::multiset"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::multiset", %"class.std::__1::multiset"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %6 = icmp eq %"class.std::__1::__tree_end_node"* %4, %5
  br i1 %6, label %14, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.quic::QpackBlockingManager", %"class.quic::QpackBlockingManager"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.quic::QpackBlockingManager", %"class.quic::QpackBlockingManager"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %10 = bitcast %"class.std::__1::__tree_end_node"* %9 to %"class.std::__1::__tree_node.44"**
  %11 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %8, i64 0, i32 0, i32 0
  %12 = bitcast %"class.std::__1::map"* %8 to i64*
  %13 = getelementptr inbounds %"class.quic::QpackBlockingManager", %"class.quic::QpackBlockingManager"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  br label %15

14:                                               ; preds = %120, %2
  ret void

15:                                               ; preds = %7, %120
  %16 = phi %"class.std::__1::__tree_end_node"* [ %4, %7 ], [ %121, %120 ]
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 4
  %18 = bitcast %"class.std::__1::__tree_end_node"* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = load %"class.std::__1::__tree_node.44"*, %"class.std::__1::__tree_node.44"** %10, align 8
  %21 = icmp eq %"class.std::__1::__tree_node.44"* %20, null
  %22 = bitcast %"class.std::__1::__tree_node.44"* %20 to %"class.std::__1::__tree_node_base"*
  br i1 %21, label %44, label %23

23:                                               ; preds = %15, %23
  %24 = phi %"class.std::__1::__tree_end_node"* [ %34, %23 ], [ %9, %15 ]
  %25 = phi %"class.std::__1::__tree_node.44"* [ %35, %23 ], [ %20, %15 ]
  %26 = getelementptr inbounds %"class.std::__1::__tree_node.44", %"class.std::__1::__tree_node.44"* %25, i64 0, i32 1, i32 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = icmp ult i64 %27, %19
  %29 = getelementptr inbounds %"class.std::__1::__tree_node.44", %"class.std::__1::__tree_node.44"* %25, i64 0, i32 0, i32 1
  %30 = bitcast %"class.std::__1::__tree_node_base"** %29 to %"class.std::__1::__tree_node.44"**
  %31 = getelementptr inbounds %"class.std::__1::__tree_node.44", %"class.std::__1::__tree_node.44"* %25, i64 0, i32 0, i32 0
  %32 = bitcast %"class.std::__1::__tree_node.44"* %25 to %"class.std::__1::__tree_node.44"**
  %33 = select i1 %28, %"class.std::__1::__tree_node.44"** %30, %"class.std::__1::__tree_node.44"** %32
  %34 = select i1 %28, %"class.std::__1::__tree_end_node"* %24, %"class.std::__1::__tree_end_node"* %31
  %35 = load %"class.std::__1::__tree_node.44"*, %"class.std::__1::__tree_node.44"** %33, align 8
  %36 = icmp eq %"class.std::__1::__tree_node.44"* %35, null
  br i1 %36, label %37, label %23

37:                                               ; preds = %23
  %38 = icmp eq %"class.std::__1::__tree_end_node"* %34, %9
  br i1 %38, label %44, label %39

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %34, i64 4
  %41 = bitcast %"class.std::__1::__tree_end_node"* %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = icmp ult i64 %19, %42
  br i1 %43, label %44, label %45

44:                                               ; preds = %39, %37, %15
  br label %45

45:                                               ; preds = %39, %44
  %46 = phi %"class.std::__1::__tree_end_node"* [ %9, %44 ], [ %34, %39 ]
  %47 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %46, i64 5
  %48 = bitcast %"class.std::__1::__tree_end_node"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, 1
  br i1 %50, label %51, label %90

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %46, i64 1, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, null
  br i1 %54, label %55, label %63

55:                                               ; preds = %51
  %56 = bitcast %"class.std::__1::__tree_end_node"* %46 to %"class.std::__1::__tree_node_base"*
  %57 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %46, i64 2
  %58 = bitcast %"class.std::__1::__tree_end_node"* %57 to %"class.std::__1::__tree_end_node"**
  %59 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %58, align 8
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %59, i64 0, i32 0
  %61 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %60, align 8
  %62 = icmp eq %"class.std::__1::__tree_node_base"* %61, %56
  br i1 %62, label %79, label %70

63:                                               ; preds = %51, %63
  %64 = phi %"class.std::__1::__tree_node_base"* [ %66, %63 ], [ %53, %51 ]
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %64, i64 0, i32 0, i32 0
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %65, align 8
  %67 = icmp eq %"class.std::__1::__tree_node_base"* %66, null
  br i1 %67, label %68, label %63

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %64, i64 0, i32 0
  br label %79

70:                                               ; preds = %55, %70
  %71 = phi %"class.std::__1::__tree_end_node"** [ %74, %70 ], [ %58, %55 ]
  %72 = bitcast %"class.std::__1::__tree_end_node"** %71 to %"class.std::__1::__tree_node_base"**
  %73 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %72, align 8
  %74 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %73, i64 0, i32 2
  %75 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %74, align 8
  %76 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %75, i64 0, i32 0
  %77 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %76, align 8
  %78 = icmp eq %"class.std::__1::__tree_node_base"* %77, %73
  br i1 %78, label %79, label %70

79:                                               ; preds = %70, %68, %55
  %80 = phi %"class.std::__1::__tree_end_node"* [ %69, %68 ], [ %59, %55 ], [ %75, %70 ]
  %81 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %11, align 8
  %82 = icmp eq %"class.std::__1::__tree_end_node"* %81, %46
  br i1 %82, label %83, label %85

83:                                               ; preds = %79
  %84 = ptrtoint %"class.std::__1::__tree_end_node"* %80 to i64
  store i64 %84, i64* %12, align 8
  br label %85

85:                                               ; preds = %79, %83
  %86 = load i64, i64* %13, align 8
  %87 = add i64 %86, -1
  store i64 %87, i64* %13, align 8
  %88 = bitcast %"class.std::__1::__tree_end_node"* %46 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %22, %"class.std::__1::__tree_node_base"* %88) #5
  %89 = bitcast %"class.std::__1::__tree_end_node"* %46 to i8*
  tail call void @_ZdlPv(i8* %89) #12
  br label %92

90:                                               ; preds = %45
  %91 = add i64 %49, -1
  store i64 %91, i64* %48, align 8
  br label %92

92:                                               ; preds = %90, %85
  %93 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %94 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %93, align 8
  %95 = icmp eq %"class.std::__1::__tree_node_base"* %94, null
  br i1 %95, label %96, label %104

96:                                               ; preds = %92
  %97 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %98 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 2
  %99 = bitcast %"class.std::__1::__tree_end_node"* %98 to %"class.std::__1::__tree_end_node"**
  %100 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %99, align 8
  %101 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %100, i64 0, i32 0
  %102 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %101, align 8
  %103 = icmp eq %"class.std::__1::__tree_node_base"* %102, %97
  br i1 %103, label %120, label %111

104:                                              ; preds = %92, %104
  %105 = phi %"class.std::__1::__tree_node_base"* [ %107, %104 ], [ %94, %92 ]
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %105, i64 0, i32 0, i32 0
  %107 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %106, align 8
  %108 = icmp eq %"class.std::__1::__tree_node_base"* %107, null
  br i1 %108, label %109, label %104

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %105, i64 0, i32 0
  br label %120

111:                                              ; preds = %96, %111
  %112 = phi %"class.std::__1::__tree_end_node"** [ %115, %111 ], [ %99, %96 ]
  %113 = bitcast %"class.std::__1::__tree_end_node"** %112 to %"class.std::__1::__tree_node_base"**
  %114 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %113, align 8
  %115 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %114, i64 0, i32 2
  %116 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %115, align 8
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %116, i64 0, i32 0
  %118 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %117, align 8
  %119 = icmp eq %"class.std::__1::__tree_node_base"* %118, %114
  br i1 %119, label %120, label %111

120:                                              ; preds = %111, %96, %109
  %121 = phi %"class.std::__1::__tree_end_node"* [ %110, %109 ], [ %100, %96 ], [ %116, %111 ]
  %122 = icmp eq %"class.std::__1::__tree_end_node"* %121, %5
  br i1 %122, label %14, label %15
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjNSt3__14listINS3_8multisetImNS3_4lessImEENS3_9allocatorImEEEENS8_ISA_EEEEEENS_13hash_internal4HashIjEENS3_8equal_toIjEENS8_INS3_4pairIKjSC_EEEEE5eraseENSN_8iteratorE(%"class.absl::container_internal::raw_hash_set"*, i8*, %"union.absl::container_internal::map_slot_type"*) local_unnamed_addr #1 comdat align 2 {
  %4 = icmp eq i8* %1, null
  br i1 %4, label %8, label %5, !prof !4

5:                                                ; preds = %3
  %6 = load i8, i8* %1, align 1
  %7 = icmp sgt i8 %6, -1
  br i1 %7, label %9, label %8, !prof !3

8:                                                ; preds = %5, %3
  tail call void @llvm.trap() #5
  unreachable

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %2, i64 0, i32 0, i32 1, i32 0
  %11 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %2, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %43, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %16 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %10, i64 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %10, i64 0, i32 0, i32 0
  %19 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %18, align 8
  %20 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %19, i64 0, i32 1
  %21 = bitcast %"struct.std::__1::__list_node_base"** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %16, i64 0, i32 0
  %24 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %24, i64 0, i32 1
  %26 = bitcast %"struct.std::__1::__list_node_base"** %25 to i64*
  store i64 %22, i64* %26, align 8
  %27 = bitcast %"struct.std::__1::__list_node_base"* %16 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"struct.std::__1::__list_node_base"** %20 to i64**
  %30 = load i64*, i64** %29, align 8
  store i64 %28, i64* %30, align 8
  store i64 0, i64* %11, align 8
  %31 = icmp eq %"struct.std::__1::__list_node_base"* %16, %17
  br i1 %31, label %43, label %32

32:                                               ; preds = %14, %32
  %33 = phi %"struct.std::__1::__list_node_base"* [ %35, %32 ], [ %16, %14 ]
  %34 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %33, i64 0, i32 1
  %35 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__list_node_base"* %36 to %"class.std::__1::__tree.11"*
  %38 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %33, i64 1, i32 1
  %39 = bitcast %"struct.std::__1::__list_node_base"** %38 to %"class.std::__1::__tree_node"**
  %40 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %39, align 8
  tail call void @_ZNSt3__16__treeImNS_4lessImEENS_9allocatorImEEE7destroyEPNS_11__tree_nodeImPvEE(%"class.std::__1::__tree.11"* %37, %"class.std::__1::__tree_node"* %40) #5
  %41 = bitcast %"struct.std::__1::__list_node_base"* %33 to i8*
  tail call void @_ZdlPv(i8* %41) #12
  %42 = icmp eq %"struct.std::__1::__list_node_base"* %35, %17
  br i1 %42, label %43, label %32

43:                                               ; preds = %32, %9, %14
  %44 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 2
  %45 = load i64, i64* %44, align 8
  %46 = add i64 %45, -1
  store i64 %46, i64* %44, align 8
  %47 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %48 = bitcast %"class.absl::container_internal::raw_hash_set"* %0 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = ptrtoint i8* %1 to i64
  %51 = sub i64 %50, %49
  %52 = add i64 %51, -16
  %53 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 3
  %54 = load i64, i64* %53, align 8
  %55 = and i64 %52, %54
  %56 = bitcast i8* %1 to <16 x i8>*
  %57 = load <16 x i8>, <16 x i8>* %56, align 1
  %58 = icmp eq <16 x i8> %57, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %59 = bitcast <16 x i1> %58 to i16
  %60 = inttoptr i64 %49 to i8*
  %61 = getelementptr inbounds i8, i8* %60, i64 %55
  %62 = bitcast i8* %61 to <16 x i8>*
  %63 = load <16 x i8>, <16 x i8>* %62, align 1
  %64 = icmp eq <16 x i8> %63, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %65 = bitcast <16 x i1> %64 to i16
  %66 = icmp ne i16 %65, 0
  %67 = icmp ne i16 %59, 0
  %68 = and i1 %67, %66
  br i1 %68, label %69, label %79

69:                                               ; preds = %43
  %70 = zext i16 %59 to i32
  %71 = zext i16 %65 to i32
  %72 = tail call i32 @llvm.cttz.i32(i32 %70, i1 false) #5, !range !2
  %73 = shl nuw i32 %71, 16
  %74 = tail call i32 @llvm.ctlz.i32(i32 %73, i1 false) #5, !range !2
  %75 = add nuw nsw i32 %74, %72
  %76 = icmp ult i32 %75, 16
  %77 = zext i1 %76 to i64
  %78 = select i1 %76, i8 -128, i8 -2
  br label %79

79:                                               ; preds = %43, %69
  %80 = phi i64 [ 0, %43 ], [ %77, %69 ]
  %81 = phi i8 [ -2, %43 ], [ %78, %69 ]
  %82 = getelementptr inbounds i8, i8* %60, i64 %51
  store i8 %81, i8* %82, align 1
  %83 = load i8*, i8** %47, align 8
  %84 = add i64 %51, -15
  %85 = load i64, i64* %53, align 8
  %86 = and i64 %85, %84
  %87 = and i64 %85, 15
  %88 = add i64 %86, %87
  %89 = getelementptr inbounds i8, i8* %83, i64 %88
  store i8 %81, i8* %89, align 1
  %90 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %91 = load i64, i64* %90, align 8
  %92 = add i64 %91, %80
  store i64 %92, i64* %90, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic20QpackBlockingManager20OnStreamCancellationEj(%"class.quic::QpackBlockingManager"*, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.quic::QpackBlockingManager", %"class.quic::QpackBlockingManager"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %5 = zext i32 %1 to i64
  %6 = add i64 %4, %5
  %7 = zext i64 %6 to i128
  %8 = mul nuw i128 %7, 11376068507788127593
  %9 = lshr i128 %8, 64
  %10 = xor i128 %9, %8
  %11 = trunc i128 %10 to i64
  %12 = getelementptr inbounds %"class.quic::QpackBlockingManager", %"class.quic::QpackBlockingManager"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.quic::QpackBlockingManager", %"class.quic::QpackBlockingManager"* %0, i64 0, i32 0, i32 0, i32 0, i32 3
  %15 = load i64, i64* %14, align 8
  %16 = lshr i64 %11, 7
  %17 = ptrtoint i8* %13 to i64
  %18 = lshr i64 %17, 12
  %19 = xor i64 %16, %18
  %20 = trunc i128 %10 to i8
  %21 = and i8 %20, 127
  %22 = insertelement <16 x i8> undef, i8 %21, i32 0
  %23 = shufflevector <16 x i8> %22, <16 x i8> undef, <16 x i32> zeroinitializer
  %24 = getelementptr inbounds %"class.quic::QpackBlockingManager", %"class.quic::QpackBlockingManager"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  br label %25

25:                                               ; preds = %56, %2
  %26 = phi i64 [ %19, %2 ], [ %58, %56 ]
  %27 = phi i64 [ 0, %2 ], [ %57, %56 ]
  %28 = and i64 %26, %15
  %29 = getelementptr inbounds i8, i8* %13, i64 %28
  %30 = bitcast i8* %29 to <16 x i8>*
  %31 = load <16 x i8>, <16 x i8>* %30, align 1
  %32 = icmp eq <16 x i8> %23, %31
  %33 = bitcast <16 x i1> %32 to i16
  %34 = icmp eq i16 %33, 0
  br i1 %34, label %52, label %35

35:                                               ; preds = %25
  %36 = zext i16 %33 to i32
  %37 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %24, align 8
  br label %38

38:                                               ; preds = %48, %35
  %39 = phi i32 [ %36, %35 ], [ %50, %48 ]
  %40 = tail call i32 @llvm.cttz.i32(i32 %39, i1 false) #5, !range !2
  %41 = zext i32 %40 to i64
  %42 = add i64 %28, %41
  %43 = and i64 %42, %15
  %44 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %37, i64 %43
  %45 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %44, i64 0, i32 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, %1
  br i1 %47, label %59, label %48, !prof !3

48:                                               ; preds = %38
  %49 = add i32 %39, -1
  %50 = and i32 %49, %39
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %38

52:                                               ; preds = %48, %25
  %53 = icmp eq <16 x i8> %31, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %54 = bitcast <16 x i1> %53 to i16
  %55 = icmp eq i16 %54, 0
  br i1 %55, label %56, label %83, !prof !4

56:                                               ; preds = %52
  %57 = add i64 %27, 16
  %58 = add i64 %57, %28
  br label %25

59:                                               ; preds = %38
  %60 = getelementptr inbounds i8, i8* %13, i64 %43
  %61 = icmp ne i8* %60, null
  tail call void @llvm.assume(i1 %61) #5
  %62 = load i8, i8* %60, align 1
  %63 = icmp sgt i8 %62, -1
  br i1 %63, label %65, label %64, !prof !3

64:                                               ; preds = %59
  tail call void @llvm.trap() #5
  unreachable

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %37, i64 %43, i32 0, i32 1, i32 0, i32 0, i32 1
  %67 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %37, i64 %43, i32 0, i32 1, i32 0, i32 0
  %68 = bitcast %"struct.std::__1::__list_node_base"** %66 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = inttoptr i64 %69 to %"struct.std::__1::__list_node_base"*
  %71 = icmp eq %"struct.std::__1::__list_node_base"* %67, %70
  br i1 %71, label %72, label %73

72:                                               ; preds = %73, %65
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjNSt3__14listINS3_8multisetImNS3_4lessImEENS3_9allocatorImEEEENS8_ISA_EEEEEENS_13hash_internal4HashIjEENS3_8equal_toIjEENS8_INS3_4pairIKjSC_EEEEE5eraseENSN_8iteratorE(%"class.absl::container_internal::raw_hash_set"* %3, i8* nonnull %60, %"union.absl::container_internal::map_slot_type"* %44)
  br label %83

73:                                               ; preds = %65, %73
  %74 = phi %"struct.std::__1::__list_node_base"* [ %81, %73 ], [ %70, %65 ]
  %75 = phi i64 [ %80, %73 ], [ %69, %65 ]
  %76 = inttoptr i64 %75 to %"struct.std::__1::__list_node"*
  %77 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %76, i64 0, i32 1
  tail call void @_ZN4quic20QpackBlockingManager23DecreaseReferenceCountsERKNSt3__18multisetImNS1_4lessImEENS1_9allocatorImEEEE(%"class.quic::QpackBlockingManager"* %0, %"class.std::__1::multiset"* dereferenceable(24) %77)
  %78 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %74, i64 0, i32 1
  %79 = bitcast %"struct.std::__1::__list_node_base"** %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = inttoptr i64 %80 to %"struct.std::__1::__list_node_base"*
  %82 = icmp eq %"struct.std::__1::__list_node_base"* %67, %81
  br i1 %82, label %72, label %73

83:                                               ; preds = %52, %72
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic20QpackBlockingManager22OnInsertCountIncrementEm(%"class.quic::QpackBlockingManager"* nocapture, i64) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.quic::QpackBlockingManager", %"class.quic::QpackBlockingManager"* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = xor i64 %4, -1
  %6 = icmp ult i64 %5, %1
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = add i64 %4, %1
  store i64 %8, i64* %3, align 8
  br label %9

9:                                                ; preds = %2, %7
  %10 = phi i1 [ true, %7 ], [ false, %2 ]
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic20QpackBlockingManager17OnHeaderBlockSentEjNSt3__18multisetImNS1_4lessImEENS1_9allocatorImEEEE(%"class.quic::QpackBlockingManager"*, i32, %"class.std::__1::multiset"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.std::__1::pair.34", align 8
  %5 = alloca i32, align 4
  store i32 %1, i32* %5, align 4
  tail call void @_ZN4quic20QpackBlockingManager23IncreaseReferenceCountsERKNSt3__18multisetImNS1_4lessImEENS1_9allocatorImEEEE(%"class.quic::QpackBlockingManager"* %0, %"class.std::__1::multiset"* dereferenceable(24) %2)
  %6 = getelementptr inbounds %"class.quic::QpackBlockingManager", %"class.quic::QpackBlockingManager"* %0, i64 0, i32 0, i32 0
  %7 = bitcast %"struct.std::__1::pair.34"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #5
  call void @_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIjNSt3__14listINS3_8multisetImNS3_4lessImEENS3_9allocatorImEEEENS8_ISA_EEEEEENS_13hash_internal4HashIjEENS3_8equal_toIjEENS8_INS3_4pairIKjSC_EEEEE16try_emplace_implIRSK_JEEENSJ_INS0_12raw_hash_setISD_SG_SI_SM_E8iteratorEbEEOT_DpOT0_(%"struct.std::__1::pair.34"* nonnull sret %4, %"class.absl::container_internal::raw_hash_map"* %6, i32* nonnull dereferenceable(4) %5) #5
  %8 = getelementptr inbounds %"struct.std::__1::pair.34", %"struct.std::__1::pair.34"* %4, i64 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %14, label %11, !prof !4

11:                                               ; preds = %3
  %12 = load i8, i8* %9, align 1
  %13 = icmp sgt i8 %12, -1
  br i1 %13, label %15, label %14, !prof !3

14:                                               ; preds = %11, %3
  call void @llvm.trap() #5
  unreachable

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"struct.std::__1::pair.34", %"struct.std::__1::pair.34"* %4, i64 0, i32 0, i32 1, i32 0
  %17 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %16, align 8
  %18 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %17, i64 0, i32 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #5
  %19 = call i8* @_Znwm(i64 40) #12, !noalias !5
  %20 = bitcast i8* %19 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* null, %"struct.std::__1::__list_node_base"** %20, align 8, !noalias !5
  %21 = getelementptr inbounds i8, i8* %19, i64 16
  %22 = getelementptr inbounds i8, i8* %19, i64 24
  %23 = bitcast %"class.std::__1::multiset"* %2 to <2 x i64>*
  %24 = load <2 x i64>, <2 x i64>* %23, align 8
  %25 = bitcast i8* %21 to <2 x i64>*
  store <2 x i64> %24, <2 x i64>* %25, align 8
  %26 = getelementptr inbounds %"class.std::__1::multiset", %"class.std::__1::multiset"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %27 = getelementptr inbounds i8, i8* %19, i64 32
  %28 = bitcast i8* %27 to i64*
  %29 = load i64, i64* %26, align 8
  store i64 %29, i64* %28, align 8
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %31, label %33

31:                                               ; preds = %15
  %32 = bitcast i8* %21 to i8**
  store i8* %22, i8** %32, align 8
  br label %41

33:                                               ; preds = %15
  %34 = extractelement <2 x i64> %24, i32 1
  %35 = inttoptr i64 %34 to %"class.std::__1::__tree_node_base"*
  %36 = getelementptr inbounds %"class.std::__1::multiset", %"class.std::__1::multiset"* %2, i64 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %35, i64 0, i32 2
  %38 = bitcast %"class.std::__1::__tree_end_node"** %37 to i8**
  store i8* %22, i8** %38, align 8
  %39 = getelementptr inbounds %"class.std::__1::multiset", %"class.std::__1::multiset"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %39, %"class.std::__1::__tree_end_node"** %36, align 8
  %40 = bitcast %"class.std::__1::__tree_end_node"* %39 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 16, i1 false) #5
  br label %41

41:                                               ; preds = %31, %33
  %42 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %18, i64 0, i32 0, i32 0
  %43 = getelementptr inbounds i8, i8* %19, i64 8
  %44 = bitcast i8* %43 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* %42, %"struct.std::__1::__list_node_base"** %44, align 8
  %45 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %18, i64 0, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %45, align 8
  store %"struct.std::__1::__list_node_base"* %46, %"struct.std::__1::__list_node_base"** %20, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %46, i64 0, i32 1
  %48 = bitcast %"struct.std::__1::__list_node_base"** %47 to i8**
  store i8* %19, i8** %48, align 8
  %49 = bitcast %"class.std::__1::list"* %18 to i8**
  store i8* %19, i8** %49, align 8
  %50 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %17, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %51 = load i64, i64* %50, align 8
  %52 = add i64 %51, 1
  store i64 %52, i64* %50, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic20QpackBlockingManager23IncreaseReferenceCountsERKNSt3__18multisetImNS1_4lessImEENS1_9allocatorImEEEE(%"class.quic::QpackBlockingManager"*, %"class.std::__1::multiset"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %4 = alloca %"class.std::__1::__tree_node_base"*, align 8
  %5 = alloca %"struct.std::__1::pair.22", align 8
  %6 = getelementptr inbounds %"class.std::__1::multiset", %"class.std::__1::multiset"* %1, i64 0, i32 0, i32 0
  %7 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::multiset", %"class.std::__1::multiset"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %9 = icmp eq %"class.std::__1::__tree_end_node"* %7, %8
  br i1 %9, label %25, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.quic::QpackBlockingManager", %"class.quic::QpackBlockingManager"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"class.quic::QpackBlockingManager", %"class.quic::QpackBlockingManager"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %13 = bitcast %"class.std::__1::__tree_end_node"* %12 to %"class.std::__1::__tree_node.44"**
  %14 = bitcast %"struct.std::__1::pair.22"* %5 to i8*
  %15 = getelementptr inbounds %"struct.std::__1::pair.22", %"struct.std::__1::pair.22"* %5, i64 0, i32 0
  %16 = getelementptr inbounds %"struct.std::__1::pair.22", %"struct.std::__1::pair.22"* %5, i64 0, i32 1
  %17 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %11, i64 0, i32 0
  %18 = bitcast %"class.std::__1::__tree_end_node"** %3 to i8*
  %19 = bitcast %"class.std::__1::__tree_node_base"** %4 to i8*
  %20 = bitcast %"class.std::__1::__tree_end_node"** %3 to i64*
  %21 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %11, i64 0, i32 0, i32 0
  %22 = bitcast %"class.std::__1::map"* %11 to i64*
  %23 = getelementptr inbounds %"class.quic::QpackBlockingManager", %"class.quic::QpackBlockingManager"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.quic::QpackBlockingManager", %"class.quic::QpackBlockingManager"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  br label %26

25:                                               ; preds = %114, %2
  ret void

26:                                               ; preds = %10, %114
  %27 = phi %"class.std::__1::__tree_end_node"* [ %7, %10 ], [ %115, %114 ]
  %28 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %27, i64 4
  %29 = bitcast %"class.std::__1::__tree_end_node"* %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = load %"class.std::__1::__tree_node.44"*, %"class.std::__1::__tree_node.44"** %13, align 8
  %32 = icmp eq %"class.std::__1::__tree_node.44"* %31, null
  br i1 %32, label %59, label %33

33:                                               ; preds = %26, %33
  %34 = phi %"class.std::__1::__tree_end_node"* [ %44, %33 ], [ %12, %26 ]
  %35 = phi %"class.std::__1::__tree_node.44"* [ %45, %33 ], [ %31, %26 ]
  %36 = getelementptr inbounds %"class.std::__1::__tree_node.44", %"class.std::__1::__tree_node.44"* %35, i64 0, i32 1, i32 0, i32 0
  %37 = load i64, i64* %36, align 8
  %38 = icmp ult i64 %37, %30
  %39 = getelementptr inbounds %"class.std::__1::__tree_node.44", %"class.std::__1::__tree_node.44"* %35, i64 0, i32 0, i32 1
  %40 = bitcast %"class.std::__1::__tree_node_base"** %39 to %"class.std::__1::__tree_node.44"**
  %41 = getelementptr inbounds %"class.std::__1::__tree_node.44", %"class.std::__1::__tree_node.44"* %35, i64 0, i32 0, i32 0
  %42 = bitcast %"class.std::__1::__tree_node.44"* %35 to %"class.std::__1::__tree_node.44"**
  %43 = select i1 %38, %"class.std::__1::__tree_node.44"** %40, %"class.std::__1::__tree_node.44"** %42
  %44 = select i1 %38, %"class.std::__1::__tree_end_node"* %34, %"class.std::__1::__tree_end_node"* %41
  %45 = load %"class.std::__1::__tree_node.44"*, %"class.std::__1::__tree_node.44"** %43, align 8
  %46 = icmp eq %"class.std::__1::__tree_node.44"* %45, null
  br i1 %46, label %47, label %33

47:                                               ; preds = %33
  %48 = icmp eq %"class.std::__1::__tree_end_node"* %44, %12
  br i1 %48, label %59, label %49

49:                                               ; preds = %47
  %50 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %44, i64 4
  %51 = bitcast %"class.std::__1::__tree_end_node"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %30
  br i1 %53, label %54, label %59

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %44, i64 5
  %56 = bitcast %"class.std::__1::__tree_end_node"* %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = add i64 %57, 1
  store i64 %58, i64* %56, align 8
  br label %86

59:                                               ; preds = %47, %26, %49
  %60 = phi %"class.std::__1::__tree_end_node"* [ %44, %49 ], [ %12, %47 ], [ %12, %26 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #5
  store i64 %30, i64* %15, align 8
  store i64 1, i64* %16, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #5
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %3, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #5
  store %"class.std::__1::__tree_node_base"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_node_base"*), %"class.std::__1::__tree_node_base"** %4, align 8
  %61 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeImmEENS_19__map_value_compareImS2_NS_4lessImEELb1EEENS_9allocatorIS2_EEE12__find_equalImEERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS2_PNS_11__tree_nodeIS2_SC_EElEERPNS_15__tree_end_nodeISE_EESF_RKT_(%"class.std::__1::__tree"* %17, %"class.std::__1::__tree_end_node"* %60, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %3, %"class.std::__1::__tree_node_base"** nonnull dereferenceable(8) %4, i64* nonnull dereferenceable(8) %15) #5
  %62 = bitcast %"class.std::__1::__tree_node_base"** %61 to %"class.std::__1::__tree_node.44"**
  %63 = load %"class.std::__1::__tree_node.44"*, %"class.std::__1::__tree_node.44"** %62, align 8
  %64 = icmp eq %"class.std::__1::__tree_node.44"* %63, null
  br i1 %64, label %65, label %85

65:                                               ; preds = %59
  %66 = call i8* @_Znwm(i64 48) #12, !noalias !8
  %67 = getelementptr inbounds i8, i8* %66, i64 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* nonnull align 8 %14, i64 16, i1 false) #5, !noalias !8
  %68 = load i64, i64* %20, align 8
  %69 = bitcast i8* %66 to %"class.std::__1::__tree_node_base"*
  %70 = getelementptr inbounds i8, i8* %66, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 0, i64 16, i1 false) #5
  %71 = bitcast i8* %70 to i64*
  store i64 %68, i64* %71, align 8
  %72 = bitcast %"class.std::__1::__tree_node_base"** %61 to i8**
  store i8* %66, i8** %72, align 8
  %73 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %21, align 8
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %74, align 8
  %76 = icmp eq %"class.std::__1::__tree_node_base"* %75, null
  br i1 %76, label %80, label %77

77:                                               ; preds = %65
  %78 = ptrtoint %"class.std::__1::__tree_node_base"* %75 to i64
  store i64 %78, i64* %22, align 8
  %79 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %61, align 8
  br label %80

80:                                               ; preds = %77, %65
  %81 = phi %"class.std::__1::__tree_node_base"* [ %69, %65 ], [ %79, %77 ]
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %23, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %82, %"class.std::__1::__tree_node_base"* %81) #5
  %83 = load i64, i64* %24, align 8
  %84 = add i64 %83, 1
  store i64 %84, i64* %24, align 8
  br label %85

85:                                               ; preds = %59, %80
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #5
  br label %86

86:                                               ; preds = %85, %54
  %87 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %27, i64 1, i32 0
  %88 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %87, align 8
  %89 = icmp eq %"class.std::__1::__tree_node_base"* %88, null
  br i1 %89, label %90, label %98

90:                                               ; preds = %86
  %91 = bitcast %"class.std::__1::__tree_end_node"* %27 to %"class.std::__1::__tree_node_base"*
  %92 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %27, i64 2
  %93 = bitcast %"class.std::__1::__tree_end_node"* %92 to %"class.std::__1::__tree_end_node"**
  %94 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %93, align 8
  %95 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %94, i64 0, i32 0
  %96 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %95, align 8
  %97 = icmp eq %"class.std::__1::__tree_node_base"* %96, %91
  br i1 %97, label %114, label %105

98:                                               ; preds = %86, %98
  %99 = phi %"class.std::__1::__tree_node_base"* [ %101, %98 ], [ %88, %86 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 0, i32 0
  %101 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %100, align 8
  %102 = icmp eq %"class.std::__1::__tree_node_base"* %101, null
  br i1 %102, label %103, label %98

103:                                              ; preds = %98
  %104 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 0
  br label %114

105:                                              ; preds = %90, %105
  %106 = phi %"class.std::__1::__tree_end_node"** [ %109, %105 ], [ %93, %90 ]
  %107 = bitcast %"class.std::__1::__tree_end_node"** %106 to %"class.std::__1::__tree_node_base"**
  %108 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %107, align 8
  %109 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %108, i64 0, i32 2
  %110 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %109, align 8
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %110, i64 0, i32 0
  %112 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %111, align 8
  %113 = icmp eq %"class.std::__1::__tree_node_base"* %112, %108
  br i1 %113, label %114, label %105

114:                                              ; preds = %105, %90, %103
  %115 = phi %"class.std::__1::__tree_end_node"* [ %104, %103 ], [ %94, %90 ], [ %110, %105 ]
  %116 = icmp eq %"class.std::__1::__tree_end_node"* %115, %8
  br i1 %116, label %25, label %26
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4quic20QpackBlockingManager26blocking_allowed_on_streamEjm(%"class.quic::QpackBlockingManager"* nocapture readonly, i32, i64) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.quic::QpackBlockingManager", %"class.quic::QpackBlockingManager"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 1
  %7 = icmp ugt i64 %6, %2
  br i1 %7, label %8, label %132

8:                                                ; preds = %3
  %9 = icmp eq i64 %2, 0
  br i1 %9, label %132, label %10

10:                                               ; preds = %8
  %11 = getelementptr inbounds %"class.quic::QpackBlockingManager", %"class.quic::QpackBlockingManager"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"class.quic::QpackBlockingManager", %"class.quic::QpackBlockingManager"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %14 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %13, align 8
  %15 = icmp ne i8* %12, null
  tail call void @llvm.assume(i1 %15) #5
  %16 = load i8, i8* %12, align 1
  %17 = icmp slt i8 %16, -1
  br i1 %17, label %18, label %33

18:                                               ; preds = %10, %18
  %19 = phi %"union.absl::container_internal::map_slot_type"* [ %30, %18 ], [ %14, %10 ]
  %20 = phi i8* [ %29, %18 ], [ %12, %10 ]
  %21 = bitcast i8* %20 to <16 x i8>*
  %22 = load <16 x i8>, <16 x i8>* %21, align 1
  %23 = icmp slt <16 x i8> %22, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %24 = bitcast <16 x i1> %23 to i16
  %25 = zext i16 %24 to i32
  %26 = add nuw nsw i32 %25, 1
  %27 = tail call i32 @llvm.cttz.i32(i32 %26, i1 true) #5, !range !2
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds i8, i8* %20, i64 %28
  %30 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %19, i64 %28
  %31 = load i8, i8* %29, align 1
  %32 = icmp slt i8 %31, -1
  br i1 %32, label %18, label %33

33:                                               ; preds = %18, %10
  %34 = phi %"union.absl::container_internal::map_slot_type"* [ %14, %10 ], [ %30, %18 ]
  %35 = phi i8* [ %12, %10 ], [ %29, %18 ]
  %36 = phi i8 [ %16, %10 ], [ %31, %18 ]
  %37 = icmp eq i8 %36, -1
  %38 = icmp eq i8* %35, null
  %39 = or i1 %37, %38
  br i1 %39, label %132, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.quic::QpackBlockingManager", %"class.quic::QpackBlockingManager"* %0, i64 0, i32 2
  %42 = icmp sgt i8 %36, -1
  br i1 %42, label %44, label %43, !prof !3

43:                                               ; preds = %129, %40
  tail call void @llvm.trap() #5
  unreachable

44:                                               ; preds = %40, %129
  %45 = phi i8* [ %127, %129 ], [ %35, %40 ]
  %46 = phi %"union.absl::container_internal::map_slot_type"* [ %124, %129 ], [ %34, %40 ]
  %47 = phi i64 [ %102, %129 ], [ 0, %40 ]
  %48 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %46, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %49 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %46, i64 0, i32 0, i32 1, i32 0, i32 0
  %50 = bitcast %"struct.std::__1::__list_node_base"** %48 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = inttoptr i64 %51 to %"struct.std::__1::__list_node_base"*
  %53 = icmp eq %"struct.std::__1::__list_node_base"* %49, %52
  br i1 %53, label %101, label %54

54:                                               ; preds = %44
  %55 = load i64, i64* %41, align 8
  br label %62

56:                                               ; preds = %86
  %57 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %63, i64 0, i32 1
  %58 = bitcast %"struct.std::__1::__list_node_base"** %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = inttoptr i64 %59 to %"struct.std::__1::__list_node_base"*
  %61 = icmp eq %"struct.std::__1::__list_node_base"* %49, %60
  br i1 %61, label %101, label %62

62:                                               ; preds = %54, %56
  %63 = phi %"struct.std::__1::__list_node_base"* [ %52, %54 ], [ %60, %56 ]
  %64 = phi i64 [ %51, %54 ], [ %59, %56 ]
  %65 = inttoptr i64 %64 to %"struct.std::__1::__list_node"*
  %66 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %65, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %67 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %66, i64 0, i32 0
  %68 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %67, align 8
  %69 = icmp eq %"class.std::__1::__tree_node_base"* %68, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %62, %70
  %71 = phi %"class.std::__1::__tree_node_base"* [ %73, %70 ], [ %68, %62 ]
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %72, align 8
  %74 = icmp eq %"class.std::__1::__tree_node_base"* %73, null
  br i1 %74, label %86, label %70

75:                                               ; preds = %62, %75
  %76 = phi %"class.std::__1::__tree_end_node"* [ %80, %75 ], [ %66, %62 ]
  %77 = bitcast %"class.std::__1::__tree_end_node"* %76 to %"class.std::__1::__tree_node_base"*
  %78 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %76, i64 2
  %79 = bitcast %"class.std::__1::__tree_end_node"* %78 to %"class.std::__1::__tree_end_node"**
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %77
  br i1 %83, label %75, label %84

84:                                               ; preds = %75
  %85 = bitcast %"class.std::__1::__tree_end_node"* %80 to %"class.std::__1::__tree_node_base"*
  br label %86

86:                                               ; preds = %70, %84
  %87 = phi %"class.std::__1::__tree_node_base"* [ %85, %84 ], [ %71, %70 ]
  %88 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %87, i64 1
  %89 = bitcast %"class.std::__1::__tree_node_base"* %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = add i64 %90, 1
  %92 = icmp ugt i64 %91, %55
  br i1 %92, label %93, label %56

93:                                               ; preds = %86
  %94 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %46, i64 0, i32 0, i32 0
  %95 = load i32, i32* %94, align 8
  %96 = icmp eq i32 %95, %1
  br i1 %96, label %132, label %97

97:                                               ; preds = %93
  %98 = add i64 %47, 1
  %99 = add i64 %47, 2
  %100 = icmp ugt i64 %99, %2
  br i1 %100, label %132, label %101

101:                                              ; preds = %56, %44, %97
  %102 = phi i64 [ %98, %97 ], [ %47, %44 ], [ %47, %56 ]
  %103 = getelementptr inbounds i8, i8* %45, i64 1
  %104 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %46, i64 1
  %105 = load i8, i8* %103, align 1
  %106 = icmp slt i8 %105, -1
  br i1 %106, label %107, label %122

107:                                              ; preds = %101, %107
  %108 = phi %"union.absl::container_internal::map_slot_type"* [ %119, %107 ], [ %104, %101 ]
  %109 = phi i8* [ %118, %107 ], [ %103, %101 ]
  %110 = bitcast i8* %109 to <16 x i8>*
  %111 = load <16 x i8>, <16 x i8>* %110, align 1
  %112 = icmp slt <16 x i8> %111, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %113 = bitcast <16 x i1> %112 to i16
  %114 = zext i16 %113 to i32
  %115 = add nuw nsw i32 %114, 1
  %116 = tail call i32 @llvm.cttz.i32(i32 %115, i1 true) #5, !range !2
  %117 = zext i32 %116 to i64
  %118 = getelementptr inbounds i8, i8* %109, i64 %117
  %119 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %108, i64 %117
  %120 = load i8, i8* %118, align 1
  %121 = icmp slt i8 %120, -1
  br i1 %121, label %107, label %122

122:                                              ; preds = %107, %101
  %123 = phi i8* [ %103, %101 ], [ %118, %107 ]
  %124 = phi %"union.absl::container_internal::map_slot_type"* [ %104, %101 ], [ %119, %107 ]
  %125 = phi i8 [ %105, %101 ], [ %120, %107 ]
  %126 = icmp eq i8 %125, -1
  %127 = select i1 %126, i8* null, i8* %123, !prof !4
  %128 = icmp eq i8* %127, null
  br i1 %128, label %132, label %129

129:                                              ; preds = %122
  %130 = load i8, i8* %127, align 1
  %131 = icmp sgt i8 %130, -1
  br i1 %131, label %44, label %43, !prof !3

132:                                              ; preds = %122, %93, %97, %33, %8, %3
  %133 = phi i1 [ true, %3 ], [ false, %8 ], [ true, %33 ], [ true, %122 ], [ true, %93 ], [ false, %97 ]
  ret i1 %133
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZNK4quic20QpackBlockingManager23smallest_blocking_indexEv(%"class.quic::QpackBlockingManager"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.quic::QpackBlockingManager", %"class.quic::QpackBlockingManager"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.quic::QpackBlockingManager", %"class.quic::QpackBlockingManager"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = bitcast %"class.std::__1::__tree_end_node"** %6 to %"class.std::__1::__tree_node.44"**
  %8 = load %"class.std::__1::__tree_node.44"*, %"class.std::__1::__tree_node.44"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::__tree_node.44", %"class.std::__1::__tree_node.44"* %8, i64 0, i32 1, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  br label %11

11:                                               ; preds = %1, %5
  %12 = phi i64 [ %10, %5 ], [ -1, %1 ]
  ret i64 %12
}

; Function Attrs: nounwind
declare void @llvm.assume(i1) #5

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.cttz.i32(i32, i1 immarg) #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeImNS_4lessImEENS_9allocatorImEEE7destroyEPNS_11__tree_nodeImPvEE(%"class.std::__1::__tree.11"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeImNS_4lessImEENS_9allocatorImEEE7destroyEPNS_11__tree_nodeImPvEE(%"class.std::__1::__tree.11"* %0, %"class.std::__1::__tree_node"* %6) #5
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeImNS_4lessImEENS_9allocatorImEEE7destroyEPNS_11__tree_nodeImPvEE(%"class.std::__1::__tree.11"* %0, %"class.std::__1::__tree_node"* %9) #5
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIjNSt3__14listINS3_8multisetImNS3_4lessImEENS3_9allocatorImEEEENS8_ISA_EEEEEENS_13hash_internal4HashIjEENS3_8equal_toIjEENS8_INS3_4pairIKjSC_EEEEE16try_emplace_implIRSK_JEEENSJ_INS0_12raw_hash_setISD_SG_SI_SM_E8iteratorEbEEOT_DpOT0_(%"struct.std::__1::pair.34"* noalias sret, %"class.absl::container_internal::raw_hash_map"*, i32* dereferenceable(4)) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map", %"class.absl::container_internal::raw_hash_map"* %1, i64 0, i32 0
  %5 = load i32, i32* %2, align 4
  %6 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %7 = zext i32 %5 to i64
  %8 = add i64 %6, %7
  %9 = zext i64 %8 to i128
  %10 = mul nuw i128 %9, 11376068507788127593
  %11 = lshr i128 %10, 64
  %12 = xor i128 %11, %10
  %13 = trunc i128 %12 to i64
  %14 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map", %"class.absl::container_internal::raw_hash_map"* %1, i64 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map", %"class.absl::container_internal::raw_hash_map"* %1, i64 0, i32 0, i32 3
  %17 = load i64, i64* %16, align 8
  %18 = lshr i64 %13, 7
  %19 = ptrtoint i8* %15 to i64
  %20 = lshr i64 %19, 12
  %21 = xor i64 %18, %20
  %22 = trunc i128 %12 to i8
  %23 = and i8 %22, 127
  %24 = insertelement <16 x i8> undef, i8 %23, i32 0
  %25 = shufflevector <16 x i8> %24, <16 x i8> undef, <16 x i32> zeroinitializer
  %26 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map", %"class.absl::container_internal::raw_hash_map"* %1, i64 0, i32 0, i32 1
  br label %27

27:                                               ; preds = %57, %3
  %28 = phi i64 [ %21, %3 ], [ %59, %57 ]
  %29 = phi i64 [ 0, %3 ], [ %58, %57 ]
  %30 = and i64 %28, %17
  %31 = getelementptr inbounds i8, i8* %15, i64 %30
  %32 = bitcast i8* %31 to <16 x i8>*
  %33 = load <16 x i8>, <16 x i8>* %32, align 1
  %34 = icmp eq <16 x i8> %25, %33
  %35 = bitcast <16 x i1> %34 to i16
  %36 = icmp eq i16 %35, 0
  br i1 %36, label %53, label %37

37:                                               ; preds = %27
  %38 = zext i16 %35 to i32
  %39 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %26, align 8
  br label %40

40:                                               ; preds = %49, %37
  %41 = phi i32 [ %38, %37 ], [ %51, %49 ]
  %42 = tail call i32 @llvm.cttz.i32(i32 %41, i1 false) #5, !range !2
  %43 = zext i32 %42 to i64
  %44 = add i64 %30, %43
  %45 = and i64 %44, %17
  %46 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %39, i64 %45, i32 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, %5
  br i1 %48, label %72, label %49, !prof !3

49:                                               ; preds = %40
  %50 = add i32 %41, -1
  %51 = and i32 %50, %41
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %40

53:                                               ; preds = %49, %27
  %54 = icmp eq <16 x i8> %33, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %55 = bitcast <16 x i1> %54 to i16
  %56 = icmp eq i16 %55, 0
  br i1 %56, label %57, label %60, !prof !4

57:                                               ; preds = %53
  %58 = add i64 %29, 16
  %59 = add i64 %58, %30
  br label %27

60:                                               ; preds = %53
  %61 = tail call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjNSt3__14listINS3_8multisetImNS3_4lessImEENS3_9allocatorImEEEENS8_ISA_EEEEEENS_13hash_internal4HashIjEENS3_8equal_toIjEENS8_INS3_4pairIKjSC_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set"* %4, i64 %13) #5
  %62 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %26, align 8
  %63 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %62, i64 %61, i32 0, i32 0
  %64 = load i32, i32* %2, align 4
  store i32 %64, i32* %63, align 8
  %65 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %62, i64 %61, i32 0, i32 1
  %66 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %65, i64 0, i32 0, i32 0
  %67 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %65, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %66, %"struct.std::__1::__list_node_base"** %67, align 8
  %68 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %62, i64 %61, i32 0, i32 1, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %66, %"struct.std::__1::__list_node_base"** %68, align 8
  %69 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %62, i64 %61, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %69, align 8
  %70 = load i8*, i8** %14, align 8
  %71 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %26, align 8
  br label %72

72:                                               ; preds = %40, %60
  %73 = phi %"union.absl::container_internal::map_slot_type"* [ %71, %60 ], [ %39, %40 ]
  %74 = phi i8* [ %70, %60 ], [ %15, %40 ]
  %75 = phi i8 [ 1, %60 ], [ 0, %40 ]
  %76 = phi i64 [ %61, %60 ], [ %45, %40 ]
  %77 = getelementptr inbounds i8, i8* %74, i64 %76
  %78 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %73, i64 %76
  %79 = icmp ne i8* %77, null
  tail call void @llvm.assume(i1 %79) #5
  %80 = getelementptr inbounds %"struct.std::__1::pair.34", %"struct.std::__1::pair.34"* %0, i64 0, i32 0, i32 0
  store i8* %77, i8** %80, align 8
  %81 = getelementptr inbounds %"struct.std::__1::pair.34", %"struct.std::__1::pair.34"* %0, i64 0, i32 0, i32 1, i32 0
  store %"union.absl::container_internal::map_slot_type"* %78, %"union.absl::container_internal::map_slot_type"** %81, align 8
  %82 = getelementptr inbounds %"struct.std::__1::pair.34", %"struct.std::__1::pair.34"* %0, i64 0, i32 1
  store i8 %75, i8* %82, align 8
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjNSt3__14listINS3_8multisetImNS3_4lessImEENS3_9allocatorImEEEENS8_ISA_EEEEEENS_13hash_internal4HashIjEENS3_8equal_toIjEENS8_INS3_4pairIKjSC_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set"*, i64) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %1, 7
  %8 = ptrtoint i8* %4 to i64
  %9 = lshr i64 %8, 12
  %10 = xor i64 %9, %7
  %11 = and i64 %10, %6
  %12 = getelementptr inbounds i8, i8* %4, i64 %11
  %13 = bitcast i8* %12 to <16 x i8>*
  %14 = load <16 x i8>, <16 x i8>* %13, align 1
  %15 = icmp slt <16 x i8> %14, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %16 = bitcast <16 x i1> %15 to i16
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %2, %18
  %19 = phi i64 [ %23, %18 ], [ %11, %2 ]
  %20 = phi i64 [ %21, %18 ], [ 0, %2 ]
  %21 = add i64 %20, 16
  %22 = add i64 %21, %19
  %23 = and i64 %22, %6
  %24 = getelementptr inbounds i8, i8* %4, i64 %23
  %25 = bitcast i8* %24 to <16 x i8>*
  %26 = load <16 x i8>, <16 x i8>* %25, align 1
  %27 = icmp slt <16 x i8> %26, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %28 = bitcast <16 x i1> %27 to i16
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %18, label %30

30:                                               ; preds = %18, %2
  %31 = phi i64 [ %11, %2 ], [ %23, %18 ]
  %32 = phi i16 [ %16, %2 ], [ %28, %18 ]
  %33 = zext i16 %32 to i32
  %34 = tail call i32 @llvm.cttz.i32(i32 %33, i1 false) #5, !range !2
  %35 = zext i32 %34 to i64
  %36 = add i64 %31, %35
  %37 = and i64 %36, %6
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %93

41:                                               ; preds = %30
  %42 = getelementptr inbounds i8, i8* %4, i64 %37
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, -2
  br i1 %44, label %93, label %45, !prof !3

45:                                               ; preds = %41
  %46 = icmp eq i64 %6, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjNSt3__14listINS3_8multisetImNS3_4lessImEENS3_9allocatorImEEEENS8_ISA_EEEEEENS_13hash_internal4HashIjEENS3_8equal_toIjEENS8_INS3_4pairIKjSC_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set"* %0, i64 1) #5
  br label %59

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = lshr i64 %6, 3
  %52 = sub i64 %6, %51
  %53 = lshr i64 %52, 1
  %54 = icmp ugt i64 %50, %53
  br i1 %54, label %56, label %55

55:                                               ; preds = %48
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjNSt3__14listINS3_8multisetImNS3_4lessImEENS3_9allocatorImEEEENS8_ISA_EEEEEENS_13hash_internal4HashIjEENS3_8equal_toIjEENS8_INS3_4pairIKjSC_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set"* %0) #5
  br label %59

56:                                               ; preds = %48
  %57 = shl i64 %6, 1
  %58 = or i64 %57, 1
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjNSt3__14listINS3_8multisetImNS3_4lessImEENS3_9allocatorImEEEENS8_ISA_EEEEEENS_13hash_internal4HashIjEENS3_8equal_toIjEENS8_INS3_4pairIKjSC_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set"* %0, i64 %58) #5
  br label %59

59:                                               ; preds = %47, %55, %56
  %60 = load i8*, i8** %3, align 8
  %61 = load i64, i64* %5, align 8
  %62 = ptrtoint i8* %60 to i64
  %63 = lshr i64 %62, 12
  %64 = xor i64 %63, %7
  %65 = and i64 %64, %61
  %66 = getelementptr inbounds i8, i8* %60, i64 %65
  %67 = bitcast i8* %66 to <16 x i8>*
  %68 = load <16 x i8>, <16 x i8>* %67, align 1
  %69 = icmp slt <16 x i8> %68, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %70 = bitcast <16 x i1> %69 to i16
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %59, %72
  %73 = phi i64 [ %77, %72 ], [ %65, %59 ]
  %74 = phi i64 [ %75, %72 ], [ 0, %59 ]
  %75 = add i64 %74, 16
  %76 = add i64 %75, %73
  %77 = and i64 %76, %61
  %78 = getelementptr inbounds i8, i8* %60, i64 %77
  %79 = bitcast i8* %78 to <16 x i8>*
  %80 = load <16 x i8>, <16 x i8>* %79, align 1
  %81 = icmp slt <16 x i8> %80, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %82 = bitcast <16 x i1> %81 to i16
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %72, label %84

84:                                               ; preds = %72, %59
  %85 = phi i64 [ %65, %59 ], [ %77, %72 ]
  %86 = phi i16 [ %70, %59 ], [ %82, %72 ]
  %87 = zext i16 %86 to i32
  %88 = tail call i32 @llvm.cttz.i32(i32 %87, i1 false) #5, !range !2
  %89 = zext i32 %88 to i64
  %90 = add i64 %85, %89
  %91 = and i64 %90, %61
  %92 = load i64, i64* %38, align 8
  br label %93

93:                                               ; preds = %41, %30, %84
  %94 = phi i64 [ %92, %84 ], [ 0, %41 ], [ %39, %30 ]
  %95 = phi i8* [ %60, %84 ], [ %4, %41 ], [ %4, %30 ]
  %96 = phi i64 [ %91, %84 ], [ %37, %41 ], [ %37, %30 ]
  %97 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 2
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  store i64 %99, i64* %97, align 8
  %100 = getelementptr inbounds i8, i8* %95, i64 %96
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, -128
  %103 = zext i1 %102 to i64
  %104 = sub i64 %94, %103
  store i64 %104, i64* %38, align 8
  %105 = trunc i64 %1 to i8
  %106 = and i8 %105, 127
  store i8 %106, i8* %100, align 1
  %107 = load i8*, i8** %3, align 8
  %108 = add i64 %96, -15
  %109 = load i64, i64* %5, align 8
  %110 = and i64 %109, %108
  %111 = and i64 %109, 15
  %112 = add i64 %110, %111
  %113 = getelementptr inbounds i8, i8* %107, i64 %112
  store i8 %106, i8* %113, align 1
  ret i64 %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjNSt3__14listINS3_8multisetImNS3_4lessImEENS3_9allocatorImEEEENS8_ISA_EEEEEENS_13hash_internal4HashIjEENS3_8equal_toIjEENS8_INS3_4pairIKjSC_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 1
  %6 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %5, align 8
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  store i64 %1, i64* %7, align 8
  %9 = add i64 %1, 16
  %10 = add i64 %1, 23
  %11 = and i64 %10, -8
  %12 = shl i64 %1, 5
  %13 = add i64 %11, %12
  %14 = tail call i8* @_Znwm(i64 %13) #12
  store i8* %14, i8** %3, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %11
  %16 = bitcast %"union.absl::container_internal::map_slot_type"** %5 to i8**
  store i8* %15, i8** %16, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 -128, i64 %9, i1 false) #5
  %17 = getelementptr inbounds i8, i8* %14, i64 %1
  store i8 -1, i8* %17, align 1
  %18 = lshr i64 %1, 3
  %19 = sub i64 %1, %18
  %20 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = icmp eq i64 %8, 0
  br i1 %24, label %124, label %25

25:                                               ; preds = %2
  %26 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %28

27:                                               ; preds = %120
  br i1 %24, label %124, label %123

28:                                               ; preds = %25, %120
  %29 = phi i64 [ 0, %25 ], [ %121, %120 ]
  %30 = getelementptr inbounds i8, i8* %4, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = icmp sgt i8 %31, -1
  br i1 %32, label %33, label %120

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %6, i64 %29, i32 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i64
  %37 = add i64 %26, %36
  %38 = zext i64 %37 to i128
  %39 = mul nuw i128 %38, 11376068507788127593
  %40 = lshr i128 %39, 64
  %41 = xor i128 %40, %39
  %42 = trunc i128 %41 to i64
  %43 = load i8*, i8** %3, align 8
  %44 = load i64, i64* %7, align 8
  %45 = lshr i64 %42, 7
  %46 = ptrtoint i8* %43 to i64
  %47 = lshr i64 %46, 12
  %48 = xor i64 %45, %47
  %49 = and i64 %48, %44
  %50 = getelementptr inbounds i8, i8* %43, i64 %49
  %51 = bitcast i8* %50 to <16 x i8>*
  %52 = load <16 x i8>, <16 x i8>* %51, align 1
  %53 = icmp slt <16 x i8> %52, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %54 = bitcast <16 x i1> %53 to i16
  %55 = icmp eq i16 %54, 0
  br i1 %55, label %56, label %68

56:                                               ; preds = %33, %56
  %57 = phi i64 [ %61, %56 ], [ %49, %33 ]
  %58 = phi i64 [ %59, %56 ], [ 0, %33 ]
  %59 = add i64 %58, 16
  %60 = add i64 %59, %57
  %61 = and i64 %60, %44
  %62 = getelementptr inbounds i8, i8* %43, i64 %61
  %63 = bitcast i8* %62 to <16 x i8>*
  %64 = load <16 x i8>, <16 x i8>* %63, align 1
  %65 = icmp slt <16 x i8> %64, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %66 = bitcast <16 x i1> %65 to i16
  %67 = icmp eq i16 %66, 0
  br i1 %67, label %56, label %68

68:                                               ; preds = %56, %33
  %69 = phi i64 [ %49, %33 ], [ %61, %56 ]
  %70 = phi i16 [ %54, %33 ], [ %66, %56 ]
  %71 = zext i16 %70 to i32
  %72 = tail call i32 @llvm.cttz.i32(i32 %71, i1 false) #5, !range !2
  %73 = zext i32 %72 to i64
  %74 = add i64 %69, %73
  %75 = and i64 %74, %44
  %76 = trunc i128 %41 to i8
  %77 = and i8 %76, 127
  %78 = getelementptr inbounds i8, i8* %43, i64 %75
  store i8 %77, i8* %78, align 1
  %79 = load i8*, i8** %3, align 8
  %80 = add i64 %75, -15
  %81 = load i64, i64* %7, align 8
  %82 = and i64 %80, %81
  %83 = and i64 %81, 15
  %84 = add i64 %82, %83
  %85 = getelementptr inbounds i8, i8* %79, i64 %84
  store i8 %77, i8* %85, align 1
  %86 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %5, align 8
  %87 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %86, i64 %75, i32 0, i32 0
  %88 = load i32, i32* %34, align 8
  store i32 %88, i32* %87, align 8
  %89 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %86, i64 %75, i32 0, i32 1
  %90 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %89, i64 0, i32 0, i32 0
  %91 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %89, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %90, %"struct.std::__1::__list_node_base"** %91, align 8
  %92 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %86, i64 %75, i32 0, i32 1, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %90, %"struct.std::__1::__list_node_base"** %92, align 8
  %93 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %86, i64 %75, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %93, align 8
  %94 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %6, i64 %29, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %95 = load i64, i64* %94, align 8
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %120, label %97

97:                                               ; preds = %68
  %98 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %6, i64 %29, i32 0, i32 1, i32 0, i32 0, i32 1
  %99 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %98, align 8
  %100 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %6, i64 %29, i32 0, i32 1, i32 0, i32 0, i32 0
  %101 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %100, align 8
  %102 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %101, i64 0, i32 1
  %103 = bitcast %"struct.std::__1::__list_node_base"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %99, i64 0, i32 0
  %106 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %105, align 8
  %107 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %106, i64 0, i32 1
  %108 = bitcast %"struct.std::__1::__list_node_base"** %107 to i64*
  store i64 %104, i64* %108, align 8
  %109 = bitcast %"struct.std::__1::__list_node_base"* %99 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = bitcast %"struct.std::__1::__list_node_base"** %102 to i64**
  %112 = load i64*, i64** %111, align 8
  store i64 %110, i64* %112, align 8
  %113 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %91, align 8
  %114 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %113, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %99, %"struct.std::__1::__list_node_base"** %114, align 8
  %115 = bitcast %"class.std::__1::list"* %89 to i64*
  %116 = load i64, i64* %115, align 8
  store i64 %116, i64* %109, align 8
  store %"struct.std::__1::__list_node_base"* %101, %"struct.std::__1::__list_node_base"** %91, align 8
  store %"struct.std::__1::__list_node_base"* %90, %"struct.std::__1::__list_node_base"** %102, align 8
  %117 = load i64, i64* %94, align 8
  %118 = load i64, i64* %93, align 8
  %119 = add i64 %118, %117
  store i64 %119, i64* %93, align 8
  store i64 0, i64* %94, align 8
  br label %120

120:                                              ; preds = %97, %68, %28
  %121 = add nuw i64 %29, 1
  %122 = icmp eq i64 %121, %8
  br i1 %122, label %27, label %28

123:                                              ; preds = %27
  tail call void @_ZdlPv(i8* %4) #12
  br label %124

124:                                              ; preds = %2, %27, %123
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjNSt3__14listINS3_8multisetImNS3_4lessImEENS3_9allocatorImEEEENS8_ISA_EEEEEENS_13hash_internal4HashIjEENS3_8equal_toIjEENS8_INS3_4pairIKjSC_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set"*) local_unnamed_addr #9 comdat align 2 {
  %2 = alloca %"union.absl::container_internal::map_slot_type", align 8
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  tail call void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8* %4, i64 %6) #5
  %7 = bitcast %"union.absl::container_internal::map_slot_type"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #5
  %8 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %2, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false)
  %10 = load i64, i64* %5, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %21, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 1
  %14 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %15 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %2, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %8, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %8, i64 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %2, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %19 = bitcast %"class.std::__1::list"* %8 to i64*
  %20 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %29

21:                                               ; preds = %251, %1
  %22 = phi i64 [ 0, %1 ], [ %253, %251 ]
  %23 = lshr i64 %22, 3
  %24 = sub i64 %22, %23
  %25 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 2
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %24, %26
  %28 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %27, i64* %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #5
  ret void

29:                                               ; preds = %12, %251
  %30 = phi i64 [ %10, %12 ], [ %254, %251 ]
  %31 = phi i64 [ 0, %12 ], [ %253, %251 ]
  %32 = load i8*, i8** %3, align 8
  %33 = getelementptr inbounds i8, i8* %32, i64 %31
  %34 = load i8, i8* %33, align 1
  %35 = icmp eq i8 %34, -2
  br i1 %35, label %36, label %251

36:                                               ; preds = %29
  %37 = ptrtoint i8* %32 to i64
  %38 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %13, align 8
  %39 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %38, i64 %31, i32 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = zext i32 %40 to i64
  %42 = add i64 %14, %41
  %43 = zext i64 %42 to i128
  %44 = mul nuw i128 %43, 11376068507788127593
  %45 = lshr i128 %44, 64
  %46 = xor i128 %45, %44
  %47 = trunc i128 %46 to i64
  %48 = lshr i64 %47, 7
  %49 = lshr i64 %37, 12
  %50 = xor i64 %48, %49
  %51 = and i64 %50, %30
  %52 = getelementptr inbounds i8, i8* %32, i64 %51
  %53 = bitcast i8* %52 to <16 x i8>*
  %54 = load <16 x i8>, <16 x i8>* %53, align 1
  %55 = icmp slt <16 x i8> %54, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %56 = bitcast <16 x i1> %55 to i16
  %57 = icmp eq i16 %56, 0
  br i1 %57, label %58, label %70

58:                                               ; preds = %36, %58
  %59 = phi i64 [ %63, %58 ], [ %51, %36 ]
  %60 = phi i64 [ %61, %58 ], [ 0, %36 ]
  %61 = add i64 %60, 16
  %62 = add i64 %61, %59
  %63 = and i64 %62, %30
  %64 = getelementptr inbounds i8, i8* %32, i64 %63
  %65 = bitcast i8* %64 to <16 x i8>*
  %66 = load <16 x i8>, <16 x i8>* %65, align 1
  %67 = icmp slt <16 x i8> %66, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %68 = bitcast <16 x i1> %67 to i16
  %69 = icmp eq i16 %68, 0
  br i1 %69, label %58, label %70

70:                                               ; preds = %58, %36
  %71 = phi i64 [ %51, %36 ], [ %63, %58 ]
  %72 = phi i16 [ %56, %36 ], [ %68, %58 ]
  %73 = zext i16 %72 to i32
  %74 = call i32 @llvm.cttz.i32(i32 %73, i1 false) #5, !range !2
  %75 = zext i32 %74 to i64
  %76 = add i64 %71, %75
  %77 = and i64 %76, %30
  %78 = sub i64 %77, %51
  %79 = sub i64 %31, %51
  %80 = xor i64 %78, %79
  %81 = and i64 %80, %30
  %82 = icmp ult i64 %81, 16
  br i1 %82, label %83, label %93, !prof !3

83:                                               ; preds = %70
  %84 = trunc i128 %46 to i8
  %85 = and i8 %84, 127
  store i8 %85, i8* %33, align 1
  %86 = load i8*, i8** %3, align 8
  %87 = add i64 %31, -15
  %88 = load i64, i64* %5, align 8
  %89 = and i64 %88, %87
  %90 = and i64 %88, 15
  %91 = add i64 %89, %90
  %92 = getelementptr inbounds i8, i8* %86, i64 %91
  store i8 %85, i8* %92, align 1
  br label %251

93:                                               ; preds = %70
  %94 = getelementptr inbounds i8, i8* %32, i64 %77
  %95 = load i8, i8* %94, align 1
  %96 = icmp eq i8 %95, -128
  %97 = trunc i128 %46 to i8
  %98 = and i8 %97, 127
  store i8 %98, i8* %94, align 1
  %99 = load i8*, i8** %3, align 8
  %100 = add i64 %77, -15
  %101 = load i64, i64* %5, align 8
  %102 = and i64 %101, %100
  %103 = and i64 %101, 15
  %104 = add i64 %102, %103
  %105 = getelementptr inbounds i8, i8* %99, i64 %104
  store i8 %98, i8* %105, align 1
  %106 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %13, align 8
  br i1 %96, label %107, label %152

107:                                              ; preds = %93
  %108 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %106, i64 %77, i32 0, i32 0
  %109 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %106, i64 %31, i32 0, i32 0
  %110 = load i32, i32* %109, align 8
  store i32 %110, i32* %108, align 8
  %111 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %106, i64 %77, i32 0, i32 1
  %112 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %111, i64 0, i32 0, i32 0
  %113 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %111, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %112, %"struct.std::__1::__list_node_base"** %113, align 8
  %114 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %106, i64 %77, i32 0, i32 1, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %112, %"struct.std::__1::__list_node_base"** %114, align 8
  %115 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %106, i64 %77, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %115, align 8
  %116 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %106, i64 %31, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %117 = load i64, i64* %116, align 8
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %142, label %119

119:                                              ; preds = %107
  %120 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %106, i64 %31, i32 0, i32 1, i32 0, i32 0, i32 1
  %121 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %120, align 8
  %122 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %106, i64 %31, i32 0, i32 1, i32 0, i32 0, i32 0
  %123 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %122, align 8
  %124 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %123, i64 0, i32 1
  %125 = bitcast %"struct.std::__1::__list_node_base"** %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %121, i64 0, i32 0
  %128 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %127, align 8
  %129 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %128, i64 0, i32 1
  %130 = bitcast %"struct.std::__1::__list_node_base"** %129 to i64*
  store i64 %126, i64* %130, align 8
  %131 = bitcast %"struct.std::__1::__list_node_base"* %121 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = bitcast %"struct.std::__1::__list_node_base"** %124 to i64**
  %134 = load i64*, i64** %133, align 8
  store i64 %132, i64* %134, align 8
  %135 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %113, align 8
  %136 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %135, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %121, %"struct.std::__1::__list_node_base"** %136, align 8
  %137 = bitcast %"class.std::__1::list"* %111 to i64*
  %138 = load i64, i64* %137, align 8
  store i64 %138, i64* %131, align 8
  store %"struct.std::__1::__list_node_base"* %123, %"struct.std::__1::__list_node_base"** %113, align 8
  store %"struct.std::__1::__list_node_base"* %112, %"struct.std::__1::__list_node_base"** %124, align 8
  %139 = load i64, i64* %116, align 8
  %140 = load i64, i64* %115, align 8
  %141 = add i64 %140, %139
  store i64 %141, i64* %115, align 8
  store i64 0, i64* %116, align 8
  br label %142

142:                                              ; preds = %107, %119
  %143 = load i8*, i8** %3, align 8
  %144 = getelementptr inbounds i8, i8* %143, i64 %31
  store i8 -128, i8* %144, align 1
  %145 = load i8*, i8** %3, align 8
  %146 = add i64 %31, -15
  %147 = load i64, i64* %5, align 8
  %148 = and i64 %147, %146
  %149 = and i64 %147, 15
  %150 = add i64 %148, %149
  %151 = getelementptr inbounds i8, i8* %145, i64 %150
  store i8 -128, i8* %151, align 1
  br label %251

152:                                              ; preds = %93
  %153 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %106, i64 %31, i32 0, i32 0
  %154 = load i32, i32* %153, align 8
  store i32 %154, i32* %15, align 8
  store %"struct.std::__1::__list_node_base"* %16, %"struct.std::__1::__list_node_base"** %17, align 8
  store %"struct.std::__1::__list_node_base"* %16, %"struct.std::__1::__list_node_base"** %9, align 8
  store i64 0, i64* %18, align 8
  %155 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %106, i64 %31, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %156 = load i64, i64* %155, align 8
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %181, label %158

158:                                              ; preds = %152
  %159 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %106, i64 %31, i32 0, i32 1, i32 0, i32 0, i32 1
  %160 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %159, align 8
  %161 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %106, i64 %31, i32 0, i32 1, i32 0, i32 0, i32 0
  %162 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %161, align 8
  %163 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %162, i64 0, i32 1
  %164 = bitcast %"struct.std::__1::__list_node_base"** %163 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %160, i64 0, i32 0
  %167 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %166, align 8
  %168 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %167, i64 0, i32 1
  %169 = bitcast %"struct.std::__1::__list_node_base"** %168 to i64*
  store i64 %165, i64* %169, align 8
  %170 = bitcast %"struct.std::__1::__list_node_base"* %160 to i64*
  %171 = load i64, i64* %170, align 8
  %172 = bitcast %"struct.std::__1::__list_node_base"** %163 to i64**
  %173 = load i64*, i64** %172, align 8
  store i64 %171, i64* %173, align 8
  %174 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %17, align 8
  %175 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %174, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %160, %"struct.std::__1::__list_node_base"** %175, align 8
  %176 = load i64, i64* %19, align 8
  store i64 %176, i64* %170, align 8
  store %"struct.std::__1::__list_node_base"* %162, %"struct.std::__1::__list_node_base"** %17, align 8
  store %"struct.std::__1::__list_node_base"* %16, %"struct.std::__1::__list_node_base"** %163, align 8
  %177 = load i64, i64* %155, align 8
  %178 = load i64, i64* %18, align 8
  %179 = add i64 %178, %177
  store i64 %179, i64* %18, align 8
  store i64 0, i64* %155, align 8
  %180 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %13, align 8
  br label %181

181:                                              ; preds = %152, %158
  %182 = phi %"union.absl::container_internal::map_slot_type"* [ %106, %152 ], [ %180, %158 ]
  %183 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %182, i64 %31, i32 0, i32 0
  %184 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %182, i64 %77, i32 0, i32 0
  %185 = load i32, i32* %184, align 8
  store i32 %185, i32* %183, align 8
  %186 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %182, i64 %31, i32 0, i32 1
  %187 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %186, i64 0, i32 0, i32 0
  %188 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %186, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %187, %"struct.std::__1::__list_node_base"** %188, align 8
  %189 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %182, i64 %31, i32 0, i32 1, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %187, %"struct.std::__1::__list_node_base"** %189, align 8
  %190 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %182, i64 %31, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %190, align 8
  %191 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %182, i64 %77, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %192 = load i64, i64* %191, align 8
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %217, label %194

194:                                              ; preds = %181
  %195 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %182, i64 %77, i32 0, i32 1, i32 0, i32 0, i32 1
  %196 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %195, align 8
  %197 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %182, i64 %77, i32 0, i32 1, i32 0, i32 0, i32 0
  %198 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %197, align 8
  %199 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %198, i64 0, i32 1
  %200 = bitcast %"struct.std::__1::__list_node_base"** %199 to i64*
  %201 = load i64, i64* %200, align 8
  %202 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %196, i64 0, i32 0
  %203 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %202, align 8
  %204 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %203, i64 0, i32 1
  %205 = bitcast %"struct.std::__1::__list_node_base"** %204 to i64*
  store i64 %201, i64* %205, align 8
  %206 = bitcast %"struct.std::__1::__list_node_base"* %196 to i64*
  %207 = load i64, i64* %206, align 8
  %208 = bitcast %"struct.std::__1::__list_node_base"** %199 to i64**
  %209 = load i64*, i64** %208, align 8
  store i64 %207, i64* %209, align 8
  %210 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %188, align 8
  %211 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %210, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %196, %"struct.std::__1::__list_node_base"** %211, align 8
  %212 = bitcast %"class.std::__1::list"* %186 to i64*
  %213 = load i64, i64* %212, align 8
  store i64 %213, i64* %206, align 8
  store %"struct.std::__1::__list_node_base"* %198, %"struct.std::__1::__list_node_base"** %188, align 8
  store %"struct.std::__1::__list_node_base"* %187, %"struct.std::__1::__list_node_base"** %199, align 8
  %214 = load i64, i64* %191, align 8
  %215 = load i64, i64* %190, align 8
  %216 = add i64 %215, %214
  store i64 %216, i64* %190, align 8
  store i64 0, i64* %191, align 8
  br label %217

217:                                              ; preds = %181, %194
  %218 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %13, align 8
  %219 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %218, i64 %77, i32 0, i32 0
  %220 = load i32, i32* %15, align 8
  store i32 %220, i32* %219, align 8
  %221 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %218, i64 %77, i32 0, i32 1
  %222 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %221, i64 0, i32 0, i32 0
  %223 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %221, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %222, %"struct.std::__1::__list_node_base"** %223, align 8
  %224 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %218, i64 %77, i32 0, i32 1, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %222, %"struct.std::__1::__list_node_base"** %224, align 8
  %225 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %218, i64 %77, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %225, align 8
  %226 = load i64, i64* %18, align 8
  %227 = icmp eq i64 %226, 0
  br i1 %227, label %249, label %228

228:                                              ; preds = %217
  %229 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %9, align 8
  %230 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %20, align 8
  %231 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %230, i64 0, i32 1
  %232 = bitcast %"struct.std::__1::__list_node_base"** %231 to i64*
  %233 = load i64, i64* %232, align 8
  %234 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %229, i64 0, i32 0
  %235 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %234, align 8
  %236 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %235, i64 0, i32 1
  %237 = bitcast %"struct.std::__1::__list_node_base"** %236 to i64*
  store i64 %233, i64* %237, align 8
  %238 = bitcast %"struct.std::__1::__list_node_base"* %229 to i64*
  %239 = load i64, i64* %238, align 8
  %240 = bitcast %"struct.std::__1::__list_node_base"** %231 to i64**
  %241 = load i64*, i64** %240, align 8
  store i64 %239, i64* %241, align 8
  %242 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %223, align 8
  %243 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %242, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %229, %"struct.std::__1::__list_node_base"** %243, align 8
  %244 = bitcast %"class.std::__1::list"* %221 to i64*
  %245 = load i64, i64* %244, align 8
  store i64 %245, i64* %238, align 8
  store %"struct.std::__1::__list_node_base"* %230, %"struct.std::__1::__list_node_base"** %223, align 8
  store %"struct.std::__1::__list_node_base"* %222, %"struct.std::__1::__list_node_base"** %231, align 8
  %246 = load i64, i64* %18, align 8
  %247 = load i64, i64* %225, align 8
  %248 = add i64 %247, %246
  store i64 %248, i64* %225, align 8
  store i64 0, i64* %18, align 8
  br label %249

249:                                              ; preds = %217, %228
  %250 = add i64 %31, -1
  br label %251

251:                                              ; preds = %83, %249, %142, %29
  %252 = phi i64 [ %31, %29 ], [ %31, %83 ], [ %31, %142 ], [ %250, %249 ]
  %253 = add i64 %252, 1
  %254 = load i64, i64* %5, align 8
  %255 = icmp eq i64 %253, %254
  br i1 %255, label %21, label %29
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8*, i64) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeImmEENS_19__map_value_compareImS2_NS_4lessImEELb1EEENS_9allocatorIS2_EEE12__find_equalImEERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS2_PNS_11__tree_nodeIS2_SC_EElEERPNS_15__tree_end_nodeISE_EESF_RKT_(%"class.std::__1::__tree"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.std::__1::__tree_node_base"** dereferenceable(8), i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %6 = ptrtoint %"class.std::__1::__tree_end_node"* %1 to i64
  %7 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = icmp eq %"class.std::__1::__tree_end_node"* %7, %1
  br i1 %8, label %15, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 4
  %11 = bitcast %"class.std::__1::__tree_end_node"* %10 to i64*
  %12 = load i64, i64* %4, align 8
  %13 = load i64, i64* %11, align 8
  %14 = icmp ult i64 %12, %13
  br i1 %14, label %15, label %90

15:                                               ; preds = %5, %9
  %16 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %17 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_end_node"* %17, %1
  %19 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 0, i32 0
  %20 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %19, align 8
  br i1 %18, label %47, label %21

21:                                               ; preds = %15
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %20, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %21, %23
  %24 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ %20, %21 ]
  %25 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %24, i64 0, i32 1
  %26 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %25, align 8
  %27 = icmp eq %"class.std::__1::__tree_node_base"* %26, null
  br i1 %27, label %39, label %23

28:                                               ; preds = %21, %28
  %29 = phi %"class.std::__1::__tree_end_node"* [ %33, %28 ], [ %1, %21 ]
  %30 = bitcast %"class.std::__1::__tree_end_node"* %29 to %"class.std::__1::__tree_node_base"*
  %31 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %29, i64 2
  %32 = bitcast %"class.std::__1::__tree_end_node"* %31 to %"class.std::__1::__tree_end_node"**
  %33 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %32, align 8
  %34 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %33, i64 0, i32 0
  %35 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %34, align 8
  %36 = icmp eq %"class.std::__1::__tree_node_base"* %35, %30
  br i1 %36, label %28, label %37

37:                                               ; preds = %28
  %38 = bitcast %"class.std::__1::__tree_end_node"* %33 to %"class.std::__1::__tree_node_base"*
  br label %39

39:                                               ; preds = %23, %37
  %40 = phi %"class.std::__1::__tree_node_base"* [ %38, %37 ], [ %24, %23 ]
  %41 = ptrtoint %"class.std::__1::__tree_node_base"* %40 to i64
  %42 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 1
  %43 = bitcast %"class.std::__1::__tree_node_base"* %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = load i64, i64* %4, align 8
  %46 = icmp ult i64 %44, %45
  br i1 %46, label %47, label %56

47:                                               ; preds = %15, %39
  %48 = phi i64 [ %41, %39 ], [ %6, %15 ]
  %49 = icmp eq %"class.std::__1::__tree_node_base"* %20, null
  br i1 %49, label %50, label %52

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %1, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %170

52:                                               ; preds = %47
  %53 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %48, i64* %53, align 8
  %54 = inttoptr i64 %48 to %"class.std::__1::__tree_node_base"*
  %55 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %54, i64 0, i32 1
  br label %170

56:                                               ; preds = %39
  %57 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node.44"**
  %58 = load %"class.std::__1::__tree_node.44"*, %"class.std::__1::__tree_node.44"** %57, align 8
  %59 = icmp eq %"class.std::__1::__tree_node.44"* %58, null
  br i1 %59, label %88, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %62

62:                                               ; preds = %84, %60
  %63 = phi %"class.std::__1::__tree_node.44"* [ %87, %84 ], [ %58, %60 ]
  %64 = phi %"class.std::__1::__tree_node_base"** [ %86, %84 ], [ %61, %60 ]
  %65 = getelementptr inbounds %"class.std::__1::__tree_node.44", %"class.std::__1::__tree_node.44"* %63, i64 0, i32 1, i32 0, i32 0
  %66 = load i64, i64* %65, align 8
  %67 = icmp ult i64 %45, %66
  br i1 %67, label %68, label %74

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.std::__1::__tree_node.44", %"class.std::__1::__tree_node.44"* %63, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %69, align 8
  %71 = icmp eq %"class.std::__1::__tree_node_base"* %70, null
  br i1 %71, label %72, label %84

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.std::__1::__tree_node.44", %"class.std::__1::__tree_node.44"* %63, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %73, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %170

74:                                               ; preds = %62
  %75 = icmp ult i64 %66, %45
  br i1 %75, label %76, label %82

76:                                               ; preds = %74
  %77 = getelementptr inbounds %"class.std::__1::__tree_node.44", %"class.std::__1::__tree_node.44"* %63, i64 0, i32 0, i32 1
  %78 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %77, align 8
  %79 = icmp eq %"class.std::__1::__tree_node_base"* %78, null
  br i1 %79, label %80, label %84

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"class.std::__1::__tree_node.44", %"class.std::__1::__tree_node.44"* %63, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %81, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %170

82:                                               ; preds = %74
  %83 = getelementptr inbounds %"class.std::__1::__tree_node.44", %"class.std::__1::__tree_node.44"* %63, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %83, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %170

84:                                               ; preds = %76, %68
  %85 = phi %"class.std::__1::__tree_node_base"* [ %70, %68 ], [ %78, %76 ]
  %86 = phi %"class.std::__1::__tree_node_base"** [ %69, %68 ], [ %77, %76 ]
  %87 = bitcast %"class.std::__1::__tree_node_base"* %85 to %"class.std::__1::__tree_node.44"*
  br label %62

88:                                               ; preds = %56
  store %"class.std::__1::__tree_end_node"* %7, %"class.std::__1::__tree_end_node"** %2, align 8
  %89 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %7, i64 0, i32 0
  br label %170

90:                                               ; preds = %9
  %91 = icmp ult i64 %13, %12
  br i1 %91, label %92, label %167

92:                                               ; preds = %90
  %93 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 1, i32 0
  %94 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %93, align 8
  %95 = icmp eq %"class.std::__1::__tree_node_base"* %94, null
  br i1 %95, label %96, label %104

96:                                               ; preds = %92
  %97 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  %98 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 2
  %99 = bitcast %"class.std::__1::__tree_end_node"* %98 to %"class.std::__1::__tree_end_node"**
  %100 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %99, align 8
  %101 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %100, i64 0, i32 0
  %102 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %101, align 8
  %103 = icmp eq %"class.std::__1::__tree_node_base"* %102, %97
  br i1 %103, label %120, label %111

104:                                              ; preds = %92, %104
  %105 = phi %"class.std::__1::__tree_node_base"* [ %107, %104 ], [ %94, %92 ]
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %105, i64 0, i32 0, i32 0
  %107 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %106, align 8
  %108 = icmp eq %"class.std::__1::__tree_node_base"* %107, null
  br i1 %108, label %109, label %104

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %105, i64 0, i32 0
  br label %120

111:                                              ; preds = %96, %111
  %112 = phi %"class.std::__1::__tree_end_node"** [ %115, %111 ], [ %99, %96 ]
  %113 = bitcast %"class.std::__1::__tree_end_node"** %112 to %"class.std::__1::__tree_node_base"**
  %114 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %113, align 8
  %115 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %114, i64 0, i32 2
  %116 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %115, align 8
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %116, i64 0, i32 0
  %118 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %117, align 8
  %119 = icmp eq %"class.std::__1::__tree_node_base"* %118, %114
  br i1 %119, label %120, label %111

120:                                              ; preds = %111, %109, %96
  %121 = phi %"class.std::__1::__tree_end_node"* [ %110, %109 ], [ %100, %96 ], [ %116, %111 ]
  %122 = icmp eq %"class.std::__1::__tree_end_node"* %121, %7
  br i1 %122, label %128, label %123

123:                                              ; preds = %120
  %124 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %121, i64 4
  %125 = bitcast %"class.std::__1::__tree_end_node"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = icmp ult i64 %12, %126
  br i1 %127, label %128, label %133

128:                                              ; preds = %120, %123
  br i1 %95, label %129, label %131

129:                                              ; preds = %128
  %130 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %6, i64* %130, align 8
  br label %170

131:                                              ; preds = %128
  store %"class.std::__1::__tree_end_node"* %121, %"class.std::__1::__tree_end_node"** %2, align 8
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %121, i64 0, i32 0
  br label %170

133:                                              ; preds = %123
  %134 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node.44"**
  %135 = load %"class.std::__1::__tree_node.44"*, %"class.std::__1::__tree_node.44"** %134, align 8
  %136 = icmp eq %"class.std::__1::__tree_node.44"* %135, null
  br i1 %136, label %165, label %137

137:                                              ; preds = %133
  %138 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %139

139:                                              ; preds = %161, %137
  %140 = phi %"class.std::__1::__tree_node.44"* [ %164, %161 ], [ %135, %137 ]
  %141 = phi %"class.std::__1::__tree_node_base"** [ %163, %161 ], [ %138, %137 ]
  %142 = getelementptr inbounds %"class.std::__1::__tree_node.44", %"class.std::__1::__tree_node.44"* %140, i64 0, i32 1, i32 0, i32 0
  %143 = load i64, i64* %142, align 8
  %144 = icmp ult i64 %12, %143
  br i1 %144, label %145, label %151

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.std::__1::__tree_node.44", %"class.std::__1::__tree_node.44"* %140, i64 0, i32 0, i32 0, i32 0
  %147 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %146, align 8
  %148 = icmp eq %"class.std::__1::__tree_node_base"* %147, null
  br i1 %148, label %149, label %161

149:                                              ; preds = %145
  %150 = getelementptr inbounds %"class.std::__1::__tree_node.44", %"class.std::__1::__tree_node.44"* %140, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %150, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %170

151:                                              ; preds = %139
  %152 = icmp ult i64 %143, %12
  br i1 %152, label %153, label %159

153:                                              ; preds = %151
  %154 = getelementptr inbounds %"class.std::__1::__tree_node.44", %"class.std::__1::__tree_node.44"* %140, i64 0, i32 0, i32 1
  %155 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %154, align 8
  %156 = icmp eq %"class.std::__1::__tree_node_base"* %155, null
  br i1 %156, label %157, label %161

157:                                              ; preds = %153
  %158 = getelementptr inbounds %"class.std::__1::__tree_node.44", %"class.std::__1::__tree_node.44"* %140, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %158, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %170

159:                                              ; preds = %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node.44", %"class.std::__1::__tree_node.44"* %140, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %160, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %170

161:                                              ; preds = %153, %145
  %162 = phi %"class.std::__1::__tree_node_base"* [ %147, %145 ], [ %155, %153 ]
  %163 = phi %"class.std::__1::__tree_node_base"** [ %146, %145 ], [ %154, %153 ]
  %164 = bitcast %"class.std::__1::__tree_node_base"* %162 to %"class.std::__1::__tree_node.44"*
  br label %139

165:                                              ; preds = %133
  store %"class.std::__1::__tree_end_node"* %7, %"class.std::__1::__tree_end_node"** %2, align 8
  %166 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %7, i64 0, i32 0
  br label %170

167:                                              ; preds = %90
  %168 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %6, i64* %168, align 8
  %169 = bitcast %"class.std::__1::__tree_node_base"** %3 to i64*
  store i64 %6, i64* %169, align 8
  br label %170

170:                                              ; preds = %129, %131, %149, %157, %159, %165, %50, %52, %72, %80, %82, %88, %167
  %171 = phi %"class.std::__1::__tree_node_base"** [ %3, %167 ], [ %51, %50 ], [ %55, %52 ], [ %69, %72 ], [ %77, %80 ], [ %64, %82 ], [ %89, %88 ], [ %93, %129 ], [ %132, %131 ], [ %146, %149 ], [ %154, %157 ], [ %141, %159 ], [ %166, %165 ]
  ret %"class.std::__1::__tree_node_base"** %171
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !11
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !11
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !11
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !11
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !11
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %56, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %56
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %56, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %57, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %99
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !11
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %98, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %138, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %140, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !11
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !11
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %142
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !11
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %142, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !11
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %143
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %143, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %143, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !11
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %98, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %272, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %274, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !11
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !11
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !11
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %276
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !11
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %277
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %277, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %277, %306 ], [ %277, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !11
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %142, %165 ], [ %276, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 0, i32 33}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__14listINS_8multisetImNS_4lessImEENS_9allocatorImEEEENS4_IS6_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS6_PvEEEE: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__14listINS_8multisetImNS_4lessImEENS_9allocatorImEEEENS4_IS6_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS6_PvEEEE"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNSt3__16__treeINS_12__value_typeImmEENS_19__map_value_compareImS2_NS_4lessImEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJNS_4pairIKmmEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISH_EEEEEEDpOT_: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__16__treeINS_12__value_typeImmEENS_19__map_value_compareImS2_NS_4lessImEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJNS_4pairIKmmEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISH_EEEEEEDpOT_"}
!11 = !{i8 0, i8 2}
