; ModuleID = '../../ui/gfx/geometry/resize_utils.cc'
source_filename = "../../ui/gfx/geometry/resize_utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx21SizeRectToAspectRatioENS_10ResizeEdgeEfRKNS_4SizeES3_PNS_4RectE(i32, float, %"class.gfx::Size"* dereferenceable(8), %"class.gfx::Size"* dereferenceable(8), %"class.gfx::Rect"*) local_unnamed_addr #0 {
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %"class.gfx::Size"*
  %8 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #4
  %9 = bitcast i64* %6 to i32*
  %10 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %7, i64 0, i32 1
  %11 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 1
  %12 = bitcast %"class.gfx::Size"* %11 to i64*
  %13 = load i64, i64* %12, align 4
  store i64 %13, i64* %6, align 8
  switch i32 %0, label %63 [
    i32 3, label %14
    i32 4, label %14
    i32 6, label %14
    i32 1, label %14
  ]

14:                                               ; preds = %5, %5, %5, %5
  %15 = trunc i64 %13 to i32
  %16 = sitofp i32 %15 to float
  %17 = fdiv float %16, %1
  %18 = fcmp ult float %17, 0.000000e+00
  %19 = fadd float %17, 5.000000e-01
  %20 = tail call float @llvm.floor.f32(float %19) #4
  %21 = fadd float %17, -5.000000e-01
  %22 = tail call float @llvm.ceil.f32(float %21) #4
  %23 = select i1 %18, float %22, float %20
  %24 = fcmp ult float %23, 0xC1E0000000000000
  %25 = fcmp ugt float %23, 0x41DFFFFFE0000000
  %26 = fcmp ogt float %23, 0xC1E0000000000000
  %27 = select i1 %26, float %23, float 0xC1E0000000000000
  %28 = fptosi float %27 to i32
  %29 = select i1 %24, i32 0, i32 2147483647
  %30 = select i1 %25, i32 %29, i32 %28
  %31 = icmp sgt i32 %30, 0
  %32 = select i1 %31, i32 %30, i32 0
  store i32 %32, i32* %10, align 4
  %33 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %2, i64 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = icmp sgt i32 %34, %32
  %36 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %3, i64 0, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = icmp sgt i32 %32, %37
  %39 = or i1 %35, %38
  br i1 %39, label %40, label %113

40:                                               ; preds = %14
  %41 = select i1 %35, i32 %34, i32 %32
  %42 = icmp slt i32 %37, %41
  %43 = select i1 %42, i32 %37, i32 %41
  %44 = icmp sgt i32 %43, 0
  %45 = select i1 %44, i32 %43, i32 0
  store i32 %45, i32* %10, align 4
  %46 = sitofp i32 %45 to float
  %47 = fmul float %46, %1
  %48 = fcmp ult float %47, 0.000000e+00
  %49 = fadd float %47, 5.000000e-01
  %50 = tail call float @llvm.floor.f32(float %49) #4
  %51 = fadd float %47, -5.000000e-01
  %52 = tail call float @llvm.ceil.f32(float %51) #4
  %53 = select i1 %48, float %52, float %50
  %54 = fcmp ult float %53, 0xC1E0000000000000
  %55 = fcmp ugt float %53, 0x41DFFFFFE0000000
  %56 = fcmp ogt float %53, 0xC1E0000000000000
  %57 = select i1 %56, float %53, float 0xC1E0000000000000
  %58 = fptosi float %57 to i32
  %59 = select i1 %54, i32 0, i32 2147483647
  %60 = select i1 %55, i32 %59, i32 %58
  %61 = icmp sgt i32 %60, 0
  %62 = select i1 %61, i32 %60, i32 0
  store i32 %62, i32* %9, align 8
  br label %113

63:                                               ; preds = %5
  %64 = lshr i64 %13, 32
  %65 = trunc i64 %64 to i32
  %66 = sitofp i32 %65 to float
  %67 = fmul float %66, %1
  %68 = fcmp ult float %67, 0.000000e+00
  %69 = fadd float %67, 5.000000e-01
  %70 = tail call float @llvm.floor.f32(float %69) #4
  %71 = fadd float %67, -5.000000e-01
  %72 = tail call float @llvm.ceil.f32(float %71) #4
  %73 = select i1 %68, float %72, float %70
  %74 = fcmp ult float %73, 0xC1E0000000000000
  %75 = fcmp ugt float %73, 0x41DFFFFFE0000000
  %76 = fcmp ogt float %73, 0xC1E0000000000000
  %77 = select i1 %76, float %73, float 0xC1E0000000000000
  %78 = fptosi float %77 to i32
  %79 = select i1 %74, i32 0, i32 2147483647
  %80 = select i1 %75, i32 %79, i32 %78
  %81 = icmp sgt i32 %80, 0
  %82 = select i1 %81, i32 %80, i32 0
  store i32 %82, i32* %9, align 8
  %83 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %2, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = icmp sgt i32 %84, %82
  %86 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %3, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = icmp sgt i32 %82, %87
  %89 = or i1 %85, %88
  br i1 %89, label %90, label %113

90:                                               ; preds = %63
  %91 = select i1 %85, i32 %84, i32 %82
  %92 = icmp slt i32 %87, %91
  %93 = select i1 %92, i32 %87, i32 %91
  %94 = icmp sgt i32 %93, 0
  %95 = select i1 %94, i32 %93, i32 0
  store i32 %95, i32* %9, align 8
  %96 = sitofp i32 %95 to float
  %97 = fdiv float %96, %1
  %98 = fcmp ult float %97, 0.000000e+00
  %99 = fadd float %97, 5.000000e-01
  %100 = tail call float @llvm.floor.f32(float %99) #4
  %101 = fadd float %97, -5.000000e-01
  %102 = tail call float @llvm.ceil.f32(float %101) #4
  %103 = select i1 %98, float %102, float %100
  %104 = fcmp ult float %103, 0xC1E0000000000000
  %105 = fcmp ugt float %103, 0x41DFFFFFE0000000
  %106 = fcmp ogt float %103, 0xC1E0000000000000
  %107 = select i1 %106, float %103, float 0xC1E0000000000000
  %108 = fptosi float %107 to i32
  %109 = select i1 %104, i32 0, i32 2147483647
  %110 = select i1 %105, i32 %109, i32 %108
  %111 = icmp sgt i32 %110, 0
  %112 = select i1 %111, i32 %110, i32 0
  store i32 %112, i32* %10, align 4
  br label %113

113:                                              ; preds = %63, %14, %90, %40
  call void @_ZN3gfx4Size8SetToMinERKS0_(%"class.gfx::Size"* nonnull %7, %"class.gfx::Size"* dereferenceable(8) %3) #4
  call void @_ZN3gfx4Size8SetToMaxERKS0_(%"class.gfx::Size"* nonnull %7, %"class.gfx::Size"* dereferenceable(8) %2) #4
  %114 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 0, i32 1
  %117 = load i32, i32* %116, align 4
  %118 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 1, i32 0
  %119 = load i32, i32* %118, align 4
  %120 = add nsw i32 %119, %115
  %121 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 1, i32 1
  %122 = load i32, i32* %121, align 4
  %123 = add nsw i32 %122, %117
  switch i32 %0, label %154 [
    i32 4, label %124
    i32 0, label %124
    i32 5, label %129
    i32 3, label %134
    i32 6, label %134
    i32 7, label %139
    i32 1, label %144
    i32 2, label %149
  ]

124:                                              ; preds = %113, %113
  %125 = load i32, i32* %9, align 8
  %126 = add nsw i32 %125, %115
  %127 = load i32, i32* %10, align 4
  %128 = add nsw i32 %127, %117
  br label %154

129:                                              ; preds = %113
  %130 = load i32, i32* %9, align 8
  %131 = add nsw i32 %130, %115
  %132 = load i32, i32* %10, align 4
  %133 = sub nsw i32 %123, %132
  br label %154

134:                                              ; preds = %113, %113
  %135 = load i32, i32* %9, align 8
  %136 = sub nsw i32 %120, %135
  %137 = load i32, i32* %10, align 4
  %138 = sub nsw i32 %123, %137
  br label %154

139:                                              ; preds = %113
  %140 = load i32, i32* %9, align 8
  %141 = add nsw i32 %140, %115
  %142 = load i32, i32* %10, align 4
  %143 = sub nsw i32 %123, %142
  br label %154

144:                                              ; preds = %113
  %145 = load i32, i32* %9, align 8
  %146 = sub nsw i32 %120, %145
  %147 = load i32, i32* %10, align 4
  %148 = add nsw i32 %147, %117
  br label %154

149:                                              ; preds = %113
  %150 = load i32, i32* %9, align 8
  %151 = add nsw i32 %150, %115
  %152 = load i32, i32* %10, align 4
  %153 = add nsw i32 %152, %117
  br label %154

154:                                              ; preds = %113, %149, %144, %139, %134, %129, %124
  %155 = phi i32 [ %115, %113 ], [ %115, %149 ], [ %146, %144 ], [ %115, %139 ], [ %136, %134 ], [ %115, %129 ], [ %115, %124 ]
  %156 = phi i32 [ %117, %113 ], [ %117, %149 ], [ %117, %144 ], [ %143, %139 ], [ %138, %134 ], [ %133, %129 ], [ %117, %124 ]
  %157 = phi i32 [ %120, %113 ], [ %151, %149 ], [ %120, %144 ], [ %141, %139 ], [ %120, %134 ], [ %131, %129 ], [ %126, %124 ]
  %158 = phi i32 [ %123, %113 ], [ %153, %149 ], [ %148, %144 ], [ %123, %139 ], [ %123, %134 ], [ %123, %129 ], [ %128, %124 ]
  call void @_ZN3gfx4Rect11SetByBoundsEiiii(%"class.gfx::Rect"* %4, i32 %155, i32 %156, i32 %157, i32 %158) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN3gfx4Size8SetToMinERKS0_(%"class.gfx::Size"*, %"class.gfx::Size"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN3gfx4Size8SetToMaxERKS0_(%"class.gfx::Size"*, %"class.gfx::Size"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN3gfx4Rect11SetByBoundsEiiii(%"class.gfx::Rect"*, i32, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #3

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
