; ModuleID = '../../third_party/pdfium/core/fxcrt/fx_string.cpp'
source_filename = "../../third_party/pdfium/core/fxcrt/fx_string.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%"class.fxcrt::StringViewTemplate" = type { %"class.pdfium::span" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr", i64 }
%"class.fxcrt::UnownedPtr" = type { i32* }
%class.CFX_UTF8Encoder = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i8* }
%"class.fxcrt::StringViewTemplate.4" = type { %"class.pdfium::span.5" }
%"class.pdfium::span.5" = type { %"class.fxcrt::UnownedPtr.6", i64 }
%"class.fxcrt::UnownedPtr.6" = type { i8* }
%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr.7" }
%"class.fxcrt::RetainPtr.7" = type { %"class.std::__1::unique_ptr.8" }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.fxcrt::StringDataTemplate.11"* }
%"class.fxcrt::StringDataTemplate.11" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>
%class.CFX_UTF8Decoder = type { i32, i32, %class.CFX_WideTextBuf }
%class.CFX_WideTextBuf = type { %class.CFX_BinaryBuf }
%class.CFX_BinaryBuf = type { i32 (...)**, i64, i64, i64, %"class.std::__1::unique_ptr.15" }
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.2" }

@_ZN12_GLOBAL__N_120kFractionScalesFloatE = internal unnamed_addr constant [11 x float] [float 0x3FB99999A0000000, float 0x3F847AE140000000, float 0x3F50624DE0000000, float 0x3F1A36E2E0000000, float 0x3EE4F8B580000000, float 0x3EB0C6F7A0000000, float 0x3E7AD7F2A0000000, float 0x3E45798EE0000000, float 0x3E112E0BE0000000, float 0x3DDB7CDFE0000000, float 0x3DA5FD7FE0000000], align 16
@_ZN12_GLOBAL__N_121kFractionScalesDoubleE = internal unnamed_addr constant [11 x double] [double 1.000000e-01, double 1.000000e-02, double 1.000000e-03, double 1.000000e-04, double 1.000000e-05, double 0x3EB0C6F7A0B5ED8D, double 0x3E7AD7F29ABCAF48, double 1.000000e-08, double 1.000000e-09, double 1.000000e-10, double 0x3DA5FD7FE1796495], align 16
@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z13FX_UTF8EncodeN5fxcrt18StringViewTemplateIwEE(%"class.fxcrt::ByteString"* noalias sret, %"class.fxcrt::StringViewTemplate"* nocapture readonly) local_unnamed_addr #0 {
  %3 = alloca %class.CFX_UTF8Encoder, align 8
  %4 = alloca %"class.fxcrt::StringViewTemplate.4", align 8
  %5 = bitcast %class.CFX_UTF8Encoder* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #5
  %6 = getelementptr inbounds %class.CFX_UTF8Encoder, %class.CFX_UTF8Encoder* %3, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast %class.CFX_UTF8Encoder* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 24, i1 false)
  call void @_ZN15CFX_UTF8EncoderC1Ev(%class.CFX_UTF8Encoder* nonnull %3) #5
  %8 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %1, i64 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %1, i64 0, i32 0, i32 0, i32 0
  br label %21

13:                                               ; preds = %21, %2
  %14 = bitcast %class.CFX_UTF8Encoder* %3 to i64*
  %15 = load i64, i64* %14, align 8, !noalias !2
  %16 = bitcast i8** %6 to i64*
  %17 = load i64, i64* %16, align 8, !noalias !2
  %18 = sub i64 %17, %15
  %19 = bitcast %"class.fxcrt::StringViewTemplate.4"* %4 to i64*
  store i64 %15, i64* %19, align 8, !alias.scope !2
  %20 = getelementptr inbounds %"class.fxcrt::StringViewTemplate.4", %"class.fxcrt::StringViewTemplate.4"* %4, i64 0, i32 0, i32 1
  store i64 %18, i64* %20, align 8, !alias.scope !2
  call void @_ZN5fxcrt10ByteStringC1ENS_18StringViewTemplateIcEE(%"class.fxcrt::ByteString"* %0, %"class.fxcrt::StringViewTemplate.4"* nonnull %4) #5
  call void @_ZN15CFX_UTF8EncoderD1Ev(%class.CFX_UTF8Encoder* nonnull %3) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #5
  ret void

21:                                               ; preds = %11, %21
  %22 = phi i64 [ 0, %11 ], [ %26, %21 ]
  %23 = load i32*, i32** %12, align 8
  %24 = getelementptr inbounds i32, i32* %23, i64 %22
  %25 = load i32, i32* %24, align 4
  call void @_ZN15CFX_UTF8Encoder5InputEw(%class.CFX_UTF8Encoder* nonnull %3, i32 signext %25) #5
  %26 = add nuw i64 %22, 1
  %27 = load i64, i64* %8, align 8
  %28 = icmp ult i64 %26, %27
  br i1 %28, label %21, label %13
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN15CFX_UTF8EncoderC1Ev(%class.CFX_UTF8Encoder*) unnamed_addr #2

declare void @_ZN15CFX_UTF8Encoder5InputEw(%class.CFX_UTF8Encoder*, i32 signext) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN5fxcrt10ByteStringC1ENS_18StringViewTemplateIcEE(%"class.fxcrt::ByteString"*, %"class.fxcrt::StringViewTemplate.4"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN15CFX_UTF8EncoderD1Ev(%class.CFX_UTF8Encoder*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z13FX_UTF8DecodeN5fxcrt18StringViewTemplateIcEE(%"class.fxcrt::WideString"* noalias sret, %"class.fxcrt::StringViewTemplate.4"* nocapture readonly) local_unnamed_addr #0 {
  %3 = alloca %class.CFX_UTF8Decoder, align 8
  %4 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %5 = getelementptr inbounds %"class.fxcrt::StringViewTemplate.4", %"class.fxcrt::StringViewTemplate.4"* %1, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %2
  tail call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* %0) #5
  br label %25

9:                                                ; preds = %2
  %10 = bitcast %class.CFX_UTF8Decoder* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %10) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 48, i1 false)
  call void @_ZN15CFX_UTF8DecoderC1Ev(%class.CFX_UTF8Decoder* nonnull %3) #5
  %11 = load i64, i64* %5, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %15, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.fxcrt::StringViewTemplate.4", %"class.fxcrt::StringViewTemplate.4"* %1, i64 0, i32 0, i32 0, i32 0
  br label %17

15:                                               ; preds = %17, %9
  %16 = getelementptr inbounds %class.CFX_UTF8Decoder, %class.CFX_UTF8Decoder* %3, i64 0, i32 2
  call void @_ZNK15CFX_WideTextBuf12AsStringViewEv(%"class.fxcrt::StringViewTemplate"* nonnull sret %4, %class.CFX_WideTextBuf* %16) #5
  call void @_ZN5fxcrt10WideStringC1ENS_18StringViewTemplateIwEE(%"class.fxcrt::WideString"* %0, %"class.fxcrt::StringViewTemplate"* nonnull %4) #5
  call void @_ZN15CFX_UTF8DecoderD1Ev(%class.CFX_UTF8Decoder* nonnull %3) #5
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #5
  br label %25

17:                                               ; preds = %13, %17
  %18 = phi i64 [ 0, %13 ], [ %22, %17 ]
  %19 = load i8*, i8** %14, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  %21 = load i8, i8* %20, align 1
  call void @_ZN15CFX_UTF8Decoder5InputEh(%class.CFX_UTF8Decoder* nonnull %3, i8 zeroext %21) #5
  %22 = add nuw i64 %18, 1
  %23 = load i64, i64* %5, align 8
  %24 = icmp ult i64 %22, %23
  br i1 %24, label %17, label %15

25:                                               ; preds = %15, %8
  ret void
}

declare void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN15CFX_UTF8DecoderC1Ev(%class.CFX_UTF8Decoder*) unnamed_addr #2

declare void @_ZN15CFX_UTF8Decoder5InputEh(%class.CFX_UTF8Decoder*, i8 zeroext) local_unnamed_addr #2

declare void @_ZN5fxcrt10WideStringC1ENS_18StringViewTemplateIwEE(%"class.fxcrt::WideString"*, %"class.fxcrt::StringViewTemplate"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN15CFX_UTF8DecoderD1Ev(%class.CFX_UTF8Decoder*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden float @_Z13StringToFloatN5fxcrt18StringViewTemplateIcEE(%"class.fxcrt::StringViewTemplate.4"* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.fxcrt::StringViewTemplate.4", %"class.fxcrt::StringViewTemplate.4"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.fxcrt::StringViewTemplate.4", %"class.fxcrt::StringViewTemplate.4"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %95, label %7

7:                                                ; preds = %1
  %8 = trunc i64 %5 to i32
  %9 = load i8, i8* %3, align 1
  %10 = icmp eq i8 %9, 43
  %11 = icmp eq i8 %9, 45
  %12 = or i1 %10, %11
  %13 = zext i1 %12 to i32
  %14 = icmp slt i32 %13, %8
  br i1 %14, label %15, label %32

15:                                               ; preds = %7
  %16 = zext i1 %12 to i64
  %17 = and i64 %5, 4294967295
  br label %18

18:                                               ; preds = %26, %15
  %19 = phi i64 [ %16, %15 ], [ %27, %26 ]
  %20 = phi i32 [ %13, %15 ], [ %28, %26 ]
  %21 = icmp ugt i64 %5, %19
  br i1 %21, label %23, label %22, !prof !5

22:                                               ; preds = %18
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #5, !srcloc !6
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #5, !srcloc !7
  unreachable

23:                                               ; preds = %18
  %24 = getelementptr inbounds i8, i8* %3, i64 %19
  %25 = load i8, i8* %24, align 1
  switch i8 %25, label %30 [
    i8 43, label %26
    i8 45, label %26
  ]

26:                                               ; preds = %23, %23
  %27 = add nuw nsw i64 %19, 1
  %28 = add nuw nsw i32 %20, 1
  %29 = icmp eq i64 %27, %17
  br i1 %29, label %32, label %18

30:                                               ; preds = %23
  %31 = trunc i64 %19 to i32
  br label %32

32:                                               ; preds = %26, %30, %7
  %33 = phi i32 [ %13, %7 ], [ %31, %30 ], [ %28, %26 ]
  %34 = icmp slt i32 %33, %8
  br i1 %34, label %35, label %91

35:                                               ; preds = %32
  %36 = zext i32 %33 to i64
  br label %37

37:                                               ; preds = %56, %35
  %38 = phi i64 [ %36, %35 ], [ %60, %56 ]
  %39 = phi float [ 0.000000e+00, %35 ], [ %59, %56 ]
  %40 = icmp ugt i64 %5, %38
  br i1 %40, label %42, label %41, !prof !5

41:                                               ; preds = %37
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #5, !srcloc !6
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #5, !srcloc !7
  unreachable

42:                                               ; preds = %37
  %43 = getelementptr inbounds i8, i8* %3, i64 %38
  %44 = load i8, i8* %43, align 1
  %45 = icmp eq i8 %44, 46
  br i1 %45, label %46, label %48

46:                                               ; preds = %42
  %47 = and i64 %38, 4294967295
  br label %63

48:                                               ; preds = %42
  %49 = fmul float %39, 1.000000e+01
  %50 = icmp slt i8 %44, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %48
  %52 = sext i8 %44 to i32
  %53 = add nsw i32 %52, -48
  %54 = icmp ult i32 %53, 10
  %55 = select i1 %54, i32 %53, i32 0
  br label %56

56:                                               ; preds = %51, %48
  %57 = phi i32 [ %55, %51 ], [ 0, %48 ]
  %58 = sitofp i32 %57 to float
  %59 = fadd float %49, %58
  %60 = add nuw nsw i64 %38, 1
  %61 = trunc i64 %60 to i32
  %62 = icmp slt i32 %61, %8
  br i1 %62, label %37, label %91

63:                                               ; preds = %84, %46
  %64 = phi i64 [ %47, %46 ], [ %67, %84 ]
  %65 = phi float [ %39, %46 ], [ %88, %84 ]
  %66 = phi i64 [ 0, %46 ], [ %89, %84 ]
  %67 = add nuw nsw i64 %64, 1
  %68 = trunc i64 %67 to i32
  %69 = icmp slt i32 %68, %8
  br i1 %69, label %70, label %91

70:                                               ; preds = %63
  %71 = getelementptr inbounds [11 x float], [11 x float]* @_ZN12_GLOBAL__N_120kFractionScalesFloatE, i64 0, i64 %66
  %72 = load float, float* %71, align 4
  %73 = icmp ugt i64 %5, %67
  br i1 %73, label %75, label %74, !prof !5

74:                                               ; preds = %70
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #5, !srcloc !6
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #5, !srcloc !7
  unreachable

75:                                               ; preds = %70
  %76 = getelementptr inbounds i8, i8* %3, i64 %67
  %77 = load i8, i8* %76, align 1
  %78 = icmp slt i8 %77, 0
  br i1 %78, label %84, label %79

79:                                               ; preds = %75
  %80 = sext i8 %77 to i32
  %81 = add nsw i32 %80, -48
  %82 = icmp ult i32 %81, 10
  %83 = select i1 %82, i32 %81, i32 0
  br label %84

84:                                               ; preds = %79, %75
  %85 = phi i32 [ %83, %79 ], [ 0, %75 ]
  %86 = sitofp i32 %85 to float
  %87 = fmul float %72, %86
  %88 = fadd float %65, %87
  %89 = add nuw nsw i64 %66, 1
  %90 = icmp eq i64 %89, 11
  br i1 %90, label %91, label %63

91:                                               ; preds = %56, %84, %63, %32
  %92 = phi float [ 0.000000e+00, %32 ], [ %88, %84 ], [ %65, %63 ], [ %59, %56 ]
  %93 = fsub float -0.000000e+00, %92
  %94 = select i1 %11, float %93, float %92
  br label %95

95:                                               ; preds = %1, %91
  %96 = phi float [ %94, %91 ], [ 0.000000e+00, %1 ]
  ret float %96
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden float @_Z13StringToFloatN5fxcrt18StringViewTemplateIwEE(%"class.fxcrt::StringViewTemplate"* nocapture readonly) local_unnamed_addr #0 {
  %2 = alloca %class.CFX_UTF8Encoder, align 8
  %3 = alloca %"class.fxcrt::StringViewTemplate.4", align 8
  %4 = alloca %"class.fxcrt::StringViewTemplate.4", align 8
  %5 = alloca %"class.fxcrt::ByteString", align 8
  %6 = bitcast %"class.fxcrt::ByteString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #5
  %7 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %0, i64 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.fxcrt::StringViewTemplate.4"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11)
  %12 = bitcast %class.CFX_UTF8Encoder* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #5, !noalias !8
  %13 = getelementptr inbounds %class.CFX_UTF8Encoder, %class.CFX_UTF8Encoder* %2, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false) #5, !noalias !8
  call void @_ZN15CFX_UTF8EncoderC1Ev(%class.CFX_UTF8Encoder* nonnull %2) #5, !noalias !8
  %14 = icmp eq i64 %10, 0
  br i1 %14, label %21, label %15

15:                                               ; preds = %1, %15
  %16 = phi i64 [ %19, %15 ], [ 0, %1 ]
  %17 = getelementptr inbounds i32, i32* %8, i64 %16
  %18 = load i32, i32* %17, align 4
  call void @_ZN15CFX_UTF8Encoder5InputEw(%class.CFX_UTF8Encoder* nonnull %2, i32 signext %18) #5
  %19 = add nuw i64 %16, 1
  %20 = icmp eq i64 %19, %10
  br i1 %20, label %21, label %15

21:                                               ; preds = %15, %1
  %22 = bitcast %class.CFX_UTF8Encoder* %2 to i64*
  %23 = load i64, i64* %22, align 8, !noalias !11
  %24 = bitcast i8** %13 to i64*
  %25 = load i64, i64* %24, align 8, !noalias !11
  %26 = sub i64 %25, %23
  %27 = bitcast %"class.fxcrt::StringViewTemplate.4"* %3 to i64*
  store i64 %23, i64* %27, align 8, !alias.scope !14, !noalias !8
  %28 = getelementptr inbounds %"class.fxcrt::StringViewTemplate.4", %"class.fxcrt::StringViewTemplate.4"* %3, i64 0, i32 0, i32 1
  store i64 %26, i64* %28, align 8, !alias.scope !14, !noalias !8
  call void @_ZN5fxcrt10ByteStringC1ENS_18StringViewTemplateIcEE(%"class.fxcrt::ByteString"* nonnull %5, %"class.fxcrt::StringViewTemplate.4"* nonnull %3) #5
  call void @_ZN15CFX_UTF8EncoderD1Ev(%class.CFX_UTF8Encoder* nonnull %2) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #5, !noalias !8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11)
  %29 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %29, align 8
  %31 = icmp eq %"class.fxcrt::StringDataTemplate"* %30, null
  %32 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %30, i64 0, i32 3
  %33 = select i1 %31, [1 x i8]* @.str, [1 x i8]* %32
  %34 = getelementptr inbounds [1 x i8], [1 x i8]* %33, i64 0, i64 0
  %35 = icmp eq [1 x i8]* %33, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %21
  %37 = call i64 @strlen(i8* nonnull %34) #6
  br label %38

38:                                               ; preds = %21, %36
  %39 = phi i64 [ %37, %36 ], [ 0, %21 ]
  %40 = getelementptr inbounds %"class.fxcrt::StringViewTemplate.4", %"class.fxcrt::StringViewTemplate.4"* %4, i64 0, i32 0, i32 0, i32 0
  store i8* %34, i8** %40, align 8
  %41 = getelementptr inbounds %"class.fxcrt::StringViewTemplate.4", %"class.fxcrt::StringViewTemplate.4"* %4, i64 0, i32 0, i32 1
  store i64 %39, i64* %41, align 8
  %42 = call float @_Z13StringToFloatN5fxcrt18StringViewTemplateIcEE(%"class.fxcrt::StringViewTemplate.4"* nonnull %4)
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #5
  ret float %42
}

; Function Attrs: nounwind
declare void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_Z13FloatToStringfPc(float, i8* nocapture) local_unnamed_addr #0 {
  %3 = alloca [32 x i8], align 16
  store i8 48, i8* %1, align 1
  %4 = getelementptr inbounds i8, i8* %1, i64 1
  store i8 0, i8* %4, align 1
  %5 = fcmp oeq float %0, 0.000000e+00
  br i1 %5, label %55, label %6

6:                                                ; preds = %2
  %7 = fcmp olt float %0, 0.000000e+00
  %8 = fsub float -0.000000e+00, %0
  %9 = select i1 %7, float %8, float %0
  %10 = tail call i32 @FXSYS_roundf(float %9) #5
  %11 = icmp sgt i32 %10, 99999
  br i1 %11, label %23, label %12

12:                                               ; preds = %6, %12
  %13 = phi i32 [ %14, %12 ], [ 1, %6 ]
  %14 = mul nsw i32 %13, 10
  %15 = sitofp i32 %14 to float
  %16 = fmul float %9, %15
  %17 = tail call i32 @FXSYS_roundf(float %16) #5
  %18 = icmp sgt i32 %17, 99999
  %19 = icmp eq i32 %14, 1000000
  %20 = or i1 %19, %18
  br i1 %20, label %21, label %12

21:                                               ; preds = %12
  %22 = icmp eq i32 %17, 0
  br i1 %22, label %55, label %23

23:                                               ; preds = %21, %6
  %24 = phi i32 [ %17, %21 ], [ %10, %6 ]
  %25 = phi i32 [ %14, %21 ], [ 1, %6 ]
  %26 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %26) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %26, i8 -86, i64 32, i1 false) #5
  br i1 %7, label %27, label %28

27:                                               ; preds = %23
  store i8 45, i8* %1, align 1
  br label %28

28:                                               ; preds = %27, %23
  %29 = phi i64 [ 1, %27 ], [ 0, %23 ]
  %30 = sdiv i32 %24, %25
  %31 = call i8* @FXSYS_itoa(i32 %30, i8* nonnull %26, i32 10) #5
  %32 = call i64 @strlen(i8* nonnull %26) #6
  %33 = getelementptr inbounds i8, i8* %1, i64 %29
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %33, i8* nonnull align 16 %26, i64 %32, i1 false) #5
  %34 = add i64 %32, %29
  %35 = srem i32 %24, %25
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %53, label %37

37:                                               ; preds = %28
  %38 = getelementptr inbounds i8, i8* %1, i64 %34
  store i8 46, i8* %38, align 1
  %39 = udiv i32 %25, 10
  %40 = add i64 %34, 1
  br label %41

41:                                               ; preds = %41, %37
  %42 = phi i64 [ %40, %37 ], [ %51, %41 ]
  %43 = phi i32 [ %35, %37 ], [ %49, %41 ]
  %44 = phi i32 [ %39, %37 ], [ %50, %41 ]
  %45 = sdiv i32 %43, %44
  %46 = trunc i32 %45 to i8
  %47 = add i8 %46, 48
  %48 = getelementptr inbounds i8, i8* %1, i64 %42
  store i8 %47, i8* %48, align 1
  %49 = srem i32 %43, %44
  %50 = sdiv i32 %44, 10
  %51 = add i64 %42, 1
  %52 = icmp eq i32 %49, 0
  br i1 %52, label %53, label %41

53:                                               ; preds = %41, %28
  %54 = phi i64 [ %34, %28 ], [ %51, %41 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %26) #5
  br label %55

55:                                               ; preds = %2, %21, %53
  %56 = phi i64 [ 1, %2 ], [ %54, %53 ], [ 1, %21 ]
  ret i64 %56
}

declare i32 @FXSYS_roundf(float) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden double @_Z14StringToDoubleN5fxcrt18StringViewTemplateIcEE(%"class.fxcrt::StringViewTemplate.4"* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.fxcrt::StringViewTemplate.4", %"class.fxcrt::StringViewTemplate.4"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.fxcrt::StringViewTemplate.4", %"class.fxcrt::StringViewTemplate.4"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %95, label %7

7:                                                ; preds = %1
  %8 = trunc i64 %5 to i32
  %9 = load i8, i8* %3, align 1
  %10 = icmp eq i8 %9, 43
  %11 = icmp eq i8 %9, 45
  %12 = or i1 %10, %11
  %13 = zext i1 %12 to i32
  %14 = icmp slt i32 %13, %8
  br i1 %14, label %15, label %32

15:                                               ; preds = %7
  %16 = zext i1 %12 to i64
  %17 = and i64 %5, 4294967295
  br label %18

18:                                               ; preds = %26, %15
  %19 = phi i64 [ %16, %15 ], [ %27, %26 ]
  %20 = phi i32 [ %13, %15 ], [ %28, %26 ]
  %21 = icmp ugt i64 %5, %19
  br i1 %21, label %23, label %22, !prof !5

22:                                               ; preds = %18
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #5, !srcloc !6
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #5, !srcloc !7
  unreachable

23:                                               ; preds = %18
  %24 = getelementptr inbounds i8, i8* %3, i64 %19
  %25 = load i8, i8* %24, align 1
  switch i8 %25, label %30 [
    i8 43, label %26
    i8 45, label %26
  ]

26:                                               ; preds = %23, %23
  %27 = add nuw nsw i64 %19, 1
  %28 = add nuw nsw i32 %20, 1
  %29 = icmp eq i64 %27, %17
  br i1 %29, label %32, label %18

30:                                               ; preds = %23
  %31 = trunc i64 %19 to i32
  br label %32

32:                                               ; preds = %26, %30, %7
  %33 = phi i32 [ %13, %7 ], [ %31, %30 ], [ %28, %26 ]
  %34 = icmp slt i32 %33, %8
  br i1 %34, label %35, label %91

35:                                               ; preds = %32
  %36 = zext i32 %33 to i64
  br label %37

37:                                               ; preds = %56, %35
  %38 = phi i64 [ %36, %35 ], [ %60, %56 ]
  %39 = phi double [ 0.000000e+00, %35 ], [ %59, %56 ]
  %40 = icmp ugt i64 %5, %38
  br i1 %40, label %42, label %41, !prof !5

41:                                               ; preds = %37
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #5, !srcloc !6
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #5, !srcloc !7
  unreachable

42:                                               ; preds = %37
  %43 = getelementptr inbounds i8, i8* %3, i64 %38
  %44 = load i8, i8* %43, align 1
  %45 = icmp eq i8 %44, 46
  br i1 %45, label %46, label %48

46:                                               ; preds = %42
  %47 = and i64 %38, 4294967295
  br label %63

48:                                               ; preds = %42
  %49 = fmul double %39, 1.000000e+01
  %50 = icmp slt i8 %44, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %48
  %52 = sext i8 %44 to i32
  %53 = add nsw i32 %52, -48
  %54 = icmp ult i32 %53, 10
  %55 = select i1 %54, i32 %53, i32 0
  br label %56

56:                                               ; preds = %51, %48
  %57 = phi i32 [ %55, %51 ], [ 0, %48 ]
  %58 = sitofp i32 %57 to double
  %59 = fadd double %49, %58
  %60 = add nuw nsw i64 %38, 1
  %61 = trunc i64 %60 to i32
  %62 = icmp slt i32 %61, %8
  br i1 %62, label %37, label %91

63:                                               ; preds = %84, %46
  %64 = phi i64 [ %47, %46 ], [ %67, %84 ]
  %65 = phi double [ %39, %46 ], [ %88, %84 ]
  %66 = phi i64 [ 0, %46 ], [ %89, %84 ]
  %67 = add nuw nsw i64 %64, 1
  %68 = trunc i64 %67 to i32
  %69 = icmp slt i32 %68, %8
  br i1 %69, label %70, label %91

70:                                               ; preds = %63
  %71 = getelementptr inbounds [11 x double], [11 x double]* @_ZN12_GLOBAL__N_121kFractionScalesDoubleE, i64 0, i64 %66
  %72 = load double, double* %71, align 8
  %73 = icmp ugt i64 %5, %67
  br i1 %73, label %75, label %74, !prof !5

74:                                               ; preds = %70
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #5, !srcloc !6
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #5, !srcloc !7
  unreachable

75:                                               ; preds = %70
  %76 = getelementptr inbounds i8, i8* %3, i64 %67
  %77 = load i8, i8* %76, align 1
  %78 = icmp slt i8 %77, 0
  br i1 %78, label %84, label %79

79:                                               ; preds = %75
  %80 = sext i8 %77 to i32
  %81 = add nsw i32 %80, -48
  %82 = icmp ult i32 %81, 10
  %83 = select i1 %82, i32 %81, i32 0
  br label %84

84:                                               ; preds = %79, %75
  %85 = phi i32 [ %83, %79 ], [ 0, %75 ]
  %86 = sitofp i32 %85 to double
  %87 = fmul double %72, %86
  %88 = fadd double %65, %87
  %89 = add nuw nsw i64 %66, 1
  %90 = icmp eq i64 %89, 11
  br i1 %90, label %91, label %63

91:                                               ; preds = %56, %84, %63, %32
  %92 = phi double [ 0.000000e+00, %32 ], [ %88, %84 ], [ %65, %63 ], [ %59, %56 ]
  %93 = fsub double -0.000000e+00, %92
  %94 = select i1 %11, double %93, double %92
  br label %95

95:                                               ; preds = %1, %91
  %96 = phi double [ %94, %91 ], [ 0.000000e+00, %1 ]
  ret double %96
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_Z14StringToDoubleN5fxcrt18StringViewTemplateIwEE(%"class.fxcrt::StringViewTemplate"* nocapture readonly) local_unnamed_addr #0 {
  %2 = alloca %class.CFX_UTF8Encoder, align 8
  %3 = alloca %"class.fxcrt::StringViewTemplate.4", align 8
  %4 = alloca %"class.fxcrt::StringViewTemplate.4", align 8
  %5 = alloca %"class.fxcrt::ByteString", align 8
  %6 = bitcast %"class.fxcrt::ByteString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #5
  %7 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %0, i64 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.fxcrt::StringViewTemplate.4"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11)
  %12 = bitcast %class.CFX_UTF8Encoder* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #5, !noalias !15
  %13 = getelementptr inbounds %class.CFX_UTF8Encoder, %class.CFX_UTF8Encoder* %2, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false) #5, !noalias !15
  call void @_ZN15CFX_UTF8EncoderC1Ev(%class.CFX_UTF8Encoder* nonnull %2) #5, !noalias !15
  %14 = icmp eq i64 %10, 0
  br i1 %14, label %21, label %15

15:                                               ; preds = %1, %15
  %16 = phi i64 [ %19, %15 ], [ 0, %1 ]
  %17 = getelementptr inbounds i32, i32* %8, i64 %16
  %18 = load i32, i32* %17, align 4
  call void @_ZN15CFX_UTF8Encoder5InputEw(%class.CFX_UTF8Encoder* nonnull %2, i32 signext %18) #5
  %19 = add nuw i64 %16, 1
  %20 = icmp eq i64 %19, %10
  br i1 %20, label %21, label %15

21:                                               ; preds = %15, %1
  %22 = bitcast %class.CFX_UTF8Encoder* %2 to i64*
  %23 = load i64, i64* %22, align 8, !noalias !18
  %24 = bitcast i8** %13 to i64*
  %25 = load i64, i64* %24, align 8, !noalias !18
  %26 = sub i64 %25, %23
  %27 = bitcast %"class.fxcrt::StringViewTemplate.4"* %3 to i64*
  store i64 %23, i64* %27, align 8, !alias.scope !21, !noalias !15
  %28 = getelementptr inbounds %"class.fxcrt::StringViewTemplate.4", %"class.fxcrt::StringViewTemplate.4"* %3, i64 0, i32 0, i32 1
  store i64 %26, i64* %28, align 8, !alias.scope !21, !noalias !15
  call void @_ZN5fxcrt10ByteStringC1ENS_18StringViewTemplateIcEE(%"class.fxcrt::ByteString"* nonnull %5, %"class.fxcrt::StringViewTemplate.4"* nonnull %3) #5
  call void @_ZN15CFX_UTF8EncoderD1Ev(%class.CFX_UTF8Encoder* nonnull %2) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #5, !noalias !15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11)
  %29 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %29, align 8
  %31 = icmp eq %"class.fxcrt::StringDataTemplate"* %30, null
  %32 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %30, i64 0, i32 3
  %33 = select i1 %31, [1 x i8]* @.str, [1 x i8]* %32
  %34 = getelementptr inbounds [1 x i8], [1 x i8]* %33, i64 0, i64 0
  %35 = icmp eq [1 x i8]* %33, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %21
  %37 = call i64 @strlen(i8* nonnull %34) #6
  br label %38

38:                                               ; preds = %21, %36
  %39 = phi i64 [ %37, %36 ], [ 0, %21 ]
  %40 = getelementptr inbounds %"class.fxcrt::StringViewTemplate.4", %"class.fxcrt::StringViewTemplate.4"* %4, i64 0, i32 0, i32 0, i32 0
  store i8* %34, i8** %40, align 8
  %41 = getelementptr inbounds %"class.fxcrt::StringViewTemplate.4", %"class.fxcrt::StringViewTemplate.4"* %4, i64 0, i32 0, i32 1
  store i64 %39, i64* %41, align 8
  %42 = call double @_Z14StringToDoubleN5fxcrt18StringViewTemplateIcEE(%"class.fxcrt::StringViewTemplate.4"* nonnull %4)
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #5
  ret double %42
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_Z14DoubleToStringdPc(double, i8* nocapture) local_unnamed_addr #0 {
  %3 = alloca [32 x i8], align 16
  store i8 48, i8* %1, align 1
  %4 = getelementptr inbounds i8, i8* %1, i64 1
  store i8 0, i8* %4, align 1
  %5 = fcmp oeq double %0, 0.000000e+00
  br i1 %5, label %55, label %6

6:                                                ; preds = %2
  %7 = fcmp olt double %0, 0.000000e+00
  %8 = fsub double -0.000000e+00, %0
  %9 = select i1 %7, double %8, double %0
  %10 = tail call i32 @FXSYS_round(double %9) #5
  %11 = icmp sgt i32 %10, 99999
  br i1 %11, label %23, label %12

12:                                               ; preds = %6, %12
  %13 = phi i32 [ %14, %12 ], [ 1, %6 ]
  %14 = mul nsw i32 %13, 10
  %15 = sitofp i32 %14 to double
  %16 = fmul double %9, %15
  %17 = tail call i32 @FXSYS_round(double %16) #5
  %18 = icmp sgt i32 %17, 99999
  %19 = icmp eq i32 %14, 1000000
  %20 = or i1 %19, %18
  br i1 %20, label %21, label %12

21:                                               ; preds = %12
  %22 = icmp eq i32 %17, 0
  br i1 %22, label %55, label %23

23:                                               ; preds = %21, %6
  %24 = phi i32 [ %17, %21 ], [ %10, %6 ]
  %25 = phi i32 [ %14, %21 ], [ 1, %6 ]
  %26 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %26) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %26, i8 -86, i64 32, i1 false) #5
  br i1 %7, label %27, label %28

27:                                               ; preds = %23
  store i8 45, i8* %1, align 1
  br label %28

28:                                               ; preds = %27, %23
  %29 = phi i64 [ 1, %27 ], [ 0, %23 ]
  %30 = sdiv i32 %24, %25
  %31 = call i8* @FXSYS_itoa(i32 %30, i8* nonnull %26, i32 10) #5
  %32 = call i64 @strlen(i8* nonnull %26) #6
  %33 = getelementptr inbounds i8, i8* %1, i64 %29
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %33, i8* nonnull align 16 %26, i64 %32, i1 false) #5
  %34 = add i64 %32, %29
  %35 = srem i32 %24, %25
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %53, label %37

37:                                               ; preds = %28
  %38 = getelementptr inbounds i8, i8* %1, i64 %34
  store i8 46, i8* %38, align 1
  %39 = udiv i32 %25, 10
  %40 = add i64 %34, 1
  br label %41

41:                                               ; preds = %41, %37
  %42 = phi i64 [ %40, %37 ], [ %51, %41 ]
  %43 = phi i32 [ %35, %37 ], [ %49, %41 ]
  %44 = phi i32 [ %39, %37 ], [ %50, %41 ]
  %45 = sdiv i32 %43, %44
  %46 = trunc i32 %45 to i8
  %47 = add i8 %46, 48
  %48 = getelementptr inbounds i8, i8* %1, i64 %42
  store i8 %47, i8* %48, align 1
  %49 = srem i32 %43, %44
  %50 = sdiv i32 %44, 10
  %51 = add i64 %42, 1
  %52 = icmp eq i32 %49, 0
  br i1 %52, label %53, label %41

53:                                               ; preds = %41, %28
  %54 = phi i64 [ %34, %28 ], [ %51, %41 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %26) #5
  br label %55

55:                                               ; preds = %2, %21, %53
  %56 = phi i64 [ 1, %2 ], [ %54, %53 ], [ 1, %21 ]
  ret i64 %56
}

declare i32 @FXSYS_round(double) local_unnamed_addr #2

declare void @_ZNK15CFX_WideTextBuf12AsStringViewEv(%"class.fxcrt::StringViewTemplate"* sret, %class.CFX_WideTextBuf*) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

declare i8* @FXSYS_itoa(i32, i8*, i32) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK15CFX_UTF8Encoder9GetResultEv: argument 0"}
!4 = distinct !{!4, !"_ZNK15CFX_UTF8Encoder9GetResultEv"}
!5 = !{!"branch_weights", i32 2000, i32 1}
!6 = !{i32 -2143847965}
!7 = !{i32 -2143847944}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_Z13FX_UTF8EncodeN5fxcrt18StringViewTemplateIwEE: argument 0"}
!10 = distinct !{!10, !"_Z13FX_UTF8EncodeN5fxcrt18StringViewTemplateIwEE"}
!11 = !{!12, !9}
!12 = distinct !{!12, !13, !"_ZNK15CFX_UTF8Encoder9GetResultEv: argument 0"}
!13 = distinct !{!13, !"_ZNK15CFX_UTF8Encoder9GetResultEv"}
!14 = !{!12}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_Z13FX_UTF8EncodeN5fxcrt18StringViewTemplateIwEE: argument 0"}
!17 = distinct !{!17, !"_Z13FX_UTF8EncodeN5fxcrt18StringViewTemplateIwEE"}
!18 = !{!19, !16}
!19 = distinct !{!19, !20, !"_ZNK15CFX_UTF8Encoder9GetResultEv: argument 0"}
!20 = distinct !{!20, !"_ZNK15CFX_UTF8Encoder9GetResultEv"}
!21 = !{!19}
