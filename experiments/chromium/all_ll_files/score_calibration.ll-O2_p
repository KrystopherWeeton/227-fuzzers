; ModuleID = '../../third_party/tflite-support/src/tensorflow_lite_support/cc/task/vision/utils/score_calibration.cc'
source_filename = "../../third_party/tflite-support/src/tensorflow_lite_support/cc/task/vision/utils/score_calibration.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%union.anon.1 = type { float }
%union.anon.45 = type { %"class.absl::Status" }
%"class.absl::Status" = type { i64 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.tflite::task::vision::ScoreCalibration" = type { %"struct.tflite::task::vision::SigmoidCalibrationParameters", %"class.absl::flat_hash_map" }
%"struct.tflite::task::vision::SigmoidCalibrationParameters" = type { %"class.std::__1::vector", %"class.absl::optional.7", float, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.tflite::task::vision::Sigmoid"*, %"struct.tflite::task::vision::Sigmoid"*, %"class.std::__1::__compressed_pair.2" }
%"struct.tflite::task::vision::Sigmoid" = type <{ %"class.std::__1::basic_string", float, float, float, %"class.absl::optional", [4 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.1 }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.tflite::task::vision::Sigmoid"* }
%"class.absl::optional.7" = type { %"class.absl::optional_internal::optional_data.8" }
%"class.absl::optional_internal::optional_data.8" = type { %"class.absl::optional_internal::optional_data_base.9" }
%"class.absl::optional_internal::optional_data_base.9" = type { %"class.absl::optional_internal::optional_data_dtor_base.10" }
%"class.absl::optional_internal::optional_data_dtor_base.10" = type { i8, [7 x i8], %union.anon.11 }
%union.anon.11 = type { %"struct.tflite::task::vision::Sigmoid" }
%"class.absl::flat_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"union.absl::container_internal::map_slot_type"*, i64, i64, %"class.absl::container_internal::CompressedTuple" }
%"union.absl::container_internal::map_slot_type" = type { %"struct.std::__1::pair.19" }
%"struct.std::__1::pair.19" = type { %"class.std::__1::basic_string", %"struct.tflite::task::vision::Sigmoid" }
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage" = type { i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.std::__1::pair" = type <{ %"class.absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, tflite::task::vision::Sigmoid>, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, tflite::task::vision::Sigmoid> > >::iterator", i8, [7 x i8] }>
%"class.absl::container_internal::raw_hash_set<absl::container_internal::FlatHashMapPolicy<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, tflite::task::vision::Sigmoid>, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, tflite::task::vision::Sigmoid> > >::iterator" = type { i8*, %union.anon.18 }
%union.anon.18 = type { %"union.absl::container_internal::map_slot_type"* }
%"class.tflite::support::StatusOr" = type { %"class.tflite::support::internal_statusor::StatusOrData" }
%"class.tflite::support::internal_statusor::StatusOrData" = type { %union.anon.34, %union.anon.35 }
%union.anon.34 = type { %"class.absl::Status" }
%union.anon.35 = type { %"struct.tflite::task::vision::SigmoidCalibrationParameters" }
%"struct.tflite::ScoreCalibrationOptions" = type { %"class.flatbuffers::Table" }
%"class.flatbuffers::Table" = type { [1 x i8] }
%"class.std::__1::vector.20" = type { %"class.std::__1::__vector_base.21" }
%"class.std::__1::__vector_base.21" = type { %"struct.tflite::task::vision::LabelMapItem"*, %"struct.tflite::task::vision::LabelMapItem"*, %"class.std::__1::__compressed_pair.29" }
%"struct.tflite::task::vision::LabelMapItem" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.22" }
%"class.std::__1::vector.22" = type { %"class.std::__1::__vector_base.23" }
%"class.std::__1::__vector_base.23" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"struct.tflite::task::vision::LabelMapItem"* }
%"class.absl::str_format_internal::FormatArgImpl" = type { %"union.absl::str_format_internal::FormatArgImpl::Data", i1 (i8*, i64, i32, i8*)* }
%"union.absl::str_format_internal::FormatArgImpl::Data" = type { i8* }
%"struct.absl::strings_internal::Splitter<absl::ByChar, absl::AllowEmpty, absl::string_view>::ConvertToContainer" = type { i8 }
%"class.std::__1::vector.36" = type { %"class.std::__1::__vector_base.37" }
%"class.std::__1::__vector_base.37" = type { %"class.absl::string_view"*, %"class.absl::string_view"*, %"class.std::__1::__compressed_pair.38" }
%"class.absl::string_view" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.absl::string_view"* }
%"class.absl::strings_internal::Splitter" = type <{ %"class.absl::string_view", %"class.absl::ByChar", %"struct.absl::AllowEmpty", [6 x i8] }>
%"class.absl::ByChar" = type { i8 }
%"struct.absl::AllowEmpty" = type { i8 }
%"class.tflite::support::StatusOr.43" = type { %"class.tflite::support::internal_statusor::StatusOrData.44" }
%"class.tflite::support::internal_statusor::StatusOrData.44" = type { %union.anon.45, %union.anon.46 }
%union.anon.46 = type { %"struct.tflite::task::vision::Sigmoid" }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::array" = type { [16 x %struct.raw_view] }
%struct.raw_view = type { i8*, i64 }
%"class.absl::strings_internal::SplitIterator" = type <{ i64, i32, [4 x i8], %"class.absl::string_view", %"class.absl::strings_internal::Splitter"*, %"class.absl::ByChar", %"struct.absl::AllowEmpty", [6 x i8] }>

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN6tflite4task6vision7SigmoidEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SD_EEEEE5clearEv = comdat any

$_ZNSt3__16vectorIN6tflite4task6vision7SigmoidENS_9allocatorIS4_EEE6assignIPS4_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_ = comdat any

$_ZN4absl17optional_internal13optional_dataIN6tflite4task6vision7SigmoidELb0EEaSERKS6_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNK4absl16strings_internal8SplitterINS_6ByCharENS_10AllowEmptyENS_11string_viewEE18ConvertToContainerINSt3__16vectorIS4_NS7_9allocatorIS4_EEEES4_Lb0EEclERKS5_ = comdat any

$_ZNSt3__16vectorIN4absl11string_viewENS_9allocatorIS2_EEE6insertIPZNKS1_16strings_internal8SplitterINS1_6ByCharENS1_10AllowEmptyES2_E18ConvertToContainerIS5_S2_Lb0EEclERKSB_E8raw_viewEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISJ_E9referenceEEE5valueENS_11__wrap_iterIPS2_EEE4typeENSN_IPKS2_EESJ_SJ_ = comdat any

$_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN6tflite4task6vision7SigmoidEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SD_EEEEE21insert_or_assign_implIRSJ_RKSD_EENSI_INS0_12raw_hash_setISE_SF_SH_SL_E8iteratorEbEEOT_OT0_ = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN6tflite4task6vision7SigmoidEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SD_EEEEE22find_or_prepare_insertIS9_EENSI_ImbEERKT_ = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN6tflite4task6vision7SigmoidEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SD_EEEEE14prepare_insertEm = comdat any

$_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN6tflite4task6vision7SigmoidEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SD_EEEEE6resizeEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN6tflite4task6vision7SigmoidEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SD_EEEEE27drop_deletes_without_resizeEv = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN6tflite4task6vision7SigmoidEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SD_EEEEE4findIS9_EENSM_8iteratorERKT_m = comdat any

$_ZNSt3__16vectorIN6tflite4task6vision7SigmoidENS_9allocatorIS4_EEE24__emplace_back_slow_pathIJS4_EEEvDpOT_ = comdat any

$_ZZN4absl18container_internal10EmptyGroupEvE11empty_group = comdat any

@.str = private unnamed_addr constant [19 x i8] c"FlatBuffers 1.12.0\00", align 1
@_ZN11flatbuffers25flatbuffer_version_stringE = weak hidden local_unnamed_addr global i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), align 8
@.str.1 = private unnamed_addr constant [2 x i8] c",\00", align 1
@__const._ZNK6tflite4task6vision16ScoreCalibration22ComputeCalibratedScoreERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEf.sigmoid = private unnamed_addr constant { { { { i8, [7 x i8], { <{ %"class.std::__1::basic_string", float, float, float, { { { { i8, [3 x i8], %union.anon.1 } } } }, [4 x i8] }> } } } } } { { { { i8, [7 x i8], { <{ %"class.std::__1::basic_string", float, float, float, { { { { i8, [3 x i8], %union.anon.1 } } } }, [4 x i8] }> } } } } { { { i8, [7 x i8], { <{ %"class.std::__1::basic_string", float, float, float, { { { { i8, [3 x i8], %union.anon.1 } } } }, [4 x i8] }> } } } { { i8, [7 x i8], { <{ %"class.std::__1::basic_string", float, float, float, { { { { i8, [3 x i8], %union.anon.1 } } } }, [4 x i8] }> } } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { <{ %"class.std::__1::basic_string", float, float, float, { { { { i8, [3 x i8], %union.anon.1 } } } }, [4 x i8] }> } { <{ %"class.std::__1::basic_string", float, float, float, { { { { i8, [3 x i8], %union.anon.1 } } } }, [4 x i8] }> <{ %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, { { { { i8, [3 x i8], %union.anon.1 } } } } { { { { i8, [3 x i8], %union.anon.1 } } } { { { i8, [3 x i8], %union.anon.1 } } { { i8, [3 x i8], %union.anon.1 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.1 { float 0xFFFFFFFFE0000000 } } } } }, [4 x i8] c"\AA\AA\AA\AA" }> } } } } }, align 8
@.str.2 = private unnamed_addr constant [43 x i8] c"Expected non-empty score calibration file.\00", align 1
@.str.3 = private unnamed_addr constant [78 x i8] c"Mismatch between number of labels (%d) and score calibration parameters (%d).\00", align 1
@__const._ZN6tflite4task6vision29BuildSigmoidCalibrationParamsERKNS_23ScoreCalibrationOptionsEN4absl11string_viewERKNSt3__16vectorINS1_12LabelMapItemENS7_9allocatorIS9_EEEE._status_or_value215 = private unnamed_addr constant { { %union.anon.45, { <{ %"class.std::__1::basic_string", float, float, float, { { { { i8, [3 x i8], %union.anon.1 } } } }, [4 x i8] }> } } } { { %union.anon.45, { <{ %"class.std::__1::basic_string", float, float, float, { { { { i8, [3 x i8], %union.anon.1 } } } }, [4 x i8] }> } } { %union.anon.45 { %"class.absl::Status" { i64 -6148914691236517206 } }, { <{ %"class.std::__1::basic_string", float, float, float, { { { { i8, [3 x i8], %union.anon.1 } } } }, [4 x i8] }> } { <{ %"class.std::__1::basic_string", float, float, float, { { { { i8, [3 x i8], %union.anon.1 } } } }, [4 x i8] }> <{ %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, { { { { i8, [3 x i8], %union.anon.1 } } } } { { { { i8, [3 x i8], %union.anon.1 } } } { { { i8, [3 x i8], %union.anon.1 } } { { i8, [3 x i8], %union.anon.1 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.1 { float 0xFFFFFFFFE0000000 } } } } }, [4 x i8] c"\AA\AA\AA\AA" }> } } }, align 8
@__const._ZN6tflite4task6vision29BuildSigmoidCalibrationParamsERKNS_23ScoreCalibrationOptionsEN4absl11string_viewERKNSt3__16vectorINS1_12LabelMapItemENS7_9allocatorIS9_EEEE.sigmoid = private unnamed_addr constant <{ %"class.std::__1::basic_string", float, float, float, { { { { i8, [3 x i8], %union.anon.1 } } } }, [4 x i8] }> <{ %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, { { { { i8, [3 x i8], %union.anon.1 } } } } { { { { i8, [3 x i8], %union.anon.1 } } } { { { i8, [3 x i8], %union.anon.1 } } { { i8, [3 x i8], %union.anon.1 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.1 { float 0xFFFFFFFFE0000000 } } } } }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@_ZZN4absl18container_internal10EmptyGroupEvE11empty_group = linkonce_odr hidden constant [16 x i8] c"\FF\80\80\80\80\80\80\80\80\80\80\80\80\80\80\80", comdat, align 16
@.str.5 = private unnamed_addr constant [71 x i8] c"Expected 3 or 4 parameters per line in score calibration file, got %d.\00", align 1
@.str.6 = private unnamed_addr constant [58 x i8] c"Could not parse score calibration parameter as float: %s.\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.7 = private unnamed_addr constant [26 x i8] c"absl::string_view::substr\00", align 1
@_ZN4absl13hash_internal15MixingHashState5kSeedE = external local_unnamed_addr constant i8*, align 8

@_ZN6tflite4task6vision16ScoreCalibrationC1Ev = hidden unnamed_addr alias void (%"class.tflite::task::vision::ScoreCalibration"*), void (%"class.tflite::task::vision::ScoreCalibration"*)* @_ZN6tflite4task6vision16ScoreCalibrationC2Ev
@_ZN6tflite4task6vision16ScoreCalibrationD1Ev = hidden unnamed_addr alias void (%"class.tflite::task::vision::ScoreCalibration"*), void (%"class.tflite::task::vision::ScoreCalibration"*)* @_ZN6tflite4task6vision16ScoreCalibrationD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN6tflite4task6visionlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_7SigmoidE(%"class.std::__1::basic_ostream"* returned dereferenceable(160), %"struct.tflite::task::vision::Sigmoid"* dereferenceable(48)) local_unnamed_addr #0 {
  %3 = bitcast %"struct.tflite::task::vision::Sigmoid"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"struct.tflite::task::vision::Sigmoid"* %1 to i8*
  %12 = zext i8 %5 to i64
  %13 = select i1 %6, i8* %8, i8* %11
  %14 = select i1 %6, i64 %10, i64 %12
  %15 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* %13, i64 %14) #12
  %16 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %15, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i64 1) #12
  %17 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %1, i64 0, i32 1
  %18 = load float, float* %17, align 8
  %19 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEf(%"class.std::__1::basic_ostream"* %16, float %18) #12
  %20 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %19, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i64 1) #12
  %21 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %1, i64 0, i32 2
  %22 = load float, float* %21, align 4
  %23 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEf(%"class.std::__1::basic_ostream"* %20, float %22) #12
  %24 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %23, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i64 1) #12
  %25 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %1, i64 0, i32 3
  %26 = load float, float* %25, align 8
  %27 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEf(%"class.std::__1::basic_ostream"* %24, float %26) #12
  %28 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %29 = load i8, i8* %28, align 4, !range !2
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %40, label %31

31:                                               ; preds = %2
  %32 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i64 1) #12
  %33 = load i8, i8* %28, align 4, !range !2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %31
  tail call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #16
  unreachable

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %38 = load float, float* %37, align 4
  %39 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEf(%"class.std::__1::basic_ostream"* %32, float %38) #12
  br label %40

40:                                               ; preds = %2, %36
  ret %"class.std::__1::basic_ostream"* %0
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEf(%"class.std::__1::basic_ostream"*, float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6tflite4task6vision16ScoreCalibrationC2Ev(%"class.tflite::task::vision::ScoreCalibration"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.tflite::task::vision::ScoreCalibration", %"class.tflite::task::vision::ScoreCalibration"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %3 = bitcast %"class.tflite::task::vision::ScoreCalibration"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 25, i1 false) #12
  %4 = bitcast %union.anon.11* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 56, i1 false) #12
  %5 = getelementptr inbounds %"class.tflite::task::vision::ScoreCalibration", %"class.tflite::task::vision::ScoreCalibration"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %5, align 8
  %6 = getelementptr inbounds %"class.tflite::task::vision::ScoreCalibration", %"class.tflite::task::vision::ScoreCalibration"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %7 = bitcast %"union.absl::container_internal::map_slot_type"** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 32, i1 false) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6tflite4task6vision16ScoreCalibrationD2Ev(%"class.tflite::task::vision::ScoreCalibration"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.tflite::task::vision::ScoreCalibration", %"class.tflite::task::vision::ScoreCalibration"* %0, i64 0, i32 1, i32 0, i32 0, i32 3
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %40, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.tflite::task::vision::ScoreCalibration", %"class.tflite::task::vision::ScoreCalibration"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.tflite::task::vision::ScoreCalibration", %"class.tflite::task::vision::ScoreCalibration"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  br label %11

8:                                                ; preds = %36
  %9 = load i8*, i8** %6, align 8
  tail call void @_ZdlPv(i8* %9) #17
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %6, align 8
  %10 = bitcast %"union.absl::container_internal::map_slot_type"** %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 32, i1 false) #12
  br label %40

11:                                               ; preds = %36, %5
  %12 = phi i64 [ 0, %5 ], [ %37, %36 ]
  %13 = load i8*, i8** %6, align 8
  %14 = getelementptr inbounds i8, i8* %13, i64 %12
  %15 = load i8, i8* %14, align 1
  %16 = icmp sgt i8 %15, -1
  br i1 %16, label %17, label %36

17:                                               ; preds = %11
  %18 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %7, align 8
  %19 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %18, i64 %12
  %20 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %18, i64 %12, i32 0, i32 1
  %21 = bitcast %"struct.tflite::task::vision::Sigmoid"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  tail call void @_ZdlPv(i8* %27) #17
  br label %28

28:                                               ; preds = %25, %17
  %29 = bitcast %"union.absl::container_internal::map_slot_type"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  tail call void @_ZdlPv(i8* %35) #17
  br label %36

36:                                               ; preds = %33, %28, %11
  %37 = add i64 %12, 1
  %38 = load i64, i64* %2, align 8
  %39 = icmp eq i64 %37, %38
  br i1 %39, label %8, label %11

40:                                               ; preds = %1, %8
  %41 = getelementptr inbounds %"class.tflite::task::vision::ScoreCalibration", %"class.tflite::task::vision::ScoreCalibration"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %42 = load i8, i8* %41, align 8, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %54, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.tflite::task::vision::ScoreCalibration", %"class.tflite::task::vision::ScoreCalibration"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  %46 = bitcast %"struct.tflite::task::vision::Sigmoid"* %45 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  tail call void @_ZdlPv(i8* %52) #17
  br label %53

53:                                               ; preds = %50, %44
  store i8 0, i8* %41, align 8
  br label %54

54:                                               ; preds = %53, %40
  %55 = getelementptr inbounds %"class.tflite::task::vision::ScoreCalibration", %"class.tflite::task::vision::ScoreCalibration"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %56 = load %"struct.tflite::task::vision::Sigmoid"*, %"struct.tflite::task::vision::Sigmoid"** %55, align 8
  %57 = icmp eq %"struct.tflite::task::vision::Sigmoid"* %56, null
  br i1 %57, label %80, label %58

58:                                               ; preds = %54
  %59 = bitcast %"struct.tflite::task::vision::Sigmoid"* %56 to i8*
  %60 = getelementptr inbounds %"class.tflite::task::vision::ScoreCalibration", %"class.tflite::task::vision::ScoreCalibration"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %61 = load %"struct.tflite::task::vision::Sigmoid"*, %"struct.tflite::task::vision::Sigmoid"** %60, align 8
  %62 = icmp eq %"struct.tflite::task::vision::Sigmoid"* %61, %56
  br i1 %62, label %78, label %63

63:                                               ; preds = %58, %73
  %64 = phi %"struct.tflite::task::vision::Sigmoid"* [ %65, %73 ], [ %61, %58 ]
  %65 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %64, i64 -1
  %66 = bitcast %"struct.tflite::task::vision::Sigmoid"* %65 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  %68 = load i8, i8* %67, align 1
  %69 = icmp slt i8 %68, 0
  br i1 %69, label %70, label %73

70:                                               ; preds = %63
  %71 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %65, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load i8*, i8** %71, align 8
  tail call void @_ZdlPv(i8* %72) #17
  br label %73

73:                                               ; preds = %70, %63
  %74 = icmp eq %"struct.tflite::task::vision::Sigmoid"* %65, %56
  br i1 %74, label %75, label %63

75:                                               ; preds = %73
  %76 = bitcast %"class.tflite::task::vision::ScoreCalibration"* %0 to i8**
  %77 = load i8*, i8** %76, align 8
  br label %78

78:                                               ; preds = %75, %58
  %79 = phi i8* [ %77, %75 ], [ %59, %58 ]
  store %"struct.tflite::task::vision::Sigmoid"* %56, %"struct.tflite::task::vision::Sigmoid"** %60, align 8
  tail call void @_ZdlPv(i8* %79) #17
  br label %80

80:                                               ; preds = %54, %78
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6tflite4task6vision16ScoreCalibration24InitializeFromParametersERKNS1_28SigmoidCalibrationParametersE(%"class.absl::Status"* noalias nocapture sret, %"class.tflite::task::vision::ScoreCalibration"*, %"struct.tflite::task::vision::SigmoidCalibrationParameters"* dereferenceable(88)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.std::__1::pair", align 8
  %5 = getelementptr inbounds %"class.tflite::task::vision::ScoreCalibration", %"class.tflite::task::vision::ScoreCalibration"* %1, i64 0, i32 0
  %6 = icmp eq %"struct.tflite::task::vision::SigmoidCalibrationParameters"* %5, %2
  br i1 %6, label %13, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.tflite::task::vision::ScoreCalibration", %"class.tflite::task::vision::ScoreCalibration"* %1, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.tflite::task::vision::SigmoidCalibrationParameters", %"struct.tflite::task::vision::SigmoidCalibrationParameters"* %2, i64 0, i32 0, i32 0, i32 0
  %10 = load %"struct.tflite::task::vision::Sigmoid"*, %"struct.tflite::task::vision::Sigmoid"** %9, align 8
  %11 = getelementptr inbounds %"struct.tflite::task::vision::SigmoidCalibrationParameters", %"struct.tflite::task::vision::SigmoidCalibrationParameters"* %2, i64 0, i32 0, i32 0, i32 1
  %12 = load %"struct.tflite::task::vision::Sigmoid"*, %"struct.tflite::task::vision::Sigmoid"** %11, align 8
  tail call void @_ZNSt3__16vectorIN6tflite4task6vision7SigmoidENS_9allocatorIS4_EEE6assignIPS4_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_(%"class.std::__1::vector"* %8, %"struct.tflite::task::vision::Sigmoid"* %10, %"struct.tflite::task::vision::Sigmoid"* %12) #12
  br label %13

13:                                               ; preds = %3, %7
  %14 = getelementptr inbounds %"class.tflite::task::vision::ScoreCalibration", %"class.tflite::task::vision::ScoreCalibration"* %1, i64 0, i32 0, i32 1, i32 0
  %15 = getelementptr inbounds %"struct.tflite::task::vision::SigmoidCalibrationParameters", %"struct.tflite::task::vision::SigmoidCalibrationParameters"* %2, i64 0, i32 1, i32 0
  %16 = tail call dereferenceable(56) %"class.absl::optional_internal::optional_data.8"* @_ZN4absl17optional_internal13optional_dataIN6tflite4task6vision7SigmoidELb0EEaSERKS6_(%"class.absl::optional_internal::optional_data.8"* %14, %"class.absl::optional_internal::optional_data.8"* dereferenceable(56) %15) #12
  %17 = getelementptr inbounds %"class.tflite::task::vision::ScoreCalibration", %"class.tflite::task::vision::ScoreCalibration"* %1, i64 0, i32 0, i32 2
  %18 = getelementptr inbounds %"struct.tflite::task::vision::SigmoidCalibrationParameters", %"struct.tflite::task::vision::SigmoidCalibrationParameters"* %2, i64 0, i32 2
  %19 = bitcast float* %18 to i64*
  %20 = bitcast float* %17 to i64*
  %21 = load i64, i64* %19, align 8
  store i64 %21, i64* %20, align 8
  %22 = getelementptr inbounds %"class.tflite::task::vision::ScoreCalibration", %"class.tflite::task::vision::ScoreCalibration"* %1, i64 0, i32 1
  %23 = getelementptr inbounds %"class.absl::flat_hash_map", %"class.absl::flat_hash_map"* %22, i64 0, i32 0, i32 0
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN6tflite4task6vision7SigmoidEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SD_EEEEE5clearEv(%"class.absl::container_internal::raw_hash_set"* %23)
  %24 = getelementptr inbounds %"class.tflite::task::vision::ScoreCalibration", %"class.tflite::task::vision::ScoreCalibration"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"struct.tflite::task::vision::Sigmoid"*, %"struct.tflite::task::vision::Sigmoid"** %24, align 8
  %26 = getelementptr inbounds %"class.tflite::task::vision::ScoreCalibration", %"class.tflite::task::vision::ScoreCalibration"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %27 = load %"struct.tflite::task::vision::Sigmoid"*, %"struct.tflite::task::vision::Sigmoid"** %26, align 8
  %28 = icmp eq %"struct.tflite::task::vision::Sigmoid"* %25, %27
  br i1 %28, label %32, label %29

29:                                               ; preds = %13
  %30 = getelementptr inbounds %"class.absl::flat_hash_map", %"class.absl::flat_hash_map"* %22, i64 0, i32 0
  %31 = bitcast %"struct.std::__1::pair"* %4 to i8*
  br label %34

32:                                               ; preds = %34, %13
  %33 = getelementptr inbounds %"class.absl::Status", %"class.absl::Status"* %0, i64 0, i32 0
  store i64 0, i64* %33, align 8, !alias.scope !3
  ret void

34:                                               ; preds = %29, %34
  %35 = phi %"struct.tflite::task::vision::Sigmoid"* [ %25, %29 ], [ %37, %34 ]
  %36 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %35, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12
  call void @_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN6tflite4task6vision7SigmoidEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SD_EEEEE21insert_or_assign_implIRSJ_RKSD_EENSI_INS0_12raw_hash_setISE_SF_SH_SL_E8iteratorEbEEOT_OT0_(%"struct.std::__1::pair"* nonnull sret %4, %"class.absl::container_internal::raw_hash_map"* %30, %"class.std::__1::basic_string"* dereferenceable(24) %36, %"struct.tflite::task::vision::Sigmoid"* dereferenceable(48) %35) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  %37 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %35, i64 1
  %38 = icmp eq %"struct.tflite::task::vision::Sigmoid"* %37, %27
  br i1 %38, label %32, label %34
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN6tflite4task6vision7SigmoidEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SD_EEEEE5clearEv(%"class.absl::container_internal::raw_hash_set"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 3
  %3 = load i64, i64* %2, align 8
  %4 = icmp ugt i64 %3, 127
  br i1 %4, label %5, label %40

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 1
  br label %8

8:                                                ; preds = %33, %5
  %9 = phi i64 [ 0, %5 ], [ %34, %33 ]
  %10 = load i8*, i8** %6, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %9
  %12 = load i8, i8* %11, align 1
  %13 = icmp sgt i8 %12, -1
  br i1 %13, label %14, label %33

14:                                               ; preds = %8
  %15 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %7, align 8
  %16 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %15, i64 %9
  %17 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %15, i64 %9, i32 0, i32 1
  %18 = bitcast %"struct.tflite::task::vision::Sigmoid"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %14
  %23 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  tail call void @_ZdlPv(i8* %24) #17
  br label %25

25:                                               ; preds = %22, %14
  %26 = bitcast %"union.absl::container_internal::map_slot_type"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  tail call void @_ZdlPv(i8* %32) #17
  br label %33

33:                                               ; preds = %30, %25, %8
  %34 = add i64 %9, 1
  %35 = load i64, i64* %2, align 8
  %36 = icmp eq i64 %34, %35
  br i1 %36, label %37, label %8

37:                                               ; preds = %33
  %38 = load i8*, i8** %6, align 8
  tail call void @_ZdlPv(i8* %38) #17
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %6, align 8
  %39 = bitcast %"union.absl::container_internal::map_slot_type"** %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 32, i1 false) #12
  br label %88

40:                                               ; preds = %1
  %41 = icmp eq i64 %3, 0
  br i1 %41, label %88, label %42

42:                                               ; preds = %40
  %43 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %44 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 1
  br label %59

45:                                               ; preds = %84
  %46 = add i64 %60, 17
  %47 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 2
  store i64 0, i64* %47, align 8
  %48 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %49, i8 -128, i64 %46, i1 false) #12
  %50 = load i8*, i8** %48, align 8
  %51 = load i64, i64* %2, align 8
  %52 = getelementptr inbounds i8, i8* %50, i64 %51
  store i8 -1, i8* %52, align 1
  %53 = load i64, i64* %2, align 8
  %54 = lshr i64 %53, 3
  %55 = sub i64 %53, %54
  %56 = load i64, i64* %47, align 8
  %57 = sub i64 %55, %56
  %58 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %57, i64* %58, align 8
  br label %88

59:                                               ; preds = %42, %84
  %60 = phi i64 [ 0, %42 ], [ %85, %84 ]
  %61 = load i8*, i8** %43, align 8
  %62 = getelementptr inbounds i8, i8* %61, i64 %60
  %63 = load i8, i8* %62, align 1
  %64 = icmp sgt i8 %63, -1
  br i1 %64, label %65, label %84

65:                                               ; preds = %59
  %66 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %44, align 8
  %67 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %66, i64 %60
  %68 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %66, i64 %60, i32 0, i32 1
  %69 = bitcast %"struct.tflite::task::vision::Sigmoid"* %68 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %69, i64 0, i32 1, i32 0
  %71 = load i8, i8* %70, align 1
  %72 = icmp slt i8 %71, 0
  br i1 %72, label %73, label %76

73:                                               ; preds = %65
  %74 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load i8*, i8** %74, align 8
  tail call void @_ZdlPv(i8* %75) #17
  br label %76

76:                                               ; preds = %73, %65
  %77 = bitcast %"union.absl::container_internal::map_slot_type"* %67 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %78 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %77, i64 0, i32 1, i32 0
  %79 = load i8, i8* %78, align 1
  %80 = icmp slt i8 %79, 0
  br i1 %80, label %81, label %84

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  tail call void @_ZdlPv(i8* %83) #17
  br label %84

84:                                               ; preds = %81, %76, %59
  %85 = add i64 %60, 1
  %86 = load i64, i64* %2, align 8
  %87 = icmp eq i64 %85, %86
  br i1 %87, label %45, label %59

88:                                               ; preds = %40, %45, %37
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK6tflite4task6vision16ScoreCalibration22ComputeCalibratedScoreERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEf(%"class.tflite::task::vision::ScoreCalibration"*, %"class.std::__1::basic_string"* dereferenceable(24), float) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.absl::optional.7", align 8
  %5 = getelementptr inbounds %"class.absl::optional.7", %"class.absl::optional.7"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %5) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 getelementptr inbounds ({ { { { i8, [7 x i8], { <{ %"class.std::__1::basic_string", float, float, float, { { { { i8, [3 x i8], %union.anon.1 } } } }, [4 x i8] }> } } } } }, { { { { i8, [7 x i8], { <{ %"class.std::__1::basic_string", float, float, float, { { { { i8, [3 x i8], %union.anon.1 } } } }, [4 x i8] }> } } } } }* @__const._ZNK6tflite4task6vision16ScoreCalibration22ComputeCalibratedScoreERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEf.sigmoid, i64 0, i32 0, i32 0, i32 0, i32 0), i64 56, i1 false)
  call void @_ZNK6tflite4task6vision16ScoreCalibration21FindSigmoidParametersERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.absl::optional.7"* nonnull sret %4, %"class.tflite::task::vision::ScoreCalibration"* %0, %"class.std::__1::basic_string"* dereferenceable(24) %1)
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %16, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.absl::optional.7", %"class.absl::optional.7"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %10 = load i8, i8* %9, align 4, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %19, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.absl::optional.7", %"class.absl::optional.7"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %14 = load float, float* %13, align 4
  %15 = fcmp ogt float %14, %2
  br i1 %15, label %16, label %19

16:                                               ; preds = %3, %12
  %17 = getelementptr inbounds %"class.tflite::task::vision::ScoreCalibration", %"class.tflite::task::vision::ScoreCalibration"* %0, i64 0, i32 0, i32 2
  %18 = load float, float* %17, align 8
  br label %102

19:                                               ; preds = %8, %12
  %20 = getelementptr inbounds %"class.tflite::task::vision::ScoreCalibration", %"class.tflite::task::vision::ScoreCalibration"* %0, i64 0, i32 0, i32 3
  %21 = load i32, i32* %20, align 4
  switch i32 %21, label %59 [
    i32 0, label %60
    i32 2, label %22
    i32 1, label %47
  ]

22:                                               ; preds = %19
  %23 = fcmp olt float %2, 0x3C9CD2B2A0000000
  %24 = fpext float %2 to double
  br i1 %23, label %25, label %29

25:                                               ; preds = %22
  %26 = fsub double 0x3CACD2B2A0000000, %24
  %27 = call double @log(double %26) #12
  %28 = fsub double 0xC0526BB1BB911EE4, %27
  br label %31

29:                                               ; preds = %22
  %30 = call double @log(double %24) #12
  br label %31

31:                                               ; preds = %29, %25
  %32 = phi double [ %28, %25 ], [ %30, %29 ]
  %33 = fptrunc double %32 to float
  %34 = fsub float 1.000000e+00, %2
  %35 = fcmp olt float %34, 0x3C9CD2B2A0000000
  %36 = fpext float %34 to double
  br i1 %35, label %37, label %41

37:                                               ; preds = %31
  %38 = fsub double 0x3CACD2B2A0000000, %36
  %39 = call double @log(double %38) #12
  %40 = fsub double 0xC0526BB1BB911EE4, %39
  br label %43

41:                                               ; preds = %31
  %42 = call double @log(double %36) #12
  br label %43

43:                                               ; preds = %41, %37
  %44 = phi double [ %40, %37 ], [ %42, %41 ]
  %45 = fptrunc double %44 to float
  %46 = fsub float %33, %45
  br label %60

47:                                               ; preds = %19
  %48 = fcmp olt float %2, 0x3C9CD2B2A0000000
  %49 = fpext float %2 to double
  br i1 %48, label %50, label %54

50:                                               ; preds = %47
  %51 = fsub double 0x3CACD2B2A0000000, %49
  %52 = call double @log(double %51) #12
  %53 = fsub double 0xC0526BB1BB911EE4, %52
  br label %56

54:                                               ; preds = %47
  %55 = call double @log(double %49) #12
  br label %56

56:                                               ; preds = %54, %50
  %57 = phi double [ %53, %50 ], [ %55, %54 ]
  %58 = fptrunc double %57 to float
  br label %60

59:                                               ; preds = %19
  unreachable

60:                                               ; preds = %19, %43, %56
  %61 = phi float [ %58, %56 ], [ %46, %43 ], [ %2, %19 ]
  %62 = load i8, i8* %5, align 8, !range !2
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %60
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #16
  unreachable

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.absl::optional.7", %"class.absl::optional.7"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %67 = load float, float* %66, align 8
  %68 = fmul float %61, %67
  %69 = getelementptr inbounds %"class.absl::optional.7", %"class.absl::optional.7"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %70 = load float, float* %69, align 4
  %71 = fadd float %68, %70
  %72 = fcmp ult float %71, 0.000000e+00
  br i1 %72, label %83, label %73

73:                                               ; preds = %65
  %74 = getelementptr inbounds %"class.absl::optional.7", %"class.absl::optional.7"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 3
  %75 = load float, float* %74, align 8
  %76 = fpext float %75 to double
  %77 = fsub float -0.000000e+00, %71
  %78 = fpext float %77 to double
  %79 = call double @exp(double %78) #12
  %80 = fadd double %79, 1.000000e+00
  %81 = fdiv double %76, %80
  %82 = load i8, i8* %5, align 8, !range !2
  br label %98

83:                                               ; preds = %65
  %84 = fpext float %71 to double
  %85 = call double @exp(double %84) #12
  %86 = fptrunc double %85 to float
  %87 = load i8, i8* %5, align 8, !range !2
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %83
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #16
  unreachable

90:                                               ; preds = %83
  %91 = getelementptr inbounds %"class.absl::optional.7", %"class.absl::optional.7"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 3
  %92 = load float, float* %91, align 8
  %93 = fmul float %92, %86
  %94 = fpext float %93 to double
  %95 = fpext float %86 to double
  %96 = fadd double %95, 1.000000e+00
  %97 = fdiv double %94, %96
  br label %98

98:                                               ; preds = %90, %73
  %99 = phi i8 [ %82, %73 ], [ 1, %90 ]
  %100 = phi double [ %81, %73 ], [ %97, %90 ]
  %101 = fptrunc double %100 to float
  br label %102

102:                                              ; preds = %98, %16
  %103 = phi i8 [ %6, %16 ], [ %99, %98 ]
  %104 = phi float [ %18, %16 ], [ %101, %98 ]
  %105 = icmp eq i8 %103, 0
  br i1 %105, label %116, label %106

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"class.absl::optional.7", %"class.absl::optional.7"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %108 = bitcast %"struct.tflite::task::vision::Sigmoid"* %107 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %109 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %108, i64 0, i32 1, i32 0
  %110 = load i8, i8* %109, align 1
  %111 = icmp slt i8 %110, 0
  br i1 %111, label %112, label %115

112:                                              ; preds = %106
  %113 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %107, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load i8*, i8** %113, align 8
  call void @_ZdlPv(i8* %114) #17
  br label %115

115:                                              ; preds = %112, %106
  store i8 0, i8* %5, align 8
  br label %116

116:                                              ; preds = %102, %115
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %5) #12
  ret float %104
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6tflite4task6vision16ScoreCalibration21FindSigmoidParametersERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.absl::optional.7"* noalias sret, %"class.tflite::task::vision::ScoreCalibration"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.tflite::task::vision::ScoreCalibration", %"class.tflite::task::vision::ScoreCalibration"* %1, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %3
  %10 = zext i8 %7 to i64
  %11 = ptrtoint %"class.std::__1::basic_string"* %2 to i64
  br label %19

12:                                               ; preds = %3
  %13 = bitcast %"class.std::__1::basic_string"* %2 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp sgt i64 %16, -1
  br i1 %17, label %19, label %18, !prof !6

18:                                               ; preds = %12
  tail call void @llvm.trap() #12
  unreachable

19:                                               ; preds = %9, %12
  %20 = phi i64 [ %14, %12 ], [ %11, %9 ]
  %21 = phi i64 [ %16, %12 ], [ %10, %9 ]
  %22 = inttoptr i64 %20 to i8*
  %23 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %24 = tail call i64 @_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm(i64 %23, i8* %22, i64 %21) #12
  %25 = add i64 %24, %21
  %26 = zext i64 %25 to i128
  %27 = mul nuw i128 %26, 11376068507788127593
  %28 = lshr i128 %27, 64
  %29 = xor i128 %28, %27
  %30 = trunc i128 %29 to i64
  %31 = tail call { i8*, %"union.absl::container_internal::map_slot_type"* } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN6tflite4task6vision7SigmoidEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SD_EEEEE4findIS9_EENSM_8iteratorERKT_m(%"class.absl::container_internal::raw_hash_set"* %4, %"class.std::__1::basic_string"* dereferenceable(24) %2, i64 %30) #12
  %32 = extractvalue { i8*, %"union.absl::container_internal::map_slot_type"* } %31, 0
  %33 = extractvalue { i8*, %"union.absl::container_internal::map_slot_type"* } %31, 1
  %34 = icmp eq i8* %32, null
  br i1 %34, label %61, label %35

35:                                               ; preds = %19
  %36 = load i8, i8* %32, align 1
  %37 = icmp sgt i8 %36, -1
  br i1 %37, label %39, label %38, !prof !6

38:                                               ; preds = %35
  tail call void @llvm.trap() #12
  unreachable

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %33, i64 0, i32 0, i32 1
  %41 = getelementptr inbounds %"class.absl::optional.7", %"class.absl::optional.7"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %41, align 8
  %42 = getelementptr inbounds %"class.absl::optional.7", %"class.absl::optional.7"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %43 = bitcast %"struct.tflite::task::vision::Sigmoid"* %40 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %39
  %48 = bitcast %"struct.tflite::task::vision::Sigmoid"* %42 to i8*
  %49 = bitcast %"struct.tflite::task::vision::Sigmoid"* %40 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %49, i64 24, i1 false) #12
  br label %56

50:                                               ; preds = %39
  %51 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %42, i64 0, i32 0
  %52 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  %54 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %33, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %51, i8* %53, i64 %55) #12
  br label %56

56:                                               ; preds = %47, %50
  %57 = getelementptr inbounds %"class.absl::optional.7", %"class.absl::optional.7"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %58 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %33, i64 0, i32 0, i32 1, i32 1
  %59 = bitcast float* %57 to i8*
  %60 = bitcast float* %58 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* align 8 %60, i64 20, i1 false) #12
  br label %91

61:                                               ; preds = %19
  %62 = getelementptr inbounds %"class.tflite::task::vision::ScoreCalibration", %"class.tflite::task::vision::ScoreCalibration"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %63 = load i8, i8* %62, align 8, !range !2
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %87, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.tflite::task::vision::ScoreCalibration", %"class.tflite::task::vision::ScoreCalibration"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  %67 = getelementptr inbounds %"class.absl::optional.7", %"class.absl::optional.7"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %67, align 8
  %68 = getelementptr inbounds %"class.absl::optional.7", %"class.absl::optional.7"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %69 = bitcast %"struct.tflite::task::vision::Sigmoid"* %66 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %69, i64 0, i32 1, i32 0
  %71 = load i8, i8* %70, align 1
  %72 = icmp slt i8 %71, 0
  br i1 %72, label %76, label %73

73:                                               ; preds = %65
  %74 = bitcast %"struct.tflite::task::vision::Sigmoid"* %68 to i8*
  %75 = bitcast %"struct.tflite::task::vision::Sigmoid"* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* align 8 %75, i64 24, i1 false) #12
  br label %82

76:                                               ; preds = %65
  %77 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %68, i64 0, i32 0
  %78 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load i8*, i8** %78, align 8
  %80 = getelementptr inbounds %"class.tflite::task::vision::ScoreCalibration", %"class.tflite::task::vision::ScoreCalibration"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %81 = load i64, i64* %80, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %77, i8* %79, i64 %81) #12
  br label %82

82:                                               ; preds = %73, %76
  %83 = getelementptr inbounds %"class.absl::optional.7", %"class.absl::optional.7"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %84 = getelementptr inbounds %"class.tflite::task::vision::ScoreCalibration", %"class.tflite::task::vision::ScoreCalibration"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %85 = bitcast float* %83 to i8*
  %86 = bitcast float* %84 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* align 8 %86, i64 20, i1 false) #12
  br label %91

87:                                               ; preds = %61
  %88 = getelementptr inbounds %"class.absl::optional.7", %"class.absl::optional.7"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %88, align 8
  %89 = getelementptr inbounds %"class.absl::optional.7", %"class.absl::optional.7"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %90 = bitcast %union.anon.11* %89 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %90, i8 0, i64 48, i1 false) #12
  br label %91

91:                                               ; preds = %87, %82, %56
  ret void
}

; Function Attrs: nofree nounwind
declare double @exp(double) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6tflite4task6vision29BuildSigmoidCalibrationParamsERKNS_23ScoreCalibrationOptionsEN4absl11string_viewERKNSt3__16vectorINS1_12LabelMapItemENS7_9allocatorIS9_EEEE(%"class.tflite::support::StatusOr"* noalias sret, %"struct.tflite::ScoreCalibrationOptions"* nocapture readonly dereferenceable(1), i8*, i64, %"class.std::__1::vector.20"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %6 = alloca [1 x %"class.absl::str_format_internal::FormatArgImpl"], align 8
  %7 = alloca %"struct.absl::strings_internal::Splitter<absl::ByChar, absl::AllowEmpty, absl::string_view>::ConvertToContainer", align 1
  %8 = alloca %"class.std::__1::vector.36", align 8
  %9 = alloca %"class.absl::strings_internal::Splitter", align 16
  %10 = alloca %"class.absl::Status", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.absl::Status", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca [15 x i8], align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = alloca [2 x %"class.absl::str_format_internal::FormatArgImpl"], align 8
  %17 = alloca %"struct.absl::strings_internal::Splitter<absl::ByChar, absl::AllowEmpty, absl::string_view>::ConvertToContainer", align 1
  %18 = alloca %"class.absl::Status", align 8
  %19 = alloca %"class.std::__1::vector.36", align 8
  %20 = alloca %"class.absl::strings_internal::Splitter", align 8
  %21 = alloca %"class.absl::Status", align 8
  %22 = alloca %"class.std::__1::basic_string", align 8
  %23 = alloca %"class.std::__1::vector", align 16
  %24 = alloca %"class.tflite::support::StatusOr.43", align 8
  %25 = alloca %"struct.tflite::task::vision::Sigmoid", align 8
  %26 = icmp eq i64 %3, 0
  br i1 %26, label %27, label %40

27:                                               ; preds = %5
  %28 = bitcast %"class.absl::Status"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #12
  call void @_ZN6tflite7support23CreateStatusWithPayloadEN4absl10StatusCodeENS1_11string_viewENS0_19TfLiteSupportStatusE(%"class.absl::Status"* nonnull sret %18, i32 3, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.2, i64 0, i64 0), i64 42, i32 1) #12
  %29 = getelementptr inbounds %"class.tflite::support::StatusOr", %"class.tflite::support::StatusOr"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.absl::Status", %"class.absl::Status"* %18, i64 0, i32 0
  %31 = load i64, i64* %30, align 8
  store i64 %31, i64* %29, align 8
  store i64 54, i64* %30, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %33, label %39, !prof !7

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.tflite::support::StatusOr", %"class.tflite::support::StatusOr"* %0, i64 0, i32 0, i32 0, i32 0
  call void @_ZN6tflite7support17internal_statusor6Helper26HandleInvalidStatusCtorArgEPN4absl6StatusE(%"class.absl::Status"* %34) #12
  %35 = load i64, i64* %30, align 8
  %36 = and i64 %35, 1
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %39, label %38

38:                                               ; preds = %33
  call void @_ZN4absl6Status15UnrefNonInlinedEm(i64 %35) #12
  br label %39

39:                                               ; preds = %27, %33, %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #12
  br label %485

40:                                               ; preds = %5
  %41 = bitcast %"class.std::__1::vector.36"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #12
  %42 = getelementptr inbounds %"class.std::__1::vector.36", %"class.std::__1::vector.36"* %19, i64 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.std::__1::vector.36", %"class.std::__1::vector.36"* %19, i64 0, i32 0, i32 1
  %44 = bitcast %"class.absl::strings_internal::Splitter"* %20 to i8*
  %45 = bitcast %"class.std::__1::vector.36"* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #12
  %46 = getelementptr inbounds %"class.absl::strings_internal::Splitter", %"class.absl::strings_internal::Splitter"* %20, i64 0, i32 0, i32 0
  store i8* %2, i8** %46, align 8, !alias.scope !8
  %47 = getelementptr inbounds %"class.absl::strings_internal::Splitter", %"class.absl::strings_internal::Splitter"* %20, i64 0, i32 0, i32 1
  store i64 %3, i64* %47, align 8, !alias.scope !8
  %48 = getelementptr inbounds %"class.absl::strings_internal::Splitter", %"class.absl::strings_internal::Splitter"* %20, i64 0, i32 1, i32 0
  store i8 10, i8* %48, align 8, !alias.scope !8
  %49 = getelementptr inbounds %"struct.absl::strings_internal::Splitter<absl::ByChar, absl::AllowEmpty, absl::string_view>::ConvertToContainer", %"struct.absl::strings_internal::Splitter<absl::ByChar, absl::AllowEmpty, absl::string_view>::ConvertToContainer"* %17, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %49) #12, !noalias !11
  call void @_ZNK4absl16strings_internal8SplitterINS_6ByCharENS_10AllowEmptyENS_11string_viewEE18ConvertToContainerINSt3__16vectorIS4_NS7_9allocatorIS4_EEEES4_Lb0EEclERKS5_(%"class.std::__1::vector.36"* nonnull sret %19, %"struct.absl::strings_internal::Splitter<absl::ByChar, absl::AllowEmpty, absl::string_view>::ConvertToContainer"* nonnull %17, %"class.absl::strings_internal::Splitter"* nonnull dereferenceable(24) %20) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %49) #12, !noalias !11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #12
  %50 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %4, i64 0, i32 0, i32 1
  %51 = bitcast %"struct.tflite::task::vision::LabelMapItem"** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"class.std::__1::vector.20"* %4 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = sub i64 %52, %54
  %56 = sdiv exact i64 %55, 72
  %57 = bitcast %"class.absl::string_view"** %43 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"class.std::__1::vector.36"* %19 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = sub i64 %58, %60
  %62 = ashr exact i64 %61, 4
  %63 = icmp eq i64 %56, %62
  %64 = inttoptr i64 %60 to %"class.absl::string_view"*
  br i1 %63, label %110, label %65

65:                                               ; preds = %40
  %66 = bitcast %"class.absl::Status"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #12
  %67 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %67) #12
  %68 = bitcast [2 x %"class.absl::str_format_internal::FormatArgImpl"]* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %68) #12, !noalias !14
  %69 = getelementptr inbounds [2 x %"class.absl::str_format_internal::FormatArgImpl"], [2 x %"class.absl::str_format_internal::FormatArgImpl"]* %16, i64 0, i64 0
  %70 = bitcast [2 x %"class.absl::str_format_internal::FormatArgImpl"]* %16 to i64*
  store i64 %56, i64* %70, align 8, !noalias !14
  %71 = getelementptr inbounds [2 x %"class.absl::str_format_internal::FormatArgImpl"], [2 x %"class.absl::str_format_internal::FormatArgImpl"]* %16, i64 0, i64 0, i32 1
  store i1 (i8*, i64, i32, i8*)* @_ZN4absl19str_format_internal13FormatArgImpl8DispatchImEEbNS1_4DataENS0_24FormatConversionSpecImplEPv, i1 (i8*, i64, i32, i8*)** %71, align 8, !noalias !14
  %72 = getelementptr inbounds [2 x %"class.absl::str_format_internal::FormatArgImpl"], [2 x %"class.absl::str_format_internal::FormatArgImpl"]* %16, i64 0, i64 1
  %73 = bitcast %"class.absl::str_format_internal::FormatArgImpl"* %72 to i64*
  store i64 %62, i64* %73, align 8, !noalias !14
  %74 = getelementptr inbounds [2 x %"class.absl::str_format_internal::FormatArgImpl"], [2 x %"class.absl::str_format_internal::FormatArgImpl"]* %16, i64 0, i64 1, i32 1
  store i1 (i8*, i64, i32, i8*)* @_ZN4absl19str_format_internal13FormatArgImpl8DispatchImEEbNS1_4DataENS0_24FormatConversionSpecImplEPv, i1 (i8*, i64, i32, i8*)** %74, align 8, !noalias !14
  call void @_ZN4absl19str_format_internal10FormatPackENS0_21UntypedFormatSpecImplENS_4SpanIKNS0_13FormatArgImplEEE(%"class.std::__1::basic_string"* nonnull sret %22, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i64 77, %"class.absl::str_format_internal::FormatArgImpl"* nonnull %69, i64 2) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %68) #12, !noalias !14
  %75 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %75, i64 0, i32 1, i32 0
  %77 = load i8, i8* %76, align 1
  %78 = icmp slt i8 %77, 0
  br i1 %78, label %82, label %79

79:                                               ; preds = %65
  %80 = zext i8 %77 to i64
  %81 = ptrtoint %"class.std::__1::basic_string"* %22 to i64
  br label %89

82:                                               ; preds = %65
  %83 = bitcast %"class.std::__1::basic_string"* %22 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %86 = load i64, i64* %85, align 8
  %87 = icmp sgt i64 %86, -1
  br i1 %87, label %89, label %88, !prof !6

88:                                               ; preds = %82
  call void @llvm.trap() #12
  unreachable

89:                                               ; preds = %79, %82
  %90 = phi i64 [ %84, %82 ], [ %81, %79 ]
  %91 = phi i64 [ %86, %82 ], [ %80, %79 ]
  %92 = inttoptr i64 %90 to i8*
  call void @_ZN6tflite7support23CreateStatusWithPayloadEN4absl10StatusCodeENS1_11string_viewENS0_19TfLiteSupportStatusE(%"class.absl::Status"* nonnull sret %21, i32 3, i8* %92, i64 %91, i32 205) #12
  %93 = getelementptr inbounds %"class.tflite::support::StatusOr", %"class.tflite::support::StatusOr"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %94 = getelementptr inbounds %"class.absl::Status", %"class.absl::Status"* %21, i64 0, i32 0
  %95 = load i64, i64* %94, align 8
  store i64 %95, i64* %93, align 8
  store i64 54, i64* %94, align 8
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %97, label %103, !prof !7

97:                                               ; preds = %89
  %98 = getelementptr inbounds %"class.tflite::support::StatusOr", %"class.tflite::support::StatusOr"* %0, i64 0, i32 0, i32 0, i32 0
  call void @_ZN6tflite7support17internal_statusor6Helper26HandleInvalidStatusCtorArgEPN4absl6StatusE(%"class.absl::Status"* %98) #12
  %99 = load i64, i64* %94, align 8
  %100 = and i64 %99, 1
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %103, label %102

102:                                              ; preds = %97
  call void @_ZN4absl6Status15UnrefNonInlinedEm(i64 %99) #12
  br label %103

103:                                              ; preds = %89, %97, %102
  %104 = load i8, i8* %76, align 1
  %105 = icmp slt i8 %104, 0
  br i1 %105, label %106, label %109

106:                                              ; preds = %103
  %107 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load i8*, i8** %107, align 8
  call void @_ZdlPv(i8* %108) #17
  br label %109

109:                                              ; preds = %103, %106
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %67) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #12
  br label %478

110:                                              ; preds = %40
  %111 = bitcast %"struct.tflite::ScoreCalibrationOptions"* %1 to i32*
  %112 = load i32, i32* %111, align 4
  %113 = sext i32 %112 to i64
  %114 = sub nsw i64 0, %113
  %115 = getelementptr inbounds %"struct.tflite::ScoreCalibrationOptions", %"struct.tflite::ScoreCalibrationOptions"* %1, i64 0, i32 0, i32 0, i64 %114
  %116 = bitcast i8* %115 to i16*
  %117 = load i16, i16* %116, align 2
  %118 = icmp ugt i16 %117, 4
  br i1 %118, label %119, label %142

119:                                              ; preds = %110
  %120 = getelementptr inbounds i8, i8* %115, i64 4
  %121 = bitcast i8* %120 to i16*
  %122 = load i16, i16* %121, align 2
  %123 = icmp eq i16 %122, 0
  br i1 %123, label %129, label %124

124:                                              ; preds = %119
  %125 = zext i16 %122 to i64
  %126 = getelementptr inbounds %"struct.tflite::ScoreCalibrationOptions", %"struct.tflite::ScoreCalibrationOptions"* %1, i64 0, i32 0, i32 0, i64 %125
  %127 = load i8, i8* %126, align 1
  %128 = sext i8 %127 to i32
  br label %129

129:                                              ; preds = %124, %119
  %130 = phi i32 [ 0, %119 ], [ %128, %124 ]
  %131 = icmp ugt i16 %117, 6
  br i1 %131, label %132, label %142

132:                                              ; preds = %129
  %133 = getelementptr inbounds i8, i8* %115, i64 6
  %134 = bitcast i8* %133 to i16*
  %135 = load i16, i16* %134, align 2
  %136 = icmp eq i16 %135, 0
  br i1 %136, label %142, label %137

137:                                              ; preds = %132
  %138 = zext i16 %135 to i64
  %139 = getelementptr inbounds %"struct.tflite::ScoreCalibrationOptions", %"struct.tflite::ScoreCalibrationOptions"* %1, i64 0, i32 0, i32 0, i64 %138
  %140 = bitcast i8* %139 to i32*
  %141 = load i32, i32* %140, align 4
  br label %142

142:                                              ; preds = %110, %129, %132, %137
  %143 = phi i32 [ %130, %137 ], [ %130, %132 ], [ %130, %129 ], [ 0, %110 ]
  %144 = phi i32 [ %141, %137 ], [ 0, %132 ], [ 0, %129 ], [ 0, %110 ]
  %145 = bitcast %"class.std::__1::vector"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %145) #12
  %146 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %23, i64 0, i32 0, i32 0
  %147 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %23, i64 0, i32 0, i32 1
  %148 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %23, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %145, i8 0, i64 24, i1 false) #12
  %149 = icmp eq i64 %52, %54
  br i1 %149, label %441, label %150

150:                                              ; preds = %142
  %151 = bitcast %"class.tflite::support::StatusOr.43"* %24 to i8*
  %152 = bitcast %"class.std::__1::vector.36"* %8 to i8*
  %153 = getelementptr inbounds %"class.std::__1::vector.36", %"class.std::__1::vector.36"* %8, i64 0, i32 0, i32 0
  %154 = getelementptr inbounds %"class.std::__1::vector.36", %"class.std::__1::vector.36"* %8, i64 0, i32 0, i32 1
  %155 = bitcast %"class.absl::strings_internal::Splitter"* %9 to i8*
  %156 = getelementptr inbounds %"class.absl::strings_internal::Splitter", %"class.absl::strings_internal::Splitter"* %9, i64 0, i32 1, i32 0
  %157 = getelementptr inbounds %"struct.absl::strings_internal::Splitter<absl::ByChar, absl::AllowEmpty, absl::string_view>::ConvertToContainer", %"struct.absl::strings_internal::Splitter<absl::ByChar, absl::AllowEmpty, absl::string_view>::ConvertToContainer"* %7, i64 0, i32 0
  %158 = bitcast %"class.absl::string_view"** %154 to i64*
  %159 = bitcast %"class.std::__1::vector.36"* %8 to i64*
  %160 = bitcast %"class.absl::Status"* %10 to i8*
  %161 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %162 = bitcast [1 x %"class.absl::str_format_internal::FormatArgImpl"]* %6 to i8*
  %163 = getelementptr inbounds [1 x %"class.absl::str_format_internal::FormatArgImpl"], [1 x %"class.absl::str_format_internal::FormatArgImpl"]* %6, i64 0, i64 0
  %164 = bitcast [1 x %"class.absl::str_format_internal::FormatArgImpl"]* %6 to i64*
  %165 = getelementptr inbounds [1 x %"class.absl::str_format_internal::FormatArgImpl"], [1 x %"class.absl::str_format_internal::FormatArgImpl"]* %6, i64 0, i64 0, i32 1
  %166 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %167 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %166, i64 0, i32 1, i32 0
  %168 = ptrtoint %"class.std::__1::basic_string"* %11 to i64
  %169 = bitcast %"class.std::__1::basic_string"* %11 to i64*
  %170 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %171 = getelementptr inbounds %"class.tflite::support::StatusOr.43", %"class.tflite::support::StatusOr.43"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  %172 = getelementptr inbounds %"class.absl::Status", %"class.absl::Status"* %10, i64 0, i32 0
  %173 = getelementptr inbounds %"class.tflite::support::StatusOr.43", %"class.tflite::support::StatusOr.43"* %24, i64 0, i32 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %175 = bitcast %"class.absl::Status"* %12 to i8*
  %176 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %177 = bitcast [1 x %"class.absl::str_format_internal::FormatArgImpl"]* %6 to %"class.absl::string_view"**
  %178 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %179 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %178, i64 0, i32 1, i32 0
  %180 = ptrtoint %"class.std::__1::basic_string"* %13 to i64
  %181 = bitcast %"class.std::__1::basic_string"* %13 to i64*
  %182 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %183 = getelementptr inbounds %"class.absl::Status", %"class.absl::Status"* %12, i64 0, i32 0
  %184 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %185 = getelementptr inbounds [15 x i8], [15 x i8]* %14, i64 0, i64 0
  %186 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %187 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %188 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %189 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %190 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %191 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %190, i64 0, i32 1, i32 0
  %192 = bitcast %"class.std::__1::basic_string"* %15 to i64*
  %193 = getelementptr inbounds i8, i8* %186, i64 23
  %194 = bitcast i64* %189 to i8*
  %195 = getelementptr inbounds %"class.tflite::support::StatusOr.43", %"class.tflite::support::StatusOr.43"* %24, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = bitcast i8** %195 to i64*
  %197 = getelementptr inbounds %"class.tflite::support::StatusOr.43", %"class.tflite::support::StatusOr.43"* %24, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %198 = bitcast i64* %197 to i8*
  %199 = getelementptr inbounds i8, i8* %151, i64 31
  %200 = getelementptr inbounds %"class.tflite::support::StatusOr.43", %"class.tflite::support::StatusOr.43"* %24, i64 0, i32 0, i32 1, i32 0, i32 1
  %201 = bitcast float* %200 to i32*
  %202 = getelementptr inbounds %"class.tflite::support::StatusOr.43", %"class.tflite::support::StatusOr.43"* %24, i64 0, i32 0, i32 1, i32 0, i32 2
  %203 = bitcast float* %202 to i32*
  %204 = getelementptr inbounds %"class.tflite::support::StatusOr.43", %"class.tflite::support::StatusOr.43"* %24, i64 0, i32 0, i32 1, i32 0, i32 3
  %205 = bitcast float* %204 to i32*
  %206 = getelementptr inbounds %"class.tflite::support::StatusOr.43", %"class.tflite::support::StatusOr.43"* %24, i64 0, i32 0, i32 1, i32 0, i32 4
  %207 = bitcast %"class.absl::optional"* %206 to i64*
  %208 = getelementptr inbounds %"class.tflite::support::StatusOr", %"class.tflite::support::StatusOr"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %209 = bitcast %"struct.tflite::task::vision::Sigmoid"* %25 to i8*
  %210 = getelementptr inbounds %"class.tflite::support::StatusOr.43", %"class.tflite::support::StatusOr.43"* %24, i64 0, i32 0, i32 1, i32 0
  %211 = bitcast %"struct.tflite::task::vision::Sigmoid"* %210 to i8*
  %212 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %25, i64 0, i32 1
  %213 = bitcast float* %212 to i8*
  %214 = bitcast float* %200 to i8*
  %215 = bitcast %"struct.tflite::task::vision::Sigmoid"** %147 to i64*
  %216 = bitcast %"struct.tflite::task::vision::Sigmoid"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %217 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %216, i64 0, i32 1, i32 0
  %218 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %219 = bitcast %"struct.tflite::task::vision::Sigmoid"* %210 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %220 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %219, i64 0, i32 1, i32 0
  %221 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %210, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %222 = bitcast %"class.absl::strings_internal::Splitter"* %9 to <2 x i64>*
  br label %223

223:                                              ; preds = %434, %150
  %224 = phi i64 [ %54, %150 ], [ %428, %434 ]
  %225 = phi i64 [ %52, %150 ], [ %429, %434 ]
  %226 = phi %"class.absl::string_view"* [ %64, %150 ], [ %435, %434 ]
  %227 = phi i64 [ 0, %150 ], [ %430, %434 ]
  %228 = inttoptr i64 %224 to %"struct.tflite::task::vision::LabelMapItem"*
  %229 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %226, i64 %227, i32 1
  %230 = load i64, i64* %229, align 8
  %231 = icmp eq i64 %230, 0
  br i1 %231, label %427, label %232

232:                                              ; preds = %223
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %151) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %151, i8* align 8 bitcast ({ { %union.anon.45, { <{ %"class.std::__1::basic_string", float, float, float, { { { { i8, [3 x i8], %union.anon.1 } } } }, [4 x i8] }> } } }* @__const._ZN6tflite4task6vision29BuildSigmoidCalibrationParamsERKNS_23ScoreCalibrationOptionsEN4absl11string_viewERKNSt3__16vectorINS1_12LabelMapItemENS7_9allocatorIS9_EEEE._status_or_value215 to i8*), i64 56, i1 false)
  %233 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %228, i64 %227, i32 0
  %234 = bitcast %"class.std::__1::basic_string"* %233 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %235 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %234, i64 0, i32 1, i32 0
  %236 = load i8, i8* %235, align 1
  %237 = icmp slt i8 %236, 0
  br i1 %237, label %241, label %238

238:                                              ; preds = %232
  %239 = zext i8 %236 to i64
  %240 = ptrtoint %"class.std::__1::basic_string"* %233 to i64
  br label %248

241:                                              ; preds = %232
  %242 = bitcast %"class.std::__1::basic_string"* %233 to i64*
  %243 = load i64, i64* %242, align 8
  %244 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %228, i64 %227, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %245 = load i64, i64* %244, align 8
  %246 = icmp sgt i64 %245, -1
  br i1 %246, label %248, label %247, !prof !6

247:                                              ; preds = %241
  call void @llvm.trap() #12
  unreachable

248:                                              ; preds = %238, %241
  %249 = phi i64 [ %243, %241 ], [ %240, %238 ]
  %250 = phi i64 [ %245, %241 ], [ %239, %238 ]
  %251 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %226, i64 %227, i32 0
  %252 = bitcast i8** %251 to <2 x i64>*
  %253 = load <2 x i64>, <2 x i64>* %252, align 8
  %254 = inttoptr i64 %249 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %152) #12, !noalias !17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %152, i8 -86, i64 24, i1 false) #12, !noalias !17
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %155) #12, !noalias !17
  store <2 x i64> %253, <2 x i64>* %222, align 16, !alias.scope !20, !noalias !17
  store i8 44, i8* %156, align 16, !alias.scope !20, !noalias !17
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %157) #12, !noalias !23
  call void @_ZNK4absl16strings_internal8SplitterINS_6ByCharENS_10AllowEmptyENS_11string_viewEE18ConvertToContainerINSt3__16vectorIS4_NS7_9allocatorIS4_EEEES4_Lb0EEclERKS5_(%"class.std::__1::vector.36"* nonnull sret %8, %"struct.absl::strings_internal::Splitter<absl::ByChar, absl::AllowEmpty, absl::string_view>::ConvertToContainer"* nonnull %7, %"class.absl::strings_internal::Splitter"* nonnull dereferenceable(24) %9) #12, !noalias !17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %157) #12, !noalias !23
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %155) #12, !noalias !17
  %255 = load i64, i64* %158, align 8, !noalias !17
  %256 = load i64, i64* %159, align 8, !noalias !17
  %257 = sub i64 %255, %256
  %258 = ashr exact i64 %257, 4
  %259 = add nsw i64 %258, -3
  %260 = icmp ult i64 %259, 2
  br i1 %260, label %288, label %261

261:                                              ; preds = %248
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %160) #12, !noalias !17
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %161) #12, !noalias !17
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %162) #12, !noalias !26
  store i64 %258, i64* %164, align 8, !noalias !26
  store i1 (i8*, i64, i32, i8*)* @_ZN4absl19str_format_internal13FormatArgImpl8DispatchImEEbNS1_4DataENS0_24FormatConversionSpecImplEPv, i1 (i8*, i64, i32, i8*)** %165, align 8, !noalias !26
  call void @_ZN4absl19str_format_internal10FormatPackENS0_21UntypedFormatSpecImplENS_4SpanIKNS0_13FormatArgImplEEE(%"class.std::__1::basic_string"* nonnull sret %11, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.5, i64 0, i64 0), i64 70, %"class.absl::str_format_internal::FormatArgImpl"* nonnull %163, i64 1) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %162) #12, !noalias !26
  %262 = load i8, i8* %167, align 1, !noalias !17
  %263 = icmp slt i8 %262, 0
  br i1 %263, label %266, label %264

264:                                              ; preds = %261
  %265 = zext i8 %262 to i64
  br label %271

266:                                              ; preds = %261
  %267 = load i64, i64* %169, align 8, !noalias !17
  %268 = load i64, i64* %170, align 8, !noalias !17
  %269 = icmp sgt i64 %268, -1
  br i1 %269, label %271, label %270, !prof !6

270:                                              ; preds = %266
  call void @llvm.trap() #12
  unreachable

271:                                              ; preds = %266, %264
  %272 = phi i64 [ %267, %266 ], [ %168, %264 ]
  %273 = phi i64 [ %268, %266 ], [ %265, %264 ]
  %274 = inttoptr i64 %272 to i8*
  call void @_ZN6tflite7support23CreateStatusWithPayloadEN4absl10StatusCodeENS1_11string_viewENS0_19TfLiteSupportStatusE(%"class.absl::Status"* nonnull sret %10, i32 3, i8* %274, i64 %273, i32 206) #12
  %275 = load i64, i64* %172, align 8, !noalias !17
  store i64 %275, i64* %171, align 8, !alias.scope !17
  store i64 54, i64* %172, align 8, !noalias !17
  %276 = icmp eq i64 %275, 0
  br i1 %276, label %277, label %282, !prof !7

277:                                              ; preds = %271
  call void @_ZN6tflite7support17internal_statusor6Helper26HandleInvalidStatusCtorArgEPN4absl6StatusE(%"class.absl::Status"* nonnull %173) #12
  %278 = load i64, i64* %172, align 8, !noalias !17
  %279 = and i64 %278, 1
  %280 = icmp eq i64 %279, 0
  br i1 %280, label %282, label %281

281:                                              ; preds = %277
  call void @_ZN4absl6Status15UnrefNonInlinedEm(i64 %278) #12
  br label %282

282:                                              ; preds = %281, %277, %271
  %283 = load i8, i8* %167, align 1, !noalias !17
  %284 = icmp slt i8 %283, 0
  br i1 %284, label %285, label %287

285:                                              ; preds = %282
  %286 = load i8*, i8** %174, align 8, !noalias !17
  call void @_ZdlPv(i8* %286) #17
  br label %287

287:                                              ; preds = %285, %282
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %161) #12, !noalias !17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %160) #12, !noalias !17
  br label %388

288:                                              ; preds = %248
  %289 = call i8* @_Znwm(i64 16) #17
  %290 = bitcast i8* %289 to float*
  %291 = getelementptr i8, i8* %289, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %289, i8 0, i64 16, i1 false) #12, !noalias !17
  %292 = icmp eq i64 %255, %256
  br i1 %292, label %339, label %299

293:                                              ; preds = %299
  %294 = load i64, i64* %158, align 8, !noalias !17
  %295 = load i64, i64* %159, align 8, !noalias !17
  %296 = sub i64 %294, %295
  %297 = ashr exact i64 %296, 4
  %298 = icmp ugt i64 %297, %309
  br i1 %298, label %299, label %339

299:                                              ; preds = %288, %293
  %300 = phi i64 [ %295, %293 ], [ %256, %288 ]
  %301 = phi i64 [ %309, %293 ], [ 0, %288 ]
  %302 = inttoptr i64 %300 to %"class.absl::string_view"*
  %303 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %302, i64 %301, i32 0
  %304 = load i8*, i8** %303, align 8
  %305 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %302, i64 %301, i32 1
  %306 = load i64, i64* %305, align 8
  %307 = getelementptr inbounds float, float* %290, i64 %301
  %308 = call zeroext i1 @_ZN4absl10SimpleAtofENS_11string_viewEPf(i8* %304, i64 %306, float* %307) #12
  %309 = add nuw i64 %301, 1
  br i1 %308, label %293, label %310

310:                                              ; preds = %299
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %175) #12, !noalias !17
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %176) #12, !noalias !17
  %311 = load %"class.absl::string_view"*, %"class.absl::string_view"** %153, align 8, !noalias !17
  %312 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %311, i64 %301
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %162) #12, !noalias !29
  store %"class.absl::string_view"* %312, %"class.absl::string_view"** %177, align 8, !noalias !29
  store i1 (i8*, i64, i32, i8*)* @_ZN4absl19str_format_internal13FormatArgImpl8DispatchINS_11string_viewEEEbNS1_4DataENS0_24FormatConversionSpecImplEPv, i1 (i8*, i64, i32, i8*)** %165, align 8, !noalias !29
  call void @_ZN4absl19str_format_internal10FormatPackENS0_21UntypedFormatSpecImplENS_4SpanIKNS0_13FormatArgImplEEE(%"class.std::__1::basic_string"* nonnull sret %13, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.6, i64 0, i64 0), i64 57, %"class.absl::str_format_internal::FormatArgImpl"* nonnull %163, i64 1) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %162) #12, !noalias !29
  %313 = load i8, i8* %179, align 1, !noalias !17
  %314 = icmp slt i8 %313, 0
  br i1 %314, label %317, label %315

315:                                              ; preds = %310
  %316 = zext i8 %313 to i64
  br label %322

317:                                              ; preds = %310
  %318 = load i64, i64* %181, align 8, !noalias !17
  %319 = load i64, i64* %182, align 8, !noalias !17
  %320 = icmp sgt i64 %319, -1
  br i1 %320, label %322, label %321, !prof !6

321:                                              ; preds = %317
  call void @llvm.trap() #12
  unreachable

322:                                              ; preds = %317, %315
  %323 = phi i64 [ %318, %317 ], [ %180, %315 ]
  %324 = phi i64 [ %319, %317 ], [ %316, %315 ]
  %325 = inttoptr i64 %323 to i8*
  call void @_ZN6tflite7support23CreateStatusWithPayloadEN4absl10StatusCodeENS1_11string_viewENS0_19TfLiteSupportStatusE(%"class.absl::Status"* nonnull sret %12, i32 3, i8* %325, i64 %324, i32 206) #12
  %326 = load i64, i64* %183, align 8, !noalias !17
  store i64 %326, i64* %171, align 8, !alias.scope !17
  store i64 54, i64* %183, align 8, !noalias !17
  %327 = icmp eq i64 %326, 0
  br i1 %327, label %328, label %333, !prof !7

328:                                              ; preds = %322
  call void @_ZN6tflite7support17internal_statusor6Helper26HandleInvalidStatusCtorArgEPN4absl6StatusE(%"class.absl::Status"* nonnull %173) #12
  %329 = load i64, i64* %183, align 8, !noalias !17
  %330 = and i64 %329, 1
  %331 = icmp eq i64 %330, 0
  br i1 %331, label %333, label %332

332:                                              ; preds = %328
  call void @_ZN4absl6Status15UnrefNonInlinedEm(i64 %329) #12
  br label %333

333:                                              ; preds = %332, %328, %322
  %334 = load i8, i8* %179, align 1, !noalias !17
  %335 = icmp slt i8 %334, 0
  br i1 %335, label %336, label %338

336:                                              ; preds = %333
  %337 = load i8*, i8** %184, align 8, !noalias !17
  call void @_ZdlPv(i8* %337) #17
  br label %338

338:                                              ; preds = %336, %333
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %176) #12, !noalias !17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %175) #12, !noalias !17
  br label %387

339:                                              ; preds = %293, %288
  %340 = phi i64 [ %255, %288 ], [ %295, %293 ]
  %341 = phi i64 [ %255, %288 ], [ %294, %293 ]
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %185)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %185, i8 0, i64 15, i1 false), !noalias !17
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %186) #12, !noalias !17
  %342 = icmp eq i64 %249, 0
  br i1 %342, label %343, label %344

343:                                              ; preds = %339
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %186, i8 0, i64 24, i1 false) #12, !alias.scope !32, !noalias !17
  br label %365

344:                                              ; preds = %339
  %345 = icmp ugt i64 %250, -17
  br i1 %345, label %346, label %348

346:                                              ; preds = %344
  %347 = bitcast %"class.std::__1::basic_string"* %15 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %347) #16
  unreachable

348:                                              ; preds = %344
  %349 = icmp ult i64 %250, 23
  br i1 %349, label %355, label %350

350:                                              ; preds = %348
  %351 = add nuw i64 %250, 16
  %352 = and i64 %351, -16
  %353 = call i8* @_Znwm(i64 %352) #17
  store i8* %353, i8** %187, align 8, !alias.scope !32, !noalias !17
  %354 = or i64 %352, -9223372036854775808
  store i64 %354, i64* %188, align 8, !alias.scope !32, !noalias !17
  store i64 %250, i64* %189, align 8, !alias.scope !32, !noalias !17
  br label %358

355:                                              ; preds = %348
  %356 = trunc i64 %250 to i8
  store i8 %356, i8* %191, align 1, !alias.scope !32, !noalias !17
  %357 = icmp eq i64 %250, 0
  br i1 %357, label %360, label %358

358:                                              ; preds = %355, %350
  %359 = phi i8* [ %353, %350 ], [ %186, %355 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %359, i8* nonnull align 1 %254, i64 %250, i1 false) #12, !noalias !17
  br label %360

360:                                              ; preds = %358, %355
  %361 = phi i8* [ %186, %355 ], [ %359, %358 ]
  %362 = getelementptr inbounds i8, i8* %361, i64 %250
  store i8 0, i8* %362, align 1, !noalias !17
  %363 = load i64, i64* %192, align 8, !noalias !17
  %364 = load i8, i8* %193, align 1, !noalias !17
  br label %365

365:                                              ; preds = %360, %343
  %366 = phi i8 [ 0, %343 ], [ %364, %360 ]
  %367 = phi i64 [ 0, %343 ], [ %363, %360 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %185, i8* align 8 %194, i64 15, i1 false) #12, !noalias !17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %186) #12, !noalias !17
  %368 = bitcast i8* %289 to i32*
  %369 = load i32, i32* %368, align 4, !noalias !17
  %370 = getelementptr inbounds i8, i8* %289, i64 4
  %371 = bitcast i8* %370 to i32*
  %372 = load i32, i32* %371, align 4, !noalias !17
  %373 = getelementptr inbounds i8, i8* %289, i64 8
  %374 = bitcast i8* %373 to i32*
  %375 = load i32, i32* %374, align 4, !noalias !17
  %376 = sub i64 %341, %340
  %377 = icmp eq i64 %376, 64
  br i1 %377, label %378, label %383

378:                                              ; preds = %365
  %379 = bitcast i8* %291 to i32*
  %380 = load i32, i32* %379, align 4, !noalias !17
  %381 = zext i32 %380 to i64
  %382 = shl nuw i64 %381, 32
  br label %383

383:                                              ; preds = %378, %365
  %384 = phi i64 [ %382, %378 ], [ -1431655936, %365 ]
  %385 = phi i64 [ 1, %378 ], [ 0, %365 ]
  store i64 %367, i64* %196, align 8, !alias.scope !17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %198, i8* nonnull align 8 %185, i64 15, i1 false) #12
  store i8 %366, i8* %199, align 1, !alias.scope !17
  store i32 %372, i32* %201, align 8, !alias.scope !17
  store i32 %375, i32* %203, align 4, !alias.scope !17
  store i32 %369, i32* %205, align 8, !alias.scope !17
  %386 = or i64 %385, %384
  store i64 %386, i64* %207, align 4, !alias.scope !17
  store i64 0, i64* %171, align 8, !alias.scope !17
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %185)
  br label %387

387:                                              ; preds = %383, %338
  call void @_ZdlPv(i8* nonnull %289) #17
  br label %388

388:                                              ; preds = %387, %287
  %389 = load %"class.absl::string_view"*, %"class.absl::string_view"** %153, align 8, !noalias !17
  %390 = icmp eq %"class.absl::string_view"* %389, null
  br i1 %390, label %394, label %391

391:                                              ; preds = %388
  %392 = ptrtoint %"class.absl::string_view"* %389 to i64
  store i64 %392, i64* %158, align 8, !noalias !17
  %393 = bitcast %"class.absl::string_view"* %389 to i8*
  call void @_ZdlPv(i8* %393) #17
  br label %394

394:                                              ; preds = %388, %391
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %152) #12, !noalias !17
  %395 = load i64, i64* %171, align 8
  %396 = icmp eq i64 %395, 0
  br i1 %396, label %397, label %453, !prof !6

397:                                              ; preds = %394
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %209) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %209, i8* align 8 bitcast (<{ %"class.std::__1::basic_string", float, float, float, { { { { i8, [3 x i8], %union.anon.1 } } } }, [4 x i8] }>* @__const._ZN6tflite4task6vision29BuildSigmoidCalibrationParamsERKNS_23ScoreCalibrationOptionsEN4absl11string_viewERKNSt3__16vectorINS1_12LabelMapItemENS7_9allocatorIS9_EEEE.sigmoid to i8*), i64 48, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %209, i8* align 8 %211, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %211, i8 0, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %213, i8* align 8 %214, i64 20, i1 false) #12
  %398 = load %"struct.tflite::task::vision::Sigmoid"*, %"struct.tflite::task::vision::Sigmoid"** %147, align 8
  %399 = load %"struct.tflite::task::vision::Sigmoid"*, %"struct.tflite::task::vision::Sigmoid"** %148, align 16
  %400 = icmp ult %"struct.tflite::task::vision::Sigmoid"* %398, %399
  br i1 %400, label %401, label %407

401:                                              ; preds = %397
  %402 = bitcast %"struct.tflite::task::vision::Sigmoid"* %398 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %402, i8* nonnull align 8 %209, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %209, i8 0, i64 24, i1 false) #12
  %403 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %398, i64 0, i32 1
  %404 = bitcast float* %403 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %404, i8* align 8 %213, i64 20, i1 false) #12
  %405 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %398, i64 1
  %406 = ptrtoint %"struct.tflite::task::vision::Sigmoid"* %405 to i64
  store i64 %406, i64* %215, align 8
  br label %412

407:                                              ; preds = %397
  call void @_ZNSt3__16vectorIN6tflite4task6vision7SigmoidENS_9allocatorIS4_EEE24__emplace_back_slow_pathIJS4_EEEvDpOT_(%"class.std::__1::vector"* nonnull %23, %"struct.tflite::task::vision::Sigmoid"* nonnull dereferenceable(48) %25) #12
  %408 = load i8, i8* %217, align 1
  %409 = icmp slt i8 %408, 0
  br i1 %409, label %410, label %412

410:                                              ; preds = %407
  %411 = load i8*, i8** %218, align 8
  call void @_ZdlPv(i8* %411) #17
  br label %412

412:                                              ; preds = %410, %407, %401
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %209) #12
  %413 = load i64, i64* %171, align 8
  %414 = icmp eq i64 %413, 0
  %415 = and i64 %413, 1
  %416 = icmp eq i64 %415, 0
  br i1 %416, label %418, label %417

417:                                              ; preds = %412
  call void @_ZN4absl6Status15UnrefNonInlinedEm(i64 %413) #12
  br label %418

418:                                              ; preds = %417, %412
  %419 = load i8, i8* %220, align 1
  %420 = icmp slt i8 %419, 0
  %421 = and i1 %414, %420
  br i1 %421, label %422, label %424

422:                                              ; preds = %418
  %423 = load i8*, i8** %221, align 8
  call void @_ZdlPv(i8* %423) #17
  br label %424

424:                                              ; preds = %418, %422
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %151) #12
  %425 = load i64, i64* %51, align 8
  %426 = load i64, i64* %53, align 8
  br label %427

427:                                              ; preds = %424, %223
  %428 = phi i64 [ %426, %424 ], [ %224, %223 ]
  %429 = phi i64 [ %425, %424 ], [ %225, %223 ]
  %430 = add nuw i64 %227, 1
  %431 = sub i64 %429, %428
  %432 = sdiv exact i64 %431, 72
  %433 = icmp ugt i64 %432, %430
  br i1 %433, label %434, label %436

434:                                              ; preds = %427
  %435 = load %"class.absl::string_view"*, %"class.absl::string_view"** %42, align 8
  br label %223

436:                                              ; preds = %427
  %437 = bitcast %"class.std::__1::vector"* %23 to <2 x i64>*
  %438 = load <2 x i64>, <2 x i64>* %437, align 16
  %439 = bitcast %"struct.tflite::task::vision::Sigmoid"** %148 to i64*
  %440 = load i64, i64* %439, align 16
  br label %441

441:                                              ; preds = %436, %142
  %442 = phi i64 [ %440, %436 ], [ 0, %142 ]
  %443 = phi <2 x i64> [ %438, %436 ], [ zeroinitializer, %142 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %145, i8 0, i64 24, i1 false) #12
  %444 = getelementptr inbounds %"class.tflite::support::StatusOr", %"class.tflite::support::StatusOr"* %0, i64 0, i32 0, i32 1, i32 0
  %445 = bitcast %"struct.tflite::task::vision::SigmoidCalibrationParameters"* %444 to <2 x i64>*
  store <2 x i64> %443, <2 x i64>* %445, align 8
  %446 = getelementptr inbounds %"class.tflite::support::StatusOr", %"class.tflite::support::StatusOr"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %447 = bitcast %"struct.tflite::task::vision::Sigmoid"** %446 to i64*
  store i64 %442, i64* %447, align 8
  %448 = getelementptr inbounds %"class.tflite::support::StatusOr", %"class.tflite::support::StatusOr"* %0, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %448, i8 0, i64 56, i1 false) #12
  %449 = getelementptr inbounds %"class.tflite::support::StatusOr", %"class.tflite::support::StatusOr"* %0, i64 0, i32 0, i32 1, i32 0, i32 2
  %450 = bitcast float* %449 to i32*
  store i32 %144, i32* %450, align 8
  %451 = getelementptr inbounds %"class.tflite::support::StatusOr", %"class.tflite::support::StatusOr"* %0, i64 0, i32 0, i32 1, i32 0, i32 3
  store i32 %143, i32* %451, align 4
  %452 = getelementptr inbounds %"class.tflite::support::StatusOr", %"class.tflite::support::StatusOr"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %452, align 8
  br label %477

453:                                              ; preds = %394
  store i64 %395, i64* %208, align 8
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %151) #12
  %454 = load %"struct.tflite::task::vision::Sigmoid"*, %"struct.tflite::task::vision::Sigmoid"** %146, align 16
  %455 = icmp eq %"struct.tflite::task::vision::Sigmoid"* %454, null
  br i1 %455, label %477, label %456

456:                                              ; preds = %453
  %457 = bitcast %"struct.tflite::task::vision::Sigmoid"* %454 to i8*
  %458 = load %"struct.tflite::task::vision::Sigmoid"*, %"struct.tflite::task::vision::Sigmoid"** %147, align 8
  %459 = icmp eq %"struct.tflite::task::vision::Sigmoid"* %458, %454
  br i1 %459, label %475, label %460

460:                                              ; preds = %456, %470
  %461 = phi %"struct.tflite::task::vision::Sigmoid"* [ %462, %470 ], [ %458, %456 ]
  %462 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %461, i64 -1
  %463 = bitcast %"struct.tflite::task::vision::Sigmoid"* %462 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %464 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %463, i64 0, i32 1, i32 0
  %465 = load i8, i8* %464, align 1
  %466 = icmp slt i8 %465, 0
  br i1 %466, label %467, label %470

467:                                              ; preds = %460
  %468 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %462, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %469 = load i8*, i8** %468, align 8
  call void @_ZdlPv(i8* %469) #17
  br label %470

470:                                              ; preds = %467, %460
  %471 = icmp eq %"struct.tflite::task::vision::Sigmoid"* %462, %454
  br i1 %471, label %472, label %460

472:                                              ; preds = %470
  %473 = bitcast %"class.std::__1::vector"* %23 to i8**
  %474 = load i8*, i8** %473, align 16
  br label %475

475:                                              ; preds = %472, %456
  %476 = phi i8* [ %474, %472 ], [ %457, %456 ]
  store %"struct.tflite::task::vision::Sigmoid"* %454, %"struct.tflite::task::vision::Sigmoid"** %147, align 8
  call void @_ZdlPv(i8* %476) #17
  br label %477

477:                                              ; preds = %441, %475, %453
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %145) #12
  br label %478

478:                                              ; preds = %477, %109
  %479 = load %"class.absl::string_view"*, %"class.absl::string_view"** %42, align 8
  %480 = icmp eq %"class.absl::string_view"* %479, null
  br i1 %480, label %484, label %481

481:                                              ; preds = %478
  %482 = ptrtoint %"class.absl::string_view"* %479 to i64
  store i64 %482, i64* %57, align 8
  %483 = bitcast %"class.absl::string_view"* %479 to i8*
  call void @_ZdlPv(i8* %483) #17
  br label %484

484:                                              ; preds = %478, %481
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #12
  br label %485

485:                                              ; preds = %484, %39
  ret void
}

declare void @_ZN6tflite7support23CreateStatusWithPayloadEN4absl10StatusCodeENS1_11string_viewENS0_19TfLiteSupportStatusE(%"class.absl::Status"* sret, i32, i8*, i64, i32) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN6tflite4task6vision7SigmoidENS_9allocatorIS4_EEE6assignIPS4_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_(%"class.std::__1::vector"*, %"struct.tflite::task::vision::Sigmoid"*, %"struct.tflite::task::vision::Sigmoid"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.tflite::task::vision::Sigmoid"* %2 to i64
  %5 = ptrtoint %"struct.tflite::task::vision::Sigmoid"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 48
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.tflite::task::vision::Sigmoid"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 48
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.tflite::task::vision::Sigmoid"*
  br i1 %15, label %120, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.tflite::task::vision::Sigmoid"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 48
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %1, i64 %22
  %25 = select i1 %23, %"struct.tflite::task::vision::Sigmoid"* %24, %"struct.tflite::task::vision::Sigmoid"* %2
  %26 = icmp eq %"struct.tflite::task::vision::Sigmoid"* %25, %1
  br i1 %26, label %69, label %27

27:                                               ; preds = %17, %61
  %28 = phi %"struct.tflite::task::vision::Sigmoid"* [ %67, %61 ], [ %16, %17 ]
  %29 = phi %"struct.tflite::task::vision::Sigmoid"* [ %66, %61 ], [ %1, %17 ]
  %30 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %28, i64 0, i32 0
  %31 = icmp eq %"struct.tflite::task::vision::Sigmoid"* %28, %29
  br i1 %31, label %61, label %32

32:                                               ; preds = %27
  %33 = bitcast %"struct.tflite::task::vision::Sigmoid"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  %37 = bitcast %"struct.tflite::task::vision::Sigmoid"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %36, label %51, label %41

41:                                               ; preds = %32
  br i1 %40, label %45, label %42

42:                                               ; preds = %41
  %43 = bitcast %"struct.tflite::task::vision::Sigmoid"* %28 to i8*
  %44 = bitcast %"struct.tflite::task::vision::Sigmoid"* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 24, i1 false) #12
  br label %61

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %30, i8* %47, i64 %49) #12
  br label %61

51:                                               ; preds = %32
  %52 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  %54 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"struct.tflite::task::vision::Sigmoid"* %29 to i8*
  %57 = zext i8 %39 to i64
  %58 = select i1 %40, i8* %53, i8* %56
  %59 = select i1 %40, i64 %55, i64 %57
  %60 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %30, i8* %58, i64 %59) #12
  br label %61

61:                                               ; preds = %51, %45, %42, %27
  %62 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %28, i64 0, i32 1
  %63 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %29, i64 0, i32 1
  %64 = bitcast float* %62 to i8*
  %65 = bitcast float* %63 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %65, i64 20, i1 false) #12
  %66 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %29, i64 1
  %67 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %28, i64 1
  %68 = icmp eq %"struct.tflite::task::vision::Sigmoid"* %66, %25
  br i1 %68, label %69, label %27

69:                                               ; preds = %61, %17
  %70 = phi %"struct.tflite::task::vision::Sigmoid"* [ %16, %17 ], [ %67, %61 ]
  br i1 %23, label %71, label %104

71:                                               ; preds = %69
  %72 = load i64, i64* %19, align 8
  %73 = icmp eq %"struct.tflite::task::vision::Sigmoid"* %25, %2
  br i1 %73, label %102, label %74

74:                                               ; preds = %71
  %75 = inttoptr i64 %72 to %"struct.tflite::task::vision::Sigmoid"*
  br label %76

76:                                               ; preds = %92, %74
  %77 = phi %"struct.tflite::task::vision::Sigmoid"* [ %98, %92 ], [ %75, %74 ]
  %78 = phi %"struct.tflite::task::vision::Sigmoid"* [ %97, %92 ], [ %24, %74 ]
  %79 = bitcast %"struct.tflite::task::vision::Sigmoid"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %86, label %83

83:                                               ; preds = %76
  %84 = bitcast %"struct.tflite::task::vision::Sigmoid"* %77 to i8*
  %85 = bitcast %"struct.tflite::task::vision::Sigmoid"* %78 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* align 8 %85, i64 24, i1 false) #12
  br label %92

86:                                               ; preds = %76
  %87 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %77, i64 0, i32 0
  %88 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load i8*, i8** %88, align 8
  %90 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %91 = load i64, i64* %90, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %87, i8* %89, i64 %91) #12
  br label %92

92:                                               ; preds = %86, %83
  %93 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %77, i64 0, i32 1
  %94 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %78, i64 0, i32 1
  %95 = bitcast float* %93 to i8*
  %96 = bitcast float* %94 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %95, i8* align 8 %96, i64 20, i1 false) #12
  %97 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %78, i64 1
  %98 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %77, i64 1
  %99 = icmp eq %"struct.tflite::task::vision::Sigmoid"* %97, %2
  br i1 %99, label %100, label %76

100:                                              ; preds = %92
  %101 = ptrtoint %"struct.tflite::task::vision::Sigmoid"* %98 to i64
  br label %102

102:                                              ; preds = %71, %100
  %103 = phi i64 [ %72, %71 ], [ %101, %100 ]
  store i64 %103, i64* %19, align 8
  br label %197

104:                                              ; preds = %69
  %105 = load %"struct.tflite::task::vision::Sigmoid"*, %"struct.tflite::task::vision::Sigmoid"** %18, align 8
  %106 = icmp eq %"struct.tflite::task::vision::Sigmoid"* %105, %70
  br i1 %106, label %119, label %107

107:                                              ; preds = %104, %117
  %108 = phi %"struct.tflite::task::vision::Sigmoid"* [ %109, %117 ], [ %105, %104 ]
  %109 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %108, i64 -1
  %110 = bitcast %"struct.tflite::task::vision::Sigmoid"* %109 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %111 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %110, i64 0, i32 1, i32 0
  %112 = load i8, i8* %111, align 1
  %113 = icmp slt i8 %112, 0
  br i1 %113, label %114, label %117

114:                                              ; preds = %107
  %115 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %109, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load i8*, i8** %115, align 8
  tail call void @_ZdlPv(i8* %116) #17
  br label %117

117:                                              ; preds = %114, %107
  %118 = icmp eq %"struct.tflite::task::vision::Sigmoid"* %109, %70
  br i1 %118, label %119, label %107

119:                                              ; preds = %117, %104
  store %"struct.tflite::task::vision::Sigmoid"* %70, %"struct.tflite::task::vision::Sigmoid"** %18, align 8
  br label %197

120:                                              ; preds = %3
  %121 = icmp eq i64 %12, 0
  br i1 %121, label %145, label %122

122:                                              ; preds = %120
  %123 = inttoptr i64 %12 to i8*
  %124 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %125 = load %"struct.tflite::task::vision::Sigmoid"*, %"struct.tflite::task::vision::Sigmoid"** %124, align 8
  %126 = icmp eq %"struct.tflite::task::vision::Sigmoid"* %125, %16
  br i1 %126, label %142, label %127

127:                                              ; preds = %122, %137
  %128 = phi %"struct.tflite::task::vision::Sigmoid"* [ %129, %137 ], [ %125, %122 ]
  %129 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %128, i64 -1
  %130 = bitcast %"struct.tflite::task::vision::Sigmoid"* %129 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %131 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %130, i64 0, i32 1, i32 0
  %132 = load i8, i8* %131, align 1
  %133 = icmp slt i8 %132, 0
  br i1 %133, label %134, label %137

134:                                              ; preds = %127
  %135 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %129, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load i8*, i8** %135, align 8
  tail call void @_ZdlPv(i8* %136) #17
  br label %137

137:                                              ; preds = %134, %127
  %138 = icmp eq %"struct.tflite::task::vision::Sigmoid"* %129, %16
  br i1 %138, label %139, label %127

139:                                              ; preds = %137
  %140 = bitcast %"class.std::__1::vector"* %0 to i8**
  %141 = load i8*, i8** %140, align 8
  br label %142

142:                                              ; preds = %139, %122
  %143 = phi i8* [ %141, %139 ], [ %123, %122 ]
  store %"struct.tflite::task::vision::Sigmoid"* %16, %"struct.tflite::task::vision::Sigmoid"** %124, align 8
  tail call void @_ZdlPv(i8* %143) #17
  %144 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %144, i8 0, i64 24, i1 false) #12
  br label %145

145:                                              ; preds = %120, %142
  %146 = phi i64 [ %10, %120 ], [ 0, %142 ]
  %147 = icmp ugt i64 %7, 384307168202282325
  br i1 %147, label %148, label %150

148:                                              ; preds = %145
  %149 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %149) #16
  unreachable

150:                                              ; preds = %145
  %151 = sdiv exact i64 %146, 48
  %152 = icmp ult i64 %151, 192153584101141162
  br i1 %152, label %153, label %157

153:                                              ; preds = %150
  %154 = shl nsw i64 %151, 1
  %155 = icmp ult i64 %154, %7
  %156 = select i1 %155, i64 %7, i64 %154
  br label %157

157:                                              ; preds = %153, %150
  %158 = phi i64 [ %156, %153 ], [ 384307168202282325, %150 ]
  %159 = mul i64 %158, 48
  %160 = tail call i8* @_Znwm(i64 %159) #17
  %161 = bitcast i8* %160 to %"struct.tflite::task::vision::Sigmoid"*
  %162 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %163 = bitcast %"struct.tflite::task::vision::Sigmoid"** %162 to i8**
  store i8* %160, i8** %163, align 8
  %164 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %160, i8** %164, align 8
  %165 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %161, i64 %158
  store %"struct.tflite::task::vision::Sigmoid"* %165, %"struct.tflite::task::vision::Sigmoid"** %8, align 8
  %166 = bitcast %"struct.tflite::task::vision::Sigmoid"** %162 to i64*
  %167 = ptrtoint i8* %160 to i64
  %168 = icmp eq %"struct.tflite::task::vision::Sigmoid"* %1, %2
  br i1 %168, label %195, label %169

169:                                              ; preds = %157, %185
  %170 = phi %"struct.tflite::task::vision::Sigmoid"* [ %191, %185 ], [ %161, %157 ]
  %171 = phi %"struct.tflite::task::vision::Sigmoid"* [ %190, %185 ], [ %1, %157 ]
  %172 = bitcast %"struct.tflite::task::vision::Sigmoid"* %171 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %173 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %172, i64 0, i32 1, i32 0
  %174 = load i8, i8* %173, align 1
  %175 = icmp slt i8 %174, 0
  br i1 %175, label %179, label %176

176:                                              ; preds = %169
  %177 = bitcast %"struct.tflite::task::vision::Sigmoid"* %170 to i8*
  %178 = bitcast %"struct.tflite::task::vision::Sigmoid"* %171 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %177, i8* align 8 %178, i64 24, i1 false) #12
  br label %185

179:                                              ; preds = %169
  %180 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %170, i64 0, i32 0
  %181 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %171, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %182 = load i8*, i8** %181, align 8
  %183 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %171, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %184 = load i64, i64* %183, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %180, i8* %182, i64 %184) #12
  br label %185

185:                                              ; preds = %179, %176
  %186 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %170, i64 0, i32 1
  %187 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %171, i64 0, i32 1
  %188 = bitcast float* %186 to i8*
  %189 = bitcast float* %187 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %188, i8* align 8 %189, i64 20, i1 false) #12
  %190 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %171, i64 1
  %191 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %170, i64 1
  %192 = icmp eq %"struct.tflite::task::vision::Sigmoid"* %190, %2
  br i1 %192, label %193, label %169

193:                                              ; preds = %185
  %194 = ptrtoint %"struct.tflite::task::vision::Sigmoid"* %191 to i64
  br label %195

195:                                              ; preds = %157, %193
  %196 = phi i64 [ %167, %157 ], [ %194, %193 ]
  store i64 %196, i64* %166, align 8
  br label %197

197:                                              ; preds = %102, %119, %195
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(56) %"class.absl::optional_internal::optional_data.8"* @_ZN4absl17optional_internal13optional_dataIN6tflite4task6vision7SigmoidELb0EEaSERKS6_(%"class.absl::optional_internal::optional_data.8"*, %"class.absl::optional_internal::optional_data.8"* dereferenceable(56)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::optional_internal::optional_data.8", %"class.absl::optional_internal::optional_data.8"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %68, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.absl::optional_internal::optional_data.8", %"class.absl::optional_internal::optional_data.8"* %1, i64 0, i32 0, i32 0, i32 2, i32 0
  %8 = getelementptr inbounds %"class.absl::optional_internal::optional_data.8", %"class.absl::optional_internal::optional_data.8"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  %11 = getelementptr inbounds %"class.absl::optional_internal::optional_data.8", %"class.absl::optional_internal::optional_data.8"* %0, i64 0, i32 0, i32 0, i32 2, i32 0
  br i1 %10, label %49, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %11, i64 0, i32 0
  %14 = icmp eq %"class.absl::optional_internal::optional_data.8"* %0, %1
  br i1 %14, label %44, label %15

15:                                               ; preds = %12
  %16 = bitcast %"struct.tflite::task::vision::Sigmoid"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  %20 = bitcast %"struct.tflite::task::vision::Sigmoid"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %19, label %34, label %24

24:                                               ; preds = %15
  br i1 %23, label %28, label %25

25:                                               ; preds = %24
  %26 = bitcast %"struct.tflite::task::vision::Sigmoid"* %11 to i8*
  %27 = bitcast %"struct.tflite::task::vision::Sigmoid"* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 24, i1 false) #12
  br label %44

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds %"class.absl::optional_internal::optional_data.8", %"class.absl::optional_internal::optional_data.8"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %13, i8* %30, i64 %32) #12
  br label %44

34:                                               ; preds = %15
  %35 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = getelementptr inbounds %"class.absl::optional_internal::optional_data.8", %"class.absl::optional_internal::optional_data.8"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"struct.tflite::task::vision::Sigmoid"* %7 to i8*
  %40 = zext i8 %22 to i64
  %41 = select i1 %23, i8* %36, i8* %39
  %42 = select i1 %23, i64 %38, i64 %40
  %43 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %13, i8* %41, i64 %42) #12
  br label %44

44:                                               ; preds = %12, %25, %28, %34
  %45 = getelementptr inbounds %"class.absl::optional_internal::optional_data.8", %"class.absl::optional_internal::optional_data.8"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %46 = getelementptr inbounds %"class.absl::optional_internal::optional_data.8", %"class.absl::optional_internal::optional_data.8"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %47 = bitcast float* %45 to i8*
  %48 = bitcast float* %46 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 20, i1 false) #12
  br label %82

49:                                               ; preds = %6
  %50 = bitcast %"struct.tflite::task::vision::Sigmoid"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  br i1 %53, label %57, label %54

54:                                               ; preds = %49
  %55 = bitcast %"struct.tflite::task::vision::Sigmoid"* %11 to i8*
  %56 = bitcast %"struct.tflite::task::vision::Sigmoid"* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %56, i64 24, i1 false) #12
  br label %63

57:                                               ; preds = %49
  %58 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %11, i64 0, i32 0
  %59 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = getelementptr inbounds %"class.absl::optional_internal::optional_data.8", %"class.absl::optional_internal::optional_data.8"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %62 = load i64, i64* %61, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %58, i8* %60, i64 %62) #12
  br label %63

63:                                               ; preds = %57, %54
  %64 = getelementptr inbounds %"class.absl::optional_internal::optional_data.8", %"class.absl::optional_internal::optional_data.8"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %65 = getelementptr inbounds %"class.absl::optional_internal::optional_data.8", %"class.absl::optional_internal::optional_data.8"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %66 = bitcast float* %64 to i8*
  %67 = bitcast float* %65 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* align 8 %67, i64 20, i1 false) #12
  store i8 1, i8* %8, align 8
  br label %82

68:                                               ; preds = %2
  %69 = getelementptr inbounds %"class.absl::optional_internal::optional_data.8", %"class.absl::optional_internal::optional_data.8"* %0, i64 0, i32 0, i32 0, i32 0
  %70 = load i8, i8* %69, align 8, !range !2
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %82, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.absl::optional_internal::optional_data.8", %"class.absl::optional_internal::optional_data.8"* %0, i64 0, i32 0, i32 0, i32 2, i32 0
  %74 = bitcast %"struct.tflite::task::vision::Sigmoid"* %73 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %78, label %81

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load i8*, i8** %79, align 8
  tail call void @_ZdlPv(i8* %80) #17
  br label %81

81:                                               ; preds = %78, %72
  store i8 0, i8* %69, align 8
  br label %82

82:                                               ; preds = %81, %68, %63, %44
  ret %"class.absl::optional_internal::optional_data.8"* %0
}

; Function Attrs: nofree nounwind
declare double @log(double) local_unnamed_addr #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare void @_ZN4absl6Status15UnrefNonInlinedEm(i64) local_unnamed_addr #1

declare zeroext i1 @_ZN4absl10SimpleAtofENS_11string_viewEPf(i8*, i64, float*) local_unnamed_addr #1

declare void @_ZN4absl19str_format_internal10FormatPackENS0_21UntypedFormatSpecImplENS_4SpanIKNS0_13FormatArgImplEEE(%"class.std::__1::basic_string"* sret, i8*, i64, %"class.absl::str_format_internal::FormatArgImpl"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZN4absl19str_format_internal13FormatArgImpl8DispatchImEEbNS1_4DataENS0_24FormatConversionSpecImplEPv(i8*, i64, i32, i8*) #0 align 2

declare void @_ZN6tflite7support17internal_statusor6Helper26HandleInvalidStatusCtorArgEPN4absl6StatusE(%"class.absl::Status"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZN4absl19str_format_internal13FormatArgImpl8DispatchINS_11string_viewEEEbNS1_4DataENS0_24FormatConversionSpecImplEPv(i8*, i64, i32, i8*) #0 align 2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #12
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #12
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #12
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #12
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #12
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #12
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #17
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #12
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #12
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #17
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #12
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #9

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #9

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4absl16strings_internal8SplitterINS_6ByCharENS_10AllowEmptyENS_11string_viewEE18ConvertToContainerINSt3__16vectorIS4_NS7_9allocatorIS4_EEEES4_Lb0EEclERKS5_(%"class.std::__1::vector.36"* noalias sret, %"struct.absl::strings_internal::Splitter<absl::ByChar, absl::AllowEmpty, absl::string_view>::ConvertToContainer"*, %"class.absl::strings_internal::Splitter"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::array", align 8
  %5 = alloca %"class.absl::strings_internal::SplitIterator", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.36", %"class.std::__1::vector.36"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.std::__1::vector.36"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #12
  %8 = bitcast %"struct.std::__1::array"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %8) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 256, i1 false)
  %9 = bitcast %"class.absl::strings_internal::SplitIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 48, i1 false)
  %10 = getelementptr inbounds %"class.absl::strings_internal::SplitIterator", %"class.absl::strings_internal::SplitIterator"* %5, i64 0, i32 0
  store i64 0, i64* %10, align 8, !alias.scope !35
  %11 = getelementptr inbounds %"class.absl::strings_internal::SplitIterator", %"class.absl::strings_internal::SplitIterator"* %5, i64 0, i32 1
  store i32 0, i32* %11, align 8, !alias.scope !35
  %12 = getelementptr inbounds %"class.absl::strings_internal::SplitIterator", %"class.absl::strings_internal::SplitIterator"* %5, i64 0, i32 3
  %13 = bitcast %"class.absl::string_view"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false) #12, !alias.scope !35
  %14 = getelementptr inbounds %"class.absl::strings_internal::SplitIterator", %"class.absl::strings_internal::SplitIterator"* %5, i64 0, i32 4
  store %"class.absl::strings_internal::Splitter"* %2, %"class.absl::strings_internal::Splitter"** %14, align 8, !alias.scope !35
  %15 = getelementptr inbounds %"class.absl::strings_internal::SplitIterator", %"class.absl::strings_internal::SplitIterator"* %5, i64 0, i32 5, i32 0
  %16 = getelementptr inbounds %"class.absl::strings_internal::Splitter", %"class.absl::strings_internal::Splitter"* %2, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1, !noalias !35
  store i8 %17, i8* %15, align 8, !alias.scope !35
  %18 = getelementptr inbounds %"class.absl::strings_internal::Splitter", %"class.absl::strings_internal::Splitter"* %2, i64 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8, !noalias !35
  %20 = getelementptr inbounds %"class.absl::strings_internal::Splitter", %"class.absl::strings_internal::Splitter"* %2, i64 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8, !noalias !35
  %22 = icmp eq i8* %19, null
  br i1 %22, label %23, label %24

23:                                               ; preds = %3
  store i32 2, i32* %11, align 8, !alias.scope !35
  store i64 %21, i64* %10, align 8, !alias.scope !35
  br label %59

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.absl::strings_internal::SplitIterator", %"class.absl::strings_internal::SplitIterator"* %5, i64 0, i32 5
  %26 = call { i8*, i64 } @_ZNK4absl6ByChar4FindENS_11string_viewEm(%"class.absl::ByChar"* %25, i8* nonnull %19, i64 %21, i64 0) #12
  %27 = extractvalue { i8*, i64 } %26, 0
  %28 = extractvalue { i8*, i64 } %26, 1
  %29 = getelementptr inbounds i8, i8* %19, i64 %21
  %30 = icmp eq i8* %27, %29
  br i1 %30, label %31, label %32

31:                                               ; preds = %24
  store i32 1, i32* %11, align 8, !alias.scope !35
  br label %32

32:                                               ; preds = %31, %24
  %33 = load i64, i64* %10, align 8, !alias.scope !35
  %34 = getelementptr inbounds i8, i8* %19, i64 %33
  %35 = ptrtoint i8* %27 to i64
  %36 = ptrtoint i8* %34 to i64
  %37 = sub i64 %35, %36
  %38 = icmp ult i64 %21, %33
  br i1 %38, label %39, label %40, !prof !7

39:                                               ; preds = %32
  call void @_ZN4absl13base_internal18ThrowStdOutOfRangeEPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.7, i64 0, i64 0)) #16
  unreachable

40:                                               ; preds = %32
  %41 = sub i64 %21, %33
  %42 = icmp ugt i64 %41, %37
  %43 = select i1 %42, i64 %37, i64 %41
  %44 = icmp sgt i64 %43, -1
  br i1 %44, label %46, label %45, !prof !6

45:                                               ; preds = %40
  call void @llvm.trap() #12
  unreachable

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.absl::strings_internal::SplitIterator", %"class.absl::strings_internal::SplitIterator"* %5, i64 0, i32 3, i32 0
  store i8* %34, i8** %47, align 8, !alias.scope !35
  %48 = getelementptr inbounds %"class.absl::strings_internal::SplitIterator", %"class.absl::strings_internal::SplitIterator"* %5, i64 0, i32 3, i32 1
  store i64 %43, i64* %48, align 8, !alias.scope !35
  %49 = add i64 %33, %28
  %50 = add i64 %49, %43
  %51 = load i32, i32* %11, align 8
  store i64 %50, i64* %10, align 8, !alias.scope !35
  %52 = icmp eq i32 %51, 2
  br i1 %52, label %59, label %53

53:                                               ; preds = %46
  %54 = bitcast %"class.absl::string_view"* %12 to i64*
  %55 = getelementptr inbounds %"class.absl::strings_internal::SplitIterator", %"class.absl::strings_internal::SplitIterator"* %5, i64 0, i32 3, i32 1
  %56 = getelementptr inbounds %"class.absl::strings_internal::SplitIterator", %"class.absl::strings_internal::SplitIterator"* %5, i64 0, i32 5
  %57 = getelementptr inbounds %"class.absl::strings_internal::SplitIterator", %"class.absl::strings_internal::SplitIterator"* %5, i64 0, i32 3, i32 0
  %58 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 0
  br label %60

59:                                               ; preds = %111, %23, %46
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %8) #12
  ret void

60:                                               ; preds = %106, %53
  %61 = phi i32 [ %51, %53 ], [ %107, %106 ]
  %62 = phi i64 [ %43, %53 ], [ %108, %106 ]
  %63 = phi i64 [ %36, %53 ], [ %109, %106 ]
  %64 = phi i64 [ 0, %53 ], [ %110, %106 ]
  %65 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 %64
  %66 = bitcast %struct.raw_view* %65 to i64*
  store i64 %63, i64* %66, align 8
  %67 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 %64, i32 1
  store i64 %62, i64* %67, align 8
  %68 = icmp eq i32 %61, 1
  br i1 %68, label %69, label %71

69:                                               ; preds = %60
  store i32 2, i32* %11, align 8
  %70 = add nuw nsw i64 %64, 1
  br label %111

71:                                               ; preds = %60
  %72 = load %"class.absl::strings_internal::Splitter"*, %"class.absl::strings_internal::Splitter"** %14, align 8
  %73 = getelementptr inbounds %"class.absl::strings_internal::Splitter", %"class.absl::strings_internal::Splitter"* %72, i64 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = getelementptr inbounds %"class.absl::strings_internal::Splitter", %"class.absl::strings_internal::Splitter"* %72, i64 0, i32 0, i32 1
  %76 = load i64, i64* %75, align 8
  %77 = load i64, i64* %10, align 8
  %78 = call { i8*, i64 } @_ZNK4absl6ByChar4FindENS_11string_viewEm(%"class.absl::ByChar"* %56, i8* %74, i64 %76, i64 %77) #12
  %79 = extractvalue { i8*, i64 } %78, 0
  %80 = extractvalue { i8*, i64 } %78, 1
  %81 = getelementptr inbounds i8, i8* %74, i64 %76
  %82 = icmp eq i8* %79, %81
  br i1 %82, label %83, label %84

83:                                               ; preds = %71
  store i32 1, i32* %11, align 8
  br label %84

84:                                               ; preds = %83, %71
  %85 = load i64, i64* %10, align 8
  %86 = getelementptr inbounds i8, i8* %74, i64 %85
  %87 = ptrtoint i8* %79 to i64
  %88 = ptrtoint i8* %86 to i64
  %89 = sub i64 %87, %88
  %90 = icmp ult i64 %76, %85
  br i1 %90, label %91, label %92, !prof !7

91:                                               ; preds = %84
  call void @_ZN4absl13base_internal18ThrowStdOutOfRangeEPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.7, i64 0, i64 0)) #16
  unreachable

92:                                               ; preds = %84
  %93 = sub i64 %76, %85
  %94 = icmp ugt i64 %93, %89
  %95 = select i1 %94, i64 %89, i64 %93
  %96 = icmp sgt i64 %95, -1
  br i1 %96, label %98, label %97, !prof !6

97:                                               ; preds = %92
  call void @llvm.trap() #12
  unreachable

98:                                               ; preds = %92
  store i8* %86, i8** %57, align 8
  store i64 %95, i64* %55, align 8
  %99 = add i64 %85, %80
  %100 = add i64 %99, %95
  store i64 %100, i64* %10, align 8
  %101 = load i32, i32* %11, align 8
  %102 = add nuw nsw i64 %64, 1
  %103 = icmp eq i64 %102, 16
  %104 = icmp eq i32 %101, 2
  %105 = or i1 %103, %104
  br i1 %105, label %111, label %106

106:                                              ; preds = %98, %118
  %107 = phi i32 [ %101, %98 ], [ %116, %118 ]
  %108 = phi i64 [ %95, %98 ], [ %120, %118 ]
  %109 = phi i64 [ %88, %98 ], [ %119, %118 ]
  %110 = phi i64 [ %102, %98 ], [ 0, %118 ]
  br label %60

111:                                              ; preds = %98, %69
  %112 = phi i64 [ %70, %69 ], [ %102, %98 ]
  %113 = load %"class.absl::string_view"*, %"class.absl::string_view"** %6, align 8
  %114 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 %112
  %115 = call %"class.absl::string_view"* @_ZNSt3__16vectorIN4absl11string_viewENS_9allocatorIS2_EEE6insertIPZNKS1_16strings_internal8SplitterINS1_6ByCharENS1_10AllowEmptyES2_E18ConvertToContainerIS5_S2_Lb0EEclERKSB_E8raw_viewEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISJ_E9referenceEEE5valueENS_11__wrap_iterIPS2_EEE4typeENSN_IPKS2_EESJ_SJ_(%"class.std::__1::vector.36"* %0, %"class.absl::string_view"* %113, %struct.raw_view* nonnull %58, %struct.raw_view* %114)
  %116 = load i32, i32* %11, align 8
  %117 = icmp eq i32 %116, 2
  br i1 %117, label %59, label %118

118:                                              ; preds = %111
  %119 = load i64, i64* %54, align 8
  %120 = load i64, i64* %55, align 8
  br label %106
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.absl::string_view"* @_ZNSt3__16vectorIN4absl11string_viewENS_9allocatorIS2_EEE6insertIPZNKS1_16strings_internal8SplitterINS1_6ByCharENS1_10AllowEmptyES2_E18ConvertToContainerIS5_S2_Lb0EEclERKSB_E8raw_viewEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISJ_E9referenceEEE5valueENS_11__wrap_iterIPS2_EEE4typeENSN_IPKS2_EESJ_SJ_(%"class.std::__1::vector.36"*, %"class.absl::string_view"*, %struct.raw_view*, %struct.raw_view*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.absl::string_view"* %1 to i64
  %6 = getelementptr inbounds %"class.std::__1::vector.36", %"class.std::__1::vector.36"* %0, i64 0, i32 0, i32 0
  %7 = ptrtoint %struct.raw_view* %3 to i64
  %8 = ptrtoint %struct.raw_view* %2 to i64
  %9 = sub i64 %7, %8
  %10 = ashr exact i64 %9, 4
  %11 = icmp sgt i64 %9, 0
  br i1 %11, label %12, label %256

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.std::__1::vector.36", %"class.std::__1::vector.36"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"class.absl::string_view"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.36", %"class.std::__1::vector.36"* %0, i64 0, i32 0, i32 1
  %17 = load %"class.absl::string_view"*, %"class.absl::string_view"** %16, align 8
  %18 = ptrtoint %"class.absl::string_view"* %17 to i64
  %19 = sub i64 %15, %18
  %20 = ashr exact i64 %19, 4
  %21 = icmp sgt i64 %10, %20
  %22 = bitcast %"class.absl::string_view"** %16 to i64*
  br i1 %21, label %136, label %23

23:                                               ; preds = %12
  %24 = sub i64 %18, %5
  %25 = ashr exact i64 %24, 4
  %26 = icmp sgt i64 %10, %25
  br i1 %26, label %27, label %52

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.raw_view, %struct.raw_view* %2, i64 %25
  %29 = icmp eq %struct.raw_view* %28, %3
  br i1 %29, label %47, label %30

30:                                               ; preds = %27, %37
  %31 = phi %"class.absl::string_view"* [ %43, %37 ], [ %17, %27 ]
  %32 = phi %struct.raw_view* [ %42, %37 ], [ %28, %27 ]
  %33 = getelementptr inbounds %struct.raw_view, %struct.raw_view* %32, i64 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = icmp sgt i64 %34, -1
  br i1 %35, label %37, label %36, !prof !6

36:                                               ; preds = %30
  tail call void @llvm.trap() #12
  unreachable

37:                                               ; preds = %30
  %38 = bitcast %struct.raw_view* %32 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.absl::string_view"* %31 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %31, i64 0, i32 1
  store i64 %34, i64* %41, align 8
  %42 = getelementptr inbounds %struct.raw_view, %struct.raw_view* %32, i64 1
  %43 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %31, i64 1
  %44 = icmp eq %struct.raw_view* %42, %3
  br i1 %44, label %45, label %30

45:                                               ; preds = %37
  %46 = ptrtoint %"class.absl::string_view"* %43 to i64
  br label %47

47:                                               ; preds = %45, %27
  %48 = phi i64 [ %18, %27 ], [ %46, %45 ]
  store i64 %48, i64* %22, align 8
  %49 = icmp sgt i64 %24, 0
  br i1 %49, label %50, label %256

50:                                               ; preds = %47
  %51 = inttoptr i64 %48 to %"class.absl::string_view"*
  br label %52

52:                                               ; preds = %50, %23
  %53 = phi i64 [ %48, %50 ], [ %18, %23 ]
  %54 = phi %"class.absl::string_view"* [ %51, %50 ], [ %17, %23 ]
  %55 = phi %struct.raw_view* [ %28, %50 ], [ %3, %23 ]
  %56 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %1, i64 %10
  %57 = ptrtoint %"class.absl::string_view"* %56 to i64
  %58 = sub i64 %53, %57
  %59 = ashr exact i64 %58, 4
  %60 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %1, i64 %59
  %61 = icmp ult %"class.absl::string_view"* %60, %17
  br i1 %61, label %62, label %91

62:                                               ; preds = %52
  %63 = sub nsw i64 0, %59
  %64 = getelementptr %"class.absl::string_view", %"class.absl::string_view"* %17, i64 %63, i32 0
  %65 = bitcast i8** %64 to i8*
  %66 = xor i64 %5, -1
  %67 = getelementptr i8, i8* %65, i64 %66
  %68 = ptrtoint i8* %67 to i64
  %69 = lshr i64 %68, 4
  %70 = add nuw nsw i64 %69, 1
  %71 = and i64 %70, 3
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %83, label %73

73:                                               ; preds = %62, %73
  %74 = phi %"class.absl::string_view"* [ %80, %73 ], [ %54, %62 ]
  %75 = phi %"class.absl::string_view"* [ %79, %73 ], [ %60, %62 ]
  %76 = phi i64 [ %81, %73 ], [ %71, %62 ]
  %77 = bitcast %"class.absl::string_view"* %74 to i8*
  %78 = bitcast %"class.absl::string_view"* %75 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %78, i64 16, i1 false) #12
  %79 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %75, i64 1
  %80 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %74, i64 1
  %81 = add i64 %76, -1
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %83, label %73, !llvm.loop !38

83:                                               ; preds = %73, %62
  %84 = phi %"class.absl::string_view"* [ %54, %62 ], [ %80, %73 ]
  %85 = phi %"class.absl::string_view"* [ %60, %62 ], [ %79, %73 ]
  %86 = phi %"class.absl::string_view"* [ undef, %62 ], [ %80, %73 ]
  %87 = icmp ult i8* %67, inttoptr (i64 48 to i8*)
  br i1 %87, label %88, label %99

88:                                               ; preds = %99, %83
  %89 = phi %"class.absl::string_view"* [ %86, %83 ], [ %117, %99 ]
  %90 = ptrtoint %"class.absl::string_view"* %89 to i64
  br label %91

91:                                               ; preds = %88, %52
  %92 = phi i64 [ %90, %88 ], [ %53, %52 ]
  store i64 %92, i64* %22, align 8
  %93 = icmp eq i64 %58, 0
  br i1 %93, label %119, label %94

94:                                               ; preds = %91
  %95 = sub nsw i64 0, %59
  %96 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %54, i64 %95
  %97 = bitcast %"class.absl::string_view"* %96 to i8*
  %98 = bitcast %"class.absl::string_view"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %97, i8* align 8 %98, i64 %58, i1 false) #12
  br label %119

99:                                               ; preds = %83, %99
  %100 = phi %"class.absl::string_view"* [ %117, %99 ], [ %84, %83 ]
  %101 = phi %"class.absl::string_view"* [ %116, %99 ], [ %85, %83 ]
  %102 = bitcast %"class.absl::string_view"* %100 to i8*
  %103 = bitcast %"class.absl::string_view"* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %102, i8* align 8 %103, i64 16, i1 false) #12
  %104 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %101, i64 1
  %105 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %100, i64 1
  %106 = bitcast %"class.absl::string_view"* %105 to i8*
  %107 = bitcast %"class.absl::string_view"* %104 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %106, i8* align 8 %107, i64 16, i1 false) #12
  %108 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %101, i64 2
  %109 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %100, i64 2
  %110 = bitcast %"class.absl::string_view"* %109 to i8*
  %111 = bitcast %"class.absl::string_view"* %108 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %110, i8* align 8 %111, i64 16, i1 false) #12
  %112 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %101, i64 3
  %113 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %100, i64 3
  %114 = bitcast %"class.absl::string_view"* %113 to i8*
  %115 = bitcast %"class.absl::string_view"* %112 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %114, i8* align 8 %115, i64 16, i1 false) #12
  %116 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %101, i64 4
  %117 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %100, i64 4
  %118 = icmp ult %"class.absl::string_view"* %116, %17
  br i1 %118, label %99, label %88

119:                                              ; preds = %91, %94
  %120 = icmp eq %struct.raw_view* %55, %2
  br i1 %120, label %256, label %121

121:                                              ; preds = %119, %128
  %122 = phi %struct.raw_view* [ %133, %128 ], [ %2, %119 ]
  %123 = phi %"class.absl::string_view"* [ %134, %128 ], [ %1, %119 ]
  %124 = getelementptr inbounds %struct.raw_view, %struct.raw_view* %122, i64 0, i32 1
  %125 = load i64, i64* %124, align 8
  %126 = icmp sgt i64 %125, -1
  br i1 %126, label %128, label %127, !prof !6

127:                                              ; preds = %121
  tail call void @llvm.trap() #12
  unreachable

128:                                              ; preds = %121
  %129 = bitcast %struct.raw_view* %122 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = bitcast %"class.absl::string_view"* %123 to i64*
  store i64 %130, i64* %131, align 8
  %132 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %123, i64 0, i32 1
  store i64 %125, i64* %132, align 8
  %133 = getelementptr inbounds %struct.raw_view, %struct.raw_view* %122, i64 1
  %134 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %123, i64 1
  %135 = icmp eq %struct.raw_view* %133, %55
  br i1 %135, label %256, label %121

136:                                              ; preds = %12
  %137 = bitcast %"class.std::__1::vector.36"* %0 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = sub i64 %18, %138
  %140 = ashr exact i64 %139, 4
  %141 = add nsw i64 %140, %10
  %142 = icmp ugt i64 %141, 1152921504606846975
  br i1 %142, label %143, label %145

143:                                              ; preds = %136
  %144 = bitcast %"class.std::__1::vector.36"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %144) #16
  unreachable

145:                                              ; preds = %136
  %146 = sub i64 %15, %138
  %147 = ashr exact i64 %146, 4
  %148 = icmp ult i64 %147, 576460752303423487
  br i1 %148, label %152, label %149

149:                                              ; preds = %145
  %150 = sub i64 %5, %138
  %151 = ashr exact i64 %150, 4
  br label %162

152:                                              ; preds = %145
  %153 = ashr exact i64 %146, 3
  %154 = icmp ult i64 %153, %141
  %155 = select i1 %154, i64 %141, i64 %153
  %156 = sub i64 %5, %138
  %157 = ashr exact i64 %156, 4
  %158 = icmp eq i64 %155, 0
  br i1 %158, label %168, label %159

159:                                              ; preds = %152
  %160 = icmp ugt i64 %155, 1152921504606846975
  br i1 %160, label %161, label %162

161:                                              ; preds = %159
  tail call void @abort() #16
  unreachable

162:                                              ; preds = %149, %159
  %163 = phi i64 [ 1152921504606846975, %149 ], [ %155, %159 ]
  %164 = phi i64 [ %151, %149 ], [ %157, %159 ]
  %165 = shl i64 %163, 4
  %166 = tail call i8* @_Znwm(i64 %165) #17
  %167 = bitcast i8* %166 to %"class.absl::string_view"*
  br label %168

168:                                              ; preds = %162, %152
  %169 = phi i64 [ %164, %162 ], [ %157, %152 ]
  %170 = phi i64 [ %163, %162 ], [ 0, %152 ]
  %171 = phi %"class.absl::string_view"* [ %167, %162 ], [ null, %152 ]
  %172 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %171, i64 %169
  %173 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %171, i64 %170
  %174 = ptrtoint %"class.absl::string_view"* %173 to i64
  %175 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %172, i64 %10
  br label %176

176:                                              ; preds = %168, %183
  %177 = phi %"class.absl::string_view"* [ %188, %183 ], [ %172, %168 ]
  %178 = phi %struct.raw_view* [ %189, %183 ], [ %2, %168 ]
  %179 = getelementptr inbounds %struct.raw_view, %struct.raw_view* %178, i64 0, i32 1
  %180 = load i64, i64* %179, align 8
  %181 = icmp sgt i64 %180, -1
  br i1 %181, label %183, label %182, !prof !6

182:                                              ; preds = %176
  tail call void @llvm.trap() #12
  unreachable

183:                                              ; preds = %176
  %184 = bitcast %struct.raw_view* %178 to i64*
  %185 = load i64, i64* %184, align 8
  %186 = bitcast %"class.absl::string_view"* %177 to i64*
  store i64 %185, i64* %186, align 8
  %187 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %177, i64 0, i32 1
  store i64 %180, i64* %187, align 8
  %188 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %177, i64 1
  %189 = getelementptr inbounds %struct.raw_view, %struct.raw_view* %178, i64 1
  %190 = icmp eq %"class.absl::string_view"* %175, %188
  br i1 %190, label %191, label %176

191:                                              ; preds = %183
  %192 = load %"class.absl::string_view"*, %"class.absl::string_view"** %6, align 8
  %193 = ptrtoint %"class.absl::string_view"* %192 to i64
  %194 = sub i64 %5, %193
  %195 = ashr exact i64 %194, 4
  %196 = sub nsw i64 0, %195
  %197 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %172, i64 %196
  %198 = ptrtoint %"class.absl::string_view"* %197 to i64
  %199 = icmp sgt i64 %194, 0
  br i1 %199, label %200, label %203

200:                                              ; preds = %191
  %201 = bitcast %"class.absl::string_view"* %197 to i8*
  %202 = bitcast %"class.absl::string_view"* %192 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %201, i8* align 8 %202, i64 %194, i1 false) #12
  br label %203

203:                                              ; preds = %200, %191
  %204 = load %"class.absl::string_view"*, %"class.absl::string_view"** %16, align 8
  %205 = icmp eq %"class.absl::string_view"* %204, %1
  br i1 %205, label %249, label %206

206:                                              ; preds = %203
  %207 = getelementptr %"class.absl::string_view", %"class.absl::string_view"* %204, i64 -1, i32 0
  %208 = ptrtoint i8** %207 to i64
  %209 = sub i64 %208, %5
  %210 = lshr i64 %209, 4
  %211 = add nuw nsw i64 %210, 1
  %212 = and i64 %211, 3
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %224, label %214

214:                                              ; preds = %206, %214
  %215 = phi %"class.absl::string_view"* [ %221, %214 ], [ %175, %206 ]
  %216 = phi %"class.absl::string_view"* [ %220, %214 ], [ %1, %206 ]
  %217 = phi i64 [ %222, %214 ], [ %212, %206 ]
  %218 = bitcast %"class.absl::string_view"* %215 to i8*
  %219 = bitcast %"class.absl::string_view"* %216 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 16, i1 false) #12
  %220 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %216, i64 1
  %221 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %215, i64 1
  %222 = add i64 %217, -1
  %223 = icmp eq i64 %222, 0
  br i1 %223, label %224, label %214, !llvm.loop !40

224:                                              ; preds = %214, %206
  %225 = phi %"class.absl::string_view"* [ undef, %206 ], [ %221, %214 ]
  %226 = phi %"class.absl::string_view"* [ %175, %206 ], [ %221, %214 ]
  %227 = phi %"class.absl::string_view"* [ %1, %206 ], [ %220, %214 ]
  %228 = icmp ult i64 %209, 48
  br i1 %228, label %249, label %229

229:                                              ; preds = %224, %229
  %230 = phi %"class.absl::string_view"* [ %247, %229 ], [ %226, %224 ]
  %231 = phi %"class.absl::string_view"* [ %246, %229 ], [ %227, %224 ]
  %232 = bitcast %"class.absl::string_view"* %230 to i8*
  %233 = bitcast %"class.absl::string_view"* %231 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %232, i8* align 8 %233, i64 16, i1 false) #12
  %234 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %231, i64 1
  %235 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %230, i64 1
  %236 = bitcast %"class.absl::string_view"* %235 to i8*
  %237 = bitcast %"class.absl::string_view"* %234 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %236, i8* align 8 %237, i64 16, i1 false) #12
  %238 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %231, i64 2
  %239 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %230, i64 2
  %240 = bitcast %"class.absl::string_view"* %239 to i8*
  %241 = bitcast %"class.absl::string_view"* %238 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %240, i8* align 8 %241, i64 16, i1 false) #12
  %242 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %231, i64 3
  %243 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %230, i64 3
  %244 = bitcast %"class.absl::string_view"* %243 to i8*
  %245 = bitcast %"class.absl::string_view"* %242 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %244, i8* align 8 %245, i64 16, i1 false) #12
  %246 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %231, i64 4
  %247 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %230, i64 4
  %248 = icmp eq %"class.absl::string_view"* %246, %204
  br i1 %248, label %249, label %229

249:                                              ; preds = %224, %229, %203
  %250 = phi %"class.absl::string_view"* [ %175, %203 ], [ %225, %224 ], [ %247, %229 ]
  %251 = ptrtoint %"class.absl::string_view"* %250 to i64
  %252 = load %"class.absl::string_view"*, %"class.absl::string_view"** %6, align 8
  store i64 %198, i64* %137, align 8
  store i64 %251, i64* %22, align 8
  store i64 %174, i64* %14, align 8
  %253 = icmp eq %"class.absl::string_view"* %252, null
  br i1 %253, label %256, label %254

254:                                              ; preds = %249
  %255 = bitcast %"class.absl::string_view"* %252 to i8*
  tail call void @_ZdlPv(i8* %255) #17
  br label %256

256:                                              ; preds = %128, %254, %249, %47, %119, %4
  %257 = phi %"class.absl::string_view"* [ %1, %4 ], [ %1, %119 ], [ %1, %47 ], [ %172, %249 ], [ %172, %254 ], [ %1, %128 ]
  ret %"class.absl::string_view"* %257
}

declare { i8*, i64 } @_ZNK4absl6ByChar4FindENS_11string_viewEm(%"class.absl::ByChar"*, i8*, i64, i64) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZN4absl13base_internal18ThrowStdOutOfRangeEPKc(i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN6tflite4task6vision7SigmoidEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SD_EEEEE21insert_or_assign_implIRSJ_RKSD_EENSI_INS0_12raw_hash_setISE_SF_SH_SL_E8iteratorEbEEOT_OT0_(%"struct.std::__1::pair"* noalias sret, %"class.absl::container_internal::raw_hash_map"*, %"class.std::__1::basic_string"* dereferenceable(24), %"struct.tflite::task::vision::Sigmoid"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map", %"class.absl::container_internal::raw_hash_map"* %1, i64 0, i32 0
  %6 = tail call { i64, i8 } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN6tflite4task6vision7SigmoidEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SD_EEEEE22find_or_prepare_insertIS9_EENSI_ImbEERKT_(%"class.absl::container_internal::raw_hash_set"* %5, %"class.std::__1::basic_string"* dereferenceable(24) %2)
  %7 = extractvalue { i64, i8 } %6, 0
  %8 = extractvalue { i64, i8 } %6, 1
  %9 = and i8 %8, 1
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %43, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map", %"class.absl::container_internal::raw_hash_map"* %1, i64 0, i32 0, i32 1
  %13 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %12, align 8
  %14 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %13, i64 %7
  %15 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %11
  %20 = bitcast %"union.absl::container_internal::map_slot_type"* %14 to i8*
  %21 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 24, i1 false) #12
  br label %28

22:                                               ; preds = %11
  %23 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %14, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %23, i8* %25, i64 %27) #12
  br label %28

28:                                               ; preds = %22, %19
  %29 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %13, i64 %7, i32 0, i32 1
  %30 = bitcast %"struct.tflite::task::vision::Sigmoid"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %28
  %35 = bitcast %"struct.tflite::task::vision::Sigmoid"* %29 to i8*
  %36 = bitcast %"struct.tflite::task::vision::Sigmoid"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 24, i1 false) #12
  br label %86

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %29, i64 0, i32 0
  %39 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %38, i8* %40, i64 %42) #12
  br label %86

43:                                               ; preds = %4
  %44 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map", %"class.absl::container_internal::raw_hash_map"* %1, i64 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %7
  %47 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map", %"class.absl::container_internal::raw_hash_map"* %1, i64 0, i32 0, i32 1
  %48 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %47, align 8
  %49 = icmp ne i8* %46, null
  tail call void @llvm.assume(i1 %49) #12
  %50 = load i8, i8* %46, align 1
  %51 = icmp sgt i8 %50, -1
  br i1 %51, label %53, label %52, !prof !6

52:                                               ; preds = %43
  tail call void @llvm.trap() #12
  unreachable

53:                                               ; preds = %43
  %54 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %48, i64 %7, i32 0, i32 1
  %55 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %54, i64 0, i32 0
  %56 = icmp eq %"struct.tflite::task::vision::Sigmoid"* %54, %3
  br i1 %56, label %86, label %57

57:                                               ; preds = %53
  %58 = bitcast %"struct.tflite::task::vision::Sigmoid"* %54 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  %60 = load i8, i8* %59, align 1
  %61 = icmp slt i8 %60, 0
  %62 = bitcast %"struct.tflite::task::vision::Sigmoid"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  %64 = load i8, i8* %63, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %61, label %76, label %66

66:                                               ; preds = %57
  br i1 %65, label %70, label %67

67:                                               ; preds = %66
  %68 = bitcast %"struct.tflite::task::vision::Sigmoid"* %54 to i8*
  %69 = bitcast %"struct.tflite::task::vision::Sigmoid"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 %69, i64 24, i1 false) #12
  br label %86

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load i8*, i8** %71, align 8
  %73 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %74 = load i64, i64* %73, align 8
  %75 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %55, i8* %72, i64 %74) #12
  br label %86

76:                                               ; preds = %57
  %77 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load i8*, i8** %77, align 8
  %79 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %80 = load i64, i64* %79, align 8
  %81 = bitcast %"struct.tflite::task::vision::Sigmoid"* %3 to i8*
  %82 = zext i8 %64 to i64
  %83 = select i1 %65, i8* %78, i8* %81
  %84 = select i1 %65, i64 %80, i64 %82
  %85 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %55, i8* %83, i64 %84) #12
  br label %86

86:                                               ; preds = %76, %70, %67, %53, %37, %34
  %87 = phi %"union.absl::container_internal::map_slot_type"* [ %13, %34 ], [ %13, %37 ], [ %48, %53 ], [ %48, %67 ], [ %48, %70 ], [ %48, %76 ]
  %88 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %87, i64 %7, i32 0, i32 1, i32 1
  %89 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %3, i64 0, i32 1
  %90 = bitcast float* %88 to i8*
  %91 = bitcast float* %89 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %90, i8* align 8 %91, i64 20, i1 false) #12
  %92 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map", %"class.absl::container_internal::raw_hash_map"* %1, i64 0, i32 0, i32 0
  %93 = load i8*, i8** %92, align 8
  %94 = getelementptr inbounds i8, i8* %93, i64 %7
  %95 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map", %"class.absl::container_internal::raw_hash_map"* %1, i64 0, i32 0, i32 1
  %96 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %95, align 8
  %97 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %96, i64 %7
  %98 = icmp ne i8* %94, null
  tail call void @llvm.assume(i1 %98) #12
  %99 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 0, i32 0
  store i8* %94, i8** %99, align 8
  %100 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 0, i32 1, i32 0
  store %"union.absl::container_internal::map_slot_type"* %97, %"union.absl::container_internal::map_slot_type"** %100, align 8
  %101 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1
  store i8 %8, i8* %101, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i8 } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN6tflite4task6vision7SigmoidEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SD_EEEEE22find_or_prepare_insertIS9_EENSI_ImbEERKT_(%"class.absl::container_internal::raw_hash_set"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #10 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %2
  %8 = zext i8 %5 to i64
  %9 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  %10 = bitcast %"class.std::__1::basic_string"* %1 to i64*
  br label %20

11:                                               ; preds = %2
  %12 = bitcast %"class.std::__1::basic_string"* %1 to i64*
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, -1
  br i1 %15, label %16, label %19, !prof !6

16:                                               ; preds = %11
  %17 = load i64, i64* %12, align 8
  %18 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  br label %20

19:                                               ; preds = %11
  tail call void @llvm.trap() #12
  unreachable

20:                                               ; preds = %16, %7
  %21 = phi i64 [ %18, %16 ], [ %9, %7 ]
  %22 = phi i64* [ %12, %16 ], [ %10, %7 ]
  %23 = phi i64 [ %17, %16 ], [ %9, %7 ]
  %24 = phi i64 [ %14, %16 ], [ %8, %7 ]
  %25 = inttoptr i64 %23 to i8*
  %26 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %27 = tail call i64 @_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm(i64 %26, i8* %25, i64 %24) #12
  %28 = add i64 %27, %24
  %29 = zext i64 %28 to i128
  %30 = mul nuw i128 %29, 11376068507788127593
  %31 = lshr i128 %30, 64
  %32 = xor i128 %31, %30
  %33 = trunc i128 %32 to i64
  %34 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 3
  %37 = load i64, i64* %36, align 8
  %38 = lshr i64 %33, 7
  %39 = ptrtoint i8* %35 to i64
  %40 = lshr i64 %39, 12
  %41 = xor i64 %38, %40
  %42 = trunc i128 %32 to i8
  %43 = and i8 %42, 127
  %44 = insertelement <16 x i8> undef, i8 %43, i32 0
  %45 = shufflevector <16 x i8> %44, <16 x i8> undef, <16 x i32> zeroinitializer
  %46 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 1
  %47 = load i8, i8* %4, align 1
  %48 = icmp sgt i8 %47, -1
  %49 = zext i8 %47 to i64
  %50 = load i64, i64* %22, align 8
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = icmp sgt i64 %52, -1
  %54 = or i1 %48, %53
  %55 = select i1 %48, i64 %49, i64 %52
  %56 = select i1 %48, i64 %21, i64 %50
  %57 = inttoptr i64 %56 to i8*
  br label %58

58:                                               ; preds = %112, %20
  %59 = phi i64 [ %41, %20 ], [ %114, %112 ]
  %60 = phi i64 [ 0, %20 ], [ %113, %112 ]
  %61 = and i64 %59, %37
  %62 = getelementptr inbounds i8, i8* %35, i64 %61
  %63 = bitcast i8* %62 to <16 x i8>*
  %64 = load <16 x i8>, <16 x i8>* %63, align 1
  %65 = icmp eq <16 x i8> %45, %64
  %66 = bitcast <16 x i1> %65 to i16
  %67 = icmp eq i16 %66, 0
  br i1 %67, label %108, label %68

68:                                               ; preds = %58
  %69 = zext i16 %66 to i32
  %70 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %46, align 8
  br label %71

71:                                               ; preds = %68, %104
  %72 = phi i32 [ %69, %68 ], [ %106, %104 ]
  %73 = tail call i32 @llvm.cttz.i32(i32 %72, i1 false) #12, !range !41
  %74 = zext i32 %73 to i64
  %75 = add i64 %61, %74
  %76 = and i64 %75, %37
  %77 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %70, i64 %76, i32 0
  %78 = bitcast %"struct.std::__1::pair.19"* %77 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %78, i64 0, i32 1, i32 0
  %80 = load i8, i8* %79, align 1
  %81 = icmp slt i8 %80, 0
  br i1 %81, label %85, label %82

82:                                               ; preds = %71
  %83 = zext i8 %80 to i64
  %84 = ptrtoint %"struct.std::__1::pair.19"* %77 to i64
  br label %92

85:                                               ; preds = %71
  %86 = bitcast %"struct.std::__1::pair.19"* %77 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %70, i64 %76, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %89 = load i64, i64* %88, align 8
  %90 = icmp sgt i64 %89, -1
  br i1 %90, label %92, label %91, !prof !6

91:                                               ; preds = %85
  tail call void @llvm.trap() #12
  unreachable

92:                                               ; preds = %85, %82
  %93 = phi i64 [ %87, %85 ], [ %84, %82 ]
  %94 = phi i64 [ %89, %85 ], [ %83, %82 ]
  br i1 %54, label %96, label %95, !prof !42

95:                                               ; preds = %92
  tail call void @llvm.trap() #12
  unreachable

96:                                               ; preds = %92
  %97 = inttoptr i64 %93 to i8*
  %98 = icmp eq i64 %94, %55
  br i1 %98, label %99, label %104, !prof !43

99:                                               ; preds = %96
  %100 = icmp eq i64 %94, 0
  br i1 %100, label %117, label %101

101:                                              ; preds = %99
  %102 = tail call i32 @bcmp(i8* %97, i8* %57, i64 %94) #12
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %117, label %104, !prof !6

104:                                              ; preds = %96, %101
  %105 = add i32 %72, -1
  %106 = and i32 %105, %72
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %71

108:                                              ; preds = %104, %58
  %109 = icmp eq <16 x i8> %64, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %110 = bitcast <16 x i1> %109 to i16
  %111 = icmp eq i16 %110, 0
  br i1 %111, label %112, label %115, !prof !7

112:                                              ; preds = %108
  %113 = add i64 %60, 16
  %114 = add i64 %113, %61
  br label %58

115:                                              ; preds = %108
  %116 = tail call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN6tflite4task6vision7SigmoidEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SD_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set"* %0, i64 %33)
  br label %117

117:                                              ; preds = %101, %99, %115
  %118 = phi i64 [ %116, %115 ], [ %76, %99 ], [ %76, %101 ]
  %119 = phi i8 [ 1, %115 ], [ 0, %99 ], [ 0, %101 ]
  %120 = insertvalue { i64, i8 } undef, i64 %118, 0
  %121 = insertvalue { i64, i8 } %120, i8 %119, 1
  ret { i64, i8 } %121
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN6tflite4task6vision7SigmoidEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SD_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set"*, i64) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %1, 7
  %8 = ptrtoint i8* %4 to i64
  %9 = lshr i64 %8, 12
  %10 = xor i64 %9, %7
  %11 = and i64 %10, %6
  %12 = getelementptr inbounds i8, i8* %4, i64 %11
  %13 = bitcast i8* %12 to <16 x i8>*
  %14 = load <16 x i8>, <16 x i8>* %13, align 1
  %15 = icmp slt <16 x i8> %14, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %16 = bitcast <16 x i1> %15 to i16
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %2, %18
  %19 = phi i64 [ %23, %18 ], [ %11, %2 ]
  %20 = phi i64 [ %21, %18 ], [ 0, %2 ]
  %21 = add i64 %20, 16
  %22 = add i64 %21, %19
  %23 = and i64 %22, %6
  %24 = getelementptr inbounds i8, i8* %4, i64 %23
  %25 = bitcast i8* %24 to <16 x i8>*
  %26 = load <16 x i8>, <16 x i8>* %25, align 1
  %27 = icmp slt <16 x i8> %26, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %28 = bitcast <16 x i1> %27 to i16
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %18, label %30

30:                                               ; preds = %18, %2
  %31 = phi i64 [ %11, %2 ], [ %23, %18 ]
  %32 = phi i16 [ %16, %2 ], [ %28, %18 ]
  %33 = zext i16 %32 to i32
  %34 = tail call i32 @llvm.cttz.i32(i32 %33, i1 false) #12, !range !41
  %35 = zext i32 %34 to i64
  %36 = add i64 %31, %35
  %37 = and i64 %36, %6
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %93

41:                                               ; preds = %30
  %42 = getelementptr inbounds i8, i8* %4, i64 %37
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, -2
  br i1 %44, label %93, label %45, !prof !6

45:                                               ; preds = %41
  %46 = icmp eq i64 %6, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN6tflite4task6vision7SigmoidEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SD_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set"* %0, i64 1) #12
  br label %59

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = lshr i64 %6, 3
  %52 = sub i64 %6, %51
  %53 = lshr i64 %52, 1
  %54 = icmp ugt i64 %50, %53
  br i1 %54, label %56, label %55

55:                                               ; preds = %48
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN6tflite4task6vision7SigmoidEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SD_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set"* %0) #12
  br label %59

56:                                               ; preds = %48
  %57 = shl i64 %6, 1
  %58 = or i64 %57, 1
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN6tflite4task6vision7SigmoidEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SD_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set"* %0, i64 %58) #12
  br label %59

59:                                               ; preds = %47, %55, %56
  %60 = load i8*, i8** %3, align 8
  %61 = load i64, i64* %5, align 8
  %62 = ptrtoint i8* %60 to i64
  %63 = lshr i64 %62, 12
  %64 = xor i64 %63, %7
  %65 = and i64 %64, %61
  %66 = getelementptr inbounds i8, i8* %60, i64 %65
  %67 = bitcast i8* %66 to <16 x i8>*
  %68 = load <16 x i8>, <16 x i8>* %67, align 1
  %69 = icmp slt <16 x i8> %68, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %70 = bitcast <16 x i1> %69 to i16
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %59, %72
  %73 = phi i64 [ %77, %72 ], [ %65, %59 ]
  %74 = phi i64 [ %75, %72 ], [ 0, %59 ]
  %75 = add i64 %74, 16
  %76 = add i64 %75, %73
  %77 = and i64 %76, %61
  %78 = getelementptr inbounds i8, i8* %60, i64 %77
  %79 = bitcast i8* %78 to <16 x i8>*
  %80 = load <16 x i8>, <16 x i8>* %79, align 1
  %81 = icmp slt <16 x i8> %80, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %82 = bitcast <16 x i1> %81 to i16
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %72, label %84

84:                                               ; preds = %72, %59
  %85 = phi i64 [ %65, %59 ], [ %77, %72 ]
  %86 = phi i16 [ %70, %59 ], [ %82, %72 ]
  %87 = zext i16 %86 to i32
  %88 = tail call i32 @llvm.cttz.i32(i32 %87, i1 false) #12, !range !41
  %89 = zext i32 %88 to i64
  %90 = add i64 %85, %89
  %91 = and i64 %90, %61
  %92 = load i64, i64* %38, align 8
  br label %93

93:                                               ; preds = %41, %30, %84
  %94 = phi i64 [ %92, %84 ], [ 0, %41 ], [ %39, %30 ]
  %95 = phi i8* [ %60, %84 ], [ %4, %41 ], [ %4, %30 ]
  %96 = phi i64 [ %91, %84 ], [ %37, %41 ], [ %37, %30 ]
  %97 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 2
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  store i64 %99, i64* %97, align 8
  %100 = getelementptr inbounds i8, i8* %95, i64 %96
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, -128
  %103 = zext i1 %102 to i64
  %104 = sub i64 %94, %103
  store i64 %104, i64* %38, align 8
  %105 = trunc i64 %1 to i8
  %106 = and i8 %105, 127
  store i8 %106, i8* %100, align 1
  %107 = load i8*, i8** %3, align 8
  %108 = add i64 %96, -15
  %109 = load i64, i64* %5, align 8
  %110 = and i64 %109, %108
  %111 = and i64 %109, 15
  %112 = add i64 %110, %111
  %113 = getelementptr inbounds i8, i8* %107, i64 %112
  store i8 %106, i8* %113, align 1
  ret i64 %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm(i64, i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp ugt i64 %2, 16
  br i1 %4, label %5, label %11

5:                                                ; preds = %3
  %6 = icmp ugt i64 %2, 1024
  br i1 %6, label %7, label %9, !prof !7

7:                                                ; preds = %5
  %8 = tail call i64 @_ZN4absl13hash_internal15MixingHashState28CombineLargeContiguousImpl64EmPKhm(i64 %0, i8* %1, i64 %2) #12
  br label %75

9:                                                ; preds = %5
  %10 = tail call i64 @_ZN4absl13hash_internal15MixingHashState10WyhashImplEPKhm(i8* %1, i64 %2) #12
  br label %66

11:                                               ; preds = %3
  %12 = icmp ugt i64 %2, 8
  br i1 %12, label %13, label %29

13:                                               ; preds = %11
  %14 = bitcast i8* %1 to i64*
  %15 = load i64, i64* %14, align 1
  %16 = getelementptr inbounds i8, i8* %1, i64 %2
  %17 = getelementptr inbounds i8, i8* %16, i64 -8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = shl i64 %2, 3
  %21 = sub nuw nsw i64 128, %20
  %22 = lshr i64 %19, %21
  %23 = add i64 %15, %0
  %24 = zext i64 %23 to i128
  %25 = mul nuw i128 %24, 11376068507788127593
  %26 = lshr i128 %25, 64
  %27 = xor i128 %26, %25
  %28 = trunc i128 %27 to i64
  br label %66

29:                                               ; preds = %11
  %30 = icmp ugt i64 %2, 3
  br i1 %30, label %31, label %44

31:                                               ; preds = %29
  %32 = bitcast i8* %1 to i32*
  %33 = load i32, i32* %32, align 1
  %34 = getelementptr inbounds i8, i8* %1, i64 %2
  %35 = getelementptr inbounds i8, i8* %34, i64 -4
  %36 = bitcast i8* %35 to i32*
  %37 = load i32, i32* %36, align 1
  %38 = zext i32 %37 to i64
  %39 = shl i64 %2, 3
  %40 = add nsw i64 %39, -32
  %41 = shl i64 %38, %40
  %42 = zext i32 %33 to i64
  %43 = or i64 %41, %42
  br label %66

44:                                               ; preds = %29
  %45 = icmp eq i64 %2, 0
  br i1 %45, label %75, label %46

46:                                               ; preds = %44
  %47 = load i8, i8* %1, align 1
  %48 = lshr i64 %2, 1
  %49 = getelementptr inbounds i8, i8* %1, i64 %48
  %50 = load i8, i8* %49, align 1
  %51 = add nsw i64 %2, -1
  %52 = getelementptr inbounds i8, i8* %1, i64 %51
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %47 to i32
  %55 = zext i8 %50 to i32
  %56 = shl i64 %48, 3
  %57 = trunc i64 %56 to i32
  %58 = shl i32 %55, %57
  %59 = or i32 %58, %54
  %60 = zext i8 %53 to i32
  %61 = trunc i64 %51 to i32
  %62 = shl i32 %61, 3
  %63 = shl i32 %60, %62
  %64 = or i32 %59, %63
  %65 = zext i32 %64 to i64
  br label %66

66:                                               ; preds = %46, %31, %13, %9
  %67 = phi i64 [ %10, %9 ], [ %22, %13 ], [ %43, %31 ], [ %65, %46 ]
  %68 = phi i64 [ %0, %9 ], [ %28, %13 ], [ %0, %31 ], [ %0, %46 ]
  %69 = add i64 %68, %67
  %70 = zext i64 %69 to i128
  %71 = mul nuw i128 %70, 11376068507788127593
  %72 = lshr i128 %71, 64
  %73 = xor i128 %72, %71
  %74 = trunc i128 %73 to i64
  br label %75

75:                                               ; preds = %7, %44, %66
  %76 = phi i64 [ %8, %7 ], [ %74, %66 ], [ %0, %44 ]
  ret i64 %76
}

declare i64 @_ZN4absl13hash_internal15MixingHashState28CombineLargeContiguousImpl64EmPKhm(i64, i8*, i64) local_unnamed_addr #1

declare i64 @_ZN4absl13hash_internal15MixingHashState10WyhashImplEPKhm(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @llvm.assume(i1) #12

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.cttz.i32(i32, i1 immarg) #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN6tflite4task6vision7SigmoidEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SD_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set"*, i64) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 1
  %6 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %5, align 8
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  store i64 %1, i64* %7, align 8
  %9 = add i64 %1, 16
  %10 = add i64 %1, 23
  %11 = and i64 %10, -8
  %12 = mul i64 %1, 72
  %13 = add i64 %11, %12
  %14 = tail call i8* @_Znwm(i64 %13) #17
  store i8* %14, i8** %3, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %11
  %16 = bitcast %"union.absl::container_internal::map_slot_type"** %5 to i8**
  store i8* %15, i8** %16, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 -128, i64 %9, i1 false) #12
  %17 = getelementptr inbounds i8, i8* %14, i64 %1
  store i8 -1, i8* %17, align 1
  %18 = lshr i64 %1, 3
  %19 = sub i64 %1, %18
  %20 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = icmp eq i64 %8, 0
  br i1 %24, label %132, label %25

25:                                               ; preds = %2
  %26 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %28

27:                                               ; preds = %128
  br i1 %24, label %132, label %131

28:                                               ; preds = %25, %128
  %29 = phi i64 [ 0, %25 ], [ %129, %128 ]
  %30 = getelementptr inbounds i8, i8* %4, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = icmp sgt i8 %31, -1
  br i1 %32, label %33, label %128

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %6, i64 %29
  %35 = bitcast %"union.absl::container_internal::map_slot_type"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = zext i8 %37 to i64
  %41 = ptrtoint %"union.absl::container_internal::map_slot_type"* %34 to i64
  br label %49

42:                                               ; preds = %33
  %43 = bitcast %"union.absl::container_internal::map_slot_type"* %34 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %6, i64 %29, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = icmp sgt i64 %46, -1
  br i1 %47, label %49, label %48, !prof !6

48:                                               ; preds = %42
  tail call void @llvm.trap() #12
  unreachable

49:                                               ; preds = %39, %42
  %50 = phi i64 [ %44, %42 ], [ %41, %39 ]
  %51 = phi i64 [ %46, %42 ], [ %40, %39 ]
  %52 = inttoptr i64 %50 to i8*
  %53 = tail call i64 @_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm(i64 %26, i8* %52, i64 %51) #12
  %54 = add i64 %53, %51
  %55 = zext i64 %54 to i128
  %56 = mul nuw i128 %55, 11376068507788127593
  %57 = lshr i128 %56, 64
  %58 = xor i128 %57, %56
  %59 = trunc i128 %58 to i64
  %60 = load i8*, i8** %3, align 8
  %61 = load i64, i64* %7, align 8
  %62 = lshr i64 %59, 7
  %63 = ptrtoint i8* %60 to i64
  %64 = lshr i64 %63, 12
  %65 = xor i64 %62, %64
  %66 = and i64 %65, %61
  %67 = getelementptr inbounds i8, i8* %60, i64 %66
  %68 = bitcast i8* %67 to <16 x i8>*
  %69 = load <16 x i8>, <16 x i8>* %68, align 1
  %70 = icmp slt <16 x i8> %69, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %71 = bitcast <16 x i1> %70 to i16
  %72 = icmp eq i16 %71, 0
  br i1 %72, label %73, label %85

73:                                               ; preds = %49, %73
  %74 = phi i64 [ %78, %73 ], [ %66, %49 ]
  %75 = phi i64 [ %76, %73 ], [ 0, %49 ]
  %76 = add i64 %75, 16
  %77 = add i64 %76, %74
  %78 = and i64 %77, %61
  %79 = getelementptr inbounds i8, i8* %60, i64 %78
  %80 = bitcast i8* %79 to <16 x i8>*
  %81 = load <16 x i8>, <16 x i8>* %80, align 1
  %82 = icmp slt <16 x i8> %81, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %83 = bitcast <16 x i1> %82 to i16
  %84 = icmp eq i16 %83, 0
  br i1 %84, label %73, label %85

85:                                               ; preds = %73, %49
  %86 = phi i64 [ %66, %49 ], [ %78, %73 ]
  %87 = phi i16 [ %71, %49 ], [ %83, %73 ]
  %88 = zext i16 %87 to i32
  %89 = tail call i32 @llvm.cttz.i32(i32 %88, i1 false) #12, !range !41
  %90 = zext i32 %89 to i64
  %91 = add i64 %86, %90
  %92 = and i64 %91, %61
  %93 = trunc i128 %58 to i8
  %94 = and i8 %93, 127
  %95 = getelementptr inbounds i8, i8* %60, i64 %92
  store i8 %94, i8* %95, align 1
  %96 = load i8*, i8** %3, align 8
  %97 = add i64 %92, -15
  %98 = load i64, i64* %7, align 8
  %99 = and i64 %97, %98
  %100 = and i64 %98, 15
  %101 = add i64 %99, %100
  %102 = getelementptr inbounds i8, i8* %96, i64 %101
  store i8 %94, i8* %102, align 1
  %103 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %5, align 8
  %104 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %103, i64 %92
  %105 = bitcast %"union.absl::container_internal::map_slot_type"* %104 to i8*
  %106 = bitcast %"union.absl::container_internal::map_slot_type"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* align 8 %106, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %106, i8 0, i64 24, i1 false) #12
  %107 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %103, i64 %92, i32 0, i32 1
  %108 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %6, i64 %29, i32 0, i32 1
  %109 = bitcast %"struct.tflite::task::vision::Sigmoid"* %107 to i8*
  %110 = bitcast %"struct.tflite::task::vision::Sigmoid"* %108 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %109, i8* align 8 %110, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %110, i8 0, i64 24, i1 false) #12
  %111 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %103, i64 %92, i32 0, i32 1, i32 1
  %112 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %6, i64 %29, i32 0, i32 1, i32 1
  %113 = bitcast float* %111 to i8*
  %114 = bitcast float* %112 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %114, i64 20, i1 false) #12
  %115 = bitcast %"struct.tflite::task::vision::Sigmoid"* %108 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %116 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %115, i64 0, i32 1, i32 0
  %117 = load i8, i8* %116, align 1
  %118 = icmp slt i8 %117, 0
  br i1 %118, label %119, label %122

119:                                              ; preds = %85
  %120 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %108, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load i8*, i8** %120, align 8
  tail call void @_ZdlPv(i8* %121) #17
  br label %122

122:                                              ; preds = %119, %85
  %123 = load i8, i8* %36, align 1
  %124 = icmp slt i8 %123, 0
  br i1 %124, label %125, label %128

125:                                              ; preds = %122
  %126 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load i8*, i8** %126, align 8
  tail call void @_ZdlPv(i8* %127) #17
  br label %128

128:                                              ; preds = %125, %122, %28
  %129 = add nuw i64 %29, 1
  %130 = icmp eq i64 %129, %8
  br i1 %130, label %27, label %28

131:                                              ; preds = %27
  tail call void @_ZdlPv(i8* %4) #17
  br label %132

132:                                              ; preds = %2, %27, %131
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN6tflite4task6vision7SigmoidEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SD_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set"*) local_unnamed_addr #11 comdat align 2 {
  %2 = alloca [15 x i8], align 8
  %3 = alloca [15 x i8], align 8
  %4 = alloca [20 x i8], align 8
  %5 = getelementptr inbounds [20 x i8], [20 x i8]* %4, i64 0, i64 0
  %6 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 3
  %9 = load i64, i64* %8, align 8
  tail call void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8* %7, i64 %9) #12
  %10 = getelementptr inbounds [15 x i8], [15 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %10)
  %11 = getelementptr inbounds [15 x i8], [15 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %11)
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %5)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 15, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 15, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 20, i1 false)
  %12 = load i64, i64* %8, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 1
  %16 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %25

17:                                               ; preds = %224, %1
  %18 = phi i64 [ 0, %1 ], [ %226, %224 ]
  %19 = lshr i64 %18, 3
  %20 = sub i64 %18, %19
  %21 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 2
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %20, %22
  %24 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %23, i64* %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %10)
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %11)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %5)
  ret void

25:                                               ; preds = %14, %224
  %26 = phi i64 [ 0, %14 ], [ %226, %224 ]
  %27 = load i8*, i8** %6, align 8
  %28 = getelementptr inbounds i8, i8* %27, i64 %26
  %29 = load i8, i8* %28, align 1
  %30 = icmp eq i8 %29, -2
  br i1 %30, label %31, label %224

31:                                               ; preds = %25
  %32 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %15, align 8
  %33 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %32, i64 %26, i32 0
  %34 = bitcast %"struct.std::__1::pair.19"* %33 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %31
  %39 = zext i8 %36 to i64
  %40 = ptrtoint %"struct.std::__1::pair.19"* %33 to i64
  br label %48

41:                                               ; preds = %31
  %42 = bitcast %"struct.std::__1::pair.19"* %33 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %32, i64 %26, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = icmp sgt i64 %45, -1
  br i1 %46, label %48, label %47, !prof !6

47:                                               ; preds = %41
  tail call void @llvm.trap() #12
  unreachable

48:                                               ; preds = %38, %41
  %49 = phi i64 [ %43, %41 ], [ %40, %38 ]
  %50 = phi i64 [ %45, %41 ], [ %39, %38 ]
  %51 = inttoptr i64 %49 to i8*
  %52 = tail call i64 @_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm(i64 %16, i8* %51, i64 %50) #12
  %53 = add i64 %52, %50
  %54 = zext i64 %53 to i128
  %55 = mul nuw i128 %54, 11376068507788127593
  %56 = lshr i128 %55, 64
  %57 = xor i128 %56, %55
  %58 = trunc i128 %57 to i64
  %59 = load i8*, i8** %6, align 8
  %60 = load i64, i64* %8, align 8
  %61 = lshr i64 %58, 7
  %62 = ptrtoint i8* %59 to i64
  %63 = lshr i64 %62, 12
  %64 = xor i64 %61, %63
  %65 = and i64 %64, %60
  %66 = getelementptr inbounds i8, i8* %59, i64 %65
  %67 = bitcast i8* %66 to <16 x i8>*
  %68 = load <16 x i8>, <16 x i8>* %67, align 1
  %69 = icmp slt <16 x i8> %68, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %70 = bitcast <16 x i1> %69 to i16
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %48, %72
  %73 = phi i64 [ %77, %72 ], [ %65, %48 ]
  %74 = phi i64 [ %75, %72 ], [ 0, %48 ]
  %75 = add i64 %74, 16
  %76 = add i64 %75, %73
  %77 = and i64 %76, %60
  %78 = getelementptr inbounds i8, i8* %59, i64 %77
  %79 = bitcast i8* %78 to <16 x i8>*
  %80 = load <16 x i8>, <16 x i8>* %79, align 1
  %81 = icmp slt <16 x i8> %80, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %82 = bitcast <16 x i1> %81 to i16
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %72, label %84

84:                                               ; preds = %72, %48
  %85 = phi i64 [ %65, %48 ], [ %77, %72 ]
  %86 = phi i16 [ %70, %48 ], [ %82, %72 ]
  %87 = zext i16 %86 to i32
  %88 = tail call i32 @llvm.cttz.i32(i32 %87, i1 false) #12, !range !41
  %89 = zext i32 %88 to i64
  %90 = add i64 %85, %89
  %91 = and i64 %90, %60
  %92 = sub i64 %91, %65
  %93 = sub i64 %26, %65
  %94 = xor i64 %92, %93
  %95 = and i64 %94, %60
  %96 = icmp ult i64 %95, 16
  br i1 %96, label %97, label %108, !prof !6

97:                                               ; preds = %84
  %98 = trunc i128 %57 to i8
  %99 = and i8 %98, 127
  %100 = getelementptr inbounds i8, i8* %59, i64 %26
  store i8 %99, i8* %100, align 1
  %101 = load i8*, i8** %6, align 8
  %102 = add i64 %26, -15
  %103 = load i64, i64* %8, align 8
  %104 = and i64 %103, %102
  %105 = and i64 %103, 15
  %106 = add i64 %104, %105
  %107 = getelementptr inbounds i8, i8* %101, i64 %106
  store i8 %99, i8* %107, align 1
  br label %224

108:                                              ; preds = %84
  %109 = getelementptr inbounds i8, i8* %59, i64 %91
  %110 = load i8, i8* %109, align 1
  %111 = icmp eq i8 %110, -128
  %112 = trunc i128 %57 to i8
  %113 = and i8 %112, 127
  store i8 %113, i8* %109, align 1
  %114 = load i8*, i8** %6, align 8
  %115 = add i64 %91, -15
  %116 = load i64, i64* %8, align 8
  %117 = and i64 %116, %115
  %118 = and i64 %116, 15
  %119 = add i64 %117, %118
  %120 = getelementptr inbounds i8, i8* %114, i64 %119
  store i8 %113, i8* %120, align 1
  %121 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %15, align 8
  br i1 %111, label %122, label %160

122:                                              ; preds = %108
  %123 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %121, i64 %91
  %124 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %121, i64 %26
  %125 = bitcast %"union.absl::container_internal::map_slot_type"* %123 to i8*
  %126 = bitcast %"union.absl::container_internal::map_slot_type"* %124 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %125, i8* align 8 %126, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %126, i8 0, i64 24, i1 false) #12
  %127 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %121, i64 %91, i32 0, i32 1
  %128 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %121, i64 %26, i32 0, i32 1
  %129 = bitcast %"struct.tflite::task::vision::Sigmoid"* %127 to i8*
  %130 = bitcast %"struct.tflite::task::vision::Sigmoid"* %128 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %129, i8* align 8 %130, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %130, i8 0, i64 24, i1 false) #12
  %131 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %121, i64 %91, i32 0, i32 1, i32 1
  %132 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %121, i64 %26, i32 0, i32 1, i32 1
  %133 = bitcast float* %131 to i8*
  %134 = bitcast float* %132 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %133, i8* align 8 %134, i64 20, i1 false) #12
  %135 = bitcast %"struct.tflite::task::vision::Sigmoid"* %128 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %136 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %135, i64 0, i32 1, i32 0
  %137 = load i8, i8* %136, align 1
  %138 = icmp slt i8 %137, 0
  br i1 %138, label %139, label %142

139:                                              ; preds = %122
  %140 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %128, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %141 = load i8*, i8** %140, align 8
  tail call void @_ZdlPv(i8* %141) #17
  br label %142

142:                                              ; preds = %139, %122
  %143 = bitcast %"union.absl::container_internal::map_slot_type"* %124 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %144 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %143, i64 0, i32 1, i32 0
  %145 = load i8, i8* %144, align 1
  %146 = icmp slt i8 %145, 0
  br i1 %146, label %147, label %150

147:                                              ; preds = %142
  %148 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %124, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load i8*, i8** %148, align 8
  tail call void @_ZdlPv(i8* %149) #17
  br label %150

150:                                              ; preds = %142, %147
  %151 = load i8*, i8** %6, align 8
  %152 = getelementptr inbounds i8, i8* %151, i64 %26
  store i8 -128, i8* %152, align 1
  %153 = load i8*, i8** %6, align 8
  %154 = add i64 %26, -15
  %155 = load i64, i64* %8, align 8
  %156 = and i64 %155, %154
  %157 = and i64 %155, 15
  %158 = add i64 %156, %157
  %159 = getelementptr inbounds i8, i8* %153, i64 %158
  store i8 -128, i8* %159, align 1
  br label %224

160:                                              ; preds = %108
  %161 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %121, i64 %26
  %162 = bitcast %"union.absl::container_internal::map_slot_type"* %161 to i8*
  %163 = bitcast %"union.absl::container_internal::map_slot_type"* %161 to i64*
  %164 = load i64, i64* %163, align 8
  %165 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %121, i64 %26, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %166 = bitcast i64* %165 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 8 %166, i64 15, i1 false)
  %167 = getelementptr inbounds i8, i8* %162, i64 23
  %168 = load i8, i8* %167, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %162, i8 0, i64 24, i1 false) #12
  %169 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %121, i64 %26, i32 0, i32 1
  %170 = bitcast %"struct.tflite::task::vision::Sigmoid"* %169 to i8*
  %171 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %121, i64 %26, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %172 = bitcast i8** %171 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %121, i64 %26, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %175 = bitcast i64* %174 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 %175, i64 15, i1 false)
  %176 = getelementptr inbounds i8, i8* %162, i64 47
  %177 = load i8, i8* %176, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %170, i8 0, i64 24, i1 false) #12
  %178 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %121, i64 %26, i32 0, i32 1, i32 1
  %179 = bitcast float* %178 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 %179, i64 20, i1 false)
  %180 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %15, align 8
  %181 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %180, i64 %26
  %182 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %180, i64 %91
  %183 = bitcast %"union.absl::container_internal::map_slot_type"* %181 to i8*
  %184 = bitcast %"union.absl::container_internal::map_slot_type"* %182 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %183, i8* align 8 %184, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %184, i8 0, i64 24, i1 false) #12
  %185 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %180, i64 %26, i32 0, i32 1
  %186 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %180, i64 %91, i32 0, i32 1
  %187 = bitcast %"struct.tflite::task::vision::Sigmoid"* %185 to i8*
  %188 = bitcast %"struct.tflite::task::vision::Sigmoid"* %186 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %187, i8* align 8 %188, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %188, i8 0, i64 24, i1 false) #12
  %189 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %180, i64 %26, i32 0, i32 1, i32 1
  %190 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %180, i64 %91, i32 0, i32 1, i32 1
  %191 = bitcast float* %189 to i8*
  %192 = bitcast float* %190 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %191, i8* align 8 %192, i64 20, i1 false) #12
  %193 = bitcast %"struct.tflite::task::vision::Sigmoid"* %186 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %194 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %193, i64 0, i32 1, i32 0
  %195 = load i8, i8* %194, align 1
  %196 = icmp slt i8 %195, 0
  br i1 %196, label %197, label %200

197:                                              ; preds = %160
  %198 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %186, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %199 = load i8*, i8** %198, align 8
  tail call void @_ZdlPv(i8* %199) #17
  br label %200

200:                                              ; preds = %197, %160
  %201 = bitcast %"union.absl::container_internal::map_slot_type"* %182 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %202 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %201, i64 0, i32 1, i32 0
  %203 = load i8, i8* %202, align 1
  %204 = icmp slt i8 %203, 0
  br i1 %204, label %205, label %208

205:                                              ; preds = %200
  %206 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %182, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %207 = load i8*, i8** %206, align 8
  tail call void @_ZdlPv(i8* %207) #17
  br label %208

208:                                              ; preds = %200, %205
  %209 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %15, align 8
  %210 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %209, i64 %91
  %211 = bitcast %"union.absl::container_internal::map_slot_type"* %210 to i64*
  store i64 %164, i64* %211, align 8
  %212 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %209, i64 %91, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %213 = bitcast i64* %212 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %213, i8* nonnull align 8 %10, i64 15, i1 false)
  %214 = bitcast %"union.absl::container_internal::map_slot_type"* %210 to i8*
  %215 = getelementptr inbounds i8, i8* %214, i64 23
  store i8 %168, i8* %215, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 15, i1 false)
  %216 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %209, i64 %91, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %217 = bitcast i8** %216 to i64*
  store i64 %173, i64* %217, align 8
  %218 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %209, i64 %91, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %219 = bitcast i64* %218 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %219, i8* nonnull align 8 %11, i64 15, i1 false)
  %220 = getelementptr inbounds i8, i8* %214, i64 47
  store i8 %177, i8* %220, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 15, i1 false)
  %221 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %209, i64 %91, i32 0, i32 1, i32 1
  %222 = bitcast float* %221 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %222, i8* nonnull align 8 %5, i64 20, i1 false)
  %223 = add i64 %26, -1
  br label %224

224:                                              ; preds = %97, %208, %150, %25
  %225 = phi i64 [ %26, %25 ], [ %26, %97 ], [ %26, %150 ], [ %223, %208 ]
  %226 = add i64 %225, 1
  %227 = load i64, i64* %8, align 8
  %228 = icmp eq i64 %226, %227
  br i1 %228, label %17, label %25
}

declare void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, %"union.absl::container_internal::map_slot_type"* } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN6tflite4task6vision7SigmoidEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SD_EEEEE4findIS9_EENSM_8iteratorERKT_m(%"class.absl::container_internal::raw_hash_set"*, %"class.std::__1::basic_string"* dereferenceable(24), i64) local_unnamed_addr #10 comdat align 2 {
  %4 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %2, 7
  %9 = ptrtoint i8* %5 to i64
  %10 = lshr i64 %9, 12
  %11 = xor i64 %10, %8
  %12 = trunc i64 %2 to i8
  %13 = and i8 %12, 127
  %14 = insertelement <16 x i8> undef, i8 %13, i32 0
  %15 = shufflevector <16 x i8> %14, <16 x i8> undef, <16 x i32> zeroinitializer
  %16 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 1
  %17 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp sgt i8 %19, -1
  %21 = zext i8 %19 to i64
  %22 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  %23 = bitcast %"class.std::__1::basic_string"* %1 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = icmp sgt i64 %26, -1
  %28 = or i1 %20, %27
  %29 = select i1 %20, i64 %21, i64 %26
  %30 = select i1 %20, i64 %22, i64 %24
  %31 = inttoptr i64 %30 to i8*
  br label %32

32:                                               ; preds = %89, %3
  %33 = phi i64 [ %11, %3 ], [ %91, %89 ]
  %34 = phi i64 [ 0, %3 ], [ %90, %89 ]
  %35 = and i64 %33, %7
  %36 = getelementptr inbounds i8, i8* %5, i64 %35
  %37 = bitcast i8* %36 to <16 x i8>*
  %38 = load <16 x i8>, <16 x i8>* %37, align 1
  %39 = icmp eq <16 x i8> %15, %38
  %40 = bitcast <16 x i1> %39 to i16
  %41 = icmp eq i16 %40, 0
  br i1 %41, label %85, label %42

42:                                               ; preds = %32
  %43 = zext i16 %40 to i32
  %44 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %16, align 8
  br label %45

45:                                               ; preds = %42, %78
  %46 = phi i32 [ %43, %42 ], [ %80, %78 ]
  %47 = tail call i32 @llvm.cttz.i32(i32 %46, i1 false) #12, !range !41
  %48 = zext i32 %47 to i64
  %49 = add i64 %35, %48
  %50 = and i64 %49, %7
  %51 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %44, i64 %50
  %52 = bitcast %"union.absl::container_internal::map_slot_type"* %51 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %54 = load i8, i8* %53, align 1
  %55 = icmp slt i8 %54, 0
  br i1 %55, label %59, label %56

56:                                               ; preds = %45
  %57 = zext i8 %54 to i64
  %58 = ptrtoint %"union.absl::container_internal::map_slot_type"* %51 to i64
  br label %66

59:                                               ; preds = %45
  %60 = bitcast %"union.absl::container_internal::map_slot_type"* %51 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %44, i64 %50, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %63 = load i64, i64* %62, align 8
  %64 = icmp sgt i64 %63, -1
  br i1 %64, label %66, label %65, !prof !6

65:                                               ; preds = %59
  tail call void @llvm.trap() #12
  unreachable

66:                                               ; preds = %59, %56
  %67 = phi i64 [ %61, %59 ], [ %58, %56 ]
  %68 = phi i64 [ %63, %59 ], [ %57, %56 ]
  br i1 %28, label %70, label %69, !prof !42

69:                                               ; preds = %66
  tail call void @llvm.trap() #12
  unreachable

70:                                               ; preds = %66
  %71 = inttoptr i64 %67 to i8*
  %72 = icmp eq i64 %68, %29
  br i1 %72, label %73, label %78, !prof !43

73:                                               ; preds = %70
  %74 = icmp eq i64 %68, 0
  br i1 %74, label %82, label %75

75:                                               ; preds = %73
  %76 = tail call i32 @bcmp(i8* %71, i8* %31, i64 %68) #12
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %82, label %78, !prof !6

78:                                               ; preds = %70, %75
  %79 = add i32 %46, -1
  %80 = and i32 %79, %46
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %85, label %45

82:                                               ; preds = %73, %75
  %83 = getelementptr inbounds i8, i8* %5, i64 %50
  %84 = icmp ne i8* %83, null
  tail call void @llvm.assume(i1 %84) #12
  br label %92

85:                                               ; preds = %78, %32
  %86 = icmp eq <16 x i8> %38, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %87 = bitcast <16 x i1> %86 to i16
  %88 = icmp eq i16 %87, 0
  br i1 %88, label %89, label %92, !prof !7

89:                                               ; preds = %85
  %90 = add i64 %34, 16
  %91 = add i64 %90, %35
  br label %32

92:                                               ; preds = %85, %82
  %93 = phi %"union.absl::container_internal::map_slot_type"* [ %51, %82 ], [ undef, %85 ]
  %94 = phi i8* [ %83, %82 ], [ null, %85 ]
  %95 = insertvalue { i8*, %"union.absl::container_internal::map_slot_type"* } undef, i8* %94, 0
  %96 = insertvalue { i8*, %"union.absl::container_internal::map_slot_type"* } %95, %"union.absl::container_internal::map_slot_type"* %93, 1
  ret { i8*, %"union.absl::container_internal::map_slot_type"* } %96
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN6tflite4task6vision7SigmoidENS_9allocatorIS4_EEE24__emplace_back_slow_pathIJS4_EEEvDpOT_(%"class.std::__1::vector"*, %"struct.tflite::task::vision::Sigmoid"* dereferenceable(48)) local_unnamed_addr #14 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.tflite::task::vision::Sigmoid"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 48
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 384307168202282325
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.tflite::task::vision::Sigmoid"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 48
  %20 = icmp ult i64 %19, 192153584101141162
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 384307168202282325, %14 ]
  %28 = mul i64 %27, 48
  %29 = tail call i8* @_Znwm(i64 %28) #17
  %30 = bitcast i8* %29 to %"struct.tflite::task::vision::Sigmoid"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.tflite::task::vision::Sigmoid"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %33, i64 %32
  %36 = ptrtoint %"struct.tflite::task::vision::Sigmoid"* %35 to i64
  %37 = bitcast %"struct.tflite::task::vision::Sigmoid"* %34 to i8*
  %38 = bitcast %"struct.tflite::task::vision::Sigmoid"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #12
  %39 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %33, i64 %9, i32 1
  %40 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %1, i64 0, i32 1
  %41 = bitcast float* %39 to i8*
  %42 = bitcast float* %40 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 20, i1 false) #12
  %43 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %34, i64 1
  %44 = ptrtoint %"struct.tflite::task::vision::Sigmoid"* %43 to i64
  %45 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %46 = load %"struct.tflite::task::vision::Sigmoid"*, %"struct.tflite::task::vision::Sigmoid"** %45, align 8
  %47 = load %"struct.tflite::task::vision::Sigmoid"*, %"struct.tflite::task::vision::Sigmoid"** %3, align 8
  %48 = icmp eq %"struct.tflite::task::vision::Sigmoid"* %47, %46
  br i1 %48, label %49, label %51

49:                                               ; preds = %31
  %50 = ptrtoint %"struct.tflite::task::vision::Sigmoid"* %46 to i64
  br label %66

51:                                               ; preds = %31, %51
  %52 = phi %"struct.tflite::task::vision::Sigmoid"* [ %54, %51 ], [ %34, %31 ]
  %53 = phi %"struct.tflite::task::vision::Sigmoid"* [ %55, %51 ], [ %47, %31 ]
  %54 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %52, i64 -1
  %55 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %53, i64 -1
  %56 = bitcast %"struct.tflite::task::vision::Sigmoid"* %54 to i8*
  %57 = bitcast %"struct.tflite::task::vision::Sigmoid"* %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 24, i1 false) #12
  %58 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %52, i64 -1, i32 1
  %59 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %53, i64 -1, i32 1
  %60 = bitcast float* %58 to i8*
  %61 = bitcast float* %59 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %61, i64 20, i1 false) #12
  %62 = icmp eq %"struct.tflite::task::vision::Sigmoid"* %55, %46
  br i1 %62, label %63, label %51

63:                                               ; preds = %51
  %64 = load i64, i64* %6, align 8
  %65 = load %"struct.tflite::task::vision::Sigmoid"*, %"struct.tflite::task::vision::Sigmoid"** %3, align 8
  br label %66

66:                                               ; preds = %49, %63
  %67 = phi %"struct.tflite::task::vision::Sigmoid"* [ %46, %49 ], [ %65, %63 ]
  %68 = phi %"struct.tflite::task::vision::Sigmoid"* [ %34, %49 ], [ %54, %63 ]
  %69 = phi i64 [ %50, %49 ], [ %64, %63 ]
  %70 = ptrtoint %"struct.tflite::task::vision::Sigmoid"* %68 to i64
  store i64 %70, i64* %6, align 8
  store i64 %44, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %71 = inttoptr i64 %69 to %"struct.tflite::task::vision::Sigmoid"*
  %72 = icmp eq %"struct.tflite::task::vision::Sigmoid"* %67, %71
  br i1 %72, label %85, label %73

73:                                               ; preds = %66, %83
  %74 = phi %"struct.tflite::task::vision::Sigmoid"* [ %75, %83 ], [ %67, %66 ]
  %75 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %74, i64 -1
  %76 = bitcast %"struct.tflite::task::vision::Sigmoid"* %75 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %76, i64 0, i32 1, i32 0
  %78 = load i8, i8* %77, align 1
  %79 = icmp slt i8 %78, 0
  br i1 %79, label %80, label %83

80:                                               ; preds = %73
  %81 = getelementptr inbounds %"struct.tflite::task::vision::Sigmoid", %"struct.tflite::task::vision::Sigmoid"* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  tail call void @_ZdlPv(i8* %82) #17
  br label %83

83:                                               ; preds = %80, %73
  %84 = icmp eq %"struct.tflite::task::vision::Sigmoid"* %75, %71
  br i1 %84, label %85, label %73

85:                                               ; preds = %83, %66
  %86 = icmp eq i64 %69, 0
  br i1 %86, label %89, label %87

87:                                               ; preds = %85
  %88 = inttoptr i64 %69 to i8*
  tail call void @_ZdlPv(i8* %88) #17
  br label %89

89:                                               ; preds = %85, %87
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #15

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { nounwind readnone speculatable }
attributes #14 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nofree nounwind readonly }
attributes #16 = { noreturn nounwind }
attributes #17 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN4absl8OkStatusEv: argument 0"}
!5 = distinct !{!5, !"_ZN4absl8OkStatusEv"}
!6 = !{!"branch_weights", i32 2000, i32 1}
!7 = !{!"branch_weights", i32 1, i32 2000}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN4absl8StrSplitIcEENS_16strings_internal8SplitterINS1_15SelectDelimiterIT_E4typeENS_10AllowEmptyENS_11string_viewEEENS1_23ConvertibleToStringViewES4_: argument 0"}
!10 = distinct !{!10, !"_ZN4absl8StrSplitIcEENS_16strings_internal8SplitterINS1_15SelectDelimiterIT_E4typeENS_10AllowEmptyENS_11string_viewEEENS1_23ConvertibleToStringViewES4_"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK4absl16strings_internal8SplitterINS_6ByCharENS_10AllowEmptyENS_11string_viewEEcvT_INSt3__16vectorIS4_NS8_9allocatorIS4_EEEEvEEv: argument 0"}
!13 = distinct !{!13, !"_ZNK4absl16strings_internal8SplitterINS_6ByCharENS_10AllowEmptyENS_11string_viewEEcvT_INSt3__16vectorIS4_NS8_9allocatorIS4_EEEEvEEv"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN4absl9StrFormatIJmmEEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_19str_format_internal18FormatSpecTemplateIJXspclsr19str_format_internalE14ArgumentToConvIT_EEEEEEDpRKSA_: argument 0"}
!16 = distinct !{!16, !"_ZN4absl9StrFormatIJmmEEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_19str_format_internal18FormatSpecTemplateIJXspclsr19str_format_internalE14ArgumentToConvIT_EEEEEEDpRKSA_"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN6tflite4task6vision12_GLOBAL__N_123SigmoidFromLabelAndLineEN4absl11string_viewES4_: argument 0"}
!19 = distinct !{!19, !"_ZN6tflite4task6vision12_GLOBAL__N_123SigmoidFromLabelAndLineEN4absl11string_viewES4_"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN4absl8StrSplitIcEENS_16strings_internal8SplitterINS1_15SelectDelimiterIT_E4typeENS_10AllowEmptyENS_11string_viewEEENS1_23ConvertibleToStringViewES4_: argument 0"}
!22 = distinct !{!22, !"_ZN4absl8StrSplitIcEENS_16strings_internal8SplitterINS1_15SelectDelimiterIT_E4typeENS_10AllowEmptyENS_11string_viewEEENS1_23ConvertibleToStringViewES4_"}
!23 = !{!24, !18}
!24 = distinct !{!24, !25, !"_ZNK4absl16strings_internal8SplitterINS_6ByCharENS_10AllowEmptyENS_11string_viewEEcvT_INSt3__16vectorIS4_NS8_9allocatorIS4_EEEEvEEv: argument 0"}
!25 = distinct !{!25, !"_ZNK4absl16strings_internal8SplitterINS_6ByCharENS_10AllowEmptyENS_11string_viewEEcvT_INSt3__16vectorIS4_NS8_9allocatorIS4_EEEEvEEv"}
!26 = !{!27, !18}
!27 = distinct !{!27, !28, !"_ZN4absl9StrFormatIJmEEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_19str_format_internal18FormatSpecTemplateIJXspclsr19str_format_internalE14ArgumentToConvIT_EEEEEEDpRKSA_: argument 0"}
!28 = distinct !{!28, !"_ZN4absl9StrFormatIJmEEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_19str_format_internal18FormatSpecTemplateIJXspclsr19str_format_internalE14ArgumentToConvIT_EEEEEEDpRKSA_"}
!29 = !{!30, !18}
!30 = distinct !{!30, !31, !"_ZN4absl9StrFormatIJNS_11string_viewEEEENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEERKNS_19str_format_internal18FormatSpecTemplateIJXspclsr19str_format_internalE14ArgumentToConvIT_EEEEEEDpRKSB_: argument 0"}
!31 = distinct !{!31, !"_ZN4absl9StrFormatIJNS_11string_viewEEEENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEERKNS_19str_format_internal18FormatSpecTemplateIJXspclsr19str_format_internalE14ArgumentToConvIT_EEEEEEDpRKSB_"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZNK4absl11string_viewcvNSt3__112basic_stringIcNS1_11char_traitsIcEET_EEINS1_9allocatorIcEEEEv: argument 0"}
!34 = distinct !{!34, !"_ZNK4absl11string_viewcvNSt3__112basic_stringIcNS1_11char_traitsIcEET_EEINS1_9allocatorIcEEEEv"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZNK4absl16strings_internal8SplitterINS_6ByCharENS_10AllowEmptyENS_11string_viewEE5beginEv: argument 0"}
!37 = distinct !{!37, !"_ZNK4absl16strings_internal8SplitterINS_6ByCharENS_10AllowEmptyENS_11string_viewEE5beginEv"}
!38 = distinct !{!38, !39}
!39 = !{!"llvm.loop.unroll.disable"}
!40 = distinct !{!40, !39}
!41 = !{i32 0, i32 33}
!42 = !{!"branch_weights", i32 4001, i32 1}
!43 = !{!"branch_weights", i32 2146410443, i32 1073205}
