; ModuleID = '../../third_party/libgav1/src/src/dsp/warp.cc'
source_filename = "../../third_party/libgav1/src/src/dsp/warp.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.libgav1::dsp::Dsp" = type { void (i8*, i8*, i32, i32, i8*, i64)*, void (i8*, i64, i8*, i32*)*, [2 x [3 x void (i16*, i64, i32, i32, i32, i32, i32, i8*, i64)*]], [19 x void (i8*, i64, [32 x i16]*, i32)*], [19 x [3 x void ([32 x i16]*, i32, i32, i8*, i64)*]], [2 x [2 x [2 x [2 x void (i8*, i64, i32, i32, i32, i32, i32, i32, i8*, i64)*]]]], [2 x void (i8*, i64, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i64)*], void (i8*, i64, i8*, i32, i32, i32, i1)*, void (i8*, i64, i8*, i8*, i32, i32, i32, i32, i1, i1)*, void (i8*, i64, i8*, i32, i32, i32, i1)*, void (i8*, i8*, i8, i8, i32, i32, i8*, i64)*, %"struct.libgav1::dsp::FilmGrainFuncs", void (i8*, i64, i8*, i8*, i8, i32, i32)*, [3 x void (i8*, i8*, i64, i8*, i64, i32, i32)*], void (i8*, i32, i32)*, void (i8*, i32)*, [19 x [10 x void (i8*, i64, i8*, i8*)*]], [4 x [5 x [2 x void (i8, i8, i32, i8*, i32, i32, i8*)*]]], [4 x [2 x void (i8*, i64, i32, i32, i32)*]], [2 x void (%"struct.libgav1::RestorationUnitInfo"*, i8*, i64, i8*, i64, i8*, i64, i32, i32, %"union.libgav1::RestorationBuffer"*, i8*)*], [3 x [2 x void (i8*, i8*, i64, i8*, i64, i32, i32, i8*, i64)*]], void (%"struct.libgav1::ReferenceInfo"*, i32, i32, i32, i32, i32, i32, %"struct.libgav1::TemporalMotionField"*)*, [3 x void (%"struct.libgav1::MotionVector"*, i8*, i32*, i32, %"union.libgav1::CompoundMotionVector"*)*], [3 x void (%"struct.libgav1::MotionVector"*, i8*, i32, i32, %"struct.libgav1::MotionVector"*)*], [2 x void (i8*, i64, i32, i32, i8*, i64)*], void (i32, i32, i32, i8*)*, void (i8*, i8*, i64, i32, i32, i32, i32, i32, i8*, i64)*, void (i8*, i64, i32, i32, i32*, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8*, i64)*, void (i8*, i64, i32, i32, i32*, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8*, i64)*, [6 x [6 x [2 x void (i8*, i8*, i8*, i64)*]]] }
%"struct.libgav1::dsp::FilmGrainFuncs" = type { [3 x void (%"struct.libgav1::FilmGrainParams"*, i8*)*], [2 x [4 x void (%"struct.libgav1::FilmGrainParams"*, i8*, i32, i32, i8*, i8*)*]], [2 x void (i8*, i32, i32, i32, i32, i32, i8*)*], void (i8*, i32, i32, i32, i32, i8*)*, void (i32, i8*, i8*, i8*)*, void (i8*, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i8*, i64)*, [2 x void (i8, %"struct.libgav1::FilmGrainParams"*, i8*, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i8*, i64, i8*, i64)*] }
%"struct.libgav1::FilmGrainParams" = type { i8, i8, i8, i8, i8, i8, i8, i8, [14 x i8], [14 x i8], [10 x i8], [10 x i8], [10 x i8], [10 x i8], i8, i8, [24 x i8], [25 x i8], [25 x i8], i8, i16, i32, i32, i8, i8, i16, i8, i8, i16 }
%"struct.libgav1::RestorationUnitInfo" = type { i8, %"struct.libgav1::SgrProjInfo", [16 x i8], %"struct.libgav1::WienerInfo" }
%"struct.libgav1::SgrProjInfo" = type { i32, [2 x i32] }
%"struct.libgav1::WienerInfo" = type { [2 x i16], [28 x i8], [2 x [4 x i16]], [16 x i8] }
%"union.libgav1::RestorationBuffer" = type { %"struct.libgav1::SgrBuffer", [5024 x i8] }
%"struct.libgav1::SgrBuffer" = type { [1152 x i16], [1440 x i16], [1152 x i32], [1440 x i32], [1024 x i16], [768 x i16], [512 x i16], [1024 x i32], [768 x i32], [512 x i32], [288 x i8], [288 x i32] }
%"struct.libgav1::ReferenceInfo" = type { %"struct.std::__1::array", %"struct.std::__1::array.0", %"struct.std::__1::array.0", %"struct.std::__1::array.1", %"struct.std::__1::array.2", %"class.libgav1::Array2D", %"class.libgav1::Array2D.4" }
%"struct.std::__1::array" = type { [8 x i8] }
%"struct.std::__1::array.0" = type { [8 x i8] }
%"struct.std::__1::array.1" = type { [8 x i8] }
%"struct.std::__1::array.2" = type { [8 x i16] }
%"class.libgav1::Array2D" = type { %"class.std::__1::unique_ptr", i64, i64, %"class.libgav1::Array2DView" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.libgav1::Array2DView" = type { i32, i32, i8* }
%"class.libgav1::Array2D.4" = type { %"class.std::__1::unique_ptr.5", i64, i64, %"class.libgav1::Array2DView.11" }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.libgav1::MotionVector"* }
%"struct.libgav1::MotionVector" = type { %union.anon }
%union.anon = type { i32 }
%"class.libgav1::Array2DView.11" = type { i32, i32, %"struct.libgav1::MotionVector"* }
%"struct.libgav1::TemporalMotionField" = type { %"class.libgav1::Array2D.4", %"class.libgav1::Array2D.12" }
%"class.libgav1::Array2D.12" = type { %"class.std::__1::unique_ptr.13", i64, i64, %"class.libgav1::Array2DView.19" }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { i8* }
%"class.libgav1::Array2DView.19" = type { i32, i32, i8* }
%"union.libgav1::CompoundMotionVector" = type { i64 }
%union.anon.20 = type { [15 x [8 x i16]] }
%union.anon.21 = type { [15 x [8 x i16]] }
%union.anon.22 = type { [15 x [8 x i16]] }
%union.anon.23 = type { [15 x [8 x i16]] }

@_ZN7libgav114kWarpedFiltersE = external local_unnamed_addr constant [193 x [8 x i16]], align 16

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7libgav13dsp10WarpInit_CEv() local_unnamed_addr #0 {
  %1 = tail call %"struct.libgav1::dsp::Dsp"* @_ZN7libgav112dsp_internal19GetWritableDspTableEi(i32 8) #3
  %2 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %1, i64 0, i32 27
  %3 = bitcast void (i8*, i64, i32, i32, i32*, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8*, i64)** %2 to <2 x void (i8*, i64, i32, i32, i32*, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8*, i64)*>*
  store <2 x void (i8*, i64, i32, i32, i32*, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8*, i64)*> <void (i8*, i64, i32, i32, i32*, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_16Warp_CILb1ELi8EhEEvPKvliiPKiiiiiiissssPvl, void (i8*, i64, i32, i32, i32*, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_16Warp_CILb0ELi8EhEEvPKvliiPKiiiiiiissssPvl>, <2 x void (i8*, i64, i32, i32, i32*, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8*, i64)*>* %3, align 8
  %4 = tail call %"struct.libgav1::dsp::Dsp"* @_ZN7libgav112dsp_internal19GetWritableDspTableEi(i32 10) #3
  %5 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %4, i64 0, i32 27
  %6 = bitcast void (i8*, i64, i32, i32, i32*, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8*, i64)** %5 to <2 x void (i8*, i64, i32, i32, i32*, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8*, i64)*>*
  store <2 x void (i8*, i64, i32, i32, i32*, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8*, i64)*> <void (i8*, i64, i32, i32, i32*, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_16Warp_CILb1ELi10EtEEvPKvliiPKiiiiiiissssPvl, void (i8*, i64, i32, i32, i32*, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8*, i64)* @_ZN7libgav13dsp12_GLOBAL__N_16Warp_CILb0ELi10EtEEvPKvliiPKiiiiiiissssPvl>, <2 x void (i8*, i64, i32, i32, i32*, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8*, i64)*>* %6, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"struct.libgav1::dsp::Dsp"* @_ZN7libgav112dsp_internal19GetWritableDspTableEi(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_16Warp_CILb0ELi8EhEEvPKvliiPKiiiiiiissssPvl(i8* nocapture readonly, i64, i32, i32, i32* nocapture readonly, i32, i32, i32, i32, i32, i32, i16 signext, i16 signext, i16 signext, i16 signext, i8* nocapture, i64) #0 {
  %18 = alloca %union.anon.20, align 16
  %19 = bitcast %union.anon.20* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %19) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %19, i8 -86, i64 240, i1 false)
  %20 = add nsw i32 %10, %8
  %21 = icmp sgt i32 %10, 0
  br i1 %21, label %22, label %64

22:                                               ; preds = %17
  %23 = add nsw i32 %9, %7
  %24 = icmp sgt i32 %9, 0
  %25 = getelementptr inbounds i32, i32* %4, i64 2
  %26 = getelementptr inbounds i32, i32* %4, i64 3
  %27 = getelementptr inbounds i32, i32* %4, i64 4
  %28 = getelementptr inbounds i32, i32* %4, i64 5
  %29 = getelementptr inbounds i32, i32* %4, i64 1
  %30 = sext i16 %12 to i32
  %31 = mul nsw i32 %30, -7
  %32 = sext i16 %11 to i32
  %33 = shl nsw i32 %32, 2
  %34 = add nsw i32 %3, -1
  %35 = sext i32 %7 to i64
  %36 = sub nsw i64 0, %35
  %37 = sext i16 %14 to i32
  %38 = shl nsw i32 %37, 2
  %39 = sext i16 %13 to i32
  %40 = shl nsw i32 %39, 2
  %41 = sext i32 %2 to i64
  %42 = getelementptr inbounds i8, i8* %0, i64 -1
  %43 = getelementptr inbounds i8, i8* %42, i64 %41
  %44 = bitcast %union.anon.20* %18 to [15 x i16]*
  %45 = shl nsw i64 %16, 3
  %46 = sext i32 %23 to i64
  %47 = getelementptr inbounds %union.anon.20, %union.anon.20* %18, i64 0, i32 0, i64 1, i64 0
  %48 = getelementptr inbounds %union.anon.20, %union.anon.20* %18, i64 0, i32 0, i64 1, i64 1
  %49 = getelementptr inbounds %union.anon.20, %union.anon.20* %18, i64 0, i32 0, i64 1, i64 2
  %50 = getelementptr inbounds %union.anon.20, %union.anon.20* %18, i64 0, i32 0, i64 1, i64 3
  %51 = getelementptr inbounds %union.anon.20, %union.anon.20* %18, i64 0, i32 0, i64 1, i64 4
  %52 = getelementptr inbounds %union.anon.20, %union.anon.20* %18, i64 0, i32 0, i64 1, i64 5
  %53 = getelementptr inbounds %union.anon.20, %union.anon.20* %18, i64 0, i32 0, i64 1, i64 6
  %54 = bitcast %union.anon.20* %18 to <8 x i16>*
  br label %55

55:                                               ; preds = %22, %65
  %56 = phi i8* [ %15, %22 ], [ %66, %65 ]
  %57 = phi i32 [ %8, %22 ], [ %67, %65 ]
  br i1 %24, label %58, label %65

58:                                               ; preds = %55
  %59 = add nsw i32 %57, 4
  %60 = shl i32 %59, %6
  %61 = getelementptr inbounds i8, i8* %56, i64 %36
  %62 = getelementptr inbounds i8, i8* %56, i64 %36
  %63 = getelementptr inbounds i8, i8* %56, i64 %36
  br label %69

64:                                               ; preds = %65, %17
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %19) #3
  ret void

65:                                               ; preds = %589, %55
  %66 = getelementptr inbounds i8, i8* %56, i64 %45
  %67 = add nsw i32 %57, 8
  %68 = icmp slt i32 %67, %20
  br i1 %68, label %55, label %64

69:                                               ; preds = %58, %589
  %70 = phi i64 [ %35, %58 ], [ %590, %589 ]
  %71 = trunc i64 %70 to i32
  %72 = add i32 %71, 4
  %73 = shl i32 %72, %5
  %74 = load i32, i32* %25, align 4
  %75 = mul nsw i32 %74, %73
  %76 = load i32, i32* %26, align 4
  %77 = mul nsw i32 %76, %60
  %78 = add nsw i32 %77, %75
  %79 = load i32, i32* %4, align 4
  %80 = add nsw i32 %78, %79
  %81 = load i32, i32* %27, align 4
  %82 = mul nsw i32 %81, %73
  %83 = load i32, i32* %28, align 4
  %84 = mul nsw i32 %83, %60
  %85 = add nsw i32 %84, %82
  %86 = load i32, i32* %29, align 4
  %87 = add nsw i32 %85, %86
  %88 = ashr i32 %80, %5
  %89 = ashr i32 %87, %6
  %90 = ashr i32 %88, 16
  %91 = ashr i32 %89, 16
  %92 = add nsw i32 %90, -6
  %93 = icmp sge i32 %92, %2
  %94 = icmp slt i32 %88, -393216
  %95 = or i1 %94, %93
  br i1 %95, label %96, label %269

96:                                               ; preds = %69
  %97 = select i1 %94, i8* %0, i8* %43
  %98 = add nsw i32 %91, -6
  %99 = icmp sge i32 %98, %3
  %100 = icmp slt i32 %89, -393216
  %101 = or i1 %100, %99
  br i1 %101, label %190, label %102

102:                                              ; preds = %96
  %103 = sext i32 %91 to i64
  %104 = add nsw i64 %103, -7
  %105 = mul nsw i64 %104, %1
  %106 = getelementptr inbounds i8, i8* %97, i64 %105
  %107 = load i8, i8* %106, align 1
  %108 = add nsw i64 %103, -6
  %109 = mul nsw i64 %108, %1
  %110 = getelementptr inbounds i8, i8* %97, i64 %109
  %111 = load i8, i8* %110, align 1
  %112 = add nsw i64 %103, -5
  %113 = mul nsw i64 %112, %1
  %114 = getelementptr inbounds i8, i8* %97, i64 %113
  %115 = load i8, i8* %114, align 1
  %116 = add nsw i64 %103, -4
  %117 = mul nsw i64 %116, %1
  %118 = getelementptr inbounds i8, i8* %97, i64 %117
  %119 = load i8, i8* %118, align 1
  %120 = add nsw i64 %103, -3
  %121 = mul nsw i64 %120, %1
  %122 = getelementptr inbounds i8, i8* %97, i64 %121
  %123 = load i8, i8* %122, align 1
  %124 = add nsw i64 %103, -2
  %125 = mul nsw i64 %124, %1
  %126 = getelementptr inbounds i8, i8* %97, i64 %125
  %127 = load i8, i8* %126, align 1
  %128 = add nsw i64 %103, -1
  %129 = mul nsw i64 %128, %1
  %130 = getelementptr inbounds i8, i8* %97, i64 %129
  %131 = load i8, i8* %130, align 1
  %132 = mul nsw i64 %103, %1
  %133 = getelementptr inbounds i8, i8* %97, i64 %132
  %134 = load i8, i8* %133, align 1
  %135 = insertelement <8 x i8> undef, i8 %107, i32 0
  %136 = insertelement <8 x i8> %135, i8 %111, i32 1
  %137 = insertelement <8 x i8> %136, i8 %115, i32 2
  %138 = insertelement <8 x i8> %137, i8 %119, i32 3
  %139 = insertelement <8 x i8> %138, i8 %123, i32 4
  %140 = insertelement <8 x i8> %139, i8 %127, i32 5
  %141 = insertelement <8 x i8> %140, i8 %131, i32 6
  %142 = insertelement <8 x i8> %141, i8 %134, i32 7
  %143 = zext <8 x i8> %142 to <8 x i16>
  %144 = shl nuw nsw <8 x i16> %143, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  store <8 x i16> %144, <8 x i16>* %54, align 16
  %145 = add nsw i64 %103, 1
  %146 = mul nsw i64 %145, %1
  %147 = getelementptr inbounds i8, i8* %97, i64 %146
  %148 = load i8, i8* %147, align 1
  %149 = zext i8 %148 to i16
  %150 = shl nuw nsw i16 %149, 4
  store i16 %150, i16* %47, align 16
  %151 = add nsw i64 %103, 2
  %152 = mul nsw i64 %151, %1
  %153 = getelementptr inbounds i8, i8* %97, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = zext i8 %154 to i16
  %156 = shl nuw nsw i16 %155, 4
  store i16 %156, i16* %48, align 2
  %157 = add nsw i64 %103, 3
  %158 = mul nsw i64 %157, %1
  %159 = getelementptr inbounds i8, i8* %97, i64 %158
  %160 = load i8, i8* %159, align 1
  %161 = zext i8 %160 to i16
  %162 = shl nuw nsw i16 %161, 4
  store i16 %162, i16* %49, align 4
  %163 = add nsw i64 %103, 4
  %164 = mul nsw i64 %163, %1
  %165 = getelementptr inbounds i8, i8* %97, i64 %164
  %166 = load i8, i8* %165, align 1
  %167 = zext i8 %166 to i16
  %168 = shl nuw nsw i16 %167, 4
  store i16 %168, i16* %50, align 2
  %169 = add nsw i64 %103, 5
  %170 = mul nsw i64 %169, %1
  %171 = getelementptr inbounds i8, i8* %97, i64 %170
  %172 = load i8, i8* %171, align 1
  %173 = zext i8 %172 to i16
  %174 = shl nuw nsw i16 %173, 4
  store i16 %174, i16* %51, align 8
  %175 = add nsw i64 %103, 6
  %176 = mul nsw i64 %175, %1
  %177 = getelementptr inbounds i8, i8* %97, i64 %176
  %178 = load i8, i8* %177, align 1
  %179 = zext i8 %178 to i16
  %180 = shl nuw nsw i16 %179, 4
  store i16 %180, i16* %52, align 2
  %181 = add nsw i64 %103, 7
  %182 = mul nsw i64 %181, %1
  %183 = getelementptr inbounds i8, i8* %97, i64 %182
  %184 = load i8, i8* %183, align 1
  %185 = zext i8 %184 to i16
  %186 = shl nuw nsw i16 %185, 4
  store i16 %186, i16* %53, align 4
  %187 = getelementptr inbounds i8, i8* %62, i64 %70
  %188 = and i32 %89, 65535
  %189 = sub nsw i32 %188, %38
  br label %225

190:                                              ; preds = %96
  %191 = select i1 %100, i32 0, i32 %34
  %192 = sext i32 %191 to i64
  %193 = mul nsw i64 %192, %1
  %194 = getelementptr inbounds i8, i8* %97, i64 %193
  %195 = load i8, i8* %194, align 1
  %196 = getelementptr inbounds i8, i8* %63, i64 %70
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %196, i8 %195, i64 8, i1 false) #3
  %197 = bitcast i8* %196 to i64*
  %198 = getelementptr inbounds i8, i8* %196, i64 %16
  %199 = bitcast i8* %198 to i64*
  %200 = zext i8 %195 to i64
  %201 = shl nuw nsw i64 %200, 8
  %202 = or i64 %201, %200
  %203 = shl nuw nsw i64 %202, 16
  %204 = or i64 %202, %203
  %205 = shl nuw i64 %204, 32
  %206 = or i64 %204, %205
  store i64 %206, i64* %199, align 1
  %207 = getelementptr inbounds i8, i8* %198, i64 %16
  %208 = bitcast i8* %207 to i64*
  %209 = load i64, i64* %197, align 1
  store i64 %209, i64* %208, align 1
  %210 = getelementptr inbounds i8, i8* %207, i64 %16
  %211 = bitcast i8* %210 to i64*
  %212 = load i64, i64* %197, align 1
  store i64 %212, i64* %211, align 1
  %213 = getelementptr inbounds i8, i8* %210, i64 %16
  %214 = bitcast i8* %213 to i64*
  %215 = load i64, i64* %197, align 1
  store i64 %215, i64* %214, align 1
  %216 = getelementptr inbounds i8, i8* %213, i64 %16
  %217 = bitcast i8* %216 to i64*
  %218 = load i64, i64* %197, align 1
  store i64 %218, i64* %217, align 1
  %219 = getelementptr inbounds i8, i8* %216, i64 %16
  %220 = bitcast i8* %219 to i64*
  %221 = load i64, i64* %197, align 1
  store i64 %221, i64* %220, align 1
  %222 = getelementptr inbounds i8, i8* %219, i64 %16
  %223 = bitcast i8* %222 to i64*
  %224 = load i64, i64* %197, align 1
  store i64 %224, i64* %223, align 1
  br label %589

225:                                              ; preds = %233, %102
  %226 = phi i64 [ 0, %102 ], [ %231, %233 ]
  %227 = phi i32 [ %189, %102 ], [ %235, %233 ]
  %228 = phi i8* [ %187, %102 ], [ %234, %233 ]
  %229 = sub nsw i32 %227, %40
  %230 = getelementptr inbounds [15 x i16], [15 x i16]* %44, i64 0, i64 %226
  %231 = add nuw nsw i64 %226, 1
  %232 = bitcast i16* %230 to <8 x i16>*
  br label %237

233:                                              ; preds = %237
  %234 = getelementptr inbounds i8, i8* %228, i64 %16
  %235 = add nsw i32 %227, %37
  %236 = icmp eq i64 %231, 8
  br i1 %236, label %589, label %225

237:                                              ; preds = %237, %225
  %238 = phi i64 [ 0, %225 ], [ %267, %237 ]
  %239 = phi i32 [ %229, %225 ], [ %266, %237 ]
  %240 = add nsw i32 %239, 512
  %241 = ashr i32 %240, 10
  %242 = add nsw i32 %241, 64
  %243 = sext i32 %242 to i64
  %244 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %243, i64 0
  %245 = bitcast i16* %244 to <8 x i16>*
  %246 = load <8 x i16>, <8 x i16>* %245, align 16
  %247 = sext <8 x i16> %246 to <8 x i32>
  %248 = load <8 x i16>, <8 x i16>* %232, align 2
  %249 = sext <8 x i16> %248 to <8 x i32>
  %250 = mul nsw <8 x i32> %249, %247
  %251 = shufflevector <8 x i32> %250, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %252 = add nsw <8 x i32> %250, %251
  %253 = shufflevector <8 x i32> %252, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %254 = add nsw <8 x i32> %252, %253
  %255 = shufflevector <8 x i32> %254, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %256 = add nsw <8 x i32> %254, %255
  %257 = extractelement <8 x i32> %256, i32 0
  %258 = add nsw i32 %257, 1024
  %259 = ashr i32 %258, 11
  %260 = icmp slt i32 %259, 255
  %261 = select i1 %260, i32 %259, i32 255
  %262 = icmp sgt i32 %261, 0
  %263 = select i1 %262, i32 %261, i32 0
  %264 = trunc i32 %263 to i8
  %265 = getelementptr inbounds i8, i8* %228, i64 %238
  store i8 %264, i8* %265, align 1
  %266 = add nsw i32 %239, %39
  %267 = add nuw nsw i64 %238, 1
  %268 = icmp eq i64 %267, 8
  br i1 %268, label %233, label %237

269:                                              ; preds = %69
  %270 = add nsw i32 %91, -6
  %271 = icmp sge i32 %270, %3
  %272 = icmp slt i32 %89, -393216
  %273 = or i1 %272, %271
  br i1 %273, label %274, label %381

274:                                              ; preds = %269
  %275 = select i1 %272, i32 0, i32 %34
  %276 = sext i32 %275 to i64
  %277 = mul nsw i64 %276, %1
  %278 = getelementptr inbounds i8, i8* %0, i64 %277
  %279 = and i32 %88, 65535
  %280 = add nsw i32 %279, %31
  %281 = add nsw i32 %90, -3
  br label %282

282:                                              ; preds = %287, %274
  %283 = phi i64 [ -7, %274 ], [ %289, %287 ]
  %284 = phi i32 [ %280, %274 ], [ %288, %287 ]
  %285 = sub nsw i32 %284, %33
  %286 = add nsw i64 %283, 7
  br label %291

287:                                              ; preds = %291
  %288 = add nsw i32 %284, %30
  %289 = add nsw i64 %283, 1
  %290 = icmp eq i64 %289, 8
  br i1 %290, label %488, label %282

291:                                              ; preds = %291, %282
  %292 = phi i64 [ -4, %282 ], [ %378, %291 ]
  %293 = phi i32 [ -4, %282 ], [ %379, %291 ]
  %294 = phi i32 [ %285, %282 ], [ %377, %291 ]
  %295 = add nsw i32 %294, 512
  %296 = ashr i32 %295, 10
  %297 = add nsw i32 %296, 64
  %298 = add i32 %281, %293
  %299 = sext i32 %297 to i64
  %300 = sext i32 %298 to i64
  %301 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %299, i64 0
  %302 = load i16, i16* %301, align 16
  %303 = sext i16 %302 to i32
  %304 = getelementptr inbounds i8, i8* %278, i64 %300
  %305 = load i8, i8* %304, align 1
  %306 = zext i8 %305 to i32
  %307 = mul nsw i32 %306, %303
  %308 = add nsw i32 %307, 16384
  %309 = add nsw i64 %300, 1
  %310 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %299, i64 1
  %311 = load i16, i16* %310, align 2
  %312 = sext i16 %311 to i32
  %313 = getelementptr inbounds i8, i8* %278, i64 %309
  %314 = load i8, i8* %313, align 1
  %315 = zext i8 %314 to i32
  %316 = mul nsw i32 %315, %312
  %317 = add nsw i32 %316, %308
  %318 = add nsw i64 %300, 2
  %319 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %299, i64 2
  %320 = load i16, i16* %319, align 4
  %321 = sext i16 %320 to i32
  %322 = getelementptr inbounds i8, i8* %278, i64 %318
  %323 = load i8, i8* %322, align 1
  %324 = zext i8 %323 to i32
  %325 = mul nsw i32 %324, %321
  %326 = add nsw i32 %325, %317
  %327 = add nsw i64 %300, 3
  %328 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %299, i64 3
  %329 = load i16, i16* %328, align 2
  %330 = sext i16 %329 to i32
  %331 = getelementptr inbounds i8, i8* %278, i64 %327
  %332 = load i8, i8* %331, align 1
  %333 = zext i8 %332 to i32
  %334 = mul nsw i32 %333, %330
  %335 = add nsw i32 %334, %326
  %336 = add nsw i64 %300, 4
  %337 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %299, i64 4
  %338 = load i16, i16* %337, align 8
  %339 = sext i16 %338 to i32
  %340 = getelementptr inbounds i8, i8* %278, i64 %336
  %341 = load i8, i8* %340, align 1
  %342 = zext i8 %341 to i32
  %343 = mul nsw i32 %342, %339
  %344 = add nsw i32 %343, %335
  %345 = add nsw i64 %300, 5
  %346 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %299, i64 5
  %347 = load i16, i16* %346, align 2
  %348 = sext i16 %347 to i32
  %349 = getelementptr inbounds i8, i8* %278, i64 %345
  %350 = load i8, i8* %349, align 1
  %351 = zext i8 %350 to i32
  %352 = mul nsw i32 %351, %348
  %353 = add nsw i32 %352, %344
  %354 = add nsw i64 %300, 6
  %355 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %299, i64 6
  %356 = load i16, i16* %355, align 4
  %357 = sext i16 %356 to i32
  %358 = getelementptr inbounds i8, i8* %278, i64 %354
  %359 = load i8, i8* %358, align 1
  %360 = zext i8 %359 to i32
  %361 = mul nsw i32 %360, %357
  %362 = add nsw i32 %361, %353
  %363 = add nsw i64 %300, 7
  %364 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %299, i64 7
  %365 = load i16, i16* %364, align 2
  %366 = sext i16 %365 to i32
  %367 = getelementptr inbounds i8, i8* %278, i64 %363
  %368 = load i8, i8* %367, align 1
  %369 = zext i8 %368 to i32
  %370 = mul nsw i32 %369, %366
  %371 = add nsw i32 %370, %362
  %372 = add nsw i32 %371, 4
  %373 = lshr i32 %372, 3
  %374 = trunc i32 %373 to i16
  %375 = add nsw i64 %292, 4
  %376 = getelementptr inbounds %union.anon.20, %union.anon.20* %18, i64 0, i32 0, i64 %286, i64 %375
  store i16 %374, i16* %376, align 2
  %377 = add nsw i32 %294, %32
  %378 = add nsw i64 %292, 1
  %379 = add nsw i32 %293, 1
  %380 = icmp eq i64 %378, 4
  br i1 %380, label %287, label %291

381:                                              ; preds = %269
  %382 = and i32 %88, 65535
  %383 = add nsw i32 %382, %31
  %384 = add nsw i32 %90, -3
  %385 = sext i32 %91 to i64
  br label %386

386:                                              ; preds = %394, %381
  %387 = phi i64 [ -7, %381 ], [ %396, %394 ]
  %388 = phi i32 [ %383, %381 ], [ %395, %394 ]
  %389 = add nsw i64 %387, %385
  %390 = mul nsw i64 %389, %1
  %391 = getelementptr inbounds i8, i8* %0, i64 %390
  %392 = sub nsw i32 %388, %33
  %393 = add nsw i64 %387, 7
  br label %398

394:                                              ; preds = %398
  %395 = add nsw i32 %388, %30
  %396 = add nsw i64 %387, 1
  %397 = icmp eq i64 %396, 8
  br i1 %397, label %488, label %386

398:                                              ; preds = %398, %386
  %399 = phi i64 [ -4, %386 ], [ %485, %398 ]
  %400 = phi i32 [ -4, %386 ], [ %486, %398 ]
  %401 = phi i32 [ %392, %386 ], [ %484, %398 ]
  %402 = add nsw i32 %401, 512
  %403 = ashr i32 %402, 10
  %404 = add nsw i32 %403, 64
  %405 = add i32 %384, %400
  %406 = sext i32 %404 to i64
  %407 = sext i32 %405 to i64
  %408 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %406, i64 0
  %409 = load i16, i16* %408, align 16
  %410 = sext i16 %409 to i32
  %411 = getelementptr inbounds i8, i8* %391, i64 %407
  %412 = load i8, i8* %411, align 1
  %413 = zext i8 %412 to i32
  %414 = mul nsw i32 %413, %410
  %415 = add nsw i32 %414, 16384
  %416 = add nsw i64 %407, 1
  %417 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %406, i64 1
  %418 = load i16, i16* %417, align 2
  %419 = sext i16 %418 to i32
  %420 = getelementptr inbounds i8, i8* %391, i64 %416
  %421 = load i8, i8* %420, align 1
  %422 = zext i8 %421 to i32
  %423 = mul nsw i32 %422, %419
  %424 = add nsw i32 %423, %415
  %425 = add nsw i64 %407, 2
  %426 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %406, i64 2
  %427 = load i16, i16* %426, align 4
  %428 = sext i16 %427 to i32
  %429 = getelementptr inbounds i8, i8* %391, i64 %425
  %430 = load i8, i8* %429, align 1
  %431 = zext i8 %430 to i32
  %432 = mul nsw i32 %431, %428
  %433 = add nsw i32 %432, %424
  %434 = add nsw i64 %407, 3
  %435 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %406, i64 3
  %436 = load i16, i16* %435, align 2
  %437 = sext i16 %436 to i32
  %438 = getelementptr inbounds i8, i8* %391, i64 %434
  %439 = load i8, i8* %438, align 1
  %440 = zext i8 %439 to i32
  %441 = mul nsw i32 %440, %437
  %442 = add nsw i32 %441, %433
  %443 = add nsw i64 %407, 4
  %444 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %406, i64 4
  %445 = load i16, i16* %444, align 8
  %446 = sext i16 %445 to i32
  %447 = getelementptr inbounds i8, i8* %391, i64 %443
  %448 = load i8, i8* %447, align 1
  %449 = zext i8 %448 to i32
  %450 = mul nsw i32 %449, %446
  %451 = add nsw i32 %450, %442
  %452 = add nsw i64 %407, 5
  %453 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %406, i64 5
  %454 = load i16, i16* %453, align 2
  %455 = sext i16 %454 to i32
  %456 = getelementptr inbounds i8, i8* %391, i64 %452
  %457 = load i8, i8* %456, align 1
  %458 = zext i8 %457 to i32
  %459 = mul nsw i32 %458, %455
  %460 = add nsw i32 %459, %451
  %461 = add nsw i64 %407, 6
  %462 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %406, i64 6
  %463 = load i16, i16* %462, align 4
  %464 = sext i16 %463 to i32
  %465 = getelementptr inbounds i8, i8* %391, i64 %461
  %466 = load i8, i8* %465, align 1
  %467 = zext i8 %466 to i32
  %468 = mul nsw i32 %467, %464
  %469 = add nsw i32 %468, %460
  %470 = add nsw i64 %407, 7
  %471 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %406, i64 7
  %472 = load i16, i16* %471, align 2
  %473 = sext i16 %472 to i32
  %474 = getelementptr inbounds i8, i8* %391, i64 %470
  %475 = load i8, i8* %474, align 1
  %476 = zext i8 %475 to i32
  %477 = mul nsw i32 %476, %473
  %478 = add nsw i32 %477, %469
  %479 = add nsw i32 %478, 4
  %480 = lshr i32 %479, 3
  %481 = trunc i32 %480 to i16
  %482 = add nsw i64 %399, 4
  %483 = getelementptr inbounds %union.anon.20, %union.anon.20* %18, i64 0, i32 0, i64 %393, i64 %482
  store i16 %481, i16* %483, align 2
  %484 = add nsw i32 %401, %32
  %485 = add nsw i64 %399, 1
  %486 = add nsw i32 %400, 1
  %487 = icmp eq i64 %485, 4
  br i1 %487, label %394, label %398

488:                                              ; preds = %394, %287
  %489 = getelementptr inbounds i8, i8* %61, i64 %70
  %490 = and i32 %89, 65535
  %491 = sub nsw i32 %490, %38
  br label %492

492:                                              ; preds = %504, %488
  %493 = phi i64 [ 0, %488 ], [ %497, %504 ]
  %494 = phi i32 [ %491, %488 ], [ %506, %504 ]
  %495 = phi i8* [ %489, %488 ], [ %505, %504 ]
  %496 = sub nsw i32 %494, %40
  %497 = add nuw nsw i64 %493, 1
  %498 = add nuw nsw i64 %493, 2
  %499 = add nuw nsw i64 %493, 3
  %500 = add nuw nsw i64 %493, 4
  %501 = add nuw nsw i64 %493, 5
  %502 = add nuw nsw i64 %493, 6
  %503 = add nuw nsw i64 %493, 7
  br label %508

504:                                              ; preds = %508
  %505 = getelementptr inbounds i8, i8* %495, i64 %16
  %506 = add nsw i32 %494, %37
  %507 = icmp eq i64 %497, 8
  br i1 %507, label %589, label %492

508:                                              ; preds = %508, %492
  %509 = phi i64 [ 0, %492 ], [ %587, %508 ]
  %510 = phi i32 [ %496, %492 ], [ %586, %508 ]
  %511 = add nsw i32 %510, 512
  %512 = ashr i32 %511, 10
  %513 = add nsw i32 %512, 64
  %514 = sext i32 %513 to i64
  %515 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %514, i64 0
  %516 = load i16, i16* %515, align 16
  %517 = sext i16 %516 to i32
  %518 = getelementptr inbounds %union.anon.20, %union.anon.20* %18, i64 0, i32 0, i64 %493, i64 %509
  %519 = load i16, i16* %518, align 2
  %520 = sext i16 %519 to i32
  %521 = mul nsw i32 %520, %517
  %522 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %514, i64 1
  %523 = load i16, i16* %522, align 2
  %524 = sext i16 %523 to i32
  %525 = getelementptr inbounds %union.anon.20, %union.anon.20* %18, i64 0, i32 0, i64 %497, i64 %509
  %526 = load i16, i16* %525, align 2
  %527 = sext i16 %526 to i32
  %528 = mul nsw i32 %527, %524
  %529 = add nsw i32 %528, %521
  %530 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %514, i64 2
  %531 = load i16, i16* %530, align 4
  %532 = sext i16 %531 to i32
  %533 = getelementptr inbounds %union.anon.20, %union.anon.20* %18, i64 0, i32 0, i64 %498, i64 %509
  %534 = load i16, i16* %533, align 2
  %535 = sext i16 %534 to i32
  %536 = mul nsw i32 %535, %532
  %537 = add nsw i32 %536, %529
  %538 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %514, i64 3
  %539 = load i16, i16* %538, align 2
  %540 = sext i16 %539 to i32
  %541 = getelementptr inbounds %union.anon.20, %union.anon.20* %18, i64 0, i32 0, i64 %499, i64 %509
  %542 = load i16, i16* %541, align 2
  %543 = sext i16 %542 to i32
  %544 = mul nsw i32 %543, %540
  %545 = add nsw i32 %544, %537
  %546 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %514, i64 4
  %547 = load i16, i16* %546, align 8
  %548 = sext i16 %547 to i32
  %549 = getelementptr inbounds %union.anon.20, %union.anon.20* %18, i64 0, i32 0, i64 %500, i64 %509
  %550 = load i16, i16* %549, align 2
  %551 = sext i16 %550 to i32
  %552 = mul nsw i32 %551, %548
  %553 = add nsw i32 %552, %545
  %554 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %514, i64 5
  %555 = load i16, i16* %554, align 2
  %556 = sext i16 %555 to i32
  %557 = getelementptr inbounds %union.anon.20, %union.anon.20* %18, i64 0, i32 0, i64 %501, i64 %509
  %558 = load i16, i16* %557, align 2
  %559 = sext i16 %558 to i32
  %560 = mul nsw i32 %559, %556
  %561 = add nsw i32 %560, %553
  %562 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %514, i64 6
  %563 = load i16, i16* %562, align 4
  %564 = sext i16 %563 to i32
  %565 = getelementptr inbounds %union.anon.20, %union.anon.20* %18, i64 0, i32 0, i64 %502, i64 %509
  %566 = load i16, i16* %565, align 2
  %567 = sext i16 %566 to i32
  %568 = mul nsw i32 %567, %564
  %569 = add nsw i32 %568, %561
  %570 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %514, i64 7
  %571 = load i16, i16* %570, align 2
  %572 = sext i16 %571 to i32
  %573 = getelementptr inbounds %union.anon.20, %union.anon.20* %18, i64 0, i32 0, i64 %503, i64 %509
  %574 = load i16, i16* %573, align 2
  %575 = sext i16 %574 to i32
  %576 = mul nsw i32 %575, %572
  %577 = add nsw i32 %576, %569
  %578 = add nsw i32 %577, -261120
  %579 = ashr i32 %578, 11
  %580 = icmp slt i32 %579, 255
  %581 = select i1 %580, i32 %579, i32 255
  %582 = icmp sgt i32 %581, 0
  %583 = select i1 %582, i32 %581, i32 0
  %584 = trunc i32 %583 to i8
  %585 = getelementptr inbounds i8, i8* %495, i64 %509
  store i8 %584, i8* %585, align 1
  %586 = add nsw i32 %510, %39
  %587 = add nuw nsw i64 %509, 1
  %588 = icmp eq i64 %587, 8
  br i1 %588, label %504, label %508

589:                                              ; preds = %504, %233, %190
  %590 = add nsw i64 %70, 8
  %591 = icmp slt i64 %590, %46
  br i1 %591, label %69, label %65
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_16Warp_CILb1ELi8EhEEvPKvliiPKiiiiiiissssPvl(i8* nocapture readonly, i64, i32, i32, i32* nocapture readonly, i32, i32, i32, i32, i32, i32, i16 signext, i16 signext, i16 signext, i16 signext, i8* nocapture, i64) #0 {
  %18 = alloca %union.anon.21, align 16
  %19 = bitcast %union.anon.21* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %19) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %19, i8 -86, i64 240, i1 false)
  %20 = add nsw i32 %10, %8
  %21 = icmp sgt i32 %10, 0
  br i1 %21, label %22, label %65

22:                                               ; preds = %17
  %23 = bitcast i8* %15 to i16*
  %24 = add nsw i32 %9, %7
  %25 = icmp sgt i32 %9, 0
  %26 = getelementptr inbounds i32, i32* %4, i64 2
  %27 = getelementptr inbounds i32, i32* %4, i64 3
  %28 = getelementptr inbounds i32, i32* %4, i64 4
  %29 = getelementptr inbounds i32, i32* %4, i64 5
  %30 = getelementptr inbounds i32, i32* %4, i64 1
  %31 = sext i16 %12 to i32
  %32 = mul nsw i32 %31, -7
  %33 = sext i16 %11 to i32
  %34 = shl nsw i32 %33, 2
  %35 = add nsw i32 %3, -1
  %36 = sext i32 %7 to i64
  %37 = sub nsw i64 0, %36
  %38 = sext i16 %14 to i32
  %39 = shl nsw i32 %38, 2
  %40 = sext i16 %13 to i32
  %41 = shl nsw i32 %40, 2
  %42 = sext i32 %2 to i64
  %43 = getelementptr inbounds i8, i8* %0, i64 -1
  %44 = getelementptr inbounds i8, i8* %43, i64 %42
  %45 = bitcast %union.anon.21* %18 to [15 x i16]*
  %46 = shl nsw i64 %16, 3
  %47 = sext i32 %24 to i64
  %48 = getelementptr inbounds %union.anon.21, %union.anon.21* %18, i64 0, i32 0, i64 1, i64 0
  %49 = getelementptr inbounds %union.anon.21, %union.anon.21* %18, i64 0, i32 0, i64 1, i64 1
  %50 = getelementptr inbounds %union.anon.21, %union.anon.21* %18, i64 0, i32 0, i64 1, i64 2
  %51 = getelementptr inbounds %union.anon.21, %union.anon.21* %18, i64 0, i32 0, i64 1, i64 3
  %52 = getelementptr inbounds %union.anon.21, %union.anon.21* %18, i64 0, i32 0, i64 1, i64 4
  %53 = getelementptr inbounds %union.anon.21, %union.anon.21* %18, i64 0, i32 0, i64 1, i64 5
  %54 = getelementptr inbounds %union.anon.21, %union.anon.21* %18, i64 0, i32 0, i64 1, i64 6
  %55 = bitcast %union.anon.21* %18 to <8 x i16>*
  br label %56

56:                                               ; preds = %22, %66
  %57 = phi i16* [ %23, %22 ], [ %67, %66 ]
  %58 = phi i32 [ %8, %22 ], [ %68, %66 ]
  br i1 %25, label %59, label %66

59:                                               ; preds = %56
  %60 = add nsw i32 %58, 4
  %61 = shl i32 %60, %6
  %62 = getelementptr inbounds i16, i16* %57, i64 %37
  %63 = getelementptr inbounds i16, i16* %57, i64 %37
  %64 = getelementptr inbounds i16, i16* %57, i64 %37
  br label %70

65:                                               ; preds = %66, %17
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %19) #3
  ret void

66:                                               ; preds = %627, %56
  %67 = getelementptr inbounds i16, i16* %57, i64 %46
  %68 = add nsw i32 %58, 8
  %69 = icmp slt i32 %68, %20
  br i1 %69, label %56, label %65

70:                                               ; preds = %59, %627
  %71 = phi i64 [ %36, %59 ], [ %628, %627 ]
  %72 = trunc i64 %71 to i32
  %73 = add i32 %72, 4
  %74 = shl i32 %73, %5
  %75 = load i32, i32* %26, align 4
  %76 = mul nsw i32 %75, %74
  %77 = load i32, i32* %27, align 4
  %78 = mul nsw i32 %77, %61
  %79 = add nsw i32 %78, %76
  %80 = load i32, i32* %4, align 4
  %81 = add nsw i32 %79, %80
  %82 = load i32, i32* %28, align 4
  %83 = mul nsw i32 %82, %74
  %84 = load i32, i32* %29, align 4
  %85 = mul nsw i32 %84, %61
  %86 = add nsw i32 %85, %83
  %87 = load i32, i32* %30, align 4
  %88 = add nsw i32 %86, %87
  %89 = ashr i32 %81, %5
  %90 = ashr i32 %88, %6
  %91 = ashr i32 %89, 16
  %92 = ashr i32 %90, 16
  %93 = add nsw i32 %91, -6
  %94 = icmp sge i32 %93, %2
  %95 = icmp slt i32 %89, -393216
  %96 = or i1 %95, %94
  br i1 %96, label %97, label %311

97:                                               ; preds = %70
  %98 = select i1 %95, i8* %0, i8* %44
  %99 = add nsw i32 %92, -6
  %100 = icmp sge i32 %99, %3
  %101 = icmp slt i32 %90, -393216
  %102 = or i1 %101, %100
  br i1 %102, label %191, label %103

103:                                              ; preds = %97
  %104 = sext i32 %92 to i64
  %105 = add nsw i64 %104, -7
  %106 = mul nsw i64 %105, %1
  %107 = getelementptr inbounds i8, i8* %98, i64 %106
  %108 = load i8, i8* %107, align 1
  %109 = add nsw i64 %104, -6
  %110 = mul nsw i64 %109, %1
  %111 = getelementptr inbounds i8, i8* %98, i64 %110
  %112 = load i8, i8* %111, align 1
  %113 = add nsw i64 %104, -5
  %114 = mul nsw i64 %113, %1
  %115 = getelementptr inbounds i8, i8* %98, i64 %114
  %116 = load i8, i8* %115, align 1
  %117 = add nsw i64 %104, -4
  %118 = mul nsw i64 %117, %1
  %119 = getelementptr inbounds i8, i8* %98, i64 %118
  %120 = load i8, i8* %119, align 1
  %121 = add nsw i64 %104, -3
  %122 = mul nsw i64 %121, %1
  %123 = getelementptr inbounds i8, i8* %98, i64 %122
  %124 = load i8, i8* %123, align 1
  %125 = add nsw i64 %104, -2
  %126 = mul nsw i64 %125, %1
  %127 = getelementptr inbounds i8, i8* %98, i64 %126
  %128 = load i8, i8* %127, align 1
  %129 = add nsw i64 %104, -1
  %130 = mul nsw i64 %129, %1
  %131 = getelementptr inbounds i8, i8* %98, i64 %130
  %132 = load i8, i8* %131, align 1
  %133 = mul nsw i64 %104, %1
  %134 = getelementptr inbounds i8, i8* %98, i64 %133
  %135 = load i8, i8* %134, align 1
  %136 = insertelement <8 x i8> undef, i8 %108, i32 0
  %137 = insertelement <8 x i8> %136, i8 %112, i32 1
  %138 = insertelement <8 x i8> %137, i8 %116, i32 2
  %139 = insertelement <8 x i8> %138, i8 %120, i32 3
  %140 = insertelement <8 x i8> %139, i8 %124, i32 4
  %141 = insertelement <8 x i8> %140, i8 %128, i32 5
  %142 = insertelement <8 x i8> %141, i8 %132, i32 6
  %143 = insertelement <8 x i8> %142, i8 %135, i32 7
  %144 = zext <8 x i8> %143 to <8 x i16>
  %145 = shl nuw nsw <8 x i16> %144, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  store <8 x i16> %145, <8 x i16>* %55, align 16
  %146 = add nsw i64 %104, 1
  %147 = mul nsw i64 %146, %1
  %148 = getelementptr inbounds i8, i8* %98, i64 %147
  %149 = load i8, i8* %148, align 1
  %150 = zext i8 %149 to i16
  %151 = shl nuw nsw i16 %150, 4
  store i16 %151, i16* %48, align 16
  %152 = add nsw i64 %104, 2
  %153 = mul nsw i64 %152, %1
  %154 = getelementptr inbounds i8, i8* %98, i64 %153
  %155 = load i8, i8* %154, align 1
  %156 = zext i8 %155 to i16
  %157 = shl nuw nsw i16 %156, 4
  store i16 %157, i16* %49, align 2
  %158 = add nsw i64 %104, 3
  %159 = mul nsw i64 %158, %1
  %160 = getelementptr inbounds i8, i8* %98, i64 %159
  %161 = load i8, i8* %160, align 1
  %162 = zext i8 %161 to i16
  %163 = shl nuw nsw i16 %162, 4
  store i16 %163, i16* %50, align 4
  %164 = add nsw i64 %104, 4
  %165 = mul nsw i64 %164, %1
  %166 = getelementptr inbounds i8, i8* %98, i64 %165
  %167 = load i8, i8* %166, align 1
  %168 = zext i8 %167 to i16
  %169 = shl nuw nsw i16 %168, 4
  store i16 %169, i16* %51, align 2
  %170 = add nsw i64 %104, 5
  %171 = mul nsw i64 %170, %1
  %172 = getelementptr inbounds i8, i8* %98, i64 %171
  %173 = load i8, i8* %172, align 1
  %174 = zext i8 %173 to i16
  %175 = shl nuw nsw i16 %174, 4
  store i16 %175, i16* %52, align 8
  %176 = add nsw i64 %104, 6
  %177 = mul nsw i64 %176, %1
  %178 = getelementptr inbounds i8, i8* %98, i64 %177
  %179 = load i8, i8* %178, align 1
  %180 = zext i8 %179 to i16
  %181 = shl nuw nsw i16 %180, 4
  store i16 %181, i16* %53, align 2
  %182 = add nsw i64 %104, 7
  %183 = mul nsw i64 %182, %1
  %184 = getelementptr inbounds i8, i8* %98, i64 %183
  %185 = load i8, i8* %184, align 1
  %186 = zext i8 %185 to i16
  %187 = shl nuw nsw i16 %186, 4
  store i16 %187, i16* %54, align 4
  %188 = getelementptr inbounds i16, i16* %63, i64 %71
  %189 = and i32 %90, 65535
  %190 = sub nsw i32 %189, %39
  br label %218

191:                                              ; preds = %97
  %192 = select i1 %101, i32 0, i32 %35
  %193 = sext i32 %192 to i64
  %194 = mul nsw i64 %193, %1
  %195 = getelementptr inbounds i8, i8* %98, i64 %194
  %196 = load i8, i8* %195, align 1
  %197 = getelementptr inbounds i16, i16* %64, i64 %71
  %198 = zext i8 %196 to i16
  %199 = shl nuw nsw i16 %198, 4
  %200 = insertelement <8 x i16> undef, i16 %199, i32 0
  %201 = shufflevector <8 x i16> %200, <8 x i16> undef, <8 x i32> zeroinitializer
  %202 = bitcast i16* %197 to <8 x i16>*
  store <8 x i16> %201, <8 x i16>* %202, align 2
  %203 = bitcast i16* %197 to i8*
  %204 = getelementptr inbounds i16, i16* %197, i64 %16
  %205 = bitcast i16* %204 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %205, i8* align 2 %203, i64 16, i1 false)
  %206 = getelementptr inbounds i16, i16* %204, i64 %16
  %207 = bitcast i16* %206 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %207, i8* align 2 %203, i64 16, i1 false)
  %208 = getelementptr inbounds i16, i16* %206, i64 %16
  %209 = bitcast i16* %208 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %209, i8* align 2 %203, i64 16, i1 false)
  %210 = getelementptr inbounds i16, i16* %208, i64 %16
  %211 = bitcast i16* %210 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %211, i8* align 2 %203, i64 16, i1 false)
  %212 = getelementptr inbounds i16, i16* %210, i64 %16
  %213 = bitcast i16* %212 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %213, i8* align 2 %203, i64 16, i1 false)
  %214 = getelementptr inbounds i16, i16* %212, i64 %16
  %215 = bitcast i16* %214 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %215, i8* align 2 %203, i64 16, i1 false)
  %216 = getelementptr inbounds i16, i16* %214, i64 %16
  %217 = bitcast i16* %216 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %217, i8* align 2 %203, i64 16, i1 false)
  br label %627

218:                                              ; preds = %238, %103
  %219 = phi i64 [ 0, %103 ], [ %224, %238 ]
  %220 = phi i32 [ %190, %103 ], [ %240, %238 ]
  %221 = phi i16* [ %188, %103 ], [ %239, %238 ]
  %222 = sub nsw i32 %220, %41
  %223 = getelementptr inbounds [15 x i16], [15 x i16]* %45, i64 0, i64 %219
  %224 = add nuw nsw i64 %219, 1
  %225 = getelementptr inbounds [15 x i16], [15 x i16]* %45, i64 0, i64 %224
  %226 = add nuw nsw i64 %219, 2
  %227 = getelementptr inbounds [15 x i16], [15 x i16]* %45, i64 0, i64 %226
  %228 = add nuw nsw i64 %219, 3
  %229 = getelementptr inbounds [15 x i16], [15 x i16]* %45, i64 0, i64 %228
  %230 = add nuw nsw i64 %219, 4
  %231 = getelementptr inbounds [15 x i16], [15 x i16]* %45, i64 0, i64 %230
  %232 = add nuw nsw i64 %219, 5
  %233 = getelementptr inbounds [15 x i16], [15 x i16]* %45, i64 0, i64 %232
  %234 = add nuw nsw i64 %219, 6
  %235 = getelementptr inbounds [15 x i16], [15 x i16]* %45, i64 0, i64 %234
  %236 = add nuw nsw i64 %219, 7
  %237 = getelementptr inbounds [15 x i16], [15 x i16]* %45, i64 0, i64 %236
  br label %242

238:                                              ; preds = %242
  %239 = getelementptr inbounds i16, i16* %221, i64 %16
  %240 = add nsw i32 %220, %38
  %241 = icmp eq i64 %224, 8
  br i1 %241, label %627, label %218

242:                                              ; preds = %242, %218
  %243 = phi i64 [ 0, %218 ], [ %309, %242 ]
  %244 = phi i32 [ %222, %218 ], [ %308, %242 ]
  %245 = add nsw i32 %244, 512
  %246 = ashr i32 %245, 10
  %247 = add nsw i32 %246, 64
  %248 = sext i32 %247 to i64
  %249 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %248, i64 0
  %250 = load i16, i16* %249, align 16
  %251 = sext i16 %250 to i32
  %252 = load i16, i16* %223, align 2
  %253 = sext i16 %252 to i32
  %254 = mul nsw i32 %253, %251
  %255 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %248, i64 1
  %256 = load i16, i16* %255, align 2
  %257 = sext i16 %256 to i32
  %258 = load i16, i16* %225, align 2
  %259 = sext i16 %258 to i32
  %260 = mul nsw i32 %259, %257
  %261 = add nsw i32 %260, %254
  %262 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %248, i64 2
  %263 = load i16, i16* %262, align 4
  %264 = sext i16 %263 to i32
  %265 = load i16, i16* %227, align 2
  %266 = sext i16 %265 to i32
  %267 = mul nsw i32 %266, %264
  %268 = add nsw i32 %267, %261
  %269 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %248, i64 3
  %270 = load i16, i16* %269, align 2
  %271 = sext i16 %270 to i32
  %272 = load i16, i16* %229, align 2
  %273 = sext i16 %272 to i32
  %274 = mul nsw i32 %273, %271
  %275 = add nsw i32 %274, %268
  %276 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %248, i64 4
  %277 = load i16, i16* %276, align 8
  %278 = sext i16 %277 to i32
  %279 = load i16, i16* %231, align 2
  %280 = sext i16 %279 to i32
  %281 = mul nsw i32 %280, %278
  %282 = add nsw i32 %281, %275
  %283 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %248, i64 5
  %284 = load i16, i16* %283, align 2
  %285 = sext i16 %284 to i32
  %286 = load i16, i16* %233, align 2
  %287 = sext i16 %286 to i32
  %288 = mul nsw i32 %287, %285
  %289 = add nsw i32 %288, %282
  %290 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %248, i64 6
  %291 = load i16, i16* %290, align 4
  %292 = sext i16 %291 to i32
  %293 = load i16, i16* %235, align 2
  %294 = sext i16 %293 to i32
  %295 = mul nsw i32 %294, %292
  %296 = add nsw i32 %295, %289
  %297 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %248, i64 7
  %298 = load i16, i16* %297, align 2
  %299 = sext i16 %298 to i32
  %300 = load i16, i16* %237, align 2
  %301 = sext i16 %300 to i32
  %302 = mul nsw i32 %301, %299
  %303 = add nsw i32 %302, %296
  %304 = add nsw i32 %303, 64
  %305 = lshr i32 %304, 7
  %306 = trunc i32 %305 to i16
  %307 = getelementptr inbounds i16, i16* %221, i64 %243
  store i16 %306, i16* %307, align 2
  %308 = add nsw i32 %244, %40
  %309 = add nuw nsw i64 %243, 1
  %310 = icmp eq i64 %309, 8
  br i1 %310, label %238, label %242

311:                                              ; preds = %70
  %312 = add nsw i32 %92, -6
  %313 = icmp sge i32 %312, %3
  %314 = icmp slt i32 %90, -393216
  %315 = or i1 %314, %313
  br i1 %315, label %316, label %423

316:                                              ; preds = %311
  %317 = select i1 %314, i32 0, i32 %35
  %318 = sext i32 %317 to i64
  %319 = mul nsw i64 %318, %1
  %320 = getelementptr inbounds i8, i8* %0, i64 %319
  %321 = and i32 %89, 65535
  %322 = add nsw i32 %321, %32
  %323 = add nsw i32 %91, -3
  br label %324

324:                                              ; preds = %329, %316
  %325 = phi i64 [ -7, %316 ], [ %331, %329 ]
  %326 = phi i32 [ %322, %316 ], [ %330, %329 ]
  %327 = sub nsw i32 %326, %34
  %328 = add nsw i64 %325, 7
  br label %333

329:                                              ; preds = %333
  %330 = add nsw i32 %326, %31
  %331 = add nsw i64 %325, 1
  %332 = icmp eq i64 %331, 8
  br i1 %332, label %530, label %324

333:                                              ; preds = %333, %324
  %334 = phi i64 [ -4, %324 ], [ %420, %333 ]
  %335 = phi i32 [ -4, %324 ], [ %421, %333 ]
  %336 = phi i32 [ %327, %324 ], [ %419, %333 ]
  %337 = add nsw i32 %336, 512
  %338 = ashr i32 %337, 10
  %339 = add nsw i32 %338, 64
  %340 = add i32 %323, %335
  %341 = sext i32 %339 to i64
  %342 = sext i32 %340 to i64
  %343 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %341, i64 0
  %344 = load i16, i16* %343, align 16
  %345 = sext i16 %344 to i32
  %346 = getelementptr inbounds i8, i8* %320, i64 %342
  %347 = load i8, i8* %346, align 1
  %348 = zext i8 %347 to i32
  %349 = mul nsw i32 %348, %345
  %350 = add nsw i32 %349, 16384
  %351 = add nsw i64 %342, 1
  %352 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %341, i64 1
  %353 = load i16, i16* %352, align 2
  %354 = sext i16 %353 to i32
  %355 = getelementptr inbounds i8, i8* %320, i64 %351
  %356 = load i8, i8* %355, align 1
  %357 = zext i8 %356 to i32
  %358 = mul nsw i32 %357, %354
  %359 = add nsw i32 %358, %350
  %360 = add nsw i64 %342, 2
  %361 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %341, i64 2
  %362 = load i16, i16* %361, align 4
  %363 = sext i16 %362 to i32
  %364 = getelementptr inbounds i8, i8* %320, i64 %360
  %365 = load i8, i8* %364, align 1
  %366 = zext i8 %365 to i32
  %367 = mul nsw i32 %366, %363
  %368 = add nsw i32 %367, %359
  %369 = add nsw i64 %342, 3
  %370 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %341, i64 3
  %371 = load i16, i16* %370, align 2
  %372 = sext i16 %371 to i32
  %373 = getelementptr inbounds i8, i8* %320, i64 %369
  %374 = load i8, i8* %373, align 1
  %375 = zext i8 %374 to i32
  %376 = mul nsw i32 %375, %372
  %377 = add nsw i32 %376, %368
  %378 = add nsw i64 %342, 4
  %379 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %341, i64 4
  %380 = load i16, i16* %379, align 8
  %381 = sext i16 %380 to i32
  %382 = getelementptr inbounds i8, i8* %320, i64 %378
  %383 = load i8, i8* %382, align 1
  %384 = zext i8 %383 to i32
  %385 = mul nsw i32 %384, %381
  %386 = add nsw i32 %385, %377
  %387 = add nsw i64 %342, 5
  %388 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %341, i64 5
  %389 = load i16, i16* %388, align 2
  %390 = sext i16 %389 to i32
  %391 = getelementptr inbounds i8, i8* %320, i64 %387
  %392 = load i8, i8* %391, align 1
  %393 = zext i8 %392 to i32
  %394 = mul nsw i32 %393, %390
  %395 = add nsw i32 %394, %386
  %396 = add nsw i64 %342, 6
  %397 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %341, i64 6
  %398 = load i16, i16* %397, align 4
  %399 = sext i16 %398 to i32
  %400 = getelementptr inbounds i8, i8* %320, i64 %396
  %401 = load i8, i8* %400, align 1
  %402 = zext i8 %401 to i32
  %403 = mul nsw i32 %402, %399
  %404 = add nsw i32 %403, %395
  %405 = add nsw i64 %342, 7
  %406 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %341, i64 7
  %407 = load i16, i16* %406, align 2
  %408 = sext i16 %407 to i32
  %409 = getelementptr inbounds i8, i8* %320, i64 %405
  %410 = load i8, i8* %409, align 1
  %411 = zext i8 %410 to i32
  %412 = mul nsw i32 %411, %408
  %413 = add nsw i32 %412, %404
  %414 = add nsw i32 %413, 4
  %415 = lshr i32 %414, 3
  %416 = trunc i32 %415 to i16
  %417 = add nsw i64 %334, 4
  %418 = getelementptr inbounds %union.anon.21, %union.anon.21* %18, i64 0, i32 0, i64 %328, i64 %417
  store i16 %416, i16* %418, align 2
  %419 = add nsw i32 %336, %33
  %420 = add nsw i64 %334, 1
  %421 = add nsw i32 %335, 1
  %422 = icmp eq i64 %420, 4
  br i1 %422, label %329, label %333

423:                                              ; preds = %311
  %424 = and i32 %89, 65535
  %425 = add nsw i32 %424, %32
  %426 = add nsw i32 %91, -3
  %427 = sext i32 %92 to i64
  br label %428

428:                                              ; preds = %436, %423
  %429 = phi i64 [ -7, %423 ], [ %438, %436 ]
  %430 = phi i32 [ %425, %423 ], [ %437, %436 ]
  %431 = add nsw i64 %429, %427
  %432 = mul nsw i64 %431, %1
  %433 = getelementptr inbounds i8, i8* %0, i64 %432
  %434 = sub nsw i32 %430, %34
  %435 = add nsw i64 %429, 7
  br label %440

436:                                              ; preds = %440
  %437 = add nsw i32 %430, %31
  %438 = add nsw i64 %429, 1
  %439 = icmp eq i64 %438, 8
  br i1 %439, label %530, label %428

440:                                              ; preds = %440, %428
  %441 = phi i64 [ -4, %428 ], [ %527, %440 ]
  %442 = phi i32 [ -4, %428 ], [ %528, %440 ]
  %443 = phi i32 [ %434, %428 ], [ %526, %440 ]
  %444 = add nsw i32 %443, 512
  %445 = ashr i32 %444, 10
  %446 = add nsw i32 %445, 64
  %447 = add i32 %426, %442
  %448 = sext i32 %446 to i64
  %449 = sext i32 %447 to i64
  %450 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %448, i64 0
  %451 = load i16, i16* %450, align 16
  %452 = sext i16 %451 to i32
  %453 = getelementptr inbounds i8, i8* %433, i64 %449
  %454 = load i8, i8* %453, align 1
  %455 = zext i8 %454 to i32
  %456 = mul nsw i32 %455, %452
  %457 = add nsw i32 %456, 16384
  %458 = add nsw i64 %449, 1
  %459 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %448, i64 1
  %460 = load i16, i16* %459, align 2
  %461 = sext i16 %460 to i32
  %462 = getelementptr inbounds i8, i8* %433, i64 %458
  %463 = load i8, i8* %462, align 1
  %464 = zext i8 %463 to i32
  %465 = mul nsw i32 %464, %461
  %466 = add nsw i32 %465, %457
  %467 = add nsw i64 %449, 2
  %468 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %448, i64 2
  %469 = load i16, i16* %468, align 4
  %470 = sext i16 %469 to i32
  %471 = getelementptr inbounds i8, i8* %433, i64 %467
  %472 = load i8, i8* %471, align 1
  %473 = zext i8 %472 to i32
  %474 = mul nsw i32 %473, %470
  %475 = add nsw i32 %474, %466
  %476 = add nsw i64 %449, 3
  %477 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %448, i64 3
  %478 = load i16, i16* %477, align 2
  %479 = sext i16 %478 to i32
  %480 = getelementptr inbounds i8, i8* %433, i64 %476
  %481 = load i8, i8* %480, align 1
  %482 = zext i8 %481 to i32
  %483 = mul nsw i32 %482, %479
  %484 = add nsw i32 %483, %475
  %485 = add nsw i64 %449, 4
  %486 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %448, i64 4
  %487 = load i16, i16* %486, align 8
  %488 = sext i16 %487 to i32
  %489 = getelementptr inbounds i8, i8* %433, i64 %485
  %490 = load i8, i8* %489, align 1
  %491 = zext i8 %490 to i32
  %492 = mul nsw i32 %491, %488
  %493 = add nsw i32 %492, %484
  %494 = add nsw i64 %449, 5
  %495 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %448, i64 5
  %496 = load i16, i16* %495, align 2
  %497 = sext i16 %496 to i32
  %498 = getelementptr inbounds i8, i8* %433, i64 %494
  %499 = load i8, i8* %498, align 1
  %500 = zext i8 %499 to i32
  %501 = mul nsw i32 %500, %497
  %502 = add nsw i32 %501, %493
  %503 = add nsw i64 %449, 6
  %504 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %448, i64 6
  %505 = load i16, i16* %504, align 4
  %506 = sext i16 %505 to i32
  %507 = getelementptr inbounds i8, i8* %433, i64 %503
  %508 = load i8, i8* %507, align 1
  %509 = zext i8 %508 to i32
  %510 = mul nsw i32 %509, %506
  %511 = add nsw i32 %510, %502
  %512 = add nsw i64 %449, 7
  %513 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %448, i64 7
  %514 = load i16, i16* %513, align 2
  %515 = sext i16 %514 to i32
  %516 = getelementptr inbounds i8, i8* %433, i64 %512
  %517 = load i8, i8* %516, align 1
  %518 = zext i8 %517 to i32
  %519 = mul nsw i32 %518, %515
  %520 = add nsw i32 %519, %511
  %521 = add nsw i32 %520, 4
  %522 = lshr i32 %521, 3
  %523 = trunc i32 %522 to i16
  %524 = add nsw i64 %441, 4
  %525 = getelementptr inbounds %union.anon.21, %union.anon.21* %18, i64 0, i32 0, i64 %435, i64 %524
  store i16 %523, i16* %525, align 2
  %526 = add nsw i32 %443, %33
  %527 = add nsw i64 %441, 1
  %528 = add nsw i32 %442, 1
  %529 = icmp eq i64 %527, 4
  br i1 %529, label %436, label %440

530:                                              ; preds = %436, %329
  %531 = getelementptr inbounds i16, i16* %62, i64 %71
  %532 = and i32 %90, 65535
  %533 = sub nsw i32 %532, %39
  br label %534

534:                                              ; preds = %546, %530
  %535 = phi i64 [ 0, %530 ], [ %539, %546 ]
  %536 = phi i32 [ %533, %530 ], [ %548, %546 ]
  %537 = phi i16* [ %531, %530 ], [ %547, %546 ]
  %538 = sub nsw i32 %536, %41
  %539 = add nuw nsw i64 %535, 1
  %540 = add nuw nsw i64 %535, 2
  %541 = add nuw nsw i64 %535, 3
  %542 = add nuw nsw i64 %535, 4
  %543 = add nuw nsw i64 %535, 5
  %544 = add nuw nsw i64 %535, 6
  %545 = add nuw nsw i64 %535, 7
  br label %550

546:                                              ; preds = %550
  %547 = getelementptr inbounds i16, i16* %537, i64 %16
  %548 = add nsw i32 %536, %38
  %549 = icmp eq i64 %539, 8
  br i1 %549, label %627, label %534

550:                                              ; preds = %550, %534
  %551 = phi i64 [ 0, %534 ], [ %625, %550 ]
  %552 = phi i32 [ %538, %534 ], [ %624, %550 ]
  %553 = add nsw i32 %552, 512
  %554 = ashr i32 %553, 10
  %555 = add nsw i32 %554, 64
  %556 = sext i32 %555 to i64
  %557 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %556, i64 0
  %558 = load i16, i16* %557, align 16
  %559 = sext i16 %558 to i32
  %560 = getelementptr inbounds %union.anon.21, %union.anon.21* %18, i64 0, i32 0, i64 %535, i64 %551
  %561 = load i16, i16* %560, align 2
  %562 = sext i16 %561 to i32
  %563 = mul nsw i32 %562, %559
  %564 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %556, i64 1
  %565 = load i16, i16* %564, align 2
  %566 = sext i16 %565 to i32
  %567 = getelementptr inbounds %union.anon.21, %union.anon.21* %18, i64 0, i32 0, i64 %539, i64 %551
  %568 = load i16, i16* %567, align 2
  %569 = sext i16 %568 to i32
  %570 = mul nsw i32 %569, %566
  %571 = add nsw i32 %570, %563
  %572 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %556, i64 2
  %573 = load i16, i16* %572, align 4
  %574 = sext i16 %573 to i32
  %575 = getelementptr inbounds %union.anon.21, %union.anon.21* %18, i64 0, i32 0, i64 %540, i64 %551
  %576 = load i16, i16* %575, align 2
  %577 = sext i16 %576 to i32
  %578 = mul nsw i32 %577, %574
  %579 = add nsw i32 %578, %571
  %580 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %556, i64 3
  %581 = load i16, i16* %580, align 2
  %582 = sext i16 %581 to i32
  %583 = getelementptr inbounds %union.anon.21, %union.anon.21* %18, i64 0, i32 0, i64 %541, i64 %551
  %584 = load i16, i16* %583, align 2
  %585 = sext i16 %584 to i32
  %586 = mul nsw i32 %585, %582
  %587 = add nsw i32 %586, %579
  %588 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %556, i64 4
  %589 = load i16, i16* %588, align 8
  %590 = sext i16 %589 to i32
  %591 = getelementptr inbounds %union.anon.21, %union.anon.21* %18, i64 0, i32 0, i64 %542, i64 %551
  %592 = load i16, i16* %591, align 2
  %593 = sext i16 %592 to i32
  %594 = mul nsw i32 %593, %590
  %595 = add nsw i32 %594, %587
  %596 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %556, i64 5
  %597 = load i16, i16* %596, align 2
  %598 = sext i16 %597 to i32
  %599 = getelementptr inbounds %union.anon.21, %union.anon.21* %18, i64 0, i32 0, i64 %543, i64 %551
  %600 = load i16, i16* %599, align 2
  %601 = sext i16 %600 to i32
  %602 = mul nsw i32 %601, %598
  %603 = add nsw i32 %602, %595
  %604 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %556, i64 6
  %605 = load i16, i16* %604, align 4
  %606 = sext i16 %605 to i32
  %607 = getelementptr inbounds %union.anon.21, %union.anon.21* %18, i64 0, i32 0, i64 %544, i64 %551
  %608 = load i16, i16* %607, align 2
  %609 = sext i16 %608 to i32
  %610 = mul nsw i32 %609, %606
  %611 = add nsw i32 %610, %603
  %612 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %556, i64 7
  %613 = load i16, i16* %612, align 2
  %614 = sext i16 %613 to i32
  %615 = getelementptr inbounds %union.anon.21, %union.anon.21* %18, i64 0, i32 0, i64 %545, i64 %551
  %616 = load i16, i16* %615, align 2
  %617 = sext i16 %616 to i32
  %618 = mul nsw i32 %617, %614
  %619 = add nsw i32 %618, %611
  %620 = add i32 %619, 8126528
  %621 = lshr i32 %620, 7
  %622 = trunc i32 %621 to i16
  %623 = getelementptr inbounds i16, i16* %537, i64 %551
  store i16 %622, i16* %623, align 2
  %624 = add nsw i32 %552, %40
  %625 = add nuw nsw i64 %551, 1
  %626 = icmp eq i64 %625, 8
  br i1 %626, label %546, label %550

627:                                              ; preds = %546, %238, %191
  %628 = add nsw i64 %71, 8
  %629 = icmp slt i64 %628, %47
  br i1 %629, label %70, label %66
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_16Warp_CILb0ELi10EtEEvPKvliiPKiiiiiiissssPvl(i8* nocapture readonly, i64, i32, i32, i32* nocapture readonly, i32, i32, i32, i32, i32, i32, i16 signext, i16 signext, i16 signext, i16 signext, i8* nocapture, i64) #0 {
  %18 = alloca %union.anon.22, align 16
  %19 = bitcast %union.anon.22* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %19) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %19, i8 -86, i64 240, i1 false)
  %20 = bitcast i8* %0 to i16*
  %21 = lshr i64 %1, 1
  %22 = lshr i64 %16, 1
  %23 = add nsw i32 %10, %8
  %24 = icmp sgt i32 %10, 0
  br i1 %24, label %25, label %69

25:                                               ; preds = %17
  %26 = bitcast i8* %15 to i16*
  %27 = add nsw i32 %9, %7
  %28 = icmp sgt i32 %9, 0
  %29 = getelementptr inbounds i32, i32* %4, i64 2
  %30 = getelementptr inbounds i32, i32* %4, i64 3
  %31 = getelementptr inbounds i32, i32* %4, i64 4
  %32 = getelementptr inbounds i32, i32* %4, i64 5
  %33 = getelementptr inbounds i32, i32* %4, i64 1
  %34 = sext i16 %12 to i32
  %35 = mul nsw i32 %34, -7
  %36 = sext i16 %11 to i32
  %37 = shl nsw i32 %36, 2
  %38 = add nsw i32 %3, -1
  %39 = sext i32 %7 to i64
  %40 = sub nsw i64 0, %39
  %41 = sext i16 %14 to i32
  %42 = shl nsw i32 %41, 2
  %43 = sext i16 %13 to i32
  %44 = shl nsw i32 %43, 2
  %45 = sext i32 %2 to i64
  %46 = getelementptr inbounds i8, i8* %0, i64 -2
  %47 = bitcast i8* %46 to i16*
  %48 = getelementptr inbounds i16, i16* %47, i64 %45
  %49 = bitcast %union.anon.22* %18 to [15 x i16]*
  %50 = shl nsw i64 %22, 3
  %51 = sext i32 %27 to i64
  %52 = getelementptr inbounds %union.anon.22, %union.anon.22* %18, i64 0, i32 0, i64 1, i64 0
  %53 = getelementptr inbounds %union.anon.22, %union.anon.22* %18, i64 0, i32 0, i64 1, i64 1
  %54 = getelementptr inbounds %union.anon.22, %union.anon.22* %18, i64 0, i32 0, i64 1, i64 2
  %55 = getelementptr inbounds %union.anon.22, %union.anon.22* %18, i64 0, i32 0, i64 1, i64 3
  %56 = getelementptr inbounds %union.anon.22, %union.anon.22* %18, i64 0, i32 0, i64 1, i64 4
  %57 = getelementptr inbounds %union.anon.22, %union.anon.22* %18, i64 0, i32 0, i64 1, i64 5
  %58 = getelementptr inbounds %union.anon.22, %union.anon.22* %18, i64 0, i32 0, i64 1, i64 6
  %59 = bitcast %union.anon.22* %18 to <8 x i16>*
  br label %60

60:                                               ; preds = %25, %70
  %61 = phi i16* [ %26, %25 ], [ %71, %70 ]
  %62 = phi i32 [ %8, %25 ], [ %72, %70 ]
  br i1 %28, label %63, label %70

63:                                               ; preds = %60
  %64 = add nsw i32 %62, 4
  %65 = shl i32 %64, %6
  %66 = getelementptr inbounds i16, i16* %61, i64 %40
  %67 = getelementptr inbounds i16, i16* %61, i64 %40
  %68 = getelementptr inbounds i16, i16* %61, i64 %40
  br label %74

69:                                               ; preds = %70, %17
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %19) #3
  ret void

70:                                               ; preds = %574, %60
  %71 = getelementptr inbounds i16, i16* %61, i64 %50
  %72 = add nsw i32 %62, 8
  %73 = icmp slt i32 %72, %23
  br i1 %73, label %60, label %69

74:                                               ; preds = %63, %574
  %75 = phi i64 [ %39, %63 ], [ %575, %574 ]
  %76 = trunc i64 %75 to i32
  %77 = add i32 %76, 4
  %78 = shl i32 %77, %5
  %79 = load i32, i32* %29, align 4
  %80 = mul nsw i32 %79, %78
  %81 = load i32, i32* %30, align 4
  %82 = mul nsw i32 %81, %65
  %83 = add nsw i32 %82, %80
  %84 = load i32, i32* %4, align 4
  %85 = add nsw i32 %83, %84
  %86 = load i32, i32* %31, align 4
  %87 = mul nsw i32 %86, %78
  %88 = load i32, i32* %32, align 4
  %89 = mul nsw i32 %88, %65
  %90 = add nsw i32 %89, %87
  %91 = load i32, i32* %33, align 4
  %92 = add nsw i32 %90, %91
  %93 = ashr i32 %85, %5
  %94 = ashr i32 %92, %6
  %95 = ashr i32 %93, 16
  %96 = ashr i32 %94, 16
  %97 = add nsw i32 %95, -6
  %98 = icmp sge i32 %97, %2
  %99 = icmp slt i32 %93, -393216
  %100 = or i1 %99, %98
  br i1 %100, label %101, label %256

101:                                              ; preds = %74
  %102 = select i1 %99, i16* %20, i16* %48
  %103 = add nsw i32 %96, -6
  %104 = icmp sge i32 %103, %3
  %105 = icmp slt i32 %94, -393216
  %106 = or i1 %105, %104
  br i1 %106, label %187, label %107

107:                                              ; preds = %101
  %108 = sext i32 %96 to i64
  %109 = add nsw i64 %108, -7
  %110 = mul nsw i64 %21, %109
  %111 = getelementptr inbounds i16, i16* %102, i64 %110
  %112 = load i16, i16* %111, align 2
  %113 = add nsw i64 %108, -6
  %114 = mul nsw i64 %21, %113
  %115 = getelementptr inbounds i16, i16* %102, i64 %114
  %116 = load i16, i16* %115, align 2
  %117 = add nsw i64 %108, -5
  %118 = mul nsw i64 %21, %117
  %119 = getelementptr inbounds i16, i16* %102, i64 %118
  %120 = load i16, i16* %119, align 2
  %121 = add nsw i64 %108, -4
  %122 = mul nsw i64 %21, %121
  %123 = getelementptr inbounds i16, i16* %102, i64 %122
  %124 = load i16, i16* %123, align 2
  %125 = add nsw i64 %108, -3
  %126 = mul nsw i64 %21, %125
  %127 = getelementptr inbounds i16, i16* %102, i64 %126
  %128 = load i16, i16* %127, align 2
  %129 = add nsw i64 %108, -2
  %130 = mul nsw i64 %21, %129
  %131 = getelementptr inbounds i16, i16* %102, i64 %130
  %132 = load i16, i16* %131, align 2
  %133 = add nsw i64 %108, -1
  %134 = mul nsw i64 %21, %133
  %135 = getelementptr inbounds i16, i16* %102, i64 %134
  %136 = load i16, i16* %135, align 2
  %137 = mul nsw i64 %21, %108
  %138 = getelementptr inbounds i16, i16* %102, i64 %137
  %139 = load i16, i16* %138, align 2
  %140 = insertelement <8 x i16> undef, i16 %112, i32 0
  %141 = insertelement <8 x i16> %140, i16 %116, i32 1
  %142 = insertelement <8 x i16> %141, i16 %120, i32 2
  %143 = insertelement <8 x i16> %142, i16 %124, i32 3
  %144 = insertelement <8 x i16> %143, i16 %128, i32 4
  %145 = insertelement <8 x i16> %144, i16 %132, i32 5
  %146 = insertelement <8 x i16> %145, i16 %136, i32 6
  %147 = insertelement <8 x i16> %146, i16 %139, i32 7
  %148 = shl <8 x i16> %147, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  store <8 x i16> %148, <8 x i16>* %59, align 16
  %149 = add nsw i64 %108, 1
  %150 = mul nsw i64 %21, %149
  %151 = getelementptr inbounds i16, i16* %102, i64 %150
  %152 = load i16, i16* %151, align 2
  %153 = shl i16 %152, 4
  store i16 %153, i16* %52, align 16
  %154 = add nsw i64 %108, 2
  %155 = mul nsw i64 %21, %154
  %156 = getelementptr inbounds i16, i16* %102, i64 %155
  %157 = load i16, i16* %156, align 2
  %158 = shl i16 %157, 4
  store i16 %158, i16* %53, align 2
  %159 = add nsw i64 %108, 3
  %160 = mul nsw i64 %21, %159
  %161 = getelementptr inbounds i16, i16* %102, i64 %160
  %162 = load i16, i16* %161, align 2
  %163 = shl i16 %162, 4
  store i16 %163, i16* %54, align 4
  %164 = add nsw i64 %108, 4
  %165 = mul nsw i64 %21, %164
  %166 = getelementptr inbounds i16, i16* %102, i64 %165
  %167 = load i16, i16* %166, align 2
  %168 = shl i16 %167, 4
  store i16 %168, i16* %55, align 2
  %169 = add nsw i64 %108, 5
  %170 = mul nsw i64 %21, %169
  %171 = getelementptr inbounds i16, i16* %102, i64 %170
  %172 = load i16, i16* %171, align 2
  %173 = shl i16 %172, 4
  store i16 %173, i16* %56, align 8
  %174 = add nsw i64 %108, 6
  %175 = mul nsw i64 %21, %174
  %176 = getelementptr inbounds i16, i16* %102, i64 %175
  %177 = load i16, i16* %176, align 2
  %178 = shl i16 %177, 4
  store i16 %178, i16* %57, align 2
  %179 = add nsw i64 %108, 7
  %180 = mul nsw i64 %21, %179
  %181 = getelementptr inbounds i16, i16* %102, i64 %180
  %182 = load i16, i16* %181, align 2
  %183 = shl i16 %182, 4
  store i16 %183, i16* %58, align 4
  %184 = getelementptr inbounds i16, i16* %67, i64 %75
  %185 = and i32 %94, 65535
  %186 = sub nsw i32 %185, %42
  br label %212

187:                                              ; preds = %101
  %188 = select i1 %105, i32 0, i32 %38
  %189 = sext i32 %188 to i64
  %190 = mul nsw i64 %21, %189
  %191 = getelementptr inbounds i16, i16* %102, i64 %190
  %192 = load i16, i16* %191, align 2
  %193 = getelementptr inbounds i16, i16* %68, i64 %75
  %194 = insertelement <8 x i16> undef, i16 %192, i32 0
  %195 = shufflevector <8 x i16> %194, <8 x i16> undef, <8 x i32> zeroinitializer
  %196 = bitcast i16* %193 to <8 x i16>*
  store <8 x i16> %195, <8 x i16>* %196, align 2
  %197 = bitcast i16* %193 to i8*
  %198 = getelementptr inbounds i16, i16* %193, i64 %22
  %199 = bitcast i16* %198 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %199, i8* align 2 %197, i64 16, i1 false)
  %200 = getelementptr inbounds i16, i16* %198, i64 %22
  %201 = bitcast i16* %200 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %201, i8* align 2 %197, i64 16, i1 false)
  %202 = getelementptr inbounds i16, i16* %200, i64 %22
  %203 = bitcast i16* %202 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %203, i8* align 2 %197, i64 16, i1 false)
  %204 = getelementptr inbounds i16, i16* %202, i64 %22
  %205 = bitcast i16* %204 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %205, i8* align 2 %197, i64 16, i1 false)
  %206 = getelementptr inbounds i16, i16* %204, i64 %22
  %207 = bitcast i16* %206 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %207, i8* align 2 %197, i64 16, i1 false)
  %208 = getelementptr inbounds i16, i16* %206, i64 %22
  %209 = bitcast i16* %208 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %209, i8* align 2 %197, i64 16, i1 false)
  %210 = getelementptr inbounds i16, i16* %208, i64 %22
  %211 = bitcast i16* %210 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %211, i8* align 2 %197, i64 16, i1 false)
  br label %574

212:                                              ; preds = %220, %107
  %213 = phi i64 [ 0, %107 ], [ %218, %220 ]
  %214 = phi i32 [ %186, %107 ], [ %222, %220 ]
  %215 = phi i16* [ %184, %107 ], [ %221, %220 ]
  %216 = sub nsw i32 %214, %44
  %217 = getelementptr inbounds [15 x i16], [15 x i16]* %49, i64 0, i64 %213
  %218 = add nuw nsw i64 %213, 1
  %219 = bitcast i16* %217 to <8 x i16>*
  br label %224

220:                                              ; preds = %224
  %221 = getelementptr inbounds i16, i16* %215, i64 %22
  %222 = add nsw i32 %214, %41
  %223 = icmp eq i64 %218, 8
  br i1 %223, label %574, label %212

224:                                              ; preds = %224, %212
  %225 = phi i64 [ 0, %212 ], [ %254, %224 ]
  %226 = phi i32 [ %216, %212 ], [ %253, %224 ]
  %227 = add nsw i32 %226, 512
  %228 = ashr i32 %227, 10
  %229 = add nsw i32 %228, 64
  %230 = sext i32 %229 to i64
  %231 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %230, i64 0
  %232 = bitcast i16* %231 to <8 x i16>*
  %233 = load <8 x i16>, <8 x i16>* %232, align 16
  %234 = sext <8 x i16> %233 to <8 x i32>
  %235 = load <8 x i16>, <8 x i16>* %219, align 2
  %236 = sext <8 x i16> %235 to <8 x i32>
  %237 = mul nsw <8 x i32> %236, %234
  %238 = shufflevector <8 x i32> %237, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %239 = add nsw <8 x i32> %237, %238
  %240 = shufflevector <8 x i32> %239, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %241 = add nsw <8 x i32> %239, %240
  %242 = shufflevector <8 x i32> %241, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %243 = add nsw <8 x i32> %241, %242
  %244 = extractelement <8 x i32> %243, i32 0
  %245 = add nsw i32 %244, 1024
  %246 = ashr i32 %245, 11
  %247 = icmp slt i32 %246, 1023
  %248 = select i1 %247, i32 %246, i32 1023
  %249 = icmp sgt i32 %248, 0
  %250 = select i1 %249, i32 %248, i32 0
  %251 = trunc i32 %250 to i16
  %252 = getelementptr inbounds i16, i16* %215, i64 %225
  store i16 %251, i16* %252, align 2
  %253 = add nsw i32 %226, %43
  %254 = add nuw nsw i64 %225, 1
  %255 = icmp eq i64 %254, 8
  br i1 %255, label %220, label %224

256:                                              ; preds = %74
  %257 = add nsw i32 %96, -6
  %258 = icmp sge i32 %257, %3
  %259 = icmp slt i32 %94, -393216
  %260 = or i1 %259, %258
  br i1 %260, label %261, label %367

261:                                              ; preds = %256
  %262 = select i1 %259, i32 0, i32 %38
  %263 = sext i32 %262 to i64
  %264 = mul nsw i64 %21, %263
  %265 = getelementptr inbounds i16, i16* %20, i64 %264
  %266 = and i32 %93, 65535
  %267 = add nsw i32 %266, %35
  %268 = add nsw i32 %95, -3
  br label %269

269:                                              ; preds = %274, %261
  %270 = phi i64 [ -7, %261 ], [ %276, %274 ]
  %271 = phi i32 [ %267, %261 ], [ %275, %274 ]
  %272 = sub nsw i32 %271, %37
  %273 = add nsw i64 %270, 7
  br label %278

274:                                              ; preds = %278
  %275 = add nsw i32 %271, %34
  %276 = add nsw i64 %270, 1
  %277 = icmp eq i64 %276, 8
  br i1 %277, label %473, label %269

278:                                              ; preds = %278, %269
  %279 = phi i64 [ -4, %269 ], [ %364, %278 ]
  %280 = phi i32 [ -4, %269 ], [ %365, %278 ]
  %281 = phi i32 [ %272, %269 ], [ %363, %278 ]
  %282 = add nsw i32 %281, 512
  %283 = ashr i32 %282, 10
  %284 = add nsw i32 %283, 64
  %285 = add i32 %268, %280
  %286 = sext i32 %284 to i64
  %287 = sext i32 %285 to i64
  %288 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %286, i64 0
  %289 = load i16, i16* %288, align 16
  %290 = sext i16 %289 to i32
  %291 = getelementptr inbounds i16, i16* %265, i64 %287
  %292 = load i16, i16* %291, align 2
  %293 = zext i16 %292 to i32
  %294 = mul nsw i32 %293, %290
  %295 = add nsw i64 %287, 1
  %296 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %286, i64 1
  %297 = load i16, i16* %296, align 2
  %298 = sext i16 %297 to i32
  %299 = getelementptr inbounds i16, i16* %265, i64 %295
  %300 = load i16, i16* %299, align 2
  %301 = zext i16 %300 to i32
  %302 = mul nsw i32 %301, %298
  %303 = add nsw i32 %302, %294
  %304 = add nsw i64 %287, 2
  %305 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %286, i64 2
  %306 = load i16, i16* %305, align 4
  %307 = sext i16 %306 to i32
  %308 = getelementptr inbounds i16, i16* %265, i64 %304
  %309 = load i16, i16* %308, align 2
  %310 = zext i16 %309 to i32
  %311 = mul nsw i32 %310, %307
  %312 = add nsw i32 %311, %303
  %313 = add nsw i64 %287, 3
  %314 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %286, i64 3
  %315 = load i16, i16* %314, align 2
  %316 = sext i16 %315 to i32
  %317 = getelementptr inbounds i16, i16* %265, i64 %313
  %318 = load i16, i16* %317, align 2
  %319 = zext i16 %318 to i32
  %320 = mul nsw i32 %319, %316
  %321 = add nsw i32 %320, %312
  %322 = add nsw i64 %287, 4
  %323 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %286, i64 4
  %324 = load i16, i16* %323, align 8
  %325 = sext i16 %324 to i32
  %326 = getelementptr inbounds i16, i16* %265, i64 %322
  %327 = load i16, i16* %326, align 2
  %328 = zext i16 %327 to i32
  %329 = mul nsw i32 %328, %325
  %330 = add nsw i32 %329, %321
  %331 = add nsw i64 %287, 5
  %332 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %286, i64 5
  %333 = load i16, i16* %332, align 2
  %334 = sext i16 %333 to i32
  %335 = getelementptr inbounds i16, i16* %265, i64 %331
  %336 = load i16, i16* %335, align 2
  %337 = zext i16 %336 to i32
  %338 = mul nsw i32 %337, %334
  %339 = add nsw i32 %338, %330
  %340 = add nsw i64 %287, 6
  %341 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %286, i64 6
  %342 = load i16, i16* %341, align 4
  %343 = sext i16 %342 to i32
  %344 = getelementptr inbounds i16, i16* %265, i64 %340
  %345 = load i16, i16* %344, align 2
  %346 = zext i16 %345 to i32
  %347 = mul nsw i32 %346, %343
  %348 = add nsw i32 %347, %339
  %349 = add nsw i64 %287, 7
  %350 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %286, i64 7
  %351 = load i16, i16* %350, align 2
  %352 = sext i16 %351 to i32
  %353 = getelementptr inbounds i16, i16* %265, i64 %349
  %354 = load i16, i16* %353, align 2
  %355 = zext i16 %354 to i32
  %356 = mul nsw i32 %355, %352
  %357 = add nsw i32 %356, %348
  %358 = add nsw i32 %357, 4
  %359 = lshr i32 %358, 3
  %360 = trunc i32 %359 to i16
  %361 = add nsw i64 %279, 4
  %362 = getelementptr inbounds %union.anon.22, %union.anon.22* %18, i64 0, i32 0, i64 %273, i64 %361
  store i16 %360, i16* %362, align 2
  %363 = add nsw i32 %281, %36
  %364 = add nsw i64 %279, 1
  %365 = add nsw i32 %280, 1
  %366 = icmp eq i64 %364, 4
  br i1 %366, label %274, label %278

367:                                              ; preds = %256
  %368 = and i32 %93, 65535
  %369 = add nsw i32 %368, %35
  %370 = add nsw i32 %95, -3
  %371 = sext i32 %96 to i64
  br label %372

372:                                              ; preds = %380, %367
  %373 = phi i64 [ -7, %367 ], [ %382, %380 ]
  %374 = phi i32 [ %369, %367 ], [ %381, %380 ]
  %375 = add nsw i64 %373, %371
  %376 = mul nsw i64 %21, %375
  %377 = getelementptr inbounds i16, i16* %20, i64 %376
  %378 = sub nsw i32 %374, %37
  %379 = add nsw i64 %373, 7
  br label %384

380:                                              ; preds = %384
  %381 = add nsw i32 %374, %34
  %382 = add nsw i64 %373, 1
  %383 = icmp eq i64 %382, 8
  br i1 %383, label %473, label %372

384:                                              ; preds = %384, %372
  %385 = phi i64 [ -4, %372 ], [ %470, %384 ]
  %386 = phi i32 [ -4, %372 ], [ %471, %384 ]
  %387 = phi i32 [ %378, %372 ], [ %469, %384 ]
  %388 = add nsw i32 %387, 512
  %389 = ashr i32 %388, 10
  %390 = add nsw i32 %389, 64
  %391 = add i32 %370, %386
  %392 = sext i32 %390 to i64
  %393 = sext i32 %391 to i64
  %394 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %392, i64 0
  %395 = load i16, i16* %394, align 16
  %396 = sext i16 %395 to i32
  %397 = getelementptr inbounds i16, i16* %377, i64 %393
  %398 = load i16, i16* %397, align 2
  %399 = zext i16 %398 to i32
  %400 = mul nsw i32 %399, %396
  %401 = add nsw i64 %393, 1
  %402 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %392, i64 1
  %403 = load i16, i16* %402, align 2
  %404 = sext i16 %403 to i32
  %405 = getelementptr inbounds i16, i16* %377, i64 %401
  %406 = load i16, i16* %405, align 2
  %407 = zext i16 %406 to i32
  %408 = mul nsw i32 %407, %404
  %409 = add nsw i32 %408, %400
  %410 = add nsw i64 %393, 2
  %411 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %392, i64 2
  %412 = load i16, i16* %411, align 4
  %413 = sext i16 %412 to i32
  %414 = getelementptr inbounds i16, i16* %377, i64 %410
  %415 = load i16, i16* %414, align 2
  %416 = zext i16 %415 to i32
  %417 = mul nsw i32 %416, %413
  %418 = add nsw i32 %417, %409
  %419 = add nsw i64 %393, 3
  %420 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %392, i64 3
  %421 = load i16, i16* %420, align 2
  %422 = sext i16 %421 to i32
  %423 = getelementptr inbounds i16, i16* %377, i64 %419
  %424 = load i16, i16* %423, align 2
  %425 = zext i16 %424 to i32
  %426 = mul nsw i32 %425, %422
  %427 = add nsw i32 %426, %418
  %428 = add nsw i64 %393, 4
  %429 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %392, i64 4
  %430 = load i16, i16* %429, align 8
  %431 = sext i16 %430 to i32
  %432 = getelementptr inbounds i16, i16* %377, i64 %428
  %433 = load i16, i16* %432, align 2
  %434 = zext i16 %433 to i32
  %435 = mul nsw i32 %434, %431
  %436 = add nsw i32 %435, %427
  %437 = add nsw i64 %393, 5
  %438 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %392, i64 5
  %439 = load i16, i16* %438, align 2
  %440 = sext i16 %439 to i32
  %441 = getelementptr inbounds i16, i16* %377, i64 %437
  %442 = load i16, i16* %441, align 2
  %443 = zext i16 %442 to i32
  %444 = mul nsw i32 %443, %440
  %445 = add nsw i32 %444, %436
  %446 = add nsw i64 %393, 6
  %447 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %392, i64 6
  %448 = load i16, i16* %447, align 4
  %449 = sext i16 %448 to i32
  %450 = getelementptr inbounds i16, i16* %377, i64 %446
  %451 = load i16, i16* %450, align 2
  %452 = zext i16 %451 to i32
  %453 = mul nsw i32 %452, %449
  %454 = add nsw i32 %453, %445
  %455 = add nsw i64 %393, 7
  %456 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %392, i64 7
  %457 = load i16, i16* %456, align 2
  %458 = sext i16 %457 to i32
  %459 = getelementptr inbounds i16, i16* %377, i64 %455
  %460 = load i16, i16* %459, align 2
  %461 = zext i16 %460 to i32
  %462 = mul nsw i32 %461, %458
  %463 = add nsw i32 %462, %454
  %464 = add nsw i32 %463, 4
  %465 = lshr i32 %464, 3
  %466 = trunc i32 %465 to i16
  %467 = add nsw i64 %385, 4
  %468 = getelementptr inbounds %union.anon.22, %union.anon.22* %18, i64 0, i32 0, i64 %379, i64 %467
  store i16 %466, i16* %468, align 2
  %469 = add nsw i32 %387, %36
  %470 = add nsw i64 %385, 1
  %471 = add nsw i32 %386, 1
  %472 = icmp eq i64 %470, 4
  br i1 %472, label %380, label %384

473:                                              ; preds = %380, %274
  %474 = getelementptr inbounds i16, i16* %66, i64 %75
  %475 = and i32 %94, 65535
  %476 = sub nsw i32 %475, %42
  br label %477

477:                                              ; preds = %489, %473
  %478 = phi i64 [ 0, %473 ], [ %482, %489 ]
  %479 = phi i32 [ %476, %473 ], [ %491, %489 ]
  %480 = phi i16* [ %474, %473 ], [ %490, %489 ]
  %481 = sub nsw i32 %479, %44
  %482 = add nuw nsw i64 %478, 1
  %483 = add nuw nsw i64 %478, 2
  %484 = add nuw nsw i64 %478, 3
  %485 = add nuw nsw i64 %478, 4
  %486 = add nuw nsw i64 %478, 5
  %487 = add nuw nsw i64 %478, 6
  %488 = add nuw nsw i64 %478, 7
  br label %493

489:                                              ; preds = %493
  %490 = getelementptr inbounds i16, i16* %480, i64 %22
  %491 = add nsw i32 %479, %41
  %492 = icmp eq i64 %482, 8
  br i1 %492, label %574, label %477

493:                                              ; preds = %493, %477
  %494 = phi i64 [ 0, %477 ], [ %572, %493 ]
  %495 = phi i32 [ %481, %477 ], [ %571, %493 ]
  %496 = add nsw i32 %495, 512
  %497 = ashr i32 %496, 10
  %498 = add nsw i32 %497, 64
  %499 = sext i32 %498 to i64
  %500 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %499, i64 0
  %501 = load i16, i16* %500, align 16
  %502 = sext i16 %501 to i32
  %503 = getelementptr inbounds %union.anon.22, %union.anon.22* %18, i64 0, i32 0, i64 %478, i64 %494
  %504 = load i16, i16* %503, align 2
  %505 = sext i16 %504 to i32
  %506 = mul nsw i32 %505, %502
  %507 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %499, i64 1
  %508 = load i16, i16* %507, align 2
  %509 = sext i16 %508 to i32
  %510 = getelementptr inbounds %union.anon.22, %union.anon.22* %18, i64 0, i32 0, i64 %482, i64 %494
  %511 = load i16, i16* %510, align 2
  %512 = sext i16 %511 to i32
  %513 = mul nsw i32 %512, %509
  %514 = add nsw i32 %513, %506
  %515 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %499, i64 2
  %516 = load i16, i16* %515, align 4
  %517 = sext i16 %516 to i32
  %518 = getelementptr inbounds %union.anon.22, %union.anon.22* %18, i64 0, i32 0, i64 %483, i64 %494
  %519 = load i16, i16* %518, align 2
  %520 = sext i16 %519 to i32
  %521 = mul nsw i32 %520, %517
  %522 = add nsw i32 %521, %514
  %523 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %499, i64 3
  %524 = load i16, i16* %523, align 2
  %525 = sext i16 %524 to i32
  %526 = getelementptr inbounds %union.anon.22, %union.anon.22* %18, i64 0, i32 0, i64 %484, i64 %494
  %527 = load i16, i16* %526, align 2
  %528 = sext i16 %527 to i32
  %529 = mul nsw i32 %528, %525
  %530 = add nsw i32 %529, %522
  %531 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %499, i64 4
  %532 = load i16, i16* %531, align 8
  %533 = sext i16 %532 to i32
  %534 = getelementptr inbounds %union.anon.22, %union.anon.22* %18, i64 0, i32 0, i64 %485, i64 %494
  %535 = load i16, i16* %534, align 2
  %536 = sext i16 %535 to i32
  %537 = mul nsw i32 %536, %533
  %538 = add nsw i32 %537, %530
  %539 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %499, i64 5
  %540 = load i16, i16* %539, align 2
  %541 = sext i16 %540 to i32
  %542 = getelementptr inbounds %union.anon.22, %union.anon.22* %18, i64 0, i32 0, i64 %486, i64 %494
  %543 = load i16, i16* %542, align 2
  %544 = sext i16 %543 to i32
  %545 = mul nsw i32 %544, %541
  %546 = add nsw i32 %545, %538
  %547 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %499, i64 6
  %548 = load i16, i16* %547, align 4
  %549 = sext i16 %548 to i32
  %550 = getelementptr inbounds %union.anon.22, %union.anon.22* %18, i64 0, i32 0, i64 %487, i64 %494
  %551 = load i16, i16* %550, align 2
  %552 = sext i16 %551 to i32
  %553 = mul nsw i32 %552, %549
  %554 = add nsw i32 %553, %546
  %555 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %499, i64 7
  %556 = load i16, i16* %555, align 2
  %557 = sext i16 %556 to i32
  %558 = getelementptr inbounds %union.anon.22, %union.anon.22* %18, i64 0, i32 0, i64 %488, i64 %494
  %559 = load i16, i16* %558, align 2
  %560 = sext i16 %559 to i32
  %561 = mul nsw i32 %560, %557
  %562 = add nsw i32 %561, %554
  %563 = add nsw i32 %562, 1024
  %564 = ashr i32 %563, 11
  %565 = icmp slt i32 %564, 1023
  %566 = select i1 %565, i32 %564, i32 1023
  %567 = icmp sgt i32 %566, 0
  %568 = select i1 %567, i32 %566, i32 0
  %569 = trunc i32 %568 to i16
  %570 = getelementptr inbounds i16, i16* %480, i64 %494
  store i16 %569, i16* %570, align 2
  %571 = add nsw i32 %495, %43
  %572 = add nuw nsw i64 %494, 1
  %573 = icmp eq i64 %572, 8
  br i1 %573, label %489, label %493

574:                                              ; preds = %489, %220, %187
  %575 = add nsw i64 %75, 8
  %576 = icmp slt i64 %575, %51
  br i1 %576, label %74, label %70
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_16Warp_CILb1ELi10EtEEvPKvliiPKiiiiiiissssPvl(i8* nocapture readonly, i64, i32, i32, i32* nocapture readonly, i32, i32, i32, i32, i32, i32, i16 signext, i16 signext, i16 signext, i16 signext, i8* nocapture, i64) #0 {
  %18 = alloca %union.anon.23, align 16
  %19 = bitcast %union.anon.23* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %19) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %19, i8 -86, i64 240, i1 false)
  %20 = bitcast i8* %0 to i16*
  %21 = lshr i64 %1, 1
  %22 = add nsw i32 %10, %8
  %23 = icmp sgt i32 %10, 0
  br i1 %23, label %24, label %68

24:                                               ; preds = %17
  %25 = bitcast i8* %15 to i16*
  %26 = add nsw i32 %9, %7
  %27 = icmp sgt i32 %9, 0
  %28 = getelementptr inbounds i32, i32* %4, i64 2
  %29 = getelementptr inbounds i32, i32* %4, i64 3
  %30 = getelementptr inbounds i32, i32* %4, i64 4
  %31 = getelementptr inbounds i32, i32* %4, i64 5
  %32 = getelementptr inbounds i32, i32* %4, i64 1
  %33 = sext i16 %12 to i32
  %34 = mul nsw i32 %33, -7
  %35 = sext i16 %11 to i32
  %36 = shl nsw i32 %35, 2
  %37 = add nsw i32 %3, -1
  %38 = sext i32 %7 to i64
  %39 = sub nsw i64 0, %38
  %40 = sext i16 %14 to i32
  %41 = shl nsw i32 %40, 2
  %42 = sext i16 %13 to i32
  %43 = shl nsw i32 %42, 2
  %44 = sext i32 %2 to i64
  %45 = getelementptr inbounds i8, i8* %0, i64 -2
  %46 = bitcast i8* %45 to i16*
  %47 = getelementptr inbounds i16, i16* %46, i64 %44
  %48 = bitcast %union.anon.23* %18 to [15 x i16]*
  %49 = shl nsw i64 %16, 3
  %50 = sext i32 %26 to i64
  %51 = getelementptr inbounds %union.anon.23, %union.anon.23* %18, i64 0, i32 0, i64 1, i64 0
  %52 = getelementptr inbounds %union.anon.23, %union.anon.23* %18, i64 0, i32 0, i64 1, i64 1
  %53 = getelementptr inbounds %union.anon.23, %union.anon.23* %18, i64 0, i32 0, i64 1, i64 2
  %54 = getelementptr inbounds %union.anon.23, %union.anon.23* %18, i64 0, i32 0, i64 1, i64 3
  %55 = getelementptr inbounds %union.anon.23, %union.anon.23* %18, i64 0, i32 0, i64 1, i64 4
  %56 = getelementptr inbounds %union.anon.23, %union.anon.23* %18, i64 0, i32 0, i64 1, i64 5
  %57 = getelementptr inbounds %union.anon.23, %union.anon.23* %18, i64 0, i32 0, i64 1, i64 6
  %58 = bitcast %union.anon.23* %18 to <8 x i16>*
  br label %59

59:                                               ; preds = %24, %69
  %60 = phi i16* [ %25, %24 ], [ %70, %69 ]
  %61 = phi i32 [ %8, %24 ], [ %71, %69 ]
  br i1 %27, label %62, label %69

62:                                               ; preds = %59
  %63 = add nsw i32 %61, 4
  %64 = shl i32 %63, %6
  %65 = getelementptr inbounds i16, i16* %60, i64 %39
  %66 = getelementptr inbounds i16, i16* %60, i64 %39
  %67 = getelementptr inbounds i16, i16* %60, i64 %39
  br label %73

68:                                               ; preds = %69, %17
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %19) #3
  ret void

69:                                               ; preds = %622, %59
  %70 = getelementptr inbounds i16, i16* %60, i64 %49
  %71 = add nsw i32 %61, 8
  %72 = icmp slt i32 %71, %22
  br i1 %72, label %59, label %68

73:                                               ; preds = %62, %622
  %74 = phi i64 [ %38, %62 ], [ %623, %622 ]
  %75 = trunc i64 %74 to i32
  %76 = add i32 %75, 4
  %77 = shl i32 %76, %5
  %78 = load i32, i32* %28, align 4
  %79 = mul nsw i32 %78, %77
  %80 = load i32, i32* %29, align 4
  %81 = mul nsw i32 %80, %64
  %82 = add nsw i32 %81, %79
  %83 = load i32, i32* %4, align 4
  %84 = add nsw i32 %82, %83
  %85 = load i32, i32* %30, align 4
  %86 = mul nsw i32 %85, %77
  %87 = load i32, i32* %31, align 4
  %88 = mul nsw i32 %87, %64
  %89 = add nsw i32 %88, %86
  %90 = load i32, i32* %32, align 4
  %91 = add nsw i32 %89, %90
  %92 = ashr i32 %84, %5
  %93 = ashr i32 %91, %6
  %94 = ashr i32 %92, 16
  %95 = ashr i32 %93, 16
  %96 = add nsw i32 %94, -6
  %97 = icmp sge i32 %96, %2
  %98 = icmp slt i32 %92, -393216
  %99 = or i1 %98, %97
  br i1 %99, label %100, label %307

100:                                              ; preds = %73
  %101 = select i1 %98, i16* %20, i16* %47
  %102 = add nsw i32 %95, -6
  %103 = icmp sge i32 %102, %3
  %104 = icmp slt i32 %93, -393216
  %105 = or i1 %104, %103
  br i1 %105, label %186, label %106

106:                                              ; preds = %100
  %107 = sext i32 %95 to i64
  %108 = add nsw i64 %107, -7
  %109 = mul nsw i64 %21, %108
  %110 = getelementptr inbounds i16, i16* %101, i64 %109
  %111 = load i16, i16* %110, align 2
  %112 = add nsw i64 %107, -6
  %113 = mul nsw i64 %21, %112
  %114 = getelementptr inbounds i16, i16* %101, i64 %113
  %115 = load i16, i16* %114, align 2
  %116 = add nsw i64 %107, -5
  %117 = mul nsw i64 %21, %116
  %118 = getelementptr inbounds i16, i16* %101, i64 %117
  %119 = load i16, i16* %118, align 2
  %120 = add nsw i64 %107, -4
  %121 = mul nsw i64 %21, %120
  %122 = getelementptr inbounds i16, i16* %101, i64 %121
  %123 = load i16, i16* %122, align 2
  %124 = add nsw i64 %107, -3
  %125 = mul nsw i64 %21, %124
  %126 = getelementptr inbounds i16, i16* %101, i64 %125
  %127 = load i16, i16* %126, align 2
  %128 = add nsw i64 %107, -2
  %129 = mul nsw i64 %21, %128
  %130 = getelementptr inbounds i16, i16* %101, i64 %129
  %131 = load i16, i16* %130, align 2
  %132 = add nsw i64 %107, -1
  %133 = mul nsw i64 %21, %132
  %134 = getelementptr inbounds i16, i16* %101, i64 %133
  %135 = load i16, i16* %134, align 2
  %136 = mul nsw i64 %21, %107
  %137 = getelementptr inbounds i16, i16* %101, i64 %136
  %138 = load i16, i16* %137, align 2
  %139 = insertelement <8 x i16> undef, i16 %111, i32 0
  %140 = insertelement <8 x i16> %139, i16 %115, i32 1
  %141 = insertelement <8 x i16> %140, i16 %119, i32 2
  %142 = insertelement <8 x i16> %141, i16 %123, i32 3
  %143 = insertelement <8 x i16> %142, i16 %127, i32 4
  %144 = insertelement <8 x i16> %143, i16 %131, i32 5
  %145 = insertelement <8 x i16> %144, i16 %135, i32 6
  %146 = insertelement <8 x i16> %145, i16 %138, i32 7
  %147 = shl <8 x i16> %146, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  store <8 x i16> %147, <8 x i16>* %58, align 16
  %148 = add nsw i64 %107, 1
  %149 = mul nsw i64 %21, %148
  %150 = getelementptr inbounds i16, i16* %101, i64 %149
  %151 = load i16, i16* %150, align 2
  %152 = shl i16 %151, 4
  store i16 %152, i16* %51, align 16
  %153 = add nsw i64 %107, 2
  %154 = mul nsw i64 %21, %153
  %155 = getelementptr inbounds i16, i16* %101, i64 %154
  %156 = load i16, i16* %155, align 2
  %157 = shl i16 %156, 4
  store i16 %157, i16* %52, align 2
  %158 = add nsw i64 %107, 3
  %159 = mul nsw i64 %21, %158
  %160 = getelementptr inbounds i16, i16* %101, i64 %159
  %161 = load i16, i16* %160, align 2
  %162 = shl i16 %161, 4
  store i16 %162, i16* %53, align 4
  %163 = add nsw i64 %107, 4
  %164 = mul nsw i64 %21, %163
  %165 = getelementptr inbounds i16, i16* %101, i64 %164
  %166 = load i16, i16* %165, align 2
  %167 = shl i16 %166, 4
  store i16 %167, i16* %54, align 2
  %168 = add nsw i64 %107, 5
  %169 = mul nsw i64 %21, %168
  %170 = getelementptr inbounds i16, i16* %101, i64 %169
  %171 = load i16, i16* %170, align 2
  %172 = shl i16 %171, 4
  store i16 %172, i16* %55, align 8
  %173 = add nsw i64 %107, 6
  %174 = mul nsw i64 %21, %173
  %175 = getelementptr inbounds i16, i16* %101, i64 %174
  %176 = load i16, i16* %175, align 2
  %177 = shl i16 %176, 4
  store i16 %177, i16* %56, align 2
  %178 = add nsw i64 %107, 7
  %179 = mul nsw i64 %21, %178
  %180 = getelementptr inbounds i16, i16* %101, i64 %179
  %181 = load i16, i16* %180, align 2
  %182 = shl i16 %181, 4
  store i16 %182, i16* %57, align 4
  %183 = getelementptr inbounds i16, i16* %66, i64 %74
  %184 = and i32 %93, 65535
  %185 = sub nsw i32 %184, %41
  br label %213

186:                                              ; preds = %100
  %187 = select i1 %104, i32 0, i32 %37
  %188 = sext i32 %187 to i64
  %189 = mul nsw i64 %21, %188
  %190 = getelementptr inbounds i16, i16* %101, i64 %189
  %191 = load i16, i16* %190, align 2
  %192 = getelementptr inbounds i16, i16* %67, i64 %74
  %193 = shl i16 %191, 4
  %194 = add i16 %193, 24576
  %195 = insertelement <8 x i16> undef, i16 %194, i32 0
  %196 = shufflevector <8 x i16> %195, <8 x i16> undef, <8 x i32> zeroinitializer
  %197 = bitcast i16* %192 to <8 x i16>*
  store <8 x i16> %196, <8 x i16>* %197, align 2
  %198 = bitcast i16* %192 to i8*
  %199 = getelementptr inbounds i16, i16* %192, i64 %16
  %200 = bitcast i16* %199 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %200, i8* align 2 %198, i64 16, i1 false)
  %201 = getelementptr inbounds i16, i16* %199, i64 %16
  %202 = bitcast i16* %201 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %202, i8* align 2 %198, i64 16, i1 false)
  %203 = getelementptr inbounds i16, i16* %201, i64 %16
  %204 = bitcast i16* %203 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %204, i8* align 2 %198, i64 16, i1 false)
  %205 = getelementptr inbounds i16, i16* %203, i64 %16
  %206 = bitcast i16* %205 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %206, i8* align 2 %198, i64 16, i1 false)
  %207 = getelementptr inbounds i16, i16* %205, i64 %16
  %208 = bitcast i16* %207 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %208, i8* align 2 %198, i64 16, i1 false)
  %209 = getelementptr inbounds i16, i16* %207, i64 %16
  %210 = bitcast i16* %209 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %210, i8* align 2 %198, i64 16, i1 false)
  %211 = getelementptr inbounds i16, i16* %209, i64 %16
  %212 = bitcast i16* %211 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %212, i8* align 2 %198, i64 16, i1 false)
  br label %622

213:                                              ; preds = %233, %106
  %214 = phi i64 [ 0, %106 ], [ %219, %233 ]
  %215 = phi i32 [ %185, %106 ], [ %235, %233 ]
  %216 = phi i16* [ %183, %106 ], [ %234, %233 ]
  %217 = sub nsw i32 %215, %43
  %218 = getelementptr inbounds [15 x i16], [15 x i16]* %48, i64 0, i64 %214
  %219 = add nuw nsw i64 %214, 1
  %220 = getelementptr inbounds [15 x i16], [15 x i16]* %48, i64 0, i64 %219
  %221 = add nuw nsw i64 %214, 2
  %222 = getelementptr inbounds [15 x i16], [15 x i16]* %48, i64 0, i64 %221
  %223 = add nuw nsw i64 %214, 3
  %224 = getelementptr inbounds [15 x i16], [15 x i16]* %48, i64 0, i64 %223
  %225 = add nuw nsw i64 %214, 4
  %226 = getelementptr inbounds [15 x i16], [15 x i16]* %48, i64 0, i64 %225
  %227 = add nuw nsw i64 %214, 5
  %228 = getelementptr inbounds [15 x i16], [15 x i16]* %48, i64 0, i64 %227
  %229 = add nuw nsw i64 %214, 6
  %230 = getelementptr inbounds [15 x i16], [15 x i16]* %48, i64 0, i64 %229
  %231 = add nuw nsw i64 %214, 7
  %232 = getelementptr inbounds [15 x i16], [15 x i16]* %48, i64 0, i64 %231
  br label %237

233:                                              ; preds = %237
  %234 = getelementptr inbounds i16, i16* %216, i64 %16
  %235 = add nsw i32 %215, %40
  %236 = icmp eq i64 %219, 8
  br i1 %236, label %622, label %213

237:                                              ; preds = %237, %213
  %238 = phi i64 [ 0, %213 ], [ %305, %237 ]
  %239 = phi i32 [ %217, %213 ], [ %304, %237 ]
  %240 = add nsw i32 %239, 512
  %241 = ashr i32 %240, 10
  %242 = add nsw i32 %241, 64
  %243 = sext i32 %242 to i64
  %244 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %243, i64 0
  %245 = load i16, i16* %244, align 16
  %246 = sext i16 %245 to i32
  %247 = load i16, i16* %218, align 2
  %248 = sext i16 %247 to i32
  %249 = mul nsw i32 %248, %246
  %250 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %243, i64 1
  %251 = load i16, i16* %250, align 2
  %252 = sext i16 %251 to i32
  %253 = load i16, i16* %220, align 2
  %254 = sext i16 %253 to i32
  %255 = mul nsw i32 %254, %252
  %256 = add nsw i32 %255, %249
  %257 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %243, i64 2
  %258 = load i16, i16* %257, align 4
  %259 = sext i16 %258 to i32
  %260 = load i16, i16* %222, align 2
  %261 = sext i16 %260 to i32
  %262 = mul nsw i32 %261, %259
  %263 = add nsw i32 %262, %256
  %264 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %243, i64 3
  %265 = load i16, i16* %264, align 2
  %266 = sext i16 %265 to i32
  %267 = load i16, i16* %224, align 2
  %268 = sext i16 %267 to i32
  %269 = mul nsw i32 %268, %266
  %270 = add nsw i32 %269, %263
  %271 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %243, i64 4
  %272 = load i16, i16* %271, align 8
  %273 = sext i16 %272 to i32
  %274 = load i16, i16* %226, align 2
  %275 = sext i16 %274 to i32
  %276 = mul nsw i32 %275, %273
  %277 = add nsw i32 %276, %270
  %278 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %243, i64 5
  %279 = load i16, i16* %278, align 2
  %280 = sext i16 %279 to i32
  %281 = load i16, i16* %228, align 2
  %282 = sext i16 %281 to i32
  %283 = mul nsw i32 %282, %280
  %284 = add nsw i32 %283, %277
  %285 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %243, i64 6
  %286 = load i16, i16* %285, align 4
  %287 = sext i16 %286 to i32
  %288 = load i16, i16* %230, align 2
  %289 = sext i16 %288 to i32
  %290 = mul nsw i32 %289, %287
  %291 = add nsw i32 %290, %284
  %292 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %243, i64 7
  %293 = load i16, i16* %292, align 2
  %294 = sext i16 %293 to i32
  %295 = load i16, i16* %232, align 2
  %296 = sext i16 %295 to i32
  %297 = mul nsw i32 %296, %294
  %298 = add nsw i32 %297, %291
  %299 = add nsw i32 %298, 64
  %300 = lshr i32 %299, 7
  %301 = trunc i32 %300 to i16
  %302 = add i16 %301, 24576
  %303 = getelementptr inbounds i16, i16* %216, i64 %238
  store i16 %302, i16* %303, align 2
  %304 = add nsw i32 %239, %42
  %305 = add nuw nsw i64 %238, 1
  %306 = icmp eq i64 %305, 8
  br i1 %306, label %233, label %237

307:                                              ; preds = %73
  %308 = add nsw i32 %95, -6
  %309 = icmp sge i32 %308, %3
  %310 = icmp slt i32 %93, -393216
  %311 = or i1 %310, %309
  br i1 %311, label %312, label %418

312:                                              ; preds = %307
  %313 = select i1 %310, i32 0, i32 %37
  %314 = sext i32 %313 to i64
  %315 = mul nsw i64 %21, %314
  %316 = getelementptr inbounds i16, i16* %20, i64 %315
  %317 = and i32 %92, 65535
  %318 = add nsw i32 %317, %34
  %319 = add nsw i32 %94, -3
  br label %320

320:                                              ; preds = %325, %312
  %321 = phi i64 [ -7, %312 ], [ %327, %325 ]
  %322 = phi i32 [ %318, %312 ], [ %326, %325 ]
  %323 = sub nsw i32 %322, %36
  %324 = add nsw i64 %321, 7
  br label %329

325:                                              ; preds = %329
  %326 = add nsw i32 %322, %33
  %327 = add nsw i64 %321, 1
  %328 = icmp eq i64 %327, 8
  br i1 %328, label %524, label %320

329:                                              ; preds = %329, %320
  %330 = phi i64 [ -4, %320 ], [ %415, %329 ]
  %331 = phi i32 [ -4, %320 ], [ %416, %329 ]
  %332 = phi i32 [ %323, %320 ], [ %414, %329 ]
  %333 = add nsw i32 %332, 512
  %334 = ashr i32 %333, 10
  %335 = add nsw i32 %334, 64
  %336 = add i32 %319, %331
  %337 = sext i32 %335 to i64
  %338 = sext i32 %336 to i64
  %339 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %337, i64 0
  %340 = load i16, i16* %339, align 16
  %341 = sext i16 %340 to i32
  %342 = getelementptr inbounds i16, i16* %316, i64 %338
  %343 = load i16, i16* %342, align 2
  %344 = zext i16 %343 to i32
  %345 = mul nsw i32 %344, %341
  %346 = add nsw i64 %338, 1
  %347 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %337, i64 1
  %348 = load i16, i16* %347, align 2
  %349 = sext i16 %348 to i32
  %350 = getelementptr inbounds i16, i16* %316, i64 %346
  %351 = load i16, i16* %350, align 2
  %352 = zext i16 %351 to i32
  %353 = mul nsw i32 %352, %349
  %354 = add nsw i32 %353, %345
  %355 = add nsw i64 %338, 2
  %356 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %337, i64 2
  %357 = load i16, i16* %356, align 4
  %358 = sext i16 %357 to i32
  %359 = getelementptr inbounds i16, i16* %316, i64 %355
  %360 = load i16, i16* %359, align 2
  %361 = zext i16 %360 to i32
  %362 = mul nsw i32 %361, %358
  %363 = add nsw i32 %362, %354
  %364 = add nsw i64 %338, 3
  %365 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %337, i64 3
  %366 = load i16, i16* %365, align 2
  %367 = sext i16 %366 to i32
  %368 = getelementptr inbounds i16, i16* %316, i64 %364
  %369 = load i16, i16* %368, align 2
  %370 = zext i16 %369 to i32
  %371 = mul nsw i32 %370, %367
  %372 = add nsw i32 %371, %363
  %373 = add nsw i64 %338, 4
  %374 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %337, i64 4
  %375 = load i16, i16* %374, align 8
  %376 = sext i16 %375 to i32
  %377 = getelementptr inbounds i16, i16* %316, i64 %373
  %378 = load i16, i16* %377, align 2
  %379 = zext i16 %378 to i32
  %380 = mul nsw i32 %379, %376
  %381 = add nsw i32 %380, %372
  %382 = add nsw i64 %338, 5
  %383 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %337, i64 5
  %384 = load i16, i16* %383, align 2
  %385 = sext i16 %384 to i32
  %386 = getelementptr inbounds i16, i16* %316, i64 %382
  %387 = load i16, i16* %386, align 2
  %388 = zext i16 %387 to i32
  %389 = mul nsw i32 %388, %385
  %390 = add nsw i32 %389, %381
  %391 = add nsw i64 %338, 6
  %392 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %337, i64 6
  %393 = load i16, i16* %392, align 4
  %394 = sext i16 %393 to i32
  %395 = getelementptr inbounds i16, i16* %316, i64 %391
  %396 = load i16, i16* %395, align 2
  %397 = zext i16 %396 to i32
  %398 = mul nsw i32 %397, %394
  %399 = add nsw i32 %398, %390
  %400 = add nsw i64 %338, 7
  %401 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %337, i64 7
  %402 = load i16, i16* %401, align 2
  %403 = sext i16 %402 to i32
  %404 = getelementptr inbounds i16, i16* %316, i64 %400
  %405 = load i16, i16* %404, align 2
  %406 = zext i16 %405 to i32
  %407 = mul nsw i32 %406, %403
  %408 = add nsw i32 %407, %399
  %409 = add nsw i32 %408, 4
  %410 = lshr i32 %409, 3
  %411 = trunc i32 %410 to i16
  %412 = add nsw i64 %330, 4
  %413 = getelementptr inbounds %union.anon.23, %union.anon.23* %18, i64 0, i32 0, i64 %324, i64 %412
  store i16 %411, i16* %413, align 2
  %414 = add nsw i32 %332, %35
  %415 = add nsw i64 %330, 1
  %416 = add nsw i32 %331, 1
  %417 = icmp eq i64 %415, 4
  br i1 %417, label %325, label %329

418:                                              ; preds = %307
  %419 = and i32 %92, 65535
  %420 = add nsw i32 %419, %34
  %421 = add nsw i32 %94, -3
  %422 = sext i32 %95 to i64
  br label %423

423:                                              ; preds = %431, %418
  %424 = phi i64 [ -7, %418 ], [ %433, %431 ]
  %425 = phi i32 [ %420, %418 ], [ %432, %431 ]
  %426 = add nsw i64 %424, %422
  %427 = mul nsw i64 %21, %426
  %428 = getelementptr inbounds i16, i16* %20, i64 %427
  %429 = sub nsw i32 %425, %36
  %430 = add nsw i64 %424, 7
  br label %435

431:                                              ; preds = %435
  %432 = add nsw i32 %425, %33
  %433 = add nsw i64 %424, 1
  %434 = icmp eq i64 %433, 8
  br i1 %434, label %524, label %423

435:                                              ; preds = %435, %423
  %436 = phi i64 [ -4, %423 ], [ %521, %435 ]
  %437 = phi i32 [ -4, %423 ], [ %522, %435 ]
  %438 = phi i32 [ %429, %423 ], [ %520, %435 ]
  %439 = add nsw i32 %438, 512
  %440 = ashr i32 %439, 10
  %441 = add nsw i32 %440, 64
  %442 = add i32 %421, %437
  %443 = sext i32 %441 to i64
  %444 = sext i32 %442 to i64
  %445 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %443, i64 0
  %446 = load i16, i16* %445, align 16
  %447 = sext i16 %446 to i32
  %448 = getelementptr inbounds i16, i16* %428, i64 %444
  %449 = load i16, i16* %448, align 2
  %450 = zext i16 %449 to i32
  %451 = mul nsw i32 %450, %447
  %452 = add nsw i64 %444, 1
  %453 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %443, i64 1
  %454 = load i16, i16* %453, align 2
  %455 = sext i16 %454 to i32
  %456 = getelementptr inbounds i16, i16* %428, i64 %452
  %457 = load i16, i16* %456, align 2
  %458 = zext i16 %457 to i32
  %459 = mul nsw i32 %458, %455
  %460 = add nsw i32 %459, %451
  %461 = add nsw i64 %444, 2
  %462 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %443, i64 2
  %463 = load i16, i16* %462, align 4
  %464 = sext i16 %463 to i32
  %465 = getelementptr inbounds i16, i16* %428, i64 %461
  %466 = load i16, i16* %465, align 2
  %467 = zext i16 %466 to i32
  %468 = mul nsw i32 %467, %464
  %469 = add nsw i32 %468, %460
  %470 = add nsw i64 %444, 3
  %471 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %443, i64 3
  %472 = load i16, i16* %471, align 2
  %473 = sext i16 %472 to i32
  %474 = getelementptr inbounds i16, i16* %428, i64 %470
  %475 = load i16, i16* %474, align 2
  %476 = zext i16 %475 to i32
  %477 = mul nsw i32 %476, %473
  %478 = add nsw i32 %477, %469
  %479 = add nsw i64 %444, 4
  %480 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %443, i64 4
  %481 = load i16, i16* %480, align 8
  %482 = sext i16 %481 to i32
  %483 = getelementptr inbounds i16, i16* %428, i64 %479
  %484 = load i16, i16* %483, align 2
  %485 = zext i16 %484 to i32
  %486 = mul nsw i32 %485, %482
  %487 = add nsw i32 %486, %478
  %488 = add nsw i64 %444, 5
  %489 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %443, i64 5
  %490 = load i16, i16* %489, align 2
  %491 = sext i16 %490 to i32
  %492 = getelementptr inbounds i16, i16* %428, i64 %488
  %493 = load i16, i16* %492, align 2
  %494 = zext i16 %493 to i32
  %495 = mul nsw i32 %494, %491
  %496 = add nsw i32 %495, %487
  %497 = add nsw i64 %444, 6
  %498 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %443, i64 6
  %499 = load i16, i16* %498, align 4
  %500 = sext i16 %499 to i32
  %501 = getelementptr inbounds i16, i16* %428, i64 %497
  %502 = load i16, i16* %501, align 2
  %503 = zext i16 %502 to i32
  %504 = mul nsw i32 %503, %500
  %505 = add nsw i32 %504, %496
  %506 = add nsw i64 %444, 7
  %507 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %443, i64 7
  %508 = load i16, i16* %507, align 2
  %509 = sext i16 %508 to i32
  %510 = getelementptr inbounds i16, i16* %428, i64 %506
  %511 = load i16, i16* %510, align 2
  %512 = zext i16 %511 to i32
  %513 = mul nsw i32 %512, %509
  %514 = add nsw i32 %513, %505
  %515 = add nsw i32 %514, 4
  %516 = lshr i32 %515, 3
  %517 = trunc i32 %516 to i16
  %518 = add nsw i64 %436, 4
  %519 = getelementptr inbounds %union.anon.23, %union.anon.23* %18, i64 0, i32 0, i64 %430, i64 %518
  store i16 %517, i16* %519, align 2
  %520 = add nsw i32 %438, %35
  %521 = add nsw i64 %436, 1
  %522 = add nsw i32 %437, 1
  %523 = icmp eq i64 %521, 4
  br i1 %523, label %431, label %435

524:                                              ; preds = %431, %325
  %525 = getelementptr inbounds i16, i16* %65, i64 %74
  %526 = and i32 %93, 65535
  %527 = sub nsw i32 %526, %41
  br label %528

528:                                              ; preds = %540, %524
  %529 = phi i64 [ 0, %524 ], [ %533, %540 ]
  %530 = phi i32 [ %527, %524 ], [ %542, %540 ]
  %531 = phi i16* [ %525, %524 ], [ %541, %540 ]
  %532 = sub nsw i32 %530, %43
  %533 = add nuw nsw i64 %529, 1
  %534 = add nuw nsw i64 %529, 2
  %535 = add nuw nsw i64 %529, 3
  %536 = add nuw nsw i64 %529, 4
  %537 = add nuw nsw i64 %529, 5
  %538 = add nuw nsw i64 %529, 6
  %539 = add nuw nsw i64 %529, 7
  br label %544

540:                                              ; preds = %544
  %541 = getelementptr inbounds i16, i16* %531, i64 %16
  %542 = add nsw i32 %530, %40
  %543 = icmp eq i64 %533, 8
  br i1 %543, label %622, label %528

544:                                              ; preds = %544, %528
  %545 = phi i64 [ 0, %528 ], [ %620, %544 ]
  %546 = phi i32 [ %532, %528 ], [ %619, %544 ]
  %547 = add nsw i32 %546, 512
  %548 = ashr i32 %547, 10
  %549 = add nsw i32 %548, 64
  %550 = sext i32 %549 to i64
  %551 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %550, i64 0
  %552 = load i16, i16* %551, align 16
  %553 = sext i16 %552 to i32
  %554 = getelementptr inbounds %union.anon.23, %union.anon.23* %18, i64 0, i32 0, i64 %529, i64 %545
  %555 = load i16, i16* %554, align 2
  %556 = sext i16 %555 to i32
  %557 = mul nsw i32 %556, %553
  %558 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %550, i64 1
  %559 = load i16, i16* %558, align 2
  %560 = sext i16 %559 to i32
  %561 = getelementptr inbounds %union.anon.23, %union.anon.23* %18, i64 0, i32 0, i64 %533, i64 %545
  %562 = load i16, i16* %561, align 2
  %563 = sext i16 %562 to i32
  %564 = mul nsw i32 %563, %560
  %565 = add nsw i32 %564, %557
  %566 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %550, i64 2
  %567 = load i16, i16* %566, align 4
  %568 = sext i16 %567 to i32
  %569 = getelementptr inbounds %union.anon.23, %union.anon.23* %18, i64 0, i32 0, i64 %534, i64 %545
  %570 = load i16, i16* %569, align 2
  %571 = sext i16 %570 to i32
  %572 = mul nsw i32 %571, %568
  %573 = add nsw i32 %572, %565
  %574 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %550, i64 3
  %575 = load i16, i16* %574, align 2
  %576 = sext i16 %575 to i32
  %577 = getelementptr inbounds %union.anon.23, %union.anon.23* %18, i64 0, i32 0, i64 %535, i64 %545
  %578 = load i16, i16* %577, align 2
  %579 = sext i16 %578 to i32
  %580 = mul nsw i32 %579, %576
  %581 = add nsw i32 %580, %573
  %582 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %550, i64 4
  %583 = load i16, i16* %582, align 8
  %584 = sext i16 %583 to i32
  %585 = getelementptr inbounds %union.anon.23, %union.anon.23* %18, i64 0, i32 0, i64 %536, i64 %545
  %586 = load i16, i16* %585, align 2
  %587 = sext i16 %586 to i32
  %588 = mul nsw i32 %587, %584
  %589 = add nsw i32 %588, %581
  %590 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %550, i64 5
  %591 = load i16, i16* %590, align 2
  %592 = sext i16 %591 to i32
  %593 = getelementptr inbounds %union.anon.23, %union.anon.23* %18, i64 0, i32 0, i64 %537, i64 %545
  %594 = load i16, i16* %593, align 2
  %595 = sext i16 %594 to i32
  %596 = mul nsw i32 %595, %592
  %597 = add nsw i32 %596, %589
  %598 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %550, i64 6
  %599 = load i16, i16* %598, align 4
  %600 = sext i16 %599 to i32
  %601 = getelementptr inbounds %union.anon.23, %union.anon.23* %18, i64 0, i32 0, i64 %538, i64 %545
  %602 = load i16, i16* %601, align 2
  %603 = sext i16 %602 to i32
  %604 = mul nsw i32 %603, %600
  %605 = add nsw i32 %604, %597
  %606 = getelementptr inbounds [193 x [8 x i16]], [193 x [8 x i16]]* @_ZN7libgav114kWarpedFiltersE, i64 0, i64 %550, i64 7
  %607 = load i16, i16* %606, align 2
  %608 = sext i16 %607 to i32
  %609 = getelementptr inbounds %union.anon.23, %union.anon.23* %18, i64 0, i32 0, i64 %539, i64 %545
  %610 = load i16, i16* %609, align 2
  %611 = sext i16 %610 to i32
  %612 = mul nsw i32 %611, %608
  %613 = add nsw i32 %612, %605
  %614 = add nsw i32 %613, 64
  %615 = lshr i32 %614, 7
  %616 = trunc i32 %615 to i16
  %617 = add i16 %616, 24576
  %618 = getelementptr inbounds i16, i16* %531, i64 %545
  store i16 %617, i16* %618, align 2
  %619 = add nsw i32 %546, %42
  %620 = add nuw nsw i64 %545, 1
  %621 = icmp eq i64 %620, 8
  br i1 %621, label %540, label %544

622:                                              ; preds = %540, %233, %186
  %623 = add nsw i64 %74, 8
  %624 = icmp slt i64 %623, %50
  br i1 %624, label %73, label %69
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
