; ModuleID = '../../content/browser/startup_data_impl.cc'
source_filename = "../../content/browser/startup_data_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.content::StartupDataImpl" = type { %"struct.content::StartupData", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.28" }
%"struct.content::StartupData" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.content::BrowserProcessIOThread"* }
%"class.content::BrowserProcessIOThread" = type { %"class.base::Thread.base", i8, %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.19" }
%"class.base::Thread.base" = type <{ %"class.base::PlatformThread::Delegate", i8, i8, i8, [5 x i8], %"class.base::Lock", %"class.base::PlatformThreadHandle", %"class.base::Lock", i32, [4 x i8], %"class.base::WaitableEvent", %"class.std::__1::unique_ptr.4", %"class.base::RunLoop"*, i32, [4 x i8], %"class.std::__1::basic_string", %"class.base::WaitableEvent", %"class.base::SequenceCheckerDoNothing" }>
%"class.base::PlatformThread::Delegate" = type { i32 (...)** }
%"class.base::PlatformThreadHandle" = type { i64 }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.base::Thread::Delegate"* }
%"class.base::Thread::Delegate" = type { i32 (...)** }
%"class.base::RunLoop" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr, i8, [7 x i8] }>
%class.scoped_refptr = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.1" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.content::BrowserThreadImpl"* }
%"class.content::BrowserThreadImpl" = type opaque
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.content::NotificationService"* }
%"class.content::NotificationService" = type opaque
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.mojo::core::ScopedIPCSupport"* }
%"class.mojo::core::ScopedIPCSupport" = type { i32 }

@_ZTVN7content15StartupDataImplE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.content::StartupDataImpl"*)* @_ZN7content15StartupDataImplD2Ev to i8*), i8* bitcast (void (%"struct.content::StartupDataImpl"*)* @_ZN7content15StartupDataImplD0Ev to i8*)] }, align 8

@_ZN7content15StartupDataImplC1Ev = hidden unnamed_addr alias void (%"struct.content::StartupDataImpl"*), void (%"struct.content::StartupDataImpl"*)* @_ZN7content15StartupDataImplC2Ev
@_ZN7content15StartupDataImplD1Ev = hidden unnamed_addr alias void (%"struct.content::StartupDataImpl"*), void (%"struct.content::StartupDataImpl"*)* @_ZN7content15StartupDataImplD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7content15StartupDataImplC2Ev(%"struct.content::StartupDataImpl"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.content::StartupDataImpl", %"struct.content::StartupDataImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN7content15StartupDataImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.content::StartupDataImpl", %"struct.content::StartupDataImpl"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content15StartupDataImplD2Ev(%"struct.content::StartupDataImpl"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"struct.content::StartupDataImpl", %"struct.content::StartupDataImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN7content15StartupDataImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.content::StartupDataImpl", %"struct.content::StartupDataImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.mojo::core::ScopedIPCSupport"*, %"class.mojo::core::ScopedIPCSupport"** %3, align 8
  store %"class.mojo::core::ScopedIPCSupport"* null, %"class.mojo::core::ScopedIPCSupport"** %3, align 8
  %5 = icmp eq %"class.mojo::core::ScopedIPCSupport"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN4mojo4core16ScopedIPCSupportD1Ev(%"class.mojo::core::ScopedIPCSupport"* nonnull %4) #5
  %7 = bitcast %"class.mojo::core::ScopedIPCSupport"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #6
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"struct.content::StartupDataImpl", %"struct.content::StartupDataImpl"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.content::BrowserProcessIOThread"*, %"class.content::BrowserProcessIOThread"** %9, align 8
  store %"class.content::BrowserProcessIOThread"* null, %"class.content::BrowserProcessIOThread"** %9, align 8
  %11 = icmp eq %"class.content::BrowserProcessIOThread"* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = bitcast %"class.content::BrowserProcessIOThread"* %10 to void (%"class.content::BrowserProcessIOThread"*)***
  %14 = load void (%"class.content::BrowserProcessIOThread"*)**, void (%"class.content::BrowserProcessIOThread"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.content::BrowserProcessIOThread"*)*, void (%"class.content::BrowserProcessIOThread"*)** %14, i64 3
  %16 = load void (%"class.content::BrowserProcessIOThread"*)*, void (%"class.content::BrowserProcessIOThread"*)** %15, align 8
  tail call void %16(%"class.content::BrowserProcessIOThread"* nonnull %10) #5
  br label %17

17:                                               ; preds = %8, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content15StartupDataImplD0Ev(%"struct.content::StartupDataImpl"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"struct.content::StartupDataImpl", %"struct.content::StartupDataImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN7content15StartupDataImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.content::StartupDataImpl", %"struct.content::StartupDataImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.mojo::core::ScopedIPCSupport"*, %"class.mojo::core::ScopedIPCSupport"** %3, align 8
  store %"class.mojo::core::ScopedIPCSupport"* null, %"class.mojo::core::ScopedIPCSupport"** %3, align 8
  %5 = icmp eq %"class.mojo::core::ScopedIPCSupport"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN4mojo4core16ScopedIPCSupportD1Ev(%"class.mojo::core::ScopedIPCSupport"* nonnull %4) #5
  %7 = bitcast %"class.mojo::core::ScopedIPCSupport"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #6
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"struct.content::StartupDataImpl", %"struct.content::StartupDataImpl"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.content::BrowserProcessIOThread"*, %"class.content::BrowserProcessIOThread"** %9, align 8
  store %"class.content::BrowserProcessIOThread"* null, %"class.content::BrowserProcessIOThread"** %9, align 8
  %11 = icmp eq %"class.content::BrowserProcessIOThread"* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = bitcast %"class.content::BrowserProcessIOThread"* %10 to void (%"class.content::BrowserProcessIOThread"*)***
  %14 = load void (%"class.content::BrowserProcessIOThread"*)**, void (%"class.content::BrowserProcessIOThread"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.content::BrowserProcessIOThread"*)*, void (%"class.content::BrowserProcessIOThread"*)** %14, i64 3
  %16 = load void (%"class.content::BrowserProcessIOThread"*)*, void (%"class.content::BrowserProcessIOThread"*)** %15, align 8
  tail call void %16(%"class.content::BrowserProcessIOThread"* nonnull %10) #5
  br label %17

17:                                               ; preds = %8, %12
  %18 = bitcast %"struct.content::StartupDataImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4mojo4core16ScopedIPCSupportD1Ev(%"class.mojo::core::ScopedIPCSupport"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
