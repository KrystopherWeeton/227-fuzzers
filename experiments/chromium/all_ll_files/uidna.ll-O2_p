; ModuleID = '../../third_party/icu/source/common/uidna.cpp'
source_filename = "../../third_party/icu/source/common/uidna.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.UParseError = type { i32, i32, [16 x i16], [16 x i16] }
%struct.UStringPrepProfile = type { [16 x i32], %struct.UTrie, i16*, %struct.UDataMemory*, i32, i8, i8, i8 }
%struct.UTrie = type { i16*, i32*, i32 (i32)*, i32, i32, i32, i8 }
%struct.UDataMemory = type opaque

@_ZL10ACE_PREFIX = internal constant [4 x i16] [i16 120, i16 110, i16 45, i16 45], align 2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @uidna_toASCII_69(i16*, i32, i16*, i32, i32, %struct.UParseError*, i32*) local_unnamed_addr #0 {
  %8 = icmp eq i32* %6, null
  br i1 %8, label %29, label %9

9:                                                ; preds = %7
  %10 = load i32, i32* %6, align 4
  %11 = icmp slt i32 %10, 1
  br i1 %11, label %12, label %29

12:                                               ; preds = %9
  %13 = icmp eq i16* %0, null
  %14 = icmp slt i32 %1, -1
  %15 = or i1 %13, %14
  %16 = icmp slt i32 %3, 0
  %17 = or i1 %15, %16
  br i1 %17, label %22, label %18

18:                                               ; preds = %12
  %19 = icmp eq i16* %2, null
  %20 = icmp sgt i32 %3, 0
  %21 = and i1 %19, %20
  br i1 %21, label %22, label %23

22:                                               ; preds = %18, %12
  store i32 1, i32* %6, align 4
  br label %29

23:                                               ; preds = %18
  %24 = tail call %struct.UStringPrepProfile* @usprep_openByType_69(i32 0, i32* nonnull %6) #4
  %25 = load i32, i32* %6, align 4
  %26 = icmp slt i32 %25, 1
  br i1 %26, label %27, label %29

27:                                               ; preds = %23
  %28 = tail call fastcc i32 @_ZL17_internal_toASCIIPKDsiPDsiiP18UStringPrepProfileP11UParseErrorP10UErrorCode(i16* nonnull %0, i32 %1, i16* %2, i32 %3, i32 %4, %struct.UStringPrepProfile* %24, %struct.UParseError* %5, i32* nonnull %6)
  tail call void @usprep_close_69(%struct.UStringPrepProfile* %24) #4
  br label %29

29:                                               ; preds = %27, %23, %7, %9, %22
  %30 = phi i32 [ 0, %22 ], [ 0, %9 ], [ 0, %7 ], [ %28, %27 ], [ -1, %23 ]
  ret i32 %30
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %struct.UStringPrepProfile* @usprep_openByType_69(i32, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZL17_internal_toASCIIPKDsiPDsiiP18UStringPrepProfileP11UParseErrorP10UErrorCode(i16*, i32, i16*, i32, i32, %struct.UStringPrepProfile*, %struct.UParseError*, i32*) unnamed_addr #0 {
  %9 = bitcast i16* %0 to i8*
  %10 = alloca [100 x i16], align 16
  %11 = alloca [100 x i16], align 16
  %12 = bitcast [100 x i16]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %12) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 -86, i64 200, i1 false)
  %13 = bitcast [100 x i16]* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %13) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %13, i8 -86, i64 200, i1 false)
  %14 = getelementptr inbounds [100 x i16], [100 x i16]* %10, i64 0, i64 0
  %15 = getelementptr inbounds [100 x i16], [100 x i16]* %11, i64 0, i64 0
  %16 = and i32 %4, 1
  %17 = and i32 %4, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp eq i32 %1, -1
  br i1 %19, label %20, label %22

20:                                               ; preds = %8
  %21 = tail call i32 @u_strlen_69(i16* %0) #4
  br label %22

22:                                               ; preds = %20, %8
  %23 = phi i32 [ %21, %20 ], [ %1, %8 ]
  %24 = icmp sgt i32 %23, 100
  br i1 %24, label %25, label %32

25:                                               ; preds = %22
  %26 = shl nsw i32 %23, 1
  %27 = sext i32 %26 to i64
  %28 = tail call noalias i8* @uprv_malloc_69(i64 %27) #5
  %29 = icmp eq i8* %28, null
  br i1 %29, label %248, label %30

30:                                               ; preds = %25
  %31 = bitcast i8* %28 to i16*
  br label %35

32:                                               ; preds = %22
  %33 = bitcast [100 x i16]* %10 to i8*
  %34 = icmp sgt i32 %23, 0
  br i1 %34, label %35, label %103

35:                                               ; preds = %30, %32
  %36 = phi i8* [ %28, %30 ], [ %33, %32 ]
  %37 = phi i32 [ %23, %30 ], [ 100, %32 ]
  %38 = phi i16* [ %31, %30 ], [ %14, %32 ]
  %39 = zext i32 %23 to i64
  %40 = shl nuw nsw i64 %39, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %36, i8* align 2 %9, i64 %40, i1 false)
  %41 = add nsw i64 %39, -1
  %42 = and i64 %39, 3
  %43 = icmp ult i64 %41, 3
  br i1 %43, label %69, label %44

44:                                               ; preds = %35
  %45 = sub nsw i64 %39, %42
  br label %46

46:                                               ; preds = %46, %44
  %47 = phi i64 [ 0, %44 ], [ %66, %46 ]
  %48 = phi i8 [ 1, %44 ], [ %65, %46 ]
  %49 = phi i64 [ %45, %44 ], [ %67, %46 ]
  %50 = getelementptr inbounds i16, i16* %0, i64 %47
  %51 = load i16, i16* %50, align 2
  %52 = or i64 %47, 1
  %53 = getelementptr inbounds i16, i16* %0, i64 %52
  %54 = load i16, i16* %53, align 2
  %55 = or i16 %54, %51
  %56 = or i64 %47, 2
  %57 = getelementptr inbounds i16, i16* %0, i64 %56
  %58 = load i16, i16* %57, align 2
  %59 = or i64 %47, 3
  %60 = getelementptr inbounds i16, i16* %0, i64 %59
  %61 = load i16, i16* %60, align 2
  %62 = or i16 %61, %58
  %63 = or i16 %62, %55
  %64 = icmp ult i16 %63, 128
  %65 = select i1 %64, i8 %48, i8 0
  %66 = add nuw nsw i64 %47, 4
  %67 = add i64 %49, -4
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %46

69:                                               ; preds = %46, %35
  %70 = phi i8 [ undef, %35 ], [ %65, %46 ]
  %71 = phi i64 [ 0, %35 ], [ %66, %46 ]
  %72 = phi i8 [ 1, %35 ], [ %65, %46 ]
  %73 = icmp eq i64 %42, 0
  br i1 %73, label %85, label %74

74:                                               ; preds = %69, %74
  %75 = phi i64 [ %82, %74 ], [ %71, %69 ]
  %76 = phi i8 [ %81, %74 ], [ %72, %69 ]
  %77 = phi i64 [ %83, %74 ], [ %42, %69 ]
  %78 = getelementptr inbounds i16, i16* %0, i64 %75
  %79 = load i16, i16* %78, align 2
  %80 = icmp ugt i16 %79, 127
  %81 = select i1 %80, i8 0, i8 %76
  %82 = add nuw nsw i64 %75, 1
  %83 = add i64 %77, -1
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %85, label %74, !llvm.loop !2

85:                                               ; preds = %74, %69
  %86 = phi i8 [ %70, %69 ], [ %81, %74 ]
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %88, label %103

88:                                               ; preds = %85
  %89 = call i32 @usprep_prepare_69(%struct.UStringPrepProfile* %5, i16* %0, i32 %23, i16* %38, i32 %37, i32 %16, %struct.UParseError* %6, i32* %7) #4
  %90 = load i32, i32* %7, align 4
  %91 = icmp eq i32 %90, 15
  br i1 %91, label %92, label %107

92:                                               ; preds = %88
  %93 = icmp eq i16* %38, %14
  br i1 %93, label %95, label %94

94:                                               ; preds = %92
  call void @uprv_free_69(i8* %36) #4
  br label %95

95:                                               ; preds = %92, %94
  %96 = shl nsw i32 %89, 1
  %97 = sext i32 %96 to i64
  %98 = call noalias i8* @uprv_malloc_69(i64 %97) #5
  %99 = bitcast i8* %98 to i16*
  %100 = icmp eq i8* %98, null
  br i1 %100, label %248, label %101

101:                                              ; preds = %95
  store i32 0, i32* %7, align 4
  %102 = call i32 @usprep_prepare_69(%struct.UStringPrepProfile* %5, i16* %0, i32 %23, i16* nonnull %99, i32 %89, i32 %16, %struct.UParseError* %6, i32* %7) #4
  br label %103

103:                                              ; preds = %32, %85, %101
  %104 = phi i16* [ %38, %85 ], [ %99, %101 ], [ %14, %32 ]
  %105 = phi i32 [ %23, %85 ], [ %102, %101 ], [ 0, %32 ]
  %106 = load i32, i32* %7, align 4
  br label %107

107:                                              ; preds = %103, %88
  %108 = phi i32 [ %106, %103 ], [ %90, %88 ]
  %109 = phi i16* [ %104, %103 ], [ %38, %88 ]
  %110 = phi i32 [ %105, %103 ], [ %89, %88 ]
  %111 = icmp slt i32 %108, 1
  br i1 %111, label %112, label %244

112:                                              ; preds = %107
  %113 = icmp eq i32 %110, 0
  br i1 %113, label %118, label %114

114:                                              ; preds = %112
  %115 = icmp sgt i32 %110, 0
  br i1 %115, label %116, label %152

116:                                              ; preds = %114
  %117 = zext i32 %110 to i64
  br label %119

118:                                              ; preds = %112
  store i32 66567, i32* %7, align 4
  br label %244

119:                                              ; preds = %146, %116
  %120 = phi i64 [ 0, %116 ], [ %150, %146 ]
  %121 = phi i32 [ -1, %116 ], [ %149, %146 ]
  %122 = phi i8 [ 1, %116 ], [ %148, %146 ]
  %123 = phi i8 [ 1, %116 ], [ %147, %146 ]
  %124 = getelementptr inbounds i16, i16* %109, i64 %120
  %125 = load i16, i16* %124, align 2
  %126 = icmp ugt i16 %125, 127
  br i1 %126, label %146, label %127

127:                                              ; preds = %119
  %128 = icmp ugt i16 %125, 122
  br i1 %128, label %140, label %129

129:                                              ; preds = %127
  %130 = icmp eq i16 %125, 45
  %131 = add nsw i16 %125, -48
  %132 = icmp ult i16 %131, 10
  %133 = or i1 %130, %132
  %134 = add nsw i16 %125, -65
  %135 = icmp ult i16 %134, 26
  %136 = or i1 %135, %133
  br i1 %136, label %140, label %137

137:                                              ; preds = %129
  %138 = icmp ugt i16 %125, 96
  %139 = zext i1 %138 to i8
  br label %140

140:                                              ; preds = %127, %129, %137
  %141 = phi i8 [ %139, %137 ], [ 0, %127 ], [ 1, %129 ]
  %142 = icmp eq i8 %141, 0
  %143 = select i1 %142, i8 0, i8 %122
  %144 = trunc i64 %120 to i32
  %145 = select i1 %142, i32 %144, i32 %121
  br label %146

146:                                              ; preds = %140, %119
  %147 = phi i8 [ 0, %119 ], [ %123, %140 ]
  %148 = phi i8 [ %122, %119 ], [ %143, %140 ]
  %149 = phi i32 [ %121, %119 ], [ %145, %140 ]
  %150 = add nuw nsw i64 %120, 1
  %151 = icmp eq i64 %150, %117
  br i1 %151, label %152, label %119

152:                                              ; preds = %146, %114
  %153 = phi i8 [ 1, %114 ], [ %147, %146 ]
  %154 = phi i8 [ 1, %114 ], [ %148, %146 ]
  %155 = phi i32 [ -1, %114 ], [ %149, %146 ]
  br i1 %18, label %172, label %156

156:                                              ; preds = %152
  %157 = icmp eq i8 %154, 0
  br i1 %157, label %167, label %158

158:                                              ; preds = %156
  %159 = load i16, i16* %109, align 2
  %160 = icmp eq i16 %159, 45
  br i1 %160, label %168, label %161

161:                                              ; preds = %158
  %162 = add nsw i32 %110, -1
  %163 = sext i32 %162 to i64
  %164 = getelementptr inbounds i16, i16* %109, i64 %163
  %165 = load i16, i16* %164, align 2
  %166 = icmp eq i16 %165, 45
  br i1 %166, label %169, label %172

167:                                              ; preds = %156
  store i32 66563, i32* %7, align 4
  call void @uprv_syntaxError_69(i16* %109, i32 %155, i32 %110, %struct.UParseError* %6) #4
  br label %244

168:                                              ; preds = %158
  store i32 66563, i32* %7, align 4
  call void @uprv_syntaxError_69(i16* %109, i32 0, i32 %110, %struct.UParseError* %6) #4
  br label %244

169:                                              ; preds = %161
  store i32 66563, i32* %7, align 4
  %170 = zext i1 %115 to i32
  %171 = sub i32 %110, %170
  call void @uprv_syntaxError_69(i16* %109, i32 %171, i32 %110, %struct.UParseError* %6) #4
  br label %244

172:                                              ; preds = %152, %161
  %173 = icmp eq i8 %153, 0
  br i1 %173, label %178, label %174

174:                                              ; preds = %172
  %175 = icmp sgt i32 %110, %3
  br i1 %175, label %244, label %176

176:                                              ; preds = %174
  %177 = call i16* @u_memmove_69(i16* %2, i16* %109, i32 %110) #4
  br label %239

178:                                              ; preds = %172
  %179 = icmp slt i32 %110, 4
  br i1 %179, label %211, label %180

180:                                              ; preds = %178
  %181 = load i16, i16* %109, align 2
  %182 = add i16 %181, -65
  %183 = icmp ult i16 %182, 26
  %184 = add i16 %181, 32
  %185 = select i1 %183, i16 %184, i16 %181
  %186 = icmp eq i16 %185, 120
  br i1 %186, label %187, label %211

187:                                              ; preds = %180
  %188 = getelementptr inbounds i16, i16* %109, i64 1
  %189 = load i16, i16* %188, align 2
  %190 = add i16 %189, -65
  %191 = icmp ult i16 %190, 26
  %192 = add i16 %189, 32
  %193 = select i1 %191, i16 %192, i16 %189
  %194 = icmp eq i16 %193, 110
  br i1 %194, label %195, label %211

195:                                              ; preds = %187
  %196 = getelementptr inbounds i16, i16* %109, i64 2
  %197 = load i16, i16* %196, align 2
  %198 = add i16 %197, -65
  %199 = icmp ult i16 %198, 26
  %200 = add i16 %197, 32
  %201 = select i1 %199, i16 %200, i16 %197
  %202 = icmp eq i16 %201, 45
  br i1 %202, label %203, label %211

203:                                              ; preds = %195
  %204 = getelementptr inbounds i16, i16* %109, i64 3
  %205 = load i16, i16* %204, align 2
  %206 = add i16 %205, -65
  %207 = icmp ult i16 %206, 26
  %208 = add i16 %205, 32
  %209 = select i1 %207, i16 %208, i16 %205
  %210 = icmp eq i16 %209, 45
  br i1 %210, label %238, label %211

211:                                              ; preds = %203, %178, %180, %187, %195
  %212 = call i32 @u_strToPunycode_69(i16* %109, i32 %110, i16* nonnull %15, i32 100, i8* null, i32* %7) #4
  %213 = load i32, i32* %7, align 4
  %214 = icmp eq i32 %213, 15
  br i1 %214, label %215, label %225

215:                                              ; preds = %211
  %216 = shl nsw i32 %212, 1
  %217 = sext i32 %216 to i64
  %218 = call noalias i8* @uprv_malloc_69(i64 %217) #5
  %219 = bitcast i8* %218 to i16*
  %220 = icmp eq i8* %218, null
  br i1 %220, label %221, label %222

221:                                              ; preds = %215
  store i32 7, i32* %7, align 4
  br label %244

222:                                              ; preds = %215
  store i32 0, i32* %7, align 4
  %223 = call i32 @u_strToPunycode_69(i16* %109, i32 %110, i16* nonnull %219, i32 %212, i8* null, i32* %7) #4
  %224 = load i32, i32* %7, align 4
  br label %225

225:                                              ; preds = %222, %211
  %226 = phi i32 [ %224, %222 ], [ %213, %211 ]
  %227 = phi i16* [ %219, %222 ], [ %15, %211 ]
  %228 = phi i32 [ %223, %222 ], [ %212, %211 ]
  %229 = icmp slt i32 %226, 1
  br i1 %229, label %230, label %244

230:                                              ; preds = %225
  %231 = add nsw i32 %228, 4
  %232 = icmp sgt i32 %231, %3
  br i1 %232, label %233, label %234

233:                                              ; preds = %230
  store i32 15, i32* %7, align 4
  br label %244

234:                                              ; preds = %230
  %235 = call i16* @u_memcpy_69(i16* %2, i16* getelementptr inbounds ([4 x i16], [4 x i16]* @_ZL10ACE_PREFIX, i64 0, i64 0), i32 4) #4
  %236 = getelementptr inbounds i16, i16* %2, i64 4
  %237 = call i16* @u_memcpy_69(i16* %236, i16* %227, i32 %228) #4
  br label %239

238:                                              ; preds = %203
  store i32 66564, i32* %7, align 4
  call void @uprv_syntaxError_69(i16* %109, i32 0, i32 %110, %struct.UParseError* %6) #4
  br label %244

239:                                              ; preds = %234, %176
  %240 = phi i16* [ %15, %176 ], [ %227, %234 ]
  %241 = phi i32 [ %110, %176 ], [ %231, %234 ]
  %242 = icmp sgt i32 %241, 63
  br i1 %242, label %243, label %244

243:                                              ; preds = %239
  store i32 66566, i32* %7, align 4
  br label %244

244:                                              ; preds = %174, %225, %107, %239, %243, %167, %169, %168, %238, %233, %221, %118
  %245 = phi i16* [ %15, %107 ], [ %15, %118 ], [ %15, %167 ], [ %15, %168 ], [ %15, %169 ], [ %240, %243 ], [ %240, %239 ], [ %15, %238 ], [ null, %221 ], [ %227, %225 ], [ %227, %233 ], [ %15, %174 ]
  %246 = phi i32 [ 0, %107 ], [ 0, %118 ], [ 0, %167 ], [ 0, %168 ], [ 0, %169 ], [ %241, %243 ], [ %241, %239 ], [ 0, %238 ], [ 0, %221 ], [ 0, %225 ], [ %231, %233 ], [ %110, %174 ]
  %247 = icmp eq i16* %109, %14
  br i1 %247, label %254, label %249

248:                                              ; preds = %95, %25
  store i32 7, i32* %7, align 4
  br label %249

249:                                              ; preds = %248, %244
  %250 = phi i32 [ %246, %244 ], [ 0, %248 ]
  %251 = phi i16* [ %245, %244 ], [ %15, %248 ]
  %252 = phi i16* [ %109, %244 ], [ null, %248 ]
  %253 = bitcast i16* %252 to i8*
  call void @uprv_free_69(i8* %253) #4
  br label %254

254:                                              ; preds = %244, %249
  %255 = phi i32 [ %246, %244 ], [ %250, %249 ]
  %256 = phi i16* [ %245, %244 ], [ %251, %249 ]
  %257 = icmp eq i16* %256, %15
  br i1 %257, label %260, label %258

258:                                              ; preds = %254
  %259 = bitcast i16* %256 to i8*
  call void @uprv_free_69(i8* %259) #4
  br label %260

260:                                              ; preds = %254, %258
  call void @uprv_free_69(i8* null) #4
  %261 = call i32 @u_terminateUChars_69(i16* %2, i32 %3, i32 %255, i32* %7) #4
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %13) #4
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %12) #4
  ret i32 %261
}

declare void @usprep_close_69(%struct.UStringPrepProfile*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @uidna_toUnicode_69(i16*, i32, i16*, i32, i32, %struct.UParseError*, i32*) local_unnamed_addr #0 {
  %8 = icmp eq i32* %6, null
  br i1 %8, label %29, label %9

9:                                                ; preds = %7
  %10 = load i32, i32* %6, align 4
  %11 = icmp slt i32 %10, 1
  br i1 %11, label %12, label %29

12:                                               ; preds = %9
  %13 = icmp eq i16* %0, null
  %14 = icmp slt i32 %1, -1
  %15 = or i1 %13, %14
  %16 = icmp slt i32 %3, 0
  %17 = or i1 %15, %16
  br i1 %17, label %22, label %18

18:                                               ; preds = %12
  %19 = icmp eq i16* %2, null
  %20 = icmp sgt i32 %3, 0
  %21 = and i1 %19, %20
  br i1 %21, label %22, label %23

22:                                               ; preds = %18, %12
  store i32 1, i32* %6, align 4
  br label %29

23:                                               ; preds = %18
  %24 = tail call %struct.UStringPrepProfile* @usprep_openByType_69(i32 0, i32* nonnull %6) #4
  %25 = load i32, i32* %6, align 4
  %26 = icmp slt i32 %25, 1
  br i1 %26, label %27, label %29

27:                                               ; preds = %23
  %28 = tail call fastcc i32 @_ZL19_internal_toUnicodePKDsiPDsiiP18UStringPrepProfileP11UParseErrorP10UErrorCode(i16* nonnull %0, i32 %1, i16* %2, i32 %3, i32 %4, %struct.UStringPrepProfile* %24, %struct.UParseError* %5, i32* nonnull %6)
  tail call void @usprep_close_69(%struct.UStringPrepProfile* %24) #4
  br label %29

29:                                               ; preds = %27, %23, %7, %9, %22
  %30 = phi i32 [ 0, %22 ], [ 0, %9 ], [ 0, %7 ], [ %28, %27 ], [ -1, %23 ]
  ret i32 %30
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZL19_internal_toUnicodePKDsiPDsiiP18UStringPrepProfileP11UParseErrorP10UErrorCode(i16*, i32, i16*, i32, i32, %struct.UStringPrepProfile*, %struct.UParseError*, i32*) unnamed_addr #0 {
  %9 = alloca [100 x i16], align 16
  %10 = alloca [100 x i16], align 16
  %11 = alloca [100 x i16], align 16
  %12 = and i32 %4, 1
  %13 = bitcast [100 x i16]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %13) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %13, i8 -86, i64 200, i1 false)
  %14 = bitcast [100 x i16]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %14) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %14, i8 -86, i64 200, i1 false)
  %15 = bitcast [100 x i16]* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %15) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %15, i8 -86, i64 200, i1 false)
  %16 = getelementptr inbounds [100 x i16], [100 x i16]* %9, i64 0, i64 0
  %17 = getelementptr inbounds [100 x i16], [100 x i16]* %10, i64 0, i64 0
  %18 = getelementptr inbounds [100 x i16], [100 x i16]* %11, i64 0, i64 0
  %19 = icmp eq i32 %1, -1
  br i1 %19, label %20, label %33

20:                                               ; preds = %8
  %21 = load i16, i16* %0, align 2
  %22 = icmp eq i16 %21, 0
  br i1 %22, label %214, label %23

23:                                               ; preds = %20, %23
  %24 = phi i64 [ %29, %23 ], [ 0, %20 ]
  %25 = phi i16 [ %31, %23 ], [ %21, %20 ]
  %26 = phi i8 [ %28, %23 ], [ 1, %20 ]
  %27 = icmp ugt i16 %25, 127
  %28 = select i1 %27, i8 0, i8 %26
  %29 = add nuw i64 %24, 1
  %30 = getelementptr inbounds i16, i16* %0, i64 %29
  %31 = load i16, i16* %30, align 2
  %32 = icmp eq i16 %31, 0
  br i1 %32, label %45, label %23

33:                                               ; preds = %8
  %34 = icmp sgt i32 %1, 0
  br i1 %34, label %35, label %247

35:                                               ; preds = %33
  %36 = zext i32 %1 to i64
  br label %39

37:                                               ; preds = %39
  %38 = icmp eq i64 %44, %36
  br i1 %38, label %68, label %39

39:                                               ; preds = %37, %35
  %40 = phi i64 [ 0, %35 ], [ %44, %37 ]
  %41 = getelementptr inbounds i16, i16* %0, i64 %40
  %42 = load i16, i16* %41, align 2
  %43 = icmp ugt i16 %42, 127
  %44 = add nuw nsw i64 %40, 1
  br i1 %43, label %48, label %37

45:                                               ; preds = %23
  %46 = trunc i64 %29 to i32
  %47 = icmp eq i8 %28, 0
  br i1 %47, label %48, label %68

48:                                               ; preds = %39, %45
  %49 = phi i32 [ %46, %45 ], [ %1, %39 ]
  %50 = call i32 @usprep_prepare_69(%struct.UStringPrepProfile* %5, i16* %0, i32 %49, i16* nonnull %16, i32 100, i32 %12, %struct.UParseError* %6, i32* %7) #4
  %51 = load i32, i32* %7, align 4
  %52 = icmp eq i32 %51, 15
  br i1 %52, label %53, label %63

53:                                               ; preds = %48
  %54 = shl nsw i32 %50, 1
  %55 = sext i32 %54 to i64
  %56 = call noalias i8* @uprv_malloc_69(i64 %55) #5
  %57 = bitcast i8* %56 to i16*
  %58 = icmp eq i8* %56, null
  br i1 %58, label %59, label %60

59:                                               ; preds = %53
  store i32 7, i32* %7, align 4
  br label %220

60:                                               ; preds = %53
  store i32 0, i32* %7, align 4
  %61 = call i32 @usprep_prepare_69(%struct.UStringPrepProfile* %5, i16* %0, i32 %49, i16* nonnull %57, i32 %50, i32 %12, %struct.UParseError* %6, i32* %7) #4
  %62 = load i32, i32* %7, align 4
  br label %63

63:                                               ; preds = %60, %48
  %64 = phi i32 [ %62, %60 ], [ %51, %48 ]
  %65 = phi i16* [ %57, %60 ], [ %16, %48 ]
  %66 = phi i32 [ %61, %60 ], [ %50, %48 ]
  %67 = icmp slt i32 %64, 1
  br i1 %67, label %68, label %220

68:                                               ; preds = %37, %45, %63
  %69 = phi i32 [ %49, %63 ], [ %46, %45 ], [ %1, %37 ]
  %70 = phi i16* [ %65, %63 ], [ %0, %45 ], [ %0, %37 ]
  %71 = phi i32 [ %66, %63 ], [ %46, %45 ], [ %1, %37 ]
  %72 = icmp slt i32 %71, 4
  br i1 %72, label %214, label %73

73:                                               ; preds = %68
  %74 = load i16, i16* %70, align 2
  %75 = add i16 %74, -65
  %76 = icmp ult i16 %75, 26
  %77 = add i16 %74, 32
  %78 = select i1 %76, i16 %77, i16 %74
  %79 = icmp eq i16 %78, 120
  br i1 %79, label %80, label %214

80:                                               ; preds = %73
  %81 = getelementptr inbounds i16, i16* %70, i64 1
  %82 = load i16, i16* %81, align 2
  %83 = add i16 %82, -65
  %84 = icmp ult i16 %83, 26
  %85 = add i16 %82, 32
  %86 = select i1 %84, i16 %85, i16 %82
  %87 = icmp eq i16 %86, 110
  br i1 %87, label %88, label %214

88:                                               ; preds = %80
  %89 = getelementptr inbounds i16, i16* %70, i64 2
  %90 = load i16, i16* %89, align 2
  %91 = add i16 %90, -65
  %92 = icmp ult i16 %91, 26
  %93 = add i16 %90, 32
  %94 = select i1 %92, i16 %93, i16 %90
  %95 = icmp eq i16 %94, 45
  br i1 %95, label %96, label %214

96:                                               ; preds = %88
  %97 = getelementptr inbounds i16, i16* %70, i64 3
  %98 = load i16, i16* %97, align 2
  %99 = add i16 %98, -65
  %100 = icmp ult i16 %99, 26
  %101 = add i16 %98, 32
  %102 = select i1 %100, i16 %101, i16 %98
  %103 = icmp eq i16 %102, 45
  br i1 %103, label %104, label %214

104:                                              ; preds = %96
  %105 = getelementptr inbounds i16, i16* %70, i64 4
  %106 = add nsw i32 %71, -4
  %107 = call i32 @u_strFromPunycode_69(i16* %105, i32 %106, i16* nonnull %17, i32 100, i8* null, i32* %7) #4
  %108 = load i32, i32* %7, align 4
  %109 = icmp eq i32 %108, 15
  br i1 %109, label %110, label %119

110:                                              ; preds = %104
  %111 = shl nsw i32 %107, 1
  %112 = sext i32 %111 to i64
  %113 = call noalias i8* @uprv_malloc_69(i64 %112) #5
  %114 = bitcast i8* %113 to i16*
  %115 = icmp eq i8* %113, null
  br i1 %115, label %116, label %117

116:                                              ; preds = %110
  store i32 7, i32* %7, align 4
  br label %220

117:                                              ; preds = %110
  store i32 0, i32* %7, align 4
  %118 = call i32 @u_strFromPunycode_69(i16* %105, i32 %106, i16* nonnull %114, i32 %107, i8* null, i32* %7) #4
  br label %119

119:                                              ; preds = %117, %104
  %120 = phi i16* [ %114, %117 ], [ %17, %104 ]
  %121 = phi i32 [ %118, %117 ], [ %107, %104 ]
  %122 = icmp eq i32* %7, null
  br i1 %122, label %137, label %123

123:                                              ; preds = %119
  %124 = load i32, i32* %7, align 4
  %125 = icmp slt i32 %124, 1
  br i1 %125, label %126, label %140

126:                                              ; preds = %123
  %127 = icmp eq i16* %120, null
  %128 = icmp slt i32 %121, -1
  %129 = or i1 %127, %128
  br i1 %129, label %134, label %130

130:                                              ; preds = %126
  %131 = call %struct.UStringPrepProfile* @usprep_openByType_69(i32 0, i32* nonnull %7) #4
  %132 = load i32, i32* %7, align 4
  %133 = icmp slt i32 %132, 1
  br i1 %133, label %135, label %140

134:                                              ; preds = %126
  store i32 1, i32* %7, align 4
  br label %220

135:                                              ; preds = %130
  %136 = call fastcc i32 @_ZL17_internal_toASCIIPKDsiPDsiiP18UStringPrepProfileP11UParseErrorP10UErrorCode(i16* nonnull %120, i32 %121, i16* nonnull %18, i32 100, i32 %4, %struct.UStringPrepProfile* %131, %struct.UParseError* %6, i32* nonnull %7) #4
  call void @usprep_close_69(%struct.UStringPrepProfile* %131) #4
  br label %137

137:                                              ; preds = %135, %119
  %138 = phi i32 [ %136, %135 ], [ 0, %119 ]
  %139 = load i32, i32* %7, align 4
  br label %140

140:                                              ; preds = %137, %123, %130
  %141 = phi i32 [ %139, %137 ], [ %124, %123 ], [ %132, %130 ]
  %142 = phi i32 [ %138, %137 ], [ 0, %123 ], [ -1, %130 ]
  %143 = icmp eq i32 %141, 15
  br i1 %143, label %144, label %166

144:                                              ; preds = %140
  %145 = shl nsw i32 %142, 1
  %146 = sext i32 %145 to i64
  %147 = call noalias i8* @uprv_malloc_69(i64 %146) #5
  %148 = bitcast i8* %147 to i16*
  %149 = icmp eq i8* %147, null
  br i1 %149, label %150, label %151

150:                                              ; preds = %144
  store i32 7, i32* %7, align 4
  br label %220

151:                                              ; preds = %144
  store i32 0, i32* %7, align 4
  br i1 %122, label %171, label %152

152:                                              ; preds = %151
  %153 = icmp eq i16* %120, null
  %154 = icmp slt i32 %121, -1
  %155 = or i1 %153, %154
  %156 = icmp slt i32 %142, 0
  %157 = or i1 %155, %156
  br i1 %157, label %158, label %159

158:                                              ; preds = %152
  store i32 1, i32* %7, align 4
  br label %220

159:                                              ; preds = %152
  %160 = call %struct.UStringPrepProfile* @usprep_openByType_69(i32 0, i32* nonnull %7) #4
  %161 = load i32, i32* %7, align 4
  %162 = icmp slt i32 %161, 1
  br i1 %162, label %163, label %220

163:                                              ; preds = %159
  %164 = call fastcc i32 @_ZL17_internal_toASCIIPKDsiPDsiiP18UStringPrepProfileP11UParseErrorP10UErrorCode(i16* nonnull %120, i32 %121, i16* nonnull %148, i32 %142, i32 %4, %struct.UStringPrepProfile* %160, %struct.UParseError* %6, i32* nonnull %7) #4
  call void @usprep_close_69(%struct.UStringPrepProfile* %160) #4
  %165 = load i32, i32* %7, align 4
  br label %166

166:                                              ; preds = %163, %140
  %167 = phi i32 [ %141, %140 ], [ %165, %163 ]
  %168 = phi i16* [ %18, %140 ], [ %148, %163 ]
  %169 = phi i32 [ %142, %140 ], [ %164, %163 ]
  %170 = icmp slt i32 %167, 1
  br i1 %170, label %171, label %220

171:                                              ; preds = %151, %166
  %172 = phi i32 [ %169, %166 ], [ 0, %151 ]
  %173 = phi i16* [ %168, %166 ], [ %148, %151 ]
  %174 = icmp eq i32 %71, %172
  br i1 %174, label %179, label %175

175:                                              ; preds = %171
  %176 = icmp slt i32 %71, %172
  br i1 %176, label %179, label %177

177:                                              ; preds = %175
  %178 = icmp eq i32 %172, 0
  br i1 %178, label %209, label %179

179:                                              ; preds = %175, %171, %177
  %180 = phi i32 [ 1, %177 ], [ 0, %171 ], [ -1, %175 ]
  %181 = phi i32 [ %172, %177 ], [ %71, %171 ], [ %71, %175 ]
  %182 = zext i32 %181 to i64
  br label %183

183:                                              ; preds = %203, %179
  %184 = phi i64 [ 0, %179 ], [ %204, %203 ]
  %185 = getelementptr inbounds i16, i16* %70, i64 %184
  %186 = load i16, i16* %185, align 2
  %187 = getelementptr inbounds i16, i16* %173, i64 %184
  %188 = load i16, i16* %187, align 2
  %189 = icmp eq i16 %186, %188
  br i1 %189, label %203, label %190

190:                                              ; preds = %183
  %191 = add i16 %186, -65
  %192 = icmp ult i16 %191, 26
  %193 = add i16 %186, 32
  %194 = select i1 %192, i16 %193, i16 %186
  %195 = zext i16 %194 to i32
  %196 = add i16 %188, -65
  %197 = icmp ult i16 %196, 26
  %198 = add i16 %188, 32
  %199 = select i1 %197, i16 %198, i16 %188
  %200 = zext i16 %199 to i32
  %201 = sub nsw i32 %195, %200
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %203, label %206

203:                                              ; preds = %190, %183
  %204 = add nuw nsw i64 %184, 1
  %205 = icmp eq i64 %204, %182
  br i1 %205, label %206, label %183

206:                                              ; preds = %190, %203
  %207 = phi i32 [ %201, %190 ], [ %180, %203 ]
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %210, label %209

209:                                              ; preds = %177, %206
  store i32 66565, i32* %7, align 4
  br label %220

210:                                              ; preds = %206
  %211 = icmp sgt i32 %121, %3
  br i1 %211, label %220, label %212

212:                                              ; preds = %210
  %213 = call i16* @u_memmove_69(i16* %2, i16* %120, i32 %121) #4
  br label %220

214:                                              ; preds = %20, %96, %68, %73, %80, %88
  %215 = phi i16* [ %70, %96 ], [ %70, %68 ], [ %70, %73 ], [ %70, %80 ], [ %70, %88 ], [ %0, %20 ]
  %216 = phi i32 [ %69, %96 ], [ %69, %68 ], [ %69, %73 ], [ %69, %80 ], [ %69, %88 ], [ 0, %20 ]
  %217 = icmp sgt i32 %216, %3
  br i1 %217, label %220, label %218

218:                                              ; preds = %214
  %219 = call i16* @u_memmove_69(i16* %2, i16* %0, i32 %216) #4
  br label %220

220:                                              ; preds = %159, %158, %134, %218, %214, %63, %210, %166, %212, %209, %150, %116, %59
  %221 = phi i32 [ %49, %59 ], [ %49, %63 ], [ %69, %116 ], [ %69, %150 ], [ %69, %166 ], [ %69, %209 ], [ %69, %212 ], [ %69, %210 ], [ %216, %214 ], [ %216, %218 ], [ %69, %134 ], [ %69, %158 ], [ %69, %159 ]
  %222 = phi i16* [ null, %59 ], [ %65, %63 ], [ %70, %116 ], [ %70, %150 ], [ %70, %166 ], [ %70, %209 ], [ %70, %212 ], [ %70, %210 ], [ %215, %214 ], [ %215, %218 ], [ %70, %134 ], [ %70, %158 ], [ %70, %159 ]
  %223 = phi i16* [ %17, %59 ], [ %17, %63 ], [ null, %116 ], [ %120, %150 ], [ %120, %166 ], [ %120, %209 ], [ %120, %212 ], [ %120, %210 ], [ %17, %214 ], [ %17, %218 ], [ %120, %134 ], [ %120, %158 ], [ %120, %159 ]
  %224 = phi i32 [ 0, %59 ], [ 0, %63 ], [ 0, %116 ], [ 0, %150 ], [ 0, %166 ], [ 0, %209 ], [ %121, %212 ], [ %121, %210 ], [ %216, %214 ], [ %216, %218 ], [ 0, %134 ], [ 0, %158 ], [ 0, %159 ]
  %225 = icmp eq i16* %222, %16
  %226 = icmp eq i16* %222, %0
  %227 = or i1 %225, %226
  br i1 %227, label %230, label %228

228:                                              ; preds = %220
  %229 = bitcast i16* %222 to i8*
  call void @uprv_free_69(i8* %229) #4
  br label %230

230:                                              ; preds = %220, %228
  %231 = icmp eq i16* %223, %17
  br i1 %231, label %234, label %232

232:                                              ; preds = %230
  %233 = bitcast i16* %223 to i8*
  call void @uprv_free_69(i8* %233) #4
  br label %234

234:                                              ; preds = %230, %232
  call void @uprv_free_69(i8* null) #4
  %235 = load i32, i32* %7, align 4
  %236 = icmp slt i32 %235, 1
  br i1 %236, label %244, label %237

237:                                              ; preds = %234
  %238 = icmp eq i16* %2, null
  %239 = icmp sgt i32 %221, %3
  %240 = or i1 %238, %239
  br i1 %240, label %243, label %241

241:                                              ; preds = %237
  %242 = call i16* @u_memmove_69(i16* nonnull %2, i16* %0, i32 %221) #4
  br label %243

243:                                              ; preds = %237, %241
  store i32 0, i32* %7, align 4
  br label %244

244:                                              ; preds = %234, %243
  %245 = phi i32 [ %221, %243 ], [ %224, %234 ]
  %246 = call i32 @u_terminateUChars_69(i16* %2, i32 %3, i32 %245, i32* %7) #4
  br label %247

247:                                              ; preds = %33, %244
  %248 = phi i32 [ %246, %244 ], [ 0, %33 ]
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %15) #4
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %14) #4
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %13) #4
  ret i32 %248
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @uidna_IDNToASCII_69(i16*, i32, i16*, i32, i32, %struct.UParseError*, i32*) local_unnamed_addr #0 {
  %8 = icmp eq i32* %6, null
  br i1 %8, label %123, label %9

9:                                                ; preds = %7
  %10 = load i32, i32* %6, align 4
  %11 = icmp slt i32 %10, 1
  br i1 %11, label %12, label %123

12:                                               ; preds = %9
  %13 = icmp eq i16* %0, null
  %14 = icmp slt i32 %1, -1
  %15 = or i1 %13, %14
  %16 = icmp slt i32 %3, 0
  %17 = or i1 %15, %16
  br i1 %17, label %22, label %18

18:                                               ; preds = %12
  %19 = icmp eq i16* %2, null
  %20 = icmp sgt i32 %3, 0
  %21 = and i1 %19, %20
  br i1 %21, label %22, label %23

22:                                               ; preds = %18, %12
  store i32 1, i32* %6, align 4
  br label %123

23:                                               ; preds = %18
  %24 = tail call %struct.UStringPrepProfile* @usprep_openByType_69(i32 0, i32* nonnull %6) #4
  %25 = load i32, i32* %6, align 4
  %26 = icmp slt i32 %25, 1
  br i1 %26, label %27, label %123

27:                                               ; preds = %23
  %28 = ptrtoint i16* %0 to i64
  br label %29

29:                                               ; preds = %111, %27
  %30 = phi i8 [ %74, %111 ], [ 0, %27 ]
  %31 = phi i32 [ %110, %111 ], [ 0, %27 ]
  %32 = phi i16* [ %76, %111 ], [ %0, %27 ]
  %33 = phi i16* [ %108, %111 ], [ %2, %27 ]
  %34 = phi i32 [ %116, %111 ], [ %1, %27 ]
  %35 = phi i32 [ %109, %111 ], [ %3, %27 ]
  %36 = icmp eq i32 %34, -1
  %37 = icmp sgt i32 %34, 0
  %38 = zext i32 %34 to i64
  %39 = sext i32 %34 to i64
  %40 = icmp sgt i32 %34, 0
  br label %41

41:                                               ; preds = %29, %107
  %42 = phi i8 [ %74, %107 ], [ %30, %29 ]
  %43 = phi i32 [ %110, %107 ], [ %31, %29 ]
  %44 = phi i16* [ %76, %107 ], [ %32, %29 ]
  %45 = phi i16* [ %108, %107 ], [ %33, %29 ]
  %46 = phi i32 [ %109, %107 ], [ %35, %29 ]
  br i1 %36, label %48, label %47

47:                                               ; preds = %41
  br i1 %37, label %61, label %72

48:                                               ; preds = %41, %55
  %49 = phi i64 [ %56, %55 ], [ 0, %41 ]
  %50 = getelementptr inbounds i16, i16* %44, i64 %49
  %51 = load i16, i16* %50, align 2
  switch i16 %51, label %55 [
    i16 0, label %52
    i16 46, label %57
    i16 12290, label %57
    i16 -242, label %57
    i16 -159, label %57
  ]

52:                                               ; preds = %48
  %53 = trunc i64 %49 to i32
  %54 = and i64 %49, 4294967295
  br label %72

55:                                               ; preds = %48
  %56 = add nuw i64 %49, 1
  br label %48

57:                                               ; preds = %48, %48, %48, %48
  %58 = trunc i64 %49 to i32
  %59 = add i64 %49, 1
  %60 = and i64 %59, 4294967295
  br label %72

61:                                               ; preds = %47, %65
  %62 = phi i64 [ %66, %65 ], [ 0, %47 ]
  %63 = getelementptr inbounds i16, i16* %44, i64 %62
  %64 = load i16, i16* %63, align 2
  switch i16 %64, label %65 [
    i16 46, label %68
    i16 12290, label %68
    i16 -242, label %68
    i16 -159, label %68
  ]

65:                                               ; preds = %61
  %66 = add nuw nsw i64 %62, 1
  %67 = icmp eq i64 %66, %38
  br i1 %67, label %72, label %61

68:                                               ; preds = %61, %61, %61, %61
  %69 = trunc i64 %62 to i32
  %70 = add nuw i64 %62, 1
  %71 = and i64 %70, 4294967295
  br label %72

72:                                               ; preds = %47, %65, %52, %57, %68
  %73 = phi i64 [ %54, %52 ], [ %60, %57 ], [ %71, %68 ], [ %39, %65 ], [ %39, %47 ]
  %74 = phi i8 [ 1, %52 ], [ %42, %57 ], [ %42, %68 ], [ 1, %65 ], [ 1, %47 ]
  %75 = phi i32 [ %53, %52 ], [ %58, %57 ], [ %69, %68 ], [ 0, %47 ], [ %34, %65 ]
  %76 = getelementptr inbounds i16, i16* %44, i64 %73
  %77 = icmp eq i32 %75, 0
  %78 = icmp ne i8 %74, 0
  %79 = and i1 %78, %77
  br i1 %79, label %80, label %82

80:                                               ; preds = %72
  %81 = load i32, i32* %6, align 4
  br label %87

82:                                               ; preds = %72
  %83 = tail call fastcc i32 @_ZL17_internal_toASCIIPKDsiPDsiiP18UStringPrepProfileP11UParseErrorP10UErrorCode(i16* %44, i32 %75, i16* %45, i32 %46, i32 %4, %struct.UStringPrepProfile* %24, %struct.UParseError* %5, i32* nonnull %6)
  %84 = load i32, i32* %6, align 4
  %85 = icmp eq i32 %84, 15
  br i1 %85, label %86, label %87

86:                                               ; preds = %82
  store i32 0, i32* %6, align 4
  br label %91

87:                                               ; preds = %80, %82
  %88 = phi i32 [ %81, %80 ], [ %84, %82 ]
  %89 = phi i32 [ 0, %80 ], [ %83, %82 ]
  %90 = icmp slt i32 %88, 1
  br i1 %90, label %91, label %117

91:                                               ; preds = %86, %87
  %92 = phi i32 [ %83, %86 ], [ %89, %87 ]
  %93 = phi i32 [ 0, %86 ], [ %46, %87 ]
  %94 = add nsw i32 %92, %43
  %95 = icmp sgt i32 %93, %92
  %96 = sext i32 %92 to i64
  %97 = getelementptr inbounds i16, i16* %45, i64 %96
  %98 = sub nsw i32 %93, %92
  %99 = select i1 %95, i16* %97, i16* %45
  %100 = select i1 %95, i32 %98, i32 0
  %101 = icmp eq i8 %74, 1
  br i1 %101, label %117, label %102

102:                                              ; preds = %91
  %103 = icmp sgt i32 %100, 0
  br i1 %103, label %104, label %107

104:                                              ; preds = %102
  %105 = getelementptr inbounds i16, i16* %99, i64 1
  store i16 46, i16* %99, align 2
  %106 = add nsw i32 %100, -1
  br label %107

107:                                              ; preds = %104, %102
  %108 = phi i16* [ %105, %104 ], [ %99, %102 ]
  %109 = phi i32 [ %106, %104 ], [ 0, %102 ]
  %110 = add nsw i32 %94, 1
  br i1 %40, label %111, label %41

111:                                              ; preds = %107
  %112 = ptrtoint i16* %76 to i64
  %113 = sub i64 %112, %28
  %114 = lshr exact i64 %113, 1
  %115 = trunc i64 %114 to i32
  %116 = sub i32 %1, %115
  br label %29

117:                                              ; preds = %87, %91
  %118 = phi i32 [ %43, %87 ], [ %94, %91 ]
  %119 = icmp sgt i32 %118, 255
  br i1 %119, label %120, label %121

120:                                              ; preds = %117
  store i32 66568, i32* %6, align 4
  br label %121

121:                                              ; preds = %120, %117
  tail call void @usprep_close_69(%struct.UStringPrepProfile* %24) #4
  %122 = tail call i32 @u_terminateUChars_69(i16* %2, i32 %3, i32 %118, i32* nonnull %6) #4
  br label %123

123:                                              ; preds = %121, %23, %7, %9, %22
  %124 = phi i32 [ 0, %22 ], [ 0, %9 ], [ 0, %7 ], [ %122, %121 ], [ 0, %23 ]
  ret i32 %124
}

declare i32 @u_terminateUChars_69(i16*, i32, i32, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @uidna_IDNToUnicode_69(i16*, i32, i16*, i32, i32, %struct.UParseError*, i32*) local_unnamed_addr #0 {
  %8 = icmp eq i32* %6, null
  br i1 %8, label %117, label %9

9:                                                ; preds = %7
  %10 = load i32, i32* %6, align 4
  %11 = icmp slt i32 %10, 1
  br i1 %11, label %12, label %117

12:                                               ; preds = %9
  %13 = icmp eq i16* %0, null
  %14 = icmp slt i32 %1, -1
  %15 = or i1 %13, %14
  %16 = icmp slt i32 %3, 0
  %17 = or i1 %15, %16
  br i1 %17, label %22, label %18

18:                                               ; preds = %12
  %19 = icmp eq i16* %2, null
  %20 = icmp sgt i32 %3, 0
  %21 = and i1 %19, %20
  br i1 %21, label %22, label %23

22:                                               ; preds = %18, %12
  store i32 1, i32* %6, align 4
  br label %117

23:                                               ; preds = %18
  %24 = tail call %struct.UStringPrepProfile* @usprep_openByType_69(i32 0, i32* nonnull %6) #4
  %25 = load i32, i32* %6, align 4
  %26 = icmp slt i32 %25, 1
  br i1 %26, label %27, label %117

27:                                               ; preds = %23
  %28 = ptrtoint i16* %0 to i64
  br label %29

29:                                               ; preds = %105, %27
  %30 = phi i8 [ %74, %105 ], [ 0, %27 ]
  %31 = phi i32 [ %104, %105 ], [ 0, %27 ]
  %32 = phi i16* [ %76, %105 ], [ %0, %27 ]
  %33 = phi i16* [ %102, %105 ], [ %2, %27 ]
  %34 = phi i32 [ %110, %105 ], [ %1, %27 ]
  %35 = phi i32 [ %103, %105 ], [ %3, %27 ]
  %36 = icmp eq i32 %34, -1
  %37 = icmp sgt i32 %34, 0
  %38 = zext i32 %34 to i64
  %39 = sext i32 %34 to i64
  %40 = icmp sgt i32 %34, 0
  br label %41

41:                                               ; preds = %29, %101
  %42 = phi i8 [ %74, %101 ], [ %30, %29 ]
  %43 = phi i32 [ %104, %101 ], [ %31, %29 ]
  %44 = phi i16* [ %76, %101 ], [ %32, %29 ]
  %45 = phi i16* [ %102, %101 ], [ %33, %29 ]
  %46 = phi i32 [ %103, %101 ], [ %35, %29 ]
  br i1 %36, label %48, label %47

47:                                               ; preds = %41
  br i1 %37, label %61, label %72

48:                                               ; preds = %41, %55
  %49 = phi i64 [ %56, %55 ], [ 0, %41 ]
  %50 = getelementptr inbounds i16, i16* %44, i64 %49
  %51 = load i16, i16* %50, align 2
  switch i16 %51, label %55 [
    i16 0, label %52
    i16 46, label %57
    i16 12290, label %57
    i16 -242, label %57
    i16 -159, label %57
  ]

52:                                               ; preds = %48
  %53 = trunc i64 %49 to i32
  %54 = and i64 %49, 4294967295
  br label %72

55:                                               ; preds = %48
  %56 = add nuw i64 %49, 1
  br label %48

57:                                               ; preds = %48, %48, %48, %48
  %58 = trunc i64 %49 to i32
  %59 = add i64 %49, 1
  %60 = and i64 %59, 4294967295
  br label %72

61:                                               ; preds = %47, %65
  %62 = phi i64 [ %66, %65 ], [ 0, %47 ]
  %63 = getelementptr inbounds i16, i16* %44, i64 %62
  %64 = load i16, i16* %63, align 2
  switch i16 %64, label %65 [
    i16 46, label %68
    i16 12290, label %68
    i16 -242, label %68
    i16 -159, label %68
  ]

65:                                               ; preds = %61
  %66 = add nuw nsw i64 %62, 1
  %67 = icmp eq i64 %66, %38
  br i1 %67, label %72, label %61

68:                                               ; preds = %61, %61, %61, %61
  %69 = trunc i64 %62 to i32
  %70 = add nuw i64 %62, 1
  %71 = and i64 %70, 4294967295
  br label %72

72:                                               ; preds = %47, %65, %52, %57, %68
  %73 = phi i64 [ %54, %52 ], [ %60, %57 ], [ %71, %68 ], [ %39, %65 ], [ %39, %47 ]
  %74 = phi i8 [ 1, %52 ], [ %42, %57 ], [ %42, %68 ], [ 1, %65 ], [ 1, %47 ]
  %75 = phi i32 [ %53, %52 ], [ %58, %57 ], [ %69, %68 ], [ 0, %47 ], [ %34, %65 ]
  %76 = getelementptr inbounds i16, i16* %44, i64 %73
  %77 = tail call fastcc i32 @_ZL19_internal_toUnicodePKDsiPDsiiP18UStringPrepProfileP11UParseErrorP10UErrorCode(i16* %44, i32 %75, i16* %45, i32 %46, i32 %4, %struct.UStringPrepProfile* %24, %struct.UParseError* %5, i32* nonnull %6)
  %78 = load i32, i32* %6, align 4
  %79 = icmp eq i32 %78, 15
  br i1 %79, label %80, label %81

80:                                               ; preds = %72
  store i32 0, i32* %6, align 4
  br label %83

81:                                               ; preds = %72
  %82 = icmp slt i32 %78, 1
  br i1 %82, label %83, label %111

83:                                               ; preds = %80, %81
  %84 = phi i32 [ 0, %80 ], [ %46, %81 ]
  %85 = add nsw i32 %77, %43
  %86 = icmp sgt i32 %84, %77
  %87 = sext i32 %77 to i64
  %88 = getelementptr inbounds i16, i16* %45, i64 %87
  %89 = sub nsw i32 %84, %77
  %90 = select i1 %86, i16* %88, i16* %45
  %91 = select i1 %86, i32 %89, i32 0
  %92 = icmp eq i8 %74, 1
  br i1 %92, label %111, label %93

93:                                               ; preds = %83
  %94 = icmp sgt i32 %91, 0
  br i1 %94, label %95, label %101

95:                                               ; preds = %93
  %96 = sext i32 %75 to i64
  %97 = getelementptr inbounds i16, i16* %44, i64 %96
  %98 = load i16, i16* %97, align 2
  %99 = getelementptr inbounds i16, i16* %90, i64 1
  store i16 %98, i16* %90, align 2
  %100 = add nsw i32 %91, -1
  br label %101

101:                                              ; preds = %95, %93
  %102 = phi i16* [ %99, %95 ], [ %90, %93 ]
  %103 = phi i32 [ %100, %95 ], [ 0, %93 ]
  %104 = add nsw i32 %85, 1
  br i1 %40, label %105, label %41

105:                                              ; preds = %101
  %106 = ptrtoint i16* %76 to i64
  %107 = sub i64 %106, %28
  %108 = lshr exact i64 %107, 1
  %109 = trunc i64 %108 to i32
  %110 = sub i32 %1, %109
  br label %29

111:                                              ; preds = %81, %83
  %112 = phi i32 [ %43, %81 ], [ %85, %83 ]
  %113 = icmp sgt i32 %112, 255
  br i1 %113, label %114, label %115

114:                                              ; preds = %111
  store i32 66568, i32* %6, align 4
  br label %115

115:                                              ; preds = %114, %111
  tail call void @usprep_close_69(%struct.UStringPrepProfile* %24) #4
  %116 = tail call i32 @u_terminateUChars_69(i16* %2, i32 %3, i32 %112, i32* nonnull %6) #4
  br label %117

117:                                              ; preds = %115, %23, %7, %9, %22
  %118 = phi i32 [ 0, %22 ], [ 0, %9 ], [ 0, %7 ], [ %116, %115 ], [ 0, %23 ]
  ret i32 %118
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @uidna_compare_69(i16*, i32, i16*, i32, i32, i32*) local_unnamed_addr #0 {
  %7 = alloca [256 x i16], align 16
  %8 = alloca [256 x i16], align 16
  %9 = alloca %struct.UParseError, align 4
  %10 = icmp eq i32* %5, null
  br i1 %10, label %100, label %11

11:                                               ; preds = %6
  %12 = load i32, i32* %5, align 4
  %13 = icmp slt i32 %12, 1
  br i1 %13, label %14, label %100

14:                                               ; preds = %11
  %15 = bitcast [256 x i16]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %15) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %15, i8 -86, i64 512, i1 false)
  %16 = bitcast [256 x i16]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %16) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %16, i8 -86, i64 512, i1 false)
  %17 = getelementptr inbounds [256 x i16], [256 x i16]* %7, i64 0, i64 0
  %18 = getelementptr inbounds [256 x i16], [256 x i16]* %8, i64 0, i64 0
  %19 = bitcast %struct.UParseError* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %19) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %19, i8 -86, i64 72, i1 false)
  %20 = call i32 @uidna_IDNToASCII_69(i16* %0, i32 %1, i16* nonnull %17, i32 256, i32 %4, %struct.UParseError* nonnull %9, i32* nonnull %5)
  %21 = load i32, i32* %5, align 4
  %22 = icmp eq i32 %21, 15
  br i1 %22, label %23, label %32

23:                                               ; preds = %14
  %24 = shl nsw i32 %20, 1
  %25 = sext i32 %24 to i64
  %26 = call noalias i8* @uprv_malloc_69(i64 %25) #5
  %27 = bitcast i8* %26 to i16*
  %28 = icmp eq i8* %26, null
  br i1 %28, label %29, label %30

29:                                               ; preds = %23
  store i32 7, i32* %5, align 4
  br label %88

30:                                               ; preds = %23
  store i32 0, i32* %5, align 4
  %31 = call i32 @uidna_IDNToASCII_69(i16* %0, i32 %1, i16* nonnull %27, i32 %20, i32 %4, %struct.UParseError* nonnull %9, i32* nonnull %5)
  br label %32

32:                                               ; preds = %30, %14
  %33 = phi i16* [ %27, %30 ], [ %17, %14 ]
  %34 = phi i32 [ %31, %30 ], [ %20, %14 ]
  %35 = call i32 @uidna_IDNToASCII_69(i16* %2, i32 %3, i16* nonnull %18, i32 256, i32 %4, %struct.UParseError* nonnull %9, i32* nonnull %5)
  %36 = load i32, i32* %5, align 4
  %37 = icmp eq i32 %36, 15
  br i1 %37, label %38, label %47

38:                                               ; preds = %32
  %39 = shl nsw i32 %35, 1
  %40 = sext i32 %39 to i64
  %41 = call noalias i8* @uprv_malloc_69(i64 %40) #5
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i8* %41, null
  br i1 %43, label %44, label %45

44:                                               ; preds = %38
  store i32 7, i32* %5, align 4
  br label %84

45:                                               ; preds = %38
  store i32 0, i32* %5, align 4
  %46 = call i32 @uidna_IDNToASCII_69(i16* %2, i32 %3, i16* nonnull %42, i32 %35, i32 %4, %struct.UParseError* nonnull %9, i32* nonnull %5)
  br label %47

47:                                               ; preds = %45, %32
  %48 = phi i16* [ %42, %45 ], [ %18, %32 ]
  %49 = phi i32 [ %46, %45 ], [ %35, %32 ]
  %50 = icmp eq i32 %34, %49
  br i1 %50, label %55, label %51

51:                                               ; preds = %47
  %52 = icmp slt i32 %34, %49
  %53 = select i1 %52, i32 %34, i32 %49
  %54 = select i1 %52, i32 -1, i32 1
  br label %55

55:                                               ; preds = %51, %47
  %56 = phi i32 [ %53, %51 ], [ %34, %47 ]
  %57 = phi i32 [ %54, %51 ], [ 0, %47 ]
  %58 = icmp eq i32 %56, 0
  br i1 %58, label %84, label %59

59:                                               ; preds = %55
  %60 = zext i32 %56 to i64
  br label %61

61:                                               ; preds = %81, %59
  %62 = phi i64 [ 0, %59 ], [ %82, %81 ]
  %63 = getelementptr inbounds i16, i16* %33, i64 %62
  %64 = load i16, i16* %63, align 2
  %65 = getelementptr inbounds i16, i16* %48, i64 %62
  %66 = load i16, i16* %65, align 2
  %67 = icmp eq i16 %64, %66
  br i1 %67, label %81, label %68

68:                                               ; preds = %61
  %69 = add i16 %64, -65
  %70 = icmp ult i16 %69, 26
  %71 = add i16 %64, 32
  %72 = select i1 %70, i16 %71, i16 %64
  %73 = zext i16 %72 to i32
  %74 = add i16 %66, -65
  %75 = icmp ult i16 %74, 26
  %76 = add i16 %66, 32
  %77 = select i1 %75, i16 %76, i16 %66
  %78 = zext i16 %77 to i32
  %79 = sub nsw i32 %73, %78
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %84

81:                                               ; preds = %68, %61
  %82 = add nuw nsw i64 %62, 1
  %83 = icmp eq i64 %82, %60
  br i1 %83, label %84, label %61

84:                                               ; preds = %81, %68, %55, %44
  %85 = phi i16* [ null, %44 ], [ %48, %55 ], [ %48, %68 ], [ %48, %81 ]
  %86 = phi i32 [ -1, %44 ], [ %57, %55 ], [ %57, %81 ], [ %79, %68 ]
  %87 = icmp eq i16* %33, %17
  br i1 %87, label %93, label %88

88:                                               ; preds = %29, %84
  %89 = phi i32 [ -1, %29 ], [ %86, %84 ]
  %90 = phi i16* [ %18, %29 ], [ %85, %84 ]
  %91 = phi i16* [ null, %29 ], [ %33, %84 ]
  %92 = bitcast i16* %91 to i8*
  call void @uprv_free_69(i8* %92) #4
  br label %93

93:                                               ; preds = %84, %88
  %94 = phi i32 [ %86, %84 ], [ %89, %88 ]
  %95 = phi i16* [ %85, %84 ], [ %90, %88 ]
  %96 = icmp eq i16* %95, %18
  br i1 %96, label %99, label %97

97:                                               ; preds = %93
  %98 = bitcast i16* %95 to i8*
  call void @uprv_free_69(i8* %98) #4
  br label %99

99:                                               ; preds = %93, %97
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %19) #4
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %16) #4
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %15) #4
  br label %100

100:                                              ; preds = %6, %11, %99
  %101 = phi i32 [ %94, %99 ], [ -1, %11 ], [ -1, %6 ]
  ret i32 %101
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: allocsize(0)
declare noalias i8* @uprv_malloc_69(i64) local_unnamed_addr #3

declare void @uprv_free_69(i8*) local_unnamed_addr #2

declare i32 @u_strlen_69(i16*) local_unnamed_addr #2

declare i32 @usprep_prepare_69(%struct.UStringPrepProfile*, i16*, i32, i16*, i32, i32, %struct.UParseError*, i32*) local_unnamed_addr #2

declare void @uprv_syntaxError_69(i16*, i32, i32, %struct.UParseError*) local_unnamed_addr #2

declare i16* @u_memmove_69(i16*, i16*, i32) local_unnamed_addr #2

declare i32 @u_strToPunycode_69(i16*, i32, i16*, i32, i8*, i32*) local_unnamed_addr #2

declare i16* @u_memcpy_69(i16*, i16*, i32) local_unnamed_addr #2

declare i32 @u_strFromPunycode_69(i16*, i32, i16*, i32, i8*, i32*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { nounwind allocsize(0) }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
