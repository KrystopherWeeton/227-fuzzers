; ModuleID = '../../third_party/leveldatabase/src/db/memtable.cc'
source_filename = "../../third_party/leveldatabase/src/db/memtable.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.leveldb::MemTable" = type { %"struct.leveldb::MemTable::KeyComparator", i32, %"class.leveldb::Arena", %"class.leveldb::SkipList" }
%"struct.leveldb::MemTable::KeyComparator" = type { %"class.leveldb::InternalKeyComparator" }
%"class.leveldb::InternalKeyComparator" = type { %"class.leveldb::Comparator", %"class.leveldb::Comparator"* }
%"class.leveldb::Comparator" = type { i32 (...)** }
%"class.leveldb::Arena" = type { i8*, i64, %"class.std::__1::vector", %"struct.std::__1::atomic" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8**, i8**, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8** }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.leveldb::SkipList" = type { %"struct.leveldb::MemTable::KeyComparator", %"class.leveldb::Arena"*, %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*, %"struct.std::__1::atomic.2", %"class.leveldb::Random" }
%"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node" = type { i8*, [1 x %"struct.std::__1::atomic.12"] }
%"struct.std::__1::atomic.12" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl.14" }
%"struct.std::__1::__cxx_atomic_impl.14" = type { %"struct.std::__1::__cxx_atomic_base_impl.15" }
%"struct.std::__1::__cxx_atomic_base_impl.15" = type { %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i32 }
%"class.leveldb::Random" = type { i32 }
%"class.leveldb::Slice" = type { i8*, i64 }
%"class.leveldb::Iterator" = type { i32 (...)**, %"struct.leveldb::Iterator::CleanupNode" }
%"struct.leveldb::Iterator::CleanupNode" = type { void (i8*, i8*)*, i8*, i8*, %"struct.leveldb::Iterator::CleanupNode"* }
%"class.leveldb::LookupKey" = type { i8*, i8*, i8*, [200 x i8] }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.leveldb::Status" = type { i8* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.leveldb::MemTableIterator" = type { %"class.leveldb::Iterator", %"class.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Iterator", %"class.std::__1::basic_string" }
%"class.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Iterator" = type { %"class.leveldb::SkipList"*, %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* }

$_ZN7leveldb8SkipListIPKcNS_8MemTable13KeyComparatorEE6InsertERKS2_ = comdat any

$_ZN7leveldb16MemTableIteratorD2Ev = comdat any

$_ZN7leveldb16MemTableIteratorD0Ev = comdat any

$_ZNK7leveldb16MemTableIterator5ValidEv = comdat any

$_ZN7leveldb16MemTableIterator11SeekToFirstEv = comdat any

$_ZN7leveldb16MemTableIterator10SeekToLastEv = comdat any

$_ZN7leveldb16MemTableIterator4SeekERKNS_5SliceE = comdat any

$_ZN7leveldb16MemTableIterator4NextEv = comdat any

$_ZN7leveldb16MemTableIterator4PrevEv = comdat any

$_ZNK7leveldb16MemTableIterator3keyEv = comdat any

$_ZNK7leveldb16MemTableIterator5valueEv = comdat any

$_ZNK7leveldb16MemTableIterator6statusEv = comdat any

$_ZNK7leveldb8SkipListIPKcNS_8MemTable13KeyComparatorEE14KeyIsAfterNodeERKS2_PNS5_4NodeE = comdat any

$_ZN7leveldb8SkipListIPKcNS_8MemTable13KeyComparatorEE12RandomHeightEv = comdat any

$_ZTVN7leveldb16MemTableIteratorE = comdat any

@_ZTVN7leveldb21InternalKeyComparatorE = external unnamed_addr constant { [8 x i8*] }, align 8
@_ZTVN7leveldb16MemTableIteratorE = linkonce_odr hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.leveldb::MemTableIterator"*)* @_ZN7leveldb16MemTableIteratorD2Ev to i8*), i8* bitcast (void (%"class.leveldb::MemTableIterator"*)* @_ZN7leveldb16MemTableIteratorD0Ev to i8*), i8* bitcast (i1 (%"class.leveldb::MemTableIterator"*)* @_ZNK7leveldb16MemTableIterator5ValidEv to i8*), i8* bitcast (void (%"class.leveldb::MemTableIterator"*)* @_ZN7leveldb16MemTableIterator11SeekToFirstEv to i8*), i8* bitcast (void (%"class.leveldb::MemTableIterator"*)* @_ZN7leveldb16MemTableIterator10SeekToLastEv to i8*), i8* bitcast (void (%"class.leveldb::MemTableIterator"*, %"class.leveldb::Slice"*)* @_ZN7leveldb16MemTableIterator4SeekERKNS_5SliceE to i8*), i8* bitcast (void (%"class.leveldb::MemTableIterator"*)* @_ZN7leveldb16MemTableIterator4NextEv to i8*), i8* bitcast (void (%"class.leveldb::MemTableIterator"*)* @_ZN7leveldb16MemTableIterator4PrevEv to i8*), i8* bitcast ({ i8*, i64 } (%"class.leveldb::MemTableIterator"*)* @_ZNK7leveldb16MemTableIterator3keyEv to i8*), i8* bitcast ({ i8*, i64 } (%"class.leveldb::MemTableIterator"*)* @_ZNK7leveldb16MemTableIterator5valueEv to i8*), i8* bitcast (void (%"class.leveldb::Status"*, %"class.leveldb::MemTableIterator"*)* @_ZNK7leveldb16MemTableIterator6statusEv to i8*)] }, comdat, align 8
@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1

@_ZN7leveldb8MemTableC1ERKNS_21InternalKeyComparatorE = hidden unnamed_addr alias void (%"class.leveldb::MemTable"*, %"class.leveldb::InternalKeyComparator"*), void (%"class.leveldb::MemTable"*, %"class.leveldb::InternalKeyComparator"*)* @_ZN7leveldb8MemTableC2ERKNS_21InternalKeyComparatorE
@_ZN7leveldb8MemTableD1Ev = hidden unnamed_addr alias void (%"class.leveldb::MemTable"*), void (%"class.leveldb::MemTable"*)* @_ZN7leveldb8MemTableD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7leveldb8MemTableC2ERKNS_21InternalKeyComparatorE(%"class.leveldb::MemTable"*, %"class.leveldb::InternalKeyComparator"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.leveldb::MemTable::KeyComparator", align 8
  %4 = getelementptr inbounds %"class.leveldb::MemTable", %"class.leveldb::MemTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN7leveldb21InternalKeyComparatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.leveldb::MemTable", %"class.leveldb::MemTable"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.leveldb::InternalKeyComparator", %"class.leveldb::InternalKeyComparator"* %1, i64 0, i32 1
  %7 = bitcast %"class.leveldb::Comparator"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.leveldb::Comparator"** %5 to i64*
  store i64 %8, i64* %9, align 8
  %10 = getelementptr inbounds %"class.leveldb::MemTable", %"class.leveldb::MemTable"* %0, i64 0, i32 1
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds %"class.leveldb::MemTable", %"class.leveldb::MemTable"* %0, i64 0, i32 2
  tail call void @_ZN7leveldb5ArenaC1Ev(%"class.leveldb::Arena"* %11) #8
  %12 = getelementptr inbounds %"struct.leveldb::MemTable::KeyComparator", %"struct.leveldb::MemTable::KeyComparator"* %3, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN7leveldb21InternalKeyComparatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"struct.leveldb::MemTable::KeyComparator", %"struct.leveldb::MemTable::KeyComparator"* %3, i64 0, i32 0, i32 1
  %14 = load i64, i64* %9, align 8
  %15 = bitcast %"class.leveldb::Comparator"** %13 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.leveldb::MemTable", %"class.leveldb::MemTable"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN7leveldb21InternalKeyComparatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %17 = getelementptr inbounds %"class.leveldb::MemTable", %"class.leveldb::MemTable"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %18 = bitcast %"class.leveldb::Comparator"** %17 to i64*
  store i64 %14, i64* %18, align 8
  %19 = getelementptr inbounds %"class.leveldb::MemTable", %"class.leveldb::MemTable"* %0, i64 0, i32 3, i32 1
  store %"class.leveldb::Arena"* %11, %"class.leveldb::Arena"** %19, align 8
  %20 = getelementptr inbounds %"class.leveldb::MemTable", %"class.leveldb::MemTable"* %0, i64 0, i32 3, i32 2
  %21 = tail call i8* @_ZN7leveldb5Arena15AllocateAlignedEm(%"class.leveldb::Arena"* %11, i64 104) #8
  %22 = bitcast i8* %21 to i64*
  store i64 0, i64* %22, align 8
  %23 = bitcast %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"** %20 to i8**
  store i8* %21, i8** %23, align 8
  %24 = getelementptr inbounds %"class.leveldb::MemTable", %"class.leveldb::MemTable"* %0, i64 0, i32 3, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %24, align 4
  %25 = getelementptr inbounds %"class.leveldb::MemTable", %"class.leveldb::MemTable"* %0, i64 0, i32 3, i32 4, i32 0
  store i32 1588444911, i32* %25, align 4
  %26 = getelementptr inbounds i8, i8* %21, i64 8
  %27 = bitcast i8* %26 to i64*
  store atomic i64 0, i64* %27 release, align 8
  %28 = load %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*, %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"** %20, align 8
  %29 = getelementptr inbounds %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node", %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* %28, i64 0, i32 1, i64 1, i32 0
  %30 = bitcast %"struct.std::__1::__atomic_base.13"* %29 to i64*
  store atomic i64 0, i64* %30 release, align 8
  %31 = load %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*, %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"** %20, align 8
  %32 = getelementptr inbounds %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node", %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* %31, i64 0, i32 1, i64 2, i32 0
  %33 = bitcast %"struct.std::__1::__atomic_base.13"* %32 to i64*
  store atomic i64 0, i64* %33 release, align 8
  %34 = load %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*, %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"** %20, align 8
  %35 = getelementptr inbounds %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node", %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* %34, i64 0, i32 1, i64 3, i32 0
  %36 = bitcast %"struct.std::__1::__atomic_base.13"* %35 to i64*
  store atomic i64 0, i64* %36 release, align 8
  %37 = load %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*, %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"** %20, align 8
  %38 = getelementptr inbounds %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node", %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* %37, i64 0, i32 1, i64 4, i32 0
  %39 = bitcast %"struct.std::__1::__atomic_base.13"* %38 to i64*
  store atomic i64 0, i64* %39 release, align 8
  %40 = load %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*, %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"** %20, align 8
  %41 = getelementptr inbounds %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node", %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* %40, i64 0, i32 1, i64 5, i32 0
  %42 = bitcast %"struct.std::__1::__atomic_base.13"* %41 to i64*
  store atomic i64 0, i64* %42 release, align 8
  %43 = load %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*, %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"** %20, align 8
  %44 = getelementptr inbounds %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node", %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* %43, i64 0, i32 1, i64 6, i32 0
  %45 = bitcast %"struct.std::__1::__atomic_base.13"* %44 to i64*
  store atomic i64 0, i64* %45 release, align 8
  %46 = load %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*, %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"** %20, align 8
  %47 = getelementptr inbounds %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node", %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* %46, i64 0, i32 1, i64 7, i32 0
  %48 = bitcast %"struct.std::__1::__atomic_base.13"* %47 to i64*
  store atomic i64 0, i64* %48 release, align 8
  %49 = load %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*, %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"** %20, align 8
  %50 = getelementptr inbounds %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node", %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* %49, i64 0, i32 1, i64 8, i32 0
  %51 = bitcast %"struct.std::__1::__atomic_base.13"* %50 to i64*
  store atomic i64 0, i64* %51 release, align 8
  %52 = load %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*, %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"** %20, align 8
  %53 = getelementptr inbounds %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node", %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* %52, i64 0, i32 1, i64 9, i32 0
  %54 = bitcast %"struct.std::__1::__atomic_base.13"* %53 to i64*
  store atomic i64 0, i64* %54 release, align 8
  %55 = load %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*, %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"** %20, align 8
  %56 = getelementptr inbounds %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node", %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* %55, i64 0, i32 1, i64 10, i32 0
  %57 = bitcast %"struct.std::__1::__atomic_base.13"* %56 to i64*
  store atomic i64 0, i64* %57 release, align 8
  %58 = load %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*, %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"** %20, align 8
  %59 = getelementptr inbounds %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node", %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* %58, i64 0, i32 1, i64 11, i32 0
  %60 = bitcast %"struct.std::__1::__atomic_base.13"* %59 to i64*
  store atomic i64 0, i64* %60 release, align 8
  %61 = getelementptr inbounds %"struct.leveldb::MemTable::KeyComparator", %"struct.leveldb::MemTable::KeyComparator"* %3, i64 0, i32 0, i32 0
  call void @_ZN7leveldb10ComparatorD2Ev(%"class.leveldb::Comparator"* nonnull %61) #8
  ret void
}

declare void @_ZN7leveldb5ArenaC1Ev(%"class.leveldb::Arena"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7leveldb8MemTableD2Ev(%"class.leveldb::MemTable"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.leveldb::MemTable", %"class.leveldb::MemTable"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  tail call void @_ZN7leveldb10ComparatorD2Ev(%"class.leveldb::Comparator"* %2) #8
  %3 = getelementptr inbounds %"class.leveldb::MemTable", %"class.leveldb::MemTable"* %0, i64 0, i32 2
  tail call void @_ZN7leveldb5ArenaD1Ev(%"class.leveldb::Arena"* %3) #8
  %4 = getelementptr inbounds %"class.leveldb::MemTable", %"class.leveldb::MemTable"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN7leveldb10ComparatorD2Ev(%"class.leveldb::Comparator"* %4) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN7leveldb5ArenaD1Ev(%"class.leveldb::Arena"*) unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64 @_ZN7leveldb8MemTable22ApproximateMemoryUsageEv(%"class.leveldb::MemTable"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.leveldb::MemTable", %"class.leveldb::MemTable"* %0, i64 0, i32 2, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i64, i64* %2 monotonic, align 8
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK7leveldb8MemTable13KeyComparatorclEPKcS3_(%"struct.leveldb::MemTable::KeyComparator"*, i8*, i8*) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %"class.leveldb::Slice", align 8
  %7 = alloca %"class.leveldb::Slice", align 8
  %8 = bitcast %"class.leveldb::Slice"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #8
  %9 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %6, i64 0, i32 0
  %10 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %6, i64 0, i32 1
  %11 = bitcast i32* %5 to i8*
  %12 = bitcast %"class.leveldb::Slice"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #8
  store i32 -1431655766, i32* %5, align 4
  %13 = load i8, i8* %1, align 1
  %14 = icmp sgt i8 %13, -1
  br i1 %14, label %15, label %18

15:                                               ; preds = %3
  %16 = zext i8 %13 to i32
  store i32 %16, i32* %5, align 4
  %17 = getelementptr inbounds i8, i8* %1, i64 1
  br label %22

18:                                               ; preds = %3
  %19 = getelementptr inbounds i8, i8* %1, i64 5
  %20 = call i8* @_ZN7leveldb22GetVarint32PtrFallbackEPKcS1_Pj(i8* %1, i8* %19, i32* nonnull %5) #8
  %21 = load i32, i32* %5, align 4
  br label %22

22:                                               ; preds = %15, %18
  %23 = phi i32 [ %21, %18 ], [ %16, %15 ]
  %24 = phi i8* [ %20, %18 ], [ %17, %15 ]
  %25 = zext i32 %23 to i64
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #8
  store i8* %24, i8** %9, align 8
  store i64 %25, i64* %10, align 8
  %26 = bitcast %"class.leveldb::Slice"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #8
  %27 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %7, i64 0, i32 0
  %28 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %7, i64 0, i32 1
  %29 = bitcast i32* %4 to i8*
  %30 = bitcast %"class.leveldb::Slice"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29) #8
  store i32 -1431655766, i32* %4, align 4
  %31 = load i8, i8* %2, align 1
  %32 = icmp sgt i8 %31, -1
  br i1 %32, label %33, label %36

33:                                               ; preds = %22
  %34 = zext i8 %31 to i32
  store i32 %34, i32* %4, align 4
  %35 = getelementptr inbounds i8, i8* %2, i64 1
  br label %40

36:                                               ; preds = %22
  %37 = getelementptr inbounds i8, i8* %2, i64 5
  %38 = call i8* @_ZN7leveldb22GetVarint32PtrFallbackEPKcS1_Pj(i8* %2, i8* %37, i32* nonnull %4) #8
  %39 = load i32, i32* %4, align 4
  br label %40

40:                                               ; preds = %33, %36
  %41 = phi i32 [ %39, %36 ], [ %34, %33 ]
  %42 = phi i8* [ %38, %36 ], [ %35, %33 ]
  %43 = zext i32 %41 to i64
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #8
  store i8* %42, i8** %27, align 8
  store i64 %43, i64* %28, align 8
  %44 = getelementptr inbounds %"struct.leveldb::MemTable::KeyComparator", %"struct.leveldb::MemTable::KeyComparator"* %0, i64 0, i32 0
  %45 = call i32 @_ZNK7leveldb21InternalKeyComparator7CompareERKNS_5SliceES3_(%"class.leveldb::InternalKeyComparator"* %44, %"class.leveldb::Slice"* nonnull dereferenceable(16) %6, %"class.leveldb::Slice"* nonnull dereferenceable(16) %7) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #8
  ret i32 %45
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare i32 @_ZNK7leveldb21InternalKeyComparator7CompareERKNS_5SliceES3_(%"class.leveldb::InternalKeyComparator"*, %"class.leveldb::Slice"* dereferenceable(16), %"class.leveldb::Slice"* dereferenceable(16)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.leveldb::Iterator"* @_ZN7leveldb8MemTable11NewIteratorEv(%"class.leveldb::MemTable"*) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 80) #9
  %3 = getelementptr inbounds %"class.leveldb::MemTable", %"class.leveldb::MemTable"* %0, i64 0, i32 3
  %4 = bitcast i8* %2 to %"class.leveldb::Iterator"*
  tail call void @_ZN7leveldb8IteratorC2Ev(%"class.leveldb::Iterator"* nonnull %4) #8
  %5 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN7leveldb16MemTableIteratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i8, i8* %2, i64 40
  %7 = bitcast i8* %6 to %"class.leveldb::SkipList"**
  store %"class.leveldb::SkipList"* %3, %"class.leveldb::SkipList"** %7, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 48
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 32, i1 false) #8
  ret %"class.leveldb::Iterator"* %4
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7leveldb8MemTable3AddEmNS_9ValueTypeERKNS_5SliceES4_(%"class.leveldb::MemTable"*, i64, i32, %"class.leveldb::Slice"* nocapture readonly dereferenceable(16), %"class.leveldb::Slice"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %6 = alloca i8*, align 8
  %7 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %3, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %4, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %8, 8
  %12 = tail call i32 @_ZN7leveldb12VarintLengthEm(i64 %11) #8
  %13 = sext i32 %12 to i64
  %14 = tail call i32 @_ZN7leveldb12VarintLengthEm(i64 %10) #8
  %15 = sext i32 %14 to i64
  %16 = add i64 %10, %11
  %17 = add i64 %16, %13
  %18 = add i64 %17, %15
  %19 = getelementptr inbounds %"class.leveldb::MemTable", %"class.leveldb::MemTable"* %0, i64 0, i32 2
  %20 = getelementptr inbounds %"class.leveldb::MemTable", %"class.leveldb::MemTable"* %0, i64 0, i32 2, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = icmp ult i64 %21, %18
  br i1 %22, label %28, label %23

23:                                               ; preds = %5
  %24 = getelementptr inbounds %"class.leveldb::Arena", %"class.leveldb::Arena"* %19, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds i8, i8* %25, i64 %18
  store i8* %26, i8** %24, align 8
  %27 = sub i64 %21, %18
  store i64 %27, i64* %20, align 8
  br label %30

28:                                               ; preds = %5
  %29 = tail call i8* @_ZN7leveldb5Arena16AllocateFallbackEm(%"class.leveldb::Arena"* %19, i64 %18) #8
  br label %30

30:                                               ; preds = %23, %28
  %31 = phi i8* [ %25, %23 ], [ %29, %28 ]
  %32 = trunc i64 %11 to i32
  %33 = tail call i8* @_ZN7leveldb14EncodeVarint32EPcj(i8* %31, i32 %32) #8
  %34 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %3, i64 0, i32 0
  %35 = load i8*, i8** %34, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %33, i8* align 1 %35, i64 %8, i1 false)
  %36 = getelementptr inbounds i8, i8* %33, i64 %8
  %37 = shl i64 %1, 8
  %38 = zext i32 %2 to i64
  %39 = or i64 %37, %38
  %40 = trunc i32 %2 to i8
  store i8 %40, i8* %36, align 1
  %41 = lshr i64 %39, 8
  %42 = trunc i64 %41 to i8
  %43 = getelementptr inbounds i8, i8* %36, i64 1
  store i8 %42, i8* %43, align 1
  %44 = lshr i64 %39, 16
  %45 = trunc i64 %44 to i8
  %46 = getelementptr inbounds i8, i8* %36, i64 2
  store i8 %45, i8* %46, align 1
  %47 = lshr i64 %39, 24
  %48 = trunc i64 %47 to i8
  %49 = getelementptr inbounds i8, i8* %36, i64 3
  store i8 %48, i8* %49, align 1
  %50 = lshr i64 %1, 24
  %51 = trunc i64 %50 to i8
  %52 = getelementptr inbounds i8, i8* %36, i64 4
  store i8 %51, i8* %52, align 1
  %53 = lshr i64 %1, 32
  %54 = trunc i64 %53 to i8
  %55 = getelementptr inbounds i8, i8* %36, i64 5
  store i8 %54, i8* %55, align 1
  %56 = lshr i64 %1, 40
  %57 = trunc i64 %56 to i8
  %58 = getelementptr inbounds i8, i8* %36, i64 6
  store i8 %57, i8* %58, align 1
  %59 = lshr i64 %1, 48
  %60 = trunc i64 %59 to i8
  %61 = getelementptr inbounds i8, i8* %36, i64 7
  store i8 %60, i8* %61, align 1
  %62 = getelementptr inbounds i8, i8* %36, i64 8
  %63 = trunc i64 %10 to i32
  %64 = tail call i8* @_ZN7leveldb14EncodeVarint32EPcj(i8* %62, i32 %63) #8
  %65 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %4, i64 0, i32 0
  %66 = load i8*, i8** %65, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %64, i8* align 1 %66, i64 %10, i1 false)
  %67 = getelementptr inbounds %"class.leveldb::MemTable", %"class.leveldb::MemTable"* %0, i64 0, i32 3
  %68 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #8
  store i8* %31, i8** %6, align 8
  call void @_ZN7leveldb8SkipListIPKcNS_8MemTable13KeyComparatorEE6InsertERKS2_(%"class.leveldb::SkipList"* %67, i8** nonnull dereferenceable(8) %6)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #8
  ret void
}

declare i32 @_ZN7leveldb12VarintLengthEm(i64) local_unnamed_addr #1

declare i8* @_ZN7leveldb14EncodeVarint32EPcj(i8*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7leveldb8SkipListIPKcNS_8MemTable13KeyComparatorEE6InsertERKS2_(%"class.leveldb::SkipList"*, i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca [12 x %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*], align 16
  %4 = bitcast [12 x %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %4) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 -86, i64 96, i1 false)
  %5 = getelementptr inbounds %"class.leveldb::SkipList", %"class.leveldb::SkipList"* %0, i64 0, i32 2
  %6 = load %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*, %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"** %5, align 8
  %7 = getelementptr inbounds %"class.leveldb::SkipList", %"class.leveldb::SkipList"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = sext i32 %8 to i64
  br label %10

10:                                               ; preds = %21, %2
  %11 = phi i64 [ %13, %21 ], [ %9, %2 ]
  %12 = phi %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* [ %15, %21 ], [ %6, %2 ]
  %13 = add nsw i64 %11, -1
  br label %14

14:                                               ; preds = %14, %10
  %15 = phi %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* [ %19, %14 ], [ %12, %10 ]
  %16 = getelementptr inbounds %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node", %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* %15, i64 0, i32 1, i64 %13, i32 0
  %17 = bitcast %"struct.std::__1::__atomic_base.13"* %16 to i64*
  %18 = load atomic i64, i64* %17 acquire, align 8
  %19 = inttoptr i64 %18 to %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*
  %20 = tail call zeroext i1 @_ZNK7leveldb8SkipListIPKcNS_8MemTable13KeyComparatorEE14KeyIsAfterNodeERKS2_PNS5_4NodeE(%"class.leveldb::SkipList"* %0, i8** dereferenceable(8) %1, %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* %19) #8
  br i1 %20, label %14, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds [12 x %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*], [12 x %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*]* %3, i64 0, i64 %13
  store %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* %15, %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"** %22, align 8
  %23 = icmp eq i64 %13, 0
  br i1 %23, label %24, label %10

24:                                               ; preds = %21
  %25 = tail call i32 @_ZN7leveldb8SkipListIPKcNS_8MemTable13KeyComparatorEE12RandomHeightEv(%"class.leveldb::SkipList"* %0)
  %26 = load atomic i32, i32* %7 monotonic, align 4
  %27 = icmp sgt i32 %25, %26
  br i1 %27, label %28, label %106

28:                                               ; preds = %24
  %29 = load atomic i32, i32* %7 monotonic, align 4
  %30 = icmp slt i32 %29, %25
  br i1 %30, label %31, label %99

31:                                               ; preds = %28
  %32 = bitcast %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"** %5 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sext i32 %29 to i64
  %35 = sext i32 %25 to i64
  %36 = sub nsw i64 %35, %34
  %37 = icmp ult i64 %36, 4
  br i1 %37, label %38, label %40

38:                                               ; preds = %97, %31
  %39 = phi i64 [ %34, %31 ], [ %42, %97 ]
  br label %100

40:                                               ; preds = %31
  %41 = and i64 %36, -4
  %42 = add nsw i64 %41, %34
  %43 = insertelement <2 x i64> undef, i64 %33, i32 0
  %44 = shufflevector <2 x i64> %43, <2 x i64> undef, <2 x i32> zeroinitializer
  %45 = insertelement <2 x i64> undef, i64 %33, i32 0
  %46 = shufflevector <2 x i64> %45, <2 x i64> undef, <2 x i32> zeroinitializer
  %47 = add nsw i64 %41, -4
  %48 = lshr exact i64 %47, 2
  %49 = add nuw nsw i64 %48, 1
  %50 = and i64 %49, 3
  %51 = icmp ult i64 %47, 12
  br i1 %51, label %83, label %52

52:                                               ; preds = %40
  %53 = sub nsw i64 %49, %50
  br label %54

54:                                               ; preds = %54, %52
  %55 = phi i64 [ 0, %52 ], [ %80, %54 ]
  %56 = phi i64 [ %53, %52 ], [ %81, %54 ]
  %57 = add i64 %55, %34
  %58 = getelementptr inbounds [12 x %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*], [12 x %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*]* %3, i64 0, i64 %57
  %59 = bitcast %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"** %58 to <2 x i64>*
  store <2 x i64> %44, <2 x i64>* %59, align 8
  %60 = getelementptr inbounds %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*, %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"** %58, i64 2
  %61 = bitcast %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"** %60 to <2 x i64>*
  store <2 x i64> %46, <2 x i64>* %61, align 8
  %62 = or i64 %55, 4
  %63 = add i64 %62, %34
  %64 = getelementptr inbounds [12 x %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*], [12 x %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*]* %3, i64 0, i64 %63
  %65 = bitcast %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"** %64 to <2 x i64>*
  store <2 x i64> %44, <2 x i64>* %65, align 8
  %66 = getelementptr inbounds %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*, %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"** %64, i64 2
  %67 = bitcast %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"** %66 to <2 x i64>*
  store <2 x i64> %46, <2 x i64>* %67, align 8
  %68 = or i64 %55, 8
  %69 = add i64 %68, %34
  %70 = getelementptr inbounds [12 x %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*], [12 x %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*]* %3, i64 0, i64 %69
  %71 = bitcast %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"** %70 to <2 x i64>*
  store <2 x i64> %44, <2 x i64>* %71, align 8
  %72 = getelementptr inbounds %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*, %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"** %70, i64 2
  %73 = bitcast %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"** %72 to <2 x i64>*
  store <2 x i64> %46, <2 x i64>* %73, align 8
  %74 = or i64 %55, 12
  %75 = add i64 %74, %34
  %76 = getelementptr inbounds [12 x %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*], [12 x %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*]* %3, i64 0, i64 %75
  %77 = bitcast %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"** %76 to <2 x i64>*
  store <2 x i64> %44, <2 x i64>* %77, align 8
  %78 = getelementptr inbounds %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*, %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"** %76, i64 2
  %79 = bitcast %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"** %78 to <2 x i64>*
  store <2 x i64> %46, <2 x i64>* %79, align 8
  %80 = add i64 %55, 16
  %81 = add i64 %56, -4
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %83, label %54, !llvm.loop !2

83:                                               ; preds = %54, %40
  %84 = phi i64 [ 0, %40 ], [ %80, %54 ]
  %85 = icmp eq i64 %50, 0
  br i1 %85, label %97, label %86

86:                                               ; preds = %83, %86
  %87 = phi i64 [ %94, %86 ], [ %84, %83 ]
  %88 = phi i64 [ %95, %86 ], [ %50, %83 ]
  %89 = add i64 %87, %34
  %90 = getelementptr inbounds [12 x %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*], [12 x %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*]* %3, i64 0, i64 %89
  %91 = bitcast %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"** %90 to <2 x i64>*
  store <2 x i64> %44, <2 x i64>* %91, align 8
  %92 = getelementptr inbounds %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*, %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"** %90, i64 2
  %93 = bitcast %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"** %92 to <2 x i64>*
  store <2 x i64> %46, <2 x i64>* %93, align 8
  %94 = add i64 %87, 4
  %95 = add i64 %88, -1
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %97, label %86, !llvm.loop !4

97:                                               ; preds = %86, %83
  %98 = icmp eq i64 %36, %41
  br i1 %98, label %99, label %38

99:                                               ; preds = %100, %97, %28
  store atomic i32 %25, i32* %7 monotonic, align 4
  br label %106

100:                                              ; preds = %38, %100
  %101 = phi i64 [ %104, %100 ], [ %39, %38 ]
  %102 = getelementptr inbounds [12 x %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*], [12 x %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*]* %3, i64 0, i64 %101
  %103 = bitcast %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"** %102 to i64*
  store i64 %33, i64* %103, align 8
  %104 = add nsw i64 %101, 1
  %105 = icmp eq i64 %104, %35
  br i1 %105, label %99, label %100, !llvm.loop !6

106:                                              ; preds = %99, %24
  %107 = getelementptr inbounds %"class.leveldb::SkipList", %"class.leveldb::SkipList"* %0, i64 0, i32 1
  %108 = load %"class.leveldb::Arena"*, %"class.leveldb::Arena"** %107, align 8
  %109 = add nsw i32 %25, -1
  %110 = sext i32 %109 to i64
  %111 = shl nsw i64 %110, 3
  %112 = add nsw i64 %111, 16
  %113 = tail call i8* @_ZN7leveldb5Arena15AllocateAlignedEm(%"class.leveldb::Arena"* %108, i64 %112) #8
  %114 = bitcast i8* %113 to %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*
  %115 = bitcast i8** %1 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = bitcast i8* %113 to i64*
  store i64 %116, i64* %117, align 8
  %118 = icmp sgt i32 %25, 0
  br i1 %118, label %119, label %143

119:                                              ; preds = %106
  %120 = ptrtoint i8* %113 to i64
  %121 = zext i32 %25 to i64
  %122 = add nsw i64 %121, -1
  %123 = and i64 %121, 3
  %124 = icmp ult i64 %122, 3
  br i1 %124, label %127, label %125

125:                                              ; preds = %119
  %126 = sub nsw i64 %121, %123
  br label %144

127:                                              ; preds = %144, %119
  %128 = phi i64 [ 0, %119 ], [ %178, %144 ]
  %129 = icmp eq i64 %123, 0
  br i1 %129, label %143, label %130

130:                                              ; preds = %127, %130
  %131 = phi i64 [ %140, %130 ], [ %128, %127 ]
  %132 = phi i64 [ %141, %130 ], [ %123, %127 ]
  %133 = getelementptr inbounds [12 x %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*], [12 x %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*]* %3, i64 0, i64 %131
  %134 = load %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*, %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"** %133, align 8
  %135 = getelementptr inbounds %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node", %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* %134, i64 0, i32 1, i64 %131, i32 0
  %136 = bitcast %"struct.std::__1::__atomic_base.13"* %135 to i64*
  %137 = load atomic i64, i64* %136 monotonic, align 8
  %138 = getelementptr inbounds %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node", %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* %114, i64 0, i32 1, i64 %131, i32 0
  %139 = bitcast %"struct.std::__1::__atomic_base.13"* %138 to i64*
  store atomic i64 %137, i64* %139 monotonic, align 8
  store atomic i64 %120, i64* %136 release, align 8
  %140 = add nuw nsw i64 %131, 1
  %141 = add i64 %132, -1
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %143, label %130, !llvm.loop !8

143:                                              ; preds = %127, %130, %106
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %4) #8
  ret void

144:                                              ; preds = %144, %125
  %145 = phi i64 [ 0, %125 ], [ %178, %144 ]
  %146 = phi i64 [ %126, %125 ], [ %179, %144 ]
  %147 = getelementptr inbounds [12 x %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*], [12 x %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*]* %3, i64 0, i64 %145
  %148 = load %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*, %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"** %147, align 16
  %149 = getelementptr inbounds %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node", %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* %148, i64 0, i32 1, i64 %145, i32 0
  %150 = bitcast %"struct.std::__1::__atomic_base.13"* %149 to i64*
  %151 = load atomic i64, i64* %150 monotonic, align 8
  %152 = getelementptr inbounds %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node", %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* %114, i64 0, i32 1, i64 %145, i32 0
  %153 = bitcast %"struct.std::__1::__atomic_base.13"* %152 to i64*
  store atomic i64 %151, i64* %153 monotonic, align 8
  store atomic i64 %120, i64* %150 release, align 8
  %154 = or i64 %145, 1
  %155 = getelementptr inbounds [12 x %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*], [12 x %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*]* %3, i64 0, i64 %154
  %156 = load %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*, %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"** %155, align 8
  %157 = getelementptr inbounds %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node", %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* %156, i64 0, i32 1, i64 %154, i32 0
  %158 = bitcast %"struct.std::__1::__atomic_base.13"* %157 to i64*
  %159 = load atomic i64, i64* %158 monotonic, align 8
  %160 = getelementptr inbounds %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node", %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* %114, i64 0, i32 1, i64 %154, i32 0
  %161 = bitcast %"struct.std::__1::__atomic_base.13"* %160 to i64*
  store atomic i64 %159, i64* %161 monotonic, align 8
  store atomic i64 %120, i64* %158 release, align 8
  %162 = or i64 %145, 2
  %163 = getelementptr inbounds [12 x %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*], [12 x %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*]* %3, i64 0, i64 %162
  %164 = load %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*, %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"** %163, align 16
  %165 = getelementptr inbounds %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node", %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* %164, i64 0, i32 1, i64 %162, i32 0
  %166 = bitcast %"struct.std::__1::__atomic_base.13"* %165 to i64*
  %167 = load atomic i64, i64* %166 monotonic, align 8
  %168 = getelementptr inbounds %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node", %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* %114, i64 0, i32 1, i64 %162, i32 0
  %169 = bitcast %"struct.std::__1::__atomic_base.13"* %168 to i64*
  store atomic i64 %167, i64* %169 monotonic, align 8
  store atomic i64 %120, i64* %166 release, align 8
  %170 = or i64 %145, 3
  %171 = getelementptr inbounds [12 x %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*], [12 x %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*]* %3, i64 0, i64 %170
  %172 = load %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*, %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"** %171, align 8
  %173 = getelementptr inbounds %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node", %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* %172, i64 0, i32 1, i64 %170, i32 0
  %174 = bitcast %"struct.std::__1::__atomic_base.13"* %173 to i64*
  %175 = load atomic i64, i64* %174 monotonic, align 8
  %176 = getelementptr inbounds %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node", %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* %114, i64 0, i32 1, i64 %170, i32 0
  %177 = bitcast %"struct.std::__1::__atomic_base.13"* %176 to i64*
  store atomic i64 %175, i64* %177 monotonic, align 8
  store atomic i64 %120, i64* %174 release, align 8
  %178 = add nuw nsw i64 %145, 4
  %179 = add i64 %146, -4
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %127, label %144
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7leveldb8MemTable3GetERKNS_9LookupKeyEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEPNS_6StatusE(%"class.leveldb::MemTable"*, %"class.leveldb::LookupKey"* nocapture readonly dereferenceable(224), %"class.std::__1::basic_string"*, %"class.leveldb::Status"* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %"class.leveldb::Slice", align 8
  %9 = alloca %"class.leveldb::Slice", align 8
  %10 = alloca i32, align 4
  %11 = alloca %"class.leveldb::Slice", align 8
  %12 = alloca %"class.leveldb::Slice", align 8
  %13 = alloca %"class.leveldb::Status", align 8
  %14 = alloca %"class.leveldb::Slice", align 8
  %15 = alloca %"class.leveldb::Slice", align 8
  %16 = getelementptr inbounds %"class.leveldb::LookupKey", %"class.leveldb::LookupKey"* %1, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %"class.leveldb::LookupKey", %"class.leveldb::LookupKey"* %1, i64 0, i32 2
  %19 = getelementptr inbounds %"class.leveldb::MemTable", %"class.leveldb::MemTable"* %0, i64 0, i32 3, i32 2
  %20 = load %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*, %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"** %19, align 8
  %21 = getelementptr inbounds %"class.leveldb::MemTable", %"class.leveldb::MemTable"* %0, i64 0, i32 3, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = sext i32 %22 to i64
  %24 = bitcast %"class.leveldb::Slice"* %8 to i8*
  %25 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %8, i64 0, i32 0
  %26 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %8, i64 0, i32 1
  %27 = bitcast i32* %7 to i8*
  %28 = bitcast %"class.leveldb::Slice"* %9 to i8*
  %29 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %9, i64 0, i32 0
  %30 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %9, i64 0, i32 1
  %31 = bitcast i32* %6 to i8*
  %32 = getelementptr inbounds i8, i8* %17, i64 5
  %33 = getelementptr inbounds i8, i8* %17, i64 1
  %34 = getelementptr inbounds %"class.leveldb::MemTable", %"class.leveldb::MemTable"* %0, i64 0, i32 3, i32 0, i32 0
  br label %35

35:                                               ; preds = %75, %4
  %36 = phi i64 [ %38, %75 ], [ %23, %4 ]
  %37 = phi %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* [ %40, %75 ], [ %20, %4 ]
  %38 = add nsw i64 %36, -1
  br label %39

39:                                               ; preds = %69, %35
  %40 = phi %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* [ %44, %69 ], [ %37, %35 ]
  %41 = getelementptr inbounds %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node", %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* %40, i64 0, i32 1, i64 %38, i32 0
  %42 = bitcast %"struct.std::__1::__atomic_base.13"* %41 to i64*
  %43 = load atomic i64, i64* %42 acquire, align 8
  %44 = inttoptr i64 %43 to %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*
  %45 = icmp eq i64 %43, 0
  br i1 %45, label %75, label %46

46:                                               ; preds = %39
  %47 = getelementptr inbounds %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node", %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* %44, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 16, i1 false) #8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27) #8
  store i32 -1431655766, i32* %7, align 4
  %49 = load i8, i8* %48, align 1
  %50 = icmp sgt i8 %49, -1
  br i1 %50, label %51, label %54

51:                                               ; preds = %46
  %52 = zext i8 %49 to i32
  store i32 %52, i32* %7, align 4
  %53 = getelementptr inbounds i8, i8* %48, i64 1
  br label %58

54:                                               ; preds = %46
  %55 = getelementptr inbounds i8, i8* %48, i64 5
  %56 = call i8* @_ZN7leveldb22GetVarint32PtrFallbackEPKcS1_Pj(i8* %48, i8* %55, i32* nonnull %7) #8
  %57 = load i32, i32* %7, align 4
  br label %58

58:                                               ; preds = %54, %51
  %59 = phi i32 [ %57, %54 ], [ %52, %51 ]
  %60 = phi i8* [ %56, %54 ], [ %53, %51 ]
  %61 = zext i32 %59 to i64
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #8
  store i8* %60, i8** %25, align 8
  store i64 %61, i64* %26, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 16, i1 false) #8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %31) #8
  store i32 -1431655766, i32* %6, align 4
  %62 = load i8, i8* %17, align 1
  %63 = icmp sgt i8 %62, -1
  br i1 %63, label %64, label %66

64:                                               ; preds = %58
  %65 = zext i8 %62 to i32
  store i32 %65, i32* %6, align 4
  br label %69

66:                                               ; preds = %58
  %67 = call i8* @_ZN7leveldb22GetVarint32PtrFallbackEPKcS1_Pj(i8* %17, i8* %32, i32* nonnull %6) #8
  %68 = load i32, i32* %6, align 4
  br label %69

69:                                               ; preds = %64, %66
  %70 = phi i32 [ %68, %66 ], [ %65, %64 ]
  %71 = phi i8* [ %67, %66 ], [ %33, %64 ]
  %72 = zext i32 %70 to i64
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %31) #8
  store i8* %71, i8** %29, align 8
  store i64 %72, i64* %30, align 8
  %73 = call i32 @_ZNK7leveldb21InternalKeyComparator7CompareERKNS_5SliceES3_(%"class.leveldb::InternalKeyComparator"* %34, %"class.leveldb::Slice"* nonnull dereferenceable(16) %8, %"class.leveldb::Slice"* nonnull dereferenceable(16) %9) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #8
  %74 = icmp slt i32 %73, 0
  br i1 %74, label %39, label %75

75:                                               ; preds = %39, %69
  %76 = icmp eq i64 %38, 0
  br i1 %76, label %77, label %35

77:                                               ; preds = %75
  %78 = bitcast i8** %18 to i64*
  %79 = icmp eq i64 %43, 0
  br i1 %79, label %181, label %80

80:                                               ; preds = %77
  %81 = inttoptr i64 %43 to %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*
  %82 = getelementptr inbounds %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node", %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* %81, i64 0, i32 0
  %83 = load i8*, i8** %82, align 8
  %84 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %84) #8
  store i32 -1431655766, i32* %10, align 4
  %85 = load i8, i8* %83, align 1
  %86 = icmp sgt i8 %85, -1
  br i1 %86, label %87, label %90

87:                                               ; preds = %80
  %88 = zext i8 %85 to i32
  store i32 %88, i32* %10, align 4
  %89 = getelementptr inbounds i8, i8* %83, i64 1
  br label %94

90:                                               ; preds = %80
  %91 = getelementptr inbounds i8, i8* %83, i64 5
  %92 = call i8* @_ZN7leveldb22GetVarint32PtrFallbackEPKcS1_Pj(i8* %83, i8* %91, i32* nonnull %10) #8
  %93 = load i32, i32* %10, align 4
  br label %94

94:                                               ; preds = %87, %90
  %95 = phi i32 [ %93, %90 ], [ %88, %87 ]
  %96 = phi i8* [ %92, %90 ], [ %89, %87 ]
  %97 = getelementptr inbounds %"class.leveldb::MemTable", %"class.leveldb::MemTable"* %0, i64 0, i32 0, i32 0, i32 1
  %98 = load %"class.leveldb::Comparator"*, %"class.leveldb::Comparator"** %97, align 8
  %99 = bitcast %"class.leveldb::Slice"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %99) #8
  %100 = add i32 %95, -8
  %101 = zext i32 %100 to i64
  %102 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %11, i64 0, i32 0
  store i8* %96, i8** %102, align 8
  %103 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %11, i64 0, i32 1
  store i64 %101, i64* %103, align 8
  %104 = bitcast %"class.leveldb::Slice"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %104) #8
  %105 = getelementptr inbounds %"class.leveldb::LookupKey", %"class.leveldb::LookupKey"* %1, i64 0, i32 1
  %106 = load i8*, i8** %105, align 8
  %107 = load i64, i64* %78, align 8
  %108 = ptrtoint i8* %106 to i64
  %109 = sub i64 -8, %108
  %110 = add i64 %109, %107
  %111 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %12, i64 0, i32 0
  store i8* %106, i8** %111, align 8
  %112 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %12, i64 0, i32 1
  store i64 %110, i64* %112, align 8
  %113 = bitcast %"class.leveldb::Comparator"* %98 to i32 (%"class.leveldb::Comparator"*, %"class.leveldb::Slice"*, %"class.leveldb::Slice"*)***
  %114 = load i32 (%"class.leveldb::Comparator"*, %"class.leveldb::Slice"*, %"class.leveldb::Slice"*)**, i32 (%"class.leveldb::Comparator"*, %"class.leveldb::Slice"*, %"class.leveldb::Slice"*)*** %113, align 8
  %115 = getelementptr inbounds i32 (%"class.leveldb::Comparator"*, %"class.leveldb::Slice"*, %"class.leveldb::Slice"*)*, i32 (%"class.leveldb::Comparator"*, %"class.leveldb::Slice"*, %"class.leveldb::Slice"*)** %114, i64 2
  %116 = load i32 (%"class.leveldb::Comparator"*, %"class.leveldb::Slice"*, %"class.leveldb::Slice"*)*, i32 (%"class.leveldb::Comparator"*, %"class.leveldb::Slice"*, %"class.leveldb::Slice"*)** %115, align 8
  %117 = call i32 %116(%"class.leveldb::Comparator"* %98, %"class.leveldb::Slice"* nonnull dereferenceable(16) %11, %"class.leveldb::Slice"* nonnull dereferenceable(16) %12) #8
  %118 = icmp eq i32 %117, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %104) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %99) #8
  br i1 %118, label %119, label %179

119:                                              ; preds = %94
  %120 = load i32, i32* %10, align 4
  %121 = zext i32 %120 to i64
  %122 = getelementptr inbounds i8, i8* %96, i64 %121
  %123 = getelementptr inbounds i8, i8* %122, i64 -8
  %124 = load i8, i8* %123, align 1
  switch i8 %124, label %179 [
    i8 1, label %125
    i8 0, label %163
  ]

125:                                              ; preds = %119
  %126 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %126) #8
  store i32 -1431655766, i32* %5, align 4
  %127 = load i8, i8* %122, align 1
  %128 = icmp sgt i8 %127, -1
  br i1 %128, label %129, label %132

129:                                              ; preds = %125
  %130 = zext i8 %127 to i32
  store i32 %130, i32* %5, align 4
  %131 = getelementptr inbounds i8, i8* %122, i64 1
  br label %136

132:                                              ; preds = %125
  %133 = getelementptr inbounds i8, i8* %122, i64 5
  %134 = call i8* @_ZN7leveldb22GetVarint32PtrFallbackEPKcS1_Pj(i8* %122, i8* %133, i32* nonnull %5) #8
  %135 = load i32, i32* %5, align 4
  br label %136

136:                                              ; preds = %129, %132
  %137 = phi i32 [ %135, %132 ], [ %130, %129 ]
  %138 = phi i8* [ %134, %132 ], [ %131, %129 ]
  %139 = zext i32 %137 to i64
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %126) #8
  %140 = call i1 @llvm.is.constant.i64(i64 %139) #8
  %141 = icmp ult i32 %137, 23
  %142 = and i1 %141, %140
  br i1 %142, label %143, label %161

143:                                              ; preds = %136
  %144 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %145 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %144, i64 0, i32 1, i32 0
  %146 = load i8, i8* %145, align 1
  %147 = icmp slt i8 %146, 0
  br i1 %147, label %148, label %152

148:                                              ; preds = %143
  %149 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %139, i64* %149, align 8
  %150 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = load i8*, i8** %150, align 8
  br label %155

152:                                              ; preds = %143
  %153 = trunc i32 %137 to i8
  store i8 %153, i8* %145, align 1
  %154 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  br label %155

155:                                              ; preds = %152, %148
  %156 = phi i8* [ %151, %148 ], [ %154, %152 ]
  %157 = icmp eq i32 %137, 0
  br i1 %157, label %159, label %158

158:                                              ; preds = %155
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %156, i8* align 1 %138, i64 %139, i1 false) #8
  br label %159

159:                                              ; preds = %158, %155
  %160 = getelementptr inbounds i8, i8* %156, i64 %139
  store i8 0, i8* %160, align 1
  br label %179

161:                                              ; preds = %136
  %162 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %2, i8* %138, i64 %139) #8
  br label %179

163:                                              ; preds = %119
  %164 = bitcast %"class.leveldb::Status"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %164) #8
  %165 = bitcast %"class.leveldb::Slice"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %165) #8
  %166 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %14, i64 0, i32 0
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8** %166, align 8
  %167 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %14, i64 0, i32 1
  store i64 0, i64* %167, align 8
  %168 = bitcast %"class.leveldb::Slice"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %168) #8
  %169 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %15, i64 0, i32 0
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8** %169, align 8
  %170 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %15, i64 0, i32 1
  store i64 0, i64* %170, align 8
  call void @_ZN7leveldb6StatusC1ENS0_4CodeERKNS_5SliceES4_(%"class.leveldb::Status"* nonnull %13, i32 1, %"class.leveldb::Slice"* nonnull dereferenceable(16) %14, %"class.leveldb::Slice"* nonnull dereferenceable(16) %15) #8
  %171 = bitcast %"class.leveldb::Status"* %3 to i64*
  %172 = load i64, i64* %171, align 8
  %173 = bitcast %"class.leveldb::Status"* %13 to i64*
  %174 = load i64, i64* %173, align 8
  store i64 %174, i64* %171, align 8
  store i64 %172, i64* %173, align 8
  %175 = icmp eq i64 %172, 0
  br i1 %175, label %178, label %176

176:                                              ; preds = %163
  %177 = inttoptr i64 %172 to i8*
  call void @_ZdaPv(i8* nonnull %177) #9
  br label %178

178:                                              ; preds = %163, %176
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %168) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %165) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %164) #8
  br label %179

179:                                              ; preds = %161, %159, %178, %94, %119
  %180 = phi i1 [ false, %119 ], [ false, %94 ], [ true, %178 ], [ true, %159 ], [ true, %161 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %84) #8
  br label %181

181:                                              ; preds = %179, %77
  %182 = phi i1 [ false, %77 ], [ %180, %179 ]
  ret i1 %182
}

; Function Attrs: nounwind
declare void @_ZN7leveldb10ComparatorD2Ev(%"class.leveldb::Comparator"*) unnamed_addr #2

declare void @_ZN7leveldb8IteratorC2Ev(%"class.leveldb::Iterator"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7leveldb16MemTableIteratorD2Ev(%"class.leveldb::MemTableIterator"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.leveldb::MemTableIterator", %"class.leveldb::MemTableIterator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN7leveldb16MemTableIteratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.leveldb::MemTableIterator", %"class.leveldb::MemTableIterator"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #9
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.leveldb::MemTableIterator", %"class.leveldb::MemTableIterator"* %0, i64 0, i32 0
  tail call void @_ZN7leveldb8IteratorD2Ev(%"class.leveldb::Iterator"* %12) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7leveldb16MemTableIteratorD0Ev(%"class.leveldb::MemTableIterator"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.leveldb::MemTableIterator", %"class.leveldb::MemTableIterator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN7leveldb16MemTableIteratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.leveldb::MemTableIterator", %"class.leveldb::MemTableIterator"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #9
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.leveldb::MemTableIterator", %"class.leveldb::MemTableIterator"* %0, i64 0, i32 0
  tail call void @_ZN7leveldb8IteratorD2Ev(%"class.leveldb::Iterator"* %12) #8
  %13 = bitcast %"class.leveldb::MemTableIterator"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK7leveldb16MemTableIterator5ValidEv(%"class.leveldb::MemTableIterator"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.leveldb::MemTableIterator", %"class.leveldb::MemTableIterator"* %0, i64 0, i32 1, i32 1
  %3 = load %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*, %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"** %2, align 8
  %4 = icmp ne %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* %3, null
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7leveldb16MemTableIterator11SeekToFirstEv(%"class.leveldb::MemTableIterator"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.leveldb::MemTableIterator", %"class.leveldb::MemTableIterator"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.leveldb::SkipList"*, %"class.leveldb::SkipList"** %2, align 8
  %4 = getelementptr inbounds %"class.leveldb::SkipList", %"class.leveldb::SkipList"* %3, i64 0, i32 2
  %5 = load %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*, %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"** %4, align 8
  %6 = getelementptr inbounds %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node", %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* %5, i64 0, i32 1, i64 0, i32 0
  %7 = bitcast %"struct.std::__1::__atomic_base.13"* %6 to i64*
  %8 = load atomic i64, i64* %7 acquire, align 8
  %9 = inttoptr i64 %8 to %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*
  %10 = getelementptr inbounds %"class.leveldb::MemTableIterator", %"class.leveldb::MemTableIterator"* %0, i64 0, i32 1, i32 1
  store %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* %9, %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"** %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7leveldb16MemTableIterator10SeekToLastEv(%"class.leveldb::MemTableIterator"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.leveldb::MemTableIterator", %"class.leveldb::MemTableIterator"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.leveldb::SkipList"*, %"class.leveldb::SkipList"** %2, align 8
  %4 = getelementptr inbounds %"class.leveldb::SkipList", %"class.leveldb::SkipList"* %3, i64 0, i32 2
  %5 = load %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*, %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"** %4, align 8
  %6 = getelementptr inbounds %"class.leveldb::SkipList", %"class.leveldb::SkipList"* %3, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = sext i32 %7 to i64
  %9 = add nsw i64 %8, -1
  %10 = and i64 %8, 3
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %27, label %12

12:                                               ; preds = %1, %24
  %13 = phi i64 [ %16, %24 ], [ %8, %1 ]
  %14 = phi %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* [ %18, %24 ], [ %5, %1 ]
  %15 = phi i64 [ %25, %24 ], [ %10, %1 ]
  %16 = add nsw i64 %13, -1
  br label %17

17:                                               ; preds = %17, %12
  %18 = phi %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* [ %22, %17 ], [ %14, %12 ]
  %19 = getelementptr inbounds %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node", %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* %18, i64 0, i32 1, i64 %16, i32 0
  %20 = bitcast %"struct.std::__1::__atomic_base.13"* %19 to i64*
  %21 = load atomic i64, i64* %20 acquire, align 8
  %22 = inttoptr i64 %21 to %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*
  %23 = icmp eq i64 %21, 0
  br i1 %23, label %24, label %17

24:                                               ; preds = %17
  %25 = add i64 %15, -1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %12, !llvm.loop !9

27:                                               ; preds = %24, %1
  %28 = phi %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* [ undef, %1 ], [ %18, %24 ]
  %29 = phi i64 [ %8, %1 ], [ %16, %24 ]
  %30 = phi %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* [ %5, %1 ], [ %18, %24 ]
  %31 = icmp ult i64 %9, 3
  br i1 %31, label %45, label %32

32:                                               ; preds = %27, %78
  %33 = phi i64 [ %70, %78 ], [ %29, %27 ]
  %34 = phi %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* [ %72, %78 ], [ %30, %27 ]
  %35 = add nsw i64 %33, -1
  br label %36

36:                                               ; preds = %36, %32
  %37 = phi %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* [ %41, %36 ], [ %34, %32 ]
  %38 = getelementptr inbounds %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node", %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* %37, i64 0, i32 1, i64 %35, i32 0
  %39 = bitcast %"struct.std::__1::__atomic_base.13"* %38 to i64*
  %40 = load atomic i64, i64* %39 acquire, align 8
  %41 = inttoptr i64 %40 to %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*
  %42 = icmp eq i64 %40, 0
  br i1 %42, label %43, label %36

43:                                               ; preds = %36
  %44 = add nsw i64 %33, -2
  br label %53

45:                                               ; preds = %78, %27
  %46 = phi %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* [ %28, %27 ], [ %72, %78 ]
  %47 = getelementptr inbounds %"class.leveldb::MemTableIterator", %"class.leveldb::MemTableIterator"* %0, i64 0, i32 1, i32 1
  store %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* %46, %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"** %47, align 8
  %48 = load %"class.leveldb::SkipList"*, %"class.leveldb::SkipList"** %2, align 8
  %49 = getelementptr inbounds %"class.leveldb::SkipList", %"class.leveldb::SkipList"* %48, i64 0, i32 2
  %50 = load %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*, %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"** %49, align 8
  %51 = icmp eq %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* %46, %50
  %52 = select i1 %51, %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* null, %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* %46
  store %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* %52, %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"** %47, align 8
  ret void

53:                                               ; preds = %53, %43
  %54 = phi %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* [ %58, %53 ], [ %37, %43 ]
  %55 = getelementptr inbounds %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node", %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* %54, i64 0, i32 1, i64 %44, i32 0
  %56 = bitcast %"struct.std::__1::__atomic_base.13"* %55 to i64*
  %57 = load atomic i64, i64* %56 acquire, align 8
  %58 = inttoptr i64 %57 to %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*
  %59 = icmp eq i64 %57, 0
  br i1 %59, label %60, label %53

60:                                               ; preds = %53
  %61 = add nsw i64 %33, -3
  br label %62

62:                                               ; preds = %62, %60
  %63 = phi %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* [ %67, %62 ], [ %54, %60 ]
  %64 = getelementptr inbounds %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node", %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* %63, i64 0, i32 1, i64 %61, i32 0
  %65 = bitcast %"struct.std::__1::__atomic_base.13"* %64 to i64*
  %66 = load atomic i64, i64* %65 acquire, align 8
  %67 = inttoptr i64 %66 to %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*
  %68 = icmp eq i64 %66, 0
  br i1 %68, label %69, label %62

69:                                               ; preds = %62
  %70 = add nsw i64 %33, -4
  br label %71

71:                                               ; preds = %71, %69
  %72 = phi %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* [ %76, %71 ], [ %63, %69 ]
  %73 = getelementptr inbounds %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node", %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* %72, i64 0, i32 1, i64 %70, i32 0
  %74 = bitcast %"struct.std::__1::__atomic_base.13"* %73 to i64*
  %75 = load atomic i64, i64* %74 acquire, align 8
  %76 = inttoptr i64 %75 to %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*
  %77 = icmp eq i64 %75, 0
  br i1 %77, label %78, label %71

78:                                               ; preds = %71
  %79 = icmp eq i64 %70, 0
  br i1 %79, label %45, label %32
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7leveldb16MemTableIterator4SeekERKNS_5SliceE(%"class.leveldb::MemTableIterator"*, %"class.leveldb::Slice"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %"class.leveldb::Slice", align 8
  %6 = alloca %"class.leveldb::Slice", align 8
  %7 = getelementptr inbounds %"class.leveldb::MemTableIterator", %"class.leveldb::MemTableIterator"* %0, i64 0, i32 2
  %8 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %16

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  store i8 0, i8* %14, align 1
  %15 = getelementptr inbounds %"class.leveldb::MemTableIterator", %"class.leveldb::MemTableIterator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %15, align 8
  br label %18

16:                                               ; preds = %2
  %17 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  store i8 0, i8* %17, align 1
  store i8 0, i8* %9, align 1
  br label %18

18:                                               ; preds = %16, %12
  %19 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %1, i64 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = trunc i64 %20 to i32
  tail call void @_ZN7leveldb11PutVarint32EPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEj(%"class.std::__1::basic_string"* %7, i32 %21) #8
  %22 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %1, i64 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = load i64, i64* %19, align 8
  %25 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %7, i8* %23, i64 %24) #8
  %26 = load i8, i8* %9, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %18
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  br label %33

31:                                               ; preds = %18
  %32 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  br label %33

33:                                               ; preds = %28, %31
  %34 = phi i8* [ %30, %28 ], [ %32, %31 ]
  %35 = getelementptr inbounds %"class.leveldb::MemTableIterator", %"class.leveldb::MemTableIterator"* %0, i64 0, i32 1, i32 0
  %36 = load %"class.leveldb::SkipList"*, %"class.leveldb::SkipList"** %35, align 8
  %37 = getelementptr inbounds %"class.leveldb::SkipList", %"class.leveldb::SkipList"* %36, i64 0, i32 2
  %38 = load %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*, %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"** %37, align 8
  %39 = getelementptr inbounds %"class.leveldb::SkipList", %"class.leveldb::SkipList"* %36, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = sext i32 %40 to i64
  %42 = bitcast %"class.leveldb::Slice"* %5 to i8*
  %43 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %5, i64 0, i32 0
  %44 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %5, i64 0, i32 1
  %45 = bitcast i32* %4 to i8*
  %46 = bitcast %"class.leveldb::Slice"* %6 to i8*
  %47 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %6, i64 0, i32 0
  %48 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %6, i64 0, i32 1
  %49 = bitcast i32* %3 to i8*
  %50 = getelementptr inbounds i8, i8* %34, i64 5
  %51 = getelementptr inbounds i8, i8* %34, i64 1
  %52 = getelementptr inbounds %"class.leveldb::SkipList", %"class.leveldb::SkipList"* %36, i64 0, i32 0, i32 0
  br label %53

53:                                               ; preds = %93, %33
  %54 = phi i64 [ %56, %93 ], [ %41, %33 ]
  %55 = phi %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* [ %58, %93 ], [ %38, %33 ]
  %56 = add nsw i64 %54, -1
  br label %57

57:                                               ; preds = %87, %53
  %58 = phi %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* [ %62, %87 ], [ %55, %53 ]
  %59 = getelementptr inbounds %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node", %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* %58, i64 0, i32 1, i64 %56, i32 0
  %60 = bitcast %"struct.std::__1::__atomic_base.13"* %59 to i64*
  %61 = load atomic i64, i64* %60 acquire, align 8
  %62 = inttoptr i64 %61 to %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*
  %63 = icmp eq i64 %61, 0
  br i1 %63, label %93, label %64

64:                                               ; preds = %57
  %65 = getelementptr inbounds %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node", %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* %62, i64 0, i32 0
  %66 = load i8*, i8** %65, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 -86, i64 16, i1 false) #8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %45) #8
  store i32 -1431655766, i32* %4, align 4
  %67 = load i8, i8* %66, align 1
  %68 = icmp sgt i8 %67, -1
  br i1 %68, label %69, label %72

69:                                               ; preds = %64
  %70 = zext i8 %67 to i32
  store i32 %70, i32* %4, align 4
  %71 = getelementptr inbounds i8, i8* %66, i64 1
  br label %76

72:                                               ; preds = %64
  %73 = getelementptr inbounds i8, i8* %66, i64 5
  %74 = call i8* @_ZN7leveldb22GetVarint32PtrFallbackEPKcS1_Pj(i8* %66, i8* %73, i32* nonnull %4) #8
  %75 = load i32, i32* %4, align 4
  br label %76

76:                                               ; preds = %72, %69
  %77 = phi i32 [ %75, %72 ], [ %70, %69 ]
  %78 = phi i8* [ %74, %72 ], [ %71, %69 ]
  %79 = zext i32 %77 to i64
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %45) #8
  store i8* %78, i8** %43, align 8
  store i64 %79, i64* %44, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 16, i1 false) #8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %49) #8
  store i32 -1431655766, i32* %3, align 4
  %80 = load i8, i8* %34, align 1
  %81 = icmp sgt i8 %80, -1
  br i1 %81, label %82, label %84

82:                                               ; preds = %76
  %83 = zext i8 %80 to i32
  store i32 %83, i32* %3, align 4
  br label %87

84:                                               ; preds = %76
  %85 = call i8* @_ZN7leveldb22GetVarint32PtrFallbackEPKcS1_Pj(i8* %34, i8* %50, i32* nonnull %3) #8
  %86 = load i32, i32* %3, align 4
  br label %87

87:                                               ; preds = %82, %84
  %88 = phi i32 [ %86, %84 ], [ %83, %82 ]
  %89 = phi i8* [ %85, %84 ], [ %51, %82 ]
  %90 = zext i32 %88 to i64
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %49) #8
  store i8* %89, i8** %47, align 8
  store i64 %90, i64* %48, align 8
  %91 = call i32 @_ZNK7leveldb21InternalKeyComparator7CompareERKNS_5SliceES3_(%"class.leveldb::InternalKeyComparator"* %52, %"class.leveldb::Slice"* nonnull dereferenceable(16) %5, %"class.leveldb::Slice"* nonnull dereferenceable(16) %6) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #8
  %92 = icmp slt i32 %91, 0
  br i1 %92, label %57, label %93

93:                                               ; preds = %57, %87
  %94 = icmp eq i64 %56, 0
  br i1 %94, label %95, label %53

95:                                               ; preds = %93
  %96 = inttoptr i64 %61 to %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*
  %97 = getelementptr inbounds %"class.leveldb::MemTableIterator", %"class.leveldb::MemTableIterator"* %0, i64 0, i32 1, i32 1
  store %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* %96, %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"** %97, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7leveldb16MemTableIterator4NextEv(%"class.leveldb::MemTableIterator"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.leveldb::MemTableIterator", %"class.leveldb::MemTableIterator"* %0, i64 0, i32 1, i32 1
  %3 = load %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*, %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"** %2, align 8
  %4 = getelementptr inbounds %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node", %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* %3, i64 0, i32 1, i64 0, i32 0
  %5 = bitcast %"struct.std::__1::__atomic_base.13"* %4 to i64*
  %6 = load atomic i64, i64* %5 acquire, align 8
  %7 = inttoptr i64 %6 to %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*
  store %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* %7, %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7leveldb16MemTableIterator4PrevEv(%"class.leveldb::MemTableIterator"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %"class.leveldb::Slice", align 8
  %5 = alloca %"class.leveldb::Slice", align 8
  %6 = getelementptr inbounds %"class.leveldb::MemTableIterator", %"class.leveldb::MemTableIterator"* %0, i64 0, i32 1, i32 0
  %7 = load %"class.leveldb::SkipList"*, %"class.leveldb::SkipList"** %6, align 8
  %8 = getelementptr inbounds %"class.leveldb::MemTableIterator", %"class.leveldb::MemTableIterator"* %0, i64 0, i32 1, i32 1
  %9 = load %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*, %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"** %8, align 8
  %10 = getelementptr inbounds %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node", %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* %9, i64 0, i32 0
  %11 = getelementptr inbounds %"class.leveldb::SkipList", %"class.leveldb::SkipList"* %7, i64 0, i32 2
  %12 = load %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*, %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"** %11, align 8
  %13 = getelementptr inbounds %"class.leveldb::SkipList", %"class.leveldb::SkipList"* %7, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = bitcast %"class.leveldb::Slice"* %4 to i8*
  %16 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %4, i64 0, i32 0
  %17 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %4, i64 0, i32 1
  %18 = bitcast i32* %3 to i8*
  %19 = bitcast %"class.leveldb::Slice"* %5 to i8*
  %20 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %5, i64 0, i32 0
  %21 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %5, i64 0, i32 1
  %22 = bitcast i32* %2 to i8*
  %23 = getelementptr inbounds %"class.leveldb::SkipList", %"class.leveldb::SkipList"* %7, i64 0, i32 0, i32 0
  %24 = sext i32 %14 to i64
  br label %25

25:                                               ; preds = %68, %1
  %26 = phi i64 [ %28, %68 ], [ %24, %1 ]
  %27 = phi %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* [ %30, %68 ], [ %12, %1 ]
  %28 = add nsw i64 %26, -1
  br label %29

29:                                               ; preds = %62, %25
  %30 = phi %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* [ %34, %62 ], [ %27, %25 ]
  %31 = getelementptr inbounds %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node", %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* %30, i64 0, i32 1, i64 %28, i32 0
  %32 = bitcast %"struct.std::__1::__atomic_base.13"* %31 to i64*
  %33 = load atomic i64, i64* %32 acquire, align 8
  %34 = inttoptr i64 %33 to %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*
  %35 = icmp eq i64 %33, 0
  br i1 %35, label %68, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node", %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* %34, i64 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = load i8*, i8** %10, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 16, i1 false) #8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #8
  store i32 -1431655766, i32* %3, align 4
  %40 = load i8, i8* %38, align 1
  %41 = icmp sgt i8 %40, -1
  br i1 %41, label %42, label %45

42:                                               ; preds = %36
  %43 = zext i8 %40 to i32
  store i32 %43, i32* %3, align 4
  %44 = getelementptr inbounds i8, i8* %38, i64 1
  br label %49

45:                                               ; preds = %36
  %46 = getelementptr inbounds i8, i8* %38, i64 5
  %47 = call i8* @_ZN7leveldb22GetVarint32PtrFallbackEPKcS1_Pj(i8* %38, i8* %46, i32* nonnull %3) #8
  %48 = load i32, i32* %3, align 4
  br label %49

49:                                               ; preds = %45, %42
  %50 = phi i32 [ %48, %45 ], [ %43, %42 ]
  %51 = phi i8* [ %47, %45 ], [ %44, %42 ]
  %52 = zext i32 %50 to i64
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #8
  store i8* %51, i8** %16, align 8
  store i64 %52, i64* %17, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 16, i1 false) #8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22) #8
  store i32 -1431655766, i32* %2, align 4
  %53 = load i8, i8* %39, align 1
  %54 = icmp sgt i8 %53, -1
  br i1 %54, label %55, label %58

55:                                               ; preds = %49
  %56 = zext i8 %53 to i32
  store i32 %56, i32* %2, align 4
  %57 = getelementptr inbounds i8, i8* %39, i64 1
  br label %62

58:                                               ; preds = %49
  %59 = getelementptr inbounds i8, i8* %39, i64 5
  %60 = call i8* @_ZN7leveldb22GetVarint32PtrFallbackEPKcS1_Pj(i8* %39, i8* %59, i32* nonnull %2) #8
  %61 = load i32, i32* %2, align 4
  br label %62

62:                                               ; preds = %58, %55
  %63 = phi i32 [ %61, %58 ], [ %56, %55 ]
  %64 = phi i8* [ %60, %58 ], [ %57, %55 ]
  %65 = zext i32 %63 to i64
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #8
  store i8* %64, i8** %20, align 8
  store i64 %65, i64* %21, align 8
  %66 = call i32 @_ZNK7leveldb21InternalKeyComparator7CompareERKNS_5SliceES3_(%"class.leveldb::InternalKeyComparator"* %23, %"class.leveldb::Slice"* nonnull dereferenceable(16) %4, %"class.leveldb::Slice"* nonnull dereferenceable(16) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #8
  %67 = icmp sgt i32 %66, -1
  br i1 %67, label %68, label %29

68:                                               ; preds = %62, %29
  %69 = icmp eq i64 %28, 0
  br i1 %69, label %70, label %25

70:                                               ; preds = %68
  store %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* %30, %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"** %8, align 8
  %71 = load %"class.leveldb::SkipList"*, %"class.leveldb::SkipList"** %6, align 8
  %72 = getelementptr inbounds %"class.leveldb::SkipList", %"class.leveldb::SkipList"* %71, i64 0, i32 2
  %73 = load %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*, %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"** %72, align 8
  %74 = icmp eq %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* %30, %73
  %75 = select i1 %74, %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* null, %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* %30
  store %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* %75, %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"** %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i64 } @_ZNK7leveldb16MemTableIterator3keyEv(%"class.leveldb::MemTableIterator"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %"class.leveldb::MemTableIterator", %"class.leveldb::MemTableIterator"* %0, i64 0, i32 1, i32 1
  %4 = load %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*, %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"** %3, align 8
  %5 = getelementptr inbounds %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node", %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* %4, i64 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #8
  store i32 -1431655766, i32* %2, align 4
  %8 = load i8, i8* %6, align 1
  %9 = icmp sgt i8 %8, -1
  br i1 %9, label %10, label %13

10:                                               ; preds = %1
  %11 = zext i8 %8 to i32
  store i32 %11, i32* %2, align 4
  %12 = getelementptr inbounds i8, i8* %6, i64 1
  br label %17

13:                                               ; preds = %1
  %14 = getelementptr inbounds i8, i8* %6, i64 5
  %15 = call i8* @_ZN7leveldb22GetVarint32PtrFallbackEPKcS1_Pj(i8* %6, i8* %14, i32* nonnull %2) #8
  %16 = load i32, i32* %2, align 4
  br label %17

17:                                               ; preds = %10, %13
  %18 = phi i32 [ %16, %13 ], [ %11, %10 ]
  %19 = phi i8* [ %15, %13 ], [ %12, %10 ]
  %20 = zext i32 %18 to i64
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #8
  %21 = insertvalue { i8*, i64 } undef, i8* %19, 0
  %22 = insertvalue { i8*, i64 } %21, i64 %20, 1
  ret { i8*, i64 } %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i64 } @_ZNK7leveldb16MemTableIterator5valueEv(%"class.leveldb::MemTableIterator"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %"class.leveldb::MemTableIterator", %"class.leveldb::MemTableIterator"* %0, i64 0, i32 1, i32 1
  %5 = load %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*, %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"** %4, align 8
  %6 = getelementptr inbounds %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node", %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* %5, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #8
  store i32 -1431655766, i32* %2, align 4
  %9 = load i8, i8* %7, align 1
  %10 = icmp sgt i8 %9, -1
  br i1 %10, label %11, label %14

11:                                               ; preds = %1
  %12 = zext i8 %9 to i32
  store i32 %12, i32* %2, align 4
  %13 = getelementptr inbounds i8, i8* %7, i64 1
  br label %18

14:                                               ; preds = %1
  %15 = getelementptr inbounds i8, i8* %7, i64 5
  %16 = call i8* @_ZN7leveldb22GetVarint32PtrFallbackEPKcS1_Pj(i8* %7, i8* %15, i32* nonnull %2) #8
  %17 = load i32, i32* %2, align 4
  br label %18

18:                                               ; preds = %11, %14
  %19 = phi i32 [ %17, %14 ], [ %12, %11 ]
  %20 = phi i8* [ %16, %14 ], [ %13, %11 ]
  %21 = zext i32 %19 to i64
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #8
  %22 = getelementptr inbounds i8, i8* %20, i64 %21
  %23 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %23) #8
  store i32 -1431655766, i32* %3, align 4
  %24 = load i8, i8* %22, align 1
  %25 = icmp sgt i8 %24, -1
  br i1 %25, label %26, label %29

26:                                               ; preds = %18
  %27 = zext i8 %24 to i32
  store i32 %27, i32* %3, align 4
  %28 = getelementptr inbounds i8, i8* %22, i64 1
  br label %33

29:                                               ; preds = %18
  %30 = getelementptr inbounds i8, i8* %22, i64 5
  %31 = call i8* @_ZN7leveldb22GetVarint32PtrFallbackEPKcS1_Pj(i8* %22, i8* %30, i32* nonnull %3) #8
  %32 = load i32, i32* %3, align 4
  br label %33

33:                                               ; preds = %26, %29
  %34 = phi i32 [ %32, %29 ], [ %27, %26 ]
  %35 = phi i8* [ %31, %29 ], [ %28, %26 ]
  %36 = zext i32 %34 to i64
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23) #8
  %37 = insertvalue { i8*, i64 } undef, i8* %35, 0
  %38 = insertvalue { i8*, i64 } %37, i64 %36, 1
  ret { i8*, i64 } %38
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK7leveldb16MemTableIterator6statusEv(%"class.leveldb::Status"* noalias sret, %"class.leveldb::MemTableIterator"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.leveldb::Status", %"class.leveldb::Status"* %0, i64 0, i32 0
  store i8* null, i8** %3, align 8, !alias.scope !10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN7leveldb8IteratorD2Ev(%"class.leveldb::Iterator"*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare void @_ZN7leveldb11PutVarint32EPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEj(%"class.std::__1::basic_string"*, i32) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare i8* @_ZN7leveldb5Arena16AllocateFallbackEm(%"class.leveldb::Arena"*, i64) local_unnamed_addr #1

declare i8* @_ZN7leveldb22GetVarint32PtrFallbackEPKcS1_Pj(i8*, i8*, i32*) local_unnamed_addr #1

declare void @_ZN7leveldb6StatusC1ENS0_4CodeERKNS_5SliceES4_(%"class.leveldb::Status"*, i32, %"class.leveldb::Slice"* dereferenceable(16), %"class.leveldb::Slice"* dereferenceable(16)) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #7

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #4

declare i8* @_ZN7leveldb5Arena15AllocateAlignedEm(%"class.leveldb::Arena"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK7leveldb8SkipListIPKcNS_8MemTable13KeyComparatorEE14KeyIsAfterNodeERKS2_PNS5_4NodeE(%"class.leveldb::SkipList"*, i8** dereferenceable(8), %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %"class.leveldb::Slice", align 8
  %7 = alloca %"class.leveldb::Slice", align 8
  %8 = icmp eq %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* %2, null
  br i1 %8, label %50, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node", %"struct.leveldb::SkipList<const char *, leveldb::MemTable::KeyComparator>::Node"* %2, i64 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = load i8*, i8** %1, align 8
  %13 = bitcast %"class.leveldb::Slice"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #8
  %14 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %6, i64 0, i32 0
  %15 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %6, i64 0, i32 1
  %16 = bitcast i32* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false) #8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #8
  store i32 -1431655766, i32* %5, align 4
  %17 = load i8, i8* %11, align 1
  %18 = icmp sgt i8 %17, -1
  br i1 %18, label %19, label %22

19:                                               ; preds = %9
  %20 = zext i8 %17 to i32
  store i32 %20, i32* %5, align 4
  %21 = getelementptr inbounds i8, i8* %11, i64 1
  br label %26

22:                                               ; preds = %9
  %23 = getelementptr inbounds i8, i8* %11, i64 5
  %24 = call i8* @_ZN7leveldb22GetVarint32PtrFallbackEPKcS1_Pj(i8* %11, i8* %23, i32* nonnull %5) #8
  %25 = load i32, i32* %5, align 4
  br label %26

26:                                               ; preds = %22, %19
  %27 = phi i32 [ %25, %22 ], [ %20, %19 ]
  %28 = phi i8* [ %24, %22 ], [ %21, %19 ]
  %29 = zext i32 %27 to i64
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #8
  store i8* %28, i8** %14, align 8
  store i64 %29, i64* %15, align 8
  %30 = bitcast %"class.leveldb::Slice"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #8
  %31 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %7, i64 0, i32 0
  %32 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %7, i64 0, i32 1
  %33 = bitcast i32* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 16, i1 false) #8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #8
  store i32 -1431655766, i32* %4, align 4
  %34 = load i8, i8* %12, align 1
  %35 = icmp sgt i8 %34, -1
  br i1 %35, label %36, label %39

36:                                               ; preds = %26
  %37 = zext i8 %34 to i32
  store i32 %37, i32* %4, align 4
  %38 = getelementptr inbounds i8, i8* %12, i64 1
  br label %43

39:                                               ; preds = %26
  %40 = getelementptr inbounds i8, i8* %12, i64 5
  %41 = call i8* @_ZN7leveldb22GetVarint32PtrFallbackEPKcS1_Pj(i8* %12, i8* %40, i32* nonnull %4) #8
  %42 = load i32, i32* %4, align 4
  br label %43

43:                                               ; preds = %36, %39
  %44 = phi i32 [ %42, %39 ], [ %37, %36 ]
  %45 = phi i8* [ %41, %39 ], [ %38, %36 ]
  %46 = zext i32 %44 to i64
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #8
  store i8* %45, i8** %31, align 8
  store i64 %46, i64* %32, align 8
  %47 = getelementptr inbounds %"class.leveldb::SkipList", %"class.leveldb::SkipList"* %0, i64 0, i32 0, i32 0
  %48 = call i32 @_ZNK7leveldb21InternalKeyComparator7CompareERKNS_5SliceES3_(%"class.leveldb::InternalKeyComparator"* %47, %"class.leveldb::Slice"* nonnull dereferenceable(16) %6, %"class.leveldb::Slice"* nonnull dereferenceable(16) %7) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #8
  %49 = icmp slt i32 %48, 0
  br label %50

50:                                               ; preds = %3, %43
  %51 = phi i1 [ false, %3 ], [ %49, %43 ]
  ret i1 %51
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN7leveldb8SkipListIPKcNS_8MemTable13KeyComparatorEE12RandomHeightEv(%"class.leveldb::SkipList"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.leveldb::SkipList", %"class.leveldb::SkipList"* %0, i64 0, i32 4, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = zext i32 %3 to i64
  %5 = mul nuw nsw i64 %4, 16807
  %6 = lshr i64 %5, 31
  %7 = and i64 %5, 2147483647
  %8 = add nuw nsw i64 %6, %7
  %9 = trunc i64 %8 to i32
  %10 = icmp slt i32 %9, 0
  %11 = add i32 %9, -2147483647
  %12 = select i1 %10, i32 %11, i32 %9
  %13 = and i32 %12, 3
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %1
  %16 = zext i32 %12 to i64
  %17 = mul nuw nsw i64 %16, 16807
  %18 = lshr i64 %17, 31
  %19 = and i64 %17, 2147483647
  %20 = add nuw nsw i64 %18, %19
  %21 = trunc i64 %20 to i32
  %22 = icmp slt i32 %21, 0
  %23 = add i32 %21, -2147483647
  %24 = select i1 %22, i32 %23, i32 %21
  %25 = and i32 %24, 3
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %126, %114, %102, %90, %78, %66, %54, %42, %30, %15, %1
  %28 = phi i32 [ %12, %1 ], [ %24, %15 ], [ %39, %30 ], [ %51, %42 ], [ %63, %54 ], [ %75, %66 ], [ %87, %78 ], [ %99, %90 ], [ %111, %102 ], [ %123, %114 ], [ %135, %126 ]
  %29 = phi i32 [ 1, %1 ], [ 2, %15 ], [ 3, %30 ], [ 4, %42 ], [ 5, %54 ], [ 6, %66 ], [ 7, %78 ], [ 8, %90 ], [ 9, %102 ], [ 10, %114 ], [ %138, %126 ]
  store i32 %28, i32* %2, align 4
  ret i32 %29

30:                                               ; preds = %15
  %31 = zext i32 %24 to i64
  %32 = mul nuw nsw i64 %31, 16807
  %33 = lshr i64 %32, 31
  %34 = and i64 %32, 2147483647
  %35 = add nuw nsw i64 %33, %34
  %36 = trunc i64 %35 to i32
  %37 = icmp slt i32 %36, 0
  %38 = add i32 %36, -2147483647
  %39 = select i1 %37, i32 %38, i32 %36
  %40 = and i32 %39, 3
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %27

42:                                               ; preds = %30
  %43 = zext i32 %39 to i64
  %44 = mul nuw nsw i64 %43, 16807
  %45 = lshr i64 %44, 31
  %46 = and i64 %44, 2147483647
  %47 = add nuw nsw i64 %45, %46
  %48 = trunc i64 %47 to i32
  %49 = icmp slt i32 %48, 0
  %50 = add i32 %48, -2147483647
  %51 = select i1 %49, i32 %50, i32 %48
  %52 = and i32 %51, 3
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %27

54:                                               ; preds = %42
  %55 = zext i32 %51 to i64
  %56 = mul nuw nsw i64 %55, 16807
  %57 = lshr i64 %56, 31
  %58 = and i64 %56, 2147483647
  %59 = add nuw nsw i64 %57, %58
  %60 = trunc i64 %59 to i32
  %61 = icmp slt i32 %60, 0
  %62 = add i32 %60, -2147483647
  %63 = select i1 %61, i32 %62, i32 %60
  %64 = and i32 %63, 3
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %27

66:                                               ; preds = %54
  %67 = zext i32 %63 to i64
  %68 = mul nuw nsw i64 %67, 16807
  %69 = lshr i64 %68, 31
  %70 = and i64 %68, 2147483647
  %71 = add nuw nsw i64 %69, %70
  %72 = trunc i64 %71 to i32
  %73 = icmp slt i32 %72, 0
  %74 = add i32 %72, -2147483647
  %75 = select i1 %73, i32 %74, i32 %72
  %76 = and i32 %75, 3
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %27

78:                                               ; preds = %66
  %79 = zext i32 %75 to i64
  %80 = mul nuw nsw i64 %79, 16807
  %81 = lshr i64 %80, 31
  %82 = and i64 %80, 2147483647
  %83 = add nuw nsw i64 %81, %82
  %84 = trunc i64 %83 to i32
  %85 = icmp slt i32 %84, 0
  %86 = add i32 %84, -2147483647
  %87 = select i1 %85, i32 %86, i32 %84
  %88 = and i32 %87, 3
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %27

90:                                               ; preds = %78
  %91 = zext i32 %87 to i64
  %92 = mul nuw nsw i64 %91, 16807
  %93 = lshr i64 %92, 31
  %94 = and i64 %92, 2147483647
  %95 = add nuw nsw i64 %93, %94
  %96 = trunc i64 %95 to i32
  %97 = icmp slt i32 %96, 0
  %98 = add i32 %96, -2147483647
  %99 = select i1 %97, i32 %98, i32 %96
  %100 = and i32 %99, 3
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %27

102:                                              ; preds = %90
  %103 = zext i32 %99 to i64
  %104 = mul nuw nsw i64 %103, 16807
  %105 = lshr i64 %104, 31
  %106 = and i64 %104, 2147483647
  %107 = add nuw nsw i64 %105, %106
  %108 = trunc i64 %107 to i32
  %109 = icmp slt i32 %108, 0
  %110 = add i32 %108, -2147483647
  %111 = select i1 %109, i32 %110, i32 %108
  %112 = and i32 %111, 3
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %27

114:                                              ; preds = %102
  %115 = zext i32 %111 to i64
  %116 = mul nuw nsw i64 %115, 16807
  %117 = lshr i64 %116, 31
  %118 = and i64 %116, 2147483647
  %119 = add nuw nsw i64 %117, %118
  %120 = trunc i64 %119 to i32
  %121 = icmp slt i32 %120, 0
  %122 = add i32 %120, -2147483647
  %123 = select i1 %121, i32 %122, i32 %120
  %124 = and i32 %123, 3
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %27

126:                                              ; preds = %114
  %127 = zext i32 %123 to i64
  %128 = mul nuw nsw i64 %127, 16807
  %129 = lshr i64 %128, 31
  %130 = and i64 %128, 2147483647
  %131 = add nuw nsw i64 %129, %130
  %132 = trunc i64 %131 to i32
  %133 = icmp slt i32 %132, 0
  %134 = add i32 %132, -2147483647
  %135 = select i1 %133, i32 %134, i32 %132
  %136 = and i32 %135, 3
  %137 = icmp eq i32 %136, 0
  %138 = select i1 %137, i32 12, i32 11
  br label %27
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
!6 = distinct !{!6, !7, !3}
!7 = !{!"llvm.loop.unroll.runtime.disable"}
!8 = distinct !{!8, !5}
!9 = distinct !{!9, !5}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN7leveldb6Status2OKEv: argument 0"}
!12 = distinct !{!12, !"_ZN7leveldb6Status2OKEv"}
