; ModuleID = '../../third_party/pdfium/xfa/fwl/cfwl_app.cpp'
source_filename = "../../third_party/pdfium/xfa/fwl/cfwl_app.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.22" }
%"struct.std::__1::__atomic_base.22" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i16 }
%class.CFWL_App = type { %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember.0", %"class.cppgc::internal::BasicMember.1" }
%"class.cppgc::internal::BasicMember" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::MemberBase" = type { i8* }
%"class.cppgc::internal::BasicMember.0" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.1" = type { %"class.cppgc::internal::MemberBase" }
%"class.CFWL_App::AdapterIface" = type { %"class.cppgc::GarbageCollectedMixin" }
%"class.cppgc::GarbageCollectedMixin" = type { i32 (...)** }
%"class.cppgc::Heap" = type { i32 (...)** }
%"class.cppgc::AllocationHandle" = type opaque
%"class.CFWL_WidgetMgr::AdapterIface" = type { %"class.cppgc::GarbageCollectedMixin" }
%class.CFWL_WidgetMgr = type { %"class.cppgc::internal::BasicMember.3", %"class.cppgc::internal::BasicMember.4", %"class.std::__1::map" }
%"class.cppgc::internal::BasicMember.3" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.4" = type { %"class.cppgc::internal::MemberBase" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%class.CFWL_NoteDriver = type { %"class.std::__1::map.10", %"class.cppgc::internal::BasicMember.21", %"class.cppgc::internal::BasicMember.21", %"class.cppgc::internal::BasicMember.21" }
%"class.std::__1::map.10" = type { %"class.std::__1::__tree.11" }
%"class.std::__1::__tree.11" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.12", %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.cppgc::internal::BasicMember.21" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::Visitor" = type { i32 (...)** }

$_ZN5cppgc8internal14FinalizerTraitI14CFWL_WidgetMgrE8FinalizeEPv = comdat any

$_ZN5cppgc8internal14TraceTraitBaseI14CFWL_WidgetMgrE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5cppgc8internal9NameTraitI14CFWL_WidgetMgrE7GetNameEPKv = comdat any

$_ZN5cppgc8internal14FinalizerTraitI15CFWL_NoteDriverE8FinalizeEPv = comdat any

$_ZN5cppgc8internal14TraceTraitBaseI15CFWL_NoteDriverE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5cppgc8internal9NameTraitI15CFWL_NoteDriverE7GetNameEPKv = comdat any

$_ZZN5cppgc8internal11GCInfoTraitI14CFWL_WidgetMgrE5IndexEvE16registered_index = comdat any

$_ZZN5cppgc8internal11GCInfoTraitI15CFWL_NoteDriverE5IndexEvE16registered_index = comdat any

@_ZZN5cppgc8internal11GCInfoTraitI14CFWL_WidgetMgrE5IndexEvE16registered_index = linkonce_odr hidden global %"struct.std::__1::atomic" zeroinitializer, comdat, align 2
@_ZN5cppgc12NameProvider11kHiddenNameE = external constant [13 x i8], align 1
@_ZZN5cppgc8internal11GCInfoTraitI15CFWL_NoteDriverE5IndexEvE16registered_index = linkonce_odr hidden global %"struct.std::__1::atomic" zeroinitializer, comdat, align 2

@_ZN8CFWL_AppC1EPNS_12AdapterIfaceE = hidden unnamed_addr alias void (%class.CFWL_App*, %"class.CFWL_App::AdapterIface"*), void (%class.CFWL_App*, %"class.CFWL_App::AdapterIface"*)* @_ZN8CFWL_AppC2EPNS_12AdapterIfaceE
@_ZN8CFWL_AppD1Ev = hidden unnamed_addr alias void (%class.CFWL_App*), void (%class.CFWL_App*)* @_ZN8CFWL_AppD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8CFWL_AppC2EPNS_12AdapterIfaceE(%class.CFWL_App*, %"class.CFWL_App::AdapterIface"*) unnamed_addr #0 align 2 {
  %3 = bitcast %class.CFWL_App* %0 to %"class.CFWL_App::AdapterIface"**
  store %"class.CFWL_App::AdapterIface"* %1, %"class.CFWL_App::AdapterIface"** %3, align 8
  %4 = bitcast %"class.CFWL_App::AdapterIface"* %1 to %"class.cppgc::Heap"* (%"class.CFWL_App::AdapterIface"*)***
  %5 = load %"class.cppgc::Heap"* (%"class.CFWL_App::AdapterIface"*)**, %"class.cppgc::Heap"* (%"class.CFWL_App::AdapterIface"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.cppgc::Heap"* (%"class.CFWL_App::AdapterIface"*)*, %"class.cppgc::Heap"* (%"class.CFWL_App::AdapterIface"*)** %5, i64 6
  %7 = load %"class.cppgc::Heap"* (%"class.CFWL_App::AdapterIface"*)*, %"class.cppgc::Heap"* (%"class.CFWL_App::AdapterIface"*)** %6, align 8
  %8 = tail call %"class.cppgc::Heap"* %7(%"class.CFWL_App::AdapterIface"* %1) #4
  %9 = tail call %"class.cppgc::AllocationHandle"* @_ZN5cppgc4Heap19GetAllocationHandleEv(%"class.cppgc::Heap"* %8) #4
  %10 = bitcast %"class.CFWL_App::AdapterIface"* %1 to %"class.CFWL_WidgetMgr::AdapterIface"* (%"class.CFWL_App::AdapterIface"*)***
  %11 = load %"class.CFWL_WidgetMgr::AdapterIface"* (%"class.CFWL_App::AdapterIface"*)**, %"class.CFWL_WidgetMgr::AdapterIface"* (%"class.CFWL_App::AdapterIface"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.CFWL_WidgetMgr::AdapterIface"* (%"class.CFWL_App::AdapterIface"*)*, %"class.CFWL_WidgetMgr::AdapterIface"* (%"class.CFWL_App::AdapterIface"*)** %11, i64 3
  %13 = load %"class.CFWL_WidgetMgr::AdapterIface"* (%"class.CFWL_App::AdapterIface"*)*, %"class.CFWL_WidgetMgr::AdapterIface"* (%"class.CFWL_App::AdapterIface"*)** %12, align 8
  %14 = tail call %"class.CFWL_WidgetMgr::AdapterIface"* %13(%"class.CFWL_App::AdapterIface"* %1) #4
  %15 = load atomic i16, i16* getelementptr inbounds (%"struct.std::__1::atomic", %"struct.std::__1::atomic"* @_ZZN5cppgc8internal11GCInfoTraitI14CFWL_WidgetMgrE5IndexEvE16registered_index, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 2
  %16 = icmp eq i16 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = tail call zeroext i16 @_ZN5cppgc8internal17EnsureGCInfoIndexERNSt3__16atomicItEEPFvPvEPFvPNS_7VisitorEPKvEPFNS0_14HeapObjectNameESB_Eb(%"struct.std::__1::atomic"* nonnull dereferenceable(2) @_ZZN5cppgc8internal11GCInfoTraitI14CFWL_WidgetMgrE5IndexEvE16registered_index, void (i8*)* nonnull @_ZN5cppgc8internal14FinalizerTraitI14CFWL_WidgetMgrE8FinalizeEPv, void (%"class.cppgc::Visitor"*, i8*)* nonnull @_ZN5cppgc8internal14TraceTraitBaseI14CFWL_WidgetMgrE5TraceEPNS_7VisitorEPKv, { i8*, i8 } (i8*)* nonnull @_ZN5cppgc8internal9NameTraitI14CFWL_WidgetMgrE7GetNameEPKv, i1 zeroext false) #4
  br label %19

19:                                               ; preds = %2, %17
  %20 = phi i16 [ %18, %17 ], [ %15, %2 ]
  %21 = tail call i8* @_ZN5cppgc8internal33MakeGarbageCollectedTraitInternal8AllocateERNS_16AllocationHandleEmt(%"class.cppgc::AllocationHandle"* %9, i64 40, i16 zeroext %20) #4
  %22 = bitcast i8* %21 to %class.CFWL_WidgetMgr*
  tail call void @_ZN14CFWL_WidgetMgrC1EPNS_12AdapterIfaceEP8CFWL_App(%class.CFWL_WidgetMgr* %22, %"class.CFWL_WidgetMgr::AdapterIface"* %14, %class.CFWL_App* %0) #4
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = atomicrmw or i16* %24, i16 1 release
  %26 = getelementptr inbounds %class.CFWL_App, %class.CFWL_App* %0, i64 0, i32 1, i32 0, i32 0
  store i8* %21, i8** %26, align 8
  %27 = load %"class.cppgc::Heap"* (%"class.CFWL_App::AdapterIface"*)**, %"class.cppgc::Heap"* (%"class.CFWL_App::AdapterIface"*)*** %4, align 8
  %28 = getelementptr inbounds %"class.cppgc::Heap"* (%"class.CFWL_App::AdapterIface"*)*, %"class.cppgc::Heap"* (%"class.CFWL_App::AdapterIface"*)** %27, i64 6
  %29 = load %"class.cppgc::Heap"* (%"class.CFWL_App::AdapterIface"*)*, %"class.cppgc::Heap"* (%"class.CFWL_App::AdapterIface"*)** %28, align 8
  %30 = tail call %"class.cppgc::Heap"* %29(%"class.CFWL_App::AdapterIface"* %1) #4
  %31 = tail call %"class.cppgc::AllocationHandle"* @_ZN5cppgc4Heap19GetAllocationHandleEv(%"class.cppgc::Heap"* %30) #4
  %32 = load atomic i16, i16* getelementptr inbounds (%"struct.std::__1::atomic", %"struct.std::__1::atomic"* @_ZZN5cppgc8internal11GCInfoTraitI15CFWL_NoteDriverE5IndexEvE16registered_index, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 2
  %33 = icmp eq i16 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %19
  %35 = tail call zeroext i16 @_ZN5cppgc8internal17EnsureGCInfoIndexERNSt3__16atomicItEEPFvPvEPFvPNS_7VisitorEPKvEPFNS0_14HeapObjectNameESB_Eb(%"struct.std::__1::atomic"* nonnull dereferenceable(2) @_ZZN5cppgc8internal11GCInfoTraitI15CFWL_NoteDriverE5IndexEvE16registered_index, void (i8*)* nonnull @_ZN5cppgc8internal14FinalizerTraitI15CFWL_NoteDriverE8FinalizeEPv, void (%"class.cppgc::Visitor"*, i8*)* nonnull @_ZN5cppgc8internal14TraceTraitBaseI15CFWL_NoteDriverE5TraceEPNS_7VisitorEPKv, { i8*, i8 } (i8*)* nonnull @_ZN5cppgc8internal9NameTraitI15CFWL_NoteDriverE7GetNameEPKv, i1 zeroext false) #4
  br label %36

36:                                               ; preds = %19, %34
  %37 = phi i16 [ %35, %34 ], [ %32, %19 ]
  %38 = tail call i8* @_ZN5cppgc8internal33MakeGarbageCollectedTraitInternal8AllocateERNS_16AllocationHandleEmt(%"class.cppgc::AllocationHandle"* %31, i64 48, i16 zeroext %37) #4
  %39 = bitcast i8* %38 to %class.CFWL_NoteDriver*
  tail call void @_ZN15CFWL_NoteDriverC1Ev(%class.CFWL_NoteDriver* %39) #4
  %40 = getelementptr inbounds i8, i8* %38, i64 -4
  %41 = bitcast i8* %40 to i16*
  %42 = atomicrmw or i16* %41, i16 1 release
  %43 = getelementptr inbounds %class.CFWL_App, %class.CFWL_App* %0, i64 0, i32 2, i32 0, i32 0
  store i8* %38, i8** %43, align 8
  ret void
}

declare %"class.cppgc::AllocationHandle"* @_ZN5cppgc4Heap19GetAllocationHandleEv(%"class.cppgc::Heap"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN8CFWL_AppD2Ev(%class.CFWL_App* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8CFWL_App5TraceEPN5cppgc7VisitorE(%class.CFWL_App* nocapture readonly, %"class.cppgc::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %class.CFWL_App* %0 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %15, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = tail call { i8*, void (%"class.cppgc::Visitor"*, i8*)* } @_ZN5cppgc8internal30TraceTraitFromInnerAddressImpl18GetTraceDescriptorEPKv(i8* nonnull %7) #4
  %9 = extractvalue { i8*, void (%"class.cppgc::Visitor"*, i8*)* } %8, 0
  %10 = extractvalue { i8*, void (%"class.cppgc::Visitor"*, i8*)* } %8, 1
  %11 = bitcast %"class.cppgc::Visitor"* %1 to void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)***
  %12 = load void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)**, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)** %12, i64 4
  %14 = load void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)** %13, align 8
  tail call void %14(%"class.cppgc::Visitor"* %1, i8* nonnull %7, i8* %9, void (%"class.cppgc::Visitor"*, i8*)* %10) #4
  br label %15

15:                                               ; preds = %2, %6
  %16 = getelementptr inbounds %class.CFWL_App, %class.CFWL_App* %0, i64 0, i32 1
  %17 = bitcast %"class.cppgc::internal::BasicMember.0"* %16 to i64*
  %18 = load atomic i64, i64* %17 monotonic, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %26, label %20

20:                                               ; preds = %15
  %21 = inttoptr i64 %18 to i8*
  %22 = bitcast %"class.cppgc::Visitor"* %1 to void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)***
  %23 = load void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)**, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)** %23, i64 4
  %25 = load void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)** %24, align 8
  tail call void %25(%"class.cppgc::Visitor"* %1, i8* nonnull %21, i8* nonnull %21, void (%"class.cppgc::Visitor"*, i8*)* nonnull @_ZN5cppgc8internal14TraceTraitBaseI14CFWL_WidgetMgrE5TraceEPNS_7VisitorEPKv) #4
  br label %26

26:                                               ; preds = %15, %20
  %27 = getelementptr inbounds %class.CFWL_App, %class.CFWL_App* %0, i64 0, i32 2
  %28 = bitcast %"class.cppgc::internal::BasicMember.1"* %27 to i64*
  %29 = load atomic i64, i64* %28 monotonic, align 8
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %37, label %31

31:                                               ; preds = %26
  %32 = inttoptr i64 %29 to i8*
  %33 = bitcast %"class.cppgc::Visitor"* %1 to void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)***
  %34 = load void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)**, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)** %34, i64 4
  %36 = load void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)** %35, align 8
  tail call void %36(%"class.cppgc::Visitor"* %1, i8* nonnull %32, i8* nonnull %32, void (%"class.cppgc::Visitor"*, i8*)* nonnull @_ZN5cppgc8internal14TraceTraitBaseI15CFWL_NoteDriverE5TraceEPNS_7VisitorEPKv) #4
  br label %37

37:                                               ; preds = %26, %31
  ret void
}

declare void @_ZN14CFWL_WidgetMgrC1EPNS_12AdapterIfaceEP8CFWL_App(%class.CFWL_WidgetMgr*, %"class.CFWL_WidgetMgr::AdapterIface"*, %class.CFWL_App*) unnamed_addr #1

declare i8* @_ZN5cppgc8internal33MakeGarbageCollectedTraitInternal8AllocateERNS_16AllocationHandleEmt(%"class.cppgc::AllocationHandle"*, i64, i16 zeroext) local_unnamed_addr #1

declare zeroext i16 @_ZN5cppgc8internal17EnsureGCInfoIndexERNSt3__16atomicItEEPFvPvEPFvPNS_7VisitorEPKvEPFNS0_14HeapObjectNameESB_Eb(%"struct.std::__1::atomic"* dereferenceable(2), void (i8*)*, void (%"class.cppgc::Visitor"*, i8*)*, { i8*, i8 } (i8*)*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc8internal14FinalizerTraitI14CFWL_WidgetMgrE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %class.CFWL_WidgetMgr*
  tail call void @_ZN14CFWL_WidgetMgrD1Ev(%class.CFWL_WidgetMgr* %2) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc8internal14TraceTraitBaseI14CFWL_WidgetMgrE5TraceEPNS_7VisitorEPKv(%"class.cppgc::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %class.CFWL_WidgetMgr*
  tail call void @_ZNK14CFWL_WidgetMgr5TraceEPN5cppgc7VisitorE(%class.CFWL_WidgetMgr* %3, %"class.cppgc::Visitor"* %0) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5cppgc8internal9NameTraitI14CFWL_WidgetMgrE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @_ZN5cppgc12NameProvider11kHiddenNameE, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind
declare void @_ZN14CFWL_WidgetMgrD1Ev(%class.CFWL_WidgetMgr*) unnamed_addr #3

declare void @_ZNK14CFWL_WidgetMgr5TraceEPN5cppgc7VisitorE(%class.CFWL_WidgetMgr*, %"class.cppgc::Visitor"*) local_unnamed_addr #1

declare void @_ZN15CFWL_NoteDriverC1Ev(%class.CFWL_NoteDriver*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc8internal14FinalizerTraitI15CFWL_NoteDriverE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %class.CFWL_NoteDriver*
  tail call void @_ZN15CFWL_NoteDriverD1Ev(%class.CFWL_NoteDriver* %2) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc8internal14TraceTraitBaseI15CFWL_NoteDriverE5TraceEPNS_7VisitorEPKv(%"class.cppgc::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %class.CFWL_NoteDriver*
  tail call void @_ZNK15CFWL_NoteDriver5TraceEPN5cppgc7VisitorE(%class.CFWL_NoteDriver* %3, %"class.cppgc::Visitor"* %0) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5cppgc8internal9NameTraitI15CFWL_NoteDriverE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @_ZN5cppgc12NameProvider11kHiddenNameE, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind
declare void @_ZN15CFWL_NoteDriverD1Ev(%class.CFWL_NoteDriver*) unnamed_addr #3

declare void @_ZNK15CFWL_NoteDriver5TraceEPN5cppgc7VisitorE(%class.CFWL_NoteDriver*, %"class.cppgc::Visitor"*) local_unnamed_addr #1

declare { i8*, void (%"class.cppgc::Visitor"*, i8*)* } @_ZN5cppgc8internal30TraceTraitFromInnerAddressImpl18GetTraceDescriptorEPKv(i8*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
