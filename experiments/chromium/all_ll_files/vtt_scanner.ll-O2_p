; ModuleID = '../../third_party/blink/renderer/core/html/track/vtt/vtt_scanner.cc'
source_filename = "../../third_party/blink/renderer/core/html/track/vtt/vtt_scanner.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::VTTScanner" = type <{ %union.anon, %union.anon.0, i8, [7 x i8] }>
%union.anon = type { i8* }
%union.anon.0 = type { i8* }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::VTTScanner::Run" = type <{ i8*, i8*, i8, [7 x i8] }>

@_ZN5blink10VTTScannerC1ERKN3WTF6StringE = hidden unnamed_addr alias void (%"class.blink::VTTScanner"*, %"class.WTF::String"*), void (%"class.blink::VTTScanner"*, %"class.WTF::String"*)* @_ZN5blink10VTTScannerC2ERKN3WTF6StringE

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink10VTTScannerC2ERKN3WTF6StringE(%"class.blink::VTTScanner"* nocapture, %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::VTTScanner", %"class.blink::VTTScanner"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 1
  %9 = icmp eq i32 %8, 0
  %10 = trunc i32 %8 to i8
  store i8 %10, i8* %3, align 8
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 1
  br i1 %9, label %28, label %14

14:                                               ; preds = %2
  %15 = bitcast %"class.WTF::StringImpl"* %13 to i8*
  %16 = select i1 %12, i8* null, i8* %15
  %17 = getelementptr inbounds %"class.blink::VTTScanner", %"class.blink::VTTScanner"* %0, i64 0, i32 0, i32 0
  store i8* %16, i8** %17, align 8
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %24, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  br label %24

24:                                               ; preds = %14, %20
  %25 = phi i64 [ %23, %20 ], [ 0, %14 ]
  %26 = getelementptr inbounds i8, i8* %16, i64 %25
  %27 = getelementptr inbounds %"class.blink::VTTScanner", %"class.blink::VTTScanner"* %0, i64 0, i32 1, i32 0
  store i8* %26, i8** %27, align 8
  br label %43

28:                                               ; preds = %2
  %29 = bitcast %"class.WTF::StringImpl"* %13 to i16*
  %30 = select i1 %12, i16* null, i16* %29
  %31 = bitcast %"class.blink::VTTScanner"* %0 to i16**
  store i16* %30, i16** %31, align 8
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %38, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  br label %38

38:                                               ; preds = %28, %34
  %39 = phi i64 [ %37, %34 ], [ 0, %28 ]
  %40 = getelementptr inbounds i16, i16* %30, i64 %39
  %41 = getelementptr inbounds %"class.blink::VTTScanner", %"class.blink::VTTScanner"* %0, i64 0, i32 1
  %42 = bitcast %union.anon.0* %41 to i16**
  store i16* %40, i16** %42, align 8
  br label %43

43:                                               ; preds = %38, %24
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink10VTTScanner4ScanEc(%"class.blink::VTTScanner"* nocapture, i8 signext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::VTTScanner", %"class.blink::VTTScanner"* %0, i64 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.blink::VTTScanner", %"class.blink::VTTScanner"* %0, i64 0, i32 1, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %4, %6
  %8 = bitcast i8* %4 to i16*
  br i1 %7, label %29, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::VTTScanner", %"class.blink::VTTScanner"* %0, i64 0, i32 2
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %9
  %14 = load i8, i8* %4, align 1
  %15 = zext i8 %14 to i16
  br label %18

16:                                               ; preds = %9
  %17 = load i16, i16* %8, align 2
  br label %18

18:                                               ; preds = %13, %16
  %19 = phi i16 [ %15, %13 ], [ %17, %16 ]
  %20 = zext i16 %19 to i32
  %21 = sext i8 %1 to i32
  %22 = icmp eq i32 %20, %21
  br i1 %22, label %23, label %29

23:                                               ; preds = %18
  br i1 %12, label %26, label %24

24:                                               ; preds = %23
  %25 = getelementptr inbounds i8, i8* %4, i64 1
  store i8* %25, i8** %3, align 8
  br label %29

26:                                               ; preds = %23
  %27 = getelementptr inbounds i8, i8* %4, i64 2
  %28 = getelementptr inbounds %"class.blink::VTTScanner", %"class.blink::VTTScanner"* %0, i64 0, i32 0, i32 0
  store i8* %27, i8** %28, align 8
  br label %29

29:                                               ; preds = %2, %26, %24, %18
  %30 = phi i1 [ false, %18 ], [ true, %24 ], [ true, %26 ], [ false, %2 ]
  ret i1 %30
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink10VTTScanner4ScanEPKhj(%"class.blink::VTTScanner"* nocapture, i8* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.blink::VTTScanner", %"class.blink::VTTScanner"* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = getelementptr inbounds %"class.blink::VTTScanner", %"class.blink::VTTScanner"* %0, i64 0, i32 1
  %7 = bitcast %union.anon.0* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.blink::VTTScanner"* %0 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = xor i8 %5, 1
  %13 = zext i8 %12 to i64
  %14 = lshr exact i64 %11, %13
  %15 = trunc i64 %14 to i32
  %16 = icmp ult i32 %15, %2
  %17 = inttoptr i64 %10 to i8*
  %18 = inttoptr i64 %10 to i16*
  br i1 %16, label %48, label %19

19:                                               ; preds = %3
  %20 = icmp eq i8 %5, 0
  br i1 %20, label %21, label %38

21:                                               ; preds = %19
  %22 = bitcast %"class.blink::VTTScanner"* %0 to i16**
  %23 = icmp eq i32 %2, 0
  br i1 %23, label %45, label %24

24:                                               ; preds = %21
  %25 = zext i32 %2 to i64
  br label %28

26:                                               ; preds = %28
  %27 = icmp eq i64 %37, %25
  br i1 %27, label %45, label %28

28:                                               ; preds = %26, %24
  %29 = phi i64 [ 0, %24 ], [ %37, %26 ]
  %30 = getelementptr inbounds i8, i8* %1, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i32
  %33 = getelementptr inbounds i16, i16* %18, i64 %29
  %34 = load i16, i16* %33, align 2
  %35 = zext i16 %34 to i32
  %36 = icmp eq i32 %32, %35
  %37 = add nuw nsw i64 %29, 1
  br i1 %36, label %26, label %48

38:                                               ; preds = %19
  %39 = zext i32 %2 to i64
  %40 = tail call i32 @bcmp(i8* %17, i8* %1, i64 %39) #6
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %48

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.blink::VTTScanner", %"class.blink::VTTScanner"* %0, i64 0, i32 0, i32 0
  %44 = getelementptr inbounds i8, i8* %17, i64 %39
  store i8* %44, i8** %43, align 8
  br label %48

45:                                               ; preds = %26, %21
  %46 = phi i64 [ 0, %21 ], [ %25, %26 ]
  %47 = getelementptr inbounds i16, i16* %18, i64 %46
  store i16* %47, i16** %22, align 8
  br label %48

48:                                               ; preds = %28, %45, %42, %38, %3
  %49 = phi i1 [ false, %3 ], [ false, %38 ], [ true, %42 ], [ true, %45 ], [ false, %28 ]
  ret i1 %49
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink10VTTScanner7ScanRunERKNS0_3RunERKN3WTF6StringE(%"class.blink::VTTScanner"* nocapture, %"class.blink::VTTScanner::Run"* nocapture readonly dereferenceable(24), %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.blink::VTTScanner::Run", %"class.blink::VTTScanner::Run"* %1, i64 0, i32 2
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = getelementptr inbounds %"class.blink::VTTScanner::Run", %"class.blink::VTTScanner::Run"* %1, i64 0, i32 1
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.blink::VTTScanner::Run"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = xor i8 %5, 1
  %13 = zext i8 %12 to i64
  %14 = lshr exact i64 %11, %13
  %15 = trunc i64 %14 to i32
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %23, label %19

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp ugt i32 %21, %15
  br i1 %22, label %38, label %23

23:                                               ; preds = %3, %19
  %24 = getelementptr inbounds %"class.blink::VTTScanner", %"class.blink::VTTScanner"* %0, i64 0, i32 2
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.blink::VTTScanner", %"class.blink::VTTScanner"* %0, i64 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplEPKhj(%"class.WTF::StringImpl"* %17, i8* %29, i32 %15) #6
  br i1 %30, label %35, label %38

31:                                               ; preds = %23
  %32 = bitcast %"class.blink::VTTScanner"* %0 to i16**
  %33 = load i16*, i16** %32, align 8
  %34 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplEPKDsj(%"class.WTF::StringImpl"* %17, i16* %33, i32 %15) #6
  br i1 %34, label %35, label %38

35:                                               ; preds = %27, %31
  %36 = load i64, i64* %7, align 8
  %37 = bitcast %"class.blink::VTTScanner"* %0 to i64*
  store i64 %36, i64* %37, align 8
  br label %38

38:                                               ; preds = %27, %31, %35, %19
  %39 = phi i1 [ false, %19 ], [ true, %35 ], [ false, %31 ], [ false, %27 ]
  ret i1 %39
}

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplEPKhj(%"class.WTF::StringImpl"*, i8*, i32) local_unnamed_addr #4

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplEPKDsj(%"class.WTF::StringImpl"*, i16*, i32) local_unnamed_addr #4

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink10VTTScanner7SkipRunERKNS0_3RunE(%"class.blink::VTTScanner"* nocapture, %"class.blink::VTTScanner::Run"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::VTTScanner::Run", %"class.blink::VTTScanner::Run"* %1, i64 0, i32 1
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.blink::VTTScanner"* %0 to i64*
  store i64 %5, i64* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink10VTTScanner13ExtractStringERKNS0_3RunE(%"class.blink::VTTScanner"* nocapture, %"class.blink::VTTScanner::Run"* nocapture readonly dereferenceable(24)) local_unnamed_addr #3 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.blink::VTTScanner", %"class.blink::VTTScanner"* %0, i64 0, i32 2
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %24, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #6
  %10 = getelementptr inbounds %"class.blink::VTTScanner", %"class.blink::VTTScanner"* %0, i64 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %"class.blink::VTTScanner::Run", %"class.blink::VTTScanner::Run"* %1, i64 0, i32 2
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = getelementptr inbounds %"class.blink::VTTScanner::Run", %"class.blink::VTTScanner::Run"* %1, i64 0, i32 1
  %15 = bitcast i8** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.blink::VTTScanner::Run"* %1 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = xor i8 %13, 1
  %21 = zext i8 %20 to i64
  %22 = lshr exact i64 %19, %21
  %23 = trunc i64 %22 to i32
  call void @_ZN3WTF6StringC1EPKhj(%"class.WTF::String"* nonnull %3, i8* %11, i32 %23) #6
  br label %40

24:                                               ; preds = %2
  %25 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #6
  %26 = bitcast %"class.blink::VTTScanner"* %0 to i16**
  %27 = load i16*, i16** %26, align 8
  %28 = getelementptr inbounds %"class.blink::VTTScanner::Run", %"class.blink::VTTScanner::Run"* %1, i64 0, i32 2
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = getelementptr inbounds %"class.blink::VTTScanner::Run", %"class.blink::VTTScanner::Run"* %1, i64 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.blink::VTTScanner::Run"* %1 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = sub i64 %32, %34
  %36 = xor i8 %29, 1
  %37 = zext i8 %36 to i64
  %38 = lshr exact i64 %35, %37
  %39 = trunc i64 %38 to i32
  call void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"* nonnull %4, i16* %27, i32 %39) #6
  br label %40

40:                                               ; preds = %24, %8
  %41 = phi %"class.WTF::String"* [ %4, %24 ], [ %3, %8 ]
  %42 = phi i8* [ %25, %24 ], [ %9, %8 ]
  %43 = phi i64* [ %31, %24 ], [ %15, %8 ]
  %44 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %41, i64 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #6
  %46 = load i64, i64* %43, align 8
  %47 = bitcast %"class.blink::VTTScanner"* %0 to i64*
  store i64 %46, i64* %47, align 8
  ret %"class.WTF::StringImpl"* %45
}

declare void @_ZN3WTF6StringC1EPKhj(%"class.WTF::String"*, i8*, i32) unnamed_addr #4

declare void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"*, i16*, i32) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink10VTTScanner19RestOfInputAsStringEv(%"class.blink::VTTScanner"* nocapture) local_unnamed_addr #3 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.blink::VTTScanner", %"class.blink::VTTScanner"* %0, i64 0, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds %"class.blink::VTTScanner", %"class.blink::VTTScanner"* %0, i64 0, i32 1, i32 0
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.blink::VTTScanner", %"class.blink::VTTScanner"* %0, i64 0, i32 2
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = ptrtoint i8* %5 to i64
  %12 = icmp eq i8 %10, 0
  br i1 %12, label %20, label %13

13:                                               ; preds = %1
  %14 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #6
  %15 = sub i64 %8, %11
  %16 = xor i8 %10, 1
  %17 = zext i8 %16 to i64
  %18 = lshr exact i64 %15, %17
  %19 = trunc i64 %18 to i32
  call void @_ZN3WTF6StringC1EPKhj(%"class.WTF::String"* nonnull %2, i8* %5, i32 %19) #6
  br label %26

20:                                               ; preds = %1
  %21 = bitcast i8* %5 to i16*
  %22 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #6
  %23 = sub i64 %8, %11
  %24 = lshr exact i64 %23, 1
  %25 = trunc i64 %24 to i32
  call void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"* nonnull %3, i16* %21, i32 %25) #6
  br label %26

26:                                               ; preds = %13, %20
  %27 = phi %"class.WTF::String"* [ %2, %13 ], [ %3, %20 ]
  %28 = phi i8* [ %14, %13 ], [ %22, %20 ]
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #6
  %31 = bitcast %"class.blink::VTTScanner"* %0 to i64*
  store i64 %8, i64* %31, align 8
  ret %"class.WTF::StringImpl"* %30
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink10VTTScanner10ScanDigitsERj(%"class.blink::VTTScanner"* nocapture, i32* nocapture dereferenceable(4)) local_unnamed_addr #3 align 2 {
  %3 = alloca i8, align 1
  %4 = getelementptr inbounds %"class.blink::VTTScanner", %"class.blink::VTTScanner"* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 8, !range !2, !noalias !3
  %6 = icmp eq i8 %5, 0
  %7 = bitcast %"class.blink::VTTScanner"* %0 to i64*
  %8 = load i64, i64* %7, align 8, !noalias !3
  %9 = inttoptr i64 %8 to i8*
  %10 = inttoptr i64 %8 to i16*
  br i1 %6, label %37, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::VTTScanner", %"class.blink::VTTScanner"* %0, i64 0, i32 1, i32 0
  %13 = load i8*, i8** %12, align 8, !noalias !3
  %14 = icmp ugt i8* %13, %9
  br i1 %14, label %15, label %33

15:                                               ; preds = %11
  %16 = load i8, i8* %9, align 1, !noalias !3
  %17 = zext i8 %16 to i16
  %18 = add nsw i16 %17, -48
  %19 = icmp ult i16 %18, 10
  br i1 %19, label %25, label %33

20:                                               ; preds = %25
  %21 = load i8, i8* %27, align 1, !noalias !3
  %22 = zext i8 %21 to i16
  %23 = add nsw i16 %22, -48
  %24 = icmp ult i16 %23, 10
  br i1 %24, label %25, label %31

25:                                               ; preds = %15, %20
  %26 = phi i8* [ %27, %20 ], [ %9, %15 ]
  %27 = getelementptr inbounds i8, i8* %26, i64 1
  %28 = icmp eq i8* %27, %13
  br i1 %28, label %29, label %20

29:                                               ; preds = %25
  %30 = ptrtoint i8* %13 to i64
  br label %33

31:                                               ; preds = %20
  %32 = ptrtoint i8* %27 to i64
  br label %33

33:                                               ; preds = %31, %29, %15, %11
  %34 = phi i64 [ %8, %11 ], [ %30, %29 ], [ %8, %15 ], [ %32, %31 ]
  %35 = xor i8 %5, 1
  %36 = zext i8 %35 to i64
  br label %58

37:                                               ; preds = %2
  %38 = getelementptr inbounds %"class.blink::VTTScanner", %"class.blink::VTTScanner"* %0, i64 0, i32 1
  %39 = bitcast %union.anon.0* %38 to i16**
  %40 = load i16*, i16** %39, align 8, !noalias !3
  %41 = icmp ugt i16* %40, %10
  br i1 %41, label %42, label %58

42:                                               ; preds = %37
  %43 = load i16, i16* %10, align 2, !noalias !3
  %44 = add i16 %43, -48
  %45 = icmp ult i16 %44, 10
  br i1 %45, label %50, label %58

46:                                               ; preds = %50
  %47 = load i16, i16* %52, align 2, !noalias !3
  %48 = add i16 %47, -48
  %49 = icmp ult i16 %48, 10
  br i1 %49, label %50, label %56

50:                                               ; preds = %42, %46
  %51 = phi i16* [ %52, %46 ], [ %10, %42 ]
  %52 = getelementptr inbounds i16, i16* %51, i64 1
  %53 = icmp ult i16* %52, %40
  br i1 %53, label %46, label %54

54:                                               ; preds = %50
  %55 = ptrtoint i16* %52 to i64
  br label %58

56:                                               ; preds = %46
  %57 = ptrtoint i16* %52 to i64
  br label %58

58:                                               ; preds = %37, %42, %54, %56, %33
  %59 = phi i64 [ %34, %33 ], [ %8, %37 ], [ %55, %54 ], [ %8, %42 ], [ %57, %56 ]
  %60 = phi i64 [ %36, %33 ], [ 1, %37 ], [ 1, %54 ], [ 1, %42 ], [ 1, %56 ]
  %61 = inttoptr i64 %59 to i8*
  %62 = icmp eq i8* %9, %61
  br i1 %62, label %63, label %64

63:                                               ; preds = %58
  store i32 0, i32* %1, align 4
  br label %79

64:                                               ; preds = %58
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #6
  store i8 -86, i8* %3, align 1
  %65 = sub i64 %59, %8
  %66 = lshr exact i64 %65, %60
  %67 = trunc i64 %66 to i32
  %68 = and i64 %66, 4294967295
  br i1 %6, label %71, label %69

69:                                               ; preds = %64
  %70 = call i32 @_ZN3WTF16CharactersToUIntEPKhmNS_20NumberParsingOptionsEPb(i8* %9, i64 %68, i32 0, i8* nonnull %3) #6
  br label %73

71:                                               ; preds = %64
  %72 = call i32 @_ZN3WTF16CharactersToUIntEPKDsmNS_20NumberParsingOptionsEPb(i16* %10, i64 %68, i32 0, i8* nonnull %3) #6
  br label %73

73:                                               ; preds = %71, %69
  %74 = phi i32 [ %72, %71 ], [ %70, %69 ]
  %75 = load i8, i8* %3, align 1, !range !2
  %76 = icmp eq i8 %75, 0
  %77 = select i1 %76, i32 -1, i32 %74
  store i32 %77, i32* %1, align 4
  %78 = getelementptr inbounds %"class.blink::VTTScanner", %"class.blink::VTTScanner"* %0, i64 0, i32 0, i32 0
  store i8* %61, i8** %78, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #6
  br label %79

79:                                               ; preds = %73, %63
  %80 = phi i32 [ 0, %63 ], [ %67, %73 ]
  ret i32 %80
}

declare i32 @_ZN3WTF16CharactersToUIntEPKhmNS_20NumberParsingOptionsEPb(i8*, i64, i32, i8*) local_unnamed_addr #4

declare i32 @_ZN3WTF16CharactersToUIntEPKDsmNS_20NumberParsingOptionsEPb(i16*, i64, i32, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink10VTTScanner10ScanDoubleERd(%"class.blink::VTTScanner"* nocapture, double* nocapture dereferenceable(8)) local_unnamed_addr #3 align 2 {
  %3 = alloca i8, align 1
  %4 = getelementptr inbounds %"class.blink::VTTScanner", %"class.blink::VTTScanner"* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 8, !range !2, !noalias !6
  %6 = icmp eq i8 %5, 0
  %7 = bitcast %"class.blink::VTTScanner"* %0 to i64*
  %8 = load i64, i64* %7, align 8, !noalias !6
  br i1 %6, label %33, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::VTTScanner", %"class.blink::VTTScanner"* %0, i64 0, i32 1, i32 0
  %11 = load i8*, i8** %10, align 8, !noalias !6
  %12 = inttoptr i64 %8 to i8*
  %13 = icmp ugt i8* %11, %12
  %14 = bitcast i8* %11 to i16*
  br i1 %13, label %15, label %56

15:                                               ; preds = %9
  %16 = load i8, i8* %12, align 1, !noalias !6
  %17 = zext i8 %16 to i16
  %18 = add nsw i16 %17, -48
  %19 = icmp ult i16 %18, 10
  br i1 %19, label %25, label %56

20:                                               ; preds = %25
  %21 = load i8, i8* %27, align 1, !noalias !6
  %22 = zext i8 %21 to i16
  %23 = add nsw i16 %22, -48
  %24 = icmp ult i16 %23, 10
  br i1 %24, label %25, label %31

25:                                               ; preds = %15, %20
  %26 = phi i8* [ %27, %20 ], [ %12, %15 ]
  %27 = getelementptr inbounds i8, i8* %26, i64 1
  %28 = icmp eq i8* %27, %11
  br i1 %28, label %29, label %20

29:                                               ; preds = %25
  %30 = ptrtoint i8* %11 to i64
  br label %56

31:                                               ; preds = %20
  %32 = ptrtoint i8* %27 to i64
  br label %56

33:                                               ; preds = %2
  %34 = getelementptr inbounds %"class.blink::VTTScanner", %"class.blink::VTTScanner"* %0, i64 0, i32 1
  %35 = bitcast %union.anon.0* %34 to i16**
  %36 = load i16*, i16** %35, align 8, !noalias !6
  %37 = inttoptr i64 %8 to i16*
  %38 = icmp ugt i16* %36, %37
  %39 = bitcast i16* %36 to i8*
  br i1 %38, label %40, label %56

40:                                               ; preds = %33
  %41 = load i16, i16* %37, align 2, !noalias !6
  %42 = add i16 %41, -48
  %43 = icmp ult i16 %42, 10
  br i1 %43, label %48, label %56

44:                                               ; preds = %48
  %45 = load i16, i16* %50, align 2, !noalias !6
  %46 = add i16 %45, -48
  %47 = icmp ult i16 %46, 10
  br i1 %47, label %48, label %54

48:                                               ; preds = %40, %44
  %49 = phi i16* [ %50, %44 ], [ %37, %40 ]
  %50 = getelementptr inbounds i16, i16* %49, i64 1
  %51 = icmp ult i16* %50, %36
  br i1 %51, label %44, label %52

52:                                               ; preds = %48
  %53 = ptrtoint i16* %50 to i64
  br label %56

54:                                               ; preds = %44
  %55 = ptrtoint i16* %50 to i64
  br label %56

56:                                               ; preds = %33, %40, %52, %54, %9, %15, %29, %31
  %57 = phi i16* [ %14, %9 ], [ %14, %29 ], [ %14, %15 ], [ %14, %31 ], [ %36, %33 ], [ %36, %52 ], [ %36, %40 ], [ %36, %54 ]
  %58 = phi i8* [ %11, %9 ], [ %11, %29 ], [ %11, %15 ], [ %11, %31 ], [ %39, %33 ], [ %39, %52 ], [ %39, %40 ], [ %39, %54 ]
  %59 = phi i64 [ %8, %9 ], [ %30, %29 ], [ %8, %15 ], [ %32, %31 ], [ %8, %33 ], [ %53, %52 ], [ %8, %40 ], [ %55, %54 ]
  %60 = inttoptr i64 %59 to i8*
  %61 = getelementptr inbounds %"class.blink::VTTScanner", %"class.blink::VTTScanner"* %0, i64 0, i32 0, i32 0
  store i8* %60, i8** %61, align 8
  %62 = icmp eq i8* %58, %60
  %63 = inttoptr i64 %59 to i16*
  br i1 %62, label %122, label %64

64:                                               ; preds = %56
  br i1 %6, label %68, label %65

65:                                               ; preds = %64
  %66 = load i8, i8* %60, align 1
  %67 = zext i8 %66 to i16
  br label %70

68:                                               ; preds = %64
  %69 = load i16, i16* %63, align 2
  br label %70

70:                                               ; preds = %68, %65
  %71 = phi i16 [ %67, %65 ], [ %69, %68 ]
  %72 = icmp eq i16 %71, 46
  br i1 %72, label %73, label %122

73:                                               ; preds = %70
  br i1 %6, label %96, label %74

74:                                               ; preds = %73
  %75 = getelementptr inbounds i8, i8* %60, i64 1
  store i8* %75, i8** %61, align 8
  %76 = ptrtoint i8* %75 to i64
  %77 = icmp ugt i8* %58, %75
  br i1 %77, label %78, label %117

78:                                               ; preds = %74
  %79 = load i8, i8* %75, align 1, !noalias !9
  %80 = zext i8 %79 to i16
  %81 = add nsw i16 %80, -48
  %82 = icmp ult i16 %81, 10
  br i1 %82, label %88, label %117

83:                                               ; preds = %88
  %84 = load i8, i8* %90, align 1, !noalias !9
  %85 = zext i8 %84 to i16
  %86 = add nsw i16 %85, -48
  %87 = icmp ult i16 %86, 10
  br i1 %87, label %88, label %94

88:                                               ; preds = %78, %83
  %89 = phi i8* [ %90, %83 ], [ %75, %78 ]
  %90 = getelementptr inbounds i8, i8* %89, i64 1
  %91 = icmp eq i8* %90, %58
  br i1 %91, label %92, label %83

92:                                               ; preds = %88
  %93 = ptrtoint i8* %58 to i64
  br label %117

94:                                               ; preds = %83
  %95 = ptrtoint i8* %90 to i64
  br label %117

96:                                               ; preds = %73
  %97 = getelementptr inbounds i8, i8* %60, i64 2
  store i8* %97, i8** %61, align 8
  %98 = ptrtoint i8* %97 to i64
  %99 = bitcast i8* %97 to i16*
  %100 = icmp ugt i16* %57, %99
  br i1 %100, label %101, label %117

101:                                              ; preds = %96
  %102 = load i16, i16* %99, align 2, !noalias !9
  %103 = add i16 %102, -48
  %104 = icmp ult i16 %103, 10
  br i1 %104, label %109, label %117

105:                                              ; preds = %109
  %106 = load i16, i16* %111, align 2, !noalias !9
  %107 = add i16 %106, -48
  %108 = icmp ult i16 %107, 10
  br i1 %108, label %109, label %115

109:                                              ; preds = %101, %105
  %110 = phi i16* [ %111, %105 ], [ %99, %101 ]
  %111 = getelementptr inbounds i16, i16* %110, i64 1
  %112 = icmp ult i16* %111, %57
  br i1 %112, label %105, label %113

113:                                              ; preds = %109
  %114 = ptrtoint i16* %111 to i64
  br label %117

115:                                              ; preds = %105
  %116 = ptrtoint i16* %111 to i64
  br label %117

117:                                              ; preds = %96, %101, %113, %115, %74, %78, %92, %94
  %118 = phi i64 [ %76, %94 ], [ %76, %92 ], [ %76, %78 ], [ %76, %74 ], [ %98, %115 ], [ %98, %113 ], [ %98, %101 ], [ %98, %96 ]
  %119 = phi i64 [ %95, %94 ], [ %93, %92 ], [ %76, %78 ], [ %76, %74 ], [ %116, %115 ], [ %114, %113 ], [ %98, %101 ], [ %98, %96 ]
  %120 = inttoptr i64 %119 to i8*
  store i8* %120, i8** %61, align 8
  %121 = inttoptr i64 %118 to i8*
  br label %122

122:                                              ; preds = %70, %56, %117
  %123 = phi i8* [ %60, %70 ], [ %60, %56 ], [ %121, %117 ]
  %124 = phi i64 [ %59, %70 ], [ %59, %56 ], [ %119, %117 ]
  %125 = phi i8* [ %60, %70 ], [ %58, %56 ], [ %120, %117 ]
  %126 = inttoptr i64 %8 to i8*
  %127 = icmp eq i8* %126, %60
  %128 = icmp eq i8* %125, %123
  %129 = and i1 %127, %128
  br i1 %129, label %130, label %131

130:                                              ; preds = %122
  store i8* %126, i8** %61, align 8
  br label %151

131:                                              ; preds = %122
  %132 = sub i64 %124, %8
  %133 = xor i8 %5, 1
  %134 = zext i8 %133 to i64
  %135 = lshr exact i64 %132, %134
  %136 = and i64 %135, 4294967295
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #6
  store i8 -86, i8* %3, align 1
  br i1 %6, label %139, label %137

137:                                              ; preds = %131
  %138 = call double @_ZN3WTF18CharactersToDoubleEPKhmPb(i8* %126, i64 %136, i8* nonnull %3) #6
  br label %142

139:                                              ; preds = %131
  %140 = inttoptr i64 %8 to i16*
  %141 = call double @_ZN3WTF18CharactersToDoubleEPKDsmPb(i16* %140, i64 %136, i8* nonnull %3) #6
  br label %142

142:                                              ; preds = %139, %137
  %143 = phi double [ %141, %139 ], [ %138, %137 ]
  store double %143, double* %1, align 8
  %144 = fcmp oeq double %143, 0x7FF0000000000000
  br i1 %144, label %149, label %145

145:                                              ; preds = %142
  %146 = load i8, i8* %3, align 1, !range !2
  %147 = icmp eq i8 %146, 0
  br i1 %147, label %148, label %149

148:                                              ; preds = %145
  store double 0x7FEFFFFFFFFFFFFF, double* %1, align 8
  br label %149

149:                                              ; preds = %148, %145, %142
  %150 = phi i1 [ false, %142 ], [ true, %145 ], [ true, %148 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #6
  br label %151

151:                                              ; preds = %149, %130
  %152 = phi i1 [ false, %130 ], [ %150, %149 ]
  ret i1 %152
}

declare double @_ZN3WTF18CharactersToDoubleEPKhmPb(i8*, i64, i8*) local_unnamed_addr #4

declare double @_ZN3WTF18CharactersToDoubleEPKDsmPb(i16*, i64, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink10VTTScanner14ScanPercentageERd(%"class.blink::VTTScanner"* nocapture, double* nocapture dereferenceable(8)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::VTTScanner", %"class.blink::VTTScanner"* %0, i64 0, i32 0, i32 0
  %4 = bitcast %"class.blink::VTTScanner"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = tail call zeroext i1 @_ZN5blink10VTTScanner10ScanDoubleERd(%"class.blink::VTTScanner"* %0, double* dereferenceable(8) %1)
  br i1 %6, label %7, label %31

7:                                                ; preds = %2
  %8 = load i8*, i8** %3, align 8
  %9 = getelementptr inbounds %"class.blink::VTTScanner", %"class.blink::VTTScanner"* %0, i64 0, i32 1, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = icmp eq i8* %8, %10
  %12 = bitcast i8* %8 to i16*
  br i1 %11, label %30, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.blink::VTTScanner", %"class.blink::VTTScanner"* %0, i64 0, i32 2
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %13
  %18 = load i8, i8* %8, align 1
  %19 = zext i8 %18 to i16
  br label %22

20:                                               ; preds = %13
  %21 = load i16, i16* %12, align 2
  br label %22

22:                                               ; preds = %20, %17
  %23 = phi i16 [ %19, %17 ], [ %21, %20 ]
  %24 = icmp eq i16 %23, 37
  br i1 %24, label %25, label %30

25:                                               ; preds = %22
  br i1 %16, label %28, label %26

26:                                               ; preds = %25
  %27 = getelementptr inbounds i8, i8* %8, i64 1
  store i8* %27, i8** %3, align 8
  br label %31

28:                                               ; preds = %25
  %29 = getelementptr inbounds i8, i8* %8, i64 2
  store i8* %29, i8** %3, align 8
  br label %31

30:                                               ; preds = %22, %7
  store i64 %5, i64* %4, align 8
  br label %31

31:                                               ; preds = %28, %26, %2, %30
  %32 = phi i1 [ false, %30 ], [ false, %2 ], [ true, %26 ], [ true, %28 ]
  ret i1 %32
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #5

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind readonly }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN5blink10VTTScanner12CollectWhileIXadL_ZN3WTF12IsASCIIDigitIDsEEbT_EEEENS0_3RunEv: argument 0"}
!5 = distinct !{!5, !"_ZN5blink10VTTScanner12CollectWhileIXadL_ZN3WTF12IsASCIIDigitIDsEEbT_EEEENS0_3RunEv"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN5blink10VTTScanner12CollectWhileIXadL_ZN3WTF12IsASCIIDigitIDsEEbT_EEEENS0_3RunEv: argument 0"}
!8 = distinct !{!8, !"_ZN5blink10VTTScanner12CollectWhileIXadL_ZN3WTF12IsASCIIDigitIDsEEbT_EEEENS0_3RunEv"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN5blink10VTTScanner12CollectWhileIXadL_ZN3WTF12IsASCIIDigitIDsEEbT_EEEENS0_3RunEv: argument 0"}
!11 = distinct !{!11, !"_ZN5blink10VTTScanner12CollectWhileIXadL_ZN3WTF12IsASCIIDigitIDsEEbT_EEEENS0_3RunEv"}
