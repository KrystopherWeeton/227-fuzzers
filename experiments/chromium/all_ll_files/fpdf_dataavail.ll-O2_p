; ModuleID = '../../third_party/pdfium/fpdfsdk/fpdf_dataavail.cpp'
source_filename = "../../third_party/pdfium/fpdfsdk/fpdf_dataavail.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.fpdf_avail_t__ = type opaque
%struct._FX_FILEAVAIL = type { i32, i32 (%struct._FX_FILEAVAIL*, i64, i64)* }
%struct.FPDF_FILEACCESS = type { i64, i32 (i8*, i64, i8*, i64)*, i8* }
%"class.fxcrt::RetainPtr.366" = type { %"class.std::__1::unique_ptr.367" }
%"class.std::__1::unique_ptr.367" = type { %"class.std::__1::__compressed_pair.368" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.369" }
%"struct.std::__1::__compressed_pair_elem.369" = type { %class.IFX_SeekableReadStream* }
%class.IFX_SeekableReadStream = type { %class.IFX_StreamWithSize, %"class.fxcrt::Retainable" }
%class.IFX_StreamWithSize = type { i32 (...)** }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.CPDF_DataAvail::FileAvail" = type { i32 (...)** }
%class.CPDF_DataAvail = type <{ %"class.fxcrt::Observable::ObserverIface", %"class.fxcrt::RetainPtr.11", %class.CPDF_Parser, %"class.fxcrt::RetainPtr.44", %"class.std::__1::unique_ptr.85", i8, [7 x i8], %"class.std::__1::unique_ptr.107", i32, [4 x i8], i64, %"class.fxcrt::UnownedPtr.113", %"class.std::__1::vector.159", %"class.std::__1::set", i32, i8, i8, i8, i8, i8, [7 x i8], %"class.std::__1::unique_ptr.173", %"class.std::__1::vector.179", i8, i8, [6 x i8], %"class.CPDF_DataAvail::PageNode", %"class.std::__1::set", %"class.std::__1::set", %"class.std::__1::unique_ptr.200", %"class.std::__1::map.206", %"class.std::__1::map.215", i8, [7 x i8] }>
%"class.fxcrt::Observable::ObserverIface" = type { i32 (...)** }
%"class.fxcrt::RetainPtr.11" = type { %"class.std::__1::unique_ptr.12" }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %class.CPDF_ReadValidator* }
%class.CPDF_ReadValidator = type opaque
%class.CPDF_Parser = type <{ %"class.std::__1::unique_ptr.17", %"class.std::__1::unique_ptr.23", %"class.fxcrt::UnownedPtr", i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.41", i64, %"class.fxcrt::RetainPtr.73", %"class.fxcrt::ByteString", %"class.std::__1::unique_ptr.85", %"class.std::__1::map.91", %"class.std::__1::set", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %class.CPDF_SyntaxParser* }
%class.CPDF_SyntaxParser = type opaque
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.CPDF_Parser::ParsedObjectsHolder"* }
%"class.CPDF_Parser::ParsedObjectsHolder" = type { %class.CPDF_IndirectObjectHolder }
%class.CPDF_IndirectObjectHolder = type { i32 (...)**, i32, %"class.std::__1::map", %"class.fxcrt::WeakPtr" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.26", %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { i64 }
%"class.fxcrt::WeakPtr" = type { %"class.fxcrt::RetainPtr.32" }
%"class.fxcrt::RetainPtr.32" = type { %"class.std::__1::unique_ptr.33" }
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* }
%"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle" = type { i64, %"class.std::__1::unique_ptr.340" }
%"class.std::__1::unique_ptr.340" = type { %"class.std::__1::__compressed_pair.341" }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.342" }
%"struct.std::__1::__compressed_pair_elem.342" = type { %"class.fxcrt::StringPoolTemplate"* }
%"class.fxcrt::StringPoolTemplate" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.343", %"class.std::__1::__compressed_pair.351", %"class.std::__1::__compressed_pair.356", %"class.std::__1::__compressed_pair.358", [4 x i8] }>
%"class.std::__1::unique_ptr.343" = type { %"class.std::__1::__compressed_pair.344" }
%"class.std::__1::__compressed_pair.344" = type { %"struct.std::__1::__compressed_pair_elem.345", %"struct.std::__1::__compressed_pair_elem.346" }
%"struct.std::__1::__compressed_pair_elem.345" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.346" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.347" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"struct.std::__1::__compressed_pair_elem.352" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.359" }
%"struct.std::__1::__compressed_pair_elem.359" = type { float }
%"class.fxcrt::UnownedPtr" = type { %"class.CPDF_Parser::ParsedObjectsHolder"* }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %class.CPDF_CrossRefTable* }
%class.CPDF_CrossRefTable = type { %"class.fxcrt::RetainPtr.44", %"class.std::__1::map.61" }
%"class.std::__1::map.61" = type { %"class.std::__1::__tree.62" }
%"class.std::__1::__tree.62" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.63", %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.fxcrt::RetainPtr.73" = type { %"class.std::__1::unique_ptr.74" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %class.CPDF_SecurityHandler* }
%class.CPDF_SecurityHandler = type opaque
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr.79" }
%"class.fxcrt::RetainPtr.79" = type { %"class.std::__1::unique_ptr.80" }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%"class.std::__1::map.91" = type { %"class.std::__1::__tree.92" }
%"class.std::__1::__tree.92" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.93", %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.fxcrt::RetainPtr.44" = type { %"class.std::__1::unique_ptr.45" }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %class.CPDF_Dictionary* }
%class.CPDF_Dictionary = type { %class.CPDF_Object, i32, %"class.fxcrt::WeakPtr", %"class.std::__1::map.48" }
%class.CPDF_Object = type { %"class.fxcrt::Retainable", i32, i32 }
%"class.std::__1::map.48" = type { %"class.std::__1::__tree.49" }
%"class.std::__1::__tree.49" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.50", %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %class.CPDF_LinearizedHeader* }
%class.CPDF_LinearizedHeader = type opaque
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %class.CPDF_CrossRefAvail* }
%class.CPDF_CrossRefAvail = type opaque
%"class.fxcrt::UnownedPtr.113" = type { %class.CPDF_Document* }
%class.CPDF_Document = type { %"class.CPDF_Parser::ParsedObjectsHolder", %"class.fxcrt::Observable", %"class.std::__1::unique_ptr.124", %"class.fxcrt::RetainPtr.44", %"class.fxcrt::RetainPtr.44", %"class.std::__1::vector", i8, i8, i32, i32, %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.141", %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.153", %"class.std::__1::vector.159", %"class.CPDF_Document::StockFontClearer", %"class.std::__1::unique_ptr.167" }
%"class.fxcrt::Observable" = type { %"class.std::__1::set.114" }
%"class.std::__1::set.114" = type { %"class.std::__1::__tree.115" }
%"class.std::__1::__tree.115" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.116", %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %class.CPDF_Parser* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.130" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.CPDF_Document::RenderDataIface"* }
%"class.CPDF_Document::RenderDataIface" = type { i32 (...)**, %"class.fxcrt::UnownedPtr.113" }
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.CPDF_Document::PageDataIface"* }
%"class.CPDF_Document::PageDataIface" = type { i32 (...)**, %"class.fxcrt::UnownedPtr.113" }
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %class.JBig2_DocumentContext* }
%class.JBig2_DocumentContext = type opaque
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.CPDF_Document::LinkListIface"* }
%"class.CPDF_Document::LinkListIface" = type { i32 (...)** }
%"class.CPDF_Document::StockFontClearer" = type { %"class.fxcrt::UnownedPtr.166" }
%"class.fxcrt::UnownedPtr.166" = type { %"class.CPDF_Document::PageDataIface"* }
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.CPDF_Document::Extension"* }
%"class.CPDF_Document::Extension" = type { i32 (...)** }
%"class.std::__1::vector.159" = type { %"class.std::__1::__vector_base.160" }
%"class.std::__1::__vector_base.160" = type { i32*, i32*, %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { i32* }
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %class.CPDF_PageObjectAvail* }
%class.CPDF_PageObjectAvail = type opaque
%"class.std::__1::vector.179" = type { %"class.std::__1::__vector_base.180" }
%"class.std::__1::__vector_base.180" = type { %"class.fxcrt::RetainPtr.181"*, %"class.fxcrt::RetainPtr.181"*, %"class.std::__1::__compressed_pair.187" }
%"class.fxcrt::RetainPtr.181" = type { %"class.std::__1::unique_ptr.182" }
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %class.CPDF_Object* }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.fxcrt::RetainPtr.181"* }
%"class.CPDF_DataAvail::PageNode" = type { i32, i32, %"class.std::__1::vector.192" }
%"class.std::__1::vector.192" = type { %"class.std::__1::__vector_base.193" }
%"class.std::__1::__vector_base.193" = type { %"class.std::__1::unique_ptr.194"*, %"class.std::__1::unique_ptr.194"*, %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::unique_ptr.194" = type opaque
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.std::__1::unique_ptr.194"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree.100" }
%"class.std::__1::__tree.100" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.101", %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::unique_ptr.200" = type { %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %class.CPDF_HintTables* }
%class.CPDF_HintTables = type opaque
%"class.std::__1::map.206" = type { %"class.std::__1::__tree.207" }
%"class.std::__1::__tree.207" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.208", %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::map.215" = type { %"class.std::__1::__tree.216" }
%"class.std::__1::__tree.216" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.217", %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.(anonymous namespace)::FPDF_AvailContext" = type { %"class.std::__1::unique_ptr.0", %"class.fxcrt::RetainPtr", %"class.std::__1::unique_ptr.8" }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.(anonymous namespace)::FPDF_FileAvailContext"* }
%"class.(anonymous namespace)::FPDF_FileAvailContext" = type { %"class.CPDF_DataAvail::FileAvail", %struct._FX_FILEAVAIL* }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr.4" }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.(anonymous namespace)::FPDF_FileAccessContext"* }
%"class.(anonymous namespace)::FPDF_FileAccessContext" = type { %class.IFX_SeekableReadStream.base, %struct.FPDF_FILEACCESS*, %"class.fxcrt::Retainable" }
%class.IFX_SeekableReadStream.base = type { %class.IFX_StreamWithSize }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %class.CPDF_DataAvail* }
%struct._FX_DOWNLOADHINTS = type { i32, void (%struct._FX_DOWNLOADHINTS*, i64, i64)* }
%"class.(anonymous namespace)::FPDF_DownloadHintsContext" = type { %"class.CPDF_DataAvail::DownloadHints", %"class.fxcrt::UnownedPtr.232" }
%"class.CPDF_DataAvail::DownloadHints" = type { i32 (...)** }
%"class.fxcrt::UnownedPtr.232" = type { %struct._FX_DOWNLOADHINTS* }
%struct.fpdf_document_t__ = type opaque
%class.CPDF_DocRenderData = type { %"class.CPDF_Document::RenderDataIface", %"class.std::__1::map.243", %"class.std::__1::map.254" }
%"class.std::__1::map.243" = type { %"class.std::__1::__tree.244" }
%"class.std::__1::__tree.244" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.245", %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::map.254" = type { %"class.std::__1::__tree.255" }
%"class.std::__1::__tree.255" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.256", %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%class.CPDF_DocPageData = type { %"class.CPDF_Document::PageDataIface", %"class.CPDF_Font::FormFactoryIface", i8, %"class.std::__1::map.269", %"class.std::__1::map.278", %"class.std::__1::map.287", %"class.std::__1::map.298", %"class.std::__1::map.307", %"class.std::__1::map.316", %"class.std::__1::map.325" }
%"class.CPDF_Font::FormFactoryIface" = type { i32 (...)** }
%"class.std::__1::map.269" = type { %"class.std::__1::__tree.270" }
%"class.std::__1::__tree.270" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.271", %"class.std::__1::__compressed_pair.275" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::map.278" = type { %"class.std::__1::__tree.279" }
%"class.std::__1::__tree.279" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.280", %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::map.287" = type { %"class.std::__1::__tree.288" }
%"class.std::__1::__tree.288" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.289", %"class.std::__1::__compressed_pair.293" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::map.298" = type { %"class.std::__1::__tree.299" }
%"class.std::__1::__tree.299" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.300", %"class.std::__1::__compressed_pair.304" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::map.307" = type { %"class.std::__1::__tree.308" }
%"class.std::__1::__tree.308" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.309", %"class.std::__1::__compressed_pair.313" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::map.316" = type { %"class.std::__1::__tree.317" }
%"class.std::__1::__tree.317" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.318", %"class.std::__1::__compressed_pair.322" }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::map.325" = type { %"class.std::__1::__tree.326" }
%"class.std::__1::__tree.326" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.327", %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.30" }

@_ZTVN12_GLOBAL__N_125FPDF_DownloadHintsContextE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::FPDF_DownloadHintsContext"*)* @_ZN12_GLOBAL__N_125FPDF_DownloadHintsContextD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::FPDF_DownloadHintsContext"*)* @_ZN12_GLOBAL__N_125FPDF_DownloadHintsContextD0Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::FPDF_DownloadHintsContext"*, i64, i64)* @_ZN12_GLOBAL__N_125FPDF_DownloadHintsContext10AddSegmentElm to i8*)] }, align 8
@_ZTVN12_GLOBAL__N_121FPDF_FileAvailContextE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.CPDF_DataAvail::FileAvail"*)* @_ZN14CPDF_DataAvail9FileAvailD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::FPDF_FileAvailContext"*)* @_ZN12_GLOBAL__N_121FPDF_FileAvailContextD0Ev to i8*), i8* bitcast (i1 (%"class.(anonymous namespace)::FPDF_FileAvailContext"*, i64, i64)* @_ZN12_GLOBAL__N_121FPDF_FileAvailContext11IsDataAvailElm to i8*)] }, align 8
@_ZTVN12_GLOBAL__N_122FPDF_FileAccessContextE = internal unnamed_addr constant { [12 x i8*], [5 x i8*] } { [12 x i8*] [i8* null, i8* inttoptr (i64 16 to i8*), i8* null, i8* null, i8* null, i8* bitcast (i64 (%"class.(anonymous namespace)::FPDF_FileAccessContext"*)* @_ZN12_GLOBAL__N_122FPDF_FileAccessContext7GetSizeEv to i8*), i8* bitcast (i1 (%class.IFX_SeekableReadStream*)* @_ZN22IFX_SeekableReadStream5IsEOFEv to i8*), i8* bitcast (i64 (%class.IFX_SeekableReadStream*)* @_ZN22IFX_SeekableReadStream11GetPositionEv to i8*), i8* bitcast (i64 (%class.IFX_SeekableReadStream*, i8*, i64)* @_ZN22IFX_SeekableReadStream9ReadBlockEPvm to i8*), i8* bitcast (i1 (%"class.(anonymous namespace)::FPDF_FileAccessContext"*, i8*, i64, i64)* @_ZN12_GLOBAL__N_122FPDF_FileAccessContext17ReadBlockAtOffsetEPvlm to i8*), i8* bitcast (void (%"class.(anonymous namespace)::FPDF_FileAccessContext"*)* @_ZN12_GLOBAL__N_122FPDF_FileAccessContextD1Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::FPDF_FileAccessContext"*)* @_ZN12_GLOBAL__N_122FPDF_FileAccessContextD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -16 to i8*), i8* inttoptr (i64 -16 to i8*), i8* null, i8* bitcast (void (%"class.(anonymous namespace)::FPDF_FileAccessContext"*)* @_ZTv0_n24_N12_GLOBAL__N_122FPDF_FileAccessContextD1Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::FPDF_FileAccessContext"*)* @_ZTv0_n24_N12_GLOBAL__N_122FPDF_FileAccessContextD0Ev to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden %struct.fpdf_avail_t__* @FPDFAvail_Create(%struct._FX_FILEAVAIL*, %struct.FPDF_FILEACCESS*) local_unnamed_addr #0 {
  %3 = alloca %"class.fxcrt::RetainPtr.366", align 8
  %4 = ptrtoint %struct._FX_FILEAVAIL* %0 to i64
  %5 = ptrtoint %struct.FPDF_FILEACCESS* %1 to i64
  %6 = tail call i8* @_Znwm(i64 24) #9
  %7 = tail call i8* @_Znwm(i64 16) #9
  %8 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12_GLOBAL__N_121FPDF_FileAvailContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds i8, i8* %7, i64 8
  %10 = bitcast i8* %9 to i64*
  store i64 %4, i64* %10, align 8
  %11 = bitcast i8* %6 to i8**
  store i8* %7, i8** %11, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 8
  %13 = tail call i8* @_Znwm(i64 32) #9, !noalias !2
  %14 = getelementptr inbounds i8, i8* %13, i64 16
  %15 = bitcast i8* %14 to i32 (...)***
  %16 = bitcast i8* %13 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [5 x i8*] }, { [12 x i8*], [5 x i8*] }* @_ZTVN12_GLOBAL__N_122FPDF_FileAccessContextE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %15, align 8, !noalias !2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [5 x i8*] }, { [12 x i8*], [5 x i8*] }* @_ZTVN12_GLOBAL__N_122FPDF_FileAccessContextE, i64 0, inrange i32 0, i64 5) to i32 (...)**), i32 (...)*** %16, align 8, !noalias !2
  %17 = getelementptr inbounds i8, i8* %13, i64 8
  %18 = bitcast i8* %17 to i64*
  store i64 %5, i64* %18, align 8, !noalias !2
  %19 = ptrtoint i8* %13 to i64
  %20 = bitcast i8* %12 to i64*
  store i64 %19, i64* %20, align 8, !alias.scope !2
  %21 = bitcast i8* %7 to %"class.CPDF_DataAvail::FileAvail"*
  %22 = tail call i8* @_Znwm(i64 448) #9
  %23 = bitcast i8* %22 to %class.CPDF_DataAvail*
  %24 = bitcast %"class.fxcrt::RetainPtr.366"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #10
  %25 = bitcast %"class.fxcrt::RetainPtr.366"* %3 to i64*
  store i64 %19, i64* %25, align 8
  %26 = getelementptr inbounds i8, i8* %13, i64 24
  %27 = bitcast i8* %26 to i64*
  store i64 2, i64* %27, align 8
  call void @_ZN14CPDF_DataAvailC1EPNS_9FileAvailERKN5fxcrt9RetainPtrI22IFX_SeekableReadStreamEE(%class.CPDF_DataAvail* nonnull %23, %"class.CPDF_DataAvail::FileAvail"* nonnull %21, %"class.fxcrt::RetainPtr.366"* nonnull dereferenceable(8) %3) #10
  %28 = getelementptr inbounds %"class.fxcrt::RetainPtr.366", %"class.fxcrt::RetainPtr.366"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %class.IFX_SeekableReadStream*, %class.IFX_SeekableReadStream** %28, align 8
  store %class.IFX_SeekableReadStream* null, %class.IFX_SeekableReadStream** %28, align 8
  %30 = icmp eq %class.IFX_SeekableReadStream* %29, null
  br i1 %30, label %52, label %31

31:                                               ; preds = %2
  %32 = bitcast %class.IFX_SeekableReadStream* %29 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr i8, i8* %33, i64 -32
  %35 = bitcast i8* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %class.IFX_SeekableReadStream* %29 to i8*
  %38 = getelementptr inbounds i8, i8* %37, i64 %36
  %39 = getelementptr inbounds i8, i8* %38, i64 8
  %40 = bitcast i8* %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = add nsw i64 %41, -1
  store i64 %42, i64* %40, align 8
  %43 = icmp ne i64 %42, 0
  %44 = icmp eq i8* %38, null
  %45 = or i1 %44, %43
  br i1 %45, label %52, label %46

46:                                               ; preds = %31
  %47 = bitcast i8* %38 to %"class.fxcrt::Retainable"*
  %48 = bitcast i8* %38 to void (%"class.fxcrt::Retainable"*)***
  %49 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %49, i64 1
  %51 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %50, align 8
  call void %51(%"class.fxcrt::Retainable"* nonnull %47) #10
  br label %52

52:                                               ; preds = %46, %31, %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #10
  %53 = getelementptr inbounds i8, i8* %6, i64 16
  %54 = bitcast i8* %53 to i8**
  store i8* %22, i8** %54, align 8
  %55 = bitcast i8* %6 to %struct.fpdf_avail_t__*
  ret %struct.fpdf_avail_t__* %55
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @FPDFAvail_Destroy(%struct.fpdf_avail_t__*) local_unnamed_addr #0 {
  %2 = bitcast %struct.fpdf_avail_t__* %0 to %"class.(anonymous namespace)::FPDF_AvailContext"*
  %3 = icmp eq %struct.fpdf_avail_t__* %0, null
  br i1 %3, label %39, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.(anonymous namespace)::FPDF_AvailContext", %"class.(anonymous namespace)::FPDF_AvailContext"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  %6 = load %class.CPDF_DataAvail*, %class.CPDF_DataAvail** %5, align 8
  store %class.CPDF_DataAvail* null, %class.CPDF_DataAvail** %5, align 8
  %7 = icmp eq %class.CPDF_DataAvail* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %4
  %9 = bitcast %class.CPDF_DataAvail* %6 to void (%class.CPDF_DataAvail*)***
  %10 = load void (%class.CPDF_DataAvail*)**, void (%class.CPDF_DataAvail*)*** %9, align 8
  %11 = getelementptr inbounds void (%class.CPDF_DataAvail*)*, void (%class.CPDF_DataAvail*)** %10, i64 1
  %12 = load void (%class.CPDF_DataAvail*)*, void (%class.CPDF_DataAvail*)** %11, align 8
  tail call void %12(%class.CPDF_DataAvail* nonnull %6) #10
  br label %13

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %"class.(anonymous namespace)::FPDF_AvailContext", %"class.(anonymous namespace)::FPDF_AvailContext"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.(anonymous namespace)::FPDF_FileAccessContext"*, %"class.(anonymous namespace)::FPDF_FileAccessContext"** %14, align 8
  store %"class.(anonymous namespace)::FPDF_FileAccessContext"* null, %"class.(anonymous namespace)::FPDF_FileAccessContext"** %14, align 8
  %16 = icmp eq %"class.(anonymous namespace)::FPDF_FileAccessContext"* %15, null
  br i1 %16, label %28, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.(anonymous namespace)::FPDF_FileAccessContext", %"class.(anonymous namespace)::FPDF_FileAccessContext"* %15, i64 0, i32 2
  %19 = getelementptr inbounds %"class.(anonymous namespace)::FPDF_FileAccessContext", %"class.(anonymous namespace)::FPDF_FileAccessContext"* %15, i64 0, i32 2, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = add nsw i64 %20, -1
  store i64 %21, i64* %19, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %23, label %28

23:                                               ; preds = %17
  %24 = bitcast %"class.fxcrt::Retainable"* %18 to void (%"class.fxcrt::Retainable"*)***
  %25 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %25, i64 1
  %27 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %26, align 8
  tail call void %27(%"class.fxcrt::Retainable"* nonnull %18) #10
  br label %28

28:                                               ; preds = %23, %17, %13
  %29 = bitcast %struct.fpdf_avail_t__* %0 to %"class.(anonymous namespace)::FPDF_FileAvailContext"**
  %30 = load %"class.(anonymous namespace)::FPDF_FileAvailContext"*, %"class.(anonymous namespace)::FPDF_FileAvailContext"** %29, align 8
  store %"class.(anonymous namespace)::FPDF_FileAvailContext"* null, %"class.(anonymous namespace)::FPDF_FileAvailContext"** %29, align 8
  %31 = icmp eq %"class.(anonymous namespace)::FPDF_FileAvailContext"* %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %28
  %33 = bitcast %"class.(anonymous namespace)::FPDF_FileAvailContext"* %30 to void (%"class.(anonymous namespace)::FPDF_FileAvailContext"*)***
  %34 = load void (%"class.(anonymous namespace)::FPDF_FileAvailContext"*)**, void (%"class.(anonymous namespace)::FPDF_FileAvailContext"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.(anonymous namespace)::FPDF_FileAvailContext"*)*, void (%"class.(anonymous namespace)::FPDF_FileAvailContext"*)** %34, i64 1
  %36 = load void (%"class.(anonymous namespace)::FPDF_FileAvailContext"*)*, void (%"class.(anonymous namespace)::FPDF_FileAvailContext"*)** %35, align 8
  tail call void %36(%"class.(anonymous namespace)::FPDF_FileAvailContext"* nonnull %30) #10
  br label %37

37:                                               ; preds = %32, %28
  %38 = bitcast %struct.fpdf_avail_t__* %0 to i8*
  tail call void @_ZdlPv(i8* %38) #9
  br label %39

39:                                               ; preds = %1, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FPDFAvail_IsDocAvail(%struct.fpdf_avail_t__* readonly, %struct._FX_DOWNLOADHINTS*) local_unnamed_addr #0 {
  %3 = alloca %"class.(anonymous namespace)::FPDF_DownloadHintsContext", align 8
  %4 = icmp eq %struct.fpdf_avail_t__* %0, null
  br i1 %4, label %14, label %5

5:                                                ; preds = %2
  %6 = bitcast %struct.fpdf_avail_t__* %0 to %"class.(anonymous namespace)::FPDF_AvailContext"*
  %7 = bitcast %"class.(anonymous namespace)::FPDF_DownloadHintsContext"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.(anonymous namespace)::FPDF_DownloadHintsContext", %"class.(anonymous namespace)::FPDF_DownloadHintsContext"* %3, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.(anonymous namespace)::FPDF_DownloadHintsContext", %"class.(anonymous namespace)::FPDF_DownloadHintsContext"* %3, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12_GLOBAL__N_125FPDF_DownloadHintsContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  store %struct._FX_DOWNLOADHINTS* %1, %struct._FX_DOWNLOADHINTS** %9, align 8
  %10 = getelementptr inbounds %"class.(anonymous namespace)::FPDF_AvailContext", %"class.(anonymous namespace)::FPDF_AvailContext"* %6, i64 0, i32 2, i32 0, i32 0, i32 0
  %11 = load %class.CPDF_DataAvail*, %class.CPDF_DataAvail** %10, align 8
  %12 = getelementptr inbounds %"class.(anonymous namespace)::FPDF_DownloadHintsContext", %"class.(anonymous namespace)::FPDF_DownloadHintsContext"* %3, i64 0, i32 0
  %13 = call i32 @_ZN14CPDF_DataAvail10IsDocAvailEPNS_13DownloadHintsE(%class.CPDF_DataAvail* %11, %"class.CPDF_DataAvail::DownloadHints"* nonnull %12) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12_GLOBAL__N_125FPDF_DownloadHintsContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  call void @_ZN14CPDF_DataAvail13DownloadHintsD2Ev(%"class.CPDF_DataAvail::DownloadHints"* nonnull %12) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #10
  br label %14

14:                                               ; preds = %2, %5
  %15 = phi i32 [ %13, %5 ], [ -1, %2 ]
  ret i32 %15
}

declare i32 @_ZN14CPDF_DataAvail10IsDocAvailEPNS_13DownloadHintsE(%class.CPDF_DataAvail*, %"class.CPDF_DataAvail::DownloadHints"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_125FPDF_DownloadHintsContextD2Ev(%"class.(anonymous namespace)::FPDF_DownloadHintsContext"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::FPDF_DownloadHintsContext", %"class.(anonymous namespace)::FPDF_DownloadHintsContext"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12_GLOBAL__N_125FPDF_DownloadHintsContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::FPDF_DownloadHintsContext", %"class.(anonymous namespace)::FPDF_DownloadHintsContext"* %0, i64 0, i32 0
  tail call void @_ZN14CPDF_DataAvail13DownloadHintsD2Ev(%"class.CPDF_DataAvail::DownloadHints"* %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.fpdf_document_t__* @FPDFAvail_GetDocument(%struct.fpdf_avail_t__* readonly, i8*) local_unnamed_addr #0 {
  %3 = icmp eq %struct.fpdf_avail_t__* %0, null
  br i1 %3, label %27, label %4

4:                                                ; preds = %2
  %5 = bitcast %struct.fpdf_avail_t__* %0 to %"class.(anonymous namespace)::FPDF_AvailContext"*
  %6 = getelementptr inbounds %"class.(anonymous namespace)::FPDF_AvailContext", %"class.(anonymous namespace)::FPDF_AvailContext"* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  %7 = load %class.CPDF_DataAvail*, %class.CPDF_DataAvail** %6, align 8
  %8 = tail call i8* @_Znwm(i64 64) #9
  %9 = bitcast i8* %8 to %class.CPDF_DocRenderData*
  tail call void @_ZN18CPDF_DocRenderDataC1Ev(%class.CPDF_DocRenderData* nonnull %9) #10
  %10 = tail call i8* @_Znwm(i64 200) #9
  %11 = bitcast i8* %10 to %class.CPDF_DocPageData*
  tail call void @_ZN16CPDF_DocPageDataC1Ev(%class.CPDF_DocPageData* nonnull %11) #10
  %12 = bitcast i8* %8 to %"class.CPDF_Document::RenderDataIface"*
  %13 = bitcast i8* %10 to %"class.CPDF_Document::PageDataIface"*
  %14 = tail call { i32, %class.CPDF_Document* } @_ZN14CPDF_DataAvail13ParseDocumentENSt3__110unique_ptrIN13CPDF_Document15RenderDataIfaceENS0_14default_deleteIS3_EEEENS1_INS2_13PageDataIfaceENS4_IS7_EEEEPKc(%class.CPDF_DataAvail* %7, %"class.CPDF_Document::RenderDataIface"* nonnull %12, %"class.CPDF_Document::PageDataIface"* nonnull %13, i8* %1) #10
  %15 = extractvalue { i32, %class.CPDF_Document* } %14, 0
  %16 = extractvalue { i32, %class.CPDF_Document* } %14, 1
  %17 = icmp eq i32 %15, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %4
  tail call void @_Z25ReportUnsupportedFeaturesPK13CPDF_Document(%class.CPDF_Document* %16) #10
  %19 = tail call %struct.fpdf_document_t__* @_Z28FPDFDocumentFromCPDFDocumentP13CPDF_Document(%class.CPDF_Document* %16) #10
  br label %27

20:                                               ; preds = %4
  tail call void @_Z17ProcessParseErrorN11CPDF_Parser5ErrorE(i32 %15) #10
  %21 = icmp eq %class.CPDF_Document* %16, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %20
  %23 = bitcast %class.CPDF_Document* %16 to void (%class.CPDF_Document*)***
  %24 = load void (%class.CPDF_Document*)**, void (%class.CPDF_Document*)*** %23, align 8
  %25 = getelementptr inbounds void (%class.CPDF_Document*)*, void (%class.CPDF_Document*)** %24, i64 1
  %26 = load void (%class.CPDF_Document*)*, void (%class.CPDF_Document*)** %25, align 8
  tail call void %26(%class.CPDF_Document* nonnull %16) #10
  br label %27

27:                                               ; preds = %22, %20, %18, %2
  %28 = phi %struct.fpdf_document_t__* [ null, %2 ], [ %19, %18 ], [ null, %20 ], [ null, %22 ]
  ret %struct.fpdf_document_t__* %28
}

declare { i32, %class.CPDF_Document* } @_ZN14CPDF_DataAvail13ParseDocumentENSt3__110unique_ptrIN13CPDF_Document15RenderDataIfaceENS0_14default_deleteIS3_EEEENS1_INS2_13PageDataIfaceENS4_IS7_EEEEPKc(%class.CPDF_DataAvail*, %"class.CPDF_Document::RenderDataIface"*, %"class.CPDF_Document::PageDataIface"*, i8*) local_unnamed_addr #2

declare void @_Z17ProcessParseErrorN11CPDF_Parser5ErrorE(i32) local_unnamed_addr #2

declare void @_Z25ReportUnsupportedFeaturesPK13CPDF_Document(%class.CPDF_Document*) local_unnamed_addr #2

declare %struct.fpdf_document_t__* @_Z28FPDFDocumentFromCPDFDocumentP13CPDF_Document(%class.CPDF_Document*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FPDFAvail_GetFirstPageNum(%struct.fpdf_document_t__*) local_unnamed_addr #0 {
  %2 = tail call %class.CPDF_Document* @_Z28CPDFDocumentFromFPDFDocumentP17fpdf_document_t__(%struct.fpdf_document_t__* %0) #10
  %3 = icmp eq %class.CPDF_Document* %2, null
  br i1 %3, label %8, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %class.CPDF_Document, %class.CPDF_Document* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  %6 = load %class.CPDF_Parser*, %class.CPDF_Parser** %5, align 8
  %7 = tail call i32 @_ZNK11CPDF_Parser14GetFirstPageNoEv(%class.CPDF_Parser* %6) #10
  br label %8

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ 0, %1 ]
  ret i32 %9
}

declare %class.CPDF_Document* @_Z28CPDFDocumentFromFPDFDocumentP17fpdf_document_t__(%struct.fpdf_document_t__*) local_unnamed_addr #2

declare i32 @_ZNK11CPDF_Parser14GetFirstPageNoEv(%class.CPDF_Parser*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FPDFAvail_IsPageAvail(%struct.fpdf_avail_t__* readonly, i32, %struct._FX_DOWNLOADHINTS*) local_unnamed_addr #0 {
  %4 = alloca %"class.(anonymous namespace)::FPDF_DownloadHintsContext", align 8
  %5 = bitcast %struct.fpdf_avail_t__* %0 to %"class.(anonymous namespace)::FPDF_AvailContext"*
  %6 = icmp eq %struct.fpdf_avail_t__* %0, null
  br i1 %6, label %17, label %7

7:                                                ; preds = %3
  %8 = icmp slt i32 %1, 0
  br i1 %8, label %17, label %9

9:                                                ; preds = %7
  %10 = bitcast %"class.(anonymous namespace)::FPDF_DownloadHintsContext"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"class.(anonymous namespace)::FPDF_DownloadHintsContext", %"class.(anonymous namespace)::FPDF_DownloadHintsContext"* %4, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.(anonymous namespace)::FPDF_DownloadHintsContext", %"class.(anonymous namespace)::FPDF_DownloadHintsContext"* %4, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12_GLOBAL__N_125FPDF_DownloadHintsContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  store %struct._FX_DOWNLOADHINTS* %2, %struct._FX_DOWNLOADHINTS** %12, align 8
  %13 = getelementptr inbounds %"class.(anonymous namespace)::FPDF_AvailContext", %"class.(anonymous namespace)::FPDF_AvailContext"* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  %14 = load %class.CPDF_DataAvail*, %class.CPDF_DataAvail** %13, align 8
  %15 = getelementptr inbounds %"class.(anonymous namespace)::FPDF_DownloadHintsContext", %"class.(anonymous namespace)::FPDF_DownloadHintsContext"* %4, i64 0, i32 0
  %16 = call i32 @_ZN14CPDF_DataAvail11IsPageAvailEjPNS_13DownloadHintsE(%class.CPDF_DataAvail* %14, i32 %1, %"class.CPDF_DataAvail::DownloadHints"* nonnull %15) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12_GLOBAL__N_125FPDF_DownloadHintsContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  call void @_ZN14CPDF_DataAvail13DownloadHintsD2Ev(%"class.CPDF_DataAvail::DownloadHints"* nonnull %15) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #10
  br label %17

17:                                               ; preds = %7, %3, %9
  %18 = phi i32 [ %16, %9 ], [ -1, %3 ], [ 0, %7 ]
  ret i32 %18
}

declare i32 @_ZN14CPDF_DataAvail11IsPageAvailEjPNS_13DownloadHintsE(%class.CPDF_DataAvail*, i32, %"class.CPDF_DataAvail::DownloadHints"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FPDFAvail_IsFormAvail(%struct.fpdf_avail_t__* readonly, %struct._FX_DOWNLOADHINTS*) local_unnamed_addr #0 {
  %3 = alloca %"class.(anonymous namespace)::FPDF_DownloadHintsContext", align 8
  %4 = icmp eq %struct.fpdf_avail_t__* %0, null
  br i1 %4, label %14, label %5

5:                                                ; preds = %2
  %6 = bitcast %struct.fpdf_avail_t__* %0 to %"class.(anonymous namespace)::FPDF_AvailContext"*
  %7 = bitcast %"class.(anonymous namespace)::FPDF_DownloadHintsContext"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.(anonymous namespace)::FPDF_DownloadHintsContext", %"class.(anonymous namespace)::FPDF_DownloadHintsContext"* %3, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.(anonymous namespace)::FPDF_DownloadHintsContext", %"class.(anonymous namespace)::FPDF_DownloadHintsContext"* %3, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12_GLOBAL__N_125FPDF_DownloadHintsContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  store %struct._FX_DOWNLOADHINTS* %1, %struct._FX_DOWNLOADHINTS** %9, align 8
  %10 = getelementptr inbounds %"class.(anonymous namespace)::FPDF_AvailContext", %"class.(anonymous namespace)::FPDF_AvailContext"* %6, i64 0, i32 2, i32 0, i32 0, i32 0
  %11 = load %class.CPDF_DataAvail*, %class.CPDF_DataAvail** %10, align 8
  %12 = getelementptr inbounds %"class.(anonymous namespace)::FPDF_DownloadHintsContext", %"class.(anonymous namespace)::FPDF_DownloadHintsContext"* %3, i64 0, i32 0
  %13 = call i32 @_ZN14CPDF_DataAvail11IsFormAvailEPNS_13DownloadHintsE(%class.CPDF_DataAvail* %11, %"class.CPDF_DataAvail::DownloadHints"* nonnull %12) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12_GLOBAL__N_125FPDF_DownloadHintsContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  call void @_ZN14CPDF_DataAvail13DownloadHintsD2Ev(%"class.CPDF_DataAvail::DownloadHints"* nonnull %12) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #10
  br label %14

14:                                               ; preds = %2, %5
  %15 = phi i32 [ %13, %5 ], [ -1, %2 ]
  ret i32 %15
}

declare i32 @_ZN14CPDF_DataAvail11IsFormAvailEPNS_13DownloadHintsE(%class.CPDF_DataAvail*, %"class.CPDF_DataAvail::DownloadHints"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FPDFAvail_IsLinearized(%struct.fpdf_avail_t__* readonly) local_unnamed_addr #0 {
  %2 = icmp eq %struct.fpdf_avail_t__* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %struct.fpdf_avail_t__* %0 to %"class.(anonymous namespace)::FPDF_AvailContext"*
  %5 = getelementptr inbounds %"class.(anonymous namespace)::FPDF_AvailContext", %"class.(anonymous namespace)::FPDF_AvailContext"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %6 = load %class.CPDF_DataAvail*, %class.CPDF_DataAvail** %5, align 8
  %7 = tail call i32 @_ZN14CPDF_DataAvail15IsLinearizedPDFEv(%class.CPDF_DataAvail* %6) #10
  br label %8

8:                                                ; preds = %1, %3
  %9 = phi i32 [ %7, %3 ], [ -1, %1 ]
  ret i32 %9
}

declare i32 @_ZN14CPDF_DataAvail15IsLinearizedPDFEv(%class.CPDF_DataAvail*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_125FPDF_DownloadHintsContextD0Ev(%"class.(anonymous namespace)::FPDF_DownloadHintsContext"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::FPDF_DownloadHintsContext", %"class.(anonymous namespace)::FPDF_DownloadHintsContext"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12_GLOBAL__N_125FPDF_DownloadHintsContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::FPDF_DownloadHintsContext", %"class.(anonymous namespace)::FPDF_DownloadHintsContext"* %0, i64 0, i32 0
  tail call void @_ZN14CPDF_DataAvail13DownloadHintsD2Ev(%"class.CPDF_DataAvail::DownloadHints"* %3) #10
  %4 = bitcast %"class.(anonymous namespace)::FPDF_DownloadHintsContext"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_125FPDF_DownloadHintsContext10AddSegmentElm(%"class.(anonymous namespace)::FPDF_DownloadHintsContext"* nocapture readonly, i64, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.(anonymous namespace)::FPDF_DownloadHintsContext", %"class.(anonymous namespace)::FPDF_DownloadHintsContext"* %0, i64 0, i32 1, i32 0
  %5 = load %struct._FX_DOWNLOADHINTS*, %struct._FX_DOWNLOADHINTS** %4, align 8
  %6 = icmp eq %struct._FX_DOWNLOADHINTS* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct._FX_DOWNLOADHINTS, %struct._FX_DOWNLOADHINTS* %5, i64 0, i32 1
  %9 = load void (%struct._FX_DOWNLOADHINTS*, i64, i64)*, void (%struct._FX_DOWNLOADHINTS*, i64, i64)** %8, align 8
  tail call void %9(%struct._FX_DOWNLOADHINTS* nonnull %5, i64 %1, i64 %2) #10
  br label %10

10:                                               ; preds = %3, %7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN14CPDF_DataAvail13DownloadHintsD2Ev(%"class.CPDF_DataAvail::DownloadHints"*) unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN14CPDF_DataAvail9FileAvailD2Ev(%"class.CPDF_DataAvail::FileAvail"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_121FPDF_FileAvailContextD0Ev(%"class.(anonymous namespace)::FPDF_FileAvailContext"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::FPDF_FileAvailContext", %"class.(anonymous namespace)::FPDF_FileAvailContext"* %0, i64 0, i32 0
  tail call void @_ZN14CPDF_DataAvail9FileAvailD2Ev(%"class.CPDF_DataAvail::FileAvail"* %2) #10
  %3 = bitcast %"class.(anonymous namespace)::FPDF_FileAvailContext"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN12_GLOBAL__N_121FPDF_FileAvailContext11IsDataAvailElm(%"class.(anonymous namespace)::FPDF_FileAvailContext"* nocapture readonly, i64, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.(anonymous namespace)::FPDF_FileAvailContext", %"class.(anonymous namespace)::FPDF_FileAvailContext"* %0, i64 0, i32 1
  %5 = load %struct._FX_FILEAVAIL*, %struct._FX_FILEAVAIL** %4, align 8
  %6 = getelementptr inbounds %struct._FX_FILEAVAIL, %struct._FX_FILEAVAIL* %5, i64 0, i32 1
  %7 = load i32 (%struct._FX_FILEAVAIL*, i64, i64)*, i32 (%struct._FX_FILEAVAIL*, i64, i64)** %6, align 8
  %8 = tail call i32 %7(%struct._FX_FILEAVAIL* %5, i64 %1, i64 %2) #10
  %9 = icmp ne i32 %8, 0
  ret i1 %9
}

declare zeroext i1 @_ZN22IFX_SeekableReadStream5IsEOFEv(%class.IFX_SeekableReadStream*) unnamed_addr #2

declare i64 @_ZN22IFX_SeekableReadStream11GetPositionEv(%class.IFX_SeekableReadStream*) unnamed_addr #2

declare i64 @_ZN22IFX_SeekableReadStream9ReadBlockEPvm(%class.IFX_SeekableReadStream*, i8*, i64) unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i64 @_ZN12_GLOBAL__N_122FPDF_FileAccessContext7GetSizeEv(%"class.(anonymous namespace)::FPDF_FileAccessContext"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::FPDF_FileAccessContext", %"class.(anonymous namespace)::FPDF_FileAccessContext"* %0, i64 0, i32 1
  %3 = load %struct.FPDF_FILEACCESS*, %struct.FPDF_FILEACCESS** %2, align 8
  %4 = getelementptr inbounds %struct.FPDF_FILEACCESS, %struct.FPDF_FILEACCESS* %3, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  ret i64 %5
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN12_GLOBAL__N_122FPDF_FileAccessContext17ReadBlockAtOffsetEPvlm(%"class.(anonymous namespace)::FPDF_FileAccessContext"* nocapture readonly, i8*, i64, i64) unnamed_addr #0 align 2 {
  %5 = icmp ne i8* %1, null
  %6 = icmp sgt i64 %2, -1
  %7 = and i1 %5, %6
  %8 = icmp sgt i64 %3, 0
  %9 = and i1 %8, %7
  br i1 %9, label %10, label %27

10:                                               ; preds = %4
  %11 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %3, i64 %2) #10
  %12 = extractvalue { i64, i1 } %11, 1
  br i1 %12, label %27, label %13

13:                                               ; preds = %10
  %14 = extractvalue { i64, i1 } %11, 0
  %15 = getelementptr inbounds %"class.(anonymous namespace)::FPDF_FileAccessContext", %"class.(anonymous namespace)::FPDF_FileAccessContext"* %0, i64 0, i32 1
  %16 = load %struct.FPDF_FILEACCESS*, %struct.FPDF_FILEACCESS** %15, align 8
  %17 = getelementptr inbounds %struct.FPDF_FILEACCESS, %struct.FPDF_FILEACCESS* %16, i64 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = icmp sgt i64 %14, %18
  br i1 %19, label %27, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %struct.FPDF_FILEACCESS, %struct.FPDF_FILEACCESS* %16, i64 0, i32 1
  %22 = load i32 (i8*, i64, i8*, i64)*, i32 (i8*, i64, i8*, i64)** %21, align 8
  %23 = getelementptr inbounds %struct.FPDF_FILEACCESS, %struct.FPDF_FILEACCESS* %16, i64 0, i32 2
  %24 = load i8*, i8** %23, align 8
  %25 = tail call i32 %22(i8* %24, i64 %2, i8* nonnull %1, i64 %3) #10
  %26 = icmp ne i32 %25, 0
  br label %27

27:                                               ; preds = %20, %10, %13, %4
  %28 = phi i1 [ false, %4 ], [ false, %13 ], [ false, %10 ], [ %26, %20 ]
  ret i1 %28
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN12_GLOBAL__N_122FPDF_FileAccessContextD1Ev(%"class.(anonymous namespace)::FPDF_FileAccessContext"* nocapture) unnamed_addr #7 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_122FPDF_FileAccessContextD0Ev(%"class.(anonymous namespace)::FPDF_FileAccessContext"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::FPDF_FileAccessContext"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #9
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal void @_ZTv0_n24_N12_GLOBAL__N_122FPDF_FileAccessContextD1Ev(%"class.(anonymous namespace)::FPDF_FileAccessContext"* nocapture) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZTv0_n24_N12_GLOBAL__N_122FPDF_FileAccessContextD0Ev(%"class.(anonymous namespace)::FPDF_FileAccessContext"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::FPDF_FileAccessContext"* %0 to i8*
  %3 = bitcast %"class.(anonymous namespace)::FPDF_FileAccessContext"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  tail call void @_ZdlPv(i8* %8) #9
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #8

declare void @_ZN14CPDF_DataAvailC1EPNS_9FileAvailERKN5fxcrt9RetainPtrI22IFX_SeekableReadStreamEE(%class.CPDF_DataAvail*, %"class.CPDF_DataAvail::FileAvail"*, %"class.fxcrt::RetainPtr.366"* dereferenceable(8)) unnamed_addr #2

declare void @_ZN18CPDF_DocRenderDataC1Ev(%class.CPDF_DocRenderData*) unnamed_addr #2

declare void @_ZN16CPDF_DocPageDataC1Ev(%class.CPDF_DocPageData*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { builtin nounwind }
attributes #10 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN6pdfium10MakeRetainIN12_GLOBAL__N_122FPDF_FileAccessContextEJRP15FPDF_FILEACCESSEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!4 = distinct !{!4, !"_ZN6pdfium10MakeRetainIN12_GLOBAL__N_122FPDF_FileAccessContextEJRP15FPDF_FILEACCESSEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
