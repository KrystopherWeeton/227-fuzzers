; ModuleID = '../../third_party/opus/src/silk/stereo_quant_pred.c'
source_filename = "../../third_party/opus/src/silk/stereo_quant_pred.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

@silk_stereo_pred_quant_Q13 = external local_unnamed_addr constant [16 x i16], align 16

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @silk_stereo_quant_pred(i32* nocapture, [3 x i8]* nocapture) local_unnamed_addr #0 {
  %3 = getelementptr inbounds [3 x i8], [3 x i8]* %1, i64 0, i64 0
  %4 = getelementptr inbounds [3 x i8], [3 x i8]* %1, i64 0, i64 1
  %5 = load i16, i16* getelementptr inbounds ([16 x i16], [16 x i16]* @silk_stereo_pred_quant_Q13, i64 0, i64 0), align 16
  %6 = sext i16 %5 to i32
  %7 = load i16, i16* getelementptr inbounds ([16 x i16], [16 x i16]* @silk_stereo_pred_quant_Q13, i64 0, i64 1), align 2
  %8 = sext i16 %7 to i32
  %9 = sub nsw i32 %8, %6
  %10 = mul nsw i32 %9, 6554
  %11 = ashr i32 %10, 16
  %12 = add nsw i32 %11, %6
  %13 = load i32, i32* %0, align 4
  %14 = sub nsw i32 %13, %12
  %15 = icmp slt i32 %14, 0
  %16 = sub nsw i32 0, %14
  %17 = select i1 %15, i32 %16, i32 %14
  %18 = icmp eq i32 %17, 2147483647
  br i1 %18, label %37, label %40

19:                                               ; preds = %111
  %20 = sext i16 %45 to i32
  %21 = add nuw nsw i64 %47, 1
  %22 = add nuw nsw i32 %46, 1
  %23 = getelementptr inbounds [16 x i16], [16 x i16]* @silk_stereo_pred_quant_Q13, i64 0, i64 %21
  %24 = load i16, i16* %23, align 2
  %25 = sext i16 %24 to i32
  %26 = sub nsw i32 %25, %20
  %27 = mul nsw i32 %26, 6554
  %28 = ashr i32 %27, 16
  %29 = trunc i32 %46 to i8
  %30 = add nsw i32 %28, %20
  %31 = load i32, i32* %0, align 4
  %32 = sub nsw i32 %31, %30
  %33 = icmp slt i32 %32, 0
  %34 = sub nsw i32 0, %32
  %35 = select i1 %33, i32 %34, i32 %32
  %36 = icmp slt i32 %35, %109
  br i1 %36, label %40, label %37

37:                                               ; preds = %19, %2
  %38 = phi i32 [ 0, %2 ], [ %104, %19 ]
  %39 = load i8, i8* %3, align 1
  br label %61

40:                                               ; preds = %2, %19
  %41 = phi i32 [ %35, %19 ], [ %17, %2 ]
  %42 = phi i32 [ %30, %19 ], [ %12, %2 ]
  %43 = phi i8 [ %29, %19 ], [ 0, %2 ]
  %44 = phi i32 [ %28, %19 ], [ %11, %2 ]
  %45 = phi i16 [ %24, %19 ], [ %7, %2 ]
  %46 = phi i32 [ %22, %19 ], [ 1, %2 ]
  %47 = phi i64 [ %21, %19 ], [ 1, %2 ]
  %48 = phi i32 [ %20, %19 ], [ %6, %2 ]
  %49 = phi i32 [ %46, %19 ], [ 0, %2 ]
  store i8 %43, i8* %3, align 1
  store i8 0, i8* %4, align 1
  %50 = mul nsw i32 %44, 3
  %51 = add nsw i32 %50, %48
  %52 = load i32, i32* %0, align 4
  %53 = sub nsw i32 %52, %51
  %54 = icmp slt i32 %53, 0
  %55 = sub nsw i32 0, %53
  %56 = select i1 %54, i32 %55, i32 %53
  %57 = icmp slt i32 %56, %41
  br i1 %57, label %84, label %58

58:                                               ; preds = %102, %93, %84, %40, %111
  %59 = phi i32 [ %104, %111 ], [ %95, %102 ], [ %86, %93 ], [ %51, %84 ], [ %42, %40 ]
  %60 = trunc i32 %49 to i8
  br label %61

61:                                               ; preds = %58, %37
  %62 = phi i8 [ %39, %37 ], [ %60, %58 ]
  %63 = phi i32 [ %38, %37 ], [ %59, %58 ]
  %64 = sdiv i8 %62, 3
  %65 = getelementptr inbounds [3 x i8], [3 x i8]* %1, i64 0, i64 2
  store i8 %64, i8* %65, align 1
  %66 = mul i8 %64, -3
  %67 = add i8 %66, %62
  store i8 %67, i8* %3, align 1
  store i32 %63, i32* %0, align 4
  %68 = getelementptr inbounds i32, i32* %0, i64 1
  %69 = getelementptr inbounds [3 x i8], [3 x i8]* %1, i64 1, i64 0
  %70 = getelementptr inbounds [3 x i8], [3 x i8]* %1, i64 1, i64 1
  %71 = sext i16 %5 to i32
  %72 = load i16, i16* getelementptr inbounds ([16 x i16], [16 x i16]* @silk_stereo_pred_quant_Q13, i64 0, i64 1), align 2
  %73 = sext i16 %72 to i32
  %74 = sub nsw i32 %73, %71
  %75 = mul nsw i32 %74, 6554
  %76 = ashr i32 %75, 16
  %77 = add nsw i32 %76, %71
  %78 = load i32, i32* %68, align 4
  %79 = sub nsw i32 %78, %77
  %80 = icmp slt i32 %79, 0
  %81 = sub nsw i32 0, %79
  %82 = select i1 %80, i32 %81, i32 %79
  %83 = icmp eq i32 %82, 2147483647
  br i1 %83, label %131, label %134

84:                                               ; preds = %40
  store i8 %43, i8* %3, align 1
  store i8 1, i8* %4, align 1
  %85 = mul nsw i32 %44, 5
  %86 = add nsw i32 %85, %48
  %87 = load i32, i32* %0, align 4
  %88 = sub nsw i32 %87, %86
  %89 = icmp slt i32 %88, 0
  %90 = sub nsw i32 0, %88
  %91 = select i1 %89, i32 %90, i32 %88
  %92 = icmp slt i32 %91, %56
  br i1 %92, label %93, label %58

93:                                               ; preds = %84
  store i8 %43, i8* %3, align 1
  store i8 2, i8* %4, align 1
  %94 = mul nsw i32 %44, 7
  %95 = add nsw i32 %94, %48
  %96 = load i32, i32* %0, align 4
  %97 = sub nsw i32 %96, %95
  %98 = icmp slt i32 %97, 0
  %99 = sub nsw i32 0, %97
  %100 = select i1 %98, i32 %99, i32 %97
  %101 = icmp slt i32 %100, %91
  br i1 %101, label %102, label %58

102:                                              ; preds = %93
  store i8 %43, i8* %3, align 1
  store i8 3, i8* %4, align 1
  %103 = mul nsw i32 %44, 9
  %104 = add nsw i32 %103, %48
  %105 = load i32, i32* %0, align 4
  %106 = sub nsw i32 %105, %104
  %107 = icmp slt i32 %106, 0
  %108 = sub nsw i32 0, %106
  %109 = select i1 %107, i32 %108, i32 %106
  %110 = icmp slt i32 %109, %100
  br i1 %110, label %111, label %58

111:                                              ; preds = %102
  store i8 %43, i8* %3, align 1
  store i8 4, i8* %4, align 1
  %112 = icmp eq i64 %47, 15
  br i1 %112, label %58, label %19

113:                                              ; preds = %179
  %114 = sext i16 %139 to i32
  %115 = add nuw nsw i64 %141, 1
  %116 = add nuw nsw i32 %140, 1
  %117 = getelementptr inbounds [16 x i16], [16 x i16]* @silk_stereo_pred_quant_Q13, i64 0, i64 %115
  %118 = load i16, i16* %117, align 2
  %119 = sext i16 %118 to i32
  %120 = sub nsw i32 %119, %114
  %121 = mul nsw i32 %120, 6554
  %122 = ashr i32 %121, 16
  %123 = trunc i32 %140 to i8
  %124 = add nsw i32 %122, %114
  %125 = load i32, i32* %68, align 4
  %126 = sub nsw i32 %125, %124
  %127 = icmp slt i32 %126, 0
  %128 = sub nsw i32 0, %126
  %129 = select i1 %127, i32 %128, i32 %126
  %130 = icmp slt i32 %129, %177
  br i1 %130, label %134, label %131

131:                                              ; preds = %113, %61
  %132 = phi i32 [ %63, %61 ], [ %172, %113 ]
  %133 = load i8, i8* %69, align 1
  br label %184

134:                                              ; preds = %61, %113
  %135 = phi i32 [ %129, %113 ], [ %82, %61 ]
  %136 = phi i32 [ %124, %113 ], [ %77, %61 ]
  %137 = phi i8 [ %123, %113 ], [ 0, %61 ]
  %138 = phi i32 [ %122, %113 ], [ %76, %61 ]
  %139 = phi i16 [ %118, %113 ], [ %72, %61 ]
  %140 = phi i32 [ %116, %113 ], [ 1, %61 ]
  %141 = phi i64 [ %115, %113 ], [ 1, %61 ]
  %142 = phi i32 [ %114, %113 ], [ %71, %61 ]
  %143 = phi i32 [ %140, %113 ], [ 0, %61 ]
  store i8 %137, i8* %69, align 1
  store i8 0, i8* %70, align 1
  %144 = mul nsw i32 %138, 3
  %145 = add nsw i32 %144, %142
  %146 = load i32, i32* %68, align 4
  %147 = sub nsw i32 %146, %145
  %148 = icmp slt i32 %147, 0
  %149 = sub nsw i32 0, %147
  %150 = select i1 %148, i32 %149, i32 %147
  %151 = icmp slt i32 %150, %135
  br i1 %151, label %152, label %181

152:                                              ; preds = %134
  store i8 %137, i8* %69, align 1
  store i8 1, i8* %70, align 1
  %153 = mul nsw i32 %138, 5
  %154 = add nsw i32 %153, %142
  %155 = load i32, i32* %68, align 4
  %156 = sub nsw i32 %155, %154
  %157 = icmp slt i32 %156, 0
  %158 = sub nsw i32 0, %156
  %159 = select i1 %157, i32 %158, i32 %156
  %160 = icmp slt i32 %159, %150
  br i1 %160, label %161, label %181

161:                                              ; preds = %152
  store i8 %137, i8* %69, align 1
  store i8 2, i8* %70, align 1
  %162 = mul nsw i32 %138, 7
  %163 = add nsw i32 %162, %142
  %164 = load i32, i32* %68, align 4
  %165 = sub nsw i32 %164, %163
  %166 = icmp slt i32 %165, 0
  %167 = sub nsw i32 0, %165
  %168 = select i1 %166, i32 %167, i32 %165
  %169 = icmp slt i32 %168, %159
  br i1 %169, label %170, label %181

170:                                              ; preds = %161
  store i8 %137, i8* %69, align 1
  store i8 3, i8* %70, align 1
  %171 = mul nsw i32 %138, 9
  %172 = add nsw i32 %171, %142
  %173 = load i32, i32* %68, align 4
  %174 = sub nsw i32 %173, %172
  %175 = icmp slt i32 %174, 0
  %176 = sub nsw i32 0, %174
  %177 = select i1 %175, i32 %176, i32 %174
  %178 = icmp slt i32 %177, %168
  br i1 %178, label %179, label %181

179:                                              ; preds = %170
  store i8 %137, i8* %69, align 1
  store i8 4, i8* %70, align 1
  %180 = icmp eq i64 %141, 15
  br i1 %180, label %181, label %113

181:                                              ; preds = %170, %161, %152, %134, %179
  %182 = phi i32 [ %172, %179 ], [ %163, %170 ], [ %154, %161 ], [ %145, %152 ], [ %136, %134 ]
  %183 = trunc i32 %143 to i8
  br label %184

184:                                              ; preds = %181, %131
  %185 = phi i8 [ %133, %131 ], [ %183, %181 ]
  %186 = phi i32 [ %132, %131 ], [ %182, %181 ]
  %187 = sdiv i8 %185, 3
  %188 = getelementptr inbounds [3 x i8], [3 x i8]* %1, i64 1, i64 2
  store i8 %187, i8* %188, align 1
  %189 = mul i8 %187, -3
  %190 = add i8 %189, %185
  store i8 %190, i8* %69, align 1
  store i32 %186, i32* %68, align 4
  %191 = load i32, i32* %0, align 4
  %192 = sub nsw i32 %191, %186
  store i32 %192, i32* %0, align 4
  ret void
}

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
