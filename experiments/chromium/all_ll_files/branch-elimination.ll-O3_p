; ModuleID = '../../v8/src/compiler/branch-elimination.cc'
source_filename = "../../v8/src/compiler/branch-elimination.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::compiler::BranchElimination" = type <{ %"class.v8::internal::compiler::AdvancedReducer", %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::NodeAuxData", %"class.v8::internal::compiler::NodeAuxData.673", %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Node"*, i32, [4 x i8] }>
%"class.v8::internal::compiler::AdvancedReducer" = type { %"class.v8::internal::compiler::Reducer", %"class.v8::internal::compiler::AdvancedReducer::Editor"* }
%"class.v8::internal::compiler::Reducer" = type { i32 (...)** }
%"class.v8::internal::compiler::NodeAuxData" = type { %"class.v8::internal::ZoneVector.666" }
%"class.v8::internal::ZoneVector.666" = type { %"class.std::__1::vector.667" }
%"class.std::__1::vector.667" = type { %"class.std::__1::__vector_base.668" }
%"class.std::__1::__vector_base.668" = type { %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"*, %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"*, %"class.std::__1::__compressed_pair.669" }
%"class.v8::internal::compiler::BranchElimination::ControlPathConditions" = type { %"class.v8::internal::compiler::FunctionalList" }
%"class.v8::internal::compiler::FunctionalList" = type { %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* }
%"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons" = type { %"class.v8::internal::compiler::FunctionalList.680", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"*, i64 }
%"class.v8::internal::compiler::FunctionalList.680" = type { %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* }
%"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons" = type { %"struct.v8::internal::compiler::BranchElimination::BranchCondition", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"*, i64 }
%"struct.v8::internal::compiler::BranchElimination::BranchCondition" = type { %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, i8 }
%"class.std::__1::__compressed_pair.669" = type { %"struct.std::__1::__compressed_pair_elem.670", %"struct.std::__1::__compressed_pair_elem.671" }
%"struct.std::__1::__compressed_pair_elem.670" = type { %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* }
%"struct.std::__1::__compressed_pair_elem.671" = type { %"class.v8::internal::ZoneAllocator.672" }
%"class.v8::internal::ZoneAllocator.672" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::NodeAuxData.673" = type { %"class.v8::internal::ZoneVector.674" }
%"class.v8::internal::ZoneVector.674" = type { %"class.std::__1::vector.675" }
%"class.std::__1::vector.675" = type { i64*, i64, %"class.std::__1::__compressed_pair.676" }
%"class.std::__1::__compressed_pair.676" = type { %"struct.std::__1::__compressed_pair_elem.17", %"struct.std::__1::__compressed_pair_elem.677" }
%"struct.std::__1::__compressed_pair_elem.17" = type { i64 }
%"struct.std::__1::__compressed_pair_elem.677" = type { %"class.v8::internal::ZoneAllocator.678" }
%"class.v8::internal::ZoneAllocator.678" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::Node" = type { %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Type", i32, i32, %"struct.v8::internal::compiler::Node::Use"* }
%"class.v8::internal::compiler::Operator" = type <{ i32 (...)**, i8*, i16, %"class.v8::base::Flags", i8, i32, i32, i32, i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.v8::base::Flags" = type { i8 }
%"class.v8::internal::compiler::Type" = type { i64 }
%"struct.v8::internal::compiler::Node::Use" = type { %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"*, i32 }
%"class.v8::internal::compiler::AdvancedReducer::Editor" = type { i32 (...)** }
%"class.v8::internal::compiler::JSGraph" = type { %"class.v8::internal::compiler::MachineGraph", %"class.v8::internal::Isolate"*, %"class.v8::internal::compiler::JSOperatorBuilder"*, %"class.v8::internal::compiler::SimplifiedOperatorBuilder"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"* }
%"class.v8::internal::compiler::MachineGraph" = type { %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::MachineOperatorBuilder"*, %"class.v8::internal::compiler::CommonNodeCache", %"class.v8::internal::compiler::Node"* }
%"class.v8::internal::compiler::Graph" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, i32, i32, %"class.v8::internal::ZoneVector" }
%"class.v8::internal::ZoneVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.v8::internal::compiler::GraphDecorator"**, %"class.v8::internal::compiler::GraphDecorator"**, %"class.std::__1::__compressed_pair.8" }
%"class.v8::internal::compiler::GraphDecorator" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.v8::internal::compiler::GraphDecorator"** }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.v8::internal::ZoneAllocator" }
%"class.v8::internal::ZoneAllocator" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::CommonOperatorBuilder" = type { %"struct.v8::internal::compiler::CommonOperatorGlobalCache"*, %"class.v8::internal::Zone"* }
%"struct.v8::internal::compiler::CommonOperatorGlobalCache" = type opaque
%"class.v8::internal::compiler::MachineOperatorBuilder" = type <{ %"class.v8::internal::Zone"*, %"struct.v8::internal::compiler::MachineOperatorGlobalCache"*, i8, [3 x i8], %"class.v8::base::Flags.11", %"class.v8::internal::compiler::MachineOperatorBuilder::AlignmentRequirements", [4 x i8] }>
%"struct.v8::internal::compiler::MachineOperatorGlobalCache" = type opaque
%"class.v8::base::Flags.11" = type { i32 }
%"class.v8::internal::compiler::MachineOperatorBuilder::AlignmentRequirements" = type { i32, %"class.v8::base::EnumSet", %"class.v8::base::EnumSet" }
%"class.v8::base::EnumSet" = type { i32 }
%"class.v8::internal::compiler::CommonNodeCache" = type { %"class.v8::internal::compiler::NodeCache", %"class.v8::internal::compiler::NodeCache.29", %"class.v8::internal::compiler::NodeCache", %"class.v8::internal::compiler::NodeCache", %"class.v8::internal::compiler::NodeCache.29", %"class.v8::internal::compiler::NodeCache.29", %"class.v8::internal::compiler::NodeCache.29", %"class.v8::internal::compiler::NodeCache.29", %"class.v8::internal::compiler::NodeCache.29", %"class.v8::internal::compiler::NodeCache.56", %"class.v8::internal::compiler::NodeCache.83" }
%"class.v8::internal::compiler::NodeCache" = type { %"class.v8::internal::ZoneUnorderedMap" }
%"class.v8::internal::ZoneUnorderedMap" = type { %"class.std::__1::unordered_map" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.12", %"class.std::__1::__compressed_pair.20", %"class.std::__1::__compressed_pair.24", %"class.std::__1::__compressed_pair.26", [4 x i8] }>
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14", %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17", %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.v8::internal::ZoneAllocator.19" }
%"class.v8::internal::ZoneAllocator.19" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21", %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.std::__1::__hash_node_base" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.v8::internal::ZoneAllocator.23" }
%"class.v8::internal::ZoneAllocator.23" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { float }
%"class.v8::internal::compiler::NodeCache.29" = type { %"class.v8::internal::ZoneUnorderedMap.30" }
%"class.v8::internal::ZoneUnorderedMap.30" = type { %"class.std::__1::unordered_map.31" }
%"class.std::__1::unordered_map.31" = type { %"class.std::__1::__hash_table.32" }
%"class.std::__1::__hash_table.32" = type <{ %"class.std::__1::unique_ptr.33", %"class.std::__1::__compressed_pair.42", %"class.std::__1::__compressed_pair.46", %"class.std::__1::__compressed_pair.50", [4 x i8] }>
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35", %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"struct.std::__1::__hash_node_base.36"** }
%"struct.std::__1::__hash_node_base.36" = type { %"struct.std::__1::__hash_node_base.36"* }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.std::__1::__bucket_list_deallocator.38" }
%"class.std::__1::__bucket_list_deallocator.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.17", %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.v8::internal::ZoneAllocator.41" }
%"class.v8::internal::ZoneAllocator.41" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43", %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"struct.std::__1::__hash_node_base.36" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.v8::internal::ZoneAllocator.45" }
%"class.v8::internal::ZoneAllocator.45" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.v8::internal::compiler::NodeCache.56" = type { %"class.v8::internal::ZoneUnorderedMap.57" }
%"class.v8::internal::ZoneUnorderedMap.57" = type { %"class.std::__1::unordered_map.58" }
%"class.std::__1::unordered_map.58" = type { %"class.std::__1::__hash_table.59" }
%"class.std::__1::__hash_table.59" = type <{ %"class.std::__1::unique_ptr.60", %"class.std::__1::__compressed_pair.69", %"class.std::__1::__compressed_pair.73", %"class.std::__1::__compressed_pair.77", [4 x i8] }>
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62", %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"struct.std::__1::__hash_node_base.63"** }
%"struct.std::__1::__hash_node_base.63" = type { %"struct.std::__1::__hash_node_base.63"* }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.std::__1::__bucket_list_deallocator.65" }
%"class.std::__1::__bucket_list_deallocator.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.17", %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.v8::internal::ZoneAllocator.68" }
%"class.v8::internal::ZoneAllocator.68" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70", %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"struct.std::__1::__hash_node_base.63" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.v8::internal::ZoneAllocator.72" }
%"class.v8::internal::ZoneAllocator.72" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.v8::internal::compiler::NodeCache.83" = type { %"class.v8::internal::ZoneUnorderedMap.84" }
%"class.v8::internal::ZoneUnorderedMap.84" = type { %"class.std::__1::unordered_map.85" }
%"class.std::__1::unordered_map.85" = type { %"class.std::__1::__hash_table.86" }
%"class.std::__1::__hash_table.86" = type <{ %"class.std::__1::unique_ptr.87", %"class.std::__1::__compressed_pair.96", %"class.std::__1::__compressed_pair.100", %"class.std::__1::__compressed_pair.104", [4 x i8] }>
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89", %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"struct.std::__1::__hash_node_base.90"** }
%"struct.std::__1::__hash_node_base.90" = type { %"struct.std::__1::__hash_node_base.90"* }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.std::__1::__bucket_list_deallocator.92" }
%"class.std::__1::__bucket_list_deallocator.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.17", %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.v8::internal::ZoneAllocator.95" }
%"class.v8::internal::ZoneAllocator.95" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97", %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"struct.std::__1::__hash_node_base.90" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.v8::internal::ZoneAllocator.99" }
%"class.v8::internal::ZoneAllocator.99" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr.115", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.441", %"class.std::__1::unique_ptr.442", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.448", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.463", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.470", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.480", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.490", %"struct.std::__1::atomic.167", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.524", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.541"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.542", i32, i8, i8, i32, i32, %"class.std::__1::vector.548", %"class.std::__1::vector.548", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.555", i64, %"class.std::__1::unordered_map.556", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.316", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.175", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.615", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.621", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.655", %"class.std::__1::vector.659", %"class.std::__1::vector.659", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic.110", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic.110" = type { %"struct.std::__1::__atomic_base.111" }
%"struct.std::__1::__atomic_base.111" = type { %"struct.std::__1::__cxx_atomic_impl.112" }
%"struct.std::__1::__cxx_atomic_impl.112" = type { %"struct.std::__1::__cxx_atomic_base_impl.113" }
%"struct.std::__1::__cxx_atomic_base_impl.113" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map.121", %"struct.std::__1::atomic", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic", i64, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic.150", %"class.std::__1::vector.154", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.161", %"class.std::__1::unique_ptr.161", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.176", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic", i64, i8, %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.180", %"class.std::__1::vector.180", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.193", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.199", %"class.std::__1::unique_ptr.205", %"class.std::__1::unique_ptr.211", %"class.std::__1::unique_ptr.217", %"class.std::__1::unique_ptr.223", %"class.std::__1::unique_ptr.229", %"class.std::__1::unique_ptr.235", %"class.std::__1::unique_ptr.241", %"class.std::__1::unique_ptr.247", %"class.std::__1::unique_ptr.247", %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.259", %"class.std::__1::unique_ptr.259", %"class.std::__1::unique_ptr.265", %"class.std::__1::unique_ptr.271", %"class.std::__1::shared_ptr.277", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.278", %"class.std::__1::unique_ptr.304", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.310", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.323", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set", i8, [7 x i8], %"class.std::__1::unordered_map.352", %"class.std::__1::unordered_map.378", %"class.std::__1::unordered_map.352", %"class.std::__1::unordered_map.402", %"class.std::__1::vector.428", i8, %"class.std::__1::unique_ptr.435", i32, i32 }
%"class.std::__1::unordered_map.121" = type { %"class.std::__1::__hash_table.122" }
%"class.std::__1::__hash_table.122" = type <{ %"class.std::__1::unique_ptr.123", %"class.std::__1::__compressed_pair.131", %"class.std::__1::__compressed_pair.136", %"class.std::__1::__compressed_pair.139", [4 x i8] }>
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125", %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"struct.std::__1::__hash_node_base.126"** }
%"struct.std::__1::__hash_node_base.126" = type { %"struct.std::__1::__hash_node_base.126"* }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.std::__1::__bucket_list_deallocator.128" }
%"class.std::__1::__bucket_list_deallocator.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"struct.std::__1::__hash_node_base.126" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.145", %"struct.std::__1::atomic.145", %"struct.std::__1::atomic.145" }
%"struct.std::__1::atomic.145" = type { %"struct.std::__1::__atomic_base.146" }
%"struct.std::__1::__atomic_base.146" = type { %"struct.std::__1::__atomic_base.147" }
%"struct.std::__1::__atomic_base.147" = type { %"struct.std::__1::__cxx_atomic_impl.148" }
%"struct.std::__1::__cxx_atomic_impl.148" = type { %"struct.std::__1::__cxx_atomic_base_impl.149" }
%"struct.std::__1::__cxx_atomic_base_impl.149" = type { i64 }
%"struct.std::__1::atomic.150" = type { %"struct.std::__1::__atomic_base.151" }
%"struct.std::__1::__atomic_base.151" = type { %"struct.std::__1::__cxx_atomic_impl.152" }
%"struct.std::__1::__cxx_atomic_impl.152" = type { %"struct.std::__1::__cxx_atomic_base_impl.153" }
%"struct.std::__1::__cxx_atomic_base_impl.153" = type { i32 }
%"class.std::__1::vector.154" = type { %"class.std::__1::__vector_base.155" }
%"class.std::__1::__vector_base.155" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.156" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type opaque
%"class.v8::internal::CodeSpace" = type opaque
%"class.v8::internal::OldLargeObjectSpace" = type opaque
%"class.v8::internal::CodeLargeObjectSpace" = type opaque
%"class.v8::internal::NewLargeObjectSpace" = type opaque
%"class.v8::internal::ReadOnlySpace" = type opaque
%"class.v8::internal::OldSpace" = type opaque
%"class.v8::internal::MapSpace" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ConcurrentAllocator" = type opaque
%"class.v8::internal::Space" = type opaque
%"class.v8::internal::LocalHeap" = type opaque
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.167", %"struct.std::__1::atomic.171", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.171" = type { %"struct.std::__1::__atomic_base.172" }
%"struct.std::__1::__atomic_base.172" = type { %"struct.std::__1::__cxx_atomic_impl.173" }
%"struct.std::__1::__cxx_atomic_impl.173" = type { %"struct.std::__1::__cxx_atomic_base_impl.174" }
%"struct.std::__1::__cxx_atomic_base_impl.174" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.175" }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.std::__1::atomic.176" = type { %"struct.std::__1::__atomic_base.177" }
%"struct.std::__1::__atomic_base.177" = type { %"struct.std::__1::__cxx_atomic_impl.178" }
%"struct.std::__1::__cxx_atomic_impl.178" = type { %"struct.std::__1::__cxx_atomic_base_impl.179" }
%"struct.std::__1::__cxx_atomic_base_impl.179" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::vector.180" = type { %"class.std::__1::__vector_base.181" }
%"class.std::__1::__vector_base.181" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.182" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type opaque
%"class.v8::internal::MinorMarkCompactCollector" = type opaque
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type opaque
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type opaque
%"class.std::__1::unique_ptr.223" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type opaque
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type opaque
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.247" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.253" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.259" = type { %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.265" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.271" = type { %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.277" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type opaque
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.278" = type { %"class.std::__1::__hash_table.279" }
%"class.std::__1::__hash_table.279" = type <{ %"class.std::__1::unique_ptr.280", %"class.std::__1::__compressed_pair.290", %"class.std::__1::__compressed_pair.295", %"class.std::__1::__compressed_pair.298", [4 x i8] }>
%"class.std::__1::unique_ptr.280" = type { %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282", %"struct.std::__1::__compressed_pair_elem.284" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"struct.std::__1::__hash_node_base.283"** }
%"struct.std::__1::__hash_node_base.283" = type { %"struct.std::__1::__hash_node_base.283"* }
%"struct.std::__1::__compressed_pair_elem.284" = type { %"class.std::__1::__bucket_list_deallocator.285" }
%"class.std::__1::__bucket_list_deallocator.285" = type { %"class.std::__1::__compressed_pair.286" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"struct.std::__1::__hash_node_base.283" }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::unique_ptr.304" = type { %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.310" = type { %"class.std::__1::__compressed_pair.311" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.316", %"class.std::__1::vector.316" }
%"class.std::__1::unique_ptr.323" = type { %"class.std::__1::__compressed_pair.324" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.325" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.329" }
%"class.std::__1::__hash_table.329" = type <{ %"class.std::__1::unique_ptr.330", %"class.std::__1::__compressed_pair.340", %"class.std::__1::__compressed_pair.345", %"class.std::__1::__compressed_pair.347", [4 x i8] }>
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332", %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"struct.std::__1::__hash_node_base.333"** }
%"struct.std::__1::__hash_node_base.333" = type { %"struct.std::__1::__hash_node_base.333"* }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.std::__1::__bucket_list_deallocator.335" }
%"class.std::__1::__bucket_list_deallocator.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"struct.std::__1::__hash_node_base.333" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::unordered_map.378" = type { %"class.std::__1::__hash_table.379" }
%"class.std::__1::__hash_table.379" = type <{ %"class.std::__1::unique_ptr.380", %"class.std::__1::__compressed_pair.390", %"class.std::__1::__compressed_pair.395", %"class.std::__1::__compressed_pair.398", [4 x i8] }>
%"class.std::__1::unique_ptr.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.382", %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.382" = type { %"struct.std::__1::__hash_node_base.383"** }
%"struct.std::__1::__hash_node_base.383" = type { %"struct.std::__1::__hash_node_base.383"* }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"class.std::__1::__bucket_list_deallocator.385" }
%"class.std::__1::__bucket_list_deallocator.385" = type { %"class.std::__1::__compressed_pair.386" }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.391" }
%"struct.std::__1::__compressed_pair_elem.391" = type { %"struct.std::__1::__hash_node_base.383" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.398" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::unordered_map.352" = type { %"class.std::__1::__hash_table.353" }
%"class.std::__1::__hash_table.353" = type <{ %"class.std::__1::unique_ptr.354", %"class.std::__1::__compressed_pair.364", %"class.std::__1::__compressed_pair.369", %"class.std::__1::__compressed_pair.372", [4 x i8] }>
%"class.std::__1::unique_ptr.354" = type { %"class.std::__1::__compressed_pair.355" }
%"class.std::__1::__compressed_pair.355" = type { %"struct.std::__1::__compressed_pair_elem.356", %"struct.std::__1::__compressed_pair_elem.358" }
%"struct.std::__1::__compressed_pair_elem.356" = type { %"struct.std::__1::__hash_node_base.357"** }
%"struct.std::__1::__hash_node_base.357" = type { %"struct.std::__1::__hash_node_base.357"* }
%"struct.std::__1::__compressed_pair_elem.358" = type { %"class.std::__1::__bucket_list_deallocator.359" }
%"class.std::__1::__bucket_list_deallocator.359" = type { %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.364" = type { %"struct.std::__1::__compressed_pair_elem.365" }
%"struct.std::__1::__compressed_pair_elem.365" = type { %"struct.std::__1::__hash_node_base.357" }
%"class.std::__1::__compressed_pair.369" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::unordered_map.402" = type { %"class.std::__1::__hash_table.403" }
%"class.std::__1::__hash_table.403" = type <{ %"class.std::__1::unique_ptr.404", %"class.std::__1::__compressed_pair.414", %"class.std::__1::__compressed_pair.419", %"class.std::__1::__compressed_pair.424", [4 x i8] }>
%"class.std::__1::unique_ptr.404" = type { %"class.std::__1::__compressed_pair.405" }
%"class.std::__1::__compressed_pair.405" = type { %"struct.std::__1::__compressed_pair_elem.406", %"struct.std::__1::__compressed_pair_elem.408" }
%"struct.std::__1::__compressed_pair_elem.406" = type { %"struct.std::__1::__hash_node_base.407"** }
%"struct.std::__1::__hash_node_base.407" = type { %"struct.std::__1::__hash_node_base.407"* }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"class.std::__1::__bucket_list_deallocator.409" }
%"class.std::__1::__bucket_list_deallocator.409" = type { %"class.std::__1::__compressed_pair.410" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.415" }
%"struct.std::__1::__compressed_pair_elem.415" = type { %"struct.std::__1::__hash_node_base.407" }
%"class.std::__1::__compressed_pair.419" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.424" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::vector.428" = type { %"class.std::__1::__vector_base.429" }
%"class.std::__1::__vector_base.429" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.430" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.430" = type { %"struct.std::__1::__compressed_pair_elem.431" }
%"struct.std::__1::__compressed_pair_elem.431" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.435" = type { %"class.std::__1::__compressed_pair.436" }
%"class.std::__1::__compressed_pair.436" = type { %"struct.std::__1::__compressed_pair_elem.437" }
%"struct.std::__1::__compressed_pair_elem.437" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type opaque
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.316" }
%"class.std::__1::shared_ptr.441" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type opaque
%"class.std::__1::unique_ptr.442" = type { %"class.std::__1::__compressed_pair.443" }
%"class.std::__1::__compressed_pair.443" = type { %"struct.std::__1::__compressed_pair_elem.444" }
%"struct.std::__1::__compressed_pair_elem.444" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type opaque
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.448" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type opaque
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::internal::Logger" = type opaque
%"class.v8::internal::StubCache" = type opaque
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type opaque
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.449", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.449" = type { %"class.std::__1::__compressed_pair.450" }
%"class.std::__1::__compressed_pair.450" = type { %"struct.std::__1::__compressed_pair_elem.451" }
%"struct.std::__1::__compressed_pair_elem.451" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.455", %"class.v8::internal::DetachableVector.456", %"class.v8::internal::DetachableVector.455", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.456" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.455" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.2" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type opaque
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type opaque
%"class.v8::internal::EternalHandles" = type opaque
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.457" }
%"class.std::__1::unique_ptr.457" = type { %"class.std::__1::__compressed_pair.458" }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.459" }
%"struct.std::__1::__compressed_pair_elem.459" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.463" = type { %"class.std::__1::__vector_base.464" }
%"class.std::__1::__vector_base.464" = type { i32*, i32*, %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"class.v8::base::RandomNumberGenerator" = type opaque
%"struct.std::__1::atomic.470" = type { %"struct.std::__1::__atomic_base.471" }
%"struct.std::__1::__atomic_base.471" = type { %"struct.std::__1::__cxx_atomic_impl.472" }
%"struct.std::__1::__cxx_atomic_impl.472" = type { %"struct.std::__1::__cxx_atomic_base_impl.473" }
%"struct.std::__1::__cxx_atomic_base_impl.473" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.480" = type { %"struct.std::__1::__atomic_base.481" }
%"struct.std::__1::__atomic_base.481" = type { %"struct.std::__1::__cxx_atomic_impl.482" }
%"struct.std::__1::__cxx_atomic_impl.482" = type { %"struct.std::__1::__cxx_atomic_base_impl.483" }
%"struct.std::__1::__cxx_atomic_base_impl.483" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.485" }
%"class.std::__1::__compressed_pair.485" = type { %"struct.std::__1::__compressed_pair_elem.486" }
%"struct.std::__1::__compressed_pair_elem.486" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.490" = type { %"class.std::__1::__hash_table.491" }
%"class.std::__1::__hash_table.491" = type <{ %"class.std::__1::unique_ptr.492", %"class.std::__1::__compressed_pair.502", %"class.std::__1::__compressed_pair.507", %"class.std::__1::__compressed_pair.510", [4 x i8] }>
%"class.std::__1::unique_ptr.492" = type { %"class.std::__1::__compressed_pair.493" }
%"class.std::__1::__compressed_pair.493" = type { %"struct.std::__1::__compressed_pair_elem.494", %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.494" = type { %"struct.std::__1::__hash_node_base.495"** }
%"struct.std::__1::__hash_node_base.495" = type { %"struct.std::__1::__hash_node_base.495"* }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"class.std::__1::__bucket_list_deallocator.497" }
%"class.std::__1::__bucket_list_deallocator.497" = type { %"class.std::__1::__compressed_pair.498" }
%"class.std::__1::__compressed_pair.498" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.502" = type { %"struct.std::__1::__compressed_pair_elem.503" }
%"struct.std::__1::__compressed_pair_elem.503" = type { %"struct.std::__1::__hash_node_base.495" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::atomic.167" = type { %"struct.std::__1::__atomic_base.168" }
%"struct.std::__1::__atomic_base.168" = type { %"struct.std::__1::__cxx_atomic_impl.169" }
%"struct.std::__1::__cxx_atomic_impl.169" = type { %"struct.std::__1::__cxx_atomic_base_impl.170" }
%"struct.std::__1::__cxx_atomic_base_impl.170" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.516", %"class.v8::internal::Handle.522", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.523", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.516" = type { %"class.std::__1::__compressed_pair.517" }
%"class.std::__1::__compressed_pair.517" = type { %"struct.std::__1::__compressed_pair_elem.518" }
%"struct.std::__1::__compressed_pair_elem.518" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.522" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.523" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type opaque
%"class.std::__1::unique_ptr.524" = type { %"class.std::__1::__compressed_pair.525" }
%"class.std::__1::__compressed_pair.525" = type { %"struct.std::__1::__compressed_pair_elem.526" }
%"struct.std::__1::__compressed_pair_elem.526" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type opaque
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.536" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.530"**, %"struct.std::__1::pair.530"**, %"struct.std::__1::pair.530"**, %"class.std::__1::__compressed_pair.531" }
%"struct.std::__1::pair.530" = type opaque
%"class.std::__1::__compressed_pair.531" = type { %"struct.std::__1::__compressed_pair_elem.532" }
%"struct.std::__1::__compressed_pair_elem.532" = type { %"struct.std::__1::pair.530"** }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.541" = type opaque
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.475", i32, %"class.v8::Local.114" }
%"class.v8::Local.475" = type { %"class.v8::Promise"* }
%"class.v8::Local.114" = type { %"class.v8::Value"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.542" = type { %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type opaque
%"class.std::__1::vector.548" = type { %"class.std::__1::__vector_base.549" }
%"class.std::__1::__vector_base.549" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.550" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.551" }
%"struct.std::__1::__compressed_pair_elem.551" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.555" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.556" = type { %"class.std::__1::__hash_table.557" }
%"class.std::__1::__hash_table.557" = type <{ %"class.std::__1::unique_ptr.558", %"class.std::__1::__compressed_pair.568", %"class.std::__1::__compressed_pair.573", %"class.std::__1::__compressed_pair.578", [4 x i8] }>
%"class.std::__1::unique_ptr.558" = type { %"class.std::__1::__compressed_pair.559" }
%"class.std::__1::__compressed_pair.559" = type { %"struct.std::__1::__compressed_pair_elem.560", %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"struct.std::__1::__hash_node_base.561"** }
%"struct.std::__1::__hash_node_base.561" = type { %"struct.std::__1::__hash_node_base.561"* }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.std::__1::__bucket_list_deallocator.563" }
%"class.std::__1::__bucket_list_deallocator.563" = type { %"class.std::__1::__compressed_pair.564" }
%"class.std::__1::__compressed_pair.564" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.568" = type { %"struct.std::__1::__compressed_pair_elem.569" }
%"struct.std::__1::__compressed_pair_elem.569" = type { %"struct.std::__1::__hash_node_base.561" }
%"class.std::__1::__compressed_pair.573" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.316" = type { %"class.std::__1::__vector_base.317" }
%"class.std::__1::__vector_base.317" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.318" }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.319" }
%"struct.std::__1::__compressed_pair_elem.319" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.175" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.584", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.613", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.584" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.609, %union.anon.611, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.609 = type { i64 }
%union.anon.611 = type { i64 }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.613" = type { %"class.v8::PersistentBase.614" }
%"class.v8::PersistentBase.614" = type { %"class.v8::Context"* }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.585", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.585" = type { %"class.std::__1::__hash_table.586" }
%"class.std::__1::__hash_table.586" = type <{ %"class.std::__1::unique_ptr.587", %"class.std::__1::__compressed_pair.597", %"class.std::__1::__compressed_pair.602", %"class.std::__1::__compressed_pair.605", [4 x i8] }>
%"class.std::__1::unique_ptr.587" = type { %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.589", %"struct.std::__1::__compressed_pair_elem.591" }
%"struct.std::__1::__compressed_pair_elem.589" = type { %"struct.std::__1::__hash_node_base.590"** }
%"struct.std::__1::__hash_node_base.590" = type { %"struct.std::__1::__hash_node_base.590"* }
%"struct.std::__1::__compressed_pair_elem.591" = type { %"class.std::__1::__bucket_list_deallocator.592" }
%"class.std::__1::__bucket_list_deallocator.592" = type { %"class.std::__1::__compressed_pair.593" }
%"class.std::__1::__compressed_pair.593" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.598" }
%"struct.std::__1::__compressed_pair_elem.598" = type { %"struct.std::__1::__hash_node_base.590" }
%"class.std::__1::__compressed_pair.602" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.605" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.615" = type { %"class.std::__1::__compressed_pair.616" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type opaque
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.621" = type { %"class.std::__1::__compressed_pair.622" }
%"class.std::__1::__compressed_pair.622" = type { %"struct.std::__1::__compressed_pair_elem.623" }
%"struct.std::__1::__compressed_pair_elem.623" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.476", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.476" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.629" }
%"class.std::__1::unordered_map.629" = type { %"class.std::__1::__hash_table.630" }
%"class.std::__1::__hash_table.630" = type <{ %"class.std::__1::unique_ptr.631", %"class.std::__1::__compressed_pair.641", %"class.std::__1::__compressed_pair.646", %"class.std::__1::__compressed_pair.649", [4 x i8] }>
%"class.std::__1::unique_ptr.631" = type { %"class.std::__1::__compressed_pair.632" }
%"class.std::__1::__compressed_pair.632" = type { %"struct.std::__1::__compressed_pair_elem.633", %"struct.std::__1::__compressed_pair_elem.635" }
%"struct.std::__1::__compressed_pair_elem.633" = type { %"struct.std::__1::__hash_node_base.634"** }
%"struct.std::__1::__hash_node_base.634" = type { %"struct.std::__1::__hash_node_base.634"* }
%"struct.std::__1::__compressed_pair_elem.635" = type { %"class.std::__1::__bucket_list_deallocator.636" }
%"class.std::__1::__bucket_list_deallocator.636" = type { %"class.std::__1::__compressed_pair.637" }
%"class.std::__1::__compressed_pair.637" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.641" = type { %"struct.std::__1::__compressed_pair_elem.642" }
%"struct.std::__1::__compressed_pair_elem.642" = type { %"struct.std::__1::__hash_node_base.634" }
%"class.std::__1::__compressed_pair.646" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.649" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"struct.std::__1::atomic.655" = type { %"struct.std::__1::__atomic_base.656" }
%"struct.std::__1::__atomic_base.656" = type { %"struct.std::__1::__cxx_atomic_impl.657" }
%"struct.std::__1::__cxx_atomic_impl.657" = type { %"struct.std::__1::__cxx_atomic_base_impl.658" }
%"struct.std::__1::__cxx_atomic_base_impl.658" = type { %"class.std::__1::vector.659"* }
%"class.std::__1::vector.659" = type { %"class.std::__1::__vector_base.660" }
%"class.std::__1::__vector_base.660" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.661" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"struct.v8::MemoryRange"* }
%"class.v8::internal::compiler::JSOperatorBuilder" = type { %"struct.v8::internal::compiler::JSOperatorGlobalCache"*, %"class.v8::internal::Zone"* }
%"struct.v8::internal::compiler::JSOperatorGlobalCache" = type opaque
%"class.v8::internal::compiler::SimplifiedOperatorBuilder" = type { %"struct.v8::internal::compiler::SimplifiedOperatorGlobalCache"*, %"class.v8::internal::Zone"* }
%"struct.v8::internal::compiler::SimplifiedOperatorGlobalCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::ZoneAllocator.682" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::array.684" = type { [3 x %"class.v8::internal::compiler::Node"*] }
%"class.v8::internal::compiler::DeoptimizeParameters" = type { i8, i8, [6 x i8], %"struct.v8::internal::compiler::FeedbackSource", i8, [7 x i8] }
%"struct.v8::internal::compiler::FeedbackSource" = type <{ %"class.v8::internal::Handle.679", %"class.v8::internal::FeedbackSlot", [4 x i8] }>
%"class.v8::internal::Handle.679" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::FeedbackSlot" = type { i32 }
%"struct.v8::internal::compiler::Node::OutOfLineInputs" = type { %"class.v8::internal::compiler::Node"*, i32, i32 }
%"struct.std::__1::array.683" = type { [2 x %"class.v8::internal::compiler::Node"*] }
%"class.v8::base::SmallVector" = type { %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"**, %"struct.std::__1::aligned_storage<16, 8>::type" }
%"struct.std::__1::aligned_storage<16, 8>::type" = type { [16 x i8] }
%"class.std::__1::__bit_iterator" = type <{ i64*, i32, [4 x i8] }>

$_ZN2v88internal8compiler14FunctionalListINS2_INS1_17BranchElimination15BranchConditionEEEE21ResetToCommonAncestorES6_ = comdat any

$_ZN2v88internal8compiler11NodeAuxDataINS1_17BranchElimination21ControlPathConditionsEXadL_ZNS1_16DefaultConstructIS4_EET_vEEE3SetEPNS1_4NodeERKS4_ = comdat any

$_ZN2v88internal8compiler14FunctionalListINS1_17BranchElimination15BranchConditionEE9PushFrontES4_PNS0_4ZoneES5_ = comdat any

$_ZNK2v88internal8compiler17BranchElimination12reducer_nameEv = comdat any

$_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEEC2EmRKbRKS4_ = comdat any

$_ZN2v84base11SmallVectorIPNS_8internal8compiler4NodeELm2EE4GrowEv = comdat any

$_ZN2v84base11SmallVectorIPNS_8internal8compiler4NodeELm2EE4GrowEm = comdat any

$_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE6resizeEmb = comdat any

$_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE7reserveEm = comdat any

$_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS5_Lb0ELm0EEEEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeESA_SA_ = comdat any

$_ZNSt3__116__copy_unalignedINS_6vectorIbN2v88internal13ZoneAllocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS7_IS8_XT0_EXLi0EEEESA_S9_ = comdat any

$_ZNSt3__16vectorIN2v88internal8compiler17BranchElimination21ControlPathConditionsENS2_13ZoneAllocatorIS5_EEE8__appendEmRKS5_ = comdat any

@_ZTVN2v88internal8compiler17BranchEliminationE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::compiler::BranchElimination"*)* @_ZN2v88internal8compiler17BranchEliminationD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::compiler::BranchElimination"*)* @_ZN2v88internal8compiler17BranchEliminationD0Ev to i8*), i8* bitcast (i8* (%"class.v8::internal::compiler::BranchElimination"*)* @_ZNK2v88internal8compiler17BranchElimination12reducer_nameEv to i8*), i8* bitcast (void (%"class.v8::internal::compiler::Reducer"*)* @_ZN2v88internal8compiler7Reducer8FinalizeEv to i8*), i8* bitcast (%"class.v8::internal::compiler::Node"* (%"class.v8::internal::compiler::BranchElimination"*, %"class.v8::internal::compiler::Node"*)* @_ZN2v88internal8compiler17BranchElimination6ReduceEPNS1_4NodeE to i8*)] }, align 8
@.str = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@.str.1 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.3 = private unnamed_addr constant [40 x i8] c"index < node->op()->ControlInputCount()\00", align 1
@.str.4 = private unnamed_addr constant [39 x i8] c"index < node->op()->EffectInputCount()\00", align 1
@.str.5 = private unnamed_addr constant [38 x i8] c"index < node->op()->ValueInputCount()\00", align 1
@.str.6 = private unnamed_addr constant [18 x i8] c"BranchElimination\00", align 1
@.str.7 = private unnamed_addr constant [53 x i8] c"Fatal process out of memory: base::SmallVector::Grow\00", align 1
@.str.8 = private unnamed_addr constant [11 x i8] c"Size() > 0\00", align 1

@_ZN2v88internal8compiler17BranchEliminationC1EPNS1_15AdvancedReducer6EditorEPNS1_7JSGraphEPNS0_4ZoneENS2_5PhaseE = hidden unnamed_addr alias void (%"class.v8::internal::compiler::BranchElimination"*, %"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::Zone"*, i32), void (%"class.v8::internal::compiler::BranchElimination"*, %"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::Zone"*, i32)* @_ZN2v88internal8compiler17BranchEliminationC2EPNS1_15AdvancedReducer6EditorEPNS1_7JSGraphEPNS0_4ZoneENS2_5PhaseE
@_ZN2v88internal8compiler17BranchEliminationD1Ev = hidden unnamed_addr alias void (%"class.v8::internal::compiler::BranchElimination"*), void (%"class.v8::internal::compiler::BranchElimination"*)* @_ZN2v88internal8compiler17BranchEliminationD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler17BranchEliminationC2EPNS1_15AdvancedReducer6EditorEPNS1_7JSGraphEPNS0_4ZoneENS2_5PhaseE(%"class.v8::internal::compiler::BranchElimination"*, %"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::Zone"*, i32) unnamed_addr #0 align 2 {
  %6 = alloca i8, align 1
  %7 = alloca %"class.v8::internal::ZoneAllocator.682", align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 0, i32 1
  store %"class.v8::internal::compiler::AdvancedReducer::Editor"* %1, %"class.v8::internal::compiler::AdvancedReducer::Editor"** %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2v88internal8compiler17BranchEliminationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 1
  store %"class.v8::internal::compiler::JSGraph"* %2, %"class.v8::internal::compiler::JSGraph"** %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 2
  %12 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %2, i64 0, i32 0, i32 0
  %13 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %13, i64 0, i32 4
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = ptrtoint %"class.v8::internal::Zone"* %3 to i64
  %18 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2, i32 1
  %19 = bitcast %"struct.std::__1::__compressed_pair_elem.671"* %18 to i64*
  %20 = bitcast %"class.v8::internal::compiler::NodeAuxData"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #11
  store i64 %17, i64* %19, align 8
  %21 = icmp eq i32 %15, 0
  br i1 %21, label %48, label %22

22:                                               ; preds = %5
  %23 = icmp ugt i32 %15, 268435455
  br i1 %23, label %24, label %26

24:                                               ; preds = %22
  %25 = bitcast %"class.v8::internal::compiler::NodeAuxData"* %11 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %25) #12
  unreachable

26:                                               ; preds = %22
  %27 = shl nuw nsw i64 %16, 3
  %28 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %3, i64 0, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %3, i64 0, i32 3
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %31, %29
  %33 = icmp ugt i64 %27, %32
  br i1 %33, label %34, label %36, !prof !2

34:                                               ; preds = %26
  %35 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %3, i64 %27) #11
  br label %38

36:                                               ; preds = %26
  %37 = add i64 %29, %27
  store i64 %37, i64* %28, align 8
  br label %38

38:                                               ; preds = %36, %34
  %39 = phi i64 [ %35, %34 ], [ %29, %36 ]
  %40 = inttoptr i64 %39 to %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"*
  %41 = inttoptr i64 %39 to i8*
  %42 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %43 = getelementptr inbounds %"class.v8::internal::compiler::NodeAuxData", %"class.v8::internal::compiler::NodeAuxData"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %40, %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"** %43, align 8
  %44 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %40, i64 %16
  %45 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %44, %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"** %45, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 %27, i1 false) #11
  %46 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"** %42 to i64*
  %47 = ptrtoint %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %44 to i64
  store i64 %47, i64* %46, align 8
  br label %48

48:                                               ; preds = %5, %38
  %49 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %12, align 8
  %50 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %49, i64 0, i32 4
  %51 = load i32, i32* %50, align 4
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 3, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #11
  store i8 0, i8* %6, align 1
  %54 = bitcast %"class.v8::internal::ZoneAllocator.682"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #11
  %55 = getelementptr inbounds %"class.v8::internal::ZoneAllocator.682", %"class.v8::internal::ZoneAllocator.682"* %7, i64 0, i32 0
  store %"class.v8::internal::Zone"* %3, %"class.v8::internal::Zone"** %55, align 8
  call void @_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEEC2EmRKbRKS4_(%"class.std::__1::vector.675"* %53, i64 %52, i8* nonnull dereferenceable(1) %6, %"class.v8::internal::ZoneAllocator.682"* nonnull dereferenceable(8) %7) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #11
  %56 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 4
  store %"class.v8::internal::Zone"* %3, %"class.v8::internal::Zone"** %56, align 8
  %57 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 5
  %58 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %2, i64 0, i32 0, i32 4
  %59 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %58, align 8
  %60 = icmp eq %"class.v8::internal::compiler::Node"* %59, null
  br i1 %60, label %61, label %67

61:                                               ; preds = %48
  %62 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %12, align 8
  %63 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %2, i64 0, i32 0, i32 1
  %64 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %63, align 8
  %65 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder4DeadEv(%"class.v8::internal::compiler::CommonOperatorBuilder"* %64) #11
  %66 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %62, %"class.v8::internal::compiler::Operator"* %65, i32 0, %"class.v8::internal::compiler::Node"** null, i1 zeroext false) #11
  store %"class.v8::internal::compiler::Node"* %66, %"class.v8::internal::compiler::Node"** %58, align 8
  br label %67

67:                                               ; preds = %48, %61
  %68 = phi %"class.v8::internal::compiler::Node"* [ %66, %61 ], [ %59, %48 ]
  store %"class.v8::internal::compiler::Node"* %68, %"class.v8::internal::compiler::Node"** %57, align 8
  %69 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 6
  store i32 %4, i32* %69, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler17BranchEliminationD2Ev(%"class.v8::internal::compiler::BranchElimination"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2v88internal8compiler17BranchEliminationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"*, %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"** %3, align 8
  %5 = icmp eq %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %4 to i64
  %8 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"** %8 to i64*
  store i64 %7, i64* %9, align 8
  br label %10

10:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler17BranchEliminationD0Ev(%"class.v8::internal::compiler::BranchElimination"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2v88internal8compiler17BranchEliminationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = bitcast %"class.v8::internal::compiler::BranchElimination"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler17BranchElimination6ReduceEPNS1_4NodeE(%"class.v8::internal::compiler::BranchElimination"*, %"class.v8::internal::compiler::Node"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %5 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %5, i64 0, i32 2
  %7 = load i16, i16* %6, align 8
  switch i16 %7, label %54 [
    i16 62, label %60
    i16 12, label %8
    i16 13, label %8
    i16 10, label %10
    i16 1, label %12
    i16 2, label %14
    i16 5, label %16
    i16 4, label %18
    i16 15, label %20
    i16 16, label %20
    i16 0, label %22
  ]

8:                                                ; preds = %2, %2
  %9 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler17BranchElimination27ReduceDeoptimizeConditionalEPNS1_4NodeE(%"class.v8::internal::compiler::BranchElimination"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %60

10:                                               ; preds = %2
  %11 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler17BranchElimination11ReduceMergeEPNS1_4NodeE(%"class.v8::internal::compiler::BranchElimination"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %60

12:                                               ; preds = %2
  %13 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler17BranchElimination30TakeConditionsFromFirstControlEPNS1_4NodeE(%"class.v8::internal::compiler::BranchElimination"* %0, %"class.v8::internal::compiler::Node"* %1) #11
  br label %60

14:                                               ; preds = %2
  %15 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler17BranchElimination12ReduceBranchEPNS1_4NodeE(%"class.v8::internal::compiler::BranchElimination"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %60

16:                                               ; preds = %2
  %17 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler17BranchElimination8ReduceIfEPNS1_4NodeEb(%"class.v8::internal::compiler::BranchElimination"* %0, %"class.v8::internal::compiler::Node"* %1, i1 zeroext false)
  br label %60

18:                                               ; preds = %2
  %19 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler17BranchElimination8ReduceIfEPNS1_4NodeEb(%"class.v8::internal::compiler::BranchElimination"* %0, %"class.v8::internal::compiler::Node"* %1, i1 zeroext true)
  br label %60

20:                                               ; preds = %2, %2
  %21 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler17BranchElimination21ReduceTrapConditionalEPNS1_4NodeE(%"class.v8::internal::compiler::BranchElimination"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %60

22:                                               ; preds = %2
  %23 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #11
  %24 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %3, i64 0, i32 0, i32 0
  store %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* null, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"** %24, align 8
  %25 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 3
  %26 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %27 = load i32, i32* %26, align 4
  %28 = and i32 %27, 16777215
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = icmp ugt i64 %31, %29
  br i1 %32, label %36, label %33

33:                                               ; preds = %22
  %34 = getelementptr inbounds %"class.v8::internal::compiler::NodeAuxData.673", %"class.v8::internal::compiler::NodeAuxData.673"* %25, i64 0, i32 0, i32 0
  %35 = add nuw nsw i64 %29, 1
  tail call void @_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE6resizeEmb(%"class.std::__1::vector.675"* %34, i64 %35, i1 zeroext false) #11
  br label %36

36:                                               ; preds = %33, %22
  %37 = getelementptr inbounds %"class.v8::internal::compiler::NodeAuxData.673", %"class.v8::internal::compiler::NodeAuxData.673"* %25, i64 0, i32 0, i32 0, i32 0
  %38 = load i64*, i64** %37, align 8
  %39 = lshr i64 %29, 6
  %40 = getelementptr inbounds i64, i64* %38, i64 %39
  %41 = and i64 %29, 63
  %42 = shl i64 1, %41
  %43 = load i64, i64* %40, align 8
  %44 = and i64 %43, %42
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %46, label %50

46:                                               ; preds = %36
  %47 = or i64 %43, %42
  store i64 %47, i64* %40, align 8
  %48 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 2
  %49 = call zeroext i1 @_ZN2v88internal8compiler11NodeAuxDataINS1_17BranchElimination21ControlPathConditionsEXadL_ZNS1_16DefaultConstructIS4_EET_vEEE3SetEPNS1_4NodeERKS4_(%"class.v8::internal::compiler::NodeAuxData"* %48, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* nonnull dereferenceable(8) %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #11
  br label %60

50:                                               ; preds = %36
  %51 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 2
  %52 = call zeroext i1 @_ZN2v88internal8compiler11NodeAuxDataINS1_17BranchElimination21ControlPathConditionsEXadL_ZNS1_16DefaultConstructIS4_EET_vEEE3SetEPNS1_4NodeERKS4_(%"class.v8::internal::compiler::NodeAuxData"* %51, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* nonnull dereferenceable(8) %3) #11
  %53 = select i1 %52, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* null
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #11
  br label %60

54:                                               ; preds = %2
  %55 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %5, i64 0, i32 11
  %56 = load i32, i32* %55, align 8
  %57 = icmp sgt i32 %56, 0
  br i1 %57, label %58, label %60

58:                                               ; preds = %54
  %59 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler17BranchElimination30TakeConditionsFromFirstControlEPNS1_4NodeE(%"class.v8::internal::compiler::BranchElimination"* %0, %"class.v8::internal::compiler::Node"* %1) #11
  br label %60

60:                                               ; preds = %54, %50, %46, %2, %58, %20, %18, %16, %14, %12, %10, %8
  %61 = phi %"class.v8::internal::compiler::Node"* [ %59, %58 ], [ %21, %20 ], [ %19, %18 ], [ %17, %16 ], [ %15, %14 ], [ %13, %12 ], [ %11, %10 ], [ %9, %8 ], [ null, %2 ], [ %1, %46 ], [ %53, %50 ], [ null, %54 ]
  ret %"class.v8::internal::compiler::Node"* %61
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler17BranchElimination27ReduceDeoptimizeConditionalEPNS1_4NodeE(%"class.v8::internal::compiler::BranchElimination"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.std::__1::array.684", align 8
  %4 = alloca %"class.v8::internal::compiler::DeoptimizeParameters", align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %6 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %6, i64 0, i32 2
  %8 = load i16, i16* %7, align 8
  %9 = icmp eq i16 %8, 13
  %10 = getelementptr inbounds %"class.v8::internal::compiler::DeoptimizeParameters", %"class.v8::internal::compiler::DeoptimizeParameters"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #11
  %11 = tail call dereferenceable(32) %"class.v8::internal::compiler::DeoptimizeParameters"* @_ZN2v88internal8compiler22DeoptimizeParametersOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %6) #11
  %12 = getelementptr inbounds %"class.v8::internal::compiler::DeoptimizeParameters", %"class.v8::internal::compiler::DeoptimizeParameters"* %11, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 8 %12, i64 32, i1 false)
  %13 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %5, align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %13, i64 0, i32 5
  %15 = load i32, i32* %14, align 4
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %18, label %17, !prof !3

17:                                               ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0)) #12
  unreachable

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %20 = load i32, i32* %19, align 4
  %21 = and i32 %20, 251658240
  %22 = icmp eq i32 %21, 251658240
  %23 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %24 = add i64 %23, 32
  br i1 %22, label %25, label %29

25:                                               ; preds = %18
  %26 = inttoptr i64 %24 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, 16
  br label %29

29:                                               ; preds = %18, %25
  %30 = phi i64 [ %28, %25 ], [ %24, %18 ]
  %31 = inttoptr i64 %30 to %"class.v8::internal::compiler::Node"**
  %32 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %31, align 8
  %33 = icmp sgt i32 %15, 1
  br i1 %33, label %35, label %34, !prof !3

34:                                               ; preds = %29
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0)) #12
  unreachable

35:                                               ; preds = %29
  br i1 %22, label %36, label %40

36:                                               ; preds = %35
  %37 = inttoptr i64 %24 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = add i64 %38, 16
  br label %40

40:                                               ; preds = %35, %36
  %41 = phi i64 [ %39, %36 ], [ %24, %35 ]
  %42 = inttoptr i64 %41 to %"class.v8::internal::compiler::Node"**
  %43 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %42, i64 1
  %44 = bitcast %"class.v8::internal::compiler::Node"** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %13, i64 0, i32 6
  %47 = load i32, i32* %46, align 8
  %48 = icmp sgt i32 %47, 0
  br i1 %48, label %50, label %49, !prof !3

49:                                               ; preds = %40
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.4, i64 0, i64 0)) #12
  unreachable

50:                                               ; preds = %40
  %51 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %13) #11
  %52 = zext i1 %51 to i32
  %53 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %5, align 8
  %54 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %53) #11
  %55 = zext i1 %54 to i32
  %56 = add nuw i32 %15, %52
  %57 = add nuw i32 %56, %55
  %58 = load i32, i32* %19, align 4
  %59 = and i32 %58, 251658240
  %60 = icmp eq i32 %59, 251658240
  br i1 %60, label %61, label %65

61:                                               ; preds = %50
  %62 = inttoptr i64 %24 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = add i64 %63, 16
  br label %65

65:                                               ; preds = %50, %61
  %66 = phi i64 [ %64, %61 ], [ %24, %50 ]
  %67 = inttoptr i64 %66 to %"class.v8::internal::compiler::Node"**
  %68 = sext i32 %57 to i64
  %69 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %67, i64 %68
  %70 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %69, align 8
  %71 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %5, align 8
  %72 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %71, i64 0, i32 7
  %73 = load i32, i32* %72, align 4
  %74 = icmp sgt i32 %73, 0
  br i1 %74, label %76, label %75, !prof !3

75:                                               ; preds = %65
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3, i64 0, i64 0)) #12
  unreachable

76:                                               ; preds = %65
  %77 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %71, i64 0, i32 5
  %78 = load i32, i32* %77, align 4
  %79 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %71) #11
  %80 = zext i1 %79 to i32
  %81 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %5, align 8
  %82 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %81) #11
  %83 = zext i1 %82 to i32
  %84 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %5, align 8
  %85 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %84, i64 0, i32 6
  %86 = load i32, i32* %85, align 8
  %87 = add i32 %78, %80
  %88 = add i32 %87, %83
  %89 = add i32 %88, %86
  %90 = load i32, i32* %19, align 4
  %91 = and i32 %90, 251658240
  %92 = icmp eq i32 %91, 251658240
  br i1 %92, label %93, label %97

93:                                               ; preds = %76
  %94 = inttoptr i64 %24 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = add i64 %95, 16
  br label %97

97:                                               ; preds = %76, %93
  %98 = phi i64 [ %96, %93 ], [ %24, %76 ]
  %99 = inttoptr i64 %98 to %"class.v8::internal::compiler::Node"**
  %100 = sext i32 %89 to i64
  %101 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %99, i64 %100
  %102 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %101, align 8
  %103 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %102, i64 0, i32 3
  %104 = load i32, i32* %103, align 4
  %105 = and i32 %104, 16777215
  %106 = zext i32 %105 to i64
  %107 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %108 = load i64, i64* %107, align 8
  %109 = icmp ugt i64 %108, %106
  br i1 %109, label %110, label %211

110:                                              ; preds = %97
  %111 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %112 = load i64*, i64** %111, align 8
  %113 = lshr i64 %106, 6
  %114 = getelementptr inbounds i64, i64* %112, i64 %113
  %115 = and i64 %106, 63
  %116 = shl i64 1, %115
  %117 = load i64, i64* %114, align 8
  %118 = and i64 %117, %116
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %211, label %120

120:                                              ; preds = %110
  %121 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 2
  %122 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %123 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.v8::internal::compiler::NodeAuxData"* %121 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = sub i64 %124, %126
  %128 = ashr exact i64 %127, 3
  %129 = icmp ugt i64 %128, %106
  br i1 %129, label %130, label %208

130:                                              ; preds = %120
  %131 = inttoptr i64 %126 to %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"*
  %132 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %131, i64 %106, i32 0, i32 0
  %133 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"** %132, align 8
  %134 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %133, null
  br i1 %134, label %208, label %135

135:                                              ; preds = %130, %149
  %136 = phi %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* [ %151, %149 ], [ %133, %130 ]
  %137 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %136, i64 0, i32 0, i32 0
  %138 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"** %137, align 8
  %139 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %138, null
  br i1 %139, label %149, label %140

140:                                              ; preds = %135, %145
  %141 = phi %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* [ %147, %145 ], [ %138, %135 ]
  %142 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %141, i64 0, i32 0, i32 0
  %143 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %142, align 8
  %144 = icmp eq %"class.v8::internal::compiler::Node"* %143, %32
  br i1 %144, label %153, label %145

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %141, i64 0, i32 1
  %147 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"** %146, align 8
  %148 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %147, null
  br i1 %148, label %149, label %140

149:                                              ; preds = %145, %135
  %150 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %136, i64 0, i32 1
  %151 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"** %150, align 8
  %152 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %151, null
  br i1 %152, label %208, label %135

153:                                              ; preds = %140
  %154 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %141, i64 0, i32 0, i32 2
  %155 = load i8, i8* %154, align 8
  %156 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %141, i64 0, i32 0, i32 1
  %157 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %156, align 8
  %158 = and i8 %155, 1
  tail call void @_ZN2v88internal8compiler17BranchElimination25MarkAsSafetyCheckIfNeededEPNS1_4NodeES4_(%"class.v8::internal::compiler::BranchElimination"* %0, %"class.v8::internal::compiler::Node"* %157, %"class.v8::internal::compiler::Node"* %1)
  %159 = zext i1 %9 to i32
  %160 = zext i8 %158 to i32
  %161 = icmp eq i32 %159, %160
  br i1 %161, label %162, label %171

162:                                              ; preds = %153
  %163 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 5
  %164 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %163, align 8
  %165 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 0, i32 1
  %166 = load %"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::AdvancedReducer::Editor"** %165, align 8
  %167 = bitcast %"class.v8::internal::compiler::AdvancedReducer::Editor"* %166 to void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)***
  %168 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)**, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*** %167, align 8
  %169 = getelementptr inbounds void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %168, i64 4
  %170 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %169, align 8
  tail call void %170(%"class.v8::internal::compiler::AdvancedReducer::Editor"* %166, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %164, %"class.v8::internal::compiler::Node"* %70, %"class.v8::internal::compiler::Node"* %102) #11
  br label %205

171:                                              ; preds = %153
  %172 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 1
  %173 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %172, align 8
  %174 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %173, i64 0, i32 0, i32 0
  %175 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %174, align 8
  %176 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %173, i64 0, i32 0, i32 1
  %177 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %176, align 8
  %178 = load i8, i8* %10, align 8
  %179 = getelementptr inbounds %"class.v8::internal::compiler::DeoptimizeParameters", %"class.v8::internal::compiler::DeoptimizeParameters"* %4, i64 0, i32 1
  %180 = load i8, i8* %179, align 1
  %181 = getelementptr inbounds %"class.v8::internal::compiler::DeoptimizeParameters", %"class.v8::internal::compiler::DeoptimizeParameters"* %4, i64 0, i32 3
  %182 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder10DeoptimizeENS0_14DeoptimizeKindENS0_16DeoptimizeReasonERKNS1_14FeedbackSourceE(%"class.v8::internal::compiler::CommonOperatorBuilder"* %177, i8 zeroext %178, i8 zeroext %180, %"struct.v8::internal::compiler::FeedbackSource"* dereferenceable(16) %181) #11
  %183 = bitcast %"struct.std::__1::array.684"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %183) #11
  %184 = getelementptr inbounds %"struct.std::__1::array.684", %"struct.std::__1::array.684"* %3, i64 0, i32 0, i64 0
  %185 = bitcast %"struct.std::__1::array.684"* %3 to i64*
  store i64 %45, i64* %185, align 8
  %186 = getelementptr inbounds %"struct.std::__1::array.684", %"struct.std::__1::array.684"* %3, i64 0, i32 0, i64 1
  store %"class.v8::internal::compiler::Node"* %70, %"class.v8::internal::compiler::Node"** %186, align 8
  %187 = getelementptr inbounds %"struct.std::__1::array.684", %"struct.std::__1::array.684"* %3, i64 0, i32 0, i64 2
  store %"class.v8::internal::compiler::Node"* %102, %"class.v8::internal::compiler::Node"** %187, align 8
  %188 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %175, %"class.v8::internal::compiler::Operator"* %182, i32 3, %"class.v8::internal::compiler::Node"** nonnull %184, i1 zeroext false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %183) #11
  %189 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %172, align 8
  %190 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %189, i64 0, i32 0, i32 0
  %191 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %190, align 8
  %192 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %189, i64 0, i32 0, i32 1
  %193 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %192, align 8
  call void @_ZN2v88internal8compiler14NodeProperties17MergeControlToEndEPNS1_5GraphEPNS1_21CommonOperatorBuilderEPNS1_4NodeE(%"class.v8::internal::compiler::Graph"* %191, %"class.v8::internal::compiler::CommonOperatorBuilder"* %193, %"class.v8::internal::compiler::Node"* %188) #11
  %194 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %172, align 8
  %195 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %194, i64 0, i32 0, i32 0
  %196 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %195, align 8
  %197 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %196, i64 0, i32 2
  %198 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %197, align 8
  %199 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 0, i32 1
  %200 = load %"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::AdvancedReducer::Editor"** %199, align 8
  %201 = bitcast %"class.v8::internal::compiler::AdvancedReducer::Editor"* %200 to void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*)***
  %202 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*)**, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*)*** %201, align 8
  %203 = getelementptr inbounds void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*)** %202, i64 3
  %204 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*)** %203, align 8
  call void %204(%"class.v8::internal::compiler::AdvancedReducer::Editor"* %200, %"class.v8::internal::compiler::Node"* %198) #11
  br label %205

205:                                              ; preds = %171, %162
  %206 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 5
  %207 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %206, align 8
  br label %211

208:                                              ; preds = %149, %120, %130
  %209 = phi %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* [ null, %130 ], [ null, %120 ], [ %133, %149 ]
  %210 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler17BranchElimination16UpdateConditionsEPNS1_4NodeENS2_21ControlPathConditionsES4_S4_bb(%"class.v8::internal::compiler::BranchElimination"* %0, %"class.v8::internal::compiler::Node"* %1, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %209, %"class.v8::internal::compiler::Node"* %32, %"class.v8::internal::compiler::Node"* %1, i1 zeroext %9, i1 zeroext false)
  br label %211

211:                                              ; preds = %110, %97, %205, %208
  %212 = phi %"class.v8::internal::compiler::Node"* [ null, %110 ], [ %207, %205 ], [ %210, %208 ], [ null, %97 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #11
  ret %"class.v8::internal::compiler::Node"* %212
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler17BranchElimination11ReduceMergeEPNS1_4NodeE(%"class.v8::internal::compiler::BranchElimination"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", align 8
  %4 = alloca %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = lshr i32 %6, 24
  %8 = and i32 %7, 15
  %9 = icmp eq i32 %8, 15
  %10 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %11 = add i64 %10, 32
  br i1 %9, label %12, label %19

12:                                               ; preds = %2
  %13 = inttoptr i64 %11 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %14 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %13, align 8
  %15 = ptrtoint %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %14 to i64
  %16 = add i64 %15, 16
  %17 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %14, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  br label %19

19:                                               ; preds = %2, %12
  %20 = phi i32 [ %18, %12 ], [ %8, %2 ]
  %21 = phi i64 [ %16, %12 ], [ %11, %2 ]
  %22 = inttoptr i64 %21 to %"class.v8::internal::compiler::Node"**
  %23 = sext i32 %20 to i64
  %24 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %22, i64 %23
  %25 = icmp eq i32 %20, 0
  br i1 %25, label %50, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  br label %32

30:                                               ; preds = %40
  %31 = icmp eq %"class.v8::internal::compiler::Node"** %49, %24
  br i1 %31, label %50, label %32

32:                                               ; preds = %26, %30
  %33 = phi %"class.v8::internal::compiler::Node"** [ %22, %26 ], [ %49, %30 ]
  %34 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %34, i64 0, i32 3
  %36 = load i32, i32* %35, align 4
  %37 = and i32 %36, 16777215
  %38 = zext i32 %37 to i64
  %39 = icmp ugt i64 %28, %38
  br i1 %39, label %40, label %138

40:                                               ; preds = %32
  %41 = load i64*, i64** %29, align 8
  %42 = lshr i64 %38, 6
  %43 = getelementptr inbounds i64, i64* %41, i64 %42
  %44 = and i64 %38, 63
  %45 = shl i64 1, %44
  %46 = load i64, i64* %43, align 8
  %47 = and i64 %46, %45
  %48 = icmp eq i64 %47, 0
  %49 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %33, i64 1
  br i1 %48, label %138, label %30

50:                                               ; preds = %30, %19
  %51 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #11
  %52 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 2
  %53 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %22, align 8
  %54 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %53, i64 0, i32 3
  %55 = load i32, i32* %54, align 4
  %56 = and i32 %55, 16777215
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %59 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"** %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = bitcast %"class.v8::internal::compiler::NodeAuxData"* %52 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = sub i64 %60, %62
  %64 = ashr exact i64 %63, 3
  %65 = icmp ugt i64 %64, %57
  br i1 %65, label %66, label %70

66:                                               ; preds = %50
  %67 = inttoptr i64 %62 to %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"*
  %68 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %67, i64 %57, i32 0, i32 0
  %69 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"** %68, align 8
  br label %70

70:                                               ; preds = %50, %66
  %71 = phi %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* [ %69, %66 ], [ null, %50 ]
  %72 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %4, i64 0, i32 0, i32 0
  store %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %71, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"** %72, align 8
  %73 = icmp eq i32 %20, 1
  br i1 %73, label %74, label %76

74:                                               ; preds = %70
  %75 = ptrtoint %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %71 to i64
  br label %106

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %22, i64 1
  %78 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %4, i64 0, i32 0
  br label %79

79:                                               ; preds = %99, %76
  %80 = phi i64 [ %62, %76 ], [ %101, %99 ]
  %81 = phi i64 [ %60, %76 ], [ %100, %99 ]
  %82 = phi %"class.v8::internal::compiler::Node"** [ %77, %76 ], [ %97, %99 ]
  %83 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %82, align 8
  %84 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %83, i64 0, i32 3
  %85 = load i32, i32* %84, align 4
  %86 = and i32 %85, 16777215
  %87 = zext i32 %86 to i64
  %88 = sub i64 %81, %80
  %89 = ashr exact i64 %88, 3
  %90 = icmp ugt i64 %89, %87
  br i1 %90, label %91, label %95

91:                                               ; preds = %79
  %92 = inttoptr i64 %80 to %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"*
  %93 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %92, i64 %87, i32 0, i32 0
  %94 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"** %93, align 8
  br label %95

95:                                               ; preds = %79, %91
  %96 = phi %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* [ %94, %91 ], [ null, %79 ]
  call void @_ZN2v88internal8compiler14FunctionalListINS2_INS1_17BranchElimination15BranchConditionEEEE21ResetToCommonAncestorES6_(%"class.v8::internal::compiler::FunctionalList"* nonnull %78, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %96)
  %97 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %82, i64 1
  %98 = icmp eq %"class.v8::internal::compiler::Node"** %97, %24
  br i1 %98, label %102, label %99

99:                                               ; preds = %95
  %100 = load i64, i64* %59, align 8
  %101 = load i64, i64* %61, align 8
  br label %79

102:                                              ; preds = %95
  %103 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %4 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = load i32, i32* %5, align 4
  br label %106

106:                                              ; preds = %74, %102
  %107 = phi i32 [ %105, %102 ], [ %6, %74 ]
  %108 = phi i64 [ %104, %102 ], [ %75, %74 ]
  %109 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %109)
  %110 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %3 to i64*
  store i64 %108, i64* %110, align 8
  %111 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 3
  %112 = and i32 %107, 16777215
  %113 = zext i32 %112 to i64
  %114 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %115 = load i64, i64* %114, align 8
  %116 = icmp ugt i64 %115, %113
  br i1 %116, label %120, label %117

117:                                              ; preds = %106
  %118 = getelementptr inbounds %"class.v8::internal::compiler::NodeAuxData.673", %"class.v8::internal::compiler::NodeAuxData.673"* %111, i64 0, i32 0, i32 0
  %119 = add nuw nsw i64 %113, 1
  call void @_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE6resizeEmb(%"class.std::__1::vector.675"* %118, i64 %119, i1 zeroext false) #11
  br label %120

120:                                              ; preds = %117, %106
  %121 = getelementptr inbounds %"class.v8::internal::compiler::NodeAuxData.673", %"class.v8::internal::compiler::NodeAuxData.673"* %111, i64 0, i32 0, i32 0, i32 0
  %122 = load i64*, i64** %121, align 8
  %123 = lshr i64 %113, 6
  %124 = getelementptr inbounds i64, i64* %122, i64 %123
  %125 = and i64 %113, 63
  %126 = shl i64 1, %125
  %127 = load i64, i64* %124, align 8
  %128 = and i64 %127, %126
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %133

130:                                              ; preds = %120
  %131 = or i64 %127, %126
  store i64 %131, i64* %124, align 8
  %132 = call zeroext i1 @_ZN2v88internal8compiler11NodeAuxDataINS1_17BranchElimination21ControlPathConditionsEXadL_ZNS1_16DefaultConstructIS4_EET_vEEE3SetEPNS1_4NodeERKS4_(%"class.v8::internal::compiler::NodeAuxData"* %52, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* nonnull dereferenceable(8) %3) #11
  br label %136

133:                                              ; preds = %120
  %134 = call zeroext i1 @_ZN2v88internal8compiler11NodeAuxDataINS1_17BranchElimination21ControlPathConditionsEXadL_ZNS1_16DefaultConstructIS4_EET_vEEE3SetEPNS1_4NodeERKS4_(%"class.v8::internal::compiler::NodeAuxData"* %52, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* nonnull dereferenceable(8) %3) #11
  %135 = select i1 %134, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* null
  br label %136

136:                                              ; preds = %133, %130
  %137 = phi %"class.v8::internal::compiler::Node"* [ %1, %130 ], [ %135, %133 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %109)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #11
  br label %138

138:                                              ; preds = %40, %32, %136
  %139 = phi %"class.v8::internal::compiler::Node"* [ %137, %136 ], [ null, %32 ], [ null, %40 ]
  ret %"class.v8::internal::compiler::Node"* %139
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler17BranchElimination10ReduceLoopEPNS1_4NodeE(%"class.v8::internal::compiler::BranchElimination"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler17BranchElimination30TakeConditionsFromFirstControlEPNS1_4NodeE(%"class.v8::internal::compiler::BranchElimination"* %0, %"class.v8::internal::compiler::Node"* %1)
  ret %"class.v8::internal::compiler::Node"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler17BranchElimination12ReduceBranchEPNS1_4NodeE(%"class.v8::internal::compiler::BranchElimination"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 251658240
  %6 = icmp eq i32 %5, 251658240
  %7 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %8 = add i64 %7, 32
  br i1 %6, label %9, label %13

9:                                                ; preds = %2
  %10 = inttoptr i64 %8 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = add i64 %11, 16
  br label %13

13:                                               ; preds = %2, %9
  %14 = phi i64 [ %12, %9 ], [ %8, %2 ]
  %15 = inttoptr i64 %14 to %"class.v8::internal::compiler::Node"**
  %16 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %18 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %18, i64 0, i32 7
  %20 = load i32, i32* %19, align 4
  %21 = icmp sgt i32 %20, 0
  br i1 %21, label %23, label %22, !prof !3

22:                                               ; preds = %13
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3, i64 0, i64 0)) #12
  unreachable

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %18, i64 0, i32 5
  %25 = load i32, i32* %24, align 4
  %26 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %18) #11
  %27 = zext i1 %26 to i32
  %28 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %17, align 8
  %29 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %28) #11
  %30 = zext i1 %29 to i32
  %31 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %17, align 8
  %32 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %31, i64 0, i32 6
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %25, %27
  %35 = add i32 %34, %30
  %36 = add i32 %35, %33
  %37 = load i32, i32* %3, align 4
  %38 = and i32 %37, 251658240
  %39 = icmp eq i32 %38, 251658240
  br i1 %39, label %40, label %44

40:                                               ; preds = %23
  %41 = inttoptr i64 %8 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = add i64 %42, 16
  br label %44

44:                                               ; preds = %23, %40
  %45 = phi i64 [ %43, %40 ], [ %8, %23 ]
  %46 = inttoptr i64 %45 to %"class.v8::internal::compiler::Node"**
  %47 = sext i32 %36 to i64
  %48 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %46, i64 %47
  %49 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %48, align 8
  %50 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 2
  %51 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %49, i64 0, i32 3
  %52 = load i32, i32* %51, align 4
  %53 = and i32 %52, 16777215
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %56 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"class.v8::internal::compiler::NodeAuxData"* %50 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = sub i64 %57, %59
  %61 = ashr exact i64 %60, 3
  %62 = icmp ugt i64 %61, %54
  br i1 %62, label %63, label %185

63:                                               ; preds = %44
  %64 = inttoptr i64 %59 to %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"*
  %65 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %64, i64 %54, i32 0, i32 0
  %66 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"** %65, align 8
  %67 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %66, null
  br i1 %67, label %185, label %68

68:                                               ; preds = %63, %82
  %69 = phi %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* [ %84, %82 ], [ %66, %63 ]
  %70 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %69, i64 0, i32 0, i32 0
  %71 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"** %70, align 8
  %72 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %71, null
  br i1 %72, label %82, label %73

73:                                               ; preds = %68, %78
  %74 = phi %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* [ %80, %78 ], [ %71, %68 ]
  %75 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %74, i64 0, i32 0, i32 0
  %76 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %75, align 8
  %77 = icmp eq %"class.v8::internal::compiler::Node"* %76, %16
  br i1 %77, label %86, label %78

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %74, i64 0, i32 1
  %80 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"** %79, align 8
  %81 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %80, null
  br i1 %81, label %82, label %73

82:                                               ; preds = %78, %68
  %83 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %69, i64 0, i32 1
  %84 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"** %83, align 8
  %85 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %84, null
  br i1 %85, label %185, label %68

86:                                               ; preds = %73
  %87 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %74, i64 0, i32 0, i32 2
  %88 = load i8, i8* %87, align 8
  %89 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %74, i64 0, i32 0, i32 1
  %90 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %89, align 8
  tail call void @_ZN2v88internal8compiler17BranchElimination25MarkAsSafetyCheckIfNeededEPNS1_4NodeES4_(%"class.v8::internal::compiler::BranchElimination"* %0, %"class.v8::internal::compiler::Node"* %90, %"class.v8::internal::compiler::Node"* %1)
  %91 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 4
  %92 = bitcast %"struct.v8::internal::compiler::Node::Use"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %93 to %"struct.v8::internal::compiler::Node::Use"*
  %95 = icmp eq i64 %93, 0
  br i1 %95, label %141, label %96

96:                                               ; preds = %86
  %97 = and i8 %88, 1
  %98 = icmp eq i8 %97, 0
  %99 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 5
  %100 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 0, i32 1
  br i1 %98, label %101, label %144

101:                                              ; preds = %96, %136
  %102 = phi %"struct.v8::internal::compiler::Node::Use"* [ %139, %136 ], [ %94, %96 ]
  %103 = phi i64 [ %138, %136 ], [ %93, %96 ]
  %104 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %102, i64 1
  %105 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %102, i64 0, i32 2
  %106 = load i32, i32* %105, align 8
  %107 = lshr i32 %106, 1
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %104, i64 %108
  %110 = and i32 %106, 1
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %114, label %112

112:                                              ; preds = %101
  %113 = bitcast %"struct.v8::internal::compiler::Node::Use"* %109 to %"class.v8::internal::compiler::Node"*
  br label %117

114:                                              ; preds = %101
  %115 = bitcast %"struct.v8::internal::compiler::Node::Use"* %109 to %"class.v8::internal::compiler::Node"**
  %116 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %115, align 8
  br label %117

117:                                              ; preds = %114, %112
  %118 = phi %"class.v8::internal::compiler::Node"* [ %113, %112 ], [ %116, %114 ]
  %119 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %118, i64 0, i32 0
  %120 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %119, align 8
  %121 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %120, i64 0, i32 2
  %122 = load i16, i16* %121, align 8
  switch i16 %122, label %179 [
    i16 4, label %129
    i16 5, label %123
  ]

123:                                              ; preds = %117
  %124 = load %"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::AdvancedReducer::Editor"** %100, align 8
  %125 = bitcast %"class.v8::internal::compiler::AdvancedReducer::Editor"* %124 to void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)***
  %126 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)**, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*** %125, align 8
  %127 = getelementptr inbounds void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %126, i64 2
  %128 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %127, align 8
  tail call void %128(%"class.v8::internal::compiler::AdvancedReducer::Editor"* %124, %"class.v8::internal::compiler::Node"* %118, %"class.v8::internal::compiler::Node"* %49) #11
  br label %136

129:                                              ; preds = %117
  %130 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %99, align 8
  %131 = load %"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::AdvancedReducer::Editor"** %100, align 8
  %132 = bitcast %"class.v8::internal::compiler::AdvancedReducer::Editor"* %131 to void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)***
  %133 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)**, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*** %132, align 8
  %134 = getelementptr inbounds void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %133, i64 2
  %135 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %134, align 8
  tail call void %135(%"class.v8::internal::compiler::AdvancedReducer::Editor"* %131, %"class.v8::internal::compiler::Node"* %118, %"class.v8::internal::compiler::Node"* %130) #11
  br label %136

136:                                              ; preds = %129, %123
  %137 = inttoptr i64 %103 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = inttoptr i64 %138 to %"struct.v8::internal::compiler::Node::Use"*
  %140 = icmp eq i64 %138, 0
  br i1 %140, label %141, label %101

141:                                              ; preds = %180, %136, %86
  %142 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 5
  %143 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %142, align 8
  br label %220

144:                                              ; preds = %96, %180
  %145 = phi %"struct.v8::internal::compiler::Node::Use"* [ %183, %180 ], [ %94, %96 ]
  %146 = phi i64 [ %182, %180 ], [ %93, %96 ]
  %147 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %145, i64 1
  %148 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %145, i64 0, i32 2
  %149 = load i32, i32* %148, align 8
  %150 = lshr i32 %149, 1
  %151 = zext i32 %150 to i64
  %152 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %147, i64 %151
  %153 = and i32 %149, 1
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %157, label %155

155:                                              ; preds = %144
  %156 = bitcast %"struct.v8::internal::compiler::Node::Use"* %152 to %"class.v8::internal::compiler::Node"*
  br label %160

157:                                              ; preds = %144
  %158 = bitcast %"struct.v8::internal::compiler::Node::Use"* %152 to %"class.v8::internal::compiler::Node"**
  %159 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %158, align 8
  br label %160

160:                                              ; preds = %155, %157
  %161 = phi %"class.v8::internal::compiler::Node"* [ %156, %155 ], [ %159, %157 ]
  %162 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %161, i64 0, i32 0
  %163 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %162, align 8
  %164 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %163, i64 0, i32 2
  %165 = load i16, i16* %164, align 8
  switch i16 %165, label %179 [
    i16 4, label %166
    i16 5, label %172
  ]

166:                                              ; preds = %160
  %167 = load %"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::AdvancedReducer::Editor"** %100, align 8
  %168 = bitcast %"class.v8::internal::compiler::AdvancedReducer::Editor"* %167 to void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)***
  %169 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)**, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*** %168, align 8
  %170 = getelementptr inbounds void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %169, i64 2
  %171 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %170, align 8
  tail call void %171(%"class.v8::internal::compiler::AdvancedReducer::Editor"* %167, %"class.v8::internal::compiler::Node"* %161, %"class.v8::internal::compiler::Node"* %49) #11
  br label %180

172:                                              ; preds = %160
  %173 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %99, align 8
  %174 = load %"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::AdvancedReducer::Editor"** %100, align 8
  %175 = bitcast %"class.v8::internal::compiler::AdvancedReducer::Editor"* %174 to void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)***
  %176 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)**, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*** %175, align 8
  %177 = getelementptr inbounds void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %176, i64 2
  %178 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %177, align 8
  tail call void %178(%"class.v8::internal::compiler::AdvancedReducer::Editor"* %174, %"class.v8::internal::compiler::Node"* %161, %"class.v8::internal::compiler::Node"* %173) #11
  br label %180

179:                                              ; preds = %160, %117
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #12
  unreachable

180:                                              ; preds = %172, %166
  %181 = inttoptr i64 %146 to i64*
  %182 = load i64, i64* %181, align 8
  %183 = inttoptr i64 %182 to %"struct.v8::internal::compiler::Node::Use"*
  %184 = icmp eq i64 %182, 0
  br i1 %184, label %141, label %144

185:                                              ; preds = %82, %44, %63
  tail call void @_ZN2v88internal8compiler17BranchElimination23SimplifyBranchConditionEPNS1_4NodeE(%"class.v8::internal::compiler::BranchElimination"* %0, %"class.v8::internal::compiler::Node"* %1)
  %186 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 4
  %187 = bitcast %"struct.v8::internal::compiler::Node::Use"** %186 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %192, label %190

190:                                              ; preds = %185
  %191 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 0, i32 1
  br label %194

192:                                              ; preds = %210, %185
  %193 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler17BranchElimination30TakeConditionsFromFirstControlEPNS1_4NodeE(%"class.v8::internal::compiler::BranchElimination"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %220

194:                                              ; preds = %190, %210
  %195 = phi i64 [ %188, %190 ], [ %218, %210 ]
  %196 = inttoptr i64 %195 to %"struct.v8::internal::compiler::Node::Use"*
  %197 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %196, i64 1
  %198 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %196, i64 0, i32 2
  %199 = load i32, i32* %198, align 8
  %200 = lshr i32 %199, 1
  %201 = zext i32 %200 to i64
  %202 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %197, i64 %201
  %203 = and i32 %199, 1
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %207, label %205

205:                                              ; preds = %194
  %206 = bitcast %"struct.v8::internal::compiler::Node::Use"* %202 to %"class.v8::internal::compiler::Node"*
  br label %210

207:                                              ; preds = %194
  %208 = bitcast %"struct.v8::internal::compiler::Node::Use"* %202 to %"class.v8::internal::compiler::Node"**
  %209 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %208, align 8
  br label %210

210:                                              ; preds = %205, %207
  %211 = phi %"class.v8::internal::compiler::Node"* [ %206, %205 ], [ %209, %207 ]
  %212 = load %"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::AdvancedReducer::Editor"** %191, align 8
  %213 = bitcast %"class.v8::internal::compiler::AdvancedReducer::Editor"* %212 to void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*)***
  %214 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*)**, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*)*** %213, align 8
  %215 = getelementptr inbounds void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*)** %214, i64 3
  %216 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*)** %215, align 8
  tail call void %216(%"class.v8::internal::compiler::AdvancedReducer::Editor"* %212, %"class.v8::internal::compiler::Node"* %211) #11
  %217 = inttoptr i64 %195 to i64*
  %218 = load i64, i64* %217, align 8
  %219 = icmp eq i64 %218, 0
  br i1 %219, label %192, label %194

220:                                              ; preds = %192, %141
  %221 = phi %"class.v8::internal::compiler::Node"* [ %143, %141 ], [ %193, %192 ]
  ret %"class.v8::internal::compiler::Node"* %221
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler17BranchElimination8ReduceIfEPNS1_4NodeEb(%"class.v8::internal::compiler::BranchElimination"*, %"class.v8::internal::compiler::Node"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", align 8
  %5 = alloca %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %7 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %7, i64 0, i32 7
  %9 = load i32, i32* %8, align 4
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %12, label %11, !prof !3

11:                                               ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3, i64 0, i64 0)) #12
  unreachable

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %7, i64 0, i32 5
  %14 = load i32, i32* %13, align 4
  %15 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %7) #11
  %16 = zext i1 %15 to i32
  %17 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %6, align 8
  %18 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %17) #11
  %19 = zext i1 %18 to i32
  %20 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %6, align 8
  %21 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %20, i64 0, i32 6
  %22 = load i32, i32* %21, align 8
  %23 = add i32 %14, %16
  %24 = add i32 %23, %19
  %25 = add i32 %24, %22
  %26 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %27 = load i32, i32* %26, align 4
  %28 = and i32 %27, 251658240
  %29 = icmp eq i32 %28, 251658240
  %30 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %31 = add i64 %30, 32
  br i1 %29, label %32, label %36

32:                                               ; preds = %12
  %33 = inttoptr i64 %31 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = add i64 %34, 16
  br label %36

36:                                               ; preds = %12, %32
  %37 = phi i64 [ %35, %32 ], [ %31, %12 ]
  %38 = inttoptr i64 %37 to %"class.v8::internal::compiler::Node"**
  %39 = sext i32 %25 to i64
  %40 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %38, i64 %39
  %41 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %40, align 8
  %42 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 2
  %43 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %41, i64 0, i32 3
  %44 = load i32, i32* %43, align 4
  %45 = and i32 %44, 16777215
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %48 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"** %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast %"class.v8::internal::compiler::NodeAuxData"* %42 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = sub i64 %49, %51
  %53 = ashr exact i64 %52, 3
  %54 = icmp ugt i64 %53, %46
  br i1 %54, label %55, label %59

55:                                               ; preds = %36
  %56 = inttoptr i64 %51 to %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"*
  %57 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %56, i64 %46, i32 0, i32 0
  %58 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"** %57, align 8
  br label %59

59:                                               ; preds = %36, %55
  %60 = phi %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* [ %58, %55 ], [ null, %36 ]
  %61 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 3
  %62 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %63 = load i64, i64* %62, align 8
  %64 = icmp ugt i64 %63, %46
  br i1 %64, label %65, label %121

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.v8::internal::compiler::NodeAuxData.673", %"class.v8::internal::compiler::NodeAuxData.673"* %61, i64 0, i32 0, i32 0, i32 0
  %67 = load i64*, i64** %66, align 8
  %68 = lshr i64 %46, 6
  %69 = getelementptr inbounds i64, i64* %67, i64 %68
  %70 = and i64 %46, 63
  %71 = shl i64 1, %70
  %72 = load i64, i64* %69, align 8
  %73 = and i64 %72, %71
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %121, label %75

75:                                               ; preds = %65
  %76 = and i32 %44, 251658240
  %77 = icmp eq i32 %76, 251658240
  %78 = ptrtoint %"class.v8::internal::compiler::Node"* %41 to i64
  %79 = add i64 %78, 32
  br i1 %77, label %80, label %84

80:                                               ; preds = %75
  %81 = inttoptr i64 %79 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = add i64 %82, 16
  br label %84

84:                                               ; preds = %75, %80
  %85 = phi i64 [ %83, %80 ], [ %79, %75 ]
  %86 = inttoptr i64 %85 to %"class.v8::internal::compiler::Node"**
  %87 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %86, align 8
  %88 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88)
  %89 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %5, i64 0, i32 0, i32 0
  store %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %60, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"** %89, align 8
  %90 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 4
  %91 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %90, align 8
  call void @_ZN2v88internal8compiler17BranchElimination21ControlPathConditions22AddConditionInNewBlockEPNS0_4ZoneEPNS1_4NodeES7_b(%"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* nonnull %5, %"class.v8::internal::Zone"* %91, %"class.v8::internal::compiler::Node"* %87, %"class.v8::internal::compiler::Node"* %41, i1 zeroext %2) #11
  %92 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %5 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %94) #11
  %95 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %4 to i64*
  store i64 %93, i64* %95, align 8
  %96 = load i32, i32* %26, align 4
  %97 = and i32 %96, 16777215
  %98 = zext i32 %97 to i64
  %99 = load i64, i64* %62, align 8
  %100 = icmp ugt i64 %99, %98
  br i1 %100, label %104, label %101

101:                                              ; preds = %84
  %102 = getelementptr inbounds %"class.v8::internal::compiler::NodeAuxData.673", %"class.v8::internal::compiler::NodeAuxData.673"* %61, i64 0, i32 0, i32 0
  %103 = add nuw nsw i64 %98, 1
  tail call void @_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE6resizeEmb(%"class.std::__1::vector.675"* %102, i64 %103, i1 zeroext false) #11
  br label %104

104:                                              ; preds = %101, %84
  %105 = load i64*, i64** %66, align 8
  %106 = lshr i64 %98, 6
  %107 = getelementptr inbounds i64, i64* %105, i64 %106
  %108 = and i64 %98, 63
  %109 = shl i64 1, %108
  %110 = load i64, i64* %107, align 8
  %111 = and i64 %110, %109
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %116

113:                                              ; preds = %104
  %114 = or i64 %110, %109
  store i64 %114, i64* %107, align 8
  %115 = call zeroext i1 @_ZN2v88internal8compiler11NodeAuxDataINS1_17BranchElimination21ControlPathConditionsEXadL_ZNS1_16DefaultConstructIS4_EET_vEEE3SetEPNS1_4NodeERKS4_(%"class.v8::internal::compiler::NodeAuxData"* %42, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* nonnull dereferenceable(8) %4) #11
  br label %119

116:                                              ; preds = %104
  %117 = call zeroext i1 @_ZN2v88internal8compiler11NodeAuxDataINS1_17BranchElimination21ControlPathConditionsEXadL_ZNS1_16DefaultConstructIS4_EET_vEEE3SetEPNS1_4NodeERKS4_(%"class.v8::internal::compiler::NodeAuxData"* %42, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* nonnull dereferenceable(8) %4) #11
  %118 = select i1 %117, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* null
  br label %119

119:                                              ; preds = %113, %116
  %120 = phi %"class.v8::internal::compiler::Node"* [ %1, %113 ], [ %118, %116 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88)
  br label %121

121:                                              ; preds = %65, %59, %119
  %122 = phi %"class.v8::internal::compiler::Node"* [ %120, %119 ], [ null, %65 ], [ null, %59 ]
  ret %"class.v8::internal::compiler::Node"* %122
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler17BranchElimination21ReduceTrapConditionalEPNS1_4NodeE(%"class.v8::internal::compiler::BranchElimination"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.std::__1::array.683", align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %5 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %5, i64 0, i32 2
  %7 = load i16, i16* %6, align 8
  %8 = icmp eq i16 %7, 15
  %9 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %10, 251658240
  %12 = icmp eq i32 %11, 251658240
  %13 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %14 = add i64 %13, 32
  br i1 %12, label %15, label %19

15:                                               ; preds = %2
  %16 = inttoptr i64 %14 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = add i64 %17, 16
  br label %19

19:                                               ; preds = %2, %15
  %20 = phi i64 [ %18, %15 ], [ %14, %2 ]
  %21 = inttoptr i64 %20 to %"class.v8::internal::compiler::Node"**
  %22 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %5, i64 0, i32 7
  %24 = load i32, i32* %23, align 4
  %25 = icmp sgt i32 %24, 0
  br i1 %25, label %27, label %26, !prof !3

26:                                               ; preds = %19
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3, i64 0, i64 0)) #12
  unreachable

27:                                               ; preds = %19
  %28 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %5, i64 0, i32 5
  %29 = load i32, i32* %28, align 4
  %30 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %5) #11
  %31 = zext i1 %30 to i32
  %32 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %4, align 8
  %33 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %32) #11
  %34 = zext i1 %33 to i32
  %35 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %4, align 8
  %36 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %35, i64 0, i32 6
  %37 = load i32, i32* %36, align 8
  %38 = add i32 %29, %31
  %39 = add i32 %38, %34
  %40 = add i32 %39, %37
  %41 = load i32, i32* %9, align 4
  %42 = and i32 %41, 251658240
  %43 = icmp eq i32 %42, 251658240
  br i1 %43, label %44, label %48

44:                                               ; preds = %27
  %45 = inttoptr i64 %14 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = add i64 %46, 16
  br label %48

48:                                               ; preds = %27, %44
  %49 = phi i64 [ %47, %44 ], [ %14, %27 ]
  %50 = inttoptr i64 %49 to %"class.v8::internal::compiler::Node"**
  %51 = sext i32 %40 to i64
  %52 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %50, i64 %51
  %53 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %52, align 8
  %54 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %53, i64 0, i32 3
  %55 = load i32, i32* %54, align 4
  %56 = and i32 %55, 16777215
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %59 = load i64, i64* %58, align 8
  %60 = icmp ugt i64 %59, %57
  br i1 %60, label %61, label %180

61:                                               ; preds = %48
  %62 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %63 = load i64*, i64** %62, align 8
  %64 = lshr i64 %57, 6
  %65 = getelementptr inbounds i64, i64* %63, i64 %64
  %66 = and i64 %57, 63
  %67 = shl i64 1, %66
  %68 = load i64, i64* %65, align 8
  %69 = and i64 %68, %67
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %180, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 2
  %73 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %74 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"** %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.v8::internal::compiler::NodeAuxData"* %72 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = sub i64 %75, %77
  %79 = ashr exact i64 %78, 3
  %80 = icmp ugt i64 %79, %57
  br i1 %80, label %81, label %176

81:                                               ; preds = %71
  %82 = inttoptr i64 %77 to %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"*
  %83 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %82, i64 %57, i32 0, i32 0
  %84 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"** %83, align 8
  %85 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %84, null
  br i1 %85, label %176, label %86

86:                                               ; preds = %81, %100
  %87 = phi %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* [ %102, %100 ], [ %84, %81 ]
  %88 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %87, i64 0, i32 0, i32 0
  %89 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"** %88, align 8
  %90 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %89, null
  br i1 %90, label %100, label %91

91:                                               ; preds = %86, %96
  %92 = phi %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* [ %98, %96 ], [ %89, %86 ]
  %93 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %92, i64 0, i32 0, i32 0
  %94 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %93, align 8
  %95 = icmp eq %"class.v8::internal::compiler::Node"* %94, %22
  br i1 %95, label %104, label %96

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %92, i64 0, i32 1
  %98 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"** %97, align 8
  %99 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %98, null
  br i1 %99, label %100, label %91

100:                                              ; preds = %96, %86
  %101 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %87, i64 0, i32 1
  %102 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"** %101, align 8
  %103 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %102, null
  br i1 %103, label %176, label %86

104:                                              ; preds = %91
  %105 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %92, i64 0, i32 0, i32 2
  %106 = load i8, i8* %105, align 8
  %107 = and i8 %106, 1
  %108 = zext i8 %107 to i32
  %109 = zext i1 %8 to i32
  %110 = icmp eq i32 %108, %109
  br i1 %110, label %111, label %180

111:                                              ; preds = %104
  %112 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 5
  %113 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %112, align 8
  %114 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 0, i32 1
  %115 = load %"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::AdvancedReducer::Editor"** %114, align 8
  %116 = bitcast %"class.v8::internal::compiler::AdvancedReducer::Editor"* %115 to void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)***
  %117 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)**, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*** %116, align 8
  %118 = getelementptr inbounds void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %117, i64 4
  %119 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %118, align 8
  tail call void %119(%"class.v8::internal::compiler::AdvancedReducer::Editor"* %115, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %113, %"class.v8::internal::compiler::Node"* %113, %"class.v8::internal::compiler::Node"* %113) #11
  %120 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %4, align 8
  %121 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %120, i64 0, i32 6
  %122 = load i32, i32* %121, align 8
  %123 = icmp sgt i32 %122, 0
  br i1 %123, label %125, label %124, !prof !3

124:                                              ; preds = %111
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.4, i64 0, i64 0)) #12
  unreachable

125:                                              ; preds = %111
  %126 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %120, i64 0, i32 5
  %127 = load i32, i32* %126, align 4
  %128 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %120) #11
  %129 = zext i1 %128 to i32
  %130 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %4, align 8
  %131 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %130) #11
  %132 = zext i1 %131 to i32
  %133 = add i32 %127, %129
  %134 = add i32 %133, %132
  %135 = load i32, i32* %9, align 4
  %136 = and i32 %135, 251658240
  %137 = icmp eq i32 %136, 251658240
  br i1 %137, label %138, label %142

138:                                              ; preds = %125
  %139 = inttoptr i64 %14 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = add i64 %140, 16
  br label %142

142:                                              ; preds = %125, %138
  %143 = phi i64 [ %141, %138 ], [ %14, %125 ]
  %144 = inttoptr i64 %143 to %"class.v8::internal::compiler::Node"**
  %145 = sext i32 %134 to i64
  %146 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %144, i64 %145
  %147 = bitcast %"class.v8::internal::compiler::Node"** %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 1
  %150 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %149, align 8
  %151 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %150, i64 0, i32 0, i32 0
  %152 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %151, align 8
  %153 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %150, i64 0, i32 0, i32 1
  %154 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %153, align 8
  %155 = tail call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder5ThrowEv(%"class.v8::internal::compiler::CommonOperatorBuilder"* %154) #11
  %156 = bitcast %"struct.std::__1::array.683"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %156) #11
  %157 = getelementptr inbounds %"struct.std::__1::array.683", %"struct.std::__1::array.683"* %3, i64 0, i32 0, i64 0
  %158 = bitcast %"struct.std::__1::array.683"* %3 to i64*
  store i64 %148, i64* %158, align 8
  %159 = getelementptr inbounds %"struct.std::__1::array.683", %"struct.std::__1::array.683"* %3, i64 0, i32 0, i64 1
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %159, align 8
  %160 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %152, %"class.v8::internal::compiler::Operator"* %155, i32 2, %"class.v8::internal::compiler::Node"** nonnull %157, i1 zeroext false) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %156) #11
  %161 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %149, align 8
  %162 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %161, i64 0, i32 0, i32 0
  %163 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %162, align 8
  %164 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %161, i64 0, i32 0, i32 1
  %165 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %164, align 8
  call void @_ZN2v88internal8compiler14NodeProperties17MergeControlToEndEPNS1_5GraphEPNS1_21CommonOperatorBuilderEPNS1_4NodeE(%"class.v8::internal::compiler::Graph"* %163, %"class.v8::internal::compiler::CommonOperatorBuilder"* %165, %"class.v8::internal::compiler::Node"* %160) #11
  %166 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %149, align 8
  %167 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %166, i64 0, i32 0, i32 0
  %168 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %167, align 8
  %169 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %168, i64 0, i32 2
  %170 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %169, align 8
  %171 = load %"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::AdvancedReducer::Editor"** %114, align 8
  %172 = bitcast %"class.v8::internal::compiler::AdvancedReducer::Editor"* %171 to void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*)***
  %173 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*)**, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*)*** %172, align 8
  %174 = getelementptr inbounds void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*)** %173, i64 3
  %175 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*)** %174, align 8
  call void %175(%"class.v8::internal::compiler::AdvancedReducer::Editor"* %171, %"class.v8::internal::compiler::Node"* %170) #11
  br label %180

176:                                              ; preds = %100, %71, %81
  %177 = phi %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* [ null, %81 ], [ null, %71 ], [ %84, %100 ]
  %178 = xor i1 %8, true
  %179 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler17BranchElimination16UpdateConditionsEPNS1_4NodeENS2_21ControlPathConditionsES4_S4_bb(%"class.v8::internal::compiler::BranchElimination"* %0, %"class.v8::internal::compiler::Node"* %1, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %177, %"class.v8::internal::compiler::Node"* %22, %"class.v8::internal::compiler::Node"* %1, i1 zeroext %178, i1 zeroext false)
  br label %180

180:                                              ; preds = %61, %48, %142, %176, %104
  %181 = phi %"class.v8::internal::compiler::Node"* [ null, %61 ], [ %1, %142 ], [ %179, %176 ], [ %53, %104 ], [ null, %48 ]
  ret %"class.v8::internal::compiler::Node"* %181
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler17BranchElimination11ReduceStartEPNS1_4NodeE(%"class.v8::internal::compiler::BranchElimination"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", align 8
  %4 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4)
  %5 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %3, i64 0, i32 0, i32 0
  store %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* null, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"** %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 3
  %7 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 16777215
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %12, %10
  br i1 %13, label %17, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.v8::internal::compiler::NodeAuxData.673", %"class.v8::internal::compiler::NodeAuxData.673"* %6, i64 0, i32 0, i32 0
  %16 = add nuw nsw i64 %10, 1
  tail call void @_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE6resizeEmb(%"class.std::__1::vector.675"* %15, i64 %16, i1 zeroext false) #11
  br label %17

17:                                               ; preds = %14, %2
  %18 = getelementptr inbounds %"class.v8::internal::compiler::NodeAuxData.673", %"class.v8::internal::compiler::NodeAuxData.673"* %6, i64 0, i32 0, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = lshr i64 %10, 6
  %21 = getelementptr inbounds i64, i64* %19, i64 %20
  %22 = and i64 %10, 63
  %23 = shl i64 1, %22
  %24 = load i64, i64* %21, align 8
  %25 = and i64 %24, %23
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %31

27:                                               ; preds = %17
  %28 = or i64 %24, %23
  store i64 %28, i64* %21, align 8
  %29 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 2
  %30 = call zeroext i1 @_ZN2v88internal8compiler11NodeAuxDataINS1_17BranchElimination21ControlPathConditionsEXadL_ZNS1_16DefaultConstructIS4_EET_vEEE3SetEPNS1_4NodeERKS4_(%"class.v8::internal::compiler::NodeAuxData"* %29, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* nonnull dereferenceable(8) %3) #11
  br label %35

31:                                               ; preds = %17
  %32 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 2
  %33 = call zeroext i1 @_ZN2v88internal8compiler11NodeAuxDataINS1_17BranchElimination21ControlPathConditionsEXadL_ZNS1_16DefaultConstructIS4_EET_vEEE3SetEPNS1_4NodeERKS4_(%"class.v8::internal::compiler::NodeAuxData"* %32, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* nonnull dereferenceable(8) %3) #11
  %34 = select i1 %33, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* null
  br label %35

35:                                               ; preds = %31, %27
  %36 = phi %"class.v8::internal::compiler::Node"* [ %1, %27 ], [ %34, %31 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4)
  ret %"class.v8::internal::compiler::Node"* %36
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler17BranchElimination18ReduceOtherControlEPNS1_4NodeE(%"class.v8::internal::compiler::BranchElimination"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler17BranchElimination30TakeConditionsFromFirstControlEPNS1_4NodeE(%"class.v8::internal::compiler::BranchElimination"* %0, %"class.v8::internal::compiler::Node"* %1)
  ret %"class.v8::internal::compiler::Node"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler17BranchElimination23SimplifyBranchConditionEPNS1_4NodeE(%"class.v8::internal::compiler::BranchElimination"* nocapture readonly, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::base::SmallVector", align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %5 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %5, i64 0, i32 7
  %7 = load i32, i32* %6, align 4
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %10, label %9, !prof !3

9:                                                ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3, i64 0, i64 0)) #12
  unreachable

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %5, i64 0, i32 5
  %12 = load i32, i32* %11, align 4
  %13 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %5) #11
  %14 = zext i1 %13 to i32
  %15 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %4, align 8
  %16 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %15) #11
  %17 = zext i1 %16 to i32
  %18 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %4, align 8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %18, i64 0, i32 6
  %20 = load i32, i32* %19, align 8
  %21 = add i32 %12, %14
  %22 = add i32 %21, %17
  %23 = add i32 %22, %20
  %24 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %25 = load i32, i32* %24, align 4
  %26 = and i32 %25, 251658240
  %27 = icmp eq i32 %26, 251658240
  %28 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %29 = add i64 %28, 32
  br i1 %27, label %30, label %34

30:                                               ; preds = %10
  %31 = inttoptr i64 %29 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = add i64 %32, 16
  br label %34

34:                                               ; preds = %10, %30
  %35 = phi i64 [ %33, %30 ], [ %29, %10 ]
  %36 = inttoptr i64 %35 to %"class.v8::internal::compiler::Node"**
  %37 = sext i32 %23 to i64
  %38 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %36, i64 %37
  %39 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %38, align 8
  %40 = ptrtoint %"class.v8::internal::compiler::Node"* %39 to i64
  %41 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %39, i64 0, i32 0
  %42 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %42, i64 0, i32 2
  %44 = load i16, i16* %43, align 8
  %45 = icmp eq i16 %44, 10
  br i1 %45, label %46, label %199

46:                                               ; preds = %34
  br i1 %27, label %47, label %51

47:                                               ; preds = %46
  %48 = inttoptr i64 %29 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, 16
  br label %51

51:                                               ; preds = %46, %47
  %52 = phi i64 [ %50, %47 ], [ %29, %46 ]
  %53 = inttoptr i64 %52 to %"class.v8::internal::compiler::Node"**
  %54 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %53, align 8
  %55 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 1
  %56 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %55, align 8
  %57 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %56, i64 0, i32 0, i32 0
  %58 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %57, align 8
  %59 = bitcast %"class.v8::base::SmallVector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %59) #11
  %60 = getelementptr inbounds %"class.v8::base::SmallVector", %"class.v8::base::SmallVector"* %3, i64 0, i32 3
  %61 = bitcast %"class.v8::base::SmallVector"* %3 to %"struct.std::__1::aligned_storage<16, 8>::type"**
  store %"struct.std::__1::aligned_storage<16, 8>::type"* %60, %"struct.std::__1::aligned_storage<16, 8>::type"** %61, align 8
  %62 = getelementptr inbounds %"class.v8::base::SmallVector", %"class.v8::base::SmallVector"* %3, i64 0, i32 1
  %63 = bitcast %"class.v8::internal::compiler::Node"*** %62 to %"struct.std::__1::aligned_storage<16, 8>::type"**
  store %"struct.std::__1::aligned_storage<16, 8>::type"* %60, %"struct.std::__1::aligned_storage<16, 8>::type"** %63, align 8
  %64 = getelementptr inbounds %"class.v8::base::SmallVector", %"class.v8::base::SmallVector"* %3, i64 0, i32 2
  %65 = getelementptr inbounds %"struct.std::__1::aligned_storage<16, 8>::type", %"struct.std::__1::aligned_storage<16, 8>::type"* %60, i64 1
  %66 = bitcast %"class.v8::internal::compiler::Node"*** %64 to %"struct.std::__1::aligned_storage<16, 8>::type"**
  store %"struct.std::__1::aligned_storage<16, 8>::type"* %65, %"struct.std::__1::aligned_storage<16, 8>::type"** %66, align 8
  %67 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %39, i64 0, i32 3
  %68 = load i32, i32* %67, align 4
  %69 = lshr i32 %68, 24
  %70 = and i32 %69, 15
  %71 = icmp eq i32 %70, 15
  %72 = add i64 %40, 32
  %73 = bitcast %"struct.std::__1::aligned_storage<16, 8>::type"* %60 to %"class.v8::internal::compiler::Node"**
  br i1 %71, label %74, label %81

74:                                               ; preds = %51
  %75 = inttoptr i64 %72 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %76 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %75, align 8
  %77 = ptrtoint %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %76 to i64
  %78 = add i64 %77, 16
  %79 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %76, i64 0, i32 1
  %80 = load i32, i32* %79, align 8
  br label %81

81:                                               ; preds = %51, %74
  %82 = phi i32 [ %80, %74 ], [ %70, %51 ]
  %83 = phi i64 [ %78, %74 ], [ %72, %51 ]
  %84 = inttoptr i64 %83 to %"class.v8::internal::compiler::Node"**
  %85 = icmp eq i32 %82, 0
  br i1 %85, label %176, label %86

86:                                               ; preds = %81
  %87 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 2
  %88 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %89 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"** %88 to i64*
  %90 = bitcast %"class.v8::internal::compiler::NodeAuxData"* %87 to i64*
  %91 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 6
  %92 = zext i32 %82 to i64
  br label %93

93:                                               ; preds = %86, %163
  %94 = phi i64 [ 0, %86 ], [ %168, %163 ]
  %95 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %84, i64 %94
  %96 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %95, align 8
  %97 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %96, i64 0, i32 3
  %98 = load i32, i32* %97, align 4
  %99 = and i32 %98, 16777215
  %100 = zext i32 %99 to i64
  %101 = load i64, i64* %89, align 8
  %102 = load i64, i64* %90, align 8
  %103 = sub i64 %101, %102
  %104 = ashr exact i64 %103, 3
  %105 = icmp ugt i64 %104, %100
  br i1 %105, label %106, label %192

106:                                              ; preds = %93
  %107 = inttoptr i64 %102 to %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"*
  %108 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %107, i64 %100, i32 0, i32 0
  %109 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"** %108, align 8
  %110 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %109, null
  br i1 %110, label %192, label %111

111:                                              ; preds = %106, %125
  %112 = phi %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* [ %127, %125 ], [ %109, %106 ]
  %113 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %112, i64 0, i32 0, i32 0
  %114 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"** %113, align 8
  %115 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %114, null
  br i1 %115, label %125, label %116

116:                                              ; preds = %111, %121
  %117 = phi %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* [ %123, %121 ], [ %114, %111 ]
  %118 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %117, i64 0, i32 0, i32 0
  %119 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %118, align 8
  %120 = icmp eq %"class.v8::internal::compiler::Node"* %119, %54
  br i1 %120, label %129, label %121

121:                                              ; preds = %116
  %122 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %117, i64 0, i32 1
  %123 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"** %122, align 8
  %124 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %123, null
  br i1 %124, label %125, label %116

125:                                              ; preds = %121, %111
  %126 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %112, i64 0, i32 1
  %127 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"** %126, align 8
  %128 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %127, null
  br i1 %128, label %192, label %111

129:                                              ; preds = %116
  %130 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %117, i64 0, i32 0, i32 2
  %131 = load i8, i8* %130, align 8
  %132 = and i8 %131, 1
  %133 = load i32, i32* %91, align 8
  %134 = icmp eq i32 %133, 0
  %135 = icmp eq i8 %132, 0
  %136 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %55, align 8
  br i1 %134, label %137, label %150

137:                                              ; preds = %129
  br i1 %135, label %140, label %138

138:                                              ; preds = %137
  %139 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler7JSGraph12TrueConstantEv(%"class.v8::internal::compiler::JSGraph"* %136) #11
  br label %142

140:                                              ; preds = %137
  %141 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler7JSGraph13FalseConstantEv(%"class.v8::internal::compiler::JSGraph"* %136) #11
  br label %142

142:                                              ; preds = %140, %138
  %143 = phi %"class.v8::internal::compiler::Node"* [ %139, %138 ], [ %141, %140 ]
  %144 = ptrtoint %"class.v8::internal::compiler::Node"* %143 to i64
  %145 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %62, align 8
  %146 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %64, align 8
  %147 = icmp eq %"class.v8::internal::compiler::Node"** %145, %146
  br i1 %147, label %148, label %163, !prof !2

148:                                              ; preds = %142
  %149 = call %"class.v8::internal::compiler::Node"** @_ZN2v84base11SmallVectorIPNS_8internal8compiler4NodeELm2EE4GrowEv(%"class.v8::base::SmallVector"* nonnull %3) #11
  br label %163

150:                                              ; preds = %129
  %151 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %136, i64 0, i32 0, i32 1
  %152 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %151, align 8
  %153 = xor i1 %135, true
  %154 = zext i1 %153 to i32
  %155 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder13Int32ConstantEi(%"class.v8::internal::compiler::CommonOperatorBuilder"* %152, i32 %154) #11
  %156 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %58, %"class.v8::internal::compiler::Operator"* %155, i32 0, %"class.v8::internal::compiler::Node"** null, i1 zeroext false) #11
  %157 = ptrtoint %"class.v8::internal::compiler::Node"* %156 to i64
  %158 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %62, align 8
  %159 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %64, align 8
  %160 = icmp eq %"class.v8::internal::compiler::Node"** %158, %159
  br i1 %160, label %161, label %163, !prof !2

161:                                              ; preds = %150
  %162 = call %"class.v8::internal::compiler::Node"** @_ZN2v84base11SmallVectorIPNS_8internal8compiler4NodeELm2EE4GrowEv(%"class.v8::base::SmallVector"* nonnull %3) #11
  br label %163

163:                                              ; preds = %161, %150, %148, %142
  %164 = phi %"class.v8::internal::compiler::Node"** [ %149, %148 ], [ %145, %142 ], [ %162, %161 ], [ %158, %150 ]
  %165 = phi i64 [ %144, %148 ], [ %144, %142 ], [ %157, %161 ], [ %157, %150 ]
  %166 = bitcast %"class.v8::internal::compiler::Node"** %164 to i64*
  store i64 %165, i64* %166, align 8
  %167 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %164, i64 1
  store %"class.v8::internal::compiler::Node"** %167, %"class.v8::internal::compiler::Node"*** %62, align 8
  %168 = add nuw nsw i64 %94, 1
  %169 = icmp eq i64 %168, %92
  br i1 %169, label %170, label %93

170:                                              ; preds = %163
  %171 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %164, i64 1
  %172 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %64, align 8
  %173 = icmp eq %"class.v8::internal::compiler::Node"** %171, %172
  br i1 %173, label %174, label %176, !prof !2

174:                                              ; preds = %170
  %175 = call %"class.v8::internal::compiler::Node"** @_ZN2v84base11SmallVectorIPNS_8internal8compiler4NodeELm2EE4GrowEv(%"class.v8::base::SmallVector"* nonnull %3) #11
  br label %176

176:                                              ; preds = %81, %170, %174
  %177 = phi %"class.v8::internal::compiler::Node"** [ %175, %174 ], [ %171, %170 ], [ %73, %81 ]
  %178 = bitcast %"class.v8::internal::compiler::Node"** %177 to i64*
  store i64 %40, i64* %178, align 8
  %179 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %177, i64 1
  store %"class.v8::internal::compiler::Node"** %179, %"class.v8::internal::compiler::Node"*** %62, align 8
  %180 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %55, align 8
  %181 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %180, i64 0, i32 0, i32 1
  %182 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %181, align 8
  %183 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 6
  %184 = load i32, i32* %183, align 8
  %185 = icmp eq i32 %184, 0
  %186 = select i1 %185, i8 9, i8 4
  %187 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder3PhiENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::CommonOperatorBuilder"* %182, i8 zeroext %186, i32 %82) #11
  %188 = add nsw i32 %82, 1
  %189 = getelementptr inbounds %"class.v8::base::SmallVector", %"class.v8::base::SmallVector"* %3, i64 0, i32 0
  %190 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %189, align 8
  %191 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %58, %"class.v8::internal::compiler::Operator"* %187, i32 %188, %"class.v8::internal::compiler::Node"** %190, i1 zeroext false) #11
  call void @_ZN2v88internal8compiler14NodeProperties17ReplaceValueInputEPNS1_4NodeES4_i(%"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %191, i32 0) #11
  br label %192

192:                                              ; preds = %93, %106, %125, %176
  %193 = getelementptr inbounds %"class.v8::base::SmallVector", %"class.v8::base::SmallVector"* %3, i64 0, i32 0
  %194 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %193, align 8
  %195 = icmp eq %"class.v8::internal::compiler::Node"** %194, %73
  br i1 %195, label %198, label %196

196:                                              ; preds = %192
  %197 = bitcast %"class.v8::internal::compiler::Node"** %194 to i8*
  call void @free(i8* %197) #11
  br label %198

198:                                              ; preds = %192, %196
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %59) #11
  br label %199

199:                                              ; preds = %34, %198
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal8compiler17BranchElimination21ControlPathConditions15LookupConditionEPNS1_4NodeEPS5_Pb(%"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* nocapture readonly, %"class.v8::internal::compiler::Node"* readnone, %"class.v8::internal::compiler::Node"** nocapture, i8* nocapture) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %0, i64 0, i32 0, i32 0
  %6 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"** %5, align 8
  %7 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %6, null
  br i1 %7, label %34, label %8

8:                                                ; preds = %4, %22
  %9 = phi %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* [ %24, %22 ], [ %6, %4 ]
  %10 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %9, i64 0, i32 0, i32 0
  %11 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"** %10, align 8
  %12 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %11, null
  br i1 %12, label %22, label %13

13:                                               ; preds = %8, %18
  %14 = phi %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* [ %20, %18 ], [ %11, %8 ]
  %15 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %14, i64 0, i32 0, i32 0
  %16 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %15, align 8
  %17 = icmp eq %"class.v8::internal::compiler::Node"* %16, %1
  br i1 %17, label %26, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %14, i64 0, i32 1
  %20 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"** %19, align 8
  %21 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %20, null
  br i1 %21, label %22, label %13

22:                                               ; preds = %18, %8
  %23 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %9, i64 0, i32 1
  %24 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"** %23, align 8
  %25 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %24, null
  br i1 %25, label %34, label %8

26:                                               ; preds = %13
  %27 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %14, i64 0, i32 0, i32 2
  %28 = load i8, i8* %27, align 8
  %29 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %14, i64 0, i32 0, i32 1
  %30 = bitcast %"class.v8::internal::compiler::Node"** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = and i8 %28, 1
  store i8 %32, i8* %3, align 1
  %33 = bitcast %"class.v8::internal::compiler::Node"** %2 to i64*
  store i64 %31, i64* %33, align 8
  br label %34

34:                                               ; preds = %22, %4, %26
  %35 = phi i1 [ true, %26 ], [ false, %4 ], [ false, %22 ]
  ret i1 %35
}

declare %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler7JSGraph12TrueConstantEv(%"class.v8::internal::compiler::JSGraph"*) local_unnamed_addr #4

declare %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler7JSGraph13FalseConstantEv(%"class.v8::internal::compiler::JSGraph"*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder13Int32ConstantEi(%"class.v8::internal::compiler::CommonOperatorBuilder"*, i32) local_unnamed_addr #4

declare %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Operator"*, i32, %"class.v8::internal::compiler::Node"**, i1 zeroext) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::internal::compiler::CommonOperatorBuilder"* @_ZNK2v88internal8compiler17BranchElimination6commonEv(%"class.v8::internal::compiler::BranchElimination"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 1
  %3 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %3, i64 0, i32 0, i32 1
  %5 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %4, align 8
  ret %"class.v8::internal::compiler::CommonOperatorBuilder"* %5
}

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder3PhiENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::CommonOperatorBuilder"*, i8 zeroext, i32) local_unnamed_addr #4

declare void @_ZN2v88internal8compiler14NodeProperties17ReplaceValueInputEPNS1_4NodeES4_i(%"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler17BranchElimination25MarkAsSafetyCheckIfNeededEPNS1_4NodeES4_(%"class.v8::internal::compiler::BranchElimination"* nocapture readonly, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = lshr i32 %5, 24
  %7 = and i32 %6, 15
  %8 = icmp eq i32 %7, 15
  %9 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %10 = add i64 %9, 32
  br i1 %8, label %11, label %18

11:                                               ; preds = %3
  %12 = inttoptr i64 %10 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %13 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %12, align 8
  %14 = ptrtoint %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %13 to i64
  %15 = add i64 %14, 16
  %16 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %13, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  br label %18

18:                                               ; preds = %11, %3
  %19 = phi i32 [ %17, %11 ], [ %7, %3 ]
  %20 = phi i64 [ %15, %11 ], [ %10, %3 ]
  %21 = icmp sgt i32 %19, 0
  br i1 %21, label %22, label %26

22:                                               ; preds = %18
  %23 = inttoptr i64 %20 to %"class.v8::internal::compiler::Node"**
  %24 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %23, align 8
  %25 = icmp eq %"class.v8::internal::compiler::Node"* %24, null
  br i1 %25, label %45, label %26

26:                                               ; preds = %18, %22
  %27 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %28 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %27, align 8
  %29 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %28, i64 0, i32 2
  %30 = load i16, i16* %29, align 8
  switch i16 %30, label %31 [
    i16 62, label %45
    i16 15, label %45
    i16 16, label %45
  ]

31:                                               ; preds = %26
  %32 = tail call zeroext i8 @_ZN2v88internal8compiler15IsSafetyCheckOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %28) #11
  %33 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 0
  %34 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %33, align 8
  %35 = tail call zeroext i8 @_ZN2v88internal8compiler15IsSafetyCheckOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %34) #11
  %36 = tail call zeroext i8 @_ZN2v88internal8compiler19CombineSafetyChecksENS1_13IsSafetyCheckES2_(i8 zeroext %32, i8 zeroext %35) #11
  %37 = icmp eq i8 %32, %36
  br i1 %37, label %45, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 1
  %40 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %40, i64 0, i32 0, i32 1
  %42 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %41, align 8
  %43 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %27, align 8
  %44 = tail call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder17MarkAsSafetyCheckEPKNS1_8OperatorENS1_13IsSafetyCheckE(%"class.v8::internal::compiler::CommonOperatorBuilder"* %42, %"class.v8::internal::compiler::Operator"* %43, i8 zeroext %36) #11
  tail call void @_ZN2v88internal8compiler14NodeProperties8ChangeOpEPNS1_4NodeEPKNS1_8OperatorE(%"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Operator"* %44) #11
  br label %45

45:                                               ; preds = %26, %26, %26, %38, %31, %22
  ret void
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler17BranchElimination30TakeConditionsFromFirstControlEPNS1_4NodeE(%"class.v8::internal::compiler::BranchElimination"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %5 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %5, i64 0, i32 7
  %7 = load i32, i32* %6, align 4
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %10, label %9, !prof !3

9:                                                ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3, i64 0, i64 0)) #12
  unreachable

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %5, i64 0, i32 5
  %12 = load i32, i32* %11, align 4
  %13 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %5) #11
  %14 = zext i1 %13 to i32
  %15 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %4, align 8
  %16 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %15) #11
  %17 = zext i1 %16 to i32
  %18 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %4, align 8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %18, i64 0, i32 6
  %20 = load i32, i32* %19, align 8
  %21 = add i32 %12, %14
  %22 = add i32 %21, %17
  %23 = add i32 %22, %20
  %24 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %25 = load i32, i32* %24, align 4
  %26 = and i32 %25, 251658240
  %27 = icmp eq i32 %26, 251658240
  %28 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %29 = add i64 %28, 32
  br i1 %27, label %30, label %34

30:                                               ; preds = %10
  %31 = inttoptr i64 %29 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = add i64 %32, 16
  br label %34

34:                                               ; preds = %10, %30
  %35 = phi i64 [ %33, %30 ], [ %29, %10 ]
  %36 = inttoptr i64 %35 to %"class.v8::internal::compiler::Node"**
  %37 = sext i32 %23 to i64
  %38 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %36, i64 %37
  %39 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %38, align 8
  %40 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 3
  %41 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %39, i64 0, i32 3
  %42 = load i32, i32* %41, align 4
  %43 = and i32 %42, 16777215
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = icmp ugt i64 %46, %44
  br i1 %47, label %48, label %98

48:                                               ; preds = %34
  %49 = getelementptr inbounds %"class.v8::internal::compiler::NodeAuxData.673", %"class.v8::internal::compiler::NodeAuxData.673"* %40, i64 0, i32 0, i32 0, i32 0
  %50 = load i64*, i64** %49, align 8
  %51 = lshr i64 %44, 6
  %52 = getelementptr inbounds i64, i64* %50, i64 %51
  %53 = and i64 %44, 63
  %54 = shl i64 1, %53
  %55 = load i64, i64* %52, align 8
  %56 = and i64 %55, %54
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %98, label %58

58:                                               ; preds = %48
  %59 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 2
  %60 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %61 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"** %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast %"class.v8::internal::compiler::NodeAuxData"* %59 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = sub i64 %62, %64
  %66 = ashr exact i64 %65, 3
  %67 = icmp ugt i64 %66, %44
  br i1 %67, label %68, label %72

68:                                               ; preds = %58
  %69 = inttoptr i64 %64 to %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"*
  %70 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %69, i64 %44, i32 0, i32 0
  %71 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"** %70, align 8
  br label %72

72:                                               ; preds = %58, %68
  %73 = phi %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* [ %71, %68 ], [ null, %58 ]
  %74 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74)
  %75 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %3, i64 0, i32 0, i32 0
  store %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %73, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"** %75, align 8
  %76 = and i32 %25, 16777215
  %77 = zext i32 %76 to i64
  %78 = icmp ugt i64 %46, %77
  br i1 %78, label %83, label %79

79:                                               ; preds = %72
  %80 = getelementptr inbounds %"class.v8::internal::compiler::NodeAuxData.673", %"class.v8::internal::compiler::NodeAuxData.673"* %40, i64 0, i32 0, i32 0
  %81 = add nuw nsw i64 %77, 1
  tail call void @_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE6resizeEmb(%"class.std::__1::vector.675"* %80, i64 %81, i1 zeroext false) #11
  %82 = load i64*, i64** %49, align 8
  br label %83

83:                                               ; preds = %79, %72
  %84 = phi i64* [ %82, %79 ], [ %50, %72 ]
  %85 = lshr i64 %77, 6
  %86 = getelementptr inbounds i64, i64* %84, i64 %85
  %87 = and i64 %77, 63
  %88 = shl i64 1, %87
  %89 = load i64, i64* %86, align 8
  %90 = and i64 %89, %88
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %92, label %95

92:                                               ; preds = %83
  %93 = or i64 %89, %88
  store i64 %93, i64* %86, align 8
  %94 = call zeroext i1 @_ZN2v88internal8compiler11NodeAuxDataINS1_17BranchElimination21ControlPathConditionsEXadL_ZNS1_16DefaultConstructIS4_EET_vEEE3SetEPNS1_4NodeERKS4_(%"class.v8::internal::compiler::NodeAuxData"* %59, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* nonnull dereferenceable(8) %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74)
  br label %98

95:                                               ; preds = %83
  %96 = call zeroext i1 @_ZN2v88internal8compiler11NodeAuxDataINS1_17BranchElimination21ControlPathConditionsEXadL_ZNS1_16DefaultConstructIS4_EET_vEEE3SetEPNS1_4NodeERKS4_(%"class.v8::internal::compiler::NodeAuxData"* %59, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* nonnull dereferenceable(8) %3) #11
  %97 = select i1 %96, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* null
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74)
  br label %98

98:                                               ; preds = %48, %34, %92, %95
  %99 = phi %"class.v8::internal::compiler::Node"* [ null, %48 ], [ %1, %92 ], [ %97, %95 ], [ null, %34 ]
  ret %"class.v8::internal::compiler::Node"* %99
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::internal::compiler::Graph"* @_ZNK2v88internal8compiler17BranchElimination5graphEv(%"class.v8::internal::compiler::BranchElimination"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 1
  %3 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %4, align 8
  ret %"class.v8::internal::compiler::Graph"* %5
}

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder5ThrowEv(%"class.v8::internal::compiler::CommonOperatorBuilder"*) local_unnamed_addr #4

declare void @_ZN2v88internal8compiler14NodeProperties17MergeControlToEndEPNS1_5GraphEPNS1_21CommonOperatorBuilderEPNS1_4NodeE(%"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler17BranchElimination16UpdateConditionsEPNS1_4NodeENS2_21ControlPathConditionsES4_S4_bb(%"class.v8::internal::compiler::BranchElimination"*, %"class.v8::internal::compiler::Node"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, i1 zeroext, i1 zeroext) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", align 8
  %9 = alloca %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %9, i64 0, i32 0, i32 0
  store %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %2, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"** %10, align 8
  %11 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %2, null
  %12 = or i1 %11, %6
  br i1 %12, label %17, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %2, i64 0, i32 2
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %13, %7
  %18 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 4
  %19 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %18, align 8
  call void @_ZN2v88internal8compiler17BranchElimination21ControlPathConditions22AddConditionInNewBlockEPNS0_4ZoneEPNS1_4NodeES7_b(%"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* nonnull %9, %"class.v8::internal::Zone"* %19, %"class.v8::internal::compiler::Node"* %3, %"class.v8::internal::compiler::Node"* %4, i1 zeroext %5)
  br label %42

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 2
  %22 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %23 = load i32, i32* %22, align 4
  %24 = and i32 %23, 16777215
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %27 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.v8::internal::compiler::NodeAuxData"* %21 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 %28, %30
  %32 = ashr exact i64 %31, 3
  %33 = icmp ugt i64 %32, %25
  br i1 %33, label %34, label %38

34:                                               ; preds = %20
  %35 = inttoptr i64 %30 to %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"*
  %36 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %35, i64 %25, i32 0, i32 0
  %37 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"** %36, align 8
  br label %38

38:                                               ; preds = %20, %34
  %39 = phi %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* [ %37, %34 ], [ null, %20 ]
  %40 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 4
  %41 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %40, align 8
  call void @_ZN2v88internal8compiler17BranchElimination21ControlPathConditions12AddConditionEPNS0_4ZoneEPNS1_4NodeES7_bS3_(%"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* nonnull %9, %"class.v8::internal::Zone"* %41, %"class.v8::internal::compiler::Node"* %3, %"class.v8::internal::compiler::Node"* %4, i1 zeroext %5, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %39)
  br label %42

42:                                               ; preds = %38, %17
  %43 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %9 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45)
  %46 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %8 to i64*
  store i64 %44, i64* %46, align 8
  %47 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 3
  %48 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %49 = load i32, i32* %48, align 4
  %50 = and i32 %49, 16777215
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = icmp ugt i64 %53, %51
  br i1 %54, label %58, label %55

55:                                               ; preds = %42
  %56 = getelementptr inbounds %"class.v8::internal::compiler::NodeAuxData.673", %"class.v8::internal::compiler::NodeAuxData.673"* %47, i64 0, i32 0, i32 0
  %57 = add nuw nsw i64 %51, 1
  tail call void @_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE6resizeEmb(%"class.std::__1::vector.675"* %56, i64 %57, i1 zeroext false) #11
  br label %58

58:                                               ; preds = %55, %42
  %59 = getelementptr inbounds %"class.v8::internal::compiler::NodeAuxData.673", %"class.v8::internal::compiler::NodeAuxData.673"* %47, i64 0, i32 0, i32 0, i32 0
  %60 = load i64*, i64** %59, align 8
  %61 = lshr i64 %51, 6
  %62 = getelementptr inbounds i64, i64* %60, i64 %61
  %63 = and i64 %51, 63
  %64 = shl i64 1, %63
  %65 = load i64, i64* %62, align 8
  %66 = and i64 %65, %64
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %68, label %72

68:                                               ; preds = %58
  %69 = or i64 %65, %64
  store i64 %69, i64* %62, align 8
  %70 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 2
  %71 = call zeroext i1 @_ZN2v88internal8compiler11NodeAuxDataINS1_17BranchElimination21ControlPathConditionsEXadL_ZNS1_16DefaultConstructIS4_EET_vEEE3SetEPNS1_4NodeERKS4_(%"class.v8::internal::compiler::NodeAuxData"* %70, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* nonnull dereferenceable(8) %8) #11
  br label %76

72:                                               ; preds = %58
  %73 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 2
  %74 = call zeroext i1 @_ZN2v88internal8compiler11NodeAuxDataINS1_17BranchElimination21ControlPathConditionsEXadL_ZNS1_16DefaultConstructIS4_EET_vEEE3SetEPNS1_4NodeERKS4_(%"class.v8::internal::compiler::NodeAuxData"* %73, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* nonnull dereferenceable(8) %8) #11
  %75 = select i1 %74, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* null
  br label %76

76:                                               ; preds = %72, %68
  %77 = phi %"class.v8::internal::compiler::Node"* [ %1, %68 ], [ %75, %72 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45)
  ret %"class.v8::internal::compiler::Node"* %77
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare dereferenceable(32) %"class.v8::internal::compiler::DeoptimizeParameters"* @_ZN2v88internal8compiler22DeoptimizeParametersOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #4

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder10DeoptimizeENS0_14DeoptimizeKindENS0_16DeoptimizeReasonERKNS1_14FeedbackSourceE(%"class.v8::internal::compiler::CommonOperatorBuilder"*, i8 zeroext, i8 zeroext, %"struct.v8::internal::compiler::FeedbackSource"* dereferenceable(16)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler14FunctionalListINS2_INS1_17BranchElimination15BranchConditionEEEE21ResetToCommonAncestorES6_(%"class.v8::internal::compiler::FunctionalList"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %1 to i64
  %4 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList", %"class.v8::internal::compiler::FunctionalList"* %0, i64 0, i32 0
  %5 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"** %4, align 8
  %6 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %5, null
  %7 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %5, i64 0, i32 2
  %8 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %1, null
  br i1 %6, label %12, label %9

9:                                                ; preds = %2
  br i1 %8, label %41, label %10

10:                                               ; preds = %9
  %11 = load i64, i64* %7, align 8
  br label %29

12:                                               ; preds = %2
  br i1 %8, label %41, label %13

13:                                               ; preds = %12, %23
  %14 = phi %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* [ %27, %23 ], [ %1, %12 ]
  %15 = phi i64 [ %26, %23 ], [ %3, %12 ]
  %16 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %14, i64 0, i32 2
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %35, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %14, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %65, label %23, !prof !2

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %14, i64 0, i32 1
  %25 = bitcast %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = inttoptr i64 %26 to %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"*
  %28 = icmp eq i64 %26, 0
  br i1 %28, label %41, label %13

29:                                               ; preds = %10, %66
  %30 = phi %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* [ %70, %66 ], [ %1, %10 ]
  %31 = phi i64 [ %69, %66 ], [ %3, %10 ]
  %32 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %30, i64 0, i32 2
  %33 = load i64, i64* %32, align 8
  %34 = icmp ugt i64 %33, %11
  br i1 %34, label %61, label %35

35:                                               ; preds = %29, %13
  %36 = phi i64 [ %15, %13 ], [ %31, %29 ]
  %37 = inttoptr i64 %36 to %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"*
  %38 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %37, i64 0, i32 2
  %39 = bitcast %"class.v8::internal::compiler::FunctionalList"* %0 to i64*
  %40 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %5, null
  br i1 %40, label %82, label %72

41:                                               ; preds = %66, %23, %9, %12
  %42 = phi i64 [ %3, %12 ], [ %3, %9 ], [ %26, %23 ], [ %69, %66 ]
  %43 = inttoptr i64 %42 to %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"*
  %44 = bitcast %"class.v8::internal::compiler::FunctionalList"* %0 to i64*
  %45 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %5, null
  br i1 %45, label %82, label %46

46:                                               ; preds = %41, %55
  %47 = phi %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* [ %59, %55 ], [ %5, %41 ]
  %48 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %47, i64 0, i32 2
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %82, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %47, i64 0, i32 2
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %92, label %55, !prof !2

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %47, i64 0, i32 1
  %57 = bitcast %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"** %56 to i64*
  %58 = load i64, i64* %57, align 8
  store i64 %58, i64* %44, align 8
  %59 = inttoptr i64 %58 to %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"*
  %60 = icmp eq i64 %58, 0
  br i1 %60, label %78, label %46

61:                                               ; preds = %29
  %62 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %30, i64 0, i32 2
  %63 = load i64, i64* %62, align 8
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %66, !prof !2

65:                                               ; preds = %61, %19
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0)) #12
  unreachable

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %30, i64 0, i32 1
  %68 = bitcast %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"** %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = inttoptr i64 %69 to %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"*
  %71 = icmp eq i64 %69, 0
  br i1 %71, label %41, label %29

72:                                               ; preds = %35, %93
  %73 = phi %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* [ %97, %93 ], [ %5, %35 ]
  %74 = load i64, i64* %38, align 8
  %75 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %73, i64 0, i32 2
  %76 = load i64, i64* %75, align 8
  %77 = icmp ult i64 %74, %76
  br i1 %77, label %88, label %82

78:                                               ; preds = %55
  %79 = inttoptr i64 %58 to %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"*
  br label %82

80:                                               ; preds = %93
  %81 = inttoptr i64 %96 to %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"*
  br label %82

82:                                               ; preds = %80, %72, %78, %46, %35, %41
  %83 = phi i64* [ %44, %41 ], [ %39, %35 ], [ %44, %46 ], [ %44, %78 ], [ %39, %72 ], [ %39, %80 ]
  %84 = phi i64 [ 0, %41 ], [ %36, %35 ], [ 0, %46 ], [ 0, %78 ], [ %36, %72 ], [ %36, %80 ]
  %85 = phi %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* [ %43, %41 ], [ %37, %35 ], [ %43, %46 ], [ %43, %78 ], [ %37, %72 ], [ %37, %80 ]
  %86 = phi %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* [ %5, %41 ], [ %5, %35 ], [ %79, %78 ], [ %47, %46 ], [ %81, %80 ], [ %73, %72 ]
  %87 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %86, %85
  br i1 %87, label %126, label %99

88:                                               ; preds = %72
  %89 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %73, i64 0, i32 2
  %90 = load i64, i64* %89, align 8
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %92, label %93, !prof !2

92:                                               ; preds = %88, %51
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0)) #12
  unreachable

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %73, i64 0, i32 1
  %95 = bitcast %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"** %94 to i64*
  %96 = load i64, i64* %95, align 8
  store i64 %96, i64* %39, align 8
  %97 = inttoptr i64 %96 to %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"*
  %98 = icmp eq i64 %96, 0
  br i1 %98, label %80, label %72

99:                                               ; preds = %82, %120
  %100 = phi %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* [ %124, %120 ], [ %85, %82 ]
  %101 = phi %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* [ %114, %120 ], [ %86, %82 ]
  %102 = phi i64 [ %123, %120 ], [ %84, %82 ]
  %103 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %101, null
  br i1 %103, label %108, label %104

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %101, i64 0, i32 2
  %106 = load i64, i64* %105, align 8
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %109, !prof !2

108:                                              ; preds = %104, %99
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0)) #12
  unreachable

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %101, i64 0, i32 1
  %111 = bitcast %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"** %110 to i64*
  %112 = load i64, i64* %111, align 8
  store i64 %112, i64* %83, align 8
  %113 = icmp eq i64 %102, 0
  %114 = inttoptr i64 %112 to %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"*
  br i1 %113, label %119, label %115

115:                                              ; preds = %109
  %116 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %100, i64 0, i32 2
  %117 = load i64, i64* %116, align 8
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %119, label %120, !prof !2

119:                                              ; preds = %115, %109
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0)) #12
  unreachable

120:                                              ; preds = %115
  %121 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %100, i64 0, i32 1
  %122 = bitcast %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = inttoptr i64 %123 to %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"*
  %125 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %114, %124
  br i1 %125, label %126, label %99

126:                                              ; preds = %120, %82
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler17BranchElimination16UpdateConditionsEPNS1_4NodeENS2_21ControlPathConditionsE(%"class.v8::internal::compiler::BranchElimination"*, %"class.v8::internal::compiler::Node"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %4, i64 0, i32 0, i32 0
  store %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %2, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"** %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 3
  %7 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 16777215
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %12, %10
  br i1 %13, label %17, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.v8::internal::compiler::NodeAuxData.673", %"class.v8::internal::compiler::NodeAuxData.673"* %6, i64 0, i32 0, i32 0
  %16 = add nuw nsw i64 %10, 1
  tail call void @_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE6resizeEmb(%"class.std::__1::vector.675"* %15, i64 %16, i1 zeroext false) #11
  br label %17

17:                                               ; preds = %14, %3
  %18 = getelementptr inbounds %"class.v8::internal::compiler::NodeAuxData.673", %"class.v8::internal::compiler::NodeAuxData.673"* %6, i64 0, i32 0, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = lshr i64 %10, 6
  %21 = getelementptr inbounds i64, i64* %19, i64 %20
  %22 = and i64 %10, 63
  %23 = shl i64 1, %22
  %24 = load i64, i64* %21, align 8
  %25 = and i64 %24, %23
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %31

27:                                               ; preds = %17
  %28 = or i64 %24, %23
  store i64 %28, i64* %21, align 8
  %29 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 2
  %30 = call zeroext i1 @_ZN2v88internal8compiler11NodeAuxDataINS1_17BranchElimination21ControlPathConditionsEXadL_ZNS1_16DefaultConstructIS4_EET_vEEE3SetEPNS1_4NodeERKS4_(%"class.v8::internal::compiler::NodeAuxData"* %29, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* nonnull dereferenceable(8) %4)
  ret %"class.v8::internal::compiler::Node"* %1

31:                                               ; preds = %17
  %32 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 2
  %33 = call zeroext i1 @_ZN2v88internal8compiler11NodeAuxDataINS1_17BranchElimination21ControlPathConditionsEXadL_ZNS1_16DefaultConstructIS4_EET_vEEE3SetEPNS1_4NodeERKS4_(%"class.v8::internal::compiler::NodeAuxData"* %32, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* nonnull dereferenceable(8) %4)
  %34 = select i1 %33, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* null
  ret %"class.v8::internal::compiler::Node"* %34
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal8compiler11NodeAuxDataINS1_17BranchElimination21ControlPathConditionsEXadL_ZNS1_16DefaultConstructIS4_EET_vEEE3SetEPNS1_4NodeERKS4_(%"class.v8::internal::compiler::NodeAuxData"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, 16777215
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.v8::internal::compiler::NodeAuxData", %"class.v8::internal::compiler::NodeAuxData"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %10 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.v8::internal::compiler::NodeAuxData"* %0 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = ashr exact i64 %14, 3
  %16 = icmp ugt i64 %15, %8
  %17 = inttoptr i64 %13 to %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"*
  br i1 %16, label %26, label %18

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.v8::internal::compiler::NodeAuxData", %"class.v8::internal::compiler::NodeAuxData"* %0, i64 0, i32 0, i32 0
  %20 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  %21 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %4, i64 0, i32 0, i32 0
  store %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* null, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"** %21, align 8
  %22 = add nuw nsw i64 %8, 1
  %23 = sub nsw i64 %22, %15
  call void @_ZNSt3__16vectorIN2v88internal8compiler17BranchElimination21ControlPathConditionsENS2_13ZoneAllocatorIS5_EEE8__appendEmRKS5_(%"class.std::__1::vector.667"* %19, i64 %23, %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* nonnull dereferenceable(8) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  %24 = getelementptr inbounds %"class.v8::internal::compiler::NodeAuxData", %"class.v8::internal::compiler::NodeAuxData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"*, %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"** %24, align 8
  br label %26

26:                                               ; preds = %3, %18
  %27 = phi %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* [ %17, %3 ], [ %25, %18 ]
  %28 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %27, i64 %8
  %29 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %28, i64 0, i32 0, i32 0
  %30 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"** %29, align 8
  %31 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %30, null
  br i1 %31, label %35, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %30, i64 0, i32 2
  %34 = load i64, i64* %33, align 8
  br label %35

35:                                               ; preds = %32, %26
  %36 = phi i64 [ %34, %32 ], [ 0, %26 ]
  %37 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %2, i64 0, i32 0, i32 0
  %38 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"** %37, align 8
  %39 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %38, null
  %40 = ptrtoint %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %38 to i64
  br i1 %39, label %44, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %38, i64 0, i32 2
  %43 = load i64, i64* %42, align 8
  br label %44

44:                                               ; preds = %41, %35
  %45 = phi i64 [ %43, %41 ], [ 0, %35 ]
  %46 = icmp eq i64 %36, %45
  br i1 %46, label %47, label %103

47:                                               ; preds = %44
  %48 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %30, %38
  br i1 %48, label %105, label %49

49:                                               ; preds = %47, %97
  %50 = phi %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* [ %101, %97 ], [ %38, %47 ]
  %51 = phi %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* [ %99, %97 ], [ %30, %47 ]
  %52 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %51, i64 0, i32 0, i32 0
  %53 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"** %52, align 8
  %54 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %53, null
  br i1 %54, label %58, label %55

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %53, i64 0, i32 2
  %57 = load i64, i64* %56, align 8
  br label %58

58:                                               ; preds = %55, %49
  %59 = phi i64 [ %57, %55 ], [ 0, %49 ]
  %60 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %50, i64 0, i32 0, i32 0
  %61 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"** %60, align 8
  %62 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %61, null
  br i1 %62, label %66, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %61, i64 0, i32 2
  %65 = load i64, i64* %64, align 8
  br label %66

66:                                               ; preds = %63, %58
  %67 = phi i64 [ %65, %63 ], [ 0, %58 ]
  %68 = icmp eq i64 %59, %67
  br i1 %68, label %69, label %103

69:                                               ; preds = %66
  %70 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %53, %61
  br i1 %70, label %97, label %71

71:                                               ; preds = %69, %91
  %72 = phi %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* [ %95, %91 ], [ %61, %69 ]
  %73 = phi %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* [ %93, %91 ], [ %53, %69 ]
  %74 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %72, i64 0, i32 0, i32 0
  %75 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %74, align 8
  %76 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %72, i64 0, i32 0, i32 2
  %77 = load i8, i8* %76, align 8
  %78 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %73, i64 0, i32 0, i32 0
  %79 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %78, align 8
  %80 = icmp eq %"class.v8::internal::compiler::Node"* %79, %75
  br i1 %80, label %81, label %103

81:                                               ; preds = %71
  %82 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %72, i64 0, i32 0, i32 1
  %83 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %82, align 8
  %84 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %73, i64 0, i32 0, i32 1
  %85 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %84, align 8
  %86 = icmp eq %"class.v8::internal::compiler::Node"* %85, %83
  br i1 %86, label %87, label %103

87:                                               ; preds = %81
  %88 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %73, i64 0, i32 0, i32 2
  %89 = load i8, i8* %88, align 8, !range !4
  %90 = icmp eq i8 %89, %77
  br i1 %90, label %91, label %103

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %73, i64 0, i32 1
  %93 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"** %92, align 8
  %94 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %72, i64 0, i32 1
  %95 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"** %94, align 8
  %96 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %93, %95
  br i1 %96, label %97, label %71

97:                                               ; preds = %91, %69
  %98 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %51, i64 0, i32 1
  %99 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"** %98, align 8
  %100 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %50, i64 0, i32 1
  %101 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"** %100, align 8
  %102 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %99, %101
  br i1 %102, label %105, label %49

103:                                              ; preds = %66, %87, %81, %71, %44
  %104 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %28 to i64*
  store i64 %40, i64* %104, align 8
  br label %105

105:                                              ; preds = %97, %47, %103
  %106 = phi i1 [ true, %103 ], [ false, %47 ], [ false, %97 ]
  ret i1 %106
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler17BranchElimination21ControlPathConditions22AddConditionInNewBlockEPNS0_4ZoneEPNS1_4NodeES7_b(%"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* nocapture, %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = alloca [7 x i8], align 1
  %7 = alloca [7 x i8], align 1
  %8 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %0, i64 0, i32 0, i32 0
  %9 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"** %8, align 8
  %10 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %9, null
  br i1 %10, label %29, label %11

11:                                               ; preds = %5, %25
  %12 = phi %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* [ %27, %25 ], [ %9, %5 ]
  %13 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %12, i64 0, i32 0, i32 0
  %14 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"** %13, align 8
  %15 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %14, null
  br i1 %15, label %25, label %16

16:                                               ; preds = %11, %21
  %17 = phi %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* [ %23, %21 ], [ %14, %11 ]
  %18 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %17, i64 0, i32 0, i32 0
  %19 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %18, align 8
  %20 = icmp eq %"class.v8::internal::compiler::Node"* %19, %2
  br i1 %20, label %54, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %17, i64 0, i32 1
  %23 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"** %22, align 8
  %24 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %23, null
  br i1 %24, label %25, label %16

25:                                               ; preds = %21, %11
  %26 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %12, i64 0, i32 1
  %27 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"** %26, align 8
  %28 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %27, null
  br i1 %28, label %29, label %11

29:                                               ; preds = %25, %5
  %30 = zext i1 %4 to i8
  %31 = getelementptr inbounds [7 x i8], [7 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 7, i8* nonnull %31)
  %32 = getelementptr inbounds [7 x i8], [7 x i8]* %7, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %31, i8* nonnull align 1 %32, i64 7, i1 false)
  %33 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 2
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 3
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %36, %34
  %38 = icmp ult i64 %37, 40
  br i1 %38, label %39, label %41, !prof !2

39:                                               ; preds = %29
  %40 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 40) #11
  br label %43

41:                                               ; preds = %29
  %42 = add i64 %34, 40
  store i64 %42, i64* %33, align 8
  br label %43

43:                                               ; preds = %39, %41
  %44 = phi i64 [ %40, %39 ], [ %34, %41 ]
  %45 = inttoptr i64 %44 to i8*
  %46 = inttoptr i64 %44 to %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"*
  %47 = inttoptr i64 %44 to %"class.v8::internal::compiler::Node"**
  store %"class.v8::internal::compiler::Node"* %2, %"class.v8::internal::compiler::Node"** %47, align 8
  %48 = getelementptr inbounds i8, i8* %45, i64 8
  %49 = bitcast i8* %48 to %"class.v8::internal::compiler::Node"**
  store %"class.v8::internal::compiler::Node"* %3, %"class.v8::internal::compiler::Node"** %49, align 8
  %50 = getelementptr inbounds i8, i8* %45, i64 16
  store i8 %30, i8* %50, align 8
  %51 = getelementptr inbounds i8, i8* %45, i64 17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %51, i8* nonnull align 1 %31, i64 7, i1 false)
  %52 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %46, i64 0, i32 1
  store %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* null, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"** %52, align 8
  %53 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %46, i64 0, i32 2
  store i64 1, i64* %53, align 8
  call void @llvm.lifetime.end.p0i8(i64 7, i8* nonnull %31)
  br label %54

54:                                               ; preds = %16, %43
  %55 = phi i64 [ %44, %43 ], [ 0, %16 ]
  %56 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 2
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 3
  %59 = load i64, i64* %58, align 8
  %60 = sub i64 %59, %57
  %61 = icmp ult i64 %60, 24
  br i1 %61, label %62, label %64, !prof !2

62:                                               ; preds = %54
  %63 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 24) #11
  br label %66

64:                                               ; preds = %54
  %65 = add i64 %57, 24
  store i64 %65, i64* %56, align 8
  br label %66

66:                                               ; preds = %64, %62
  %67 = phi i64 [ %63, %62 ], [ %57, %64 ]
  %68 = inttoptr i64 %67 to %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"*
  %69 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"** %8, align 8
  %70 = inttoptr i64 %67 to i64*
  store i64 %55, i64* %70, align 8
  %71 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %68, i64 0, i32 1
  store %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %69, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"** %71, align 8
  %72 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %68, i64 0, i32 2
  %73 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %69, null
  br i1 %73, label %78, label %74

74:                                               ; preds = %66
  %75 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %69, i64 0, i32 2
  %76 = load i64, i64* %75, align 8
  %77 = add i64 %76, 1
  br label %78

78:                                               ; preds = %66, %74
  %79 = phi i64 [ %77, %74 ], [ 1, %66 ]
  store i64 %79, i64* %72, align 8
  store %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %68, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"** %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler17BranchElimination21ControlPathConditions12AddConditionEPNS0_4ZoneEPNS1_4NodeES7_bS3_(%"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* nocapture, %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, i1 zeroext, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"*) local_unnamed_addr #0 align 2 {
  %7 = alloca [7 x i8], align 1
  %8 = alloca %"class.v8::internal::compiler::FunctionalList.680", align 8
  %9 = alloca %"struct.v8::internal::compiler::BranchElimination::BranchCondition", align 8
  %10 = alloca [7 x i8], align 1
  %11 = zext i1 %4 to i8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %0, i64 0, i32 0, i32 0
  %13 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"** %12, align 8
  %14 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %13, null
  %15 = bitcast %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %13 to i64*
  br i1 %14, label %34, label %16

16:                                               ; preds = %6, %30
  %17 = phi %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* [ %32, %30 ], [ %13, %6 ]
  %18 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %17, i64 0, i32 0, i32 0
  %19 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"** %18, align 8
  %20 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %19, null
  br i1 %20, label %30, label %21

21:                                               ; preds = %16, %26
  %22 = phi %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* [ %28, %26 ], [ %19, %16 ]
  %23 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %22, i64 0, i32 0, i32 0
  %24 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %23, align 8
  %25 = icmp eq %"class.v8::internal::compiler::Node"* %24, %2
  br i1 %25, label %120, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %22, i64 0, i32 1
  %28 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"** %27, align 8
  %29 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %28, null
  br i1 %29, label %30, label %21

30:                                               ; preds = %26, %16
  %31 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %17, i64 0, i32 1
  %32 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"** %31, align 8
  %33 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %32, null
  br i1 %33, label %34, label %16

34:                                               ; preds = %30, %6
  %35 = bitcast %"class.v8::internal::compiler::FunctionalList.680"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #11
  %36 = bitcast %"class.v8::internal::compiler::FunctionalList.680"* %8 to i64*
  %37 = load i64, i64* %15, align 8
  store i64 %37, i64* %36, align 8
  %38 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %5, null
  %39 = inttoptr i64 %37 to %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"*
  br i1 %38, label %50, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %5, i64 0, i32 2
  %42 = load i64, i64* %41, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %50, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"struct.v8::internal::compiler::BranchElimination::BranchCondition", %"struct.v8::internal::compiler::BranchElimination::BranchCondition"* %9, i64 0, i32 0
  store %"class.v8::internal::compiler::Node"* %2, %"class.v8::internal::compiler::Node"** %45, align 8
  %46 = getelementptr inbounds %"struct.v8::internal::compiler::BranchElimination::BranchCondition", %"struct.v8::internal::compiler::BranchElimination::BranchCondition"* %9, i64 0, i32 1
  store %"class.v8::internal::compiler::Node"* %3, %"class.v8::internal::compiler::Node"** %46, align 8
  %47 = getelementptr inbounds %"struct.v8::internal::compiler::BranchElimination::BranchCondition", %"struct.v8::internal::compiler::BranchElimination::BranchCondition"* %9, i64 0, i32 2
  store i8 %11, i8* %47, align 8
  %48 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %5, i64 0, i32 0, i32 0
  %49 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"** %48, align 8
  call void @_ZN2v88internal8compiler14FunctionalListINS1_17BranchElimination15BranchConditionEE9PushFrontES4_PNS0_4ZoneES5_(%"class.v8::internal::compiler::FunctionalList.680"* nonnull %8, %"struct.v8::internal::compiler::BranchElimination::BranchCondition"* nonnull byval(%"struct.v8::internal::compiler::BranchElimination::BranchCondition") align 8 %9, %"class.v8::internal::Zone"* %1, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %49)
  br label %82

50:                                               ; preds = %34, %40
  %51 = getelementptr inbounds [7 x i8], [7 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 7, i8* nonnull %51)
  %52 = getelementptr inbounds [7 x i8], [7 x i8]* %10, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %51, i8* nonnull align 1 %52, i64 7, i1 false)
  %53 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList.680", %"class.v8::internal::compiler::FunctionalList.680"* %8, i64 0, i32 0
  %54 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 2
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 3
  %57 = load i64, i64* %56, align 8
  %58 = sub i64 %57, %55
  %59 = icmp ult i64 %58, 40
  br i1 %59, label %60, label %62, !prof !2

60:                                               ; preds = %50
  %61 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 40) #11
  br label %64

62:                                               ; preds = %50
  %63 = add i64 %55, 40
  store i64 %63, i64* %54, align 8
  br label %64

64:                                               ; preds = %62, %60
  %65 = phi i64 [ %61, %60 ], [ %55, %62 ]
  %66 = inttoptr i64 %65 to i8*
  %67 = inttoptr i64 %65 to %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"*
  %68 = inttoptr i64 %65 to %"class.v8::internal::compiler::Node"**
  store %"class.v8::internal::compiler::Node"* %2, %"class.v8::internal::compiler::Node"** %68, align 8
  %69 = getelementptr inbounds i8, i8* %66, i64 8
  %70 = bitcast i8* %69 to %"class.v8::internal::compiler::Node"**
  store %"class.v8::internal::compiler::Node"* %3, %"class.v8::internal::compiler::Node"** %70, align 8
  %71 = getelementptr inbounds i8, i8* %66, i64 16
  store i8 %11, i8* %71, align 8
  %72 = getelementptr inbounds i8, i8* %66, i64 17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %72, i8* nonnull align 1 %51, i64 7, i1 false)
  %73 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %67, i64 0, i32 1
  store %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %39, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"** %73, align 8
  %74 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %67, i64 0, i32 2
  %75 = icmp eq i64 %37, 0
  br i1 %75, label %80, label %76

76:                                               ; preds = %64
  %77 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %39, i64 0, i32 2
  %78 = load i64, i64* %77, align 8
  %79 = add i64 %78, 1
  br label %80

80:                                               ; preds = %64, %76
  %81 = phi i64 [ %79, %76 ], [ 1, %64 ]
  store i64 %81, i64* %74, align 8
  store %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %67, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"** %53, align 8
  call void @llvm.lifetime.end.p0i8(i64 7, i8* nonnull %51)
  br label %82

82:                                               ; preds = %80, %44
  %83 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"** %12, align 8
  %84 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %83, null
  br i1 %84, label %89, label %85

85:                                               ; preds = %82
  %86 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %83, i64 0, i32 2
  %87 = load i64, i64* %86, align 8
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %89, label %90, !prof !2

89:                                               ; preds = %85, %82
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0)) #12
  unreachable

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %83, i64 0, i32 1
  %92 = bitcast %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %0 to i64*
  store i64 %93, i64* %94, align 8
  %95 = load i64, i64* %36, align 8
  %96 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 2
  %97 = load i64, i64* %96, align 8
  %98 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 3
  %99 = load i64, i64* %98, align 8
  %100 = sub i64 %99, %97
  %101 = icmp ult i64 %100, 24
  br i1 %101, label %102, label %104, !prof !2

102:                                              ; preds = %90
  %103 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 24) #11
  br label %106

104:                                              ; preds = %90
  %105 = add i64 %97, 24
  store i64 %105, i64* %96, align 8
  br label %106

106:                                              ; preds = %104, %102
  %107 = phi i64 [ %103, %102 ], [ %97, %104 ]
  %108 = inttoptr i64 %107 to %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"*
  %109 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"** %12, align 8
  %110 = inttoptr i64 %107 to i64*
  store i64 %95, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %108, i64 0, i32 1
  store %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %109, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"** %111, align 8
  %112 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %108, i64 0, i32 2
  %113 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %109, null
  br i1 %113, label %118, label %114

114:                                              ; preds = %106
  %115 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %109, i64 0, i32 2
  %116 = load i64, i64* %115, align 8
  %117 = add i64 %116, 1
  br label %118

118:                                              ; preds = %106, %114
  %119 = phi i64 [ %117, %114 ], [ 1, %106 ]
  store i64 %119, i64* %112, align 8
  store %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %108, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"** %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #11
  br label %120

120:                                              ; preds = %21, %118
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal8compiler17BranchElimination21ControlPathConditions15LookupConditionEPNS1_4NodeE(%"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* nocapture readonly, %"class.v8::internal::compiler::Node"* readnone) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %0, i64 0, i32 0, i32 0
  %4 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"** %3, align 8
  %5 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %4, null
  br i1 %5, label %24, label %6

6:                                                ; preds = %2, %20
  %7 = phi %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* [ %22, %20 ], [ %4, %2 ]
  %8 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %7, i64 0, i32 0, i32 0
  %9 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"** %8, align 8
  %10 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %9, null
  br i1 %10, label %20, label %11

11:                                               ; preds = %6, %16
  %12 = phi %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* [ %18, %16 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %12, i64 0, i32 0, i32 0
  %14 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %13, align 8
  %15 = icmp eq %"class.v8::internal::compiler::Node"* %14, %1
  br i1 %15, label %24, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %12, i64 0, i32 1
  %18 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"** %17, align 8
  %19 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %18, null
  br i1 %19, label %20, label %11

20:                                               ; preds = %16, %6
  %21 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %7, i64 0, i32 1
  %22 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"** %21, align 8
  %23 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"* %22, null
  br i1 %23, label %24, label %6

24:                                               ; preds = %20, %11, %2
  %25 = phi i1 [ false, %2 ], [ true, %11 ], [ false, %20 ]
  ret i1 %25
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler14FunctionalListINS1_17BranchElimination15BranchConditionEE9PushFrontES4_PNS0_4ZoneES5_(%"class.v8::internal::compiler::FunctionalList.680"*, %"struct.v8::internal::compiler::BranchElimination::BranchCondition"* byval(%"struct.v8::internal::compiler::BranchElimination::BranchCondition") align 8, %"class.v8::internal::Zone"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"struct.v8::internal::compiler::BranchElimination::BranchCondition", align 8
  %6 = alloca %"struct.v8::internal::compiler::BranchElimination::BranchCondition", align 8
  %7 = ptrtoint %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %3 to i64
  %8 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %3, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %3, i64 0, i32 2
  %11 = load i64, i64* %10, align 8
  br label %12

12:                                               ; preds = %4, %9
  %13 = phi i64 [ %11, %9 ], [ 0, %4 ]
  %14 = getelementptr inbounds %"class.v8::internal::compiler::FunctionalList.680", %"class.v8::internal::compiler::FunctionalList.680"* %0, i64 0, i32 0
  %15 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"** %14, align 8
  %16 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %15, null
  br i1 %16, label %21, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %15, i64 0, i32 2
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %19, 1
  br label %21

21:                                               ; preds = %12, %17
  %22 = phi i64 [ %20, %17 ], [ 1, %12 ]
  %23 = icmp eq i64 %13, %22
  br i1 %23, label %24, label %93

24:                                               ; preds = %21
  %25 = getelementptr inbounds %"struct.v8::internal::compiler::BranchElimination::BranchCondition", %"struct.v8::internal::compiler::BranchElimination::BranchCondition"* %1, i64 0, i32 0
  %26 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %25, align 8
  %27 = getelementptr inbounds %"struct.v8::internal::compiler::BranchElimination::BranchCondition", %"struct.v8::internal::compiler::BranchElimination::BranchCondition"* %1, i64 0, i32 2
  %28 = load i8, i8* %27, align 8
  %29 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %3, i64 0, i32 0, i32 0
  %30 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %29, align 8
  %31 = icmp eq %"class.v8::internal::compiler::Node"* %30, %26
  br i1 %31, label %32, label %93

32:                                               ; preds = %24
  %33 = getelementptr inbounds %"struct.v8::internal::compiler::BranchElimination::BranchCondition", %"struct.v8::internal::compiler::BranchElimination::BranchCondition"* %1, i64 0, i32 1
  %34 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %33, align 8
  %35 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %3, i64 0, i32 0, i32 1
  %36 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %35, align 8
  %37 = icmp eq %"class.v8::internal::compiler::Node"* %36, %34
  br i1 %37, label %38, label %93

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %3, i64 0, i32 0, i32 2
  %40 = load i8, i8* %39, align 8, !range !4
  %41 = icmp eq i8 %40, %28
  br i1 %41, label %42, label %93

42:                                               ; preds = %38
  br i1 %8, label %47, label %43

43:                                               ; preds = %42
  %44 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %3, i64 0, i32 2
  %45 = load i64, i64* %44, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %48, !prof !2

47:                                               ; preds = %43, %42
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0)) #12
  unreachable

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %3, i64 0, i32 1
  %50 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"** %49, align 8
  %51 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %50, null
  br i1 %51, label %55, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %50, i64 0, i32 2
  %54 = load i64, i64* %53, align 8
  br label %55

55:                                               ; preds = %52, %48
  %56 = phi i64 [ %54, %52 ], [ 0, %48 ]
  br i1 %16, label %60, label %57

57:                                               ; preds = %55
  %58 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %15, i64 0, i32 2
  %59 = load i64, i64* %58, align 8
  br label %60

60:                                               ; preds = %57, %55
  %61 = phi i64 [ %59, %57 ], [ 0, %55 ]
  %62 = icmp eq i64 %56, %61
  br i1 %62, label %63, label %93

63:                                               ; preds = %60
  %64 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %50, %15
  br i1 %64, label %91, label %65

65:                                               ; preds = %63, %85
  %66 = phi %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* [ %89, %85 ], [ %15, %63 ]
  %67 = phi %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* [ %87, %85 ], [ %50, %63 ]
  %68 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %66, i64 0, i32 0, i32 0
  %69 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %68, align 8
  %70 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %66, i64 0, i32 0, i32 2
  %71 = load i8, i8* %70, align 8
  %72 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %67, i64 0, i32 0, i32 0
  %73 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %72, align 8
  %74 = icmp eq %"class.v8::internal::compiler::Node"* %73, %69
  br i1 %74, label %75, label %93

75:                                               ; preds = %65
  %76 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %66, i64 0, i32 0, i32 1
  %77 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %76, align 8
  %78 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %67, i64 0, i32 0, i32 1
  %79 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %78, align 8
  %80 = icmp eq %"class.v8::internal::compiler::Node"* %79, %77
  br i1 %80, label %81, label %93

81:                                               ; preds = %75
  %82 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %67, i64 0, i32 0, i32 2
  %83 = load i8, i8* %82, align 8, !range !4
  %84 = icmp eq i8 %83, %71
  br i1 %84, label %85, label %93

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %67, i64 0, i32 1
  %87 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"** %86, align 8
  %88 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %66, i64 0, i32 1
  %89 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"** %88, align 8
  %90 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %87, %89
  br i1 %90, label %91, label %65

91:                                               ; preds = %85, %63
  %92 = bitcast %"class.v8::internal::compiler::FunctionalList.680"* %0 to i64*
  store i64 %7, i64* %92, align 8
  br label %121

93:                                               ; preds = %65, %75, %81, %24, %32, %60, %21, %38
  %94 = bitcast %"struct.v8::internal::compiler::BranchElimination::BranchCondition"* %1 to i8*
  %95 = bitcast %"struct.v8::internal::compiler::BranchElimination::BranchCondition"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %95)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %95, i8* nonnull align 8 %94, i64 24, i1 false)
  %96 = bitcast %"struct.v8::internal::compiler::BranchElimination::BranchCondition"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %96)
  %97 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2, i64 0, i32 2
  %98 = load i64, i64* %97, align 8
  %99 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2, i64 0, i32 3
  %100 = load i64, i64* %99, align 8
  %101 = sub i64 %100, %98
  %102 = icmp ult i64 %101, 40
  br i1 %102, label %103, label %105, !prof !2

103:                                              ; preds = %93
  %104 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %2, i64 40) #11
  br label %107

105:                                              ; preds = %93
  %106 = add i64 %98, 40
  store i64 %106, i64* %97, align 8
  br label %107

107:                                              ; preds = %105, %103
  %108 = phi i64 [ %104, %103 ], [ %98, %105 ]
  %109 = inttoptr i64 %108 to i8*
  %110 = inttoptr i64 %108 to %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %96, i8* nonnull align 8 %95, i64 24, i1 false) #11
  %111 = load %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"*, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"** %14, align 8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %109, i8* nonnull align 8 %96, i64 24, i1 false) #11
  %112 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %110, i64 0, i32 1
  store %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %111, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"** %112, align 8
  %113 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %110, i64 0, i32 2
  %114 = icmp eq %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %111, null
  br i1 %114, label %119, label %115

115:                                              ; preds = %107
  %116 = getelementptr inbounds %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons", %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %111, i64 0, i32 2
  %117 = load i64, i64* %116, align 8
  %118 = add i64 %117, 1
  br label %119

119:                                              ; preds = %107, %115
  %120 = phi i64 [ %118, %115 ], [ 1, %107 ]
  store i64 %120, i64* %113, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %96)
  store %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"* %110, %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition>::Cons"** %14, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %95)
  br label %121

121:                                              ; preds = %119, %91
  ret void
}

declare zeroext i8 @_ZN2v88internal8compiler15IsSafetyCheckOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #4

declare zeroext i8 @_ZN2v88internal8compiler19CombineSafetyChecksENS1_13IsSafetyCheckES2_(i8 zeroext, i8 zeroext) local_unnamed_addr #4

declare void @_ZN2v88internal8compiler14NodeProperties8ChangeOpEPNS1_4NodeEPKNS1_8OperatorE(%"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Operator"*) local_unnamed_addr #4

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder17MarkAsSafetyCheckEPKNS1_8OperatorENS1_13IsSafetyCheckE(%"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::Operator"*, i8 zeroext) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::internal::Isolate"* @_ZNK2v88internal8compiler17BranchElimination7isolateEv(%"class.v8::internal::compiler::BranchElimination"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination", %"class.v8::internal::compiler::BranchElimination"* %0, i64 0, i32 1
  %3 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %3, i64 0, i32 1
  %5 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  ret %"class.v8::internal::Isolate"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK2v88internal8compiler17BranchElimination12reducer_nameEv(%"class.v8::internal::compiler::BranchElimination"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6, i64 0, i64 0)
}

declare void @_ZN2v88internal8compiler7Reducer8FinalizeEv(%"class.v8::internal::compiler::Reducer"*) unnamed_addr #4

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder4DeadEv(%"class.v8::internal::compiler::CommonOperatorBuilder"*) local_unnamed_addr #4

declare zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #4

declare zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

declare i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEEC2EmRKbRKS4_(%"class.std::__1::vector.675"*, i64, i8* dereferenceable(1), %"class.v8::internal::ZoneAllocator.682"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.std::__1::vector.675", %"class.std::__1::vector.675"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::vector.675", %"class.std::__1::vector.675"* %0, i64 0, i32 1
  %7 = bitcast %"class.v8::internal::ZoneAllocator.682"* %3 to i64*
  %8 = bitcast %"class.std::__1::vector.675"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false)
  %9 = load i64, i64* %7, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.675", %"class.std::__1::vector.675"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector.675", %"class.std::__1::vector.675"* %0, i64 0, i32 2, i32 1
  %12 = bitcast %"struct.std::__1::__compressed_pair_elem.677"* %11 to i64*
  store i64 %9, i64* %12, align 8
  %13 = icmp eq i64 %1, 0
  %14 = inttoptr i64 %9 to %"class.v8::internal::Zone"*
  br i1 %13, label %68, label %15

15:                                               ; preds = %4
  %16 = icmp ugt i64 %1, 17179869120
  br i1 %16, label %17, label %19

17:                                               ; preds = %15
  %18 = bitcast %"class.std::__1::vector.675"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %18) #12
  unreachable

19:                                               ; preds = %15
  %20 = add nsw i64 %1, -1
  %21 = lshr i64 %20, 6
  %22 = add nuw nsw i64 %21, 1
  %23 = shl nuw nsw i64 %22, 3
  %24 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %14, i64 0, i32 2
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %14, i64 0, i32 3
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %27, %25
  %29 = icmp ugt i64 %23, %28
  br i1 %29, label %30, label %32, !prof !2

30:                                               ; preds = %19
  %31 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %14, i64 %23) #11
  br label %34

32:                                               ; preds = %19
  %33 = add i64 %25, %23
  store i64 %33, i64* %24, align 8
  br label %34

34:                                               ; preds = %32, %30
  %35 = phi i64 [ %31, %30 ], [ %25, %32 ]
  %36 = inttoptr i64 %35 to i64*
  store i64* %36, i64** %5, align 8
  store i64 0, i64* %6, align 8
  store i64 %22, i64* %10, align 8
  %37 = load i8, i8* %2, align 1, !range !4
  %38 = icmp eq i8 %37, 0
  store i64 %1, i64* %6, align 8
  %39 = icmp ult i64 %1, 65
  %40 = getelementptr inbounds i64, i64* %36, i64 %21
  %41 = select i1 %39, i64* %36, i64* %40
  store i64 0, i64* %41, align 8
  %42 = bitcast %"class.std::__1::vector.675"* %0 to i64*
  %43 = load i64, i64* %42, align 8, !noalias !5
  %44 = inttoptr i64 %43 to i8*
  %45 = lshr i64 %1, 6
  %46 = shl nuw nsw i64 %45, 3
  br i1 %38, label %57, label %47

47:                                               ; preds = %34
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 -1, i64 %46, i1 false) #11
  %48 = and i64 %1, 63
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %68, label %50

50:                                               ; preds = %47
  %51 = inttoptr i64 %43 to i64*
  %52 = getelementptr inbounds i64, i64* %51, i64 %45
  %53 = sub nuw nsw i64 64, %48
  %54 = lshr i64 -1, %53
  %55 = load i64, i64* %52, align 8
  %56 = or i64 %55, %54
  store i64 %56, i64* %52, align 8
  br label %68

57:                                               ; preds = %34
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 %46, i1 false) #11
  %58 = and i64 %1, 63
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %68, label %60

60:                                               ; preds = %57
  %61 = inttoptr i64 %43 to i64*
  %62 = getelementptr inbounds i64, i64* %61, i64 %45
  %63 = sub nuw nsw i64 64, %58
  %64 = lshr i64 -1, %63
  %65 = xor i64 %64, -1
  %66 = load i64, i64* %62, align 8
  %67 = and i64 %66, %65
  store i64 %67, i64* %62, align 8
  br label %68

68:                                               ; preds = %60, %57, %50, %47, %4
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #8

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::compiler::Node"** @_ZN2v84base11SmallVectorIPNS_8internal8compiler4NodeELm2EE4GrowEv(%"class.v8::base::SmallVector"*) local_unnamed_addr #9 comdat align 2 {
  %2 = tail call %"class.v8::internal::compiler::Node"** @_ZN2v84base11SmallVectorIPNS_8internal8compiler4NodeELm2EE4GrowEm(%"class.v8::base::SmallVector"* %0, i64 0)
  ret %"class.v8::internal::compiler::Node"** %2
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::compiler::Node"** @_ZN2v84base11SmallVectorIPNS_8internal8compiler4NodeELm2EE4GrowEm(%"class.v8::base::SmallVector"*, i64) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::base::SmallVector", %"class.v8::base::SmallVector"* %0, i64 0, i32 1
  %4 = bitcast %"class.v8::internal::compiler::Node"*** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.v8::base::SmallVector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = getelementptr inbounds %"class.v8::base::SmallVector", %"class.v8::base::SmallVector"* %0, i64 0, i32 2
  %11 = bitcast %"class.v8::internal::compiler::Node"*** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %12, %7
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %14, %1
  %16 = select i1 %15, i64 %14, i64 %1
  %17 = tail call i64 @_ZN2v84base4bits21RoundUpToPowerOfTwo64Em(i64 %16) #11
  %18 = shl i64 %17, 3
  %19 = tail call noalias i8* @malloc(i64 %18) #11
  %20 = bitcast i8* %19 to %"class.v8::internal::compiler::Node"**
  %21 = icmp eq i8* %19, null
  br i1 %21, label %22, label %23

22:                                               ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.7, i64 0, i64 0)) #12
  unreachable

23:                                               ; preds = %2
  %24 = bitcast %"class.v8::base::SmallVector"* %0 to i8**
  %25 = load i8*, i8** %24, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %19, i8* align 1 %25, i64 %8, i1 false) #11
  %26 = getelementptr inbounds %"class.v8::base::SmallVector", %"class.v8::base::SmallVector"* %0, i64 0, i32 3, i32 0, i64 0
  %27 = icmp eq i8* %25, %26
  br i1 %27, label %29, label %28

28:                                               ; preds = %23
  tail call void @free(i8* %25) #11
  br label %29

29:                                               ; preds = %23, %28
  store i8* %19, i8** %24, align 8
  %30 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %20, i64 %9
  store %"class.v8::internal::compiler::Node"** %30, %"class.v8::internal::compiler::Node"*** %3, align 8
  %31 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %20, i64 %17
  store %"class.v8::internal::compiler::Node"** %31, %"class.v8::internal::compiler::Node"*** %10, align 8
  ret %"class.v8::internal::compiler::Node"** %30
}

declare i64 @_ZN2v84base4bits21RoundUpToPowerOfTwo64Em(i64) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE6resizeEmb(%"class.std::__1::vector.675"*, i64, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::vector.675", align 16
  %5 = getelementptr inbounds %"class.std::__1::vector.675", %"class.std::__1::vector.675"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64 %6, %1
  br i1 %7, label %8, label %159

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::vector.675", %"class.std::__1::vector.675"* %0, i64 0, i32 2, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 6
  %12 = sub i64 %1, %6
  %13 = icmp ult i64 %11, %12
  %14 = sub i64 %11, %12
  %15 = icmp ugt i64 %6, %14
  %16 = or i1 %13, %15
  br i1 %16, label %25, label %17

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.std::__1::vector.675", %"class.std::__1::vector.675"* %0, i64 0, i32 0
  %19 = load i64*, i64** %18, align 8, !noalias !8
  %20 = lshr i64 %6, 6
  %21 = getelementptr inbounds i64, i64* %19, i64 %20
  %22 = trunc i64 %6 to i32
  %23 = and i32 %22, 63
  %24 = ptrtoint i64* %21 to i64
  store i64 %1, i64* %5, align 8
  br label %86

25:                                               ; preds = %8
  %26 = bitcast %"class.std::__1::vector.675"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %26) #11
  %27 = getelementptr inbounds %"class.std::__1::vector.675", %"class.std::__1::vector.675"* %0, i64 0, i32 2, i32 1, i32 0
  %28 = bitcast %"class.v8::internal::ZoneAllocator.678"* %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::vector.675", %"class.std::__1::vector.675"* %4, i64 0, i32 2, i32 0, i32 0
  %31 = getelementptr inbounds %"class.std::__1::vector.675", %"class.std::__1::vector.675"* %4, i64 0, i32 2, i32 1
  %32 = bitcast %"struct.std::__1::__compressed_pair_elem.677"* %31 to i64*
  %33 = bitcast %"class.std::__1::vector.675"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %33, i8 0, i64 24, i1 false)
  store i64 %29, i64* %32, align 8
  %34 = icmp ugt i64 %1, 17179869120
  br i1 %34, label %35, label %37

35:                                               ; preds = %25
  %36 = bitcast %"class.std::__1::vector.675"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %36) #12
  unreachable

37:                                               ; preds = %25
  %38 = icmp ult i64 %11, 8589934560
  br i1 %38, label %39, label %45

39:                                               ; preds = %37
  %40 = shl i64 %10, 7
  %41 = add nuw nsw i64 %1, 63
  %42 = and i64 %41, -64
  %43 = icmp ult i64 %40, %42
  %44 = select i1 %43, i64 %42, i64 %40
  br label %45

45:                                               ; preds = %39, %37
  %46 = phi i64 [ %44, %39 ], [ 17179869120, %37 ]
  call void @_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE7reserveEm(%"class.std::__1::vector.675"* nonnull %4, i64 %46)
  %47 = load i64, i64* %5, align 8
  %48 = add i64 %47, %12
  %49 = getelementptr inbounds %"class.std::__1::vector.675", %"class.std::__1::vector.675"* %4, i64 0, i32 1
  store i64 %48, i64* %49, align 8
  %50 = getelementptr inbounds %"class.std::__1::vector.675", %"class.std::__1::vector.675"* %0, i64 0, i32 0
  %51 = load i64*, i64** %50, align 8
  %52 = bitcast %"class.std::__1::vector.675"* %4 to i64*
  %53 = load i64, i64* %52, align 16, !noalias !13
  %54 = icmp sgt i64 %47, 0
  br i1 %54, label %55, label %76

55:                                               ; preds = %45
  %56 = inttoptr i64 %53 to i8*
  %57 = lshr i64 %47, 6
  %58 = bitcast i64* %51 to i8*
  %59 = shl nuw nsw i64 %57, 3
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %58, i64 %59, i1 false) #11, !noalias !18
  %60 = and i64 %47, 63
  %61 = inttoptr i64 %53 to i64*
  %62 = getelementptr inbounds i64, i64* %61, i64 %57
  %63 = ptrtoint i64* %62 to i64
  %64 = icmp eq i64 %60, 0
  br i1 %64, label %76, label %65

65:                                               ; preds = %55
  %66 = getelementptr inbounds i64, i64* %51, i64 %57
  %67 = sub nuw nsw i64 64, %60
  %68 = lshr i64 -1, %67
  %69 = load i64, i64* %66, align 8, !noalias !21
  %70 = and i64 %69, %68
  %71 = xor i64 %68, -1
  %72 = load i64, i64* %62, align 8, !noalias !18
  %73 = and i64 %72, %71
  %74 = or i64 %73, %70
  store i64 %74, i64* %62, align 8, !noalias !18
  %75 = trunc i64 %60 to i32
  br label %76

76:                                               ; preds = %55, %45, %65
  %77 = phi i32 [ %75, %65 ], [ 0, %55 ], [ 0, %45 ]
  %78 = phi i64 [ %63, %65 ], [ %63, %55 ], [ %53, %45 ]
  %79 = bitcast %"class.std::__1::vector.675"* %4 to <2 x i64>*
  %80 = load <2 x i64>, <2 x i64>* %79, align 16
  %81 = bitcast %"class.std::__1::vector.675"* %0 to <2 x i64>*
  %82 = load <2 x i64>, <2 x i64>* %81, align 8
  %83 = bitcast %"class.std::__1::vector.675"* %0 to <2 x i64>*
  store <2 x i64> %80, <2 x i64>* %83, align 8
  %84 = bitcast %"class.std::__1::vector.675"* %4 to <2 x i64>*
  store <2 x i64> %82, <2 x i64>* %84, align 16
  %85 = load i64, i64* %30, align 16
  store i64 %85, i64* %9, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %26) #11
  br label %86

86:                                               ; preds = %76, %17
  %87 = phi i64 [ %78, %76 ], [ %24, %17 ]
  %88 = phi i32 [ %77, %76 ], [ %23, %17 ]
  %89 = inttoptr i64 %87 to i64*
  %90 = icmp eq i64 %12, 0
  br i1 %90, label %160, label %91

91:                                               ; preds = %86
  %92 = icmp eq i32 %88, 0
  br i1 %2, label %93, label %125

93:                                               ; preds = %91
  br i1 %92, label %94, label %96

94:                                               ; preds = %93
  %95 = inttoptr i64 %87 to i8*
  br label %111

96:                                               ; preds = %93
  %97 = sub nuw nsw i32 64, %88
  %98 = zext i32 %97 to i64
  %99 = icmp ult i64 %12, %98
  %100 = select i1 %99, i64 %12, i64 %98
  %101 = zext i32 %88 to i64
  %102 = shl i64 -1, %101
  %103 = sub nsw i64 %98, %100
  %104 = lshr i64 -1, %103
  %105 = and i64 %104, %102
  %106 = load i64, i64* %89, align 8
  %107 = or i64 %106, %105
  store i64 %107, i64* %89, align 8
  %108 = sub i64 %12, %100
  %109 = getelementptr inbounds i64, i64* %89, i64 1
  %110 = bitcast i64* %109 to i8*
  br label %111

111:                                              ; preds = %96, %94
  %112 = phi i64* [ %89, %94 ], [ %109, %96 ]
  %113 = phi i8* [ %95, %94 ], [ %110, %96 ]
  %114 = phi i64 [ %12, %94 ], [ %108, %96 ]
  %115 = lshr i64 %114, 6
  %116 = shl nuw nsw i64 %115, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %113, i8 -1, i64 %116, i1 false) #11
  %117 = and i64 %114, 63
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %160, label %119

119:                                              ; preds = %111
  %120 = getelementptr inbounds i64, i64* %112, i64 %115
  %121 = sub nuw nsw i64 64, %117
  %122 = lshr i64 -1, %121
  %123 = load i64, i64* %120, align 8
  %124 = or i64 %123, %122
  store i64 %124, i64* %120, align 8
  br label %160

125:                                              ; preds = %91
  br i1 %92, label %126, label %128

126:                                              ; preds = %125
  %127 = inttoptr i64 %87 to i8*
  br label %144

128:                                              ; preds = %125
  %129 = sub nuw nsw i32 64, %88
  %130 = zext i32 %129 to i64
  %131 = icmp ult i64 %12, %130
  %132 = select i1 %131, i64 %12, i64 %130
  %133 = zext i32 %88 to i64
  %134 = shl i64 -1, %133
  %135 = sub nsw i64 %130, %132
  %136 = lshr i64 -1, %135
  %137 = and i64 %136, %134
  %138 = xor i64 %137, -1
  %139 = load i64, i64* %89, align 8
  %140 = and i64 %139, %138
  store i64 %140, i64* %89, align 8
  %141 = sub i64 %12, %132
  %142 = getelementptr inbounds i64, i64* %89, i64 1
  %143 = bitcast i64* %142 to i8*
  br label %144

144:                                              ; preds = %128, %126
  %145 = phi i64* [ %89, %126 ], [ %142, %128 ]
  %146 = phi i8* [ %127, %126 ], [ %143, %128 ]
  %147 = phi i64 [ %12, %126 ], [ %141, %128 ]
  %148 = lshr i64 %147, 6
  %149 = shl nuw nsw i64 %148, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %146, i8 0, i64 %149, i1 false) #11
  %150 = and i64 %147, 63
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %160, label %152

152:                                              ; preds = %144
  %153 = getelementptr inbounds i64, i64* %145, i64 %148
  %154 = sub nuw nsw i64 64, %150
  %155 = lshr i64 -1, %154
  %156 = xor i64 %155, -1
  %157 = load i64, i64* %153, align 8
  %158 = and i64 %157, %156
  store i64 %158, i64* %153, align 8
  br label %160

159:                                              ; preds = %3
  store i64 %1, i64* %5, align 8
  br label %160

160:                                              ; preds = %152, %144, %119, %111, %86, %159
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE7reserveEm(%"class.std::__1::vector.675"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::vector.675", align 16
  %4 = alloca %"class.std::__1::__bit_iterator", align 8
  %5 = alloca %"class.std::__1::__bit_iterator", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.675", %"class.std::__1::vector.675"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = shl i64 %7, 6
  %9 = icmp ult i64 %8, %1
  br i1 %9, label %10, label %63

10:                                               ; preds = %2
  %11 = bitcast %"class.std::__1::vector.675"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.std::__1::vector.675", %"class.std::__1::vector.675"* %0, i64 0, i32 2, i32 1, i32 0
  %13 = bitcast %"class.v8::internal::ZoneAllocator.678"* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector.675", %"class.std::__1::vector.675"* %3, i64 0, i32 2, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::vector.675", %"class.std::__1::vector.675"* %3, i64 0, i32 2, i32 1
  %17 = bitcast %"struct.std::__1::__compressed_pair_elem.677"* %16 to i64*
  %18 = bitcast %"class.std::__1::vector.675"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %18, i8 0, i64 24, i1 false)
  store i64 %14, i64* %17, align 8
  %19 = icmp ugt i64 %1, 17179869120
  %20 = inttoptr i64 %14 to %"class.v8::internal::Zone"*
  br i1 %19, label %21, label %23

21:                                               ; preds = %10
  %22 = bitcast %"class.std::__1::vector.675"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %22) #12
  unreachable

23:                                               ; preds = %10
  %24 = add nsw i64 %1, -1
  %25 = lshr i64 %24, 6
  %26 = add nuw nsw i64 %25, 1
  %27 = shl nuw nsw i64 %26, 3
  %28 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %20, i64 0, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %20, i64 0, i32 3
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %31, %29
  %33 = icmp ugt i64 %27, %32
  br i1 %33, label %34, label %36, !prof !2

34:                                               ; preds = %23
  %35 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %20, i64 %27) #11
  br label %38

36:                                               ; preds = %23
  %37 = add i64 %29, %27
  store i64 %37, i64* %28, align 8
  br label %38

38:                                               ; preds = %34, %36
  %39 = phi i64 [ %35, %34 ], [ %29, %36 ]
  %40 = inttoptr i64 %39 to i64*
  %41 = getelementptr inbounds %"class.std::__1::vector.675", %"class.std::__1::vector.675"* %3, i64 0, i32 0
  store i64* %40, i64** %41, align 16
  %42 = getelementptr inbounds %"class.std::__1::vector.675", %"class.std::__1::vector.675"* %3, i64 0, i32 1
  store i64 0, i64* %42, align 8
  store i64 %26, i64* %15, align 16
  %43 = bitcast %"class.std::__1::vector.675"* %0 to i64*
  %44 = load i64, i64* %43, align 8, !noalias !24
  %45 = bitcast %"class.std::__1::__bit_iterator"* %4 to i64*
  store i64 %44, i64* %45, align 8, !alias.scope !24
  %46 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %4, i64 0, i32 1
  store i32 0, i32* %46, align 8, !alias.scope !24
  %47 = getelementptr inbounds %"class.std::__1::vector.675", %"class.std::__1::vector.675"* %0, i64 0, i32 1
  %48 = load i64, i64* %47, align 8, !noalias !29
  %49 = inttoptr i64 %44 to i64*
  %50 = lshr i64 %48, 6
  %51 = getelementptr inbounds i64, i64* %49, i64 %50
  %52 = trunc i64 %48 to i32
  %53 = and i32 %52, 63
  %54 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %5, i64 0, i32 0
  store i64* %51, i64** %54, align 8, !alias.scope !32
  %55 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %5, i64 0, i32 1
  store i32 %53, i32* %55, align 8, !alias.scope !32
  call void @_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS5_Lb0ELm0EEEEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeESA_SA_(%"class.std::__1::vector.675"* nonnull %3, %"class.std::__1::__bit_iterator"* nonnull %4, %"class.std::__1::__bit_iterator"* nonnull %5)
  %56 = load i64, i64* %43, align 8
  %57 = bitcast %"class.std::__1::vector.675"* %3 to i64*
  %58 = bitcast %"class.std::__1::vector.675"* %3 to <2 x i64>*
  %59 = load <2 x i64>, <2 x i64>* %58, align 16
  store i64 %56, i64* %57, align 16
  %60 = load i64, i64* %47, align 8
  %61 = bitcast %"class.std::__1::vector.675"* %0 to <2 x i64>*
  store <2 x i64> %59, <2 x i64>* %61, align 8
  store i64 %60, i64* %42, align 8
  %62 = load i64, i64* %15, align 16
  store i64 %62, i64* %6, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #11
  br label %63

63:                                               ; preds = %38, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS5_Lb0ELm0EEEEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeESA_SA_(%"class.std::__1::vector.675"*, %"class.std::__1::__bit_iterator"*, %"class.std::__1::__bit_iterator"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::__bit_iterator", align 8
  %5 = alloca %"class.std::__1::__bit_iterator", align 8
  %6 = alloca %"class.std::__1::__bit_iterator", align 8
  %7 = alloca %"class.std::__1::__bit_iterator", align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.675", %"class.std::__1::vector.675"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::__bit_iterator"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = bitcast %"class.std::__1::__bit_iterator"* %2 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %2, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = sub i64 %15, %11
  %19 = shl i64 %18, 3
  %20 = zext i32 %17 to i64
  %21 = zext i32 %13 to i64
  %22 = sub i64 %9, %21
  %23 = add i64 %22, %20
  %24 = add i64 %23, %19
  store i64 %24, i64* %8, align 8
  %25 = icmp eq i64 %9, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %3
  %27 = add i64 %9, -1
  %28 = add i64 %24, -1
  %29 = xor i64 %28, %27
  %30 = icmp ugt i64 %29, 63
  br i1 %30, label %31, label %39

31:                                               ; preds = %26, %3
  %32 = icmp ult i64 %24, 65
  %33 = getelementptr inbounds %"class.std::__1::vector.675", %"class.std::__1::vector.675"* %0, i64 0, i32 0
  %34 = load i64*, i64** %33, align 8
  %35 = add i64 %24, -1
  %36 = lshr i64 %35, 6
  %37 = getelementptr inbounds i64, i64* %34, i64 %36
  %38 = select i1 %32, i64* %34, i64* %37
  store i64 0, i64* %38, align 8
  br label %39

39:                                               ; preds = %31, %26
  %40 = load i64, i64* %10, align 8
  %41 = load i32, i32* %12, align 8
  %42 = load i64, i64* %14, align 8
  %43 = load i32, i32* %16, align 8
  %44 = getelementptr inbounds %"class.std::__1::vector.675", %"class.std::__1::vector.675"* %0, i64 0, i32 0
  %45 = load i64*, i64** %44, align 8, !noalias !35
  %46 = lshr i64 %9, 6
  %47 = getelementptr inbounds i64, i64* %45, i64 %46
  %48 = trunc i64 %9 to i32
  %49 = and i32 %48, 63
  %50 = ptrtoint i64* %47 to i64
  %51 = bitcast %"class.std::__1::__bit_iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #11
  %52 = bitcast %"class.std::__1::__bit_iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52)
  %53 = bitcast %"class.std::__1::__bit_iterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53)
  %54 = bitcast %"class.std::__1::__bit_iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54)
  %55 = icmp eq i32 %41, %49
  br i1 %55, label %56, label %123

56:                                               ; preds = %39
  %57 = sub i64 %42, %40
  %58 = shl i64 %57, 3
  %59 = zext i32 %43 to i64
  %60 = zext i32 %41 to i64
  %61 = sub nsw i64 %59, %60
  %62 = add i64 %61, %58
  %63 = icmp sgt i64 %62, 0
  %64 = inttoptr i64 %40 to i64*
  br i1 %63, label %65, label %118

65:                                               ; preds = %56
  %66 = inttoptr i64 %40 to i8*
  %67 = icmp eq i32 %41, 0
  br i1 %67, label %92, label %68

68:                                               ; preds = %65
  %69 = sub i32 64, %41
  %70 = zext i32 %69 to i64
  %71 = icmp slt i64 %62, %70
  %72 = select i1 %71, i64 %62, i64 %70
  %73 = sub nsw i64 %62, %72
  %74 = shl i64 -1, %60
  %75 = sub nsw i64 %70, %72
  %76 = lshr i64 -1, %75
  %77 = and i64 %76, %74
  %78 = load i64, i64* %64, align 8, !noalias !38
  %79 = and i64 %78, %77
  %80 = xor i64 %77, -1
  %81 = load i64, i64* %47, align 8, !noalias !38
  %82 = and i64 %81, %80
  %83 = or i64 %82, %79
  store i64 %83, i64* %47, align 8, !noalias !38
  %84 = add nuw nsw i64 %72, %60
  %85 = sdiv i64 %84, 64
  %86 = getelementptr inbounds i64, i64* %47, i64 %85
  %87 = ptrtoint i64* %86 to i64
  %88 = srem i64 %84, 64
  %89 = trunc i64 %88 to i32
  %90 = getelementptr inbounds i64, i64* %64, i64 1
  %91 = bitcast i64* %90 to i8*
  br label %92

92:                                               ; preds = %68, %65
  %93 = phi i64* [ %64, %65 ], [ %90, %68 ]
  %94 = phi i32 [ 0, %65 ], [ %89, %68 ]
  %95 = phi i64 [ %50, %65 ], [ %87, %68 ]
  %96 = phi i8* [ %66, %65 ], [ %91, %68 ]
  %97 = phi i64 [ %62, %65 ], [ %73, %68 ]
  %98 = sdiv i64 %97, 64
  %99 = inttoptr i64 %95 to i8*
  %100 = shl nsw i64 %98, 3
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %96, i64 %100, i1 false) #11, !noalias !38
  %101 = shl nsw i64 %98, 6
  %102 = sub i64 %97, %101
  %103 = inttoptr i64 %95 to i64*
  %104 = getelementptr inbounds i64, i64* %103, i64 %98
  %105 = ptrtoint i64* %104 to i64
  %106 = icmp sgt i64 %102, 0
  br i1 %106, label %107, label %118

107:                                              ; preds = %92
  %108 = getelementptr inbounds i64, i64* %93, i64 %98
  %109 = sub nsw i64 64, %102
  %110 = lshr i64 -1, %109
  %111 = load i64, i64* %108, align 8, !noalias !38
  %112 = and i64 %111, %110
  %113 = xor i64 %110, -1
  %114 = load i64, i64* %104, align 8, !noalias !38
  %115 = and i64 %114, %113
  %116 = or i64 %115, %112
  store i64 %116, i64* %104, align 8, !noalias !38
  %117 = trunc i64 %102 to i32
  br label %118

118:                                              ; preds = %107, %92, %56
  %119 = phi i32 [ %117, %107 ], [ %94, %92 ], [ %41, %56 ]
  %120 = phi i64 [ %105, %107 ], [ %105, %92 ], [ %50, %56 ]
  %121 = bitcast %"class.std::__1::__bit_iterator"* %7 to i64*
  store i64 %120, i64* %121, align 8, !alias.scope !41
  %122 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %7, i64 0, i32 1
  store i32 %119, i32* %122, align 8, !alias.scope !41
  br label %130

123:                                              ; preds = %39
  %124 = bitcast %"class.std::__1::__bit_iterator"* %4 to i64*
  store i64 %40, i64* %124, align 8, !noalias !44
  %125 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %4, i64 0, i32 1
  store i32 %41, i32* %125, align 8, !noalias !44
  %126 = bitcast %"class.std::__1::__bit_iterator"* %5 to i64*
  store i64 %42, i64* %126, align 8, !noalias !44
  %127 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %5, i64 0, i32 1
  store i32 %43, i32* %127, align 8, !noalias !44
  %128 = bitcast %"class.std::__1::__bit_iterator"* %6 to i64*
  store i64 %50, i64* %128, align 8, !noalias !44
  %129 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %6, i64 0, i32 1
  store i32 %49, i32* %129, align 8, !noalias !44
  call void @_ZNSt3__116__copy_unalignedINS_6vectorIbN2v88internal13ZoneAllocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS7_IS8_XT0_EXLi0EEEESA_S9_(%"class.std::__1::__bit_iterator"* nonnull sret %7, %"class.std::__1::__bit_iterator"* nonnull %4, %"class.std::__1::__bit_iterator"* nonnull %5, %"class.std::__1::__bit_iterator"* nonnull %6) #11
  br label %130

130:                                              ; preds = %118, %123
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__116__copy_unalignedINS_6vectorIbN2v88internal13ZoneAllocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS7_IS8_XT0_EXLi0EEEESA_S9_(%"class.std::__1::__bit_iterator"* noalias sret, %"class.std::__1::__bit_iterator"*, %"class.std::__1::__bit_iterator"*, %"class.std::__1::__bit_iterator"*) local_unnamed_addr #0 comdat {
  %5 = bitcast %"class.std::__1::__bit_iterator"* %2 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::__bit_iterator"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = shl i64 %9, 3
  %11 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %2, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = add nsw i64 %10, %13
  %15 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  %18 = sub i64 %14, %17
  %19 = icmp sgt i64 %18, 0
  %20 = inttoptr i64 %8 to i64*
  br i1 %19, label %21, label %185

21:                                               ; preds = %4
  %22 = icmp eq i32 %16, 0
  br i1 %22, label %93, label %23

23:                                               ; preds = %21
  %24 = sub i32 64, %16
  %25 = zext i32 %24 to i64
  %26 = icmp slt i64 %18, %25
  %27 = select i1 %26, i64 %18, i64 %25
  %28 = sub nsw i64 %18, %27
  %29 = shl i64 -1, %17
  %30 = sub nsw i64 %25, %27
  %31 = lshr i64 -1, %30
  %32 = and i64 %31, %29
  %33 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 0
  %34 = load i64, i64* %20, align 8
  %35 = and i64 %32, %34
  %36 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = sub i32 64, %37
  %39 = zext i32 %38 to i64
  %40 = icmp ugt i64 %27, %39
  %41 = select i1 %40, i64 %39, i64 %27
  %42 = zext i32 %37 to i64
  %43 = shl i64 -1, %42
  %44 = sub nsw i64 %39, %41
  %45 = lshr i64 -1, %44
  %46 = and i64 %45, %43
  %47 = xor i64 %46, -1
  %48 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %49 = load i64*, i64** %48, align 8
  %50 = load i64, i64* %49, align 8
  %51 = and i64 %50, %47
  store i64 %51, i64* %49, align 8
  %52 = load i32, i32* %36, align 8
  %53 = load i32, i32* %15, align 8
  %54 = icmp ugt i32 %52, %53
  %55 = sub i32 %53, %52
  %56 = zext i32 %55 to i64
  %57 = lshr i64 %35, %56
  %58 = sub i32 %52, %53
  %59 = zext i32 %58 to i64
  %60 = shl i64 %35, %59
  %61 = select i1 %54, i64 %60, i64 %57
  %62 = load i64*, i64** %48, align 8
  %63 = load i64, i64* %62, align 8
  %64 = or i64 %63, %61
  store i64 %64, i64* %62, align 8
  %65 = load i32, i32* %36, align 8
  %66 = zext i32 %65 to i64
  %67 = add nuw nsw i64 %41, %66
  %68 = lshr i64 %67, 6
  %69 = load i64*, i64** %48, align 8
  %70 = getelementptr inbounds i64, i64* %69, i64 %68
  store i64* %70, i64** %48, align 8
  %71 = trunc i64 %41 to i32
  %72 = add i32 %65, %71
  %73 = and i32 %72, 63
  store i32 %73, i32* %36, align 8
  %74 = sub i64 %27, %41
  %75 = icmp sgt i64 %74, 0
  br i1 %75, label %76, label %90

76:                                               ; preds = %23
  %77 = sub nsw i64 64, %74
  %78 = lshr i64 -1, %77
  %79 = xor i64 %78, -1
  %80 = load i64, i64* %70, align 8
  %81 = and i64 %80, %79
  store i64 %81, i64* %70, align 8
  %82 = load i32, i32* %15, align 8
  %83 = zext i32 %82 to i64
  %84 = add nuw nsw i64 %41, %83
  %85 = lshr i64 %35, %84
  %86 = load i64*, i64** %48, align 8
  %87 = load i64, i64* %86, align 8
  %88 = or i64 %85, %87
  store i64 %88, i64* %86, align 8
  %89 = trunc i64 %74 to i32
  store i32 %89, i32* %36, align 8
  br label %90

90:                                               ; preds = %76, %23
  %91 = load i64*, i64** %33, align 8
  %92 = getelementptr inbounds i64, i64* %91, i64 1
  store i64* %92, i64** %33, align 8
  br label %93

93:                                               ; preds = %21, %90
  %94 = phi i64* [ %20, %21 ], [ %92, %90 ]
  %95 = phi i64 [ %18, %21 ], [ %28, %90 ]
  %96 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %97 = load i32, i32* %96, align 8
  %98 = sub i32 64, %97
  %99 = zext i32 %97 to i64
  %100 = shl i64 -1, %99
  %101 = icmp sgt i64 %95, 63
  br i1 %101, label %102, label %134

102:                                              ; preds = %93
  %103 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 0
  %104 = xor i64 %100, -1
  %105 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %106 = zext i32 %98 to i64
  br label %107

107:                                              ; preds = %102, %107
  %108 = phi i64* [ %94, %102 ], [ %130, %107 ]
  %109 = phi i64 [ %95, %102 ], [ %128, %107 ]
  %110 = load i64, i64* %108, align 8
  %111 = load i64*, i64** %105, align 8
  %112 = load i64, i64* %111, align 8
  %113 = and i64 %112, %104
  store i64 %113, i64* %111, align 8
  %114 = load i32, i32* %96, align 8
  %115 = zext i32 %114 to i64
  %116 = shl i64 %110, %115
  %117 = load i64*, i64** %105, align 8
  %118 = load i64, i64* %117, align 8
  %119 = or i64 %118, %116
  store i64 %119, i64* %117, align 8
  %120 = load i64*, i64** %105, align 8
  %121 = getelementptr inbounds i64, i64* %120, i64 1
  store i64* %121, i64** %105, align 8
  %122 = load i64, i64* %121, align 8
  %123 = and i64 %122, %100
  store i64 %123, i64* %121, align 8
  %124 = lshr i64 %110, %106
  %125 = load i64*, i64** %105, align 8
  %126 = load i64, i64* %125, align 8
  %127 = or i64 %126, %124
  store i64 %127, i64* %125, align 8
  %128 = add nsw i64 %109, -64
  %129 = load i64*, i64** %103, align 8
  %130 = getelementptr inbounds i64, i64* %129, i64 1
  store i64* %130, i64** %103, align 8
  %131 = icmp sgt i64 %128, 63
  br i1 %131, label %107, label %132

132:                                              ; preds = %107
  %133 = and i64 %95, 63
  br label %134

134:                                              ; preds = %132, %93
  %135 = phi i64* [ %94, %93 ], [ %130, %132 ]
  %136 = phi i64 [ %95, %93 ], [ %133, %132 ]
  %137 = icmp sgt i64 %136, 0
  br i1 %137, label %138, label %185

138:                                              ; preds = %134
  %139 = sub nuw nsw i64 64, %136
  %140 = lshr i64 -1, %139
  %141 = load i64, i64* %135, align 8
  %142 = and i64 %141, %140
  %143 = zext i32 %98 to i64
  %144 = icmp sgt i64 %136, %143
  %145 = select i1 %144, i64 %143, i64 %136
  %146 = load i32, i32* %96, align 8
  %147 = zext i32 %146 to i64
  %148 = shl i64 -1, %147
  %149 = sub nsw i64 %143, %145
  %150 = lshr i64 -1, %149
  %151 = and i64 %148, %150
  %152 = xor i64 %151, -1
  %153 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %154 = load i64*, i64** %153, align 8
  %155 = load i64, i64* %154, align 8
  %156 = and i64 %155, %152
  store i64 %156, i64* %154, align 8
  %157 = load i32, i32* %96, align 8
  %158 = zext i32 %157 to i64
  %159 = shl i64 %142, %158
  %160 = load i64*, i64** %153, align 8
  %161 = load i64, i64* %160, align 8
  %162 = or i64 %161, %159
  store i64 %162, i64* %160, align 8
  %163 = load i32, i32* %96, align 8
  %164 = zext i32 %163 to i64
  %165 = add nuw nsw i64 %145, %164
  %166 = lshr i64 %165, 6
  %167 = load i64*, i64** %153, align 8
  %168 = getelementptr inbounds i64, i64* %167, i64 %166
  store i64* %168, i64** %153, align 8
  %169 = trunc i64 %145 to i32
  %170 = add i32 %163, %169
  %171 = and i32 %170, 63
  store i32 %171, i32* %96, align 8
  %172 = sub nsw i64 %136, %145
  %173 = icmp sgt i64 %172, 0
  br i1 %173, label %174, label %185

174:                                              ; preds = %138
  %175 = sub nuw nsw i64 64, %172
  %176 = lshr i64 -1, %175
  %177 = xor i64 %176, -1
  %178 = load i64, i64* %168, align 8
  %179 = and i64 %178, %177
  store i64 %179, i64* %168, align 8
  %180 = lshr i64 %142, %145
  %181 = load i64*, i64** %153, align 8
  %182 = load i64, i64* %181, align 8
  %183 = or i64 %182, %180
  store i64 %183, i64* %181, align 8
  %184 = trunc i64 %172 to i32
  store i32 %184, i32* %96, align 8
  br label %185

185:                                              ; preds = %134, %174, %138, %4
  %186 = bitcast %"class.std::__1::__bit_iterator"* %3 to i64*
  %187 = load i64, i64* %186, align 8
  %188 = bitcast %"class.std::__1::__bit_iterator"* %0 to i64*
  store i64 %187, i64* %188, align 8
  %189 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %0, i64 0, i32 1
  %190 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %191 = load i32, i32* %190, align 8
  store i32 %191, i32* %189, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2v88internal8compiler17BranchElimination21ControlPathConditionsENS2_13ZoneAllocatorIS5_EEE8__appendEmRKS5_(%"class.std::__1::vector.667"*, i64, %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.667", %"class.std::__1::vector.667"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %5 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.667", %"class.std::__1::vector.667"* %0, i64 0, i32 0, i32 1
  %8 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %6, %9
  %11 = ashr exact i64 %10, 3
  %12 = icmp ult i64 %11, %1
  br i1 %12, label %139, label %13

13:                                               ; preds = %3
  %14 = inttoptr i64 %9 to %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"*
  %15 = inttoptr i64 %9 to i8*
  %16 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %14, i64 %1
  %17 = icmp eq i64 %1, 0
  br i1 %17, label %137, label %18

18:                                               ; preds = %13
  %19 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %2 to i64*
  %20 = shl nsw i64 %1, 3
  %21 = add i64 %20, -8
  %22 = lshr exact i64 %21, 3
  %23 = add nuw nsw i64 %22, 1
  %24 = icmp ult i64 %23, 4
  br i1 %24, label %25, label %47

25:                                               ; preds = %106, %47, %18
  %26 = phi %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* [ %14, %47 ], [ %14, %18 ], [ %60, %106 ]
  %27 = ptrtoint %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %26 to i64
  %28 = add i64 %1, -1
  %29 = getelementptr %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %14, i64 %28, i32 0, i32 0
  %30 = ptrtoint %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"** %29 to i64
  %31 = sub i64 %30, %27
  %32 = lshr i64 %31, 3
  %33 = add nuw nsw i64 %32, 1
  %34 = and i64 %33, 7
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %44, label %36

36:                                               ; preds = %25, %36
  %37 = phi %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* [ %41, %36 ], [ %26, %25 ]
  %38 = phi i64 [ %42, %36 ], [ %34, %25 ]
  %39 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %37 to i64*
  %40 = load i64, i64* %19, align 8
  store i64 %40, i64* %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %37, i64 1
  %42 = add i64 %38, -1
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %36, !llvm.loop !45

44:                                               ; preds = %36, %25
  %45 = phi %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* [ %26, %25 ], [ %41, %36 ]
  %46 = icmp ult i64 %31, 56
  br i1 %46, label %108, label %110

47:                                               ; preds = %18
  %48 = shl nsw i64 %1, 3
  %49 = add i64 %48, -8
  %50 = lshr exact i64 %49, 3
  %51 = add nuw nsw i64 %50, 1
  %52 = getelementptr %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %14, i64 %51
  %53 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %2 to i8*
  %54 = getelementptr i8, i8* %53, i64 1
  %55 = icmp ugt i8* %54, %15
  %56 = icmp ugt %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %52, %2
  %57 = and i1 %55, %56
  br i1 %57, label %25, label %58

58:                                               ; preds = %47
  %59 = and i64 %23, 4611686018427387900
  %60 = getelementptr %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %14, i64 %59
  %61 = add nsw i64 %59, -4
  %62 = lshr exact i64 %61, 2
  %63 = add nuw nsw i64 %62, 1
  %64 = and i64 %63, 1
  %65 = icmp eq i64 %61, 0
  br i1 %65, label %93, label %66

66:                                               ; preds = %58
  %67 = sub nuw nsw i64 %63, %64
  %68 = load i64, i64* %19, align 8, !alias.scope !47
  %69 = insertelement <2 x i64> undef, i64 %68, i32 0
  %70 = shufflevector <2 x i64> %69, <2 x i64> undef, <2 x i32> zeroinitializer
  %71 = insertelement <2 x i64> undef, i64 %68, i32 0
  %72 = shufflevector <2 x i64> %71, <2 x i64> undef, <2 x i32> zeroinitializer
  %73 = load i64, i64* %19, align 8, !alias.scope !47
  %74 = insertelement <2 x i64> undef, i64 %73, i32 0
  %75 = shufflevector <2 x i64> %74, <2 x i64> undef, <2 x i32> zeroinitializer
  %76 = insertelement <2 x i64> undef, i64 %73, i32 0
  %77 = shufflevector <2 x i64> %76, <2 x i64> undef, <2 x i32> zeroinitializer
  br label %78

78:                                               ; preds = %78, %66
  %79 = phi i64 [ 0, %66 ], [ %90, %78 ]
  %80 = phi i64 [ %67, %66 ], [ %91, %78 ]
  %81 = getelementptr %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %14, i64 %79
  %82 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %81 to <2 x i64>*
  store <2 x i64> %70, <2 x i64>* %82, align 8, !alias.scope !50, !noalias !47
  %83 = getelementptr %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %81, i64 2
  %84 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %83 to <2 x i64>*
  store <2 x i64> %72, <2 x i64>* %84, align 8, !alias.scope !50, !noalias !47
  %85 = or i64 %79, 4
  %86 = getelementptr %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %14, i64 %85
  %87 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %86 to <2 x i64>*
  store <2 x i64> %75, <2 x i64>* %87, align 8, !alias.scope !50, !noalias !47
  %88 = getelementptr %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %86, i64 2
  %89 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %88 to <2 x i64>*
  store <2 x i64> %77, <2 x i64>* %89, align 8, !alias.scope !50, !noalias !47
  %90 = add i64 %79, 8
  %91 = add i64 %80, -2
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %93, label %78, !llvm.loop !52

93:                                               ; preds = %78, %58
  %94 = phi i64 [ 0, %58 ], [ %90, %78 ]
  %95 = icmp eq i64 %64, 0
  br i1 %95, label %106, label %96

96:                                               ; preds = %93
  %97 = getelementptr %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %14, i64 %94
  %98 = load i64, i64* %19, align 8, !alias.scope !47
  %99 = insertelement <2 x i64> undef, i64 %98, i32 0
  %100 = shufflevector <2 x i64> %99, <2 x i64> undef, <2 x i32> zeroinitializer
  %101 = insertelement <2 x i64> undef, i64 %98, i32 0
  %102 = shufflevector <2 x i64> %101, <2 x i64> undef, <2 x i32> zeroinitializer
  %103 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %97 to <2 x i64>*
  store <2 x i64> %100, <2 x i64>* %103, align 8, !alias.scope !50, !noalias !47
  %104 = getelementptr %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %97, i64 2
  %105 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %104 to <2 x i64>*
  store <2 x i64> %102, <2 x i64>* %105, align 8, !alias.scope !50, !noalias !47
  br label %106

106:                                              ; preds = %93, %96
  %107 = icmp eq i64 %23, %59
  br i1 %107, label %108, label %25

108:                                              ; preds = %44, %110, %106
  %109 = ptrtoint %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %16 to i64
  br label %137

110:                                              ; preds = %44, %110
  %111 = phi %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* [ %135, %110 ], [ %45, %44 ]
  %112 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %111 to i64*
  %113 = load i64, i64* %19, align 8
  store i64 %113, i64* %112, align 8
  %114 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %111, i64 1
  %115 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %114 to i64*
  %116 = load i64, i64* %19, align 8
  store i64 %116, i64* %115, align 8
  %117 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %111, i64 2
  %118 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %117 to i64*
  %119 = load i64, i64* %19, align 8
  store i64 %119, i64* %118, align 8
  %120 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %111, i64 3
  %121 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %120 to i64*
  %122 = load i64, i64* %19, align 8
  store i64 %122, i64* %121, align 8
  %123 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %111, i64 4
  %124 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %123 to i64*
  %125 = load i64, i64* %19, align 8
  store i64 %125, i64* %124, align 8
  %126 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %111, i64 5
  %127 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %126 to i64*
  %128 = load i64, i64* %19, align 8
  store i64 %128, i64* %127, align 8
  %129 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %111, i64 6
  %130 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %129 to i64*
  %131 = load i64, i64* %19, align 8
  store i64 %131, i64* %130, align 8
  %132 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %111, i64 7
  %133 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %132 to i64*
  %134 = load i64, i64* %19, align 8
  store i64 %134, i64* %133, align 8
  %135 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %111, i64 8
  %136 = icmp eq %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %135, %16
  br i1 %136, label %108, label %110, !llvm.loop !54

137:                                              ; preds = %13, %108
  %138 = phi i64 [ %109, %108 ], [ %9, %13 ]
  store i64 %138, i64* %8, align 8
  ret void

139:                                              ; preds = %3
  %140 = bitcast %"class.std::__1::vector.667"* %0 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = sub i64 %9, %141
  %143 = ashr exact i64 %142, 3
  %144 = add i64 %143, %1
  %145 = icmp ugt i64 %144, 268435455
  br i1 %145, label %146, label %148

146:                                              ; preds = %139
  %147 = bitcast %"class.std::__1::vector.667"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %147) #12
  unreachable

148:                                              ; preds = %139
  %149 = sub i64 %6, %141
  %150 = ashr exact i64 %149, 3
  %151 = icmp ult i64 %150, 134217727
  br i1 %151, label %152, label %157

152:                                              ; preds = %148
  %153 = ashr exact i64 %149, 2
  %154 = icmp ult i64 %153, %144
  %155 = select i1 %154, i64 %144, i64 %153
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %175, label %157

157:                                              ; preds = %148, %152
  %158 = phi i64 [ %155, %152 ], [ 268435455, %148 ]
  %159 = getelementptr inbounds %"class.std::__1::vector.667", %"class.std::__1::vector.667"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %160 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %159, align 8
  %161 = shl i64 %158, 3
  %162 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %160, i64 0, i32 2
  %163 = load i64, i64* %162, align 8
  %164 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %160, i64 0, i32 3
  %165 = load i64, i64* %164, align 8
  %166 = sub i64 %165, %163
  %167 = icmp ugt i64 %161, %166
  br i1 %167, label %168, label %170, !prof !2

168:                                              ; preds = %157
  %169 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %160, i64 %161) #11
  br label %172

170:                                              ; preds = %157
  %171 = add i64 %163, %161
  store i64 %171, i64* %162, align 8
  br label %172

172:                                              ; preds = %170, %168
  %173 = phi i64 [ %169, %168 ], [ %163, %170 ]
  %174 = inttoptr i64 %173 to %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"*
  br label %175

175:                                              ; preds = %172, %152
  %176 = phi i64 [ %158, %172 ], [ 0, %152 ]
  %177 = phi %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* [ %174, %172 ], [ null, %152 ]
  %178 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %177, i64 %143
  %179 = ptrtoint %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %178 to i64
  %180 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %177, i64 %176
  %181 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %178, i64 %1
  %182 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %2 to i64*
  %183 = shl nsw i64 %1, 3
  %184 = add i64 %183, -8
  %185 = lshr exact i64 %184, 3
  %186 = add nuw nsw i64 %185, 1
  %187 = and i64 %186, 7
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %201, label %189

189:                                              ; preds = %175, %189
  %190 = phi %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* [ %195, %189 ], [ %178, %175 ]
  %191 = phi i64 [ %196, %189 ], [ %179, %175 ]
  %192 = phi i64 [ %197, %189 ], [ %187, %175 ]
  %193 = inttoptr i64 %191 to i64*
  %194 = load i64, i64* %182, align 8
  store i64 %194, i64* %193, align 8
  %195 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %190, i64 1
  %196 = ptrtoint %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %195 to i64
  %197 = add i64 %192, -1
  %198 = icmp eq i64 %197, 0
  br i1 %198, label %199, label %189, !llvm.loop !55

199:                                              ; preds = %189
  %200 = ptrtoint %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %195 to i64
  br label %201

201:                                              ; preds = %175, %199
  %202 = phi %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* [ %178, %175 ], [ %195, %199 ]
  %203 = phi i64 [ %179, %175 ], [ %200, %199 ]
  %204 = icmp ult i64 %184, 56
  br i1 %204, label %234, label %205

205:                                              ; preds = %201, %205
  %206 = phi %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* [ %231, %205 ], [ %202, %201 ]
  %207 = phi i64 [ %232, %205 ], [ %203, %201 ]
  %208 = inttoptr i64 %207 to i64*
  %209 = load i64, i64* %182, align 8
  store i64 %209, i64* %208, align 8
  %210 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %206, i64 1
  %211 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %210 to i64*
  %212 = load i64, i64* %182, align 8
  store i64 %212, i64* %211, align 8
  %213 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %206, i64 2
  %214 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %213 to i64*
  %215 = load i64, i64* %182, align 8
  store i64 %215, i64* %214, align 8
  %216 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %206, i64 3
  %217 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %216 to i64*
  %218 = load i64, i64* %182, align 8
  store i64 %218, i64* %217, align 8
  %219 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %206, i64 4
  %220 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %219 to i64*
  %221 = load i64, i64* %182, align 8
  store i64 %221, i64* %220, align 8
  %222 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %206, i64 5
  %223 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %222 to i64*
  %224 = load i64, i64* %182, align 8
  store i64 %224, i64* %223, align 8
  %225 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %206, i64 6
  %226 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %225 to i64*
  %227 = load i64, i64* %182, align 8
  store i64 %227, i64* %226, align 8
  %228 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %206, i64 7
  %229 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %228 to i64*
  %230 = load i64, i64* %182, align 8
  store i64 %230, i64* %229, align 8
  %231 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %206, i64 8
  %232 = ptrtoint %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %231 to i64
  %233 = icmp eq %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %181, %231
  br i1 %233, label %234, label %205

234:                                              ; preds = %205, %201
  %235 = ptrtoint %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %180 to i64
  %236 = ptrtoint %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %181 to i64
  %237 = getelementptr inbounds %"class.std::__1::vector.667", %"class.std::__1::vector.667"* %0, i64 0, i32 0, i32 0
  %238 = load %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"*, %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"** %237, align 8
  %239 = ptrtoint %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %238 to i64
  %240 = load %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"*, %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"** %7, align 8
  %241 = icmp eq %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %240, %238
  br i1 %241, label %414, label %242

242:                                              ; preds = %234
  %243 = getelementptr %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %240, i64 -1, i32 0, i32 0
  %244 = ptrtoint %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"** %243 to i64
  %245 = sub i64 %244, %239
  %246 = lshr i64 %245, 3
  %247 = add nuw nsw i64 %246, 1
  %248 = icmp ult i64 %247, 4
  br i1 %248, label %341, label %249

249:                                              ; preds = %242
  %250 = getelementptr %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %240, i64 -1, i32 0, i32 0
  %251 = ptrtoint %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"** %250 to i64
  %252 = sub i64 %251, %239
  %253 = lshr i64 %252, 3
  %254 = xor i64 %253, -1
  %255 = add nsw i64 %143, %254
  %256 = getelementptr %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %177, i64 %255
  %257 = xor i64 %253, -1
  %258 = getelementptr %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %240, i64 %257
  %259 = icmp ult %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %256, %240
  %260 = icmp ult %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %258, %178
  %261 = and i1 %259, %260
  br i1 %261, label %341, label %262

262:                                              ; preds = %249
  %263 = and i64 %247, 4611686018427387900
  %264 = sub nsw i64 0, %263
  %265 = getelementptr %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %178, i64 %264
  %266 = sub nsw i64 0, %263
  %267 = getelementptr %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %240, i64 %266
  %268 = add nsw i64 %263, -4
  %269 = lshr exact i64 %268, 2
  %270 = add nuw nsw i64 %269, 1
  %271 = and i64 %270, 1
  %272 = icmp eq i64 %268, 0
  br i1 %272, label %319, label %273

273:                                              ; preds = %262
  %274 = sub nuw nsw i64 %270, %271
  %275 = getelementptr %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %178, i64 -1
  %276 = getelementptr %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %240, i64 -1
  %277 = getelementptr %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %178, i64 -1
  %278 = getelementptr %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %240, i64 -1
  br label %279

279:                                              ; preds = %279, %273
  %280 = phi i64 [ 0, %273 ], [ %314, %279 ]
  %281 = phi i64 [ %274, %273 ], [ %315, %279 ]
  %282 = sub i64 0, %280
  %283 = sub i64 0, %280
  %284 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %275, i64 %282
  %285 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %276, i64 %283
  %286 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %285, i64 -1
  %287 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %286 to <2 x i64>*
  %288 = load <2 x i64>, <2 x i64>* %287, align 8, !alias.scope !56
  %289 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %285, i64 -2
  %290 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %289, i64 -1
  %291 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %290 to <2 x i64>*
  %292 = load <2 x i64>, <2 x i64>* %291, align 8, !alias.scope !56
  %293 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %284, i64 -1
  %294 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %293 to <2 x i64>*
  store <2 x i64> %288, <2 x i64>* %294, align 8, !alias.scope !59, !noalias !56
  %295 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %284, i64 -2
  %296 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %295, i64 -1
  %297 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %296 to <2 x i64>*
  store <2 x i64> %292, <2 x i64>* %297, align 8, !alias.scope !59, !noalias !56
  %298 = sub nuw nsw i64 -4, %280
  %299 = sub nuw nsw i64 -4, %280
  %300 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %277, i64 %298
  %301 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %278, i64 %299
  %302 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %301, i64 -1
  %303 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %302 to <2 x i64>*
  %304 = load <2 x i64>, <2 x i64>* %303, align 8, !alias.scope !56
  %305 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %301, i64 -2
  %306 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %305, i64 -1
  %307 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %306 to <2 x i64>*
  %308 = load <2 x i64>, <2 x i64>* %307, align 8, !alias.scope !56
  %309 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %300, i64 -1
  %310 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %309 to <2 x i64>*
  store <2 x i64> %304, <2 x i64>* %310, align 8, !alias.scope !59, !noalias !56
  %311 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %300, i64 -2
  %312 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %311, i64 -1
  %313 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %312 to <2 x i64>*
  store <2 x i64> %308, <2 x i64>* %313, align 8, !alias.scope !59, !noalias !56
  %314 = add i64 %280, 8
  %315 = add i64 %281, -2
  %316 = icmp eq i64 %315, 0
  br i1 %316, label %317, label %279, !llvm.loop !61

317:                                              ; preds = %279
  %318 = sub nuw nsw i64 -8, %280
  br label %319

319:                                              ; preds = %317, %262
  %320 = phi i64 [ 0, %262 ], [ %318, %317 ]
  %321 = icmp eq i64 %271, 0
  br i1 %321, label %339, label %322

322:                                              ; preds = %319
  %323 = getelementptr %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %178, i64 -1
  %324 = getelementptr %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %240, i64 -1
  %325 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %323, i64 %320
  %326 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %324, i64 %320
  %327 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %326, i64 -1
  %328 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %327 to <2 x i64>*
  %329 = load <2 x i64>, <2 x i64>* %328, align 8, !alias.scope !56
  %330 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %326, i64 -2
  %331 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %330, i64 -1
  %332 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %331 to <2 x i64>*
  %333 = load <2 x i64>, <2 x i64>* %332, align 8, !alias.scope !56
  %334 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %325, i64 -1
  %335 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %334 to <2 x i64>*
  store <2 x i64> %329, <2 x i64>* %335, align 8, !alias.scope !59, !noalias !56
  %336 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %325, i64 -2
  %337 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %336, i64 -1
  %338 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %337 to <2 x i64>*
  store <2 x i64> %333, <2 x i64>* %338, align 8, !alias.scope !59, !noalias !56
  br label %339

339:                                              ; preds = %319, %322
  %340 = icmp eq i64 %247, %263
  br i1 %340, label %411, label %341

341:                                              ; preds = %339, %249, %242
  %342 = phi %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* [ %178, %249 ], [ %178, %242 ], [ %265, %339 ]
  %343 = phi %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* [ %240, %249 ], [ %240, %242 ], [ %267, %339 ]
  %344 = getelementptr %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %343, i64 -1, i32 0, i32 0
  %345 = ptrtoint %"struct.v8::internal::compiler::FunctionalList<v8::internal::compiler::FunctionalList<v8::internal::compiler::BranchElimination::BranchCondition> >::Cons"** %344 to i64
  %346 = sub i64 %345, %239
  %347 = lshr i64 %346, 3
  %348 = add nuw nsw i64 %347, 1
  %349 = and i64 %348, 7
  %350 = icmp eq i64 %349, 0
  br i1 %350, label %362, label %351

351:                                              ; preds = %341, %351
  %352 = phi %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* [ %355, %351 ], [ %342, %341 ]
  %353 = phi %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* [ %356, %351 ], [ %343, %341 ]
  %354 = phi i64 [ %360, %351 ], [ %349, %341 ]
  %355 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %352, i64 -1
  %356 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %353, i64 -1
  %357 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %356 to i64*
  %358 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %355 to i64*
  %359 = load i64, i64* %357, align 8
  store i64 %359, i64* %358, align 8
  %360 = add i64 %354, -1
  %361 = icmp eq i64 %360, 0
  br i1 %361, label %362, label %351, !llvm.loop !62

362:                                              ; preds = %351, %341
  %363 = phi %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* [ undef, %341 ], [ %355, %351 ]
  %364 = phi %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* [ %342, %341 ], [ %355, %351 ]
  %365 = phi %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* [ %343, %341 ], [ %356, %351 ]
  %366 = icmp ult i64 %346, 56
  br i1 %366, label %411, label %367

367:                                              ; preds = %362, %367
  %368 = phi %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* [ %405, %367 ], [ %364, %362 ]
  %369 = phi %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* [ %406, %367 ], [ %365, %362 ]
  %370 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %368, i64 -1
  %371 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %369, i64 -1
  %372 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %371 to i64*
  %373 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %370 to i64*
  %374 = load i64, i64* %372, align 8
  store i64 %374, i64* %373, align 8
  %375 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %368, i64 -2
  %376 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %369, i64 -2
  %377 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %376 to i64*
  %378 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %375 to i64*
  %379 = load i64, i64* %377, align 8
  store i64 %379, i64* %378, align 8
  %380 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %368, i64 -3
  %381 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %369, i64 -3
  %382 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %381 to i64*
  %383 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %380 to i64*
  %384 = load i64, i64* %382, align 8
  store i64 %384, i64* %383, align 8
  %385 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %368, i64 -4
  %386 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %369, i64 -4
  %387 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %386 to i64*
  %388 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %385 to i64*
  %389 = load i64, i64* %387, align 8
  store i64 %389, i64* %388, align 8
  %390 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %368, i64 -5
  %391 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %369, i64 -5
  %392 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %391 to i64*
  %393 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %390 to i64*
  %394 = load i64, i64* %392, align 8
  store i64 %394, i64* %393, align 8
  %395 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %368, i64 -6
  %396 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %369, i64 -6
  %397 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %396 to i64*
  %398 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %395 to i64*
  %399 = load i64, i64* %397, align 8
  store i64 %399, i64* %398, align 8
  %400 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %368, i64 -7
  %401 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %369, i64 -7
  %402 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %401 to i64*
  %403 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %400 to i64*
  %404 = load i64, i64* %402, align 8
  store i64 %404, i64* %403, align 8
  %405 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %368, i64 -8
  %406 = getelementptr inbounds %"class.v8::internal::compiler::BranchElimination::ControlPathConditions", %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %369, i64 -8
  %407 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %406 to i64*
  %408 = bitcast %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %405 to i64*
  %409 = load i64, i64* %407, align 8
  store i64 %409, i64* %408, align 8
  %410 = icmp eq %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %406, %238
  br i1 %410, label %411, label %367, !llvm.loop !63

411:                                              ; preds = %362, %367, %339
  %412 = phi %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* [ %265, %339 ], [ %363, %362 ], [ %405, %367 ]
  %413 = ptrtoint %"class.v8::internal::compiler::BranchElimination::ControlPathConditions"* %412 to i64
  br label %414

414:                                              ; preds = %234, %411
  %415 = phi i64 [ %413, %411 ], [ %179, %234 ]
  store i64 %415, i64* %140, align 8
  store i64 %236, i64* %8, align 8
  store i64 %235, i64* %5, align 8
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm"}
!8 = !{!9, !11}
!9 = distinct !{!9, !10, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm"}
!11 = distinct !{!11, !12, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE3endEv: argument 0"}
!12 = distinct !{!12, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE3endEv"}
!13 = !{!14, !16}
!14 = distinct !{!14, !15, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm: argument 0"}
!15 = distinct !{!15, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm"}
!16 = distinct !{!16, !17, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE5beginEv: argument 0"}
!17 = distinct !{!17, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE5beginEv"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNSt3__114__copy_alignedINS_6vectorIbN2v88internal13ZoneAllocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS7_IS8_XT0_EXLi0EEEESA_S9_: argument 0"}
!20 = distinct !{!20, !"_ZNSt3__114__copy_alignedINS_6vectorIbN2v88internal13ZoneAllocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS7_IS8_XT0_EXLi0EEEESA_S9_"}
!21 = !{!19, !22}
!22 = distinct !{!22, !23, !"_ZNSt3__14copyINS_6vectorIbN2v88internal13ZoneAllocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS7_IS8_XT0_EXLi0EEEESA_S9_: argument 0"}
!23 = distinct !{!23, !"_ZNSt3__14copyINS_6vectorIbN2v88internal13ZoneAllocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS7_IS8_XT0_EXLi0EEEESA_S9_"}
!24 = !{!25, !27}
!25 = distinct !{!25, !26, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm: argument 0"}
!26 = distinct !{!26, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm"}
!27 = distinct !{!27, !28, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE5beginEv: argument 0"}
!28 = distinct !{!28, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE5beginEv"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE3endEv: argument 0"}
!31 = distinct !{!31, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE3endEv"}
!32 = !{!33, !30}
!33 = distinct !{!33, !34, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm: argument 0"}
!34 = distinct !{!34, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm: argument 0"}
!37 = distinct !{!37, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZNSt3__114__copy_alignedINS_6vectorIbN2v88internal13ZoneAllocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS7_IS8_XT0_EXLi0EEEESA_S9_: argument 0"}
!40 = distinct !{!40, !"_ZNSt3__114__copy_alignedINS_6vectorIbN2v88internal13ZoneAllocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS7_IS8_XT0_EXLi0EEEESA_S9_"}
!41 = !{!39, !42}
!42 = distinct !{!42, !43, !"_ZNSt3__14copyINS_6vectorIbN2v88internal13ZoneAllocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS7_IS8_XT0_EXLi0EEEESA_S9_: argument 0"}
!43 = distinct !{!43, !"_ZNSt3__14copyINS_6vectorIbN2v88internal13ZoneAllocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS7_IS8_XT0_EXLi0EEEESA_S9_"}
!44 = !{!42}
!45 = distinct !{!45, !46}
!46 = !{!"llvm.loop.unroll.disable"}
!47 = !{!48}
!48 = distinct !{!48, !49}
!49 = distinct !{!49, !"LVerDomain"}
!50 = !{!51}
!51 = distinct !{!51, !49}
!52 = distinct !{!52, !53}
!53 = !{!"llvm.loop.isvectorized", i32 1}
!54 = distinct !{!54, !53}
!55 = distinct !{!55, !46}
!56 = !{!57}
!57 = distinct !{!57, !58}
!58 = distinct !{!58, !"LVerDomain"}
!59 = !{!60}
!60 = distinct !{!60, !58}
!61 = distinct !{!61, !53}
!62 = distinct !{!62, !46}
!63 = distinct !{!63, !53}
