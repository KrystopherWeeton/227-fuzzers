; ModuleID = '../../base/allocator/partition_allocator/page_allocator_internals_posix.cc'
source_filename = "../../base/allocator/partition_allocator/page_allocator_internals_posix.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

@_ZZN4base14GetAccessFlagsENS_30PageAccessibilityConfigurationEE7has_bti = internal global i8 0, align 1
@_ZGVZN4base14GetAccessFlagsENS_30PageAccessibilityConfigurationEE7has_bti = internal global i64 0, align 8
@_ZZN4base14GetAccessFlagsENS_30PageAccessibilityConfigurationEE7has_mte = internal global i8 0, align 1
@_ZGVZN4base14GetAccessFlagsENS_30PageAccessibilityConfigurationEE7has_mte = internal global i64 0, align 8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4base14GetAccessFlagsENS_30PageAccessibilityConfigurationE(i32) local_unnamed_addr #0 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base14GetAccessFlagsENS_30PageAccessibilityConfigurationEE7has_bti to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %9, !prof !2

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base14GetAccessFlagsENS_30PageAccessibilityConfigurationEE7has_bti) #3
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %4
  store i8 0, i8* @_ZZN4base14GetAccessFlagsENS_30PageAccessibilityConfigurationEE7has_bti, align 1
  %8 = tail call {}* @llvm.invariant.start.p0i8(i64 1, i8* nonnull @_ZZN4base14GetAccessFlagsENS_30PageAccessibilityConfigurationEE7has_bti)
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base14GetAccessFlagsENS_30PageAccessibilityConfigurationEE7has_bti) #3
  br label %9

9:                                                ; preds = %4, %7, %1
  %10 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base14GetAccessFlagsENS_30PageAccessibilityConfigurationEE7has_mte to i8*) acquire, align 8
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %17, !prof !2

12:                                               ; preds = %9
  %13 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base14GetAccessFlagsENS_30PageAccessibilityConfigurationEE7has_mte) #3
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %12
  store i8 0, i8* @_ZZN4base14GetAccessFlagsENS_30PageAccessibilityConfigurationEE7has_mte, align 1
  %16 = tail call {}* @llvm.invariant.start.p0i8(i64 1, i8* nonnull @_ZZN4base14GetAccessFlagsENS_30PageAccessibilityConfigurationEE7has_mte)
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base14GetAccessFlagsENS_30PageAccessibilityConfigurationEE7has_mte) #3
  br label %17

17:                                               ; preds = %12, %15, %9
  switch i32 %0, label %29 [
    i32 1, label %30
    i32 2, label %18
    i32 3, label %19
    i32 4, label %23
    i32 5, label %27
    i32 6, label %28
  ]

18:                                               ; preds = %17
  br label %30

19:                                               ; preds = %17
  %20 = load i8, i8* @_ZZN4base14GetAccessFlagsENS_30PageAccessibilityConfigurationEE7has_mte, align 1, !range !3
  %21 = icmp eq i8 %20, 0
  %22 = select i1 %21, i32 3, i32 35
  br label %30

23:                                               ; preds = %17
  %24 = load i8, i8* @_ZZN4base14GetAccessFlagsENS_30PageAccessibilityConfigurationEE7has_bti, align 1, !range !3
  %25 = icmp eq i8 %24, 0
  %26 = select i1 %25, i32 5, i32 21
  br label %30

27:                                               ; preds = %17
  br label %30

28:                                               ; preds = %17
  br label %30

29:                                               ; preds = %17
  br label %30

30:                                               ; preds = %17, %29, %28, %27, %23, %19, %18
  %31 = phi i32 [ 0, %29 ], [ 7, %28 ], [ 5, %27 ], [ %26, %23 ], [ %22, %19 ], [ 3, %18 ], [ %0, %17 ]
  ret i32 %31
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare {}* @llvm.invariant.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{i8 0, i8 2}
