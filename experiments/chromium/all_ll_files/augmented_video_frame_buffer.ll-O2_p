; ModuleID = '../../third_party/webrtc/modules/video_coding/codecs/multiplex/augmented_video_frame_buffer.cc'
source_filename = "../../third_party/webrtc/modules/video_coding/codecs/multiplex/augmented_video_frame_buffer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.webrtc::AugmentedVideoFrameBuffer" = type { %"class.webrtc::VideoFrameBuffer", i16, %"class.std::__1::unique_ptr", %"class.rtc::scoped_refptr" }
%"class.webrtc::VideoFrameBuffer" = type { %"class.rtc::RefCountInterface" }
%"class.rtc::RefCountInterface" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.rtc::scoped_refptr" = type { %"class.webrtc::VideoFrameBuffer"* }
%"class.rtc::scoped_refptr.1" = type { %"class.webrtc::I420BufferInterface"* }
%"class.webrtc::I420BufferInterface" = type { %"class.webrtc::PlanarYuv8Buffer" }
%"class.webrtc::PlanarYuv8Buffer" = type { %"class.webrtc::PlanarYuvBuffer" }
%"class.webrtc::PlanarYuvBuffer" = type { %"class.webrtc::VideoFrameBuffer" }

$_ZN6webrtc25AugmentedVideoFrameBufferD2Ev = comdat any

$_ZN6webrtc25AugmentedVideoFrameBufferD0Ev = comdat any

@_ZTVN6webrtc25AugmentedVideoFrameBufferE = hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.webrtc::AugmentedVideoFrameBuffer"*)* @_ZN6webrtc25AugmentedVideoFrameBufferD2Ev to i8*), i8* bitcast (void (%"class.webrtc::AugmentedVideoFrameBuffer"*)* @_ZN6webrtc25AugmentedVideoFrameBufferD0Ev to i8*), i8* bitcast (i32 (%"class.webrtc::AugmentedVideoFrameBuffer"*)* @_ZNK6webrtc25AugmentedVideoFrameBuffer4typeEv to i8*), i8* bitcast (i32 (%"class.webrtc::AugmentedVideoFrameBuffer"*)* @_ZNK6webrtc25AugmentedVideoFrameBuffer5widthEv to i8*), i8* bitcast (i32 (%"class.webrtc::AugmentedVideoFrameBuffer"*)* @_ZNK6webrtc25AugmentedVideoFrameBuffer6heightEv to i8*), i8* bitcast (void (%"class.rtc::scoped_refptr.1"*, %"class.webrtc::AugmentedVideoFrameBuffer"*)* @_ZN6webrtc25AugmentedVideoFrameBuffer6ToI420Ev to i8*), i8* bitcast (%"class.webrtc::I420BufferInterface"* (%"class.webrtc::AugmentedVideoFrameBuffer"*)* @_ZNK6webrtc25AugmentedVideoFrameBuffer7GetI420Ev to i8*), i8* bitcast (void (%"class.rtc::scoped_refptr"*, %"class.webrtc::VideoFrameBuffer"*, i32, i32, i32, i32, i32, i32)* @_ZN6webrtc16VideoFrameBuffer12CropAndScaleEiiiiii to i8*), i8* bitcast (void ()* @_ZN6webrtc16VideoFrameBuffer20GetMappedFrameBufferEN3rtc9ArrayViewINS0_4TypeELln4711EEE to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc25AugmentedVideoFrameBufferC2ERKN3rtc13scoped_refptrINS_16VideoFrameBufferEEENSt3__110unique_ptrIA_hNS7_14default_deleteIS9_EEEEt(%"class.webrtc::AugmentedVideoFrameBuffer"* nocapture, %"class.rtc::scoped_refptr"* nocapture readonly dereferenceable(8), i8*, i16 zeroext) unnamed_addr #0 align 2 {
  %5 = ptrtoint i8* %2 to i64
  %6 = getelementptr inbounds %"class.webrtc::AugmentedVideoFrameBuffer", %"class.webrtc::AugmentedVideoFrameBuffer"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6webrtc25AugmentedVideoFrameBufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.webrtc::AugmentedVideoFrameBuffer", %"class.webrtc::AugmentedVideoFrameBuffer"* %0, i64 0, i32 1
  store i16 %3, i16* %7, align 8
  %8 = getelementptr inbounds %"class.webrtc::AugmentedVideoFrameBuffer", %"class.webrtc::AugmentedVideoFrameBuffer"* %0, i64 0, i32 2
  %9 = bitcast %"class.std::__1::unique_ptr"* %8 to i64*
  store i64 %5, i64* %9, align 8
  %10 = getelementptr inbounds %"class.webrtc::AugmentedVideoFrameBuffer", %"class.webrtc::AugmentedVideoFrameBuffer"* %0, i64 0, i32 3, i32 0
  %11 = getelementptr inbounds %"class.rtc::scoped_refptr", %"class.rtc::scoped_refptr"* %1, i64 0, i32 0
  %12 = load %"class.webrtc::VideoFrameBuffer"*, %"class.webrtc::VideoFrameBuffer"** %11, align 8
  store %"class.webrtc::VideoFrameBuffer"* %12, %"class.webrtc::VideoFrameBuffer"** %10, align 8
  %13 = icmp eq %"class.webrtc::VideoFrameBuffer"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.webrtc::VideoFrameBuffer", %"class.webrtc::VideoFrameBuffer"* %12, i64 0, i32 0
  %16 = bitcast %"class.webrtc::VideoFrameBuffer"* %12 to void (%"class.rtc::RefCountInterface"*)***
  %17 = load void (%"class.rtc::RefCountInterface"*)**, void (%"class.rtc::RefCountInterface"*)*** %16, align 8
  %18 = load void (%"class.rtc::RefCountInterface"*)*, void (%"class.rtc::RefCountInterface"*)** %17, align 8
  tail call void %18(%"class.rtc::RefCountInterface"* %15) #6
  br label %19

19:                                               ; preds = %14, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6webrtc25AugmentedVideoFrameBuffer19GetVideoFrameBufferEv(%"class.rtc::scoped_refptr"* noalias nocapture sret, %"class.webrtc::AugmentedVideoFrameBuffer"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.rtc::scoped_refptr", %"class.rtc::scoped_refptr"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.webrtc::AugmentedVideoFrameBuffer", %"class.webrtc::AugmentedVideoFrameBuffer"* %1, i64 0, i32 3, i32 0
  %5 = load %"class.webrtc::VideoFrameBuffer"*, %"class.webrtc::VideoFrameBuffer"** %4, align 8
  store %"class.webrtc::VideoFrameBuffer"* %5, %"class.webrtc::VideoFrameBuffer"** %3, align 8
  %6 = icmp eq %"class.webrtc::VideoFrameBuffer"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.webrtc::VideoFrameBuffer", %"class.webrtc::VideoFrameBuffer"* %5, i64 0, i32 0
  %9 = bitcast %"class.webrtc::VideoFrameBuffer"* %5 to void (%"class.rtc::RefCountInterface"*)***
  %10 = load void (%"class.rtc::RefCountInterface"*)**, void (%"class.rtc::RefCountInterface"*)*** %9, align 8
  %11 = load void (%"class.rtc::RefCountInterface"*)*, void (%"class.rtc::RefCountInterface"*)** %10, align 8
  tail call void %11(%"class.rtc::RefCountInterface"* %8) #6
  br label %12

12:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @_ZNK6webrtc25AugmentedVideoFrameBuffer17GetAugmentingDataEv(%"class.webrtc::AugmentedVideoFrameBuffer"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::AugmentedVideoFrameBuffer", %"class.webrtc::AugmentedVideoFrameBuffer"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i16 @_ZNK6webrtc25AugmentedVideoFrameBuffer21GetAugmentingDataSizeEv(%"class.webrtc::AugmentedVideoFrameBuffer"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::AugmentedVideoFrameBuffer", %"class.webrtc::AugmentedVideoFrameBuffer"* %0, i64 0, i32 1
  %3 = load i16, i16* %2, align 8
  ret i16 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK6webrtc25AugmentedVideoFrameBuffer4typeEv(%"class.webrtc::AugmentedVideoFrameBuffer"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::AugmentedVideoFrameBuffer", %"class.webrtc::AugmentedVideoFrameBuffer"* %0, i64 0, i32 3, i32 0
  %3 = load %"class.webrtc::VideoFrameBuffer"*, %"class.webrtc::VideoFrameBuffer"** %2, align 8
  %4 = bitcast %"class.webrtc::VideoFrameBuffer"* %3 to i32 (%"class.webrtc::VideoFrameBuffer"*)***
  %5 = load i32 (%"class.webrtc::VideoFrameBuffer"*)**, i32 (%"class.webrtc::VideoFrameBuffer"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.webrtc::VideoFrameBuffer"*)*, i32 (%"class.webrtc::VideoFrameBuffer"*)** %5, i64 4
  %7 = load i32 (%"class.webrtc::VideoFrameBuffer"*)*, i32 (%"class.webrtc::VideoFrameBuffer"*)** %6, align 8
  %8 = tail call i32 %7(%"class.webrtc::VideoFrameBuffer"* %3) #6
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK6webrtc25AugmentedVideoFrameBuffer5widthEv(%"class.webrtc::AugmentedVideoFrameBuffer"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::AugmentedVideoFrameBuffer", %"class.webrtc::AugmentedVideoFrameBuffer"* %0, i64 0, i32 3, i32 0
  %3 = load %"class.webrtc::VideoFrameBuffer"*, %"class.webrtc::VideoFrameBuffer"** %2, align 8
  %4 = bitcast %"class.webrtc::VideoFrameBuffer"* %3 to i32 (%"class.webrtc::VideoFrameBuffer"*)***
  %5 = load i32 (%"class.webrtc::VideoFrameBuffer"*)**, i32 (%"class.webrtc::VideoFrameBuffer"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.webrtc::VideoFrameBuffer"*)*, i32 (%"class.webrtc::VideoFrameBuffer"*)** %5, i64 5
  %7 = load i32 (%"class.webrtc::VideoFrameBuffer"*)*, i32 (%"class.webrtc::VideoFrameBuffer"*)** %6, align 8
  %8 = tail call i32 %7(%"class.webrtc::VideoFrameBuffer"* %3) #6
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK6webrtc25AugmentedVideoFrameBuffer6heightEv(%"class.webrtc::AugmentedVideoFrameBuffer"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::AugmentedVideoFrameBuffer", %"class.webrtc::AugmentedVideoFrameBuffer"* %0, i64 0, i32 3, i32 0
  %3 = load %"class.webrtc::VideoFrameBuffer"*, %"class.webrtc::VideoFrameBuffer"** %2, align 8
  %4 = bitcast %"class.webrtc::VideoFrameBuffer"* %3 to i32 (%"class.webrtc::VideoFrameBuffer"*)***
  %5 = load i32 (%"class.webrtc::VideoFrameBuffer"*)**, i32 (%"class.webrtc::VideoFrameBuffer"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.webrtc::VideoFrameBuffer"*)*, i32 (%"class.webrtc::VideoFrameBuffer"*)** %5, i64 6
  %7 = load i32 (%"class.webrtc::VideoFrameBuffer"*)*, i32 (%"class.webrtc::VideoFrameBuffer"*)** %6, align 8
  %8 = tail call i32 %7(%"class.webrtc::VideoFrameBuffer"* %3) #6
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc25AugmentedVideoFrameBuffer6ToI420Ev(%"class.rtc::scoped_refptr.1"* noalias sret, %"class.webrtc::AugmentedVideoFrameBuffer"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::AugmentedVideoFrameBuffer", %"class.webrtc::AugmentedVideoFrameBuffer"* %1, i64 0, i32 3, i32 0
  %4 = load %"class.webrtc::VideoFrameBuffer"*, %"class.webrtc::VideoFrameBuffer"** %3, align 8
  %5 = bitcast %"class.webrtc::VideoFrameBuffer"* %4 to void (%"class.rtc::scoped_refptr.1"*, %"class.webrtc::VideoFrameBuffer"*)***
  %6 = load void (%"class.rtc::scoped_refptr.1"*, %"class.webrtc::VideoFrameBuffer"*)**, void (%"class.rtc::scoped_refptr.1"*, %"class.webrtc::VideoFrameBuffer"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.rtc::scoped_refptr.1"*, %"class.webrtc::VideoFrameBuffer"*)*, void (%"class.rtc::scoped_refptr.1"*, %"class.webrtc::VideoFrameBuffer"*)** %6, i64 7
  %8 = load void (%"class.rtc::scoped_refptr.1"*, %"class.webrtc::VideoFrameBuffer"*)*, void (%"class.rtc::scoped_refptr.1"*, %"class.webrtc::VideoFrameBuffer"*)** %7, align 8
  tail call void %8(%"class.rtc::scoped_refptr.1"* sret %0, %"class.webrtc::VideoFrameBuffer"* %4) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.webrtc::I420BufferInterface"* @_ZNK6webrtc25AugmentedVideoFrameBuffer7GetI420Ev(%"class.webrtc::AugmentedVideoFrameBuffer"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::AugmentedVideoFrameBuffer", %"class.webrtc::AugmentedVideoFrameBuffer"* %0, i64 0, i32 3, i32 0
  %3 = load %"class.webrtc::VideoFrameBuffer"*, %"class.webrtc::VideoFrameBuffer"** %2, align 8
  %4 = bitcast %"class.webrtc::VideoFrameBuffer"* %3 to %"class.webrtc::I420BufferInterface"* (%"class.webrtc::VideoFrameBuffer"*)***
  %5 = load %"class.webrtc::I420BufferInterface"* (%"class.webrtc::VideoFrameBuffer"*)**, %"class.webrtc::I420BufferInterface"* (%"class.webrtc::VideoFrameBuffer"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.webrtc::I420BufferInterface"* (%"class.webrtc::VideoFrameBuffer"*)*, %"class.webrtc::I420BufferInterface"* (%"class.webrtc::VideoFrameBuffer"*)** %5, i64 8
  %7 = load %"class.webrtc::I420BufferInterface"* (%"class.webrtc::VideoFrameBuffer"*)*, %"class.webrtc::I420BufferInterface"* (%"class.webrtc::VideoFrameBuffer"*)** %6, align 8
  %8 = tail call %"class.webrtc::I420BufferInterface"* %7(%"class.webrtc::VideoFrameBuffer"* %3) #6
  ret %"class.webrtc::I420BufferInterface"* %8
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc25AugmentedVideoFrameBufferD2Ev(%"class.webrtc::AugmentedVideoFrameBuffer"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.webrtc::AugmentedVideoFrameBuffer", %"class.webrtc::AugmentedVideoFrameBuffer"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6webrtc25AugmentedVideoFrameBufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::AugmentedVideoFrameBuffer", %"class.webrtc::AugmentedVideoFrameBuffer"* %0, i64 0, i32 3, i32 0
  %4 = load %"class.webrtc::VideoFrameBuffer"*, %"class.webrtc::VideoFrameBuffer"** %3, align 8
  %5 = icmp eq %"class.webrtc::VideoFrameBuffer"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.webrtc::VideoFrameBuffer", %"class.webrtc::VideoFrameBuffer"* %4, i64 0, i32 0
  %8 = bitcast %"class.webrtc::VideoFrameBuffer"* %4 to i32 (%"class.rtc::RefCountInterface"*)***
  %9 = load i32 (%"class.rtc::RefCountInterface"*)**, i32 (%"class.rtc::RefCountInterface"*)*** %8, align 8
  %10 = getelementptr inbounds i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %9, i64 1
  %11 = load i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %10, align 8
  %12 = tail call i32 %11(%"class.rtc::RefCountInterface"* %7) #6
  br label %13

13:                                               ; preds = %1, %6
  %14 = getelementptr inbounds %"class.webrtc::AugmentedVideoFrameBuffer", %"class.webrtc::AugmentedVideoFrameBuffer"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  store i8* null, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %18, label %17

17:                                               ; preds = %13
  tail call void @_ZdaPv(i8* nonnull %15) #7
  br label %18

18:                                               ; preds = %13, %17
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc25AugmentedVideoFrameBufferD0Ev(%"class.webrtc::AugmentedVideoFrameBuffer"*) unnamed_addr #2 comdat align 2 {
  tail call void @llvm.trap() #8
  unreachable
}

declare void @_ZN6webrtc16VideoFrameBuffer12CropAndScaleEiiiiii(%"class.rtc::scoped_refptr"* sret, %"class.webrtc::VideoFrameBuffer"*, i32, i32, i32, i32, i32, i32) unnamed_addr #3

declare void @_ZN6webrtc16VideoFrameBuffer20GetMappedFrameBufferEN3rtc9ArrayViewINS0_4TypeELln4711EEE() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }
attributes #8 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
