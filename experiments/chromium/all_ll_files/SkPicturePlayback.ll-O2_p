; ModuleID = '../../third_party/skia/src/core/SkPicturePlayback.cpp'
source_filename = "../../third_party/skia/src/core/SkPicturePlayback.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.SkCubicResampler = type { float, float }
%class.SkPicturePlayback = type { %class.SkPictureData*, i64 }
%class.SkPictureData = type <{ %class.SkTArray, %class.SkTArray.5, %class.sk_sp.19, %class.SkPath, %class.SkBitmap, %class.SkTArray.25, %class.SkTArray.27, %class.SkTArray.29, %class.SkTArray.37, %class.SkTArray.40, %class.SkTypefacePlayback, %"class.std::__1::unique_ptr.44", %struct.SkPictInfo, [4 x i8] }>
%class.SkTArray = type { %class.SkPaint*, i64 }
%class.SkPaint = type <{ %class.sk_sp, %class.sk_sp.1, %class.sk_sp.2, %class.sk_sp.3, %class.sk_sp.4, %struct.SkRGBA4f, float, float, %union.anon, [4 x i8] }>
%class.sk_sp = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.1 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.2 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.3 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.4 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon = type { %struct.anon }
%struct.anon = type { i32 }
%class.SkTArray.5 = type { %class.SkPath*, i64 }
%class.sk_sp.19 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.20, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.20 = type { %"struct.std::__1::atomic" }
%class.SkPath = type <{ %class.sk_sp.6, i32, %"struct.std::__1::atomic.9", %"struct.std::__1::atomic.9", i8, i8 }>
%class.sk_sp.6 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.7, %class.SkTDArray.8, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.SkRect = type { float, float, float, float }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.7 = type { i8*, i32, i32 }
%class.SkTDArray.8 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.14 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.9" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.14 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.15", [3 x i8] }
%"struct.std::__1::atomic.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl.17" }
%"struct.std::__1::__cxx_atomic_impl.17" = type { %"struct.std::__1::__cxx_atomic_base_impl.18" }
%"struct.std::__1::__cxx_atomic_base_impl.18" = type { i8 }
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl.12" }
%"struct.std::__1::__cxx_atomic_impl.12" = type { %"struct.std::__1::__cxx_atomic_base_impl.13" }
%"struct.std::__1::__cxx_atomic_base_impl.13" = type { i8 }
%class.SkBitmap = type { %class.sk_sp.21, %class.SkPixmap, %class.sk_sp.24 }
%class.sk_sp.21 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.22, i32, i32 }
%class.sk_sp.22 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.23, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.23 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.24 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%class.SkTArray.25 = type { %class.sk_sp.26*, i64 }
%class.sk_sp.26 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.15", [7 x i8] }>
%class.SkTArray.27 = type { %class.sk_sp.28*, i64 }
%class.sk_sp.28 = type { %class.SkDrawable* }
%class.SkDrawable = type { %class.SkFlattenable.base, i32 }
%class.SkTArray.29 = type { %class.sk_sp.30*, i64 }
%class.sk_sp.30 = type { %class.SkTextBlob* }
%class.SkTextBlob = type { %class.SkNVRefCnt.31, %struct.SkRect, i32, %"struct.std::__1::atomic.32" }
%class.SkNVRefCnt.31 = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.32" = type { %"struct.std::__1::__atomic_base.33" }
%"struct.std::__1::__atomic_base.33" = type { %"struct.std::__1::__atomic_base.34" }
%"struct.std::__1::__atomic_base.34" = type { %"struct.std::__1::__cxx_atomic_impl.35" }
%"struct.std::__1::__cxx_atomic_impl.35" = type { %"struct.std::__1::__cxx_atomic_base_impl.36" }
%"struct.std::__1::__cxx_atomic_base_impl.36" = type { i32 }
%class.SkTArray.37 = type { %class.sk_sp.38*, i64 }
%class.sk_sp.38 = type { %class.SkVertices* }
%class.SkVertices = type <{ %class.SkNVRefCnt.39, i32, %struct.SkPoint*, i16*, %struct.SkPoint*, i32*, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkNVRefCnt.39 = type { %"struct.std::__1::atomic" }
%class.SkTArray.40 = type { %class.sk_sp.41*, i64 }
%class.sk_sp.41 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.SkTypefacePlayback = type { i64, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.sk_sp.42* }
%class.sk_sp.42 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %class.SkFactoryPlayback* }
%class.SkFactoryPlayback = type { i32, void (%class.sk_sp.55*, %class.SkReadBuffer*)** }
%class.sk_sp.55 = type { %class.SkFlattenable* }
%class.SkFlattenable = type { %class.SkRefCnt.base, [4 x i8] }
%struct.SkPictInfo = type { [8 x i8], i32, %struct.SkRect }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.59, [384 x i64], %class.sk_sp.60, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.61", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.67" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.59 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.60 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%"class.SkPicture::AbortCallback" = type { i32 (...)** }
%class.SkReadBuffer = type <{ i8*, i8*, i8*, %class.SkTHashMap, i32, [4 x i8], %class.sk_sp.42*, i32, [4 x i8], {}**, i32, [4 x i8], %struct.SkDeserialProcs, i8, [7 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.47" }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, void (%class.sk_sp.55*, %class.SkReadBuffer*)* }
%struct.SkDeserialProcs = type { void (%class.sk_sp.53*, i8*, i64, i8*)*, i8*, void (%class.sk_sp.54*, i8*, i64, i8*)*, i8*, void (%class.sk_sp.42*, i8*, i64, i8*)*, i8* }
%class.sk_sp.53 = type { %class.SkPicture* }
%class.sk_sp.54 = type { %class.SkImage* }
%class.SkM44 = type { [16 x float] }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%"struct.SkRegion::RunHead" = type opaque
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%class.SkMatrix = type { [9 x float], i32 }
%class.SkString = type { %class.sk_sp.73 }
%class.sk_sp.73 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%struct.SkSamplingOptions = type { i8, %struct.SkCubicResampler, i32, i32 }
%class.SkTArray.81 = type { %class.SkMatrix*, i64 }
%"struct.SkCanvas::Lattice" = type { i32*, i32*, i8*, i32, i32, %struct.SkIRect*, i32* }
%struct.SkDrawShadowRec = type { %struct.SkPoint3, %struct.SkPoint3, float, i32, i32, i32 }
%struct.SkPoint3 = type { float, float, float }
%"struct.SkCanvas::SaveLayerRec" = type <{ %struct.SkRect*, %class.SkPaint*, %class.SkImageFilter*, i32, [4 x i8] }>
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%struct.SkRSXform = type { float, float, float, float }
%"struct.SkCanvas::ImageSetEntry" = type <{ %class.sk_sp.41, %struct.SkRect, %struct.SkRect, i32, float, i32, i8, [3 x i8] }>

$_ZN8SkTArrayI8SkMatrixLb0EE12checkReallocEiNS1_11ReallocTypeE = comdat any

@__const._ZN17SkPicturePlayback8handleOpEP12SkReadBuffer8DrawTypejP8SkCanvasRK5SkM44.sampling.4 = private unnamed_addr constant { i8, [3 x i8], %struct.SkCubicResampler, i32, i32 } { i8 -86, [3 x i8] c"\AA\AA\AA", %struct.SkCubicResampler { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i32 -1431655766, i32 -1431655766 }, align 4
@constinit.5 = private unnamed_addr constant [16 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00], align 4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17SkPicturePlayback4drawEP8SkCanvasPN9SkPicture13AbortCallbackEP12SkReadBuffer(%class.SkPicturePlayback*, %class.SkCanvas*, %"class.SkPicture::AbortCallback"*, %class.SkReadBuffer*) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.SkReadBuffer, align 8
  %6 = alloca %class.SkM44, align 4
  %7 = bitcast %class.SkReadBuffer* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %7) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 136, i1 false)
  %8 = getelementptr inbounds %class.SkPicturePlayback, %class.SkPicturePlayback* %0, i64 0, i32 0
  %9 = load %class.SkPictureData*, %class.SkPictureData** %8, align 8
  %10 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %9, i64 0, i32 2, i32 0
  %11 = load %class.SkData*, %class.SkData** %10, align 8
  %12 = getelementptr inbounds %class.SkData, %class.SkData* %11, i64 0, i32 3
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %class.SkData, %class.SkData* %11, i64 0, i32 4
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %5, i64 0, i32 6
  store %class.sk_sp.42* null, %class.sk_sp.42** %16, align 8
  %17 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %5, i64 0, i32 7
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %5, i64 0, i32 9
  %19 = bitcast {}*** %18 to void (%class.sk_sp.55*, %class.SkReadBuffer*)***
  store void (%class.sk_sp.55*, %class.SkReadBuffer*)** null, void (%class.sk_sp.55*, %class.SkReadBuffer*)*** %19, align 8
  %20 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %5, i64 0, i32 10
  store i32 0, i32* %20, align 8
  %21 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %5, i64 0, i32 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 44, i1 false) #7
  %22 = bitcast %struct.SkDeserialProcs* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 49, i1 false) #7
  call void @_ZN12SkReadBuffer9setMemoryEPKvm(%class.SkReadBuffer* nonnull %5, i8* %13, i64 %15) #7
  %23 = bitcast %class.SkM44* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %23) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %23, i8 -1, i64 64, i1 false)
  call void @_ZNK8SkCanvas16getLocalToDeviceEv(%class.SkM44* nonnull sret %6, %class.SkCanvas* %1) #7
  %24 = icmp eq %class.SkCanvas* %1, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %4
  %26 = call i32 @_ZNK8SkCanvas12getSaveCountEv(%class.SkCanvas* nonnull %1) #7
  br label %27

27:                                               ; preds = %4, %25
  %28 = phi i32 [ 0, %4 ], [ %26, %25 ]
  %29 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %5, i64 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %5, i64 0, i32 1
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ult i8* %30, %32
  br i1 %33, label %34, label %80

34:                                               ; preds = %27
  %35 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %5, i64 0, i32 13
  %36 = icmp eq %"class.SkPicture::AbortCallback"* %2, null
  %37 = bitcast %"class.SkPicture::AbortCallback"* %2 to i1 (%"class.SkPicture::AbortCallback"*)***
  %38 = bitcast %class.SkReadBuffer* %5 to i64*
  %39 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %5, i64 0, i32 2
  %40 = bitcast i8** %39 to i64*
  %41 = getelementptr inbounds %class.SkPicturePlayback, %class.SkPicturePlayback* %0, i64 0, i32 1
  br label %42

42:                                               ; preds = %34, %76
  %43 = phi i8* [ %30, %34 ], [ %77, %76 ]
  %44 = load i8, i8* %35, align 8, !range !2
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %80

46:                                               ; preds = %42
  %47 = ptrtoint i8* %43 to i64
  br i1 %36, label %55, label %48

48:                                               ; preds = %46
  %49 = load i1 (%"class.SkPicture::AbortCallback"*)**, i1 (%"class.SkPicture::AbortCallback"*)*** %37, align 8
  %50 = getelementptr inbounds i1 (%"class.SkPicture::AbortCallback"*)*, i1 (%"class.SkPicture::AbortCallback"*)** %49, i64 2
  %51 = load i1 (%"class.SkPicture::AbortCallback"*)*, i1 (%"class.SkPicture::AbortCallback"*)** %50, align 8
  %52 = call zeroext i1 %51(%"class.SkPicture::AbortCallback"* nonnull %2) #7
  br i1 %52, label %87, label %53

53:                                               ; preds = %48
  %54 = load i64, i64* %38, align 8
  br label %55

55:                                               ; preds = %53, %46
  %56 = phi i64 [ %54, %53 ], [ %47, %46 ]
  %57 = load i64, i64* %40, align 8
  %58 = sub i64 %56, %57
  store i64 %58, i64* %41, align 8
  %59 = call i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer* nonnull %5) #7
  %60 = lshr i32 %59, 24
  %61 = and i32 %59, 16777215
  %62 = icmp eq i32 %61, 16777215
  br i1 %62, label %63, label %65

63:                                               ; preds = %55
  %64 = call i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer* nonnull %5) #7
  br label %65

65:                                               ; preds = %63, %55
  %66 = phi i32 [ %64, %63 ], [ %61, %55 ]
  %67 = icmp ne i32 %66, 0
  %68 = icmp ne i32 %60, 0
  %69 = and i1 %68, %67
  %70 = icmp ult i32 %59, 1275068416
  %71 = and i1 %70, %69
  br i1 %71, label %73, label %72

72:                                               ; preds = %65
  call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* nonnull %5) #7
  br label %73

73:                                               ; preds = %65, %72
  %74 = load i8, i8* %35, align 8, !range !2
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %76, label %87

76:                                               ; preds = %73
  call void @_ZN17SkPicturePlayback8handleOpEP12SkReadBuffer8DrawTypejP8SkCanvasRK5SkM44(%class.SkPicturePlayback* %0, %class.SkReadBuffer* nonnull %5, i32 %60, i32 %66, %class.SkCanvas* %1, %class.SkM44* nonnull dereferenceable(64) %6)
  %77 = load i8*, i8** %29, align 8
  %78 = load i8*, i8** %31, align 8
  %79 = icmp ult i8* %77, %78
  br i1 %79, label %42, label %80

80:                                               ; preds = %42, %76, %27
  %81 = icmp eq %class.SkReadBuffer* %3, null
  br i1 %81, label %87, label %82

82:                                               ; preds = %80
  %83 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %5, i64 0, i32 13
  %84 = load i8, i8* %83, align 8, !range !2
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %87, label %86

86:                                               ; preds = %82
  call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* nonnull %3) #7
  br label %87

87:                                               ; preds = %73, %48, %86, %82, %80
  br i1 %24, label %89, label %88

88:                                               ; preds = %87
  call void @_ZN8SkCanvas14restoreToCountEi(%class.SkCanvas* nonnull %1, i32 %28) #7
  br label %89

89:                                               ; preds = %87, %88
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %23) #7
  %90 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %5, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %91 = load %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"** %90, align 8
  store %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* null, %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"** %90, align 8
  %92 = icmp eq %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* %91, null
  br i1 %92, label %95, label %93

93:                                               ; preds = %89
  %94 = bitcast %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* %91 to i8*
  call void @_ZdaPv(i8* %94) #8
  br label %95

95:                                               ; preds = %89, %93
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %7) #7
  %96 = icmp eq %class.SkPicturePlayback* %0, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %95
  %98 = getelementptr inbounds %class.SkPicturePlayback, %class.SkPicturePlayback* %0, i64 0, i32 1
  store i64 0, i64* %98, align 8
  br label %99

99:                                               ; preds = %95, %97
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZNK8SkCanvas16getLocalToDeviceEv(%class.SkM44* sret, %class.SkCanvas*) local_unnamed_addr #2

declare i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17SkPicturePlayback8handleOpEP12SkReadBuffer8DrawTypejP8SkCanvasRK5SkM44(%class.SkPicturePlayback* readonly, %class.SkReadBuffer*, i32, i32, %class.SkCanvas*, %class.SkM44* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %7 = alloca { <2 x float>, <2 x float> }, align 8
  %8 = alloca %class.SkRegion, align 8
  %9 = alloca %struct.SkRect, align 4
  %10 = alloca %class.SkRRect, align 4
  %11 = alloca %class.sk_sp.1, align 8
  %12 = alloca %class.SkMatrix, align 16
  %13 = alloca %class.SkM44, align 16
  %14 = alloca %struct.SkRect, align 4
  %15 = alloca %class.SkString, align 8
  %16 = alloca %class.sk_sp.19, align 8
  %17 = alloca %struct.SkRect, align 4
  %18 = alloca %struct.SkSamplingOptions, align 4
  %19 = alloca %struct.SkSamplingOptions, align 4
  %20 = alloca %class.SkMatrix, align 16
  %21 = alloca %class.SkRRect, align 4
  %22 = alloca %class.SkRRect, align 4
  %23 = alloca %struct.SkRect, align 4
  %24 = alloca %struct.SkRGBA4f, align 4
  %25 = alloca %struct.SkSamplingOptions, align 4
  %26 = alloca %struct.SkSamplingOptions, align 4
  %27 = alloca %struct.SkSamplingOptions, align 4
  %28 = alloca %class.SkTArray.81, align 8
  %29 = alloca %struct.SkPoint, align 4
  %30 = alloca %struct.SkSamplingOptions, align 4
  %31 = alloca %struct.SkPoint, align 4
  %32 = alloca %struct.SkSamplingOptions, align 4
  %33 = alloca %"struct.SkCanvas::Lattice", align 8
  %34 = alloca %"struct.SkCanvas::Lattice", align 8
  %35 = alloca %struct.SkIRect, align 4
  %36 = alloca %struct.SkRect, align 4
  %37 = alloca %struct.SkRect, align 4
  %38 = alloca %struct.SkRect, align 4
  %39 = alloca %struct.SkSamplingOptions, align 4
  %40 = alloca { <2 x float>, <2 x float> }, align 8
  %41 = bitcast { <2 x float>, <2 x float> }* %40 to %struct.SkRect*
  %42 = alloca { <2 x float>, <2 x float> }, align 8
  %43 = bitcast { <2 x float>, <2 x float> }* %42 to %struct.SkRect*
  %44 = alloca %struct.SkSamplingOptions, align 4
  %45 = alloca %struct.SkRect, align 4
  %46 = alloca %class.SkMatrix, align 16
  %47 = alloca %struct.SkRect, align 4
  %48 = alloca %class.SkRegion, align 8
  %49 = alloca %class.SkRRect, align 4
  %50 = alloca %struct.SkDrawShadowRec, align 4
  %51 = alloca %class.SkString, align 8
  %52 = alloca %struct.SkRect, align 4
  %53 = alloca %"struct.SkCanvas::SaveLayerRec", align 8
  %54 = alloca %struct.SkRect, align 4
  %55 = alloca %class.SkMatrix, align 16
  %56 = alloca %class.SkM44, align 4
  %57 = alloca %class.SkM44, align 4
  %58 = alloca %class.SkMatrix, align 16
  %59 = alloca %class.SkM44, align 4
  %60 = alloca %class.SkM44, align 4
  switch i32 %2, label %1547 [
    i32 36, label %61
    i32 63, label %65
    i32 1, label %66
    i32 2, label %139
    i32 3, label %187
    i32 4, label %237
    i32 69, label %286
    i32 41, label %138
    i32 42, label %138
    i32 5, label %308
    i32 68, label %320
    i32 53, label %345
    i32 60, label %369
    i32 48, label %384
    i32 10, label %447
    i32 11, label %460
    i32 54, label %464
    i32 55, label %488
    i32 40, label %519
    i32 66, label %530
    i32 64, label %549
    i32 75, label %549
    i32 46, label %784
    i32 72, label %827
    i32 59, label %862
    i32 74, label %904
    i32 49, label %941
    i32 50, label %983
    i32 73, label %1034
    i32 12, label %1080
    i32 13, label %1091
    i32 67, label %1099
    i32 43, label %1107
    i32 14, label %1140
    i32 15, label %1165
    i32 44, label %1189
    i32 16, label %1222
    i32 21, label %1235
    i32 61, label %1246
    i32 22, label %1257
    i32 58, label %1267
    i32 45, label %1310
    i32 62, label %1343
    i32 70, label %1385
    i32 28, label %1395
    i32 29, label %1396
    i32 30, label %1398
    i32 65, label %1400
    i32 52, label %1410
    i32 32, label %1478
    i32 71, label %1481
    i32 33, label %1485
    i32 34, label %1541
    i32 35, label %1544
  ]

61:                                               ; preds = %6
  %62 = add i32 %3, -4
  %63 = zext i32 %62 to i64
  %64 = tail call i8* @_ZN12SkReadBuffer4skipEm(%class.SkReadBuffer* %1, i64 %63) #7
  br label %138

65:                                               ; preds = %6
  tail call void @_ZN8SkCanvas5flushEv(%class.SkCanvas* %4) #7
  br label %138

66:                                               ; preds = %6
  %67 = getelementptr inbounds %class.SkPicturePlayback, %class.SkPicturePlayback* %0, i64 0, i32 0
  %68 = load %class.SkPictureData*, %class.SkPictureData** %67, align 8
  %69 = tail call i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer* %1) #7
  %70 = icmp sgt i32 %69, 0
  br i1 %70, label %71, label %78

71:                                               ; preds = %66
  %72 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %68, i64 0, i32 1, i32 1
  %73 = load i64, i64* %72, align 8
  %74 = lshr i64 %73, 1
  %75 = trunc i64 %74 to i32
  %76 = and i32 %75, 2147483647
  %77 = icmp sgt i32 %69, %76
  br i1 %77, label %78, label %79

78:                                               ; preds = %71, %66
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #7
  br label %79

79:                                               ; preds = %78, %71
  %80 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %81 = load i8, i8* %80, align 8, !range !2
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %83, label %89

83:                                               ; preds = %79
  %84 = add nsw i32 %69, -1
  %85 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %68, i64 0, i32 1, i32 0
  %86 = load %class.SkPath*, %class.SkPath** %85, align 8
  %87 = sext i32 %84 to i64
  %88 = getelementptr inbounds %class.SkPath, %class.SkPath* %86, i64 %87
  br label %91

89:                                               ; preds = %79
  %90 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %68, i64 0, i32 3
  br label %91

91:                                               ; preds = %83, %89
  %92 = phi %class.SkPath* [ %88, %83 ], [ %90, %89 ]
  %93 = tail call i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer* %1) #7
  %94 = and i32 %93, 15
  %95 = icmp ult i32 %94, 2
  br i1 %95, label %97, label %96

96:                                               ; preds = %91
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #7
  br label %97

97:                                               ; preds = %91, %96
  %98 = load i8, i8* %80, align 8, !range !2
  %99 = icmp eq i8 %98, 0
  %100 = select i1 %99, i32 %94, i32 1
  %101 = and i32 %93, 16
  %102 = icmp ne i32 %101, 0
  %103 = tail call i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer* %1) #7
  %104 = sext i32 %103 to i64
  %105 = icmp eq i32 %103, 0
  br i1 %105, label %118, label %106

106:                                              ; preds = %97
  %107 = and i64 %104, 3
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %109, label %117

109:                                              ; preds = %106
  %110 = bitcast %class.SkReadBuffer* %1 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 2
  %113 = bitcast i8** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = sub i64 %111, %114
  %116 = icmp ugt i64 %115, %104
  br i1 %116, label %117, label %118

117:                                              ; preds = %109, %106
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #7
  br label %118

118:                                              ; preds = %97, %109, %117
  %119 = load i8, i8* %80, align 8, !range !2
  %120 = icmp eq i8 %119, 0
  br i1 %120, label %121, label %138

121:                                              ; preds = %118
  tail call void @_ZN8SkCanvas8clipPathERK6SkPath8SkClipOpb(%class.SkCanvas* %4, %class.SkPath* dereferenceable(16) %92, i32 %100, i1 zeroext %102) #7
  %122 = bitcast %class.SkCanvas* %4 to i1 (%class.SkCanvas*)***
  %123 = load i1 (%class.SkCanvas*)**, i1 (%class.SkCanvas*)*** %122, align 8
  %124 = getelementptr inbounds i1 (%class.SkCanvas*)*, i1 (%class.SkCanvas*)** %123, i64 4
  %125 = load i1 (%class.SkCanvas*)*, i1 (%class.SkCanvas*)** %124, align 8
  %126 = tail call zeroext i1 %125(%class.SkCanvas* %4) #7
  %127 = icmp ne i32 %103, 0
  %128 = and i1 %127, %126
  br i1 %128, label %129, label %138

129:                                              ; preds = %121
  %130 = bitcast %class.SkReadBuffer* %1 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 2
  %133 = bitcast i8** %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = sub i64 %104, %131
  %136 = add i64 %135, %134
  %137 = tail call i8* @_ZN12SkReadBuffer4skipEm(%class.SkReadBuffer* %1, i64 %136) #7
  br label %138

138:                                              ; preds = %1155, %1178, %477, %302, %298, %294, %1377, %1383, %1342, %1336, %1233, %1222, %1182, %1159, %1139, %1134, %1106, %1099, %1098, %1091, %783, %553, %481, %452, %447, %446, %430, %325, %320, %286, %121, %129, %118, %61, %65, %319, %460, %6, %6, %1395, %1396, %1398, %1407, %1478, %1481, %1485, %1541, %1544, %1547, %186, %236, %285, %368, %383, %518, %529, %548, %826, %861, %903, %940, %982, %1033, %1079, %1090, %1221, %1245, %1256, %1266, %1309, %1394, %1477
  ret void

139:                                              ; preds = %6
  %140 = bitcast %class.SkRegion* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %140) #7
  %141 = bitcast %class.SkRegion* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %141, i8 -86, i64 24, i1 false)
  call void @_ZN8SkRegionC1Ev(%class.SkRegion* nonnull %8) #7
  call void @_ZN12SkReadBuffer10readRegionEP8SkRegion(%class.SkReadBuffer* %1, %class.SkRegion* nonnull %8) #7
  %142 = call i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer* %1) #7
  %143 = and i32 %142, 15
  %144 = icmp ult i32 %143, 2
  br i1 %144, label %146, label %145

145:                                              ; preds = %139
  call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #7
  br label %146

146:                                              ; preds = %139, %145
  %147 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %148 = load i8, i8* %147, align 8, !range !2
  %149 = icmp eq i8 %148, 0
  %150 = select i1 %149, i32 %143, i32 1
  %151 = call i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer* %1) #7
  %152 = sext i32 %151 to i64
  %153 = icmp eq i32 %151, 0
  br i1 %153, label %166, label %154

154:                                              ; preds = %146
  %155 = and i64 %152, 3
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %157, label %165

157:                                              ; preds = %154
  %158 = bitcast %class.SkReadBuffer* %1 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 2
  %161 = bitcast i8** %160 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = sub i64 %159, %162
  %164 = icmp ugt i64 %163, %152
  br i1 %164, label %165, label %166

165:                                              ; preds = %157, %154
  call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #7
  br label %166

166:                                              ; preds = %146, %157, %165
  %167 = load i8, i8* %147, align 8, !range !2
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %186

169:                                              ; preds = %166
  call void @_ZN8SkCanvas10clipRegionERK8SkRegion8SkClipOp(%class.SkCanvas* %4, %class.SkRegion* nonnull dereferenceable(24) %8, i32 %150) #7
  %170 = bitcast %class.SkCanvas* %4 to i1 (%class.SkCanvas*)***
  %171 = load i1 (%class.SkCanvas*)**, i1 (%class.SkCanvas*)*** %170, align 8
  %172 = getelementptr inbounds i1 (%class.SkCanvas*)*, i1 (%class.SkCanvas*)** %171, i64 4
  %173 = load i1 (%class.SkCanvas*)*, i1 (%class.SkCanvas*)** %172, align 8
  %174 = call zeroext i1 %173(%class.SkCanvas* %4) #7
  %175 = icmp ne i32 %151, 0
  %176 = and i1 %175, %174
  br i1 %176, label %177, label %186

177:                                              ; preds = %169
  %178 = bitcast %class.SkReadBuffer* %1 to i64*
  %179 = load i64, i64* %178, align 8
  %180 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 2
  %181 = bitcast i8** %180 to i64*
  %182 = load i64, i64* %181, align 8
  %183 = sub i64 %152, %179
  %184 = add i64 %183, %182
  %185 = call i8* @_ZN12SkReadBuffer4skipEm(%class.SkReadBuffer* %1, i64 %184) #7
  br label %186

186:                                              ; preds = %169, %177, %166
  call void @_ZN8SkRegionD1Ev(%class.SkRegion* nonnull %8) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %140) #7
  br label %138

187:                                              ; preds = %6
  %188 = bitcast %struct.SkRect* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %188) #7
  %189 = bitcast %struct.SkRect* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %189, i8 -1, i64 16, i1 false)
  call void @_ZN12SkReadBuffer8readRectEP6SkRect(%class.SkReadBuffer* %1, %struct.SkRect* nonnull %9) #7
  %190 = call i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer* %1) #7
  %191 = and i32 %190, 15
  %192 = icmp ult i32 %191, 2
  br i1 %192, label %194, label %193

193:                                              ; preds = %187
  call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #7
  br label %194

194:                                              ; preds = %187, %193
  %195 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %196 = load i8, i8* %195, align 8, !range !2
  %197 = icmp eq i8 %196, 0
  %198 = select i1 %197, i32 %191, i32 1
  %199 = and i32 %190, 16
  %200 = icmp ne i32 %199, 0
  %201 = call i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer* %1) #7
  %202 = sext i32 %201 to i64
  %203 = icmp eq i32 %201, 0
  br i1 %203, label %216, label %204

204:                                              ; preds = %194
  %205 = and i64 %202, 3
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %207, label %215

207:                                              ; preds = %204
  %208 = bitcast %class.SkReadBuffer* %1 to i64*
  %209 = load i64, i64* %208, align 8
  %210 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 2
  %211 = bitcast i8** %210 to i64*
  %212 = load i64, i64* %211, align 8
  %213 = sub i64 %209, %212
  %214 = icmp ugt i64 %213, %202
  br i1 %214, label %215, label %216

215:                                              ; preds = %207, %204
  call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #7
  br label %216

216:                                              ; preds = %194, %207, %215
  %217 = load i8, i8* %195, align 8, !range !2
  %218 = icmp eq i8 %217, 0
  br i1 %218, label %219, label %236

219:                                              ; preds = %216
  call void @_ZN8SkCanvas8clipRectERK6SkRect8SkClipOpb(%class.SkCanvas* %4, %struct.SkRect* nonnull dereferenceable(16) %9, i32 %198, i1 zeroext %200) #7
  %220 = bitcast %class.SkCanvas* %4 to i1 (%class.SkCanvas*)***
  %221 = load i1 (%class.SkCanvas*)**, i1 (%class.SkCanvas*)*** %220, align 8
  %222 = getelementptr inbounds i1 (%class.SkCanvas*)*, i1 (%class.SkCanvas*)** %221, i64 4
  %223 = load i1 (%class.SkCanvas*)*, i1 (%class.SkCanvas*)** %222, align 8
  %224 = call zeroext i1 %223(%class.SkCanvas* %4) #7
  %225 = icmp ne i32 %201, 0
  %226 = and i1 %225, %224
  br i1 %226, label %227, label %236

227:                                              ; preds = %219
  %228 = bitcast %class.SkReadBuffer* %1 to i64*
  %229 = load i64, i64* %228, align 8
  %230 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 2
  %231 = bitcast i8** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = sub i64 %202, %229
  %234 = add i64 %233, %232
  %235 = call i8* @_ZN12SkReadBuffer4skipEm(%class.SkReadBuffer* %1, i64 %234) #7
  br label %236

236:                                              ; preds = %219, %227, %216
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %188) #7
  br label %138

237:                                              ; preds = %6
  %238 = bitcast %class.SkRRect* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %238) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %238, i8 0, i64 52, i1 false) #7
  call void @_ZN12SkReadBuffer9readRRectEP7SkRRect(%class.SkReadBuffer* %1, %class.SkRRect* nonnull %10) #7
  %239 = call i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer* %1) #7
  %240 = and i32 %239, 15
  %241 = icmp ult i32 %240, 2
  br i1 %241, label %243, label %242

242:                                              ; preds = %237
  call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #7
  br label %243

243:                                              ; preds = %237, %242
  %244 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %245 = load i8, i8* %244, align 8, !range !2
  %246 = icmp eq i8 %245, 0
  %247 = select i1 %246, i32 %240, i32 1
  %248 = and i32 %239, 16
  %249 = icmp ne i32 %248, 0
  %250 = call i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer* %1) #7
  %251 = sext i32 %250 to i64
  %252 = icmp eq i32 %250, 0
  br i1 %252, label %265, label %253

253:                                              ; preds = %243
  %254 = and i64 %251, 3
  %255 = icmp eq i64 %254, 0
  br i1 %255, label %256, label %264

256:                                              ; preds = %253
  %257 = bitcast %class.SkReadBuffer* %1 to i64*
  %258 = load i64, i64* %257, align 8
  %259 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 2
  %260 = bitcast i8** %259 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = sub i64 %258, %261
  %263 = icmp ugt i64 %262, %251
  br i1 %263, label %264, label %265

264:                                              ; preds = %256, %253
  call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #7
  br label %265

265:                                              ; preds = %243, %256, %264
  %266 = load i8, i8* %244, align 8, !range !2
  %267 = icmp eq i8 %266, 0
  br i1 %267, label %268, label %285

268:                                              ; preds = %265
  call void @_ZN8SkCanvas9clipRRectERK7SkRRect8SkClipOpb(%class.SkCanvas* %4, %class.SkRRect* nonnull dereferenceable(52) %10, i32 %247, i1 zeroext %249) #7
  %269 = bitcast %class.SkCanvas* %4 to i1 (%class.SkCanvas*)***
  %270 = load i1 (%class.SkCanvas*)**, i1 (%class.SkCanvas*)*** %269, align 8
  %271 = getelementptr inbounds i1 (%class.SkCanvas*)*, i1 (%class.SkCanvas*)** %270, i64 4
  %272 = load i1 (%class.SkCanvas*)*, i1 (%class.SkCanvas*)** %271, align 8
  %273 = call zeroext i1 %272(%class.SkCanvas* %4) #7
  %274 = icmp ne i32 %250, 0
  %275 = and i1 %274, %273
  br i1 %275, label %276, label %285

276:                                              ; preds = %268
  %277 = bitcast %class.SkReadBuffer* %1 to i64*
  %278 = load i64, i64* %277, align 8
  %279 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 2
  %280 = bitcast i8** %279 to i64*
  %281 = load i64, i64* %280, align 8
  %282 = sub i64 %251, %278
  %283 = add i64 %282, %281
  %284 = call i8* @_ZN12SkReadBuffer4skipEm(%class.SkReadBuffer* %1, i64 %283) #7
  br label %285

285:                                              ; preds = %268, %276, %265
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %238) #7
  br label %138

286:                                              ; preds = %6
  %287 = getelementptr inbounds %class.SkPicturePlayback, %class.SkPicturePlayback* %0, i64 0, i32 0
  %288 = load %class.SkPictureData*, %class.SkPictureData** %287, align 8
  %289 = tail call dereferenceable(72) %class.SkPaint* @_ZNK13SkPictureData13requiredPaintEP12SkReadBuffer(%class.SkPictureData* %288, %class.SkReadBuffer* %1) #7
  %290 = tail call i32 @_ZN12SkReadBuffer8checkIntEii(%class.SkReadBuffer* %1, i32 0, i32 1) #7
  %291 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %292 = load i8, i8* %291, align 8, !range !2
  %293 = icmp eq i8 %292, 0
  br i1 %293, label %294, label %138

294:                                              ; preds = %286
  call void @_ZNK7SkPaint9refShaderEv(%class.sk_sp.1* nonnull sret %11, %class.SkPaint* %289) #7
  call void @_ZN8SkCanvas10clipShaderE5sk_spI8SkShaderE8SkClipOp(%class.SkCanvas* %4, %class.sk_sp.1* nonnull %11, i32 %290) #7
  %295 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %11, i64 0, i32 0
  %296 = load %class.SkShader*, %class.SkShader** %295, align 8
  %297 = icmp eq %class.SkShader* %296, null
  br i1 %297, label %138, label %298

298:                                              ; preds = %294
  %299 = getelementptr inbounds %class.SkShader, %class.SkShader* %296, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %300 = atomicrmw add i32* %299, i32 -1 acq_rel
  %301 = icmp eq i32 %300, 1
  br i1 %301, label %302, label %138

302:                                              ; preds = %298
  %303 = bitcast %class.SkShader* %296 to %class.SkRefCntBase*
  %304 = bitcast %class.SkShader* %296 to void (%class.SkRefCntBase*)***
  %305 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %304, align 8
  %306 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %305, i64 2
  %307 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %306, align 8
  call void %307(%class.SkRefCntBase* nonnull %303) #7
  br label %138

308:                                              ; preds = %6
  %309 = bitcast %class.SkMatrix* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %309) #7
  %310 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %12, i64 0, i32 1
  %311 = bitcast %class.SkMatrix* %12 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %311, align 16
  %312 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %12, i64 0, i32 0, i64 4
  %313 = bitcast float* %312 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %313, align 16
  %314 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %12, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %314, align 16
  store i32 16, i32* %310, align 4
  call void @_ZN12SkReadBuffer10readMatrixEP8SkMatrix(%class.SkReadBuffer* %1, %class.SkMatrix* nonnull %12) #7
  %315 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %316 = load i8, i8* %315, align 8, !range !2
  %317 = icmp eq i8 %316, 0
  br i1 %317, label %318, label %319

318:                                              ; preds = %308
  call void @_ZN8SkCanvas6concatERK8SkMatrix(%class.SkCanvas* %4, %class.SkMatrix* nonnull dereferenceable(40) %12) #7
  br label %319

319:                                              ; preds = %308, %318
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %309) #7
  br label %138

320:                                              ; preds = %6
  %321 = tail call i8* @_ZN12SkReadBuffer4skipEmm(%class.SkReadBuffer* %1, i64 16, i64 4) #7
  %322 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %323 = load i8, i8* %322, align 8, !range !2
  %324 = icmp eq i8 %323, 0
  br i1 %324, label %325, label %138

325:                                              ; preds = %320
  %326 = bitcast %class.SkM44* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %326) #7
  %327 = getelementptr inbounds i8, i8* %321, i64 16
  %328 = getelementptr inbounds i8, i8* %321, i64 32
  %329 = getelementptr inbounds i8, i8* %321, i64 48
  %330 = bitcast i8* %321 to <4 x i32>*
  %331 = load <4 x i32>, <4 x i32>* %330, align 4, !noalias !3
  %332 = bitcast i8* %327 to <4 x i32>*
  %333 = load <4 x i32>, <4 x i32>* %332, align 4, !noalias !3
  %334 = bitcast i8* %328 to <4 x i32>*
  %335 = load <4 x i32>, <4 x i32>* %334, align 4, !noalias !3
  %336 = bitcast i8* %329 to <4 x i32>*
  %337 = load <4 x i32>, <4 x i32>* %336, align 4, !noalias !3
  %338 = bitcast %class.SkM44* %13 to <4 x i32>*
  store <4 x i32> %331, <4 x i32>* %338, align 16, !alias.scope !3
  %339 = getelementptr inbounds %class.SkM44, %class.SkM44* %13, i64 0, i32 0, i64 4
  %340 = bitcast float* %339 to <4 x i32>*
  store <4 x i32> %333, <4 x i32>* %340, align 16, !alias.scope !3
  %341 = getelementptr inbounds %class.SkM44, %class.SkM44* %13, i64 0, i32 0, i64 8
  %342 = bitcast float* %341 to <4 x i32>*
  store <4 x i32> %335, <4 x i32>* %342, align 16, !alias.scope !3
  %343 = getelementptr inbounds %class.SkM44, %class.SkM44* %13, i64 0, i32 0, i64 12
  %344 = bitcast float* %343 to <4 x i32>*
  store <4 x i32> %337, <4 x i32>* %344, align 16, !alias.scope !3
  call void @_ZN8SkCanvas6concatERK5SkM44(%class.SkCanvas* %4, %class.SkM44* nonnull dereferenceable(64) %13) #7
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %326) #7
  br label %138

345:                                              ; preds = %6
  %346 = bitcast %struct.SkRect* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %346) #7
  %347 = bitcast %struct.SkRect* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %347, i8 -1, i64 16, i1 false)
  call void @_ZN12SkReadBuffer8readRectEP6SkRect(%class.SkReadBuffer* %1, %struct.SkRect* nonnull %14) #7
  %348 = bitcast %class.SkString* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %348) #7
  %349 = getelementptr inbounds %class.SkString, %class.SkString* %15, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %349, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %15) #7
  call void @_ZN12SkReadBuffer10readStringEP8SkString(%class.SkReadBuffer* %1, %class.SkString* nonnull %15) #7
  %350 = bitcast %class.sk_sp.19* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %350) #7
  %351 = getelementptr inbounds %class.sk_sp.19, %class.sk_sp.19* %16, i64 0, i32 0
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %351, align 8
  call void @_ZN12SkReadBuffer19readByteArrayAsDataEv(%class.sk_sp.19* nonnull sret %16, %class.SkReadBuffer* %1) #7
  %352 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %353 = load i8, i8* %352, align 8, !range !2
  %354 = icmp eq i8 %353, 0
  br i1 %354, label %355, label %359

355:                                              ; preds = %345
  %356 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %349, align 8
  %357 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %356, i64 0, i32 2
  %358 = load %class.SkData*, %class.SkData** %351, align 8
  call void @_ZN8SkCanvas14drawAnnotationERK6SkRectPKcP6SkData(%class.SkCanvas* %4, %struct.SkRect* nonnull dereferenceable(16) %14, i8* %357, %class.SkData* %358) #7
  br label %359

359:                                              ; preds = %345, %355
  %360 = load %class.SkData*, %class.SkData** %351, align 8
  %361 = icmp eq %class.SkData* %360, null
  br i1 %361, label %368, label %362

362:                                              ; preds = %359
  %363 = getelementptr inbounds %class.SkData, %class.SkData* %360, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %364 = atomicrmw add i32* %363, i32 -1 acq_rel
  %365 = icmp eq i32 %364, 1
  br i1 %365, label %366, label %368

366:                                              ; preds = %362
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %360) #7
  %367 = bitcast %class.SkData* %360 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %367) #7
  br label %368

368:                                              ; preds = %359, %362, %366
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %350) #7
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %15) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %348) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %346) #7
  br label %138

369:                                              ; preds = %6
  %370 = getelementptr inbounds %class.SkPicturePlayback, %class.SkPicturePlayback* %0, i64 0, i32 0
  %371 = load %class.SkPictureData*, %class.SkPictureData** %370, align 8
  %372 = tail call dereferenceable(72) %class.SkPaint* @_ZNK13SkPictureData13requiredPaintEP12SkReadBuffer(%class.SkPictureData* %371, %class.SkReadBuffer* %1) #7
  %373 = bitcast %struct.SkRect* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %373) #7
  %374 = bitcast %struct.SkRect* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %374, i8 -1, i64 16, i1 false)
  call void @_ZN12SkReadBuffer8readRectEP6SkRect(%class.SkReadBuffer* %1, %struct.SkRect* nonnull %17) #7
  %375 = call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #7
  %376 = call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #7
  %377 = call i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer* %1) #7
  %378 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %379 = load i8, i8* %378, align 8, !range !2
  %380 = icmp eq i8 %379, 0
  br i1 %380, label %381, label %383

381:                                              ; preds = %369
  %382 = icmp ne i32 %377, 0
  call void @_ZN8SkCanvas7drawArcERK6SkRectffbRK7SkPaint(%class.SkCanvas* %4, %struct.SkRect* nonnull dereferenceable(16) %17, float %375, float %376, i1 zeroext %382, %class.SkPaint* dereferenceable(72) %372) #7
  br label %383

383:                                              ; preds = %369, %381
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %373) #7
  br label %138

384:                                              ; preds = %6
  %385 = getelementptr inbounds %class.SkPicturePlayback, %class.SkPicturePlayback* %0, i64 0, i32 0
  %386 = load %class.SkPictureData*, %class.SkPictureData** %385, align 8
  %387 = tail call %class.SkPaint* @_ZNK13SkPictureData13optionalPaintEP12SkReadBuffer(%class.SkPictureData* %386, %class.SkReadBuffer* %1) #7
  %388 = load %class.SkPictureData*, %class.SkPictureData** %385, align 8
  %389 = tail call i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer* %1) #7
  %390 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %388, i64 0, i32 9, i32 1
  %391 = load i64, i64* %390, align 8
  %392 = lshr i64 %391, 1
  %393 = trunc i64 %392 to i32
  %394 = and i32 %393, 2147483647
  %395 = icmp ult i32 %389, %394
  br i1 %395, label %397, label %396

396:                                              ; preds = %384
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #7
  br label %397

397:                                              ; preds = %396, %384
  %398 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %399 = load i8, i8* %398, align 8, !range !2
  %400 = icmp eq i8 %399, 0
  br i1 %400, label %401, label %407

401:                                              ; preds = %397
  %402 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %388, i64 0, i32 9, i32 0
  %403 = load %class.sk_sp.41*, %class.sk_sp.41** %402, align 8
  %404 = sext i32 %389 to i64
  %405 = getelementptr inbounds %class.sk_sp.41, %class.sk_sp.41* %403, i64 %404, i32 0
  %406 = load %class.SkImage*, %class.SkImage** %405, align 8
  br label %407

407:                                              ; preds = %397, %401
  %408 = phi %class.SkImage* [ %406, %401 ], [ null, %397 ]
  %409 = tail call i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer* %1) #7
  %410 = tail call i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer* %1) #7
  %411 = sext i32 %410 to i64
  %412 = tail call i8* @_ZN12SkReadBuffer4skipEmm(%class.SkReadBuffer* %1, i64 %411, i64 16) #7
  %413 = bitcast i8* %412 to %struct.SkRSXform*
  %414 = tail call i8* @_ZN12SkReadBuffer4skipEmm(%class.SkReadBuffer* %1, i64 %411, i64 16) #7
  %415 = bitcast i8* %414 to %struct.SkRect*
  %416 = and i32 %409, 1
  %417 = icmp eq i32 %416, 0
  br i1 %417, label %422, label %418

418:                                              ; preds = %407
  %419 = tail call i8* @_ZN12SkReadBuffer4skipEmm(%class.SkReadBuffer* %1, i64 %411, i64 4) #7
  %420 = bitcast i8* %419 to i32*
  %421 = tail call i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer* %1) #7
  br label %422

422:                                              ; preds = %407, %418
  %423 = phi i32* [ %420, %418 ], [ null, %407 ]
  %424 = phi i32 [ %421, %418 ], [ 2, %407 ]
  %425 = and i32 %409, 2
  %426 = icmp eq i32 %425, 0
  br i1 %426, label %430, label %427

427:                                              ; preds = %422
  %428 = tail call i8* @_ZN12SkReadBuffer4skipEm(%class.SkReadBuffer* %1, i64 16) #7
  %429 = bitcast i8* %428 to %struct.SkRect*
  br label %430

430:                                              ; preds = %422, %427
  %431 = phi %struct.SkRect* [ %429, %427 ], [ null, %422 ]
  %432 = load i8, i8* %398, align 8, !range !2
  %433 = icmp eq i8 %432, 0
  br i1 %433, label %434, label %138

434:                                              ; preds = %430
  %435 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %18, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %435) #7
  %436 = bitcast %struct.SkSamplingOptions* %18 to i32*
  store i32 -1431655766, i32* %436, align 4
  store i8 0, i8* %435, align 4
  %437 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %18, i64 0, i32 1, i32 0
  %438 = bitcast float* %437 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %438, i8 0, i64 16, i1 false) #7
  %439 = and i32 %409, 4
  %440 = icmp eq i32 %439, 0
  br i1 %440, label %445, label %441

441:                                              ; preds = %434
  %442 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %19, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %442) #7
  call void @_ZN12SkReadBuffer12readSamplingEv(%struct.SkSamplingOptions* nonnull sret %19, %class.SkReadBuffer* %1) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %435, i8* nonnull align 4 %442, i64 20, i1 false) #7
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %442) #7
  %443 = load i8, i8* %398, align 8, !range !2
  %444 = icmp eq i8 %443, 0
  br i1 %444, label %445, label %446

445:                                              ; preds = %434, %441
  call void @_ZN8SkCanvas9drawAtlasEPK7SkImagePK9SkRSXformPK6SkRectPKji11SkBlendModeRK17SkSamplingOptionsS8_PK7SkPaint(%class.SkCanvas* %4, %class.SkImage* %408, %struct.SkRSXform* %413, %struct.SkRect* %415, i32* %423, i32 %410, i32 %424, %struct.SkSamplingOptions* nonnull dereferenceable(20) %18, %struct.SkRect* %431, %class.SkPaint* %387) #7
  br label %446

446:                                              ; preds = %441, %445
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %435) #7
  br label %138

447:                                              ; preds = %6
  %448 = tail call i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer* %1) #7
  %449 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %450 = load i8, i8* %449, align 8, !range !2
  %451 = icmp eq i8 %450, 0
  br i1 %451, label %452, label %138

452:                                              ; preds = %447
  %453 = bitcast { <2 x float>, <2 x float> }* %7 to %struct.SkRGBA4f*
  %454 = bitcast { <2 x float>, <2 x float> }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %454) #7
  %455 = tail call { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32 %448) #7
  %456 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 0
  %457 = extractvalue { <2 x float>, <2 x float> } %455, 0
  store <2 x float> %457, <2 x float>* %456, align 8
  %458 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 1
  %459 = extractvalue { <2 x float>, <2 x float> } %455, 1
  store <2 x float> %459, <2 x float>* %458, align 8
  call void @_ZN8SkCanvas9drawColorERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkCanvas* %4, %struct.SkRGBA4f* nonnull dereferenceable(16) %453, i32 1) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %454) #7
  br label %138

460:                                              ; preds = %6
  %461 = tail call i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer* %1) #7
  %462 = sext i32 %461 to i64
  %463 = tail call i8* @_ZN12SkReadBuffer4skipEm(%class.SkReadBuffer* %1, i64 %462) #7
  br label %138

464:                                              ; preds = %6
  %465 = getelementptr inbounds %class.SkPicturePlayback, %class.SkPicturePlayback* %0, i64 0, i32 0
  %466 = load %class.SkPictureData*, %class.SkPictureData** %465, align 8
  %467 = tail call i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer* %1) #7
  %468 = icmp sgt i32 %467, 0
  br i1 %468, label %469, label %476

469:                                              ; preds = %464
  %470 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %466, i64 0, i32 6, i32 1
  %471 = load i64, i64* %470, align 8
  %472 = lshr i64 %471, 1
  %473 = trunc i64 %472 to i32
  %474 = and i32 %473, 2147483647
  %475 = icmp sgt i32 %467, %474
  br i1 %475, label %476, label %477

476:                                              ; preds = %469, %464
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #7
  br label %477

477:                                              ; preds = %476, %469
  %478 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %479 = load i8, i8* %478, align 8, !range !2
  %480 = icmp eq i8 %479, 0
  br i1 %480, label %481, label %138

481:                                              ; preds = %477
  %482 = add nsw i32 %467, -1
  %483 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %466, i64 0, i32 6, i32 0
  %484 = load %class.sk_sp.28*, %class.sk_sp.28** %483, align 8
  %485 = sext i32 %482 to i64
  %486 = getelementptr inbounds %class.sk_sp.28, %class.sk_sp.28* %484, i64 %485, i32 0
  %487 = load %class.SkDrawable*, %class.SkDrawable** %486, align 8
  tail call void @_ZN8SkCanvas12drawDrawableEP10SkDrawablePK8SkMatrix(%class.SkCanvas* %4, %class.SkDrawable* %487, %class.SkMatrix* null) #7
  br label %138

488:                                              ; preds = %6
  %489 = bitcast %class.SkMatrix* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %489) #7
  %490 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %20, i64 0, i32 1
  %491 = bitcast %class.SkMatrix* %20 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %491, align 16
  %492 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %20, i64 0, i32 0, i64 4
  %493 = bitcast float* %492 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %493, align 16
  %494 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %20, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %494, align 16
  store i32 16, i32* %490, align 4
  call void @_ZN12SkReadBuffer10readMatrixEP8SkMatrix(%class.SkReadBuffer* %1, %class.SkMatrix* nonnull %20) #7
  %495 = getelementptr inbounds %class.SkPicturePlayback, %class.SkPicturePlayback* %0, i64 0, i32 0
  %496 = load %class.SkPictureData*, %class.SkPictureData** %495, align 8
  %497 = call i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer* %1) #7
  %498 = icmp sgt i32 %497, 0
  br i1 %498, label %499, label %506

499:                                              ; preds = %488
  %500 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %496, i64 0, i32 6, i32 1
  %501 = load i64, i64* %500, align 8
  %502 = lshr i64 %501, 1
  %503 = trunc i64 %502 to i32
  %504 = and i32 %503, 2147483647
  %505 = icmp sgt i32 %497, %504
  br i1 %505, label %506, label %507

506:                                              ; preds = %499, %488
  call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #7
  br label %507

507:                                              ; preds = %506, %499
  %508 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %509 = load i8, i8* %508, align 8, !range !2
  %510 = icmp eq i8 %509, 0
  br i1 %510, label %511, label %518

511:                                              ; preds = %507
  %512 = add nsw i32 %497, -1
  %513 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %496, i64 0, i32 6, i32 0
  %514 = load %class.sk_sp.28*, %class.sk_sp.28** %513, align 8
  %515 = sext i32 %512 to i64
  %516 = getelementptr inbounds %class.sk_sp.28, %class.sk_sp.28* %514, i64 %515, i32 0
  %517 = load %class.SkDrawable*, %class.SkDrawable** %516, align 8
  call void @_ZN8SkCanvas12drawDrawableEP10SkDrawablePK8SkMatrix(%class.SkCanvas* %4, %class.SkDrawable* %517, %class.SkMatrix* nonnull %20) #7
  br label %518

518:                                              ; preds = %507, %511
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %489) #7
  br label %138

519:                                              ; preds = %6
  %520 = getelementptr inbounds %class.SkPicturePlayback, %class.SkPicturePlayback* %0, i64 0, i32 0
  %521 = load %class.SkPictureData*, %class.SkPictureData** %520, align 8
  %522 = tail call dereferenceable(72) %class.SkPaint* @_ZNK13SkPictureData13requiredPaintEP12SkReadBuffer(%class.SkPictureData* %521, %class.SkReadBuffer* %1) #7
  %523 = bitcast %class.SkRRect* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %523) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %523, i8 0, i64 52, i1 false) #7
  %524 = bitcast %class.SkRRect* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %524) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %524, i8 0, i64 52, i1 false) #7
  call void @_ZN12SkReadBuffer9readRRectEP7SkRRect(%class.SkReadBuffer* %1, %class.SkRRect* nonnull %21) #7
  call void @_ZN12SkReadBuffer9readRRectEP7SkRRect(%class.SkReadBuffer* %1, %class.SkRRect* nonnull %22) #7
  %525 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %526 = load i8, i8* %525, align 8, !range !2
  %527 = icmp eq i8 %526, 0
  br i1 %527, label %528, label %529

528:                                              ; preds = %519
  call void @_ZN8SkCanvas10drawDRRectERK7SkRRectS2_RK7SkPaint(%class.SkCanvas* %4, %class.SkRRect* nonnull dereferenceable(52) %21, %class.SkRRect* nonnull dereferenceable(52) %22, %class.SkPaint* dereferenceable(72) %522) #7
  br label %529

529:                                              ; preds = %519, %528
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %524) #7
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %523) #7
  br label %138

530:                                              ; preds = %6
  %531 = bitcast %struct.SkRect* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %531) #7
  %532 = bitcast %struct.SkRect* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %532, i8 -1, i64 16, i1 false)
  call void @_ZN12SkReadBuffer8readRectEP6SkRect(%class.SkReadBuffer* %1, %struct.SkRect* nonnull %23) #7
  %533 = call i32 @_ZN12SkReadBuffer6read32Ev(%class.SkReadBuffer* %1) #7
  %534 = bitcast %struct.SkRGBA4f* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %534) #7
  %535 = bitcast %struct.SkRGBA4f* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %535, i8 -1, i64 16, i1 false)
  call void @_ZN12SkReadBuffer11readColor4fEP8SkRGBA4fIL11SkAlphaType3EE(%class.SkReadBuffer* %1, %struct.SkRGBA4f* nonnull %24) #7
  %536 = call i32 @_ZN12SkReadBuffer6read32Ev(%class.SkReadBuffer* %1) #7
  %537 = call i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer* %1) #7
  %538 = icmp eq i32 %537, 0
  br i1 %538, label %542, label %539

539:                                              ; preds = %530
  %540 = call i8* @_ZN12SkReadBuffer4skipEmm(%class.SkReadBuffer* %1, i64 4, i64 8) #7
  %541 = bitcast i8* %540 to %struct.SkPoint*
  br label %542

542:                                              ; preds = %530, %539
  %543 = phi %struct.SkPoint* [ %541, %539 ], [ null, %530 ]
  %544 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %545 = load i8, i8* %544, align 8, !range !2
  %546 = icmp eq i8 %545, 0
  br i1 %546, label %547, label %548

547:                                              ; preds = %542
  call void @_ZN8SkCanvas27experimental_DrawEdgeAAQuadERK6SkRectPK7SkPointNS_11QuadAAFlagsERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkCanvas* %4, %struct.SkRect* nonnull dereferenceable(16) %23, %struct.SkPoint* %543, i32 %533, %struct.SkRGBA4f* nonnull dereferenceable(16) %24, i32 %536) #7
  br label %548

548:                                              ; preds = %542, %547
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %534) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %531) #7
  br label %138

549:                                              ; preds = %6, %6
  %550 = tail call i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer* %1) #7
  %551 = icmp sgt i32 %550, -1
  br i1 %551, label %553, label %552

552:                                              ; preds = %549
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #7
  br label %553

553:                                              ; preds = %549, %552
  %554 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %555 = load i8, i8* %554, align 8, !range !2
  %556 = icmp eq i8 %555, 0
  br i1 %556, label %557, label %138

557:                                              ; preds = %553
  %558 = getelementptr inbounds %class.SkPicturePlayback, %class.SkPicturePlayback* %0, i64 0, i32 0
  %559 = load %class.SkPictureData*, %class.SkPictureData** %558, align 8
  %560 = tail call %class.SkPaint* @_ZNK13SkPictureData13optionalPaintEP12SkReadBuffer(%class.SkPictureData* %559, %class.SkReadBuffer* %1) #7
  %561 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %25, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %561) #7
  %562 = bitcast %struct.SkSamplingOptions* %25 to i32*
  store i32 -1431655766, i32* %562, align 4
  store i8 0, i8* %561, align 4
  %563 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %25, i64 0, i32 1, i32 0
  %564 = bitcast float* %563 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %564, i8 0, i64 16, i1 false) #7
  %565 = icmp eq i32 %2, 75
  br i1 %565, label %566, label %568

566:                                              ; preds = %557
  %567 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %26, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %567) #7
  call void @_ZN12SkReadBuffer12readSamplingEv(%struct.SkSamplingOptions* nonnull sret %26, %class.SkReadBuffer* %1) #7
  br label %578

568:                                              ; preds = %557
  %569 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %27, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %569) #7
  %570 = icmp eq %class.SkPaint* %560, null
  br i1 %570, label %576, label %571

571:                                              ; preds = %568
  %572 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %560, i64 0, i32 8, i32 0, i32 0
  %573 = load i32, i32* %572, align 8
  %574 = lshr i32 %573, 8
  %575 = and i32 %574, 3
  br label %576

576:                                              ; preds = %568, %571
  %577 = phi i32 [ %575, %571 ], [ 0, %568 ]
  call void @_ZN17SkSamplingOptionsC1E15SkFilterQualityNS_14MediumBehaviorE(%struct.SkSamplingOptions* nonnull %27, i32 %577, i32 0) #7
  br label %578

578:                                              ; preds = %576, %566
  %579 = phi i8* [ %569, %576 ], [ %567, %566 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %561, i8* nonnull align 4 %579, i64 20, i1 false) #7
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %579) #7
  %580 = call i32 @_ZN12SkReadBuffer8checkIntEii(%class.SkReadBuffer* %1, i32 0, i32 1) #7
  %581 = sext i32 %550 to i64
  %582 = call i64 @_ZN10SkSafeMath3MulEmm(i64 %581, i64 52) #7
  %583 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 1
  %584 = bitcast i8** %583 to i64*
  %585 = load i64, i64* %584, align 8
  %586 = bitcast %class.SkReadBuffer* %1 to i64*
  %587 = load i64, i64* %586, align 8
  %588 = sub i64 %585, %587
  %589 = icmp ugt i64 %582, %588
  br i1 %589, label %590, label %591

590:                                              ; preds = %578
  call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #7
  br label %591

591:                                              ; preds = %578, %590
  %592 = load i8, i8* %554, align 8, !range !2
  %593 = icmp eq i8 %592, 0
  br i1 %593, label %594, label %783

594:                                              ; preds = %591
  %595 = icmp eq i32 %550, 0
  br i1 %595, label %624, label %596

596:                                              ; preds = %594
  %597 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %581, i64 56) #7
  %598 = extractvalue { i64, i1 } %597, 1
  %599 = extractvalue { i64, i1 } %597, 0
  %600 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %599, i64 8) #7
  %601 = extractvalue { i64, i1 } %600, 1
  %602 = or i1 %598, %601
  %603 = extractvalue { i64, i1 } %600, 0
  %604 = select i1 %602, i64 -1, i64 %603
  %605 = call i8* @_Znam(i64 %604) #8
  %606 = bitcast i8* %605 to i64*
  store i64 %581, i64* %606, align 16
  %607 = getelementptr inbounds i8, i8* %605, i64 8
  %608 = bitcast i8* %607 to %"struct.SkCanvas::ImageSetEntry"*
  %609 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %608, i64 %581
  br label %610

610:                                              ; preds = %610, %596
  %611 = phi %"struct.SkCanvas::ImageSetEntry"* [ %608, %596 ], [ %612, %610 ]
  call void @_ZN8SkCanvas13ImageSetEntryC1Ev(%"struct.SkCanvas::ImageSetEntry"* %611) #7
  %612 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %611, i64 1
  %613 = icmp eq %"struct.SkCanvas::ImageSetEntry"* %612, %609
  br i1 %613, label %614, label %610

614:                                              ; preds = %610
  %615 = icmp sgt i32 %550, 0
  br i1 %615, label %616, label %624

616:                                              ; preds = %614
  %617 = zext i32 %550 to i64
  br label %618

618:                                              ; preds = %675, %616
  %619 = phi i64 [ 0, %616 ], [ %693, %675 ]
  %620 = phi i32 [ -1, %616 ], [ %692, %675 ]
  %621 = phi i32 [ 0, %616 ], [ %689, %675 ]
  %622 = load i8, i8* %554, align 8, !range !2
  %623 = icmp eq i8 %622, 0
  br i1 %623, label %634, label %624

624:                                              ; preds = %618, %675, %594, %614
  %625 = phi %"struct.SkCanvas::ImageSetEntry"* [ %608, %614 ], [ null, %594 ], [ %608, %675 ], [ %608, %618 ]
  %626 = phi i32 [ 0, %614 ], [ 0, %594 ], [ %621, %618 ], [ %689, %675 ]
  %627 = phi i32 [ -1, %614 ], [ -1, %594 ], [ %620, %618 ], [ %692, %675 ]
  %628 = call i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer* %1) #7
  %629 = icmp sgt i32 %626, %628
  br i1 %629, label %630, label %631

630:                                              ; preds = %624
  call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #7
  br label %631

631:                                              ; preds = %624, %630
  %632 = load i8, i8* %554, align 8, !range !2
  %633 = icmp eq i8 %632, 0
  br i1 %633, label %695, label %768

634:                                              ; preds = %618
  %635 = load %class.SkPictureData*, %class.SkPictureData** %558, align 8
  %636 = call i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer* %1) #7
  %637 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %635, i64 0, i32 9, i32 1
  %638 = load i64, i64* %637, align 8
  %639 = lshr i64 %638, 1
  %640 = trunc i64 %639 to i32
  %641 = and i32 %640, 2147483647
  %642 = icmp ult i32 %636, %641
  br i1 %642, label %644, label %643

643:                                              ; preds = %634
  call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #7
  br label %644

644:                                              ; preds = %643, %634
  %645 = load i8, i8* %554, align 8, !range !2
  %646 = icmp eq i8 %645, 0
  br i1 %646, label %647, label %657

647:                                              ; preds = %644
  %648 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %635, i64 0, i32 9, i32 0
  %649 = load %class.sk_sp.41*, %class.sk_sp.41** %648, align 8
  %650 = sext i32 %636 to i64
  %651 = getelementptr inbounds %class.sk_sp.41, %class.sk_sp.41* %649, i64 %650, i32 0
  %652 = load %class.SkImage*, %class.SkImage** %651, align 8
  %653 = icmp eq %class.SkImage* %652, null
  br i1 %653, label %657, label %654

654:                                              ; preds = %647
  %655 = getelementptr inbounds %class.SkImage, %class.SkImage* %652, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %656 = atomicrmw add i32* %655, i32 1 monotonic, !noalias !6
  br label %657

657:                                              ; preds = %644, %647, %654
  %658 = phi %class.SkImage* [ null, %647 ], [ %652, %654 ], [ null, %644 ]
  %659 = ptrtoint %class.SkImage* %658 to i64
  %660 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %608, i64 %619
  %661 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %660, i64 0, i32 0, i32 0
  %662 = load %class.SkImage*, %class.SkImage** %661, align 8
  %663 = bitcast %"struct.SkCanvas::ImageSetEntry"* %660 to i64*
  store i64 %659, i64* %663, align 8
  %664 = icmp eq %class.SkImage* %662, null
  br i1 %664, label %675, label %665

665:                                              ; preds = %657
  %666 = getelementptr inbounds %class.SkImage, %class.SkImage* %662, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %667 = atomicrmw add i32* %666, i32 -1 acq_rel
  %668 = icmp eq i32 %667, 1
  br i1 %668, label %669, label %675

669:                                              ; preds = %665
  %670 = bitcast %class.SkImage* %662 to %class.SkRefCntBase*
  %671 = bitcast %class.SkImage* %662 to void (%class.SkRefCntBase*)***
  %672 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %671, align 8
  %673 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %672, i64 2
  %674 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %673, align 8
  call void %674(%class.SkRefCntBase* nonnull %670) #7
  br label %675

675:                                              ; preds = %669, %665, %657
  %676 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %608, i64 %619, i32 1
  call void @_ZN12SkReadBuffer8readRectEP6SkRect(%class.SkReadBuffer* %1, %struct.SkRect* %676) #7
  %677 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %608, i64 %619, i32 2
  call void @_ZN12SkReadBuffer8readRectEP6SkRect(%class.SkReadBuffer* %1, %struct.SkRect* %677) #7
  %678 = call i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer* %1) #7
  %679 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %608, i64 %619, i32 3
  store i32 %678, i32* %679, align 8
  %680 = call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #7
  %681 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %608, i64 %619, i32 4
  store float %680, float* %681, align 4
  %682 = call i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer* %1) #7
  %683 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %608, i64 %619, i32 5
  store i32 %682, i32* %683, align 8
  %684 = call i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer* %1) #7
  %685 = icmp ne i32 %684, 0
  %686 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %608, i64 %619, i32 6
  %687 = zext i1 %685 to i8
  store i8 %687, i8* %686, align 4
  %688 = zext i1 %685 to i32
  %689 = add nuw nsw i32 %621, %688
  %690 = load i32, i32* %679, align 8
  %691 = icmp sgt i32 %690, %620
  %692 = select i1 %691, i32 %690, i32 %620
  %693 = add nuw nsw i64 %619, 1
  %694 = icmp eq i64 %693, %617
  br i1 %694, label %624, label %618

695:                                              ; preds = %631
  %696 = icmp sgt i32 %628, 0
  br i1 %696, label %697, label %702

697:                                              ; preds = %695
  %698 = sext i32 %628 to i64
  %699 = call i8* @_ZN12SkReadBuffer4skipEmm(%class.SkReadBuffer* %1, i64 %698, i64 8) #7
  %700 = bitcast i8* %699 to %struct.SkPoint*
  %701 = icmp eq i8* %699, null
  br i1 %701, label %768, label %702

702:                                              ; preds = %695, %697
  %703 = phi %struct.SkPoint* [ %700, %697 ], [ null, %695 ]
  %704 = call i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer* %1) #7
  %705 = icmp slt i32 %627, %704
  br i1 %705, label %707, label %706

706:                                              ; preds = %702
  call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #7
  br label %707

707:                                              ; preds = %702, %706
  %708 = load i8, i8* %554, align 8, !range !2
  %709 = icmp eq i8 %708, 0
  br i1 %709, label %710, label %768

710:                                              ; preds = %707
  %711 = sext i32 %704 to i64
  %712 = call i64 @_ZN10SkSafeMath3MulEmm(i64 %711, i64 36) #7
  %713 = load i64, i64* %584, align 8
  %714 = load i64, i64* %586, align 8
  %715 = sub i64 %713, %714
  %716 = icmp ugt i64 %712, %715
  br i1 %716, label %717, label %718

717:                                              ; preds = %710
  call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #7
  br label %718

718:                                              ; preds = %710, %717
  %719 = load i8, i8* %554, align 8, !range !2
  %720 = icmp eq i8 %719, 0
  br i1 %720, label %721, label %768

721:                                              ; preds = %718
  %722 = bitcast %class.SkTArray.81* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %722) #7
  %723 = getelementptr inbounds %class.SkTArray.81, %class.SkTArray.81* %28, i64 0, i32 0
  %724 = getelementptr inbounds %class.SkTArray.81, %class.SkTArray.81* %28, i64 0, i32 1
  store %class.SkMatrix* null, %class.SkMatrix** %723, align 8
  store i64 1, i64* %724, align 8
  %725 = icmp sgt i32 %704, 0
  br i1 %725, label %727, label %726

726:                                              ; preds = %721
  store i64 1, i64* %724, align 8
  br label %758

727:                                              ; preds = %721
  call void @_ZN8SkTArrayI8SkMatrixLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray.81* nonnull %28, i32 %704, i32 0) #7
  %728 = load i64, i64* %724, align 8
  %729 = shl i64 %728, 32
  %730 = and i64 %729, 4294967296
  %731 = and i64 %728, -4294967297
  %732 = or i64 %730, %731
  %733 = load i8, i8* %554, align 8
  %734 = icmp eq i8 %733, 0
  store i64 %732, i64* %724, align 8
  br label %735

735:                                              ; preds = %739, %727
  %736 = phi i1 [ %756, %739 ], [ %734, %727 ]
  %737 = phi i32 [ %754, %739 ], [ 0, %727 ]
  br i1 %736, label %739, label %760

738:                                              ; preds = %739
  br i1 %756, label %758, label %760

739:                                              ; preds = %735
  call void @_ZN8SkTArrayI8SkMatrixLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray.81* nonnull %28, i32 1, i32 1) #7
  %740 = load %class.SkMatrix*, %class.SkMatrix** %723, align 8
  %741 = load i64, i64* %724, align 8
  %742 = lshr i64 %741, 1
  %743 = and i64 %742, 2147483647
  %744 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %740, i64 %743
  %745 = add i64 %741, 2
  %746 = and i64 %745, 4294967294
  %747 = and i64 %741, -4294967295
  %748 = or i64 %746, %747
  store i64 %748, i64* %724, align 8
  %749 = bitcast %class.SkMatrix* %744 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %749, align 4
  %750 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %740, i64 %743, i32 0, i64 4
  %751 = bitcast float* %750 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %751, align 4
  %752 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %740, i64 %743, i32 0, i64 8
  store float 1.000000e+00, float* %752, align 4
  %753 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %740, i64 %743, i32 1
  store i32 16, i32* %753, align 4
  call void @_ZN12SkReadBuffer10readMatrixEP8SkMatrix(%class.SkReadBuffer* %1, %class.SkMatrix* %744) #7
  %754 = add nuw nsw i32 %737, 1
  %755 = load i8, i8* %554, align 8
  %756 = icmp eq i8 %755, 0
  %757 = icmp eq i32 %754, %704
  br i1 %757, label %738, label %735

758:                                              ; preds = %726, %738
  %759 = load %class.SkMatrix*, %class.SkMatrix** %723, align 8
  call void @_ZN8SkCanvas31experimental_DrawEdgeAAImageSetEPKNS_13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsPK7SkPaintNS_17SrcRectConstraintE(%class.SkCanvas* %4, %"struct.SkCanvas::ImageSetEntry"* %625, i32 %550, %struct.SkPoint* %703, %class.SkMatrix* %759, %struct.SkSamplingOptions* nonnull dereferenceable(20) %25, %class.SkPaint* %560, i32 %580) #7
  br label %760

760:                                              ; preds = %735, %738, %758
  %761 = load i64, i64* %724, align 8
  %762 = and i64 %761, 1
  %763 = icmp eq i64 %762, 0
  br i1 %763, label %767, label %764

764:                                              ; preds = %760
  %765 = bitcast %class.SkTArray.81* %28 to i8**
  %766 = load i8*, i8** %765, align 8
  call void @_Z7sk_freePv(i8* %766) #7
  br label %767

767:                                              ; preds = %760, %764
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %722) #7
  br label %768

768:                                              ; preds = %767, %718, %707, %697, %631
  %769 = icmp eq %"struct.SkCanvas::ImageSetEntry"* %625, null
  br i1 %769, label %783, label %770

770:                                              ; preds = %768
  %771 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %625, i64 -1, i32 5
  %772 = bitcast i32* %771 to i8*
  %773 = bitcast i32* %771 to i64*
  %774 = load i64, i64* %773, align 8
  %775 = icmp eq i64 %774, 0
  br i1 %775, label %782, label %776

776:                                              ; preds = %770
  %777 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %625, i64 %774
  br label %778

778:                                              ; preds = %778, %776
  %779 = phi %"struct.SkCanvas::ImageSetEntry"* [ %780, %778 ], [ %777, %776 ]
  %780 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %779, i64 -1
  call void @_ZN8SkCanvas13ImageSetEntryD1Ev(%"struct.SkCanvas::ImageSetEntry"* %780) #7
  %781 = icmp eq %"struct.SkCanvas::ImageSetEntry"* %780, %625
  br i1 %781, label %782, label %778

782:                                              ; preds = %778, %770
  call void @_ZdaPv(i8* %772) #8
  br label %783

783:                                              ; preds = %782, %768, %591
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %561) #7
  br label %138

784:                                              ; preds = %6
  %785 = getelementptr inbounds %class.SkPicturePlayback, %class.SkPicturePlayback* %0, i64 0, i32 0
  %786 = load %class.SkPictureData*, %class.SkPictureData** %785, align 8
  %787 = tail call %class.SkPaint* @_ZNK13SkPictureData13optionalPaintEP12SkReadBuffer(%class.SkPictureData* %786, %class.SkReadBuffer* %1) #7
  %788 = load %class.SkPictureData*, %class.SkPictureData** %785, align 8
  %789 = tail call i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer* %1) #7
  %790 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %788, i64 0, i32 9, i32 1
  %791 = load i64, i64* %790, align 8
  %792 = lshr i64 %791, 1
  %793 = trunc i64 %792 to i32
  %794 = and i32 %793, 2147483647
  %795 = icmp ult i32 %789, %794
  br i1 %795, label %797, label %796

796:                                              ; preds = %784
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #7
  br label %797

797:                                              ; preds = %796, %784
  %798 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %799 = load i8, i8* %798, align 8, !range !2
  %800 = icmp eq i8 %799, 0
  br i1 %800, label %801, label %807

801:                                              ; preds = %797
  %802 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %788, i64 0, i32 9, i32 0
  %803 = load %class.sk_sp.41*, %class.sk_sp.41** %802, align 8
  %804 = sext i32 %789 to i64
  %805 = getelementptr inbounds %class.sk_sp.41, %class.sk_sp.41* %803, i64 %804, i32 0
  %806 = load %class.SkImage*, %class.SkImage** %805, align 8
  br label %807

807:                                              ; preds = %797, %801
  %808 = phi %class.SkImage* [ %806, %801 ], [ null, %797 ]
  %809 = bitcast %struct.SkPoint* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %809) #7
  %810 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %29, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %810, align 4
  %811 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %29, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %811, align 4
  call void @_ZN12SkReadBuffer9readPointEP7SkPoint(%class.SkReadBuffer* %1, %struct.SkPoint* nonnull %29) #7
  %812 = load i8, i8* %798, align 8, !range !2
  %813 = icmp eq i8 %812, 0
  br i1 %813, label %814, label %826

814:                                              ; preds = %807
  %815 = load float, float* %810, align 4
  %816 = load float, float* %811, align 4
  %817 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %30, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %817) #7
  %818 = icmp eq %class.SkPaint* %787, null
  br i1 %818, label %824, label %819

819:                                              ; preds = %814
  %820 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %787, i64 0, i32 8, i32 0, i32 0
  %821 = load i32, i32* %820, align 8
  %822 = lshr i32 %821, 8
  %823 = and i32 %822, 3
  br label %824

824:                                              ; preds = %814, %819
  %825 = phi i32 [ %823, %819 ], [ 0, %814 ]
  call void @_ZN17SkSamplingOptionsC1E15SkFilterQualityNS_14MediumBehaviorE(%struct.SkSamplingOptions* nonnull %30, i32 %825, i32 0) #7
  call void @_ZN8SkCanvas9drawImageEPK7SkImageffRK17SkSamplingOptionsPK7SkPaint(%class.SkCanvas* %4, %class.SkImage* %808, float %815, float %816, %struct.SkSamplingOptions* nonnull dereferenceable(20) %30, %class.SkPaint* %787) #7
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %817) #7
  br label %826

826:                                              ; preds = %807, %824
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %809) #7
  br label %138

827:                                              ; preds = %6
  %828 = getelementptr inbounds %class.SkPicturePlayback, %class.SkPicturePlayback* %0, i64 0, i32 0
  %829 = load %class.SkPictureData*, %class.SkPictureData** %828, align 8
  %830 = tail call %class.SkPaint* @_ZNK13SkPictureData13optionalPaintEP12SkReadBuffer(%class.SkPictureData* %829, %class.SkReadBuffer* %1) #7
  %831 = load %class.SkPictureData*, %class.SkPictureData** %828, align 8
  %832 = tail call i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer* %1) #7
  %833 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %831, i64 0, i32 9, i32 1
  %834 = load i64, i64* %833, align 8
  %835 = lshr i64 %834, 1
  %836 = trunc i64 %835 to i32
  %837 = and i32 %836, 2147483647
  %838 = icmp ult i32 %832, %837
  br i1 %838, label %840, label %839

839:                                              ; preds = %827
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #7
  br label %840

840:                                              ; preds = %839, %827
  %841 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %842 = load i8, i8* %841, align 8, !range !2
  %843 = icmp eq i8 %842, 0
  br i1 %843, label %844, label %850

844:                                              ; preds = %840
  %845 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %831, i64 0, i32 9, i32 0
  %846 = load %class.sk_sp.41*, %class.sk_sp.41** %845, align 8
  %847 = sext i32 %832 to i64
  %848 = getelementptr inbounds %class.sk_sp.41, %class.sk_sp.41* %846, i64 %847, i32 0
  %849 = load %class.SkImage*, %class.SkImage** %848, align 8
  br label %850

850:                                              ; preds = %840, %844
  %851 = phi %class.SkImage* [ %849, %844 ], [ null, %840 ]
  %852 = bitcast %struct.SkPoint* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %852) #7
  %853 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %31, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %853, align 4
  %854 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %31, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %854, align 4
  call void @_ZN12SkReadBuffer9readPointEP7SkPoint(%class.SkReadBuffer* %1, %struct.SkPoint* nonnull %31) #7
  %855 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %32, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %855) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %855, i8* align 4 getelementptr inbounds ({ i8, [3 x i8], %struct.SkCubicResampler, i32, i32 }, { i8, [3 x i8], %struct.SkCubicResampler, i32, i32 }* @__const._ZN17SkPicturePlayback8handleOpEP12SkReadBuffer8DrawTypejP8SkCanvasRK5SkM44.sampling.4, i64 0, i32 0), i64 20, i1 false)
  call void @_ZN12SkReadBuffer12readSamplingEv(%struct.SkSamplingOptions* nonnull sret %32, %class.SkReadBuffer* %1) #7
  %856 = load i8, i8* %841, align 8, !range !2
  %857 = icmp eq i8 %856, 0
  br i1 %857, label %858, label %861

858:                                              ; preds = %850
  %859 = load float, float* %853, align 4
  %860 = load float, float* %854, align 4
  call void @_ZN8SkCanvas9drawImageEPK7SkImageffRK17SkSamplingOptionsPK7SkPaint(%class.SkCanvas* %4, %class.SkImage* %851, float %859, float %860, %struct.SkSamplingOptions* nonnull dereferenceable(20) %32, %class.SkPaint* %830) #7
  br label %861

861:                                              ; preds = %850, %858
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %855) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %852) #7
  br label %138

862:                                              ; preds = %6
  %863 = getelementptr inbounds %class.SkPicturePlayback, %class.SkPicturePlayback* %0, i64 0, i32 0
  %864 = load %class.SkPictureData*, %class.SkPictureData** %863, align 8
  %865 = tail call %class.SkPaint* @_ZNK13SkPictureData13optionalPaintEP12SkReadBuffer(%class.SkPictureData* %864, %class.SkReadBuffer* %1) #7
  %866 = load %class.SkPictureData*, %class.SkPictureData** %863, align 8
  %867 = tail call i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer* %1) #7
  %868 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %866, i64 0, i32 9, i32 1
  %869 = load i64, i64* %868, align 8
  %870 = lshr i64 %869, 1
  %871 = trunc i64 %870 to i32
  %872 = and i32 %871, 2147483647
  %873 = icmp ult i32 %867, %872
  br i1 %873, label %875, label %874

874:                                              ; preds = %862
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #7
  br label %875

875:                                              ; preds = %874, %862
  %876 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %877 = load i8, i8* %876, align 8, !range !2
  %878 = icmp eq i8 %877, 0
  br i1 %878, label %879, label %885

879:                                              ; preds = %875
  %880 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %866, i64 0, i32 9, i32 0
  %881 = load %class.sk_sp.41*, %class.sk_sp.41** %880, align 8
  %882 = sext i32 %867 to i64
  %883 = getelementptr inbounds %class.sk_sp.41, %class.sk_sp.41* %881, i64 %882, i32 0
  %884 = load %class.SkImage*, %class.SkImage** %883, align 8
  br label %885

885:                                              ; preds = %875, %879
  %886 = phi %class.SkImage* [ %884, %879 ], [ null, %875 ]
  %887 = bitcast %"struct.SkCanvas::Lattice"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %887) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %887, i8 -86, i64 48, i1 false)
  %888 = call zeroext i1 @_ZN12SkCanvasPriv11ReadLatticeER12SkReadBufferPN8SkCanvas7LatticeE(%class.SkReadBuffer* dereferenceable(136) %1, %"struct.SkCanvas::Lattice"* nonnull %33) #7
  %889 = call i8* @_ZN12SkReadBuffer4skipEm(%class.SkReadBuffer* %1, i64 16) #7
  %890 = bitcast i8* %889 to %struct.SkRect*
  %891 = load i8, i8* %876, align 8, !range !2
  %892 = icmp eq i8 %891, 0
  br i1 %892, label %893, label %903

893:                                              ; preds = %885
  %894 = icmp eq %class.SkPaint* %865, null
  br i1 %894, label %901, label %895

895:                                              ; preds = %893
  %896 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %865, i64 0, i32 8, i32 0, i32 0
  %897 = load i32, i32* %896, align 8
  %898 = and i32 %897, 768
  %899 = icmp ne i32 %898, 0
  %900 = zext i1 %899 to i32
  br label %901

901:                                              ; preds = %895, %893
  %902 = phi i32 [ 0, %893 ], [ %900, %895 ]
  call void @_ZN8SkCanvas16drawImageLatticeEPK7SkImageRKNS_7LatticeERK6SkRect12SkFilterModePK7SkPaint(%class.SkCanvas* %4, %class.SkImage* %886, %"struct.SkCanvas::Lattice"* nonnull dereferenceable(48) %33, %struct.SkRect* dereferenceable(16) %890, i32 %902, %class.SkPaint* %865) #7
  br label %903

903:                                              ; preds = %885, %901
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %887) #7
  br label %138

904:                                              ; preds = %6
  %905 = getelementptr inbounds %class.SkPicturePlayback, %class.SkPicturePlayback* %0, i64 0, i32 0
  %906 = load %class.SkPictureData*, %class.SkPictureData** %905, align 8
  %907 = tail call %class.SkPaint* @_ZNK13SkPictureData13optionalPaintEP12SkReadBuffer(%class.SkPictureData* %906, %class.SkReadBuffer* %1) #7
  %908 = load %class.SkPictureData*, %class.SkPictureData** %905, align 8
  %909 = tail call i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer* %1) #7
  %910 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %908, i64 0, i32 9, i32 1
  %911 = load i64, i64* %910, align 8
  %912 = lshr i64 %911, 1
  %913 = trunc i64 %912 to i32
  %914 = and i32 %913, 2147483647
  %915 = icmp ult i32 %909, %914
  br i1 %915, label %917, label %916

916:                                              ; preds = %904
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #7
  br label %917

917:                                              ; preds = %916, %904
  %918 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %919 = load i8, i8* %918, align 8, !range !2
  %920 = icmp eq i8 %919, 0
  br i1 %920, label %921, label %927

921:                                              ; preds = %917
  %922 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %908, i64 0, i32 9, i32 0
  %923 = load %class.sk_sp.41*, %class.sk_sp.41** %922, align 8
  %924 = sext i32 %909 to i64
  %925 = getelementptr inbounds %class.sk_sp.41, %class.sk_sp.41* %923, i64 %924, i32 0
  %926 = load %class.SkImage*, %class.SkImage** %925, align 8
  br label %927

927:                                              ; preds = %917, %921
  %928 = phi %class.SkImage* [ %926, %921 ], [ null, %917 ]
  %929 = bitcast %"struct.SkCanvas::Lattice"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %929) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %929, i8 -86, i64 48, i1 false)
  %930 = call zeroext i1 @_ZN12SkCanvasPriv11ReadLatticeER12SkReadBufferPN8SkCanvas7LatticeE(%class.SkReadBuffer* dereferenceable(136) %1, %"struct.SkCanvas::Lattice"* nonnull %34) #7
  %931 = call i8* @_ZN12SkReadBuffer4skipEm(%class.SkReadBuffer* %1, i64 16) #7
  %932 = bitcast i8* %931 to %struct.SkRect*
  %933 = call i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer* %1) #7
  %934 = icmp ugt i32 %933, 1
  br i1 %934, label %935, label %936

935:                                              ; preds = %927
  call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #7
  br label %936

936:                                              ; preds = %927, %935
  %937 = load i8, i8* %918, align 8, !range !2
  %938 = icmp eq i8 %937, 0
  br i1 %938, label %939, label %940

939:                                              ; preds = %936
  call void @_ZN8SkCanvas16drawImageLatticeEPK7SkImageRKNS_7LatticeERK6SkRect12SkFilterModePK7SkPaint(%class.SkCanvas* %4, %class.SkImage* %928, %"struct.SkCanvas::Lattice"* nonnull dereferenceable(48) %34, %struct.SkRect* dereferenceable(16) %932, i32 %933, %class.SkPaint* %907) #7
  br label %940

940:                                              ; preds = %936, %939
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %929) #7
  br label %138

941:                                              ; preds = %6
  %942 = getelementptr inbounds %class.SkPicturePlayback, %class.SkPicturePlayback* %0, i64 0, i32 0
  %943 = load %class.SkPictureData*, %class.SkPictureData** %942, align 8
  %944 = tail call %class.SkPaint* @_ZNK13SkPictureData13optionalPaintEP12SkReadBuffer(%class.SkPictureData* %943, %class.SkReadBuffer* %1) #7
  %945 = load %class.SkPictureData*, %class.SkPictureData** %942, align 8
  %946 = tail call i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer* %1) #7
  %947 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %945, i64 0, i32 9, i32 1
  %948 = load i64, i64* %947, align 8
  %949 = lshr i64 %948, 1
  %950 = trunc i64 %949 to i32
  %951 = and i32 %950, 2147483647
  %952 = icmp ult i32 %946, %951
  br i1 %952, label %954, label %953

953:                                              ; preds = %941
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #7
  br label %954

954:                                              ; preds = %953, %941
  %955 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %956 = load i8, i8* %955, align 8, !range !2
  %957 = icmp eq i8 %956, 0
  br i1 %957, label %958, label %964

958:                                              ; preds = %954
  %959 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %945, i64 0, i32 9, i32 0
  %960 = load %class.sk_sp.41*, %class.sk_sp.41** %959, align 8
  %961 = sext i32 %946 to i64
  %962 = getelementptr inbounds %class.sk_sp.41, %class.sk_sp.41* %960, i64 %961, i32 0
  %963 = load %class.SkImage*, %class.SkImage** %962, align 8
  br label %964

964:                                              ; preds = %954, %958
  %965 = phi %class.SkImage* [ %963, %958 ], [ null, %954 ]
  %966 = bitcast %struct.SkIRect* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %966) #7
  %967 = bitcast %struct.SkIRect* %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %967, i8 -86, i64 16, i1 false)
  call void @_ZN12SkReadBuffer9readIRectEP7SkIRect(%class.SkReadBuffer* %1, %struct.SkIRect* nonnull %35) #7
  %968 = bitcast %struct.SkRect* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %968) #7
  %969 = bitcast %struct.SkRect* %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %969, i8 -1, i64 16, i1 false)
  call void @_ZN12SkReadBuffer8readRectEP6SkRect(%class.SkReadBuffer* %1, %struct.SkRect* nonnull %36) #7
  %970 = load i8, i8* %955, align 8, !range !2
  %971 = icmp eq i8 %970, 0
  br i1 %971, label %972, label %982

972:                                              ; preds = %964
  %973 = icmp eq %class.SkPaint* %944, null
  br i1 %973, label %980, label %974

974:                                              ; preds = %972
  %975 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %944, i64 0, i32 8, i32 0, i32 0
  %976 = load i32, i32* %975, align 8
  %977 = and i32 %976, 768
  %978 = icmp ne i32 %977, 0
  %979 = zext i1 %978 to i32
  br label %980

980:                                              ; preds = %974, %972
  %981 = phi i32 [ 0, %972 ], [ %979, %974 ]
  call void @_ZN8SkCanvas13drawImageNineEPK7SkImageRK7SkIRectRK6SkRect12SkFilterModePK7SkPaint(%class.SkCanvas* %4, %class.SkImage* %965, %struct.SkIRect* nonnull dereferenceable(16) %35, %struct.SkRect* nonnull dereferenceable(16) %36, i32 %981, %class.SkPaint* %944) #7
  br label %982

982:                                              ; preds = %964, %980
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %968) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %966) #7
  br label %138

983:                                              ; preds = %6
  %984 = getelementptr inbounds %class.SkPicturePlayback, %class.SkPicturePlayback* %0, i64 0, i32 0
  %985 = load %class.SkPictureData*, %class.SkPictureData** %984, align 8
  %986 = tail call %class.SkPaint* @_ZNK13SkPictureData13optionalPaintEP12SkReadBuffer(%class.SkPictureData* %985, %class.SkReadBuffer* %1) #7
  %987 = load %class.SkPictureData*, %class.SkPictureData** %984, align 8
  %988 = tail call i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer* %1) #7
  %989 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %987, i64 0, i32 9, i32 1
  %990 = load i64, i64* %989, align 8
  %991 = lshr i64 %990, 1
  %992 = trunc i64 %991 to i32
  %993 = and i32 %992, 2147483647
  %994 = icmp ult i32 %988, %993
  br i1 %994, label %996, label %995

995:                                              ; preds = %983
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #7
  br label %996

996:                                              ; preds = %995, %983
  %997 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %998 = load i8, i8* %997, align 8, !range !2
  %999 = icmp eq i8 %998, 0
  br i1 %999, label %1000, label %1006

1000:                                             ; preds = %996
  %1001 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %987, i64 0, i32 9, i32 0
  %1002 = load %class.sk_sp.41*, %class.sk_sp.41** %1001, align 8
  %1003 = sext i32 %988 to i64
  %1004 = getelementptr inbounds %class.sk_sp.41, %class.sk_sp.41* %1002, i64 %1003, i32 0
  %1005 = load %class.SkImage*, %class.SkImage** %1004, align 8
  br label %1006

1006:                                             ; preds = %996, %1000
  %1007 = phi %class.SkImage* [ %1005, %1000 ], [ null, %996 ]
  %1008 = bitcast %struct.SkRect* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1008) #7
  %1009 = bitcast %struct.SkRect* %37 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %1009, i8 -1, i64 16, i1 false)
  %1010 = tail call zeroext i1 @_ZN12SkReadBuffer8readBoolEv(%class.SkReadBuffer* %1) #7
  br i1 %1010, label %1011, label %1012

1011:                                             ; preds = %1006
  call void @_ZN12SkReadBuffer8readRectEP6SkRect(%class.SkReadBuffer* %1, %struct.SkRect* nonnull %37) #7
  br label %1012

1012:                                             ; preds = %1006, %1011
  %1013 = phi %struct.SkRect* [ %37, %1011 ], [ null, %1006 ]
  %1014 = bitcast %struct.SkRect* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1014) #7
  %1015 = bitcast %struct.SkRect* %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %1015, i8 -1, i64 16, i1 false)
  call void @_ZN12SkReadBuffer8readRectEP6SkRect(%class.SkReadBuffer* %1, %struct.SkRect* nonnull %38) #7
  %1016 = call i32 @_ZN12SkReadBuffer8checkIntEii(%class.SkReadBuffer* %1, i32 0, i32 1) #7
  %1017 = load i8, i8* %997, align 8, !range !2
  %1018 = icmp eq i8 %1017, 0
  br i1 %1018, label %1019, label %1033

1019:                                             ; preds = %1012
  %1020 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %39, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %1020) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %1020, i8* align 4 getelementptr inbounds ({ i8, [3 x i8], %struct.SkCubicResampler, i32, i32 }, { i8, [3 x i8], %struct.SkCubicResampler, i32, i32 }* @__const._ZN17SkPicturePlayback8handleOpEP12SkReadBuffer8DrawTypejP8SkCanvasRK5SkM44.sampling.4, i64 0, i32 0), i64 20, i1 false)
  %1021 = icmp eq %class.SkPaint* %986, null
  br i1 %1021, label %1027, label %1022

1022:                                             ; preds = %1019
  %1023 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %986, i64 0, i32 8, i32 0, i32 0
  %1024 = load i32, i32* %1023, align 8
  %1025 = lshr i32 %1024, 8
  %1026 = and i32 %1025, 3
  br label %1027

1027:                                             ; preds = %1019, %1022
  %1028 = phi i32 [ %1026, %1022 ], [ 0, %1019 ]
  call void @_ZN17SkSamplingOptionsC1E15SkFilterQualityNS_14MediumBehaviorE(%struct.SkSamplingOptions* nonnull %39, i32 %1028, i32 0) #7
  %1029 = icmp eq %struct.SkRect* %1013, null
  br i1 %1029, label %1031, label %1030

1030:                                             ; preds = %1027
  call void @_ZN8SkCanvas13drawImageRectEPK7SkImageRK6SkRectS5_RK17SkSamplingOptionsPK7SkPaintNS_17SrcRectConstraintE(%class.SkCanvas* %4, %class.SkImage* %1007, %struct.SkRect* nonnull dereferenceable(16) %1013, %struct.SkRect* nonnull dereferenceable(16) %38, %struct.SkSamplingOptions* nonnull dereferenceable(20) %39, %class.SkPaint* %986, i32 %1016) #7
  br label %1032

1031:                                             ; preds = %1027
  call void @_ZN8SkCanvas13drawImageRectEPK7SkImageRK6SkRectRK17SkSamplingOptionsPK7SkPaint(%class.SkCanvas* %4, %class.SkImage* %1007, %struct.SkRect* nonnull dereferenceable(16) %38, %struct.SkSamplingOptions* nonnull dereferenceable(20) %39, %class.SkPaint* %986) #7
  br label %1032

1032:                                             ; preds = %1031, %1030
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %1020) #7
  br label %1033

1033:                                             ; preds = %1012, %1032
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1014) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1008) #7
  br label %138

1034:                                             ; preds = %6
  %1035 = getelementptr inbounds %class.SkPicturePlayback, %class.SkPicturePlayback* %0, i64 0, i32 0
  %1036 = load %class.SkPictureData*, %class.SkPictureData** %1035, align 8
  %1037 = tail call %class.SkPaint* @_ZNK13SkPictureData13optionalPaintEP12SkReadBuffer(%class.SkPictureData* %1036, %class.SkReadBuffer* %1) #7
  %1038 = load %class.SkPictureData*, %class.SkPictureData** %1035, align 8
  %1039 = tail call i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer* %1) #7
  %1040 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %1038, i64 0, i32 9, i32 1
  %1041 = load i64, i64* %1040, align 8
  %1042 = lshr i64 %1041, 1
  %1043 = trunc i64 %1042 to i32
  %1044 = and i32 %1043, 2147483647
  %1045 = icmp ult i32 %1039, %1044
  br i1 %1045, label %1047, label %1046

1046:                                             ; preds = %1034
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #7
  br label %1047

1047:                                             ; preds = %1046, %1034
  %1048 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %1049 = load i8, i8* %1048, align 8, !range !2
  %1050 = icmp eq i8 %1049, 0
  br i1 %1050, label %1051, label %1057

1051:                                             ; preds = %1047
  %1052 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %1038, i64 0, i32 9, i32 0
  %1053 = load %class.sk_sp.41*, %class.sk_sp.41** %1052, align 8
  %1054 = sext i32 %1039 to i64
  %1055 = getelementptr inbounds %class.sk_sp.41, %class.sk_sp.41* %1053, i64 %1054, i32 0
  %1056 = load %class.SkImage*, %class.SkImage** %1055, align 8
  br label %1057

1057:                                             ; preds = %1047, %1051
  %1058 = phi %class.SkImage* [ %1056, %1051 ], [ null, %1047 ]
  %1059 = bitcast { <2 x float>, <2 x float> }* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1059) #7
  %1060 = tail call { <2 x float>, <2 x float> } @_ZN12SkReadBuffer8readRectEv(%class.SkReadBuffer* %1) #7
  %1061 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %40, i64 0, i32 0
  %1062 = extractvalue { <2 x float>, <2 x float> } %1060, 0
  store <2 x float> %1062, <2 x float>* %1061, align 8
  %1063 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %40, i64 0, i32 1
  %1064 = extractvalue { <2 x float>, <2 x float> } %1060, 1
  store <2 x float> %1064, <2 x float>* %1063, align 8
  %1065 = bitcast { <2 x float>, <2 x float> }* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1065) #7
  %1066 = tail call { <2 x float>, <2 x float> } @_ZN12SkReadBuffer8readRectEv(%class.SkReadBuffer* %1) #7
  %1067 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %42, i64 0, i32 0
  %1068 = extractvalue { <2 x float>, <2 x float> } %1066, 0
  store <2 x float> %1068, <2 x float>* %1067, align 8
  %1069 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %42, i64 0, i32 1
  %1070 = extractvalue { <2 x float>, <2 x float> } %1066, 1
  store <2 x float> %1070, <2 x float>* %1069, align 8
  %1071 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %44, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %1071) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %1071, i8* align 4 getelementptr inbounds ({ i8, [3 x i8], %struct.SkCubicResampler, i32, i32 }, { i8, [3 x i8], %struct.SkCubicResampler, i32, i32 }* @__const._ZN17SkPicturePlayback8handleOpEP12SkReadBuffer8DrawTypejP8SkCanvasRK5SkM44.sampling.4, i64 0, i32 0), i64 20, i1 false)
  call void @_ZN12SkReadBuffer12readSamplingEv(%struct.SkSamplingOptions* nonnull sret %44, %class.SkReadBuffer* %1) #7
  %1072 = call i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer* %1) #7
  %1073 = icmp ugt i32 %1072, 1
  br i1 %1073, label %1074, label %1075

1074:                                             ; preds = %1057
  call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #7
  br label %1075

1075:                                             ; preds = %1057, %1074
  %1076 = load i8, i8* %1048, align 8, !range !2
  %1077 = icmp eq i8 %1076, 0
  br i1 %1077, label %1078, label %1079

1078:                                             ; preds = %1075
  call void @_ZN8SkCanvas13drawImageRectEPK7SkImageRK6SkRectS5_RK17SkSamplingOptionsPK7SkPaintNS_17SrcRectConstraintE(%class.SkCanvas* %4, %class.SkImage* %1058, %struct.SkRect* nonnull dereferenceable(16) %41, %struct.SkRect* nonnull dereferenceable(16) %43, %struct.SkSamplingOptions* nonnull dereferenceable(20) %44, %class.SkPaint* %1037, i32 %1072) #7
  br label %1079

1079:                                             ; preds = %1075, %1078
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %1071) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1065) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1059) #7
  br label %138

1080:                                             ; preds = %6
  %1081 = getelementptr inbounds %class.SkPicturePlayback, %class.SkPicturePlayback* %0, i64 0, i32 0
  %1082 = load %class.SkPictureData*, %class.SkPictureData** %1081, align 8
  %1083 = tail call dereferenceable(72) %class.SkPaint* @_ZNK13SkPictureData13requiredPaintEP12SkReadBuffer(%class.SkPictureData* %1082, %class.SkReadBuffer* %1) #7
  %1084 = bitcast %struct.SkRect* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1084) #7
  %1085 = bitcast %struct.SkRect* %45 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %1085, i8 -1, i64 16, i1 false)
  call void @_ZN12SkReadBuffer8readRectEP6SkRect(%class.SkReadBuffer* %1, %struct.SkRect* nonnull %45) #7
  %1086 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %1087 = load i8, i8* %1086, align 8, !range !2
  %1088 = icmp eq i8 %1087, 0
  br i1 %1088, label %1089, label %1090

1089:                                             ; preds = %1080
  call void @_ZN8SkCanvas8drawOvalERK6SkRectRK7SkPaint(%class.SkCanvas* %4, %struct.SkRect* nonnull dereferenceable(16) %45, %class.SkPaint* dereferenceable(72) %1083) #7
  br label %1090

1090:                                             ; preds = %1080, %1089
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1084) #7
  br label %138

1091:                                             ; preds = %6
  %1092 = getelementptr inbounds %class.SkPicturePlayback, %class.SkPicturePlayback* %0, i64 0, i32 0
  %1093 = load %class.SkPictureData*, %class.SkPictureData** %1092, align 8
  %1094 = tail call dereferenceable(72) %class.SkPaint* @_ZNK13SkPictureData13requiredPaintEP12SkReadBuffer(%class.SkPictureData* %1093, %class.SkReadBuffer* %1) #7
  %1095 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %1096 = load i8, i8* %1095, align 8, !range !2
  %1097 = icmp eq i8 %1096, 0
  br i1 %1097, label %1098, label %138

1098:                                             ; preds = %1091
  tail call void @_ZN8SkCanvas9drawPaintERK7SkPaint(%class.SkCanvas* %4, %class.SkPaint* dereferenceable(72) %1094) #7
  br label %138

1099:                                             ; preds = %6
  %1100 = getelementptr inbounds %class.SkPicturePlayback, %class.SkPicturePlayback* %0, i64 0, i32 0
  %1101 = load %class.SkPictureData*, %class.SkPictureData** %1100, align 8
  %1102 = tail call dereferenceable(72) %class.SkPaint* @_ZNK13SkPictureData13requiredPaintEP12SkReadBuffer(%class.SkPictureData* %1101, %class.SkReadBuffer* %1) #7
  %1103 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %1104 = load i8, i8* %1103, align 8, !range !2
  %1105 = icmp eq i8 %1104, 0
  br i1 %1105, label %1106, label %138

1106:                                             ; preds = %1099
  tail call void @_ZN8SkCanvas23drawClippedToSaveBehindERK7SkPaint(%class.SkCanvas* %4, %class.SkPaint* dereferenceable(72) %1102) #7
  br label %138

1107:                                             ; preds = %6
  %1108 = getelementptr inbounds %class.SkPicturePlayback, %class.SkPicturePlayback* %0, i64 0, i32 0
  %1109 = load %class.SkPictureData*, %class.SkPictureData** %1108, align 8
  %1110 = tail call dereferenceable(72) %class.SkPaint* @_ZNK13SkPictureData13requiredPaintEP12SkReadBuffer(%class.SkPictureData* %1109, %class.SkReadBuffer* %1) #7
  %1111 = tail call i8* @_ZN12SkReadBuffer4skipEmm(%class.SkReadBuffer* %1, i64 12, i64 8) #7
  %1112 = bitcast i8* %1111 to %struct.SkPoint*
  %1113 = tail call i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer* %1) #7
  %1114 = and i32 %1113, 2
  %1115 = icmp eq i32 %1114, 0
  br i1 %1115, label %1119, label %1116

1116:                                             ; preds = %1107
  %1117 = tail call i8* @_ZN12SkReadBuffer4skipEmm(%class.SkReadBuffer* %1, i64 4, i64 4) #7
  %1118 = bitcast i8* %1117 to i32*
  br label %1119

1119:                                             ; preds = %1107, %1116
  %1120 = phi i32* [ %1118, %1116 ], [ null, %1107 ]
  %1121 = and i32 %1113, 1
  %1122 = icmp eq i32 %1121, 0
  br i1 %1122, label %1126, label %1123

1123:                                             ; preds = %1119
  %1124 = tail call i8* @_ZN12SkReadBuffer4skipEmm(%class.SkReadBuffer* %1, i64 4, i64 8) #7
  %1125 = bitcast i8* %1124 to %struct.SkPoint*
  br label %1126

1126:                                             ; preds = %1119, %1123
  %1127 = phi %struct.SkPoint* [ %1125, %1123 ], [ null, %1119 ]
  %1128 = and i32 %1113, 8
  %1129 = icmp eq i32 %1128, 0
  br i1 %1129, label %1134, label %1130

1130:                                             ; preds = %1126
  %1131 = tail call i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer* %1) #7
  %1132 = icmp ult i32 %1131, 29
  %1133 = select i1 %1132, i32 %1131, i32 13
  br label %1134

1134:                                             ; preds = %1126, %1130
  %1135 = phi i32 [ %1133, %1130 ], [ 13, %1126 ]
  %1136 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %1137 = load i8, i8* %1136, align 8, !range !2
  %1138 = icmp eq i8 %1137, 0
  br i1 %1138, label %1139, label %138

1139:                                             ; preds = %1134
  tail call void @_ZN8SkCanvas9drawPatchEPK7SkPointPKjS2_11SkBlendModeRK7SkPaint(%class.SkCanvas* %4, %struct.SkPoint* %1112, i32* %1120, %struct.SkPoint* %1127, i32 %1135, %class.SkPaint* dereferenceable(72) %1110) #7
  br label %138

1140:                                             ; preds = %6
  %1141 = getelementptr inbounds %class.SkPicturePlayback, %class.SkPicturePlayback* %0, i64 0, i32 0
  %1142 = load %class.SkPictureData*, %class.SkPictureData** %1141, align 8
  %1143 = tail call dereferenceable(72) %class.SkPaint* @_ZNK13SkPictureData13requiredPaintEP12SkReadBuffer(%class.SkPictureData* %1142, %class.SkReadBuffer* %1) #7
  %1144 = load %class.SkPictureData*, %class.SkPictureData** %1141, align 8
  %1145 = tail call i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer* %1) #7
  %1146 = icmp sgt i32 %1145, 0
  br i1 %1146, label %1147, label %1154

1147:                                             ; preds = %1140
  %1148 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %1144, i64 0, i32 1, i32 1
  %1149 = load i64, i64* %1148, align 8
  %1150 = lshr i64 %1149, 1
  %1151 = trunc i64 %1150 to i32
  %1152 = and i32 %1151, 2147483647
  %1153 = icmp sgt i32 %1145, %1152
  br i1 %1153, label %1154, label %1155

1154:                                             ; preds = %1147, %1140
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #7
  br label %1155

1155:                                             ; preds = %1154, %1147
  %1156 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %1157 = load i8, i8* %1156, align 8, !range !2
  %1158 = icmp eq i8 %1157, 0
  br i1 %1158, label %1159, label %138

1159:                                             ; preds = %1155
  %1160 = add nsw i32 %1145, -1
  %1161 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %1144, i64 0, i32 1, i32 0
  %1162 = load %class.SkPath*, %class.SkPath** %1161, align 8
  %1163 = sext i32 %1160 to i64
  %1164 = getelementptr inbounds %class.SkPath, %class.SkPath* %1162, i64 %1163
  tail call void @_ZN8SkCanvas8drawPathERK6SkPathRK7SkPaint(%class.SkCanvas* %4, %class.SkPath* dereferenceable(16) %1164, %class.SkPaint* dereferenceable(72) %1143) #7
  br label %138

1165:                                             ; preds = %6
  %1166 = getelementptr inbounds %class.SkPicturePlayback, %class.SkPicturePlayback* %0, i64 0, i32 0
  %1167 = load %class.SkPictureData*, %class.SkPictureData** %1166, align 8
  %1168 = tail call i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer* %1) #7
  %1169 = icmp sgt i32 %1168, 0
  br i1 %1169, label %1170, label %1177

1170:                                             ; preds = %1165
  %1171 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %1167, i64 0, i32 5, i32 1
  %1172 = load i64, i64* %1171, align 8
  %1173 = lshr i64 %1172, 1
  %1174 = trunc i64 %1173 to i32
  %1175 = and i32 %1174, 2147483647
  %1176 = icmp sgt i32 %1168, %1175
  br i1 %1176, label %1177, label %1178

1177:                                             ; preds = %1170, %1165
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #7
  br label %1178

1178:                                             ; preds = %1177, %1170
  %1179 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %1180 = load i8, i8* %1179, align 8, !range !2
  %1181 = icmp eq i8 %1180, 0
  br i1 %1181, label %1182, label %138

1182:                                             ; preds = %1178
  %1183 = add nsw i32 %1168, -1
  %1184 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %1167, i64 0, i32 5, i32 0
  %1185 = load %class.sk_sp.26*, %class.sk_sp.26** %1184, align 8
  %1186 = sext i32 %1183 to i64
  %1187 = getelementptr inbounds %class.sk_sp.26, %class.sk_sp.26* %1185, i64 %1186, i32 0
  %1188 = load %class.SkPicture*, %class.SkPicture** %1187, align 8
  tail call void @_ZN8SkCanvas11drawPictureEPK9SkPicturePK8SkMatrixPK7SkPaint(%class.SkCanvas* %4, %class.SkPicture* %1188, %class.SkMatrix* null, %class.SkPaint* null) #7
  br label %138

1189:                                             ; preds = %6
  %1190 = getelementptr inbounds %class.SkPicturePlayback, %class.SkPicturePlayback* %0, i64 0, i32 0
  %1191 = load %class.SkPictureData*, %class.SkPictureData** %1190, align 8
  %1192 = tail call %class.SkPaint* @_ZNK13SkPictureData13optionalPaintEP12SkReadBuffer(%class.SkPictureData* %1191, %class.SkReadBuffer* %1) #7
  %1193 = bitcast %class.SkMatrix* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1193) #7
  %1194 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %46, i64 0, i32 1
  %1195 = bitcast %class.SkMatrix* %46 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %1195, align 16
  %1196 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %46, i64 0, i32 0, i64 4
  %1197 = bitcast float* %1196 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %1197, align 16
  %1198 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %46, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %1198, align 16
  store i32 16, i32* %1194, align 4
  call void @_ZN12SkReadBuffer10readMatrixEP8SkMatrix(%class.SkReadBuffer* %1, %class.SkMatrix* nonnull %46) #7
  %1199 = load %class.SkPictureData*, %class.SkPictureData** %1190, align 8
  %1200 = call i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer* %1) #7
  %1201 = icmp sgt i32 %1200, 0
  br i1 %1201, label %1202, label %1209

1202:                                             ; preds = %1189
  %1203 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %1199, i64 0, i32 5, i32 1
  %1204 = load i64, i64* %1203, align 8
  %1205 = lshr i64 %1204, 1
  %1206 = trunc i64 %1205 to i32
  %1207 = and i32 %1206, 2147483647
  %1208 = icmp sgt i32 %1200, %1207
  br i1 %1208, label %1209, label %1210

1209:                                             ; preds = %1202, %1189
  call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #7
  br label %1210

1210:                                             ; preds = %1209, %1202
  %1211 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %1212 = load i8, i8* %1211, align 8, !range !2
  %1213 = icmp eq i8 %1212, 0
  br i1 %1213, label %1214, label %1221

1214:                                             ; preds = %1210
  %1215 = add nsw i32 %1200, -1
  %1216 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %1199, i64 0, i32 5, i32 0
  %1217 = load %class.sk_sp.26*, %class.sk_sp.26** %1216, align 8
  %1218 = sext i32 %1215 to i64
  %1219 = getelementptr inbounds %class.sk_sp.26, %class.sk_sp.26* %1217, i64 %1218, i32 0
  %1220 = load %class.SkPicture*, %class.SkPicture** %1219, align 8
  call void @_ZN8SkCanvas11drawPictureEPK9SkPicturePK8SkMatrixPK7SkPaint(%class.SkCanvas* %4, %class.SkPicture* %1220, %class.SkMatrix* nonnull %46, %class.SkPaint* %1192) #7
  br label %1221

1221:                                             ; preds = %1210, %1214
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1193) #7
  br label %138

1222:                                             ; preds = %6
  %1223 = getelementptr inbounds %class.SkPicturePlayback, %class.SkPicturePlayback* %0, i64 0, i32 0
  %1224 = load %class.SkPictureData*, %class.SkPictureData** %1223, align 8
  %1225 = tail call dereferenceable(72) %class.SkPaint* @_ZNK13SkPictureData13requiredPaintEP12SkReadBuffer(%class.SkPictureData* %1224, %class.SkReadBuffer* %1) #7
  %1226 = tail call i32 @_ZN12SkReadBuffer8checkIntEii(%class.SkReadBuffer* %1, i32 0, i32 2) #7
  %1227 = tail call i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer* %1) #7
  %1228 = sext i32 %1227 to i64
  %1229 = tail call i8* @_ZN12SkReadBuffer4skipEmm(%class.SkReadBuffer* %1, i64 %1228, i64 8) #7
  %1230 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %1231 = load i8, i8* %1230, align 8, !range !2
  %1232 = icmp eq i8 %1231, 0
  br i1 %1232, label %1233, label %138

1233:                                             ; preds = %1222
  %1234 = bitcast i8* %1229 to %struct.SkPoint*
  tail call void @_ZN8SkCanvas10drawPointsENS_9PointModeEmPK7SkPointRK7SkPaint(%class.SkCanvas* %4, i32 %1226, i64 %1228, %struct.SkPoint* %1234, %class.SkPaint* dereferenceable(72) %1225) #7
  br label %138

1235:                                             ; preds = %6
  %1236 = getelementptr inbounds %class.SkPicturePlayback, %class.SkPicturePlayback* %0, i64 0, i32 0
  %1237 = load %class.SkPictureData*, %class.SkPictureData** %1236, align 8
  %1238 = tail call dereferenceable(72) %class.SkPaint* @_ZNK13SkPictureData13requiredPaintEP12SkReadBuffer(%class.SkPictureData* %1237, %class.SkReadBuffer* %1) #7
  %1239 = bitcast %struct.SkRect* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1239) #7
  %1240 = bitcast %struct.SkRect* %47 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %1240, i8 -1, i64 16, i1 false)
  call void @_ZN12SkReadBuffer8readRectEP6SkRect(%class.SkReadBuffer* %1, %struct.SkRect* nonnull %47) #7
  %1241 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %1242 = load i8, i8* %1241, align 8, !range !2
  %1243 = icmp eq i8 %1242, 0
  br i1 %1243, label %1244, label %1245

1244:                                             ; preds = %1235
  call void @_ZN8SkCanvas8drawRectERK6SkRectRK7SkPaint(%class.SkCanvas* %4, %struct.SkRect* nonnull dereferenceable(16) %47, %class.SkPaint* dereferenceable(72) %1238) #7
  br label %1245

1245:                                             ; preds = %1235, %1244
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1239) #7
  br label %138

1246:                                             ; preds = %6
  %1247 = getelementptr inbounds %class.SkPicturePlayback, %class.SkPicturePlayback* %0, i64 0, i32 0
  %1248 = load %class.SkPictureData*, %class.SkPictureData** %1247, align 8
  %1249 = tail call dereferenceable(72) %class.SkPaint* @_ZNK13SkPictureData13requiredPaintEP12SkReadBuffer(%class.SkPictureData* %1248, %class.SkReadBuffer* %1) #7
  %1250 = bitcast %class.SkRegion* %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1250) #7
  %1251 = bitcast %class.SkRegion* %48 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1251, i8 -86, i64 24, i1 false)
  call void @_ZN8SkRegionC1Ev(%class.SkRegion* nonnull %48) #7
  call void @_ZN12SkReadBuffer10readRegionEP8SkRegion(%class.SkReadBuffer* %1, %class.SkRegion* nonnull %48) #7
  %1252 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %1253 = load i8, i8* %1252, align 8, !range !2
  %1254 = icmp eq i8 %1253, 0
  br i1 %1254, label %1255, label %1256

1255:                                             ; preds = %1246
  call void @_ZN8SkCanvas10drawRegionERK8SkRegionRK7SkPaint(%class.SkCanvas* %4, %class.SkRegion* nonnull dereferenceable(24) %48, %class.SkPaint* dereferenceable(72) %1249) #7
  br label %1256

1256:                                             ; preds = %1246, %1255
  call void @_ZN8SkRegionD1Ev(%class.SkRegion* nonnull %48) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1250) #7
  br label %138

1257:                                             ; preds = %6
  %1258 = getelementptr inbounds %class.SkPicturePlayback, %class.SkPicturePlayback* %0, i64 0, i32 0
  %1259 = load %class.SkPictureData*, %class.SkPictureData** %1258, align 8
  %1260 = tail call dereferenceable(72) %class.SkPaint* @_ZNK13SkPictureData13requiredPaintEP12SkReadBuffer(%class.SkPictureData* %1259, %class.SkReadBuffer* %1) #7
  %1261 = bitcast %class.SkRRect* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %1261) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %1261, i8 0, i64 52, i1 false) #7
  call void @_ZN12SkReadBuffer9readRRectEP7SkRRect(%class.SkReadBuffer* %1, %class.SkRRect* nonnull %49) #7
  %1262 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %1263 = load i8, i8* %1262, align 8, !range !2
  %1264 = icmp eq i8 %1263, 0
  br i1 %1264, label %1265, label %1266

1265:                                             ; preds = %1257
  call void @_ZN8SkCanvas9drawRRectERK7SkRRectRK7SkPaint(%class.SkCanvas* %4, %class.SkRRect* nonnull dereferenceable(52) %49, %class.SkPaint* dereferenceable(72) %1260) #7
  br label %1266

1266:                                             ; preds = %1257, %1265
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %1261) #7
  br label %138

1267:                                             ; preds = %6
  %1268 = getelementptr inbounds %class.SkPicturePlayback, %class.SkPicturePlayback* %0, i64 0, i32 0
  %1269 = load %class.SkPictureData*, %class.SkPictureData** %1268, align 8
  %1270 = tail call i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer* %1) #7
  %1271 = icmp sgt i32 %1270, 0
  br i1 %1271, label %1272, label %1279

1272:                                             ; preds = %1267
  %1273 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %1269, i64 0, i32 1, i32 1
  %1274 = load i64, i64* %1273, align 8
  %1275 = lshr i64 %1274, 1
  %1276 = trunc i64 %1275 to i32
  %1277 = and i32 %1276, 2147483647
  %1278 = icmp sgt i32 %1270, %1277
  br i1 %1278, label %1279, label %1280

1279:                                             ; preds = %1272, %1267
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #7
  br label %1280

1280:                                             ; preds = %1279, %1272
  %1281 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %1282 = load i8, i8* %1281, align 8, !range !2
  %1283 = icmp eq i8 %1282, 0
  br i1 %1283, label %1284, label %1290

1284:                                             ; preds = %1280
  %1285 = add nsw i32 %1270, -1
  %1286 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %1269, i64 0, i32 1, i32 0
  %1287 = load %class.SkPath*, %class.SkPath** %1286, align 8
  %1288 = sext i32 %1285 to i64
  %1289 = getelementptr inbounds %class.SkPath, %class.SkPath* %1287, i64 %1288
  br label %1292

1290:                                             ; preds = %1280
  %1291 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %1269, i64 0, i32 3
  br label %1292

1292:                                             ; preds = %1284, %1290
  %1293 = phi %class.SkPath* [ %1289, %1284 ], [ %1291, %1290 ]
  %1294 = bitcast %struct.SkDrawShadowRec* %50 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1294) #7
  %1295 = getelementptr inbounds %struct.SkDrawShadowRec, %struct.SkDrawShadowRec* %50, i64 0, i32 0
  %1296 = getelementptr inbounds %struct.SkDrawShadowRec, %struct.SkDrawShadowRec* %50, i64 0, i32 1
  %1297 = getelementptr inbounds %struct.SkDrawShadowRec, %struct.SkDrawShadowRec* %50, i64 0, i32 2
  %1298 = getelementptr inbounds %struct.SkDrawShadowRec, %struct.SkDrawShadowRec* %50, i64 0, i32 3
  %1299 = bitcast %struct.SkDrawShadowRec* %50 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %1299, i8 -1, i64 28, i1 false)
  store i32 -1431655766, i32* %1298, align 4
  %1300 = getelementptr inbounds %struct.SkDrawShadowRec, %struct.SkDrawShadowRec* %50, i64 0, i32 4
  store i32 -1431655766, i32* %1300, align 4
  %1301 = getelementptr inbounds %struct.SkDrawShadowRec, %struct.SkDrawShadowRec* %50, i64 0, i32 5
  store i32 -1431655766, i32* %1301, align 4
  call void @_ZN12SkReadBuffer10readPoint3EP8SkPoint3(%class.SkReadBuffer* %1, %struct.SkPoint3* nonnull %1295) #7
  call void @_ZN12SkReadBuffer10readPoint3EP8SkPoint3(%class.SkReadBuffer* %1, %struct.SkPoint3* %1296) #7
  %1302 = call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #7
  store float %1302, float* %1297, align 4
  %1303 = call i32 @_ZN12SkReadBuffer6read32Ev(%class.SkReadBuffer* %1) #7
  store i32 %1303, i32* %1298, align 4
  %1304 = call i32 @_ZN12SkReadBuffer6read32Ev(%class.SkReadBuffer* %1) #7
  store i32 %1304, i32* %1300, align 4
  %1305 = call i32 @_ZN12SkReadBuffer6read32Ev(%class.SkReadBuffer* %1) #7
  store i32 %1305, i32* %1301, align 4
  %1306 = load i8, i8* %1281, align 8, !range !2
  %1307 = icmp eq i8 %1306, 0
  br i1 %1307, label %1308, label %1309

1308:                                             ; preds = %1292
  call void @_ZN8SkCanvas23private_draw_shadow_recERK6SkPathRK15SkDrawShadowRec(%class.SkCanvas* %4, %class.SkPath* dereferenceable(16) %1293, %struct.SkDrawShadowRec* nonnull dereferenceable(40) %50) #7
  br label %1309

1309:                                             ; preds = %1292, %1308
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1294) #7
  br label %138

1310:                                             ; preds = %6
  %1311 = getelementptr inbounds %class.SkPicturePlayback, %class.SkPicturePlayback* %0, i64 0, i32 0
  %1312 = load %class.SkPictureData*, %class.SkPictureData** %1311, align 8
  %1313 = tail call dereferenceable(72) %class.SkPaint* @_ZNK13SkPictureData13requiredPaintEP12SkReadBuffer(%class.SkPictureData* %1312, %class.SkReadBuffer* %1) #7
  %1314 = load %class.SkPictureData*, %class.SkPictureData** %1311, align 8
  %1315 = tail call i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer* %1) #7
  %1316 = icmp sgt i32 %1315, 0
  br i1 %1316, label %1317, label %1324

1317:                                             ; preds = %1310
  %1318 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %1314, i64 0, i32 7, i32 1
  %1319 = load i64, i64* %1318, align 8
  %1320 = lshr i64 %1319, 1
  %1321 = trunc i64 %1320 to i32
  %1322 = and i32 %1321, 2147483647
  %1323 = icmp sgt i32 %1315, %1322
  br i1 %1323, label %1324, label %1325

1324:                                             ; preds = %1317, %1310
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #7
  br label %1325

1325:                                             ; preds = %1324, %1317
  %1326 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %1327 = load i8, i8* %1326, align 8, !range !2
  %1328 = icmp eq i8 %1327, 0
  br i1 %1328, label %1329, label %1336

1329:                                             ; preds = %1325
  %1330 = add nsw i32 %1315, -1
  %1331 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %1314, i64 0, i32 7, i32 0
  %1332 = load %class.sk_sp.30*, %class.sk_sp.30** %1331, align 8
  %1333 = sext i32 %1330 to i64
  %1334 = getelementptr inbounds %class.sk_sp.30, %class.sk_sp.30* %1332, i64 %1333, i32 0
  %1335 = load %class.SkTextBlob*, %class.SkTextBlob** %1334, align 8
  br label %1336

1336:                                             ; preds = %1325, %1329
  %1337 = phi %class.SkTextBlob* [ %1335, %1329 ], [ null, %1325 ]
  %1338 = tail call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #7
  %1339 = tail call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #7
  %1340 = load i8, i8* %1326, align 8, !range !2
  %1341 = icmp eq i8 %1340, 0
  br i1 %1341, label %1342, label %138

1342:                                             ; preds = %1336
  tail call void @_ZN8SkCanvas12drawTextBlobEPK10SkTextBlobffRK7SkPaint(%class.SkCanvas* %4, %class.SkTextBlob* %1337, float %1338, float %1339, %class.SkPaint* dereferenceable(72) %1313) #7
  br label %138

1343:                                             ; preds = %6
  %1344 = getelementptr inbounds %class.SkPicturePlayback, %class.SkPicturePlayback* %0, i64 0, i32 0
  %1345 = load %class.SkPictureData*, %class.SkPictureData** %1344, align 8
  %1346 = tail call dereferenceable(72) %class.SkPaint* @_ZNK13SkPictureData13requiredPaintEP12SkReadBuffer(%class.SkPictureData* %1345, %class.SkReadBuffer* %1) #7
  %1347 = load %class.SkPictureData*, %class.SkPictureData** %1344, align 8
  %1348 = tail call i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer* %1) #7
  %1349 = icmp sgt i32 %1348, 0
  br i1 %1349, label %1350, label %1357

1350:                                             ; preds = %1343
  %1351 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %1347, i64 0, i32 8, i32 1
  %1352 = load i64, i64* %1351, align 8
  %1353 = lshr i64 %1352, 1
  %1354 = trunc i64 %1353 to i32
  %1355 = and i32 %1354, 2147483647
  %1356 = icmp sgt i32 %1348, %1355
  br i1 %1356, label %1357, label %1358

1357:                                             ; preds = %1350, %1343
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #7
  br label %1358

1358:                                             ; preds = %1357, %1350
  %1359 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %1360 = load i8, i8* %1359, align 8, !range !2
  %1361 = icmp eq i8 %1360, 0
  br i1 %1361, label %1362, label %1369

1362:                                             ; preds = %1358
  %1363 = add nsw i32 %1348, -1
  %1364 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %1347, i64 0, i32 8, i32 0
  %1365 = load %class.sk_sp.38*, %class.sk_sp.38** %1364, align 8
  %1366 = sext i32 %1363 to i64
  %1367 = getelementptr inbounds %class.sk_sp.38, %class.sk_sp.38* %1365, i64 %1366, i32 0
  %1368 = load %class.SkVertices*, %class.SkVertices** %1367, align 8
  br label %1369

1369:                                             ; preds = %1358, %1362
  %1370 = phi %class.SkVertices* [ %1368, %1362 ], [ null, %1358 ]
  %1371 = tail call i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer* %1) #7
  %1372 = sext i32 %1371 to i64
  %1373 = tail call i8* @_ZN12SkReadBuffer4skipEmm(%class.SkReadBuffer* %1, i64 %1372, i64 24) #7
  %1374 = tail call i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer* %1) #7
  %1375 = icmp ugt i32 %1374, 28
  br i1 %1375, label %1376, label %1377

1376:                                             ; preds = %1369
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #7
  br label %1377

1377:                                             ; preds = %1369, %1376
  %1378 = load i8, i8* %1359, align 8, !range !2
  %1379 = icmp eq i8 %1378, 0
  %1380 = xor i1 %1379, true
  %1381 = icmp eq %class.SkVertices* %1370, null
  %1382 = or i1 %1381, %1380
  br i1 %1382, label %138, label %1383

1383:                                             ; preds = %1377
  %1384 = select i1 %1379, i32 %1374, i32 0
  tail call void @_ZN8SkCanvas12drawVerticesEPK10SkVertices11SkBlendModeRK7SkPaint(%class.SkCanvas* %4, %class.SkVertices* nonnull %1370, i32 %1384, %class.SkPaint* dereferenceable(72) %1346) #7
  br label %138

1385:                                             ; preds = %6
  %1386 = bitcast %class.SkString* %51 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1386) #7
  %1387 = getelementptr inbounds %class.SkString, %class.SkString* %51, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %1387, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %51) #7
  call void @_ZN12SkReadBuffer10readStringEP8SkString(%class.SkReadBuffer* %1, %class.SkString* nonnull %51) #7
  %1388 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %1389 = load i8, i8* %1388, align 8, !range !2
  %1390 = icmp eq i8 %1389, 0
  br i1 %1390, label %1391, label %1394

1391:                                             ; preds = %1385
  %1392 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %1387, align 8
  %1393 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %1392, i64 0, i32 2
  call void @_ZN8SkCanvas7markCTMEPKc(%class.SkCanvas* %4, i8* %1393) #7
  br label %1394

1394:                                             ; preds = %1385, %1391
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %51) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1386) #7
  br label %138

1395:                                             ; preds = %6
  tail call void @_ZN8SkCanvas7restoreEv(%class.SkCanvas* %4) #7
  br label %138

1396:                                             ; preds = %6
  %1397 = tail call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #7
  tail call void @_ZN8SkCanvas6rotateEf(%class.SkCanvas* %4, float %1397) #7
  br label %138

1398:                                             ; preds = %6
  %1399 = tail call i32 @_ZN8SkCanvas4saveEv(%class.SkCanvas* %4) #7
  br label %138

1400:                                             ; preds = %6
  %1401 = tail call i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer* %1) #7
  %1402 = bitcast %struct.SkRect* %52 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1402) #7
  %1403 = and i32 %1401, 1
  %1404 = icmp eq i32 %1403, 0
  %1405 = bitcast %struct.SkRect* %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %1405, i8 -1, i64 16, i1 false)
  br i1 %1404, label %1407, label %1406

1406:                                             ; preds = %1400
  call void @_ZN12SkReadBuffer8readRectEP6SkRect(%class.SkReadBuffer* %1, %struct.SkRect* nonnull %52) #7
  br label %1407

1407:                                             ; preds = %1400, %1406
  %1408 = phi %struct.SkRect* [ %52, %1406 ], [ null, %1400 ]
  %1409 = call i32 @_ZN8SkCanvas28only_axis_aligned_saveBehindEPK6SkRect(%class.SkCanvas* %4, %struct.SkRect* %1408) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1402) #7
  br label %138

1410:                                             ; preds = %6
  %1411 = bitcast %"struct.SkCanvas::SaveLayerRec"* %53 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1411) #7
  %1412 = getelementptr inbounds %"struct.SkCanvas::SaveLayerRec", %"struct.SkCanvas::SaveLayerRec"* %53, i64 0, i32 1
  %1413 = getelementptr inbounds %"struct.SkCanvas::SaveLayerRec", %"struct.SkCanvas::SaveLayerRec"* %53, i64 0, i32 2
  %1414 = getelementptr inbounds %"struct.SkCanvas::SaveLayerRec", %"struct.SkCanvas::SaveLayerRec"* %53, i64 0, i32 3
  %1415 = bitcast %"struct.SkCanvas::SaveLayerRec"* %53 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1415, i8 -86, i64 32, i1 false)
  %1416 = bitcast %"struct.SkCanvas::SaveLayerRec"* %53 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1416, i8 0, i64 28, i1 false)
  %1417 = tail call i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer* %1) #7
  %1418 = bitcast %struct.SkRect* %54 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1418) #7
  %1419 = and i32 %1417, 1
  %1420 = icmp eq i32 %1419, 0
  %1421 = bitcast %struct.SkRect* %54 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %1421, i8 -1, i64 16, i1 false)
  br i1 %1420, label %1424, label %1422

1422:                                             ; preds = %1410
  %1423 = getelementptr inbounds %"struct.SkCanvas::SaveLayerRec", %"struct.SkCanvas::SaveLayerRec"* %53, i64 0, i32 0
  call void @_ZN12SkReadBuffer8readRectEP6SkRect(%class.SkReadBuffer* %1, %struct.SkRect* nonnull %54) #7
  store %struct.SkRect* %54, %struct.SkRect** %1423, align 8
  br label %1424

1424:                                             ; preds = %1410, %1422
  %1425 = and i32 %1417, 2
  %1426 = icmp eq i32 %1425, 0
  br i1 %1426, label %1431, label %1427

1427:                                             ; preds = %1424
  %1428 = getelementptr inbounds %class.SkPicturePlayback, %class.SkPicturePlayback* %0, i64 0, i32 0
  %1429 = load %class.SkPictureData*, %class.SkPictureData** %1428, align 8
  %1430 = call dereferenceable(72) %class.SkPaint* @_ZNK13SkPictureData13requiredPaintEP12SkReadBuffer(%class.SkPictureData* %1429, %class.SkReadBuffer* %1) #7
  store %class.SkPaint* %1430, %class.SkPaint** %1412, align 8
  br label %1431

1431:                                             ; preds = %1424, %1427
  %1432 = and i32 %1417, 4
  %1433 = icmp eq i32 %1432, 0
  br i1 %1433, label %1442, label %1434

1434:                                             ; preds = %1431
  %1435 = getelementptr inbounds %class.SkPicturePlayback, %class.SkPicturePlayback* %0, i64 0, i32 0
  %1436 = load %class.SkPictureData*, %class.SkPictureData** %1435, align 8
  %1437 = call dereferenceable(72) %class.SkPaint* @_ZNK13SkPictureData13requiredPaintEP12SkReadBuffer(%class.SkPictureData* %1436, %class.SkReadBuffer* %1) #7
  %1438 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1437, i64 0, i32 4, i32 0
  %1439 = bitcast %class.SkImageFilter** %1438 to i64*
  %1440 = load i64, i64* %1439, align 8
  %1441 = bitcast %class.SkImageFilter** %1413 to i64*
  store i64 %1440, i64* %1441, align 8
  br label %1442

1442:                                             ; preds = %1431, %1434
  %1443 = and i32 %1417, 8
  %1444 = icmp eq i32 %1443, 0
  br i1 %1444, label %1447, label %1445

1445:                                             ; preds = %1442
  %1446 = call i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer* %1) #7
  store i32 %1446, i32* %1414, align 8
  br label %1447

1447:                                             ; preds = %1442, %1445
  %1448 = and i32 %1417, 16
  %1449 = icmp eq i32 %1448, 0
  br i1 %1449, label %1461, label %1450

1450:                                             ; preds = %1447
  %1451 = getelementptr inbounds %class.SkPicturePlayback, %class.SkPicturePlayback* %0, i64 0, i32 0
  %1452 = load %class.SkPictureData*, %class.SkPictureData** %1451, align 8
  %1453 = call i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer* %1) #7
  %1454 = getelementptr inbounds %class.SkPictureData, %class.SkPictureData* %1452, i64 0, i32 9, i32 1
  %1455 = load i64, i64* %1454, align 8
  %1456 = lshr i64 %1455, 1
  %1457 = trunc i64 %1456 to i32
  %1458 = and i32 %1457, 2147483647
  %1459 = icmp ult i32 %1453, %1458
  br i1 %1459, label %1461, label %1460

1460:                                             ; preds = %1450
  call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #7
  br label %1461

1461:                                             ; preds = %1450, %1460, %1447
  %1462 = and i32 %1417, 32
  %1463 = icmp eq i32 %1462, 0
  br i1 %1463, label %1471, label %1464

1464:                                             ; preds = %1461
  %1465 = bitcast %class.SkMatrix* %55 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1465) #7
  %1466 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %55, i64 0, i32 1
  %1467 = bitcast %class.SkMatrix* %55 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %1467, align 16
  %1468 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %55, i64 0, i32 0, i64 4
  %1469 = bitcast float* %1468 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %1469, align 16
  %1470 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %55, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %1470, align 16
  store i32 16, i32* %1466, align 4
  call void @_ZN12SkReadBuffer10readMatrixEP8SkMatrix(%class.SkReadBuffer* %1, %class.SkMatrix* nonnull %55) #7
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1465) #7
  br label %1471

1471:                                             ; preds = %1461, %1464
  %1472 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %1473 = load i8, i8* %1472, align 8, !range !2
  %1474 = icmp eq i8 %1473, 0
  br i1 %1474, label %1475, label %1477

1475:                                             ; preds = %1471
  %1476 = call i32 @_ZN8SkCanvas9saveLayerERKNS_12SaveLayerRecE(%class.SkCanvas* %4, %"struct.SkCanvas::SaveLayerRec"* nonnull dereferenceable(32) %53) #7
  br label %1477

1477:                                             ; preds = %1471, %1475
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1418) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1411) #7
  br label %138

1478:                                             ; preds = %6
  %1479 = tail call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #7
  %1480 = tail call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #7
  tail call void @_ZN8SkCanvas5scaleEff(%class.SkCanvas* %4, float %1479, float %1480) #7
  br label %138

1481:                                             ; preds = %6
  %1482 = bitcast %class.SkM44* %56 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %1482) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %1482, i8* align 4 bitcast ([16 x float]* @constinit.5 to i8*), i64 64, i1 false) #7
  call void @_ZN12SkReadBuffer4readEP5SkM44(%class.SkReadBuffer* %1, %class.SkM44* nonnull %56) #7
  %1483 = bitcast %class.SkM44* %57 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %1483) #7
  %1484 = call dereferenceable(64) %class.SkM44* @_ZN5SkM449setConcatERKS_S1_(%class.SkM44* nonnull %57, %class.SkM44* dereferenceable(64) %5, %class.SkM44* nonnull dereferenceable(64) %56) #7
  call void @_ZN8SkCanvas9setMatrixERK5SkM44(%class.SkCanvas* %4, %class.SkM44* nonnull dereferenceable(64) %57) #7
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %1483) #7
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %1482) #7
  br label %138

1485:                                             ; preds = %6
  %1486 = bitcast %class.SkMatrix* %58 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1486) #7
  %1487 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %58, i64 0, i32 1
  %1488 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %58, i64 0, i32 0, i64 1
  %1489 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %58, i64 0, i32 0, i64 2
  %1490 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %58, i64 0, i32 0, i64 3
  %1491 = bitcast %class.SkMatrix* %58 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %1491, align 16
  %1492 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %58, i64 0, i32 0, i64 4
  %1493 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %58, i64 0, i32 0, i64 5
  %1494 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %58, i64 0, i32 0, i64 6
  %1495 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %58, i64 0, i32 0, i64 7
  %1496 = bitcast float* %1492 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %1496, align 16
  %1497 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %58, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %1497, align 16
  store i32 16, i32* %1487, align 4
  call void @_ZN12SkReadBuffer10readMatrixEP8SkMatrix(%class.SkReadBuffer* %1, %class.SkMatrix* nonnull %58) #7
  %1498 = bitcast %class.SkM44* %59 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %1498) #7
  %1499 = bitcast %class.SkM44* %60 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %1499) #7
  %1500 = bitcast %class.SkMatrix* %58 to i32*
  %1501 = load i32, i32* %1500, align 16
  %1502 = bitcast float* %1488 to i32*
  %1503 = load i32, i32* %1502, align 4
  %1504 = bitcast float* %1489 to i32*
  %1505 = load i32, i32* %1504, align 8
  %1506 = bitcast float* %1490 to i32*
  %1507 = load i32, i32* %1506, align 4
  %1508 = bitcast float* %1492 to i32*
  %1509 = load i32, i32* %1508, align 16
  %1510 = bitcast float* %1493 to i32*
  %1511 = load i32, i32* %1510, align 4
  %1512 = bitcast float* %1494 to i32*
  %1513 = load i32, i32* %1512, align 8
  %1514 = bitcast float* %1495 to i32*
  %1515 = load i32, i32* %1514, align 4
  %1516 = bitcast float* %1497 to i32*
  %1517 = load i32, i32* %1516, align 16
  %1518 = bitcast %class.SkM44* %60 to i32*
  store i32 %1501, i32* %1518, align 4
  %1519 = getelementptr inbounds %class.SkM44, %class.SkM44* %60, i64 0, i32 0, i64 1
  %1520 = bitcast float* %1519 to i32*
  store i32 %1507, i32* %1520, align 4
  %1521 = getelementptr inbounds %class.SkM44, %class.SkM44* %60, i64 0, i32 0, i64 2
  store float 0.000000e+00, float* %1521, align 4
  %1522 = getelementptr inbounds %class.SkM44, %class.SkM44* %60, i64 0, i32 0, i64 3
  %1523 = bitcast float* %1522 to i32*
  store i32 %1513, i32* %1523, align 4
  %1524 = getelementptr inbounds %class.SkM44, %class.SkM44* %60, i64 0, i32 0, i64 4
  %1525 = bitcast float* %1524 to i32*
  store i32 %1503, i32* %1525, align 4
  %1526 = getelementptr inbounds %class.SkM44, %class.SkM44* %60, i64 0, i32 0, i64 5
  %1527 = bitcast float* %1526 to i32*
  store i32 %1509, i32* %1527, align 4
  %1528 = getelementptr inbounds %class.SkM44, %class.SkM44* %60, i64 0, i32 0, i64 6
  store float 0.000000e+00, float* %1528, align 4
  %1529 = getelementptr inbounds %class.SkM44, %class.SkM44* %60, i64 0, i32 0, i64 7
  %1530 = bitcast float* %1529 to i32*
  store i32 %1515, i32* %1530, align 4
  %1531 = getelementptr inbounds %class.SkM44, %class.SkM44* %60, i64 0, i32 0, i64 8
  %1532 = bitcast float* %1531 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, <4 x float>* %1532, align 4
  %1533 = getelementptr inbounds %class.SkM44, %class.SkM44* %60, i64 0, i32 0, i64 12
  %1534 = bitcast float* %1533 to i32*
  store i32 %1505, i32* %1534, align 4
  %1535 = getelementptr inbounds %class.SkM44, %class.SkM44* %60, i64 0, i32 0, i64 13
  %1536 = bitcast float* %1535 to i32*
  store i32 %1511, i32* %1536, align 4
  %1537 = getelementptr inbounds %class.SkM44, %class.SkM44* %60, i64 0, i32 0, i64 14
  store float 0.000000e+00, float* %1537, align 4
  %1538 = getelementptr inbounds %class.SkM44, %class.SkM44* %60, i64 0, i32 0, i64 15
  %1539 = bitcast float* %1538 to i32*
  store i32 %1517, i32* %1539, align 4
  %1540 = call dereferenceable(64) %class.SkM44* @_ZN5SkM449setConcatERKS_S1_(%class.SkM44* nonnull %59, %class.SkM44* dereferenceable(64) %5, %class.SkM44* nonnull dereferenceable(64) %60) #7
  call void @_ZN8SkCanvas9setMatrixERK5SkM44(%class.SkCanvas* %4, %class.SkM44* nonnull dereferenceable(64) %59) #7
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %1499) #7
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %1498) #7
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1486) #7
  br label %138

1541:                                             ; preds = %6
  %1542 = tail call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #7
  %1543 = tail call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #7
  tail call void @_ZN8SkCanvas4skewEff(%class.SkCanvas* %4, float %1542, float %1543) #7
  br label %138

1544:                                             ; preds = %6
  %1545 = tail call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #7
  %1546 = tail call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #7
  tail call void @_ZN8SkCanvas9translateEff(%class.SkCanvas* %4, float %1545, float %1546) #7
  br label %138

1547:                                             ; preds = %6
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #7
  br label %138
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare i8* @_ZN12SkReadBuffer4skipEm(%class.SkReadBuffer*, i64) local_unnamed_addr #2

declare void @_ZN8SkCanvas5flushEv(%class.SkCanvas*) local_unnamed_addr #2

declare void @_ZN8SkCanvas8clipPathERK6SkPath8SkClipOpb(%class.SkCanvas*, %class.SkPath* dereferenceable(16), i32, i1 zeroext) local_unnamed_addr #2

declare void @_ZN8SkRegionC1Ev(%class.SkRegion*) unnamed_addr #2

declare void @_ZN12SkReadBuffer10readRegionEP8SkRegion(%class.SkReadBuffer*, %class.SkRegion*) local_unnamed_addr #2

declare void @_ZN8SkCanvas10clipRegionERK8SkRegion8SkClipOp(%class.SkCanvas*, %class.SkRegion* dereferenceable(24), i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkRegionD1Ev(%class.SkRegion*) unnamed_addr #3

declare void @_ZN12SkReadBuffer8readRectEP6SkRect(%class.SkReadBuffer*, %struct.SkRect*) local_unnamed_addr #2

declare void @_ZN8SkCanvas8clipRectERK6SkRect8SkClipOpb(%class.SkCanvas*, %struct.SkRect* dereferenceable(16), i32, i1 zeroext) local_unnamed_addr #2

declare void @_ZN12SkReadBuffer9readRRectEP7SkRRect(%class.SkReadBuffer*, %class.SkRRect*) local_unnamed_addr #2

declare void @_ZN8SkCanvas9clipRRectERK7SkRRect8SkClipOpb(%class.SkCanvas*, %class.SkRRect* dereferenceable(52), i32, i1 zeroext) local_unnamed_addr #2

declare dereferenceable(72) %class.SkPaint* @_ZNK13SkPictureData13requiredPaintEP12SkReadBuffer(%class.SkPictureData*, %class.SkReadBuffer*) local_unnamed_addr #2

declare void @_ZN8SkCanvas10clipShaderE5sk_spI8SkShaderE8SkClipOp(%class.SkCanvas*, %class.sk_sp.1*, i32) local_unnamed_addr #2

declare void @_ZNK7SkPaint9refShaderEv(%class.sk_sp.1* sret, %class.SkPaint*) local_unnamed_addr #2

declare void @_ZN12SkReadBuffer10readMatrixEP8SkMatrix(%class.SkReadBuffer*, %class.SkMatrix*) local_unnamed_addr #2

declare void @_ZN8SkCanvas6concatERK8SkMatrix(%class.SkCanvas*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #2

declare void @_ZN8SkCanvas6concatERK5SkM44(%class.SkCanvas*, %class.SkM44* dereferenceable(64)) local_unnamed_addr #2

declare void @_ZN8SkStringC1Ev(%class.SkString*) unnamed_addr #2

declare void @_ZN12SkReadBuffer10readStringEP8SkString(%class.SkReadBuffer*, %class.SkString*) local_unnamed_addr #2

declare void @_ZN12SkReadBuffer19readByteArrayAsDataEv(%class.sk_sp.19* sret, %class.SkReadBuffer*) local_unnamed_addr #2

declare void @_ZN8SkCanvas14drawAnnotationERK6SkRectPKcP6SkData(%class.SkCanvas*, %struct.SkRect* dereferenceable(16), i8*, %class.SkData*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #3

declare float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer*) local_unnamed_addr #2

declare void @_ZN8SkCanvas7drawArcERK6SkRectffbRK7SkPaint(%class.SkCanvas*, %struct.SkRect* dereferenceable(16), float, float, i1 zeroext, %class.SkPaint* dereferenceable(72)) local_unnamed_addr #2

declare %class.SkPaint* @_ZNK13SkPictureData13optionalPaintEP12SkReadBuffer(%class.SkPictureData*, %class.SkReadBuffer*) local_unnamed_addr #2

declare i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer*) local_unnamed_addr #2

declare i8* @_ZN12SkReadBuffer4skipEmm(%class.SkReadBuffer*, i64, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN12SkReadBuffer12readSamplingEv(%struct.SkSamplingOptions* sret, %class.SkReadBuffer*) local_unnamed_addr #2

declare void @_ZN8SkCanvas9drawAtlasEPK7SkImagePK9SkRSXformPK6SkRectPKji11SkBlendModeRK17SkSamplingOptionsS8_PK7SkPaint(%class.SkCanvas*, %class.SkImage*, %struct.SkRSXform*, %struct.SkRect*, i32*, i32, i32, %struct.SkSamplingOptions* dereferenceable(20), %struct.SkRect*, %class.SkPaint*) local_unnamed_addr #2

declare void @_ZN8SkCanvas12drawDrawableEP10SkDrawablePK8SkMatrix(%class.SkCanvas*, %class.SkDrawable*, %class.SkMatrix*) local_unnamed_addr #2

declare void @_ZN8SkCanvas10drawDRRectERK7SkRRectS2_RK7SkPaint(%class.SkCanvas*, %class.SkRRect* dereferenceable(52), %class.SkRRect* dereferenceable(52), %class.SkPaint* dereferenceable(72)) local_unnamed_addr #2

declare i32 @_ZN12SkReadBuffer6read32Ev(%class.SkReadBuffer*) local_unnamed_addr #2

declare void @_ZN12SkReadBuffer11readColor4fEP8SkRGBA4fIL11SkAlphaType3EE(%class.SkReadBuffer*, %struct.SkRGBA4f*) local_unnamed_addr #2

declare void @_ZN8SkCanvas27experimental_DrawEdgeAAQuadERK6SkRectPK7SkPointNS_11QuadAAFlagsERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkCanvas*, %struct.SkRect* dereferenceable(16), %struct.SkPoint*, i32, %struct.SkRGBA4f* dereferenceable(16), i32) local_unnamed_addr #2

declare void @_ZN17SkSamplingOptionsC1E15SkFilterQualityNS_14MediumBehaviorE(%struct.SkSamplingOptions*, i32, i32) unnamed_addr #2

declare i64 @_ZN10SkSafeMath3MulEmm(i64, i64) local_unnamed_addr #2

declare void @_ZN8SkCanvas31experimental_DrawEdgeAAImageSetEPKNS_13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsPK7SkPaintNS_17SrcRectConstraintE(%class.SkCanvas*, %"struct.SkCanvas::ImageSetEntry"*, i32, %struct.SkPoint*, %class.SkMatrix*, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*, i32) local_unnamed_addr #2

declare void @_ZN12SkReadBuffer9readPointEP7SkPoint(%class.SkReadBuffer*, %struct.SkPoint*) local_unnamed_addr #2

declare void @_ZN8SkCanvas9drawImageEPK7SkImageffRK17SkSamplingOptionsPK7SkPaint(%class.SkCanvas*, %class.SkImage*, float, float, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*) local_unnamed_addr #2

declare zeroext i1 @_ZN12SkCanvasPriv11ReadLatticeER12SkReadBufferPN8SkCanvas7LatticeE(%class.SkReadBuffer* dereferenceable(136), %"struct.SkCanvas::Lattice"*) local_unnamed_addr #2

declare void @_ZN8SkCanvas16drawImageLatticeEPK7SkImageRKNS_7LatticeERK6SkRect12SkFilterModePK7SkPaint(%class.SkCanvas*, %class.SkImage*, %"struct.SkCanvas::Lattice"* dereferenceable(48), %struct.SkRect* dereferenceable(16), i32, %class.SkPaint*) local_unnamed_addr #2

declare void @_ZN12SkReadBuffer9readIRectEP7SkIRect(%class.SkReadBuffer*, %struct.SkIRect*) local_unnamed_addr #2

declare void @_ZN8SkCanvas13drawImageNineEPK7SkImageRK7SkIRectRK6SkRect12SkFilterModePK7SkPaint(%class.SkCanvas*, %class.SkImage*, %struct.SkIRect* dereferenceable(16), %struct.SkRect* dereferenceable(16), i32, %class.SkPaint*) local_unnamed_addr #2

declare void @_ZN8SkCanvas13drawImageRectEPK7SkImageRK6SkRectS5_RK17SkSamplingOptionsPK7SkPaintNS_17SrcRectConstraintE(%class.SkCanvas*, %class.SkImage*, %struct.SkRect* dereferenceable(16), %struct.SkRect* dereferenceable(16), %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*, i32) local_unnamed_addr #2

declare void @_ZN8SkCanvas13drawImageRectEPK7SkImageRK6SkRectRK17SkSamplingOptionsPK7SkPaint(%class.SkCanvas*, %class.SkImage*, %struct.SkRect* dereferenceable(16), %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*) local_unnamed_addr #2

declare { <2 x float>, <2 x float> } @_ZN12SkReadBuffer8readRectEv(%class.SkReadBuffer*) local_unnamed_addr #2

declare void @_ZN8SkCanvas8drawOvalERK6SkRectRK7SkPaint(%class.SkCanvas*, %struct.SkRect* dereferenceable(16), %class.SkPaint* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN8SkCanvas9drawPaintERK7SkPaint(%class.SkCanvas*, %class.SkPaint* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN8SkCanvas9drawPatchEPK7SkPointPKjS2_11SkBlendModeRK7SkPaint(%class.SkCanvas*, %struct.SkPoint*, i32*, %struct.SkPoint*, i32, %class.SkPaint* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN8SkCanvas8drawPathERK6SkPathRK7SkPaint(%class.SkCanvas*, %class.SkPath* dereferenceable(16), %class.SkPaint* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN8SkCanvas11drawPictureEPK9SkPicturePK8SkMatrixPK7SkPaint(%class.SkCanvas*, %class.SkPicture*, %class.SkMatrix*, %class.SkPaint*) local_unnamed_addr #2

declare void @_ZN8SkCanvas10drawPointsENS_9PointModeEmPK7SkPointRK7SkPaint(%class.SkCanvas*, i32, i64, %struct.SkPoint*, %class.SkPaint* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN8SkCanvas8drawRectERK6SkRectRK7SkPaint(%class.SkCanvas*, %struct.SkRect* dereferenceable(16), %class.SkPaint* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN8SkCanvas10drawRegionERK8SkRegionRK7SkPaint(%class.SkCanvas*, %class.SkRegion* dereferenceable(24), %class.SkPaint* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN8SkCanvas9drawRRectERK7SkRRectRK7SkPaint(%class.SkCanvas*, %class.SkRRect* dereferenceable(52), %class.SkPaint* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN12SkReadBuffer10readPoint3EP8SkPoint3(%class.SkReadBuffer*, %struct.SkPoint3*) local_unnamed_addr #2

declare void @_ZN8SkCanvas23private_draw_shadow_recERK6SkPathRK15SkDrawShadowRec(%class.SkCanvas*, %class.SkPath* dereferenceable(16), %struct.SkDrawShadowRec* dereferenceable(40)) local_unnamed_addr #2

declare void @_ZN8SkCanvas12drawTextBlobEPK10SkTextBlobffRK7SkPaint(%class.SkCanvas*, %class.SkTextBlob*, float, float, %class.SkPaint* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN8SkCanvas12drawVerticesEPK10SkVertices11SkBlendModeRK7SkPaint(%class.SkCanvas*, %class.SkVertices*, i32, %class.SkPaint* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN8SkCanvas7markCTMEPKc(%class.SkCanvas*, i8*) local_unnamed_addr #2

declare void @_ZN8SkCanvas7restoreEv(%class.SkCanvas*) local_unnamed_addr #2

declare void @_ZN8SkCanvas6rotateEf(%class.SkCanvas*, float) local_unnamed_addr #2

declare i32 @_ZN8SkCanvas4saveEv(%class.SkCanvas*) local_unnamed_addr #2

declare i32 @_ZN8SkCanvas9saveLayerERKNS_12SaveLayerRecE(%class.SkCanvas*, %"struct.SkCanvas::SaveLayerRec"* dereferenceable(32)) local_unnamed_addr #2

declare void @_ZN8SkCanvas5scaleEff(%class.SkCanvas*, float, float) local_unnamed_addr #2

declare void @_ZN12SkReadBuffer4readEP5SkM44(%class.SkReadBuffer*, %class.SkM44*) local_unnamed_addr #2

declare void @_ZN8SkCanvas9setMatrixERK5SkM44(%class.SkCanvas*, %class.SkM44* dereferenceable(64)) local_unnamed_addr #2

declare void @_ZN8SkCanvas4skewEff(%class.SkCanvas*, float, float) local_unnamed_addr #2

declare void @_ZN8SkCanvas9translateEff(%class.SkCanvas*, float, float) local_unnamed_addr #2

declare void @_ZN12SkReadBuffer9setMemoryEPKvm(%class.SkReadBuffer*, i8*, i64) local_unnamed_addr #2

declare i32 @_ZNK8SkCanvas12getSaveCountEv(%class.SkCanvas*) local_unnamed_addr #2

declare void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer*) local_unnamed_addr #2

declare void @_ZN8SkCanvas14restoreToCountEi(%class.SkCanvas*, i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #4

declare { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32) local_unnamed_addr #2

declare void @_ZN8SkCanvas9drawColorERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkCanvas*, %struct.SkRGBA4f* dereferenceable(16), i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkCanvas13ImageSetEntryD1Ev(%"struct.SkCanvas::ImageSetEntry"*) unnamed_addr #3

declare zeroext i1 @_ZN12SkReadBuffer8readBoolEv(%class.SkReadBuffer*) local_unnamed_addr #2

declare void @_ZN8SkCanvas23drawClippedToSaveBehindERK7SkPaint(%class.SkCanvas*, %class.SkPaint* dereferenceable(72)) local_unnamed_addr #2

declare i32 @_ZN8SkCanvas28only_axis_aligned_saveBehindEPK6SkRect(%class.SkCanvas*, %struct.SkRect*) local_unnamed_addr #2

declare dereferenceable(64) %class.SkM44* @_ZN5SkM449setConcatERKS_S1_(%class.SkM44*, %class.SkM44* dereferenceable(64), %class.SkM44* dereferenceable(64)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #3

declare i32 @_ZN12SkReadBuffer8checkIntEii(%class.SkReadBuffer*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #5

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #6

declare void @_ZN8SkCanvas13ImageSetEntryC1Ev(%"struct.SkCanvas::ImageSetEntry"*) unnamed_addr #2

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayI8SkMatrixLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray.81*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.81, %class.SkTArray.81* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %74

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %74, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 40) #7
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %62, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.81, %class.SkTArray.81* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %57, %50 ]
  %52 = mul nuw nsw i64 %51, 40
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %class.SkMatrix*, %class.SkMatrix** %49, align 8
  %55 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %54, i64 %51
  %56 = bitcast %class.SkMatrix* %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %53, i8* align 4 %56, i64 40, i1 false) #7
  %57 = add nuw nsw i64 %51, 1
  %58 = load i64, i64* %4, align 8
  %59 = lshr i64 %58, 1
  %60 = and i64 %59, 2147483647
  %61 = icmp ult i64 %57, %60
  br i1 %61, label %50, label %62

62:                                               ; preds = %50, %35
  %63 = phi i64 [ %45, %35 ], [ %58, %50 ]
  %64 = and i64 %63, 1
  %65 = icmp eq i64 %64, 0
  %66 = bitcast %class.SkTArray.81* %0 to i8**
  br i1 %65, label %70, label %67

67:                                               ; preds = %62
  %68 = load i8*, i8** %66, align 8
  tail call void @_Z7sk_freePv(i8* %68) #7
  %69 = load i64, i64* %4, align 8
  br label %70

70:                                               ; preds = %62, %67
  %71 = phi i64 [ %69, %67 ], [ %63, %62 ]
  store i8* %44, i8** %66, align 8
  %72 = and i64 %71, -4294967298
  %73 = or i64 %72, 1
  store i64 %73, i64* %4, align 8
  br label %74

74:                                               ; preds = %70, %32, %21
  ret void
}

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN5SkM448ColMajorEPKf: argument 0"}
!5 = distinct !{!5, !"_ZN5SkM448ColMajorEPKf"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_Z9sk_ref_spI7SkImageE5sk_spIT_EPKS2_: argument 0"}
!8 = distinct !{!8, !"_Z9sk_ref_spI7SkImageE5sk_spIT_EPKS2_"}
