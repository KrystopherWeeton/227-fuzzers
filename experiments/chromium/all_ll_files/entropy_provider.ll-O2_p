; ModuleID = '../../components/variations/entropy_provider.cc'
source_filename = "../../components/variations/entropy_provider.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.variations::SHA1EntropyProvider" = type { %"class.base::FieldTrial::EntropyProvider", %"class.std::__1::basic_string" }
%"class.base::FieldTrial::EntropyProvider" = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.variations::NormalizedMurmurHashEntropyProvider" = type { %"class.base::FieldTrial::EntropyProvider", i16, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i32* }

@_ZTVN10variations19SHA1EntropyProviderE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.variations::SHA1EntropyProvider"*)* @_ZN10variations19SHA1EntropyProviderD2Ev to i8*), i8* bitcast (void (%"class.variations::SHA1EntropyProvider"*)* @_ZN10variations19SHA1EntropyProviderD0Ev to i8*), i8* bitcast (double (%"class.variations::SHA1EntropyProvider"*, i8*, i64, i32)* @_ZNK10variations19SHA1EntropyProvider18GetEntropyForTrialEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEj to i8*)] }, align 8
@_ZTVN10variations35NormalizedMurmurHashEntropyProviderE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.variations::NormalizedMurmurHashEntropyProvider"*)* @_ZN10variations35NormalizedMurmurHashEntropyProviderD2Ev to i8*), i8* bitcast (void (%"class.variations::NormalizedMurmurHashEntropyProvider"*)* @_ZN10variations35NormalizedMurmurHashEntropyProviderD0Ev to i8*), i8* bitcast (double (%"class.variations::NormalizedMurmurHashEntropyProvider"*, i8*, i64, i32)* @_ZNK10variations35NormalizedMurmurHashEntropyProvider18GetEntropyForTrialEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEj to i8*)] }, align 8

@_ZN10variations19SHA1EntropyProviderC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE = hidden unnamed_addr alias void (%"class.variations::SHA1EntropyProvider"*, %"class.std::__1::basic_string"*), void (%"class.variations::SHA1EntropyProvider"*, %"class.std::__1::basic_string"*)* @_ZN10variations19SHA1EntropyProviderC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
@_ZN10variations19SHA1EntropyProviderD1Ev = hidden unnamed_addr alias void (%"class.variations::SHA1EntropyProvider"*), void (%"class.variations::SHA1EntropyProvider"*)* @_ZN10variations19SHA1EntropyProviderD2Ev
@_ZN10variations35NormalizedMurmurHashEntropyProviderC1Etm = hidden unnamed_addr alias void (%"class.variations::NormalizedMurmurHashEntropyProvider"*, i16, i64), void (%"class.variations::NormalizedMurmurHashEntropyProvider"*, i16, i64)* @_ZN10variations35NormalizedMurmurHashEntropyProviderC2Etm
@_ZN10variations35NormalizedMurmurHashEntropyProviderD1Ev = hidden unnamed_addr alias void (%"class.variations::NormalizedMurmurHashEntropyProvider"*), void (%"class.variations::NormalizedMurmurHashEntropyProvider"*)* @_ZN10variations35NormalizedMurmurHashEntropyProviderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10variations19SHA1EntropyProviderC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.variations::SHA1EntropyProvider"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.variations::SHA1EntropyProvider", %"class.variations::SHA1EntropyProvider"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN10variations19SHA1EntropyProviderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.variations::SHA1EntropyProvider", %"class.variations::SHA1EntropyProvider"* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %11 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 24, i1 false) #6
  br label %17

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %4, i8* %14, i64 %16) #6
  br label %17

17:                                               ; preds = %9, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10variations19SHA1EntropyProviderD2Ev(%"class.variations::SHA1EntropyProvider"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.variations::SHA1EntropyProvider", %"class.variations::SHA1EntropyProvider"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN10variations19SHA1EntropyProviderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.variations::SHA1EntropyProvider", %"class.variations::SHA1EntropyProvider"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #7
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.variations::SHA1EntropyProvider", %"class.variations::SHA1EntropyProvider"* %0, i64 0, i32 0
  tail call void @_ZN4base10FieldTrial15EntropyProviderD2Ev(%"class.base::FieldTrial::EntropyProvider"* %12) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base10FieldTrial15EntropyProviderD2Ev(%"class.base::FieldTrial::EntropyProvider"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10variations19SHA1EntropyProviderD0Ev(%"class.variations::SHA1EntropyProvider"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.variations::SHA1EntropyProvider", %"class.variations::SHA1EntropyProvider"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN10variations19SHA1EntropyProviderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.variations::SHA1EntropyProvider", %"class.variations::SHA1EntropyProvider"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #7
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.variations::SHA1EntropyProvider", %"class.variations::SHA1EntropyProvider"* %0, i64 0, i32 0
  tail call void @_ZN4base10FieldTrial15EntropyProviderD2Ev(%"class.base::FieldTrial::EntropyProvider"* %12) #6
  %13 = bitcast %"class.variations::SHA1EntropyProvider"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK10variations19SHA1EntropyProvider18GetEntropyForTrialEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEj(%"class.variations::SHA1EntropyProvider"*, i8*, i64, i32) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca [2 x %"class.base::BasicStringPiece"], align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca [20 x i8], align 16
  %9 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #6
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = bitcast [2 x %"class.base::BasicStringPiece"]* %6 to i8*
  %13 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #6
  %14 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %6, i64 0, i64 0
  %15 = getelementptr inbounds %"class.variations::SHA1EntropyProvider", %"class.variations::SHA1EntropyProvider"* %0, i64 0, i32 1
  %16 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %6, i64 0, i64 0, i32 0
  %17 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %24 = select i1 %20, i8* %22, i8* %23
  store i8* %24, i8** %16, align 8
  %25 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %6, i64 0, i64 0, i32 1
  %26 = getelementptr inbounds %"class.variations::SHA1EntropyProvider", %"class.variations::SHA1EntropyProvider"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = zext i8 %19 to i64
  %29 = select i1 %20, i64 %27, i64 %28
  store i64 %29, i64* %25, align 8
  %30 = icmp eq i32 %3, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %4
  %32 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %6, i64 0, i64 1, i32 0
  store i8* %1, i8** %32, align 8
  %33 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %6, i64 0, i64 1, i32 1
  store i64 %2, i64* %33, align 8
  call void @_ZN4base6StrCatENS_4spanIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEELm18446744073709551615EEE(%"class.std::__1::basic_string"* nonnull sret %5, i64 2, %"class.base::BasicStringPiece"* nonnull %14) #6
  br label %54

34:                                               ; preds = %4
  %35 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #6
  call void @_ZN4base14NumberToStringEj(%"class.std::__1::basic_string"* nonnull sret %7, i32 %3) #6
  %36 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %6, i64 0, i64 1, i32 0
  %37 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = select i1 %40, i8* %42, i8* %35
  store i8* %43, i8** %36, align 8
  %44 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %6, i64 0, i64 1, i32 1
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = zext i8 %39 to i64
  %48 = select i1 %40, i64 %46, i64 %47
  store i64 %48, i64* %44, align 8
  call void @_ZN4base6StrCatENS_4spanIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEELm18446744073709551615EEE(%"class.std::__1::basic_string"* nonnull sret %5, i64 2, %"class.base::BasicStringPiece"* nonnull %14) #6
  %49 = load i8, i8* %38, align 1
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %34
  %52 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %52) #7
  br label %53

53:                                               ; preds = %34, %51
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #6
  br label %54

54:                                               ; preds = %31, %53
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #6
  %55 = getelementptr inbounds [20 x i8], [20 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %55) #6
  %56 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %55, i8 -86, i64 20, i1 false)
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  %60 = load i8*, i8** %10, align 8
  %61 = load i64, i64* %11, align 8
  %62 = zext i8 %58 to i64
  %63 = select i1 %59, i8* %60, i8* %9
  %64 = select i1 %59, i64 %61, i64 %62
  call void @_ZN4base13SHA1HashBytesEPKhmPh(i8* %63, i64 %64, i8* nonnull %55) #6
  %65 = bitcast [20 x i8]* %8 to i64*
  %66 = load i64, i64* %65, align 16
  %67 = call double @_ZN4base27BitsToOpenEndedUnitIntervalEm(i64 %66) #6
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %55) #6
  %68 = load i8, i8* %57, align 1
  %69 = icmp slt i8 %68, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %54
  %71 = load i8*, i8** %10, align 8
  call void @_ZdlPv(i8* %71) #7
  br label %72

72:                                               ; preds = %54, %70
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #6
  ret double %67
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZN4base14NumberToStringEj(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN4base13SHA1HashBytesEPKhmPh(i8*, i64, i8*) local_unnamed_addr #4

declare double @_ZN4base27BitsToOpenEndedUnitIntervalEm(i64) local_unnamed_addr #4

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10variations35NormalizedMurmurHashEntropyProviderC2Etm(%"class.variations::NormalizedMurmurHashEntropyProvider"* nocapture, i16 zeroext, i64) unnamed_addr #5 align 2 {
  %4 = getelementptr inbounds %"class.variations::NormalizedMurmurHashEntropyProvider", %"class.variations::NormalizedMurmurHashEntropyProvider"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN10variations35NormalizedMurmurHashEntropyProviderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.variations::NormalizedMurmurHashEntropyProvider", %"class.variations::NormalizedMurmurHashEntropyProvider"* %0, i64 0, i32 1
  store i16 %1, i16* %5, align 8
  %6 = getelementptr inbounds %"class.variations::NormalizedMurmurHashEntropyProvider", %"class.variations::NormalizedMurmurHashEntropyProvider"* %0, i64 0, i32 2
  store i64 %2, i64* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10variations35NormalizedMurmurHashEntropyProviderD2Ev(%"class.variations::NormalizedMurmurHashEntropyProvider"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.variations::NormalizedMurmurHashEntropyProvider", %"class.variations::NormalizedMurmurHashEntropyProvider"* %0, i64 0, i32 0
  tail call void @_ZN4base10FieldTrial15EntropyProviderD2Ev(%"class.base::FieldTrial::EntropyProvider"* %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10variations35NormalizedMurmurHashEntropyProviderD0Ev(%"class.variations::NormalizedMurmurHashEntropyProvider"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.variations::NormalizedMurmurHashEntropyProvider", %"class.variations::NormalizedMurmurHashEntropyProvider"* %0, i64 0, i32 0
  tail call void @_ZN4base10FieldTrial15EntropyProviderD2Ev(%"class.base::FieldTrial::EntropyProvider"* %2) #6
  %3 = bitcast %"class.variations::NormalizedMurmurHashEntropyProvider"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK10variations35NormalizedMurmurHashEntropyProvider18GetEntropyForTrialEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEj(%"class.variations::NormalizedMurmurHashEntropyProvider"* nocapture readonly, i8*, i64, i32) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::vector", align 8
  %6 = icmp eq i32 %3, 0
  br i1 %6, label %7, label %19

7:                                                ; preds = %4
  %8 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #6
  call void @_ZN10variations8internal20VariationsMurmurHash12StringToLE32EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::vector"* nonnull sret %5, i8* %1, i64 %2) #6
  %9 = call i32 @_ZN10variations8internal20VariationsMurmurHash4HashERKNSt3__16vectorIjNS2_9allocatorIjEEEEm(%"class.std::__1::vector"* nonnull dereferenceable(24) %5, i64 %2) #6
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = icmp eq i32* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %7
  %14 = ptrtoint i32* %11 to i64
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %16 = bitcast i32** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast i32* %11 to i8*
  call void @_ZdlPv(i8* %17) #7
  br label %18

18:                                               ; preds = %7, %13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #6
  br label %19

19:                                               ; preds = %18, %4
  %20 = phi i32 [ %9, %18 ], [ %3, %4 ]
  %21 = getelementptr inbounds %"class.variations::NormalizedMurmurHashEntropyProvider", %"class.variations::NormalizedMurmurHashEntropyProvider"* %0, i64 0, i32 1
  %22 = load i16, i16* %21, align 8
  %23 = zext i16 %22 to i32
  %24 = mul i32 %23, -862048943
  %25 = mul i32 %23, 380141568
  %26 = lshr i32 %24, 17
  %27 = or i32 %26, %25
  %28 = mul i32 %27, 461845907
  %29 = xor i32 %28, %20
  %30 = xor i32 %29, 2
  %31 = lshr i32 %29, 16
  %32 = xor i32 %30, %31
  %33 = mul i32 %32, -2048144789
  %34 = lshr i32 %33, 13
  %35 = xor i32 %34, %33
  %36 = mul i32 %35, -1028477387
  %37 = lshr i32 %36, 16
  %38 = xor i32 %37, %36
  %39 = getelementptr inbounds %"class.variations::NormalizedMurmurHashEntropyProvider", %"class.variations::NormalizedMurmurHashEntropyProvider"* %0, i64 0, i32 2
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %123, label %42

42:                                               ; preds = %19
  %43 = trunc i64 %40 to i32
  %44 = icmp ult i32 %43, 8
  br i1 %44, label %45, label %48

45:                                               ; preds = %111, %48, %42
  %46 = phi i32 [ 0, %48 ], [ 0, %42 ], [ %55, %111 ]
  %47 = phi i32 [ 0, %48 ], [ 0, %42 ], [ %117, %111 ]
  br label %127

48:                                               ; preds = %42
  %49 = add i64 %40, -1
  %50 = trunc i64 %49 to i32
  %51 = icmp eq i32 %50, -1
  %52 = icmp ugt i64 %49, 4294967295
  %53 = or i1 %51, %52
  br i1 %53, label %45, label %54

54:                                               ; preds = %48
  %55 = and i32 %43, -8
  %56 = insertelement <4 x i32> undef, i32 %20, i32 0
  %57 = shufflevector <4 x i32> %56, <4 x i32> undef, <4 x i32> zeroinitializer
  %58 = insertelement <4 x i32> undef, i32 %20, i32 0
  %59 = shufflevector <4 x i32> %58, <4 x i32> undef, <4 x i32> zeroinitializer
  %60 = insertelement <4 x i32> undef, i32 %38, i32 0
  %61 = shufflevector <4 x i32> %60, <4 x i32> undef, <4 x i32> zeroinitializer
  %62 = insertelement <4 x i32> undef, i32 %38, i32 0
  %63 = shufflevector <4 x i32> %62, <4 x i32> undef, <4 x i32> zeroinitializer
  br label %64

64:                                               ; preds = %64, %54
  %65 = phi i32 [ 0, %54 ], [ %108, %64 ]
  %66 = phi <4 x i32> [ <i32 0, i32 1, i32 2, i32 3>, %54 ], [ %109, %64 ]
  %67 = phi <4 x i32> [ zeroinitializer, %54 ], [ %106, %64 ]
  %68 = phi <4 x i32> [ zeroinitializer, %54 ], [ %107, %64 ]
  %69 = add <4 x i32> %66, <i32 4, i32 4, i32 4, i32 4>
  %70 = and <4 x i32> %66, <i32 65535, i32 65535, i32 65535, i32 65535>
  %71 = and <4 x i32> %69, <i32 65535, i32 65535, i32 65535, i32 65535>
  %72 = mul <4 x i32> %70, <i32 -862048943, i32 -862048943, i32 -862048943, i32 -862048943>
  %73 = mul <4 x i32> %71, <i32 -862048943, i32 -862048943, i32 -862048943, i32 -862048943>
  %74 = mul <4 x i32> %70, <i32 380141568, i32 380141568, i32 380141568, i32 380141568>
  %75 = mul <4 x i32> %71, <i32 380141568, i32 380141568, i32 380141568, i32 380141568>
  %76 = lshr <4 x i32> %72, <i32 17, i32 17, i32 17, i32 17>
  %77 = lshr <4 x i32> %73, <i32 17, i32 17, i32 17, i32 17>
  %78 = or <4 x i32> %76, %74
  %79 = or <4 x i32> %77, %75
  %80 = mul <4 x i32> %78, <i32 461845907, i32 461845907, i32 461845907, i32 461845907>
  %81 = mul <4 x i32> %79, <i32 461845907, i32 461845907, i32 461845907, i32 461845907>
  %82 = xor <4 x i32> %80, %57
  %83 = xor <4 x i32> %81, %59
  %84 = xor <4 x i32> %82, <i32 2, i32 2, i32 2, i32 2>
  %85 = xor <4 x i32> %83, <i32 2, i32 2, i32 2, i32 2>
  %86 = lshr <4 x i32> %82, <i32 16, i32 16, i32 16, i32 16>
  %87 = lshr <4 x i32> %83, <i32 16, i32 16, i32 16, i32 16>
  %88 = xor <4 x i32> %84, %86
  %89 = xor <4 x i32> %85, %87
  %90 = mul <4 x i32> %88, <i32 -2048144789, i32 -2048144789, i32 -2048144789, i32 -2048144789>
  %91 = mul <4 x i32> %89, <i32 -2048144789, i32 -2048144789, i32 -2048144789, i32 -2048144789>
  %92 = lshr <4 x i32> %90, <i32 13, i32 13, i32 13, i32 13>
  %93 = lshr <4 x i32> %91, <i32 13, i32 13, i32 13, i32 13>
  %94 = xor <4 x i32> %92, %90
  %95 = xor <4 x i32> %93, %91
  %96 = mul <4 x i32> %94, <i32 -1028477387, i32 -1028477387, i32 -1028477387, i32 -1028477387>
  %97 = mul <4 x i32> %95, <i32 -1028477387, i32 -1028477387, i32 -1028477387, i32 -1028477387>
  %98 = lshr <4 x i32> %96, <i32 16, i32 16, i32 16, i32 16>
  %99 = lshr <4 x i32> %97, <i32 16, i32 16, i32 16, i32 16>
  %100 = xor <4 x i32> %98, %96
  %101 = xor <4 x i32> %99, %97
  %102 = icmp ult <4 x i32> %100, %61
  %103 = icmp ult <4 x i32> %101, %63
  %104 = zext <4 x i1> %102 to <4 x i32>
  %105 = zext <4 x i1> %103 to <4 x i32>
  %106 = add nuw nsw <4 x i32> %67, %104
  %107 = add nuw nsw <4 x i32> %68, %105
  %108 = add i32 %65, 8
  %109 = add <4 x i32> %66, <i32 8, i32 8, i32 8, i32 8>
  %110 = icmp eq i32 %108, %55
  br i1 %110, label %111, label %64, !llvm.loop !2

111:                                              ; preds = %64
  %112 = add nuw <4 x i32> %107, %106
  %113 = shufflevector <4 x i32> %112, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %114 = add <4 x i32> %112, %113
  %115 = shufflevector <4 x i32> %114, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %116 = add <4 x i32> %114, %115
  %117 = extractelement <4 x i32> %116, i32 0
  %118 = icmp eq i32 %55, %43
  br i1 %118, label %119, label %45

119:                                              ; preds = %127, %111
  %120 = phi i32 [ %117, %111 ], [ %148, %127 ]
  %121 = sitofp i32 %120 to double
  %122 = uitofp i64 %40 to double
  br label %123

123:                                              ; preds = %119, %19
  %124 = phi double [ 0.000000e+00, %19 ], [ %121, %119 ]
  %125 = phi double [ 0.000000e+00, %19 ], [ %122, %119 ]
  %126 = fdiv double %124, %125
  ret double %126

127:                                              ; preds = %45, %127
  %128 = phi i32 [ %149, %127 ], [ %46, %45 ]
  %129 = phi i32 [ %148, %127 ], [ %47, %45 ]
  %130 = and i32 %128, 65535
  %131 = mul i32 %130, -862048943
  %132 = mul i32 %130, 380141568
  %133 = lshr i32 %131, 17
  %134 = or i32 %133, %132
  %135 = mul i32 %134, 461845907
  %136 = xor i32 %135, %20
  %137 = xor i32 %136, 2
  %138 = lshr i32 %136, 16
  %139 = xor i32 %137, %138
  %140 = mul i32 %139, -2048144789
  %141 = lshr i32 %140, 13
  %142 = xor i32 %141, %140
  %143 = mul i32 %142, -1028477387
  %144 = lshr i32 %143, 16
  %145 = xor i32 %144, %143
  %146 = icmp ult i32 %145, %38
  %147 = zext i1 %146 to i32
  %148 = add nuw nsw i32 %129, %147
  %149 = add i32 %128, 1
  %150 = zext i32 %149 to i64
  %151 = icmp ugt i64 %40, %150
  br i1 %151, label %127, label %119, !llvm.loop !4
}

declare i32 @_ZN10variations8internal20VariationsMurmurHash4HashERKNSt3__16vectorIjNS2_9allocatorIjEEEEm(%"class.std::__1::vector"* dereferenceable(24), i64) local_unnamed_addr #4

declare void @_ZN10variations8internal20VariationsMurmurHash12StringToLE32EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::vector"* sret, i8*, i64) local_unnamed_addr #4

declare void @_ZN4base6StrCatENS_4spanIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEELm18446744073709551615EEE(%"class.std::__1::basic_string"* sret, i64, %"class.base::BasicStringPiece"*) local_unnamed_addr #4

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
!4 = distinct !{!4, !3}
