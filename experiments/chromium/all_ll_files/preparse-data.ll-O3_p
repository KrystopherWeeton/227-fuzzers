; ModuleID = '../../v8/src/parsing/preparse-data.cc'
source_filename = "../../v8/src/parsing/preparse-data.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.14" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set", %"class.std::__1::set.25" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.17", %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { i64 }
%"class.std::__1::set.25" = type { %"class.std::__1::__tree.26" }
%"class.std::__1::__tree.26" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.17", %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::PreparseDataBuilder" = type <{ %"class.v8::internal::PreparseDataBuilder"*, %"class.v8::internal::PreparseDataBuilder::ByteData", %union.anon.1, %"class.v8::internal::DeclarationScope"*, i32, i32, i32, i8, [3 x i8] }>
%"class.v8::internal::PreparseDataBuilder::ByteData" = type <{ %union.anon, i8, [7 x i8] }>
%union.anon = type { %struct.anon }
%struct.anon = type { %"class.std::__1::vector"*, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%union.anon.1 = type { %"class.v8::internal::ScopedList" }
%"class.v8::internal::ScopedList" = type { %"class.std::__1::vector.2"*, i64, i64 }
%"class.v8::internal::DeclarationScope" = type <{ %"class.v8::internal::Scope.base", i16, i8, [2 x i8], i32, [4 x i8], %"class.v8::internal::ZoneList", %"class.v8::base::ThreadedListBase.38", %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"*, %"class.v8::internal::PreparseDataBuilder"*, %"struct.v8::internal::DeclarationScope::RareData"* }>
%"class.v8::internal::Scope.base" = type <{ %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"*, %"class.v8::internal::VariableMap", %"class.v8::base::ThreadedListBase", %"class.v8::base::ThreadedListBase.34", %"class.v8::base::ThreadedListBase.36", %"class.v8::internal::Handle.37", i32, i32, i32, i32, i8, i16 }>
%"class.v8::internal::Scope" = type <{ %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"*, %"class.v8::internal::VariableMap", %"class.v8::base::ThreadedListBase", %"class.v8::base::ThreadedListBase.34", %"class.v8::base::ThreadedListBase.36", %"class.v8::internal::Handle.37", i32, i32, i32, i32, i8, i16, [5 x i8] }>
%"class.v8::internal::VariableMap" = type { %"class.v8::base::PointerTemplateHashMapImpl" }
%"class.v8::base::PointerTemplateHashMapImpl" = type { %"class.v8::base::TemplateHashMapImpl" }
%"class.v8::base::TemplateHashMapImpl" = type { %"struct.v8::base::TemplateHashMapImpl<void *, void *, v8::base::KeyEqualityMatcher<void *>, v8::internal::ZoneAllocationPolicy>::Impl" }
%"struct.v8::base::TemplateHashMapImpl<void *, void *, v8::base::KeyEqualityMatcher<void *>, v8::internal::ZoneAllocationPolicy>::Impl" = type { %"class.v8::internal::ZoneAllocationPolicy", %"struct.v8::base::TemplateHashMapEntry"*, i32, i32 }
%"class.v8::internal::ZoneAllocationPolicy" = type { %"class.v8::internal::Zone"* }
%"struct.v8::base::TemplateHashMapEntry" = type <{ i8*, i8*, i32, [4 x i8] }>
%"class.v8::base::ThreadedListBase" = type { %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** }
%"class.v8::base::ThreadedListBase.34" = type { %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** }
%"class.v8::internal::VariableProxy" = type { %"class.v8::internal::Expression", %union.anon.35, %"class.v8::internal::VariableProxy"* }
%"class.v8::internal::Expression" = type { %"class.v8::internal::AstNode" }
%"class.v8::internal::AstNode" = type { i32, i32 }
%union.anon.35 = type { %"class.v8::internal::AstRawString"* }
%"class.v8::internal::AstRawString" = type <{ %union.anon.32, %"class.v8::internal::Vector.33", i32, i8, [3 x i8] }>
%union.anon.32 = type { %"class.v8::internal::AstRawString"* }
%"class.v8::internal::Vector.33" = type { i8*, i64 }
%"class.v8::base::ThreadedListBase.36" = type { %"class.v8::internal::Declaration"*, %"class.v8::internal::Declaration"** }
%"class.v8::internal::Declaration" = type { %"class.v8::internal::AstNode", %"class.v8::internal::Variable"*, %"class.v8::internal::Declaration"* }
%"class.v8::internal::Handle.37" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::ZoneList" = type { %"class.v8::internal::Variable"**, i32, i32 }
%"class.v8::base::ThreadedListBase.38" = type { %"class.v8::internal::SloppyBlockFunctionStatement"*, %"class.v8::internal::SloppyBlockFunctionStatement"** }
%"class.v8::internal::SloppyBlockFunctionStatement" = type { %"class.v8::internal::Statement", %"class.v8::internal::Variable"*, %"class.v8::internal::Statement"*, %"class.v8::internal::SloppyBlockFunctionStatement"* }
%"class.v8::internal::Statement" = type { %"class.v8::internal::AstNode" }
%"class.v8::internal::Variable" = type <{ %"class.v8::internal::Scope"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"*, i32, i32, i16, [6 x i8] }>
%"struct.v8::internal::DeclarationScope::RareData" = type { %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"* }
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { i8**, i8**, %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { i8** }
%"class.v8::internal::OnHeapConsumedPreparseData" = type { %"class.v8::internal::BaseConsumedPreparseData.base", %"class.v8::internal::Isolate"*, %"class.v8::internal::Handle.1241" }
%"class.v8::internal::BaseConsumedPreparseData.base" = type <{ %"class.v8::internal::ConsumedPreparseData", %"class.std::__1::unique_ptr.1254", i32 }>
%"class.v8::internal::ConsumedPreparseData" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1254" = type { %"class.std::__1::__compressed_pair.1255" }
%"class.std::__1::__compressed_pair.1255" = type { %"struct.std::__1::__compressed_pair_elem.1256" }
%"struct.std::__1::__compressed_pair_elem.1256" = type { %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"* }
%"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData" = type <{ %"class.v8::internal::PreparseData", i32, i8, i8, [2 x i8] }>
%"class.v8::internal::PreparseData" = type { %"class.v8::internal::TorqueGeneratedPreparseData" }
%"class.v8::internal::TorqueGeneratedPreparseData" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.v8::internal::Handle.1241" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr.48", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.678", %"class.std::__1::unique_ptr.699", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.709", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.792", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.805", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.815", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.827", %"struct.std::__1::atomic.203", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.902", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.945"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.954", i32, i8, i8, i32, i32, %"class.std::__1::vector.960", %"class.std::__1::vector.960", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.967", i64, %"class.std::__1::unordered_map.968", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.574", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.211", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1024", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1062", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1096", %"class.std::__1::vector.1100", %"class.std::__1::vector.1100", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic.42", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle.46", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle.46" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic", i64, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic.77", %"class.std::__1::vector.81", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.212", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic", i64, i8, %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.216", %"class.std::__1::vector.216", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.223", %"class.std::__1::unique_ptr.229", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.365", %"class.std::__1::unique_ptr.371", %"class.std::__1::unique_ptr.410", %"class.std::__1::unique_ptr.449", %"class.std::__1::unique_ptr.479", %"class.std::__1::unique_ptr.485", %"class.std::__1::unique_ptr.495", %"class.std::__1::unique_ptr.501", %"class.std::__1::unique_ptr.501", %"class.std::__1::unique_ptr.507", %"class.std::__1::unique_ptr.513", %"class.std::__1::unique_ptr.513", %"class.std::__1::unique_ptr.519", %"class.std::__1::unique_ptr.525", %"class.std::__1::shared_ptr.531", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.536", %"class.std::__1::unique_ptr.562", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.568", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.581", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.381", i8, [7 x i8], %"class.std::__1::unordered_map.587", %"class.std::__1::unordered_map.613", %"class.std::__1::unordered_map.587", %"class.std::__1::unordered_map.637", %"class.std::__1::vector.665", i8, %"class.std::__1::unique_ptr.672", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.54", %"class.std::__1::__compressed_pair.62", %"class.std::__1::__compressed_pair.67", %"class.std::__1::__compressed_pair.69", [4 x i8] }>
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56", %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.72", %"struct.std::__1::atomic.72", %"struct.std::__1::atomic.72" }
%"struct.std::__1::atomic.72" = type { %"struct.std::__1::__atomic_base.73" }
%"struct.std::__1::__atomic_base.73" = type { %"struct.std::__1::__atomic_base.74" }
%"struct.std::__1::__atomic_base.74" = type { %"struct.std::__1::__cxx_atomic_impl.75" }
%"struct.std::__1::__cxx_atomic_impl.75" = type { %"struct.std::__1::__cxx_atomic_base_impl.76" }
%"struct.std::__1::__cxx_atomic_base_impl.76" = type { i64 }
%"struct.std::__1::atomic.77" = type { %"struct.std::__1::__atomic_base.78" }
%"struct.std::__1::__atomic_base.78" = type { %"struct.std::__1::__cxx_atomic_impl.79" }
%"struct.std::__1::__cxx_atomic_impl.79" = type { %"struct.std::__1::__cxx_atomic_base_impl.80" }
%"struct.std::__1::__cxx_atomic_base_impl.80" = type { i32 }
%"class.std::__1::vector.81" = type { %"class.std::__1::__vector_base.82" }
%"class.std::__1::__vector_base.82" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.83" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.154" }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic"*, %"class.std::__1::unique_ptr.148" }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic", i64 }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.88", %"class.std::__1::vector.88", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.88" = type { %"class.std::__1::__vector_base.89" }
%"class.std::__1::__vector_base.89" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.90" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.95" }
%"class.std::__1::__hash_table.95" = type <{ %"class.std::__1::unique_ptr.96", %"class.std::__1::__compressed_pair.106", %"class.std::__1::__compressed_pair.111", %"class.std::__1::__compressed_pair.113", [4 x i8] }>
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98", %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"struct.std::__1::__hash_node_base.99"** }
%"struct.std::__1::__hash_node_base.99" = type { %"struct.std::__1::__hash_node_base.99"* }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.std::__1::__bucket_list_deallocator.101" }
%"class.std::__1::__bucket_list_deallocator.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.std::__1::__hash_node_base.99" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic", %"struct.std::__1::atomic.72", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set.129"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.137", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.72", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.72", %"struct.std::__1::atomic.118", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.118" = type { %"struct.std::__1::__atomic_base.119" }
%"struct.std::__1::__atomic_base.119" = type { %"struct.std::__1::__cxx_atomic_impl.120" }
%"struct.std::__1::__cxx_atomic_impl.120" = type { %"struct.std::__1::__cxx_atomic_base_impl.121" }
%"struct.std::__1::__cxx_atomic_base_impl.121" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.122" }
%"class.std::__1::vector.122" = type { %"class.std::__1::__vector_base.123" }
%"class.std::__1::__vector_base.123" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.124" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set.129" = type { %"class.std::__1::__tree.130" }
%"class.std::__1::__tree.130" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.131", %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::atomic.137" = type { %"struct.std::__1::__atomic_base.138" }
%"struct.std::__1::__atomic_base.138" = type { %"struct.std::__1::__cxx_atomic_impl.139" }
%"struct.std::__1::__cxx_atomic_impl.139" = type { %"struct.std::__1::__cxx_atomic_base_impl.140" }
%"struct.std::__1::__cxx_atomic_base_impl.140" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.141", i8, [7 x i8] }>
%"class.std::__1::vector.141" = type { %"class.std::__1::__vector_base.142" }
%"class.std::__1::__vector_base.142" = type { i64*, i64*, %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.154" = type { %"class.std::__1::__vector_base.155" }
%"class.std::__1::__vector_base.155" = type { %"struct.std::__1::pair.156"*, %"struct.std::__1::pair.156"*, %"class.std::__1::__compressed_pair.157" }
%"struct.std::__1::pair.156" = type { i32, i64 }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"struct.std::__1::pair.156"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic", i64, %"struct.std::__1::atomic" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic", i32, %"struct.std::__1::atomic", %"class.v8::base::Mutex", %"struct.std::__1::atomic" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.162" }
%"class.std::__1::unordered_map.162" = type { %"class.std::__1::__hash_table.163" }
%"class.std::__1::__hash_table.163" = type <{ %"class.std::__1::unique_ptr.164", %"class.std::__1::__compressed_pair.174", %"class.std::__1::__compressed_pair.179", %"class.std::__1::__compressed_pair.184", [4 x i8] }>
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166", %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"struct.std::__1::__hash_node_base.167"** }
%"struct.std::__1::__hash_node_base.167" = type { %"struct.std::__1::__hash_node_base.167"* }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.std::__1::__bucket_list_deallocator.169" }
%"class.std::__1::__bucket_list_deallocator.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"struct.std::__1::__hash_node_base.167" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.190", i64, i64, i8, i64, i64 }
%"class.std::__1::vector.190" = type { %"class.std::__1::__vector_base.191" }
%"class.std::__1::__vector_base.191" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.192" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1029", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1033", %"class.std::__1::unique_ptr.1039", %"class.std::__1::unique_ptr.525", %"class.std::__1::vector.1045", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1029" = type { %"struct.std::__1::__atomic_base.1030" }
%"struct.std::__1::__atomic_base.1030" = type { %"struct.std::__1::__cxx_atomic_impl.1031" }
%"struct.std::__1::__cxx_atomic_impl.1031" = type { %"struct.std::__1::__cxx_atomic_base_impl.1032" }
%"struct.std::__1::__cxx_atomic_base_impl.1032" = type { i32 }
%"class.std::__1::unique_ptr.1033" = type { %"class.std::__1::__compressed_pair.1034" }
%"class.std::__1::__compressed_pair.1034" = type { %"struct.std::__1::__compressed_pair_elem.1035" }
%"struct.std::__1::__compressed_pair_elem.1035" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.785" }
%"class.std::__1::vector.785" = type { %"class.std::__1::__vector_base.786" }
%"class.std::__1::__vector_base.786" = type { i64**, i64**, %"class.std::__1::__compressed_pair.787" }
%"class.std::__1::__compressed_pair.787" = type { %"struct.std::__1::__compressed_pair_elem.788" }
%"struct.std::__1::__compressed_pair_elem.788" = type { i64** }
%"class.std::__1::unique_ptr.1039" = type { %"class.std::__1::__compressed_pair.1040" }
%"class.std::__1::__compressed_pair.1040" = type { %"struct.std::__1::__compressed_pair_elem.1041" }
%"struct.std::__1::__compressed_pair_elem.1041" = type { %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.785", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1045" = type { %"class.std::__1::__vector_base.1046" }
%"class.std::__1::__vector_base.1046" = type { %"struct.std::__1::pair.1047"*, %"struct.std::__1::pair.1047"*, %"class.std::__1::__compressed_pair.1048" }
%"struct.std::__1::pair.1047" = type opaque
%"class.std::__1::__compressed_pair.1048" = type { %"struct.std::__1::__compressed_pair_elem.1049" }
%"struct.std::__1::__compressed_pair_elem.1049" = type { %"struct.std::__1::pair.1047"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.203", %"struct.std::__1::atomic.207", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.207" = type { %"struct.std::__1::__atomic_base.208" }
%"struct.std::__1::__atomic_base.208" = type { %"struct.std::__1::__cxx_atomic_impl.209" }
%"struct.std::__1::__cxx_atomic_impl.209" = type { %"struct.std::__1::__cxx_atomic_base_impl.210" }
%"struct.std::__1::__cxx_atomic_base_impl.210" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.211" }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.std::__1::atomic.212" = type { %"struct.std::__1::__atomic_base.213" }
%"struct.std::__1::__atomic_base.213" = type { %"struct.std::__1::__cxx_atomic_impl.214" }
%"struct.std::__1::__cxx_atomic_impl.214" = type { %"struct.std::__1::__cxx_atomic_base_impl.215" }
%"struct.std::__1::__cxx_atomic_base_impl.215" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.std::__1::vector.216" = type { %"class.std::__1::__vector_base.217" }
%"class.std::__1::__vector_base.217" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.218" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.223" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.271", %"class.std::__1::unique_ptr.277", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.331", %"class.std::__1::vector.331", %"class.std::__1::vector.331", %"class.std::__1::vector.338", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.232", %"class.std::__1::vector.233", %"class.std::__1::vector.240", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.232" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.233" = type { %"class.std::__1::__vector_base.234" }
%"class.std::__1::__vector_base.234" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.235" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.240" = type { %"class.std::__1::__vector_base.241" }
%"class.std::__1::__vector_base.241" = type { %"class.std::__1::unique_ptr.242"*, %"class.std::__1::unique_ptr.242"*, %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::unique_ptr.242" = type opaque
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"class.std::__1::unique_ptr.242"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.248", %"class.v8::internal::Worklist.250", %"class.v8::internal::Worklist.250", %"class.v8::internal::Worklist.250", %"class.v8::internal::Worklist.252", %"class.v8::internal::Worklist.254", %"class.v8::internal::Worklist.256", %"class.v8::internal::Worklist.258", %"class.v8::internal::Worklist.260", %"class.v8::internal::Worklist.262" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.248" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.250" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.252" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.254" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.256" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.258" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.260" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.262" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.264", i8, i64 }
%"class.std::__1::vector.264" = type { %"class.std::__1::__vector_base.265" }
%"class.std::__1::__vector_base.265" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.271" = type { %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.277" = type { %"class.std::__1::__compressed_pair.278" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.279" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.280" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.232"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.280" = type { %"class.std::__1::__hash_table.281" }
%"class.std::__1::__hash_table.281" = type <{ %"class.std::__1::unique_ptr.282", %"class.std::__1::__compressed_pair.292", %"class.std::__1::__compressed_pair.297", %"class.std::__1::__compressed_pair.300", [4 x i8] }>
%"class.std::__1::unique_ptr.282" = type { %"class.std::__1::__compressed_pair.283" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.284", %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.284" = type { %"struct.std::__1::__hash_node_base.285"** }
%"struct.std::__1::__hash_node_base.285" = type { %"struct.std::__1::__hash_node_base.285"* }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"class.std::__1::__bucket_list_deallocator.287" }
%"class.std::__1::__bucket_list_deallocator.287" = type { %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %"struct.std::__1::__hash_node_base.285" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.307" }
%"class.std::__1::unordered_map.307" = type { %"class.std::__1::__hash_table.308" }
%"class.std::__1::__hash_table.308" = type <{ %"class.std::__1::unique_ptr.309", %"class.std::__1::__compressed_pair.319", %"class.std::__1::__compressed_pair.324", %"class.std::__1::__compressed_pair.327", [4 x i8] }>
%"class.std::__1::unique_ptr.309" = type { %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311", %"struct.std::__1::__compressed_pair_elem.313" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"struct.std::__1::__hash_node_base.312"** }
%"struct.std::__1::__hash_node_base.312" = type { %"struct.std::__1::__hash_node_base.312"* }
%"struct.std::__1::__compressed_pair_elem.313" = type { %"class.std::__1::__bucket_list_deallocator.314" }
%"class.std::__1::__bucket_list_deallocator.314" = type { %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.320" = type { %"struct.std::__1::__hash_node_base.312" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.331" = type { %"class.std::__1::__vector_base.332" }
%"class.std::__1::__vector_base.332" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.338" = type { %"class.std::__1::__vector_base.339" }
%"class.std::__1::__vector_base.339" = type { %"struct.std::__1::pair.340"*, %"struct.std::__1::pair.340"*, %"class.std::__1::__compressed_pair.341" }
%"struct.std::__1::pair.340" = type opaque
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.342" }
%"struct.std::__1::__compressed_pair_elem.342" = type { %"struct.std::__1::pair.340"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.346", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.331"], [3 x %"class.std::__1::vector.331"], i8, %"struct.std::__1::atomic.203", [6 x i8], %"class.std::__1::vector.331", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.346" = type { %"class.std::__1::__compressed_pair.347" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.348" }
%"struct.std::__1::__compressed_pair_elem.348" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.356"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.331", %"class.std::__1::vector.331", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.356" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.359" = type { %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.365" = type { %"class.std::__1::__compressed_pair.366" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.367" }
%"struct.std::__1::__compressed_pair_elem.367" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.371" = type { %"class.std::__1::__compressed_pair.372" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.373" }
%"struct.std::__1::__compressed_pair_elem.373" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.381", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.374"], %"class.std::__1::unique_ptr.346" }
%"class.std::__1::vector.374" = type { %"class.std::__1::__vector_base.375" }
%"class.std::__1::__vector_base.375" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.410" = type { %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.412" }
%"struct.std::__1::__compressed_pair_elem.412" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.413", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.417", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.422" }
%"struct.std::__1::atomic.413" = type { %"struct.std::__1::__atomic_base.414" }
%"struct.std::__1::__atomic_base.414" = type { %"struct.std::__1::__cxx_atomic_impl.415" }
%"struct.std::__1::__cxx_atomic_impl.415" = type { %"struct.std::__1::__cxx_atomic_base_impl.416" }
%"struct.std::__1::__cxx_atomic_base_impl.416" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.417" = type { %"struct.std::__1::__atomic_base.418" }
%"struct.std::__1::__atomic_base.418" = type { %"struct.std::__1::__cxx_atomic_impl.419" }
%"struct.std::__1::__cxx_atomic_impl.419" = type { %"struct.std::__1::__cxx_atomic_base_impl.420" }
%"struct.std::__1::__cxx_atomic_base_impl.420" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.422" = type { %"class.std::__1::__hash_table.423" }
%"class.std::__1::__hash_table.423" = type <{ %"class.std::__1::unique_ptr.424", %"class.std::__1::__compressed_pair.434", %"class.std::__1::__compressed_pair.439", %"class.std::__1::__compressed_pair.442", [4 x i8] }>
%"class.std::__1::unique_ptr.424" = type { %"class.std::__1::__compressed_pair.425" }
%"class.std::__1::__compressed_pair.425" = type { %"struct.std::__1::__compressed_pair_elem.426", %"struct.std::__1::__compressed_pair_elem.428" }
%"struct.std::__1::__compressed_pair_elem.426" = type { %"struct.std::__1::__hash_node_base.427"** }
%"struct.std::__1::__hash_node_base.427" = type { %"struct.std::__1::__hash_node_base.427"* }
%"struct.std::__1::__compressed_pair_elem.428" = type { %"class.std::__1::__bucket_list_deallocator.429" }
%"class.std::__1::__bucket_list_deallocator.429" = type { %"class.std::__1::__compressed_pair.430" }
%"class.std::__1::__compressed_pair.430" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.434" = type { %"struct.std::__1::__compressed_pair_elem.435" }
%"struct.std::__1::__compressed_pair_elem.435" = type { %"struct.std::__1::__hash_node_base.427" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.449" = type { %"class.std::__1::__compressed_pair.450" }
%"class.std::__1::__compressed_pair.450" = type { %"struct.std::__1::__compressed_pair_elem.451" }
%"struct.std::__1::__compressed_pair_elem.451" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.346", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic", %"struct.std::__1::atomic.203", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.452", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.452" = type { %"class.std::__1::__hash_table.453" }
%"class.std::__1::__hash_table.453" = type <{ %"class.std::__1::unique_ptr.454", %"class.std::__1::__compressed_pair.464", %"class.std::__1::__compressed_pair.469", %"class.std::__1::__compressed_pair.472", [4 x i8] }>
%"class.std::__1::unique_ptr.454" = type { %"class.std::__1::__compressed_pair.455" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.456", %"struct.std::__1::__compressed_pair_elem.458" }
%"struct.std::__1::__compressed_pair_elem.456" = type { %"struct.std::__1::__hash_node_base.457"** }
%"struct.std::__1::__hash_node_base.457" = type { %"struct.std::__1::__hash_node_base.457"* }
%"struct.std::__1::__compressed_pair_elem.458" = type { %"class.std::__1::__bucket_list_deallocator.459" }
%"class.std::__1::__bucket_list_deallocator.459" = type { %"class.std::__1::__compressed_pair.460" }
%"class.std::__1::__compressed_pair.460" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.464" = type { %"struct.std::__1::__compressed_pair_elem.465" }
%"struct.std::__1::__compressed_pair_elem.465" = type { %"struct.std::__1::__hash_node_base.457" }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.479" = type { %"class.std::__1::__compressed_pair.480" }
%"class.std::__1::__compressed_pair.480" = type { %"struct.std::__1::__compressed_pair_elem.481" }
%"struct.std::__1::__compressed_pair_elem.481" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.485" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.488" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.488" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"class.std::__1::unique_ptr.495" = type { %"class.std::__1::__compressed_pair.496" }
%"class.std::__1::__compressed_pair.496" = type { %"struct.std::__1::__compressed_pair_elem.497" }
%"struct.std::__1::__compressed_pair_elem.497" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.501" = type { %"class.std::__1::__compressed_pair.502" }
%"class.std::__1::__compressed_pair.502" = type { %"struct.std::__1::__compressed_pair_elem.503" }
%"struct.std::__1::__compressed_pair_elem.503" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.507" = type { %"class.std::__1::__compressed_pair.508" }
%"class.std::__1::__compressed_pair.508" = type { %"struct.std::__1::__compressed_pair_elem.509" }
%"struct.std::__1::__compressed_pair_elem.509" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.513" = type { %"class.std::__1::__compressed_pair.514" }
%"class.std::__1::__compressed_pair.514" = type { %"struct.std::__1::__compressed_pair_elem.515" }
%"struct.std::__1::__compressed_pair_elem.515" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.519" = type { %"class.std::__1::__compressed_pair.520" }
%"class.std::__1::__compressed_pair.520" = type { %"struct.std::__1::__compressed_pair_elem.521" }
%"struct.std::__1::__compressed_pair_elem.521" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.525" = type { %"class.std::__1::__compressed_pair.526" }
%"class.std::__1::__compressed_pair.526" = type { %"struct.std::__1::__compressed_pair_elem.527" }
%"struct.std::__1::__compressed_pair_elem.527" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.531" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.532", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.14", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.532" = type { %"struct.std::__1::__atomic_base.533" }
%"struct.std::__1::__atomic_base.533" = type { %"struct.std::__1::__cxx_atomic_impl.534" }
%"struct.std::__1::__cxx_atomic_impl.534" = type { %"struct.std::__1::__cxx_atomic_base_impl.535" }
%"struct.std::__1::__cxx_atomic_base_impl.535" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.536" = type { %"class.std::__1::__hash_table.537" }
%"class.std::__1::__hash_table.537" = type <{ %"class.std::__1::unique_ptr.538", %"class.std::__1::__compressed_pair.548", %"class.std::__1::__compressed_pair.553", %"class.std::__1::__compressed_pair.556", [4 x i8] }>
%"class.std::__1::unique_ptr.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.540", %"struct.std::__1::__compressed_pair_elem.542" }
%"struct.std::__1::__compressed_pair_elem.540" = type { %"struct.std::__1::__hash_node_base.541"** }
%"struct.std::__1::__hash_node_base.541" = type { %"struct.std::__1::__hash_node_base.541"* }
%"struct.std::__1::__compressed_pair_elem.542" = type { %"class.std::__1::__bucket_list_deallocator.543" }
%"class.std::__1::__bucket_list_deallocator.543" = type { %"class.std::__1::__compressed_pair.544" }
%"class.std::__1::__compressed_pair.544" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem.549" }
%"struct.std::__1::__compressed_pair_elem.549" = type { %"struct.std::__1::__hash_node_base.541" }
%"class.std::__1::__compressed_pair.553" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.562" = type { %"class.std::__1::__compressed_pair.563" }
%"class.std::__1::__compressed_pair.563" = type { %"struct.std::__1::__compressed_pair_elem.564" }
%"struct.std::__1::__compressed_pair_elem.564" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.568" = type { %"class.std::__1::__compressed_pair.569" }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.570" }
%"struct.std::__1::__compressed_pair_elem.570" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.574", %"class.std::__1::vector.574" }
%"class.std::__1::unique_ptr.581" = type { %"class.std::__1::__compressed_pair.582" }
%"class.std::__1::__compressed_pair.582" = type { %"struct.std::__1::__compressed_pair_elem.583" }
%"struct.std::__1::__compressed_pair_elem.583" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.std::__1::unordered_set.381" = type { %"class.std::__1::__hash_table.382" }
%"class.std::__1::__hash_table.382" = type <{ %"class.std::__1::unique_ptr.383", %"class.std::__1::__compressed_pair.393", %"class.std::__1::__compressed_pair.398", %"class.std::__1::__compressed_pair.402", [4 x i8] }>
%"class.std::__1::unique_ptr.383" = type { %"class.std::__1::__compressed_pair.384" }
%"class.std::__1::__compressed_pair.384" = type { %"struct.std::__1::__compressed_pair_elem.385", %"struct.std::__1::__compressed_pair_elem.387" }
%"struct.std::__1::__compressed_pair_elem.385" = type { %"struct.std::__1::__hash_node_base.386"** }
%"struct.std::__1::__hash_node_base.386" = type { %"struct.std::__1::__hash_node_base.386"* }
%"struct.std::__1::__compressed_pair_elem.387" = type { %"class.std::__1::__bucket_list_deallocator.388" }
%"class.std::__1::__bucket_list_deallocator.388" = type { %"class.std::__1::__compressed_pair.389" }
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.393" = type { %"struct.std::__1::__compressed_pair_elem.394" }
%"struct.std::__1::__compressed_pair_elem.394" = type { %"struct.std::__1::__hash_node_base.386" }
%"class.std::__1::__compressed_pair.398" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.402" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.613" = type { %"class.std::__1::__hash_table.614" }
%"class.std::__1::__hash_table.614" = type <{ %"class.std::__1::unique_ptr.615", %"class.std::__1::__compressed_pair.625", %"class.std::__1::__compressed_pair.630", %"class.std::__1::__compressed_pair.633", [4 x i8] }>
%"class.std::__1::unique_ptr.615" = type { %"class.std::__1::__compressed_pair.616" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617", %"struct.std::__1::__compressed_pair_elem.619" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"struct.std::__1::__hash_node_base.618"** }
%"struct.std::__1::__hash_node_base.618" = type { %"struct.std::__1::__hash_node_base.618"* }
%"struct.std::__1::__compressed_pair_elem.619" = type { %"class.std::__1::__bucket_list_deallocator.620" }
%"class.std::__1::__bucket_list_deallocator.620" = type { %"class.std::__1::__compressed_pair.621" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"struct.std::__1::__hash_node_base.618" }
%"class.std::__1::__compressed_pair.630" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.633" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.587" = type { %"class.std::__1::__hash_table.588" }
%"class.std::__1::__hash_table.588" = type <{ %"class.std::__1::unique_ptr.589", %"class.std::__1::__compressed_pair.599", %"class.std::__1::__compressed_pair.604", %"class.std::__1::__compressed_pair.607", [4 x i8] }>
%"class.std::__1::unique_ptr.589" = type { %"class.std::__1::__compressed_pair.590" }
%"class.std::__1::__compressed_pair.590" = type { %"struct.std::__1::__compressed_pair_elem.591", %"struct.std::__1::__compressed_pair_elem.593" }
%"struct.std::__1::__compressed_pair_elem.591" = type { %"struct.std::__1::__hash_node_base.592"** }
%"struct.std::__1::__hash_node_base.592" = type { %"struct.std::__1::__hash_node_base.592"* }
%"struct.std::__1::__compressed_pair_elem.593" = type { %"class.std::__1::__bucket_list_deallocator.594" }
%"class.std::__1::__bucket_list_deallocator.594" = type { %"class.std::__1::__compressed_pair.595" }
%"class.std::__1::__compressed_pair.595" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.600" }
%"struct.std::__1::__compressed_pair_elem.600" = type { %"struct.std::__1::__hash_node_base.592" }
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.637" = type { %"class.std::__1::__hash_table.638" }
%"class.std::__1::__hash_table.638" = type <{ %"class.std::__1::unique_ptr.639", %"class.std::__1::__compressed_pair.649", %"class.std::__1::__compressed_pair.654", %"class.std::__1::__compressed_pair.659", [4 x i8] }>
%"class.std::__1::unique_ptr.639" = type { %"class.std::__1::__compressed_pair.640" }
%"class.std::__1::__compressed_pair.640" = type { %"struct.std::__1::__compressed_pair_elem.641", %"struct.std::__1::__compressed_pair_elem.643" }
%"struct.std::__1::__compressed_pair_elem.641" = type { %"struct.std::__1::__hash_node_base.642"** }
%"struct.std::__1::__hash_node_base.642" = type { %"struct.std::__1::__hash_node_base.642"* }
%"struct.std::__1::__compressed_pair_elem.643" = type { %"class.std::__1::__bucket_list_deallocator.644" }
%"class.std::__1::__bucket_list_deallocator.644" = type { %"class.std::__1::__compressed_pair.645" }
%"class.std::__1::__compressed_pair.645" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.649" = type { %"struct.std::__1::__compressed_pair_elem.650" }
%"struct.std::__1::__compressed_pair_elem.650" = type { %"struct.std::__1::__hash_node_base.642" }
%"class.std::__1::__compressed_pair.654" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.659" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.665" = type { %"class.std::__1::__vector_base.666" }
%"class.std::__1::__vector_base.666" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.667" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.672" = type { %"class.std::__1::__compressed_pair.673" }
%"class.std::__1::__compressed_pair.673" = type { %"struct.std::__1::__compressed_pair_elem.674" }
%"struct.std::__1::__compressed_pair_elem.674" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.574" }
%"class.std::__1::shared_ptr.678" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.190", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.679", %"class.std::__1::unique_ptr.693" }
%"class.std::__1::unique_ptr.679" = type { %"class.std::__1::__compressed_pair.680" }
%"class.std::__1::__compressed_pair.680" = type { %"struct.std::__1::__compressed_pair_elem.681" }
%"struct.std::__1::__compressed_pair_elem.681" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.682" }
%"class.std::__1::vector.682" = type { %"class.std::__1::__vector_base.683" }
%"class.std::__1::__vector_base.683" = type { %"class.std::__1::unique_ptr.684"*, %"class.std::__1::unique_ptr.684"*, %"class.std::__1::__compressed_pair.685" }
%"class.std::__1::unique_ptr.684" = type { %"class.std::__1::__compressed_pair.1286" }
%"class.std::__1::__compressed_pair.1286" = type { %"struct.std::__1::__compressed_pair_elem.1287" }
%"struct.std::__1::__compressed_pair_elem.1287" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.685" = type { %"struct.std::__1::__compressed_pair_elem.686" }
%"struct.std::__1::__compressed_pair_elem.686" = type { %"class.std::__1::unique_ptr.684"* }
%"class.std::__1::unique_ptr.693" = type { %"class.std::__1::__compressed_pair.694" }
%"class.std::__1::__compressed_pair.694" = type { %"struct.std::__1::__compressed_pair_elem.695" }
%"struct.std::__1::__compressed_pair_elem.695" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.702", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.702" = type { %"struct.std::__1::__atomic_base.703" }
%"struct.std::__1::__atomic_base.703" = type { %"struct.std::__1::__cxx_atomic_impl.704" }
%"struct.std::__1::__cxx_atomic_impl.704" = type { %"struct.std::__1::__cxx_atomic_base_impl.705" }
%"struct.std::__1::__cxx_atomic_base_impl.705" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.709" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.41", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.41" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.710", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.710" = type { %"class.std::__1::__vector_base.711" }
%"class.std::__1::__vector_base.711" = type { %"class.std::__1::unique_ptr.712"*, %"class.std::__1::unique_ptr.712"*, %"class.std::__1::__compressed_pair.713" }
%"class.std::__1::unique_ptr.712" = type opaque
%"class.std::__1::__compressed_pair.713" = type { %"struct.std::__1::__compressed_pair_elem.714" }
%"struct.std::__1::__compressed_pair_elem.714" = type { %"class.std::__1::unique_ptr.712"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon.718 }
%union.anon.718 = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1107", %"class.std::__1::unique_ptr.1113", %"struct.std::__1::atomic.203", %"class.std::__1::unique_ptr.1119", %"class.std::__1::unique_ptr.1125", %"class.std::__1::unique_ptr.1131", %"class.std::__1::unique_ptr.1137", %"class.std::__1::unique_ptr.1143", %"class.std::__1::set.1149", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1107" = type { %"class.std::__1::__compressed_pair.1108" }
%"class.std::__1::__compressed_pair.1108" = type { %"struct.std::__1::__compressed_pair_elem.1109" }
%"struct.std::__1::__compressed_pair_elem.1109" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.1113" = type { %"class.std::__1::__compressed_pair.1114" }
%"class.std::__1::__compressed_pair.1114" = type { %"struct.std::__1::__compressed_pair_elem.1115" }
%"struct.std::__1::__compressed_pair_elem.1115" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.1119" = type { %"class.std::__1::__compressed_pair.1120" }
%"class.std::__1::__compressed_pair.1120" = type { %"struct.std::__1::__compressed_pair_elem.1121" }
%"struct.std::__1::__compressed_pair_elem.1121" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.1125" = type { %"class.std::__1::__compressed_pair.1126" }
%"class.std::__1::__compressed_pair.1126" = type { %"struct.std::__1::__compressed_pair_elem.1127" }
%"struct.std::__1::__compressed_pair_elem.1127" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.1131" = type { %"class.std::__1::__compressed_pair.1132" }
%"class.std::__1::__compressed_pair.1132" = type { %"struct.std::__1::__compressed_pair_elem.1133" }
%"struct.std::__1::__compressed_pair_elem.1133" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.1137" = type { %"class.std::__1::__compressed_pair.1138" }
%"class.std::__1::__compressed_pair.1138" = type { %"struct.std::__1::__compressed_pair_elem.1139" }
%"struct.std::__1::__compressed_pair_elem.1139" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.1143" = type { %"class.std::__1::__compressed_pair.1144" }
%"class.std::__1::__compressed_pair.1144" = type { %"struct.std::__1::__compressed_pair_elem.1145" }
%"struct.std::__1::__compressed_pair_elem.1145" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.1149" = type { %"class.std::__1::__tree.1150" }
%"class.std::__1::__tree.1150" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1151", %"class.std::__1::__compressed_pair.1155" }
%"class.std::__1::__compressed_pair.1151" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::__compressed_pair.1155" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.720" }
%"class.v8::internal::TaggedImpl.720" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.719" }
%"class.v8::internal::TaggedImpl.719" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.721", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.721" = type { %"class.std::__1::__compressed_pair.722" }
%"class.std::__1::__compressed_pair.722" = type { %"struct.std::__1::__compressed_pair_elem.723" }
%"struct.std::__1::__compressed_pair_elem.723" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.727", %"class.v8::internal::DetachableVector.728", %"class.v8::internal::DetachableVector.727", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.728" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.727" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.729", %"class.std::__1::vector.735", %"class.std::__1::unique_ptr.742", %"class.std::__1::vector.749", %"class.std::__1::unique_ptr.756", i64, %"class.std::__1::vector.762", %"class.std::__1::vector.770", %"class.std::__1::vector.778", i8, i8, i32 }
%"class.std::__1::unique_ptr.729" = type { %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.735" = type { %"class.std::__1::__vector_base.736" }
%"class.std::__1::__vector_base.736" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.737" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.742" = type { %"class.std::__1::__compressed_pair.743" }
%"class.std::__1::__compressed_pair.743" = type { %"struct.std::__1::__compressed_pair_elem.744" }
%"struct.std::__1::__compressed_pair_elem.744" = type { %"class.v8::internal::GlobalHandles::NodeSpace.745"* }
%"class.v8::internal::GlobalHandles::NodeSpace.745" = type opaque
%"class.std::__1::vector.749" = type { %"class.std::__1::__vector_base.750" }
%"class.std::__1::__vector_base.750" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.751" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.762" = type { %"class.std::__1::__vector_base.763" }
%"class.std::__1::__vector_base.763" = type { %"struct.std::__1::pair.764"*, %"struct.std::__1::pair.764"*, %"class.std::__1::__compressed_pair.765" }
%"struct.std::__1::pair.764" = type opaque
%"class.std::__1::__compressed_pair.765" = type { %"struct.std::__1::__compressed_pair_elem.766" }
%"struct.std::__1::__compressed_pair_elem.766" = type { %"struct.std::__1::pair.764"* }
%"class.std::__1::vector.770" = type { %"class.std::__1::__vector_base.771" }
%"class.std::__1::__vector_base.771" = type { %"struct.std::__1::pair.772"*, %"struct.std::__1::pair.772"*, %"class.std::__1::__compressed_pair.773" }
%"struct.std::__1::pair.772" = type opaque
%"class.std::__1::__compressed_pair.773" = type { %"struct.std::__1::__compressed_pair_elem.774" }
%"struct.std::__1::__compressed_pair_elem.774" = type { %"struct.std::__1::pair.772"* }
%"class.std::__1::vector.778" = type { %"class.std::__1::__vector_base.779" }
%"class.std::__1::__vector_base.779" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.780" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.785", %"class.std::__1::vector.792" }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.799" }
%"class.std::__1::unique_ptr.799" = type { %"class.std::__1::__compressed_pair.800" }
%"class.std::__1::__compressed_pair.800" = type { %"struct.std::__1::__compressed_pair_elem.801" }
%"struct.std::__1::__compressed_pair_elem.801" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.792" = type { %"class.std::__1::__vector_base.793" }
%"class.std::__1::__vector_base.793" = type { i32*, i32*, %"class.std::__1::__compressed_pair.794" }
%"class.std::__1::__compressed_pair.794" = type { %"struct.std::__1::__compressed_pair_elem.795" }
%"struct.std::__1::__compressed_pair_elem.795" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"struct.std::__1::atomic.805" = type { %"struct.std::__1::__atomic_base.806" }
%"struct.std::__1::__atomic_base.806" = type { %"struct.std::__1::__cxx_atomic_impl.807" }
%"struct.std::__1::__cxx_atomic_impl.807" = type { %"struct.std::__1::__cxx_atomic_base_impl.808" }
%"struct.std::__1::__cxx_atomic_base_impl.808" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.815" = type { %"struct.std::__1::__atomic_base.816" }
%"struct.std::__1::__atomic_base.816" = type { %"struct.std::__1::__cxx_atomic_impl.817" }
%"struct.std::__1::__cxx_atomic_impl.817" = type { %"struct.std::__1::__cxx_atomic_base_impl.818" }
%"struct.std::__1::__cxx_atomic_base_impl.818" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.820" }
%"class.std::__1::__compressed_pair.820" = type { %"struct.std::__1::__compressed_pair_elem.821" }
%"struct.std::__1::__compressed_pair_elem.821" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.822 }
%union.anon.822 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.827" = type { %"class.std::__1::__hash_table.828" }
%"class.std::__1::__hash_table.828" = type <{ %"class.std::__1::unique_ptr.829", %"class.std::__1::__compressed_pair.839", %"class.std::__1::__compressed_pair.844", %"class.std::__1::__compressed_pair.847", [4 x i8] }>
%"class.std::__1::unique_ptr.829" = type { %"class.std::__1::__compressed_pair.830" }
%"class.std::__1::__compressed_pair.830" = type { %"struct.std::__1::__compressed_pair_elem.831", %"struct.std::__1::__compressed_pair_elem.833" }
%"struct.std::__1::__compressed_pair_elem.831" = type { %"struct.std::__1::__hash_node_base.832"** }
%"struct.std::__1::__hash_node_base.832" = type { %"struct.std::__1::__hash_node_base.832"* }
%"struct.std::__1::__compressed_pair_elem.833" = type { %"class.std::__1::__bucket_list_deallocator.834" }
%"class.std::__1::__bucket_list_deallocator.834" = type { %"class.std::__1::__compressed_pair.835" }
%"class.std::__1::__compressed_pair.835" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.839" = type { %"struct.std::__1::__compressed_pair_elem.840" }
%"struct.std::__1::__compressed_pair_elem.840" = type { %"struct.std::__1::__hash_node_base.832" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.847" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::atomic.203" = type { %"struct.std::__1::__atomic_base.204" }
%"struct.std::__1::__atomic_base.204" = type { %"struct.std::__1::__cxx_atomic_impl.205" }
%"struct.std::__1::__cxx_atomic_impl.205" = type { %"struct.std::__1::__cxx_atomic_base_impl.206" }
%"struct.std::__1::__cxx_atomic_base_impl.206" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.853", %"class.v8::internal::Handle.859", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.860", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.853" = type { %"class.std::__1::__compressed_pair.854" }
%"class.std::__1::__compressed_pair.854" = type { %"struct.std::__1::__compressed_pair_elem.855" }
%"struct.std::__1::__compressed_pair_elem.855" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.859" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.860" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.861", %"class.std::__1::vector.867", %"class.std::__1::unique_ptr.875", %"class.std::__1::unique_ptr.881", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.887", %"class.std::__1::vector.893", %"struct.std::__1::pair.901" }
%"class.std::__1::unique_ptr.861" = type { %"class.std::__1::__compressed_pair.862" }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.863" }
%"struct.std::__1::__compressed_pair_elem.863" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.867" = type { %"class.std::__1::__vector_base.868" }
%"class.std::__1::__vector_base.868" = type { %"class.std::__1::unique_ptr.869"*, %"class.std::__1::unique_ptr.869"*, %"class.std::__1::__compressed_pair.870" }
%"class.std::__1::unique_ptr.869" = type opaque
%"class.std::__1::__compressed_pair.870" = type { %"struct.std::__1::__compressed_pair_elem.871" }
%"struct.std::__1::__compressed_pair_elem.871" = type { %"class.std::__1::unique_ptr.869"* }
%"class.std::__1::unique_ptr.875" = type { %"class.std::__1::__compressed_pair.876" }
%"class.std::__1::__compressed_pair.876" = type { %"struct.std::__1::__compressed_pair_elem.877" }
%"struct.std::__1::__compressed_pair_elem.877" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.881" = type { %"class.std::__1::__compressed_pair.882" }
%"class.std::__1::__compressed_pair.882" = type { %"struct.std::__1::__compressed_pair_elem.883" }
%"struct.std::__1::__compressed_pair_elem.883" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.887" = type { %"class.std::__1::__compressed_pair.888" }
%"class.std::__1::__compressed_pair.888" = type { %"struct.std::__1::__compressed_pair_elem.889" }
%"struct.std::__1::__compressed_pair_elem.889" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.893" = type { %"class.std::__1::__vector_base.894" }
%"class.std::__1::__vector_base.894" = type { %"struct.std::__1::pair.895"*, %"struct.std::__1::pair.895"*, %"class.std::__1::__compressed_pair.896" }
%"struct.std::__1::pair.895" = type opaque
%"class.std::__1::__compressed_pair.896" = type { %"struct.std::__1::__compressed_pair_elem.897" }
%"struct.std::__1::__compressed_pair_elem.897" = type { %"struct.std::__1::pair.895"* }
%"struct.std::__1::pair.901" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.47"*, i16, i8*)*, i8* }
%"class.v8::Local.47" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.902" = type { %"class.std::__1::__compressed_pair.903" }
%"class.std::__1::__compressed_pair.903" = type { %"struct.std::__1::__compressed_pair_elem.904" }
%"struct.std::__1::__compressed_pair_elem.904" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.905", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.905" = type { %"class.std::__1::__hash_table.906" }
%"class.std::__1::__hash_table.906" = type <{ %"class.std::__1::unique_ptr.907", %"class.std::__1::__compressed_pair.917", %"class.std::__1::__compressed_pair.922", %"class.std::__1::__compressed_pair.926", [4 x i8] }>
%"class.std::__1::unique_ptr.907" = type { %"class.std::__1::__compressed_pair.908" }
%"class.std::__1::__compressed_pair.908" = type { %"struct.std::__1::__compressed_pair_elem.909", %"struct.std::__1::__compressed_pair_elem.911" }
%"struct.std::__1::__compressed_pair_elem.909" = type { %"struct.std::__1::__hash_node_base.910"** }
%"struct.std::__1::__hash_node_base.910" = type { %"struct.std::__1::__hash_node_base.910"* }
%"struct.std::__1::__compressed_pair_elem.911" = type { %"class.std::__1::__bucket_list_deallocator.912" }
%"class.std::__1::__bucket_list_deallocator.912" = type { %"class.std::__1::__compressed_pair.913" }
%"class.std::__1::__compressed_pair.913" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.917" = type { %"struct.std::__1::__compressed_pair_elem.918" }
%"struct.std::__1::__compressed_pair_elem.918" = type { %"struct.std::__1::__hash_node_base.910" }
%"class.std::__1::__compressed_pair.922" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.v8::internal::AstStringConstants" = type { %"class.v8::internal::Zone", %"class.v8::base::TemplateHashMapImpl.39", i64, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"* }
%"class.v8::base::TemplateHashMapImpl.39" = type { %"struct.v8::base::TemplateHashMapImpl<const v8::internal::AstRawString *, v8::base::NoHashMapValue, v8::internal::AstRawStringMapMatcher, v8::base::DefaultAllocationPolicy>::Impl" }
%"struct.v8::base::TemplateHashMapImpl<const v8::internal::AstRawString *, v8::base::NoHashMapValue, v8::internal::AstRawStringMapMatcher, v8::base::DefaultAllocationPolicy>::Impl" = type { %"struct.v8::base::TemplateHashMapEntry.40"*, i32, i32 }
%"struct.v8::base::TemplateHashMapEntry.40" = type <{ %union.anon.1283, i32, [4 x i8] }>
%union.anon.1283 = type { %"class.v8::internal::AstRawString"* }
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.940" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.934"**, %"struct.std::__1::pair.934"**, %"struct.std::__1::pair.934"**, %"class.std::__1::__compressed_pair.935" }
%"struct.std::__1::pair.934" = type opaque
%"class.std::__1::__compressed_pair.935" = type { %"struct.std::__1::__compressed_pair_elem.936" }
%"struct.std::__1::__compressed_pair_elem.936" = type { %"struct.std::__1::pair.934"** }
%"class.std::__1::__compressed_pair.940" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.945" = type { %"class.std::__1::__vector_base.946" }
%"class.std::__1::__vector_base.946" = type { %"class.v8::internal::Handle.947"*, %"class.v8::internal::Handle.947"*, %"class.std::__1::__compressed_pair.948" }
%"class.v8::internal::Handle.947" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.948" = type { %"struct.std::__1::__compressed_pair_elem.949" }
%"struct.std::__1::__compressed_pair_elem.949" = type { %"class.v8::internal::Handle.947"* }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector.953", [128 x i8] }
%"class.v8::internal::Vector.953" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.810", i32, %"class.v8::Local.47" }
%"class.v8::Local.810" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.954" = type { %"class.std::__1::__compressed_pair.955" }
%"class.std::__1::__compressed_pair.955" = type { %"struct.std::__1::__compressed_pair_elem.956" }
%"struct.std::__1::__compressed_pair_elem.956" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.960" = type { %"class.std::__1::__vector_base.961" }
%"class.std::__1::__vector_base.961" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.962" }
%"class.std::__1::__compressed_pair.962" = type { %"struct.std::__1::__compressed_pair_elem.963" }
%"struct.std::__1::__compressed_pair_elem.963" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.967" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.968" = type { %"class.std::__1::__hash_table.969" }
%"class.std::__1::__hash_table.969" = type <{ %"class.std::__1::unique_ptr.970", %"class.std::__1::__compressed_pair.980", %"class.std::__1::__compressed_pair.985", %"class.std::__1::__compressed_pair.988", [4 x i8] }>
%"class.std::__1::unique_ptr.970" = type { %"class.std::__1::__compressed_pair.971" }
%"class.std::__1::__compressed_pair.971" = type { %"struct.std::__1::__compressed_pair_elem.972", %"struct.std::__1::__compressed_pair_elem.974" }
%"struct.std::__1::__compressed_pair_elem.972" = type { %"struct.std::__1::__hash_node_base.973"** }
%"struct.std::__1::__hash_node_base.973" = type { %"struct.std::__1::__hash_node_base.973"* }
%"struct.std::__1::__compressed_pair_elem.974" = type { %"class.std::__1::__bucket_list_deallocator.975" }
%"class.std::__1::__bucket_list_deallocator.975" = type { %"class.std::__1::__compressed_pair.976" }
%"class.std::__1::__compressed_pair.976" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.980" = type { %"struct.std::__1::__compressed_pair_elem.981" }
%"struct.std::__1::__compressed_pair_elem.981" = type { %"struct.std::__1::__hash_node_base.973" }
%"class.std::__1::__compressed_pair.985" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.988" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.574" = type { %"class.std::__1::__vector_base.575" }
%"class.std::__1::__vector_base.575" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.576" }
%"class.std::__1::__compressed_pair.576" = type { %"struct.std::__1::__compressed_pair_elem.577" }
%"struct.std::__1::__compressed_pair_elem.577" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.211" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.992", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1021", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1022", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.992" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1017, %union.anon.1019, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1017 = type { i64 }
%union.anon.1019 = type { i64 }
%"class.std::__1::weak_ptr.1021" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1022" = type { %"class.v8::PersistentBase.1023" }
%"class.v8::PersistentBase.1023" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.993", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.993" = type { %"class.std::__1::__hash_table.994" }
%"class.std::__1::__hash_table.994" = type <{ %"class.std::__1::unique_ptr.995", %"class.std::__1::__compressed_pair.1005", %"class.std::__1::__compressed_pair.1010", %"class.std::__1::__compressed_pair.1013", [4 x i8] }>
%"class.std::__1::unique_ptr.995" = type { %"class.std::__1::__compressed_pair.996" }
%"class.std::__1::__compressed_pair.996" = type { %"struct.std::__1::__compressed_pair_elem.997", %"struct.std::__1::__compressed_pair_elem.999" }
%"struct.std::__1::__compressed_pair_elem.997" = type { %"struct.std::__1::__hash_node_base.998"** }
%"struct.std::__1::__hash_node_base.998" = type { %"struct.std::__1::__hash_node_base.998"* }
%"struct.std::__1::__compressed_pair_elem.999" = type { %"class.std::__1::__bucket_list_deallocator.1000" }
%"class.std::__1::__bucket_list_deallocator.1000" = type { %"class.std::__1::__compressed_pair.1001" }
%"class.std::__1::__compressed_pair.1001" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.1005" = type { %"struct.std::__1::__compressed_pair_elem.1006" }
%"struct.std::__1::__compressed_pair_elem.1006" = type { %"struct.std::__1::__hash_node_base.998" }
%"class.std::__1::__compressed_pair.1010" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.1013" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1024" = type { %"class.std::__1::__compressed_pair.1025" }
%"class.std::__1::__compressed_pair.1025" = type { %"struct.std::__1::__compressed_pair_elem.1026" }
%"struct.std::__1::__compressed_pair_elem.1026" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1053", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.std::__1::unique_ptr.1053" = type { %"class.std::__1::__compressed_pair.1054" }
%"class.std::__1::__compressed_pair.1054" = type { %"struct.std::__1::__compressed_pair_elem.1055" }
%"struct.std::__1::__compressed_pair_elem.1055" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1062" = type { %"class.std::__1::__compressed_pair.1063" }
%"class.std::__1::__compressed_pair.1063" = type { %"struct.std::__1::__compressed_pair_elem.1064" }
%"struct.std::__1::__compressed_pair_elem.1064" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.811", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.811" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1070" }
%"class.std::__1::unordered_map.1070" = type { %"class.std::__1::__hash_table.1071" }
%"class.std::__1::__hash_table.1071" = type <{ %"class.std::__1::unique_ptr.1072", %"class.std::__1::__compressed_pair.1082", %"class.std::__1::__compressed_pair.1087", %"class.std::__1::__compressed_pair.1090", [4 x i8] }>
%"class.std::__1::unique_ptr.1072" = type { %"class.std::__1::__compressed_pair.1073" }
%"class.std::__1::__compressed_pair.1073" = type { %"struct.std::__1::__compressed_pair_elem.1074", %"struct.std::__1::__compressed_pair_elem.1076" }
%"struct.std::__1::__compressed_pair_elem.1074" = type { %"struct.std::__1::__hash_node_base.1075"** }
%"struct.std::__1::__hash_node_base.1075" = type { %"struct.std::__1::__hash_node_base.1075"* }
%"struct.std::__1::__compressed_pair_elem.1076" = type { %"class.std::__1::__bucket_list_deallocator.1077" }
%"class.std::__1::__bucket_list_deallocator.1077" = type { %"class.std::__1::__compressed_pair.1078" }
%"class.std::__1::__compressed_pair.1078" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.1082" = type { %"struct.std::__1::__compressed_pair_elem.1083" }
%"struct.std::__1::__compressed_pair_elem.1083" = type { %"struct.std::__1::__hash_node_base.1075" }
%"class.std::__1::__compressed_pair.1087" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.1090" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::atomic.1096" = type { %"struct.std::__1::__atomic_base.1097" }
%"struct.std::__1::__atomic_base.1097" = type { %"struct.std::__1::__cxx_atomic_impl.1098" }
%"struct.std::__1::__cxx_atomic_impl.1098" = type { %"struct.std::__1::__cxx_atomic_base_impl.1099" }
%"struct.std::__1::__cxx_atomic_base_impl.1099" = type { %"class.std::__1::vector.1100"* }
%"class.std::__1::vector.1100" = type { %"class.std::__1::__vector_base.1101" }
%"class.std::__1::__vector_base.1101" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1102" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1102" = type { %"struct.std::__1::__compressed_pair_elem.1103" }
%"struct.std::__1::__compressed_pair_elem.1103" = type { %"struct.v8::MemoryRange"* }
%"class.v8::internal::ZonePreparseData" = type { %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector.1247" }
%"class.v8::internal::ZoneVector" = type { %"class.std::__1::vector.1242" }
%"class.std::__1::vector.1242" = type { %"class.std::__1::__vector_base.1243" }
%"class.std::__1::__vector_base.1243" = type { i8*, i8*, %"class.std::__1::__compressed_pair.1244" }
%"class.std::__1::__compressed_pair.1244" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.1245" }
%"struct.std::__1::__compressed_pair_elem.1245" = type { %"class.v8::internal::ZoneAllocator.1246" }
%"class.v8::internal::ZoneAllocator.1246" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.1247" = type { %"class.std::__1::vector.1248" }
%"class.std::__1::vector.1248" = type { %"class.std::__1::__vector_base.1249" }
%"class.std::__1::__vector_base.1249" = type { %"class.v8::internal::ZonePreparseData"**, %"class.v8::internal::ZonePreparseData"**, %"class.std::__1::__compressed_pair.1250" }
%"class.std::__1::__compressed_pair.1250" = type { %"struct.std::__1::__compressed_pair_elem.1251", %"struct.std::__1::__compressed_pair_elem.1252" }
%"struct.std::__1::__compressed_pair_elem.1251" = type { %"class.v8::internal::ZonePreparseData"** }
%"struct.std::__1::__compressed_pair_elem.1252" = type { %"class.v8::internal::ZoneAllocator.1253" }
%"class.v8::internal::ZoneAllocator.1253" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::Vector" = type { i8*, i64 }
%"class.v8::internal::ZoneConsumedPreparseData" = type { %"class.v8::internal::BaseConsumedPreparseData.base.1270", %"class.v8::internal::ZonePreparseData"*, %"class.v8::internal::ZoneVectorWrapper" }
%"class.v8::internal::BaseConsumedPreparseData.base.1270" = type <{ %"class.v8::internal::ConsumedPreparseData", %"class.std::__1::unique_ptr.1264", i32 }>
%"class.std::__1::unique_ptr.1264" = type { %"class.std::__1::__compressed_pair.1265" }
%"class.std::__1::__compressed_pair.1265" = type { %"struct.std::__1::__compressed_pair_elem.1266" }
%"struct.std::__1::__compressed_pair_elem.1266" = type { %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"* }
%"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData" = type <{ %"class.v8::internal::ZoneVectorWrapper", i32, i8, i8, [2 x i8] }>
%"class.v8::internal::ZoneVectorWrapper" = type { %"class.v8::internal::ZoneVector"* }
%"class.v8::internal::PreparseDataBuilder::DataGatheringScope" = type { %"class.v8::internal::PreParser"*, %"class.v8::internal::PreparseDataBuilder"* }
%"class.v8::internal::PreParser" = type { %"class.v8::internal::ParserBase.base", i32*, %"class.v8::internal::PreParserLogger", %"class.v8::internal::PreparseDataBuilder"*, %"class.std::__1::vector.2" }
%"class.v8::internal::ParserBase.base" = type <{ %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"*, %"class.v8::internal::ParserBase<v8::internal::PreParser>::FunctionState"*, %"class.v8::Extension"*, %"class.v8::internal::PreParserFuncNameInferrer", [7 x i8], %"class.v8::internal::AstValueFactory"*, %"class.v8::internal::PreParserFactory", %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::Logger"*, i8, [7 x i8], i64, %"class.v8::internal::PendingCompilationErrorHandler"*, %"class.v8::internal::Zone"*, %"class.v8::internal::ExpressionScope"*, %"class.std::__1::vector.2", %"class.std::__1::vector.1163", %"class.v8::internal::Scanner"*, %"class.v8::internal::UnoptimizedCompileFlags", i32, i8, [7 x i8], %"class.v8::internal::PreParserFormalParameters"*, %"struct.v8::internal::ParserBase<v8::internal::PreParser>::NextArrowFunctionInfo", i8, i8 }>
%"class.v8::internal::ParserBase<v8::internal::PreParser>::FunctionState" = type <{ %"class.v8::internal::ParserBase<v8::internal::PreParser>::BlockState", i32, i32, i32, [4 x i8], %"class.v8::internal::ParserBase<v8::internal::PreParser>::FunctionState"**, %"class.v8::internal::ParserBase<v8::internal::PreParser>::FunctionState"*, %"class.v8::internal::DeclarationScope"*, %"class.v8::internal::ParserBase<v8::internal::PreParser>::Target"*, i8, i8, i8, i8, [4 x i8] }>
%"class.v8::internal::ParserBase<v8::internal::PreParser>::BlockState" = type { %"class.v8::internal::Scope"**, %"class.v8::internal::Scope"* }
%"class.v8::internal::ParserBase<v8::internal::PreParser>::Target" = type { %"class.v8::internal::ParserBase<v8::internal::PreParser>::Target"**, %"class.v8::internal::PreParserStatement", %"class.v8::internal::ZoneList.1291"*, %"class.v8::internal::ZoneList.1291"*, i32, %"class.v8::internal::ParserBase<v8::internal::PreParser>::Target"* }
%"class.v8::internal::PreParserStatement" = type { i32 }
%"class.v8::internal::ZoneList.1291" = type { %"class.v8::internal::AstRawString"**, i32, i32 }
%"class.v8::Extension" = type <{ i32 (...)**, i8*, i64, %"class.v8::String::ExternalOneByteStringResource"*, i32, [4 x i8], i8**, i8, [7 x i8] }>
%"class.v8::String::ExternalOneByteStringResource" = type { %"class.v8::String::ExternalStringResourceBase", i8* }
%"class.v8::String::ExternalStringResourceBase" = type { i32 (...)** }
%"class.v8::internal::PreParserFuncNameInferrer" = type { i8 }
%"class.v8::internal::AstValueFactory" = type { %"class.v8::base::TemplateHashMapImpl.39", %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"**, %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::AstConsString"*, [128 x %"class.v8::internal::AstRawString"*], %"class.v8::internal::Zone"*, i64 }
%"class.v8::internal::AstConsString" = type { %"class.v8::internal::Handle", %"struct.v8::internal::AstConsString::Segment" }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"struct.v8::internal::AstConsString::Segment" = type { %"class.v8::internal::AstRawString"*, %"struct.v8::internal::AstConsString::Segment"* }
%"class.v8::internal::PreParserFactory" = type { %"class.v8::internal::AstNodeFactory", %"class.v8::internal::Zone"* }
%"class.v8::internal::AstNodeFactory" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::AstValueFactory"*, %"class.v8::internal::EmptyStatement"*, %"class.v8::internal::ThisExpression"*, %"class.v8::internal::FailureExpression"* }
%"class.v8::internal::EmptyStatement" = type { %"class.v8::internal::Statement" }
%"class.v8::internal::ThisExpression" = type { %"class.v8::internal::Expression" }
%"class.v8::internal::FailureExpression" = type { %"class.v8::internal::Expression" }
%"class.v8::internal::PendingCompilationErrorHandler" = type { i8, i8, i8, [5 x i8], %"class.v8::internal::PendingCompilationErrorHandler::MessageDetails", %"class.std::__1::forward_list" }
%"class.v8::internal::PendingCompilationErrorHandler::MessageDetails" = type <{ i32, i32, i32, [4 x i8], %union.anon.1157, i32, [4 x i8] }>
%union.anon.1157 = type { %"class.v8::internal::AstRawString"* }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.1158" }
%"class.std::__1::__compressed_pair.1158" = type { %"struct.std::__1::__compressed_pair_elem.1159" }
%"struct.std::__1::__compressed_pair_elem.1159" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type { %"struct.std::__1::__forward_begin_node", %"class.v8::internal::PendingCompilationErrorHandler::MessageDetails" }
%"class.v8::internal::ExpressionScope" = type <{ %"class.v8::internal::PreParser"*, %"class.v8::internal::ExpressionScope"*, i8, i8, i8, [5 x i8] }>
%"class.std::__1::vector.1163" = type { %"class.std::__1::__vector_base.1164" }
%"class.std::__1::__vector_base.1164" = type { %"struct.std::__1::pair.1165"*, %"struct.std::__1::pair.1165"*, %"class.std::__1::__compressed_pair.1166" }
%"struct.std::__1::pair.1165" = type <{ %"class.v8::internal::VariableProxy"*, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.1166" = type { %"struct.std::__1::__compressed_pair_elem.1167" }
%"struct.std::__1::__compressed_pair_elem.1167" = type { %"struct.std::__1::pair.1165"* }
%"class.v8::internal::Scanner" = type { %"class.v8::internal::UnoptimizedCompileFlags", %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"*, %"class.v8::internal::Utf16CharacterStream"*, i32, [4 x i8], [3 x %"struct.v8::internal::Scanner::TokenDesc"], i8, [7 x i8], %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer", %"struct.v8::internal::Scanner::Location", i32, i32, %"struct.v8::internal::Scanner::Location" }
%"struct.v8::internal::Scanner::TokenDesc" = type <{ %"struct.v8::internal::Scanner::Location", %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer", i8, [3 x i8], i32, %"struct.v8::internal::Scanner::Location", i32, i8, [3 x i8] }>
%"class.v8::internal::Utf16CharacterStream" = type <{ i32 (...)**, i16*, i16*, i16*, i64, %"class.v8::internal::RuntimeCallStats"*, i8, [7 x i8] }>
%"class.v8::internal::LiteralBuffer" = type <{ %"class.v8::internal::Vector", i32, i8, [3 x i8] }>
%"struct.v8::internal::Scanner::Location" = type { i32, i32 }
%"class.v8::internal::UnoptimizedCompileFlags" = type <{ i32, i32, i8, i8, [2 x i8] }>
%"class.v8::internal::PreParserFormalParameters" = type { %"struct.v8::internal::FormalParametersBase.base", i8, i8, [2 x i8] }
%"struct.v8::internal::FormalParametersBase.base" = type <{ %"class.v8::internal::DeclarationScope"*, i8, i8, [2 x i8], i32, i32 }>
%"struct.v8::internal::ParserBase<v8::internal::PreParser>::NextArrowFunctionInfo" = type { %"struct.v8::internal::Scanner::Location", i32, %"class.v8::internal::DeclarationScope"* }
%"class.v8::internal::PreParserLogger" = type { i32, i32, i32, i32 }
%"class.v8::internal::ParserBase" = type <{ %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"*, %"class.v8::internal::ParserBase<v8::internal::PreParser>::FunctionState"*, %"class.v8::Extension"*, %"class.v8::internal::PreParserFuncNameInferrer", [7 x i8], %"class.v8::internal::AstValueFactory"*, %"class.v8::internal::PreParserFactory", %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::Logger"*, i8, [7 x i8], i64, %"class.v8::internal::PendingCompilationErrorHandler"*, %"class.v8::internal::Zone"*, %"class.v8::internal::ExpressionScope"*, %"class.std::__1::vector.2", %"class.std::__1::vector.1163", %"class.v8::internal::Scanner"*, %"class.v8::internal::UnoptimizedCompileFlags", i32, i8, [7 x i8], %"class.v8::internal::PreParserFormalParameters"*, %"struct.v8::internal::ParserBase<v8::internal::PreParser>::NextArrowFunctionInfo", i8, i8, [6 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.v8::internal::Parser" = type <{ %"class.v8::internal::ParserBase.base.1193", [6 x i8], %"class.v8::internal::ParseInfo"*, %"class.v8::internal::Scanner", %"class.v8::internal::Zone", %"class.v8::internal::PreParser"*, i32, [4 x i8], %"class.v8::internal::MaybeHandle", %"class.v8::internal::SourceRangeMap"*, i32, i32, [113 x i32], i32, i8, i8, [6 x i8], %"class.v8::internal::ConsumedPreparseData"*, %"class.std::__1::vector", i32, [4 x i8] }>
%"class.v8::internal::ParserBase.base.1193" = type <{ %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"*, %"class.v8::internal::ParserBase<v8::internal::Parser>::FunctionState"*, %"class.v8::Extension"*, %"class.v8::internal::FuncNameInferrer", %"class.v8::internal::AstValueFactory"*, %"class.v8::internal::AstNodeFactory", %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::Logger"*, i8, [7 x i8], i64, %"class.v8::internal::PendingCompilationErrorHandler"*, %"class.v8::internal::Zone"*, %"class.v8::internal::ExpressionScope.1189"*, %"class.std::__1::vector.2", %"class.std::__1::vector.1163", %"class.v8::internal::Scanner"*, %"class.v8::internal::UnoptimizedCompileFlags", i32, i8, [7 x i8], %"struct.v8::internal::ParserFormalParameters"*, %"struct.v8::internal::ParserBase<v8::internal::Parser>::NextArrowFunctionInfo", i8, i8 }>
%"class.v8::internal::ParserBase<v8::internal::Parser>::FunctionState" = type <{ %"class.v8::internal::ParserBase<v8::internal::Parser>::BlockState", i32, i32, i32, [4 x i8], %"class.v8::internal::ParserBase<v8::internal::Parser>::FunctionState"**, %"class.v8::internal::ParserBase<v8::internal::Parser>::FunctionState"*, %"class.v8::internal::DeclarationScope"*, %"class.v8::internal::ParserBase<v8::internal::Parser>::Target"*, i8, i8, i8, i8, [4 x i8] }>
%"class.v8::internal::ParserBase<v8::internal::Parser>::BlockState" = type { %"class.v8::internal::Scope"**, %"class.v8::internal::Scope"* }
%"class.v8::internal::ParserBase<v8::internal::Parser>::Target" = type opaque
%"class.v8::internal::FuncNameInferrer" = type { %"class.v8::internal::AstValueFactory"*, %"class.std::__1::vector.1174", %"class.std::__1::vector.1181", i64 }
%"class.std::__1::vector.1174" = type { %"class.std::__1::__vector_base.1175" }
%"class.std::__1::__vector_base.1175" = type { %"struct.v8::internal::FuncNameInferrer::Name"*, %"struct.v8::internal::FuncNameInferrer::Name"*, %"class.std::__1::__compressed_pair.1176" }
%"struct.v8::internal::FuncNameInferrer::Name" = type { %"class.v8::internal::PointerWithPayload" }
%"class.v8::internal::PointerWithPayload" = type { i64 }
%"class.std::__1::__compressed_pair.1176" = type { %"struct.std::__1::__compressed_pair_elem.1177" }
%"struct.std::__1::__compressed_pair_elem.1177" = type { %"struct.v8::internal::FuncNameInferrer::Name"* }
%"class.std::__1::vector.1181" = type { %"class.std::__1::__vector_base.1182" }
%"class.std::__1::__vector_base.1182" = type { %"class.v8::internal::FunctionLiteral"**, %"class.v8::internal::FunctionLiteral"**, %"class.std::__1::__compressed_pair.1184" }
%"class.v8::internal::FunctionLiteral" = type { %"class.v8::internal::Expression", i32, i32, i32, i32, i32, i32, %"class.v8::internal::AstConsString"*, %"class.v8::internal::DeclarationScope"*, %"class.v8::internal::ZoneList.1183", %"class.v8::internal::AstConsString"*, %"class.v8::internal::Handle", %"class.v8::internal::ProducedPreparseData"* }
%"class.v8::internal::ZoneList.1183" = type { %"class.v8::internal::Statement"**, i32, i32 }
%"class.v8::internal::ProducedPreparseData" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.1184" = type { %"struct.std::__1::__compressed_pair_elem.1185" }
%"struct.std::__1::__compressed_pair_elem.1185" = type { %"class.v8::internal::FunctionLiteral"** }
%"class.v8::internal::ExpressionScope.1189" = type <{ %"class.v8::internal::Parser"*, %"class.v8::internal::ExpressionScope.1189"*, i8, i8, i8, [5 x i8] }>
%"struct.v8::internal::ParserFormalParameters" = type <{ %"struct.v8::internal::FormalParametersBase.base", [4 x i8], %"class.v8::base::ThreadedListBase.1191", %"struct.v8::internal::Scanner::Location", %"struct.v8::internal::Scanner::Location", i32, [4 x i8] }>
%"class.v8::base::ThreadedListBase.1191" = type { %"struct.v8::internal::ParserFormalParameters::Parameter"*, %"struct.v8::internal::ParserFormalParameters::Parameter"** }
%"struct.v8::internal::ParserFormalParameters::Parameter" = type { %"class.v8::internal::PointerWithPayload.1192", %"class.v8::internal::Expression"*, i32, i32, %"struct.v8::internal::ParserFormalParameters::Parameter"* }
%"class.v8::internal::PointerWithPayload.1192" = type { i64 }
%"struct.v8::internal::ParserBase<v8::internal::Parser>::NextArrowFunctionInfo" = type { %"struct.v8::internal::Scanner::Location", i32, %"class.v8::internal::DeclarationScope"* }
%"class.v8::internal::ParseInfo" = type <{ %"class.v8::internal::UnoptimizedCompileFlags", [4 x i8], %"class.v8::internal::UnoptimizedCompileState"*, %"class.std::__1::unique_ptr.1209", %"class.v8::Extension"*, %"class.v8::internal::DeclarationScope"*, i64, i32, i32, %"class.std::__1::unique_ptr.1215", %"class.std::__1::unique_ptr.1221", %"class.std::__1::unique_ptr.1227", %"class.v8::internal::AstRawString"*, %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::SourceRangeMap"*, %"class.v8::internal::FunctionLiteral"*, i8, [7 x i8] }>
%"class.v8::internal::UnoptimizedCompileState" = type { i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::PendingCompilationErrorHandler", %"class.v8::internal::Logger"*, %"class.std::__1::unique_ptr.1194" }
%"class.std::__1::unique_ptr.1194" = type { %"class.std::__1::__compressed_pair.1195" }
%"class.std::__1::__compressed_pair.1195" = type { %"struct.std::__1::__compressed_pair_elem.1196" }
%"struct.std::__1::__compressed_pair_elem.1196" = type { %"class.v8::internal::UnoptimizedCompileState::ParallelTasks"* }
%"class.v8::internal::UnoptimizedCompileState::ParallelTasks" = type { %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::forward_list.1197" }
%"class.std::__1::forward_list.1197" = type { %"class.std::__1::__forward_list_base.1198" }
%"class.std::__1::__forward_list_base.1198" = type { %"class.std::__1::__compressed_pair.1199" }
%"class.std::__1::__compressed_pair.1199" = type { %"struct.std::__1::__compressed_pair_elem.1200" }
%"struct.std::__1::__compressed_pair_elem.1200" = type { %"struct.std::__1::__forward_begin_node.1201" }
%"struct.std::__1::__forward_begin_node.1201" = type { %"struct.std::__1::__forward_list_node.1202"* }
%"struct.std::__1::__forward_list_node.1202" = type { %"struct.std::__1::__forward_begin_node.1201", %"struct.std::__1::pair.1285" }
%"struct.std::__1::pair.1285" = type { %"class.v8::internal::FunctionLiteral"*, i64 }
%"class.std::__1::unique_ptr.1209" = type { %"class.std::__1::__compressed_pair.1210" }
%"class.std::__1::__compressed_pair.1210" = type { %"struct.std::__1::__compressed_pair_elem.1211" }
%"struct.std::__1::__compressed_pair_elem.1211" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::unique_ptr.1215" = type { %"class.std::__1::__compressed_pair.1216" }
%"class.std::__1::__compressed_pair.1216" = type { %"struct.std::__1::__compressed_pair_elem.1217" }
%"struct.std::__1::__compressed_pair_elem.1217" = type { %"class.v8::internal::Utf16CharacterStream"* }
%"class.std::__1::unique_ptr.1221" = type { %"class.std::__1::__compressed_pair.1222" }
%"class.std::__1::__compressed_pair.1222" = type { %"struct.std::__1::__compressed_pair_elem.1223" }
%"struct.std::__1::__compressed_pair_elem.1223" = type { %"class.v8::internal::ConsumedPreparseData"* }
%"class.std::__1::unique_ptr.1227" = type { %"class.std::__1::__compressed_pair.1228" }
%"class.std::__1::__compressed_pair.1228" = type { %"struct.std::__1::__compressed_pair_elem.1229" }
%"struct.std::__1::__compressed_pair_elem.1229" = type { %"class.v8::internal::AstValueFactory"* }
%"class.v8::internal::MaybeHandle" = type { i64* }
%"class.v8::internal::SourceRangeMap" = type { %"class.v8::internal::ZoneMap" }
%"class.v8::internal::ZoneMap" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.1233" }
%"class.std::__1::__tree.1233" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1234", %"class.std::__1::__compressed_pair.1236" }
%"class.std::__1::__compressed_pair.1234" = type { %"struct.std::__1::__compressed_pair_elem.18", %"struct.std::__1::__compressed_pair_elem.1235" }
%"struct.std::__1::__compressed_pair_elem.1235" = type { %"class.v8::internal::ZoneAllocator" }
%"class.v8::internal::ZoneAllocator" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1236" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.v8::internal::ClassScope" = type <{ %"class.v8::internal::Scope.base", [5 x i8], %"class.v8::internal::PointerWithPayload.1240", %"class.v8::internal::Variable"*, i8, i8, i8, i8, [4 x i8] }>
%"class.v8::internal::PointerWithPayload.1240" = type { i64 }
%"class.v8::internal::FactoryBase" = type { i8 }
%"class.v8::internal::FactoryBase.1027" = type { i8 }
%"class.v8::internal::BuilderProducedPreparseData" = type { %"class.v8::internal::ProducedPreparseData", %"class.v8::internal::PreparseDataBuilder"* }
%"class.v8::internal::OnHeapProducedPreparseData" = type { %"class.v8::internal::ProducedPreparseData", %"class.v8::internal::Handle.1241" }
%"class.v8::internal::ZoneProducedPreparseData" = type { %"class.v8::internal::ProducedPreparseData", %"class.v8::internal::ZonePreparseData"* }
%"class.v8::internal::BaseConsumedPreparseData" = type <{ %"class.v8::internal::ConsumedPreparseData", %"class.std::__1::unique_ptr.1254", i32, [4 x i8] }>
%"class.v8::internal::BaseConsumedPreparseData.1263" = type <{ %"class.v8::internal::ConsumedPreparseData", %"class.std::__1::unique_ptr.1264", i32, [4 x i8] }>
%"class.v8::internal::VariableDeclaration" = type { %"class.v8::internal::Declaration" }

$_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertENS_11__wrap_iterIPKhEEmRS5_ = comdat any

$_ZN2v88internal10ScopedListIPNS0_19PreparseDataBuilderEPvE3AddERKS3_ = comdat any

$_ZN2v88internal24BaseConsumedPreparseDataINS0_12PreparseDataEED2Ev = comdat any

$_ZN2v88internal26OnHeapConsumedPreparseDataD0Ev = comdat any

$_ZN2v88internal24BaseConsumedPreparseDataINS0_12PreparseDataEE27GetDataForSkippableFunctionEPNS0_4ZoneEiPiS6_S6_S6_PbPNS0_12LanguageModeE = comdat any

$_ZN2v88internal24BaseConsumedPreparseDataINS0_12PreparseDataEE26RestoreScopeAllocationDataEPNS0_16DeclarationScopeEPNS0_15AstValueFactoryEPNS0_4ZoneE = comdat any

$_ZN2v88internal24BaseConsumedPreparseDataINS0_17ZoneVectorWrapperEED2Ev = comdat any

$_ZN2v88internal24ZoneConsumedPreparseDataD0Ev = comdat any

$_ZN2v88internal24BaseConsumedPreparseDataINS0_17ZoneVectorWrapperEE27GetDataForSkippableFunctionEPNS0_4ZoneEiPiS6_S6_S6_PbPNS0_12LanguageModeE = comdat any

$_ZN2v88internal24BaseConsumedPreparseDataINS0_17ZoneVectorWrapperEE26RestoreScopeAllocationDataEPNS0_16DeclarationScopeEPNS0_15AstValueFactoryEPNS0_4ZoneE = comdat any

$_ZN2v88internal24BaseConsumedPreparseDataINS0_12PreparseDataEED0Ev = comdat any

$_ZN2v88internal24BaseConsumedPreparseDataINS0_17ZoneVectorWrapperEED0Ev = comdat any

$_ZNSt3__16vectorIPvNS_9allocatorIS1_EEE8__appendEm = comdat any

$_ZN2v88internal27BuilderProducedPreparseData9SerializeEPNS0_7IsolateE = comdat any

$_ZN2v88internal27BuilderProducedPreparseData9SerializeEPNS0_12LocalIsolateE = comdat any

$_ZN2v88internal27BuilderProducedPreparseData9SerializeEPNS0_4ZoneE = comdat any

$_ZN2v88internal26OnHeapProducedPreparseData9SerializeEPNS0_7IsolateE = comdat any

$_ZN2v88internal26OnHeapProducedPreparseData9SerializeEPNS0_12LocalIsolateE = comdat any

$_ZN2v88internal26OnHeapProducedPreparseData9SerializeEPNS0_4ZoneE = comdat any

$_ZN2v88internal24ZoneProducedPreparseData9SerializeEPNS0_7IsolateE = comdat any

$_ZN2v88internal24ZoneProducedPreparseData9SerializeEPNS0_12LocalIsolateE = comdat any

$_ZN2v88internal24ZoneProducedPreparseData9SerializeEPNS0_4ZoneE = comdat any

$_ZN2v88internal24BaseConsumedPreparseDataINS0_12PreparseDataEE19RestoreDataForScopeEPNS0_5ScopeEPNS0_15AstValueFactoryEPNS0_4ZoneE = comdat any

$_ZN2v88internal8Variable16SetMaybeAssignedEv = comdat any

$_ZN2v88internal24BaseConsumedPreparseDataINS0_17ZoneVectorWrapperEE19RestoreDataForScopeEPNS0_5ScopeEPNS0_15AstValueFactoryEPNS0_4ZoneE = comdat any

$_ZTVN2v88internal24BaseConsumedPreparseDataINS0_12PreparseDataEEE = comdat any

$_ZTVN2v88internal24BaseConsumedPreparseDataINS0_17ZoneVectorWrapperEEE = comdat any

$_ZTVN2v88internal27BuilderProducedPreparseDataE = comdat any

$_ZTVN2v88internal26OnHeapProducedPreparseDataE = comdat any

$_ZTVN2v88internal24ZoneProducedPreparseDataE = comdat any

@_ZTVN2v88internal26OnHeapConsumedPreparseDataE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::BaseConsumedPreparseData"*)* @_ZN2v88internal24BaseConsumedPreparseDataINS0_12PreparseDataEED2Ev to i8*), i8* bitcast (void (%"class.v8::internal::OnHeapConsumedPreparseData"*)* @_ZN2v88internal26OnHeapConsumedPreparseDataD0Ev to i8*), i8* bitcast (%"class.v8::internal::ProducedPreparseData"* (%"class.v8::internal::BaseConsumedPreparseData"*, %"class.v8::internal::Zone"*, i32, i32*, i32*, i32*, i32*, i8*, i8*)* @_ZN2v88internal24BaseConsumedPreparseDataINS0_12PreparseDataEE27GetDataForSkippableFunctionEPNS0_4ZoneEiPiS6_S6_S6_PbPNS0_12LanguageModeE to i8*), i8* bitcast (void (%"class.v8::internal::BaseConsumedPreparseData"*, %"class.v8::internal::DeclarationScope"*, %"class.v8::internal::AstValueFactory"*, %"class.v8::internal::Zone"*)* @_ZN2v88internal24BaseConsumedPreparseDataINS0_12PreparseDataEE26RestoreScopeAllocationDataEPNS0_16DeclarationScopeEPNS0_15AstValueFactoryEPNS0_4ZoneE to i8*), i8* bitcast (i64 (%"class.v8::internal::OnHeapConsumedPreparseData"*)* @_ZN2v88internal26OnHeapConsumedPreparseData12GetScopeDataEv to i8*), i8* bitcast (%"class.v8::internal::ProducedPreparseData"* (%"class.v8::internal::OnHeapConsumedPreparseData"*, %"class.v8::internal::Zone"*, i32)* @_ZN2v88internal26OnHeapConsumedPreparseData12GetChildDataEPNS0_4ZoneEi to i8*)] }, align 8
@_ZTVN2v88internal24ZoneConsumedPreparseDataE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::BaseConsumedPreparseData.1263"*)* @_ZN2v88internal24BaseConsumedPreparseDataINS0_17ZoneVectorWrapperEED2Ev to i8*), i8* bitcast (void (%"class.v8::internal::ZoneConsumedPreparseData"*)* @_ZN2v88internal24ZoneConsumedPreparseDataD0Ev to i8*), i8* bitcast (%"class.v8::internal::ProducedPreparseData"* (%"class.v8::internal::BaseConsumedPreparseData.1263"*, %"class.v8::internal::Zone"*, i32, i32*, i32*, i32*, i32*, i8*, i8*)* @_ZN2v88internal24BaseConsumedPreparseDataINS0_17ZoneVectorWrapperEE27GetDataForSkippableFunctionEPNS0_4ZoneEiPiS6_S6_S6_PbPNS0_12LanguageModeE to i8*), i8* bitcast (void (%"class.v8::internal::BaseConsumedPreparseData.1263"*, %"class.v8::internal::DeclarationScope"*, %"class.v8::internal::AstValueFactory"*, %"class.v8::internal::Zone"*)* @_ZN2v88internal24BaseConsumedPreparseDataINS0_17ZoneVectorWrapperEE26RestoreScopeAllocationDataEPNS0_16DeclarationScopeEPNS0_15AstValueFactoryEPNS0_4ZoneE to i8*), i8* bitcast (%"class.v8::internal::ZoneVector"* (%"class.v8::internal::ZoneConsumedPreparseData"*)* @_ZN2v88internal24ZoneConsumedPreparseData12GetScopeDataEv to i8*), i8* bitcast (%"class.v8::internal::ProducedPreparseData"* (%"class.v8::internal::ZoneConsumedPreparseData"*, %"class.v8::internal::Zone"*, i32)* @_ZN2v88internal24ZoneConsumedPreparseData12GetChildDataEPNS0_4ZoneEi to i8*)] }, align 8
@.str = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.1 = private unnamed_addr constant [39 x i8] c"data_->children_length() > child_index\00", align 1
@_ZTVN2v88internal24BaseConsumedPreparseDataINS0_12PreparseDataEEE = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::BaseConsumedPreparseData"*)* @_ZN2v88internal24BaseConsumedPreparseDataINS0_12PreparseDataEED2Ev to i8*), i8* bitcast (void (%"class.v8::internal::BaseConsumedPreparseData"*)* @_ZN2v88internal24BaseConsumedPreparseDataINS0_12PreparseDataEED0Ev to i8*), i8* bitcast (%"class.v8::internal::ProducedPreparseData"* (%"class.v8::internal::BaseConsumedPreparseData"*, %"class.v8::internal::Zone"*, i32, i32*, i32*, i32*, i32*, i8*, i8*)* @_ZN2v88internal24BaseConsumedPreparseDataINS0_12PreparseDataEE27GetDataForSkippableFunctionEPNS0_4ZoneEiPiS6_S6_S6_PbPNS0_12LanguageModeE to i8*), i8* bitcast (void (%"class.v8::internal::BaseConsumedPreparseData"*, %"class.v8::internal::DeclarationScope"*, %"class.v8::internal::AstValueFactory"*, %"class.v8::internal::Zone"*)* @_ZN2v88internal24BaseConsumedPreparseDataINS0_12PreparseDataEE26RestoreScopeAllocationDataEPNS0_16DeclarationScopeEPNS0_15AstValueFactoryEPNS0_4ZoneE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTVN2v88internal24BaseConsumedPreparseDataINS0_17ZoneVectorWrapperEEE = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::BaseConsumedPreparseData.1263"*)* @_ZN2v88internal24BaseConsumedPreparseDataINS0_17ZoneVectorWrapperEED2Ev to i8*), i8* bitcast (void (%"class.v8::internal::BaseConsumedPreparseData.1263"*)* @_ZN2v88internal24BaseConsumedPreparseDataINS0_17ZoneVectorWrapperEED0Ev to i8*), i8* bitcast (%"class.v8::internal::ProducedPreparseData"* (%"class.v8::internal::BaseConsumedPreparseData.1263"*, %"class.v8::internal::Zone"*, i32, i32*, i32*, i32*, i32*, i8*, i8*)* @_ZN2v88internal24BaseConsumedPreparseDataINS0_17ZoneVectorWrapperEE27GetDataForSkippableFunctionEPNS0_4ZoneEiPiS6_S6_S6_PbPNS0_12LanguageModeE to i8*), i8* bitcast (void (%"class.v8::internal::BaseConsumedPreparseData.1263"*, %"class.v8::internal::DeclarationScope"*, %"class.v8::internal::AstValueFactory"*, %"class.v8::internal::Zone"*)* @_ZN2v88internal24BaseConsumedPreparseDataINS0_17ZoneVectorWrapperEE26RestoreScopeAllocationDataEPNS0_16DeclarationScopeEPNS0_15AstValueFactoryEPNS0_4ZoneE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTVN2v88internal27BuilderProducedPreparseDataE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (i64* (%"class.v8::internal::BuilderProducedPreparseData"*, %"class.v8::internal::Isolate"*)* @_ZN2v88internal27BuilderProducedPreparseData9SerializeEPNS0_7IsolateE to i8*), i8* bitcast (i64* (%"class.v8::internal::BuilderProducedPreparseData"*, %"class.v8::internal::LocalIsolate"*)* @_ZN2v88internal27BuilderProducedPreparseData9SerializeEPNS0_12LocalIsolateE to i8*), i8* bitcast (%"class.v8::internal::ZonePreparseData"* (%"class.v8::internal::BuilderProducedPreparseData"*, %"class.v8::internal::Zone"*)* @_ZN2v88internal27BuilderProducedPreparseData9SerializeEPNS0_4ZoneE to i8*)] }, comdat, align 8
@_ZTVN2v88internal26OnHeapProducedPreparseDataE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (i64* (%"class.v8::internal::OnHeapProducedPreparseData"*, %"class.v8::internal::Isolate"*)* @_ZN2v88internal26OnHeapProducedPreparseData9SerializeEPNS0_7IsolateE to i8*), i8* bitcast (i64* (%"class.v8::internal::OnHeapProducedPreparseData"*, %"class.v8::internal::LocalIsolate"*)* @_ZN2v88internal26OnHeapProducedPreparseData9SerializeEPNS0_12LocalIsolateE to i8*), i8* bitcast (%"class.v8::internal::ZonePreparseData"* (%"class.v8::internal::OnHeapProducedPreparseData"*, %"class.v8::internal::Zone"*)* @_ZN2v88internal26OnHeapProducedPreparseData9SerializeEPNS0_4ZoneE to i8*)] }, comdat, align 8
@.str.3 = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@_ZTVN2v88internal24ZoneProducedPreparseDataE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (i64* (%"class.v8::internal::ZoneProducedPreparseData"*, %"class.v8::internal::Isolate"*)* @_ZN2v88internal24ZoneProducedPreparseData9SerializeEPNS0_7IsolateE to i8*), i8* bitcast (i64* (%"class.v8::internal::ZoneProducedPreparseData"*, %"class.v8::internal::LocalIsolate"*)* @_ZN2v88internal24ZoneProducedPreparseData9SerializeEPNS0_12LocalIsolateE to i8*), i8* bitcast (%"class.v8::internal::ZonePreparseData"* (%"class.v8::internal::ZoneProducedPreparseData"*, %"class.v8::internal::Zone"*)* @_ZN2v88internal24ZoneProducedPreparseData9SerializeEPNS0_4ZoneE to i8*)] }, comdat, align 8
@.str.4 = private unnamed_addr constant [90 x i8] c"scope_data_->HasRemainingBytes( PreparseByteDataConstants::kSkippableFunctionMinDataSize)\00", align 1
@.str.5 = private unnamed_addr constant [43 x i8] c"start_position == start_position_from_data\00", align 1
@.str.6 = private unnamed_addr constant [53 x i8] c"scope_data_->HasRemainingBytes(ByteData::kUint8Size)\00", align 1

@_ZN2v88internal19PreparseDataBuilderC1EPNS0_4ZoneEPS1_PNSt3__16vectorIPvNS5_9allocatorIS7_EEEE = hidden unnamed_addr alias void (%"class.v8::internal::PreparseDataBuilder"*, %"class.v8::internal::Zone"*, %"class.v8::internal::PreparseDataBuilder"*, %"class.std::__1::vector.2"*), void (%"class.v8::internal::PreparseDataBuilder"*, %"class.v8::internal::Zone"*, %"class.v8::internal::PreparseDataBuilder"*, %"class.std::__1::vector.2"*)* @_ZN2v88internal19PreparseDataBuilderC2EPNS0_4ZoneEPS1_PNSt3__16vectorIPvNS5_9allocatorIS7_EEEE
@_ZN2v88internal26OnHeapConsumedPreparseDataC1EPNS0_7IsolateENS0_6HandleINS0_12PreparseDataEEE = hidden unnamed_addr alias void (%"class.v8::internal::OnHeapConsumedPreparseData"*, %"class.v8::internal::Isolate"*, i64*), void (%"class.v8::internal::OnHeapConsumedPreparseData"*, %"class.v8::internal::Isolate"*, i64*)* @_ZN2v88internal26OnHeapConsumedPreparseDataC2EPNS0_7IsolateENS0_6HandleINS0_12PreparseDataEEE
@_ZN2v88internal16ZonePreparseDataC1EPNS0_4ZoneEPNS0_6VectorIhEEi = hidden unnamed_addr alias void (%"class.v8::internal::ZonePreparseData"*, %"class.v8::internal::Zone"*, %"class.v8::internal::Vector"*, i32), void (%"class.v8::internal::ZonePreparseData"*, %"class.v8::internal::Zone"*, %"class.v8::internal::Vector"*, i32)* @_ZN2v88internal16ZonePreparseDataC2EPNS0_4ZoneEPNS0_6VectorIhEEi
@_ZN2v88internal24ZoneConsumedPreparseDataC1EPNS0_4ZoneEPNS0_16ZonePreparseDataE = hidden unnamed_addr alias void (%"class.v8::internal::ZoneConsumedPreparseData"*, %"class.v8::internal::Zone"*, %"class.v8::internal::ZonePreparseData"*), void (%"class.v8::internal::ZoneConsumedPreparseData"*, %"class.v8::internal::Zone"*, %"class.v8::internal::ZonePreparseData"*)* @_ZN2v88internal24ZoneConsumedPreparseDataC2EPNS0_4ZoneEPNS0_16ZonePreparseDataE

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal19PreparseDataBuilderC2EPNS0_4ZoneEPS1_PNSt3__16vectorIPvNS5_9allocatorIS7_EEEE(%"class.v8::internal::PreparseDataBuilder"* nocapture, %"class.v8::internal::Zone"* nocapture readnone, %"class.v8::internal::PreparseDataBuilder"*, %"class.std::__1::vector.2"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %0, i64 0, i32 0
  store %"class.v8::internal::PreparseDataBuilder"* %2, %"class.v8::internal::PreparseDataBuilder"** %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %0, i64 0, i32 1, i32 1
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.std::__1::vector.2"* %3, %"class.std::__1::vector.2"** %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %0, i64 0, i32 2, i32 0, i32 1
  %11 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %3, i64 0, i32 0, i32 1
  %12 = bitcast i8*** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector.2"* %3 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = ashr exact i64 %16, 3
  store i64 %17, i64* %10, align 8
  %18 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %0, i64 0, i32 2, i32 0, i32 2
  %19 = load i64, i64* %12, align 8
  %20 = load i64, i64* %14, align 8
  %21 = sub i64 %19, %20
  %22 = ashr exact i64 %21, 3
  store i64 %22, i64* %18, align 8
  %23 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %0, i64 0, i32 3
  store %"class.v8::internal::DeclarationScope"* null, %"class.v8::internal::DeclarationScope"** %23, align 8
  %24 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %0, i64 0, i32 4
  store i32 -1, i32* %24, align 8
  %25 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %0, i64 0, i32 5
  store i32 0, i32* %25, align 4
  %26 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %0, i64 0, i32 6
  store i32 0, i32* %26, align 8
  %27 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %0, i64 0, i32 7
  %28 = load i8, i8* %27, align 4
  %29 = and i8 %28, -4
  store i8 %29, i8* %27, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal19PreparseDataBuilder18DataGatheringScope5StartEPNS0_16DeclarationScopeE(%"class.v8::internal::PreparseDataBuilder::DataGatheringScope"* nocapture, %"class.v8::internal::DeclarationScope"* nocapture) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder::DataGatheringScope", %"class.v8::internal::PreparseDataBuilder::DataGatheringScope"* %0, i64 0, i32 0
  %4 = bitcast %"class.v8::internal::PreparseDataBuilder::DataGatheringScope"* %0 to %"class.v8::internal::ParserBase"**
  %5 = load %"class.v8::internal::ParserBase"*, %"class.v8::internal::ParserBase"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::ParserBase", %"class.v8::internal::ParserBase"* %5, i64 0, i32 7
  %7 = load %"class.v8::internal::AstValueFactory"*, %"class.v8::internal::AstValueFactory"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::AstValueFactory", %"class.v8::internal::AstValueFactory"* %7, i64 0, i32 6
  %9 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::ParserBase", %"class.v8::internal::ParserBase"* %5, i64 1, i32 3
  %11 = bitcast %"class.v8::internal::ParserBase<v8::internal::PreParser>::FunctionState"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::ParserBase", %"class.v8::internal::ParserBase"* %5, i64 1, i32 4
  %14 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %9, i64 0, i32 2
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %9, i64 0, i32 3
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %15
  %19 = icmp ult i64 %18, 80
  br i1 %19, label %20, label %22, !prof !2

20:                                               ; preds = %2
  %21 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %9, i64 80) #12
  br label %24

22:                                               ; preds = %2
  %23 = add i64 %15, 80
  store i64 %23, i64* %14, align 8
  br label %24

24:                                               ; preds = %20, %22
  %25 = phi i64 [ %21, %20 ], [ %15, %22 ]
  %26 = inttoptr i64 %25 to %"class.v8::internal::PreparseDataBuilder"*
  %27 = inttoptr i64 %25 to i64*
  store i64 %12, i64* %27, align 8
  %28 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %26, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %28, align 8
  %29 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %26, i64 0, i32 1, i32 0, i32 0, i32 1
  store i32 0, i32* %29, align 8
  %30 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %26, i64 0, i32 1, i32 1
  store i8 0, i8* %30, align 8
  %31 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %26, i64 0, i32 2, i32 0, i32 0
  %32 = bitcast %"class.std::__1::vector.2"** %31 to %"class.v8::Extension"***
  store %"class.v8::Extension"** %13, %"class.v8::Extension"*** %32, align 8
  %33 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %26, i64 0, i32 2, i32 0, i32 1
  %34 = getelementptr inbounds %"class.v8::Extension"*, %"class.v8::Extension"** %13, i64 1
  %35 = bitcast %"class.v8::Extension"** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.v8::Extension"** %13 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %36, %38
  %40 = ashr exact i64 %39, 3
  store i64 %40, i64* %33, align 8
  %41 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %26, i64 0, i32 2, i32 0, i32 2
  %42 = load i64, i64* %35, align 8
  %43 = load i64, i64* %37, align 8
  %44 = sub i64 %42, %43
  %45 = ashr exact i64 %44, 3
  store i64 %45, i64* %41, align 8
  %46 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %26, i64 0, i32 3
  store %"class.v8::internal::DeclarationScope"* null, %"class.v8::internal::DeclarationScope"** %46, align 8
  %47 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %26, i64 0, i32 4
  store i32 -1, i32* %47, align 8
  %48 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %26, i64 0, i32 5
  store i32 0, i32* %48, align 4
  %49 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %26, i64 0, i32 6
  store i32 0, i32* %49, align 8
  %50 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %26, i64 0, i32 7
  %51 = load i8, i8* %50, align 4
  %52 = and i8 %51, -4
  store i8 %52, i8* %50, align 4
  %53 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder::DataGatheringScope", %"class.v8::internal::PreparseDataBuilder::DataGatheringScope"* %0, i64 0, i32 1
  store %"class.v8::internal::PreparseDataBuilder"* %26, %"class.v8::internal::PreparseDataBuilder"** %53, align 8
  %54 = load %"class.v8::internal::PreParser"*, %"class.v8::internal::PreParser"** %3, align 8
  %55 = getelementptr inbounds %"class.v8::internal::PreParser", %"class.v8::internal::PreParser"* %54, i64 0, i32 3
  store %"class.v8::internal::PreparseDataBuilder"* %26, %"class.v8::internal::PreparseDataBuilder"** %55, align 8
  %56 = bitcast %"class.v8::internal::PreparseDataBuilder"** %53 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %1, i64 0, i32 12
  %59 = bitcast %"class.v8::internal::PreparseDataBuilder"** %58 to i64*
  store i64 %57, i64* %59, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal19PreparseDataBuilder18DataGatheringScope5CloseEv(%"class.v8::internal::PreparseDataBuilder::DataGatheringScope"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.v8::internal::PreparseDataBuilder"*, align 8
  %3 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder::DataGatheringScope", %"class.v8::internal::PreparseDataBuilder::DataGatheringScope"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::PreparseDataBuilder"*, %"class.v8::internal::PreparseDataBuilder"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %4, i64 0, i32 0
  %6 = load %"class.v8::internal::PreparseDataBuilder"*, %"class.v8::internal::PreparseDataBuilder"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder::DataGatheringScope", %"class.v8::internal::PreparseDataBuilder::DataGatheringScope"* %0, i64 0, i32 0
  %8 = load %"class.v8::internal::PreParser"*, %"class.v8::internal::PreParser"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::PreParser", %"class.v8::internal::PreParser"* %8, i64 0, i32 3
  store %"class.v8::internal::PreparseDataBuilder"* %6, %"class.v8::internal::PreparseDataBuilder"** %9, align 8
  %10 = load %"class.v8::internal::PreparseDataBuilder"*, %"class.v8::internal::PreparseDataBuilder"** %3, align 8
  %11 = bitcast %"class.v8::internal::PreparseDataBuilder::DataGatheringScope"* %0 to %"class.v8::internal::ParserBase"**
  %12 = load %"class.v8::internal::ParserBase"*, %"class.v8::internal::ParserBase"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::ParserBase", %"class.v8::internal::ParserBase"* %12, i64 0, i32 7
  %14 = load %"class.v8::internal::AstValueFactory"*, %"class.v8::internal::AstValueFactory"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::AstValueFactory", %"class.v8::internal::AstValueFactory"* %14, i64 0, i32 6
  %16 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %15, align 8
  tail call void @_ZN2v88internal19PreparseDataBuilder16FinalizeChildrenEPNS0_4ZoneE(%"class.v8::internal::PreparseDataBuilder"* %10, %"class.v8::internal::Zone"* %16)
  %17 = icmp eq %"class.v8::internal::PreparseDataBuilder"* %6, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %1
  %19 = load %"class.v8::internal::PreparseDataBuilder"*, %"class.v8::internal::PreparseDataBuilder"** %3, align 8
  %20 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %19, i64 0, i32 7
  %21 = load i8, i8* %20, align 4
  %22 = and i8 %21, 3
  %23 = icmp eq i8 %22, 2
  br i1 %23, label %28, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %19, i64 0, i32 3
  %26 = load %"class.v8::internal::DeclarationScope"*, %"class.v8::internal::DeclarationScope"** %25, align 8
  %27 = icmp eq %"class.v8::internal::DeclarationScope"* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %24, %18
  %29 = bitcast %"class.v8::internal::PreparseDataBuilder"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29)
  store %"class.v8::internal::PreparseDataBuilder"* %19, %"class.v8::internal::PreparseDataBuilder"** %2, align 8
  %30 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %6, i64 0, i32 2, i32 0
  call void @_ZN2v88internal10ScopedListIPNS0_19PreparseDataBuilderEPvE3AddERKS3_(%"class.v8::internal::ScopedList"* %30, %"class.v8::internal::PreparseDataBuilder"** nonnull dereferenceable(8) %2) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29)
  br label %31

31:                                               ; preds = %24, %1, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal19PreparseDataBuilder16FinalizeChildrenEPNS0_4ZoneE(%"class.v8::internal::PreparseDataBuilder"* nocapture, %"class.v8::internal::Zone"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %union.anon.1, %union.anon.1* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::vector.2"*, %"class.std::__1::vector.2"** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %5, i64 0, i32 0, i32 0
  %7 = load i8**, i8*** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %0, i64 0, i32 2, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds i8*, i8** %7, i64 %9
  %11 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %0, i64 0, i32 2, i32 0, i32 2
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %12, %9
  %14 = shl i64 %13, 32
  %15 = ashr exact i64 %14, 32
  %16 = trunc i64 %15 to i32
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %41, label %18

18:                                               ; preds = %2
  %19 = ashr exact i64 %14, 29
  %20 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 3
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %23, %21
  %25 = icmp ugt i64 %19, %24
  br i1 %25, label %26, label %28, !prof !2

26:                                               ; preds = %18
  %27 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 %19) #12
  br label %30

28:                                               ; preds = %18
  %29 = add i64 %21, %19
  store i64 %29, i64* %20, align 8
  br label %30

30:                                               ; preds = %28, %26
  %31 = phi i64 [ %27, %26 ], [ %21, %28 ]
  %32 = inttoptr i64 %31 to %"class.v8::internal::PreparseDataBuilder"**
  %33 = inttoptr i64 %31 to i8*
  %34 = bitcast i8** %10 to i8*
  switch i64 %19, label %40 [
    i64 16, label %39
    i64 8, label %35
  ]

35:                                               ; preds = %30
  %36 = bitcast i8** %10 to i64*
  %37 = inttoptr i64 %31 to i64*
  %38 = load i64, i64* %36, align 1
  store i64 %38, i64* %37, align 1
  br label %41

39:                                               ; preds = %30
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %33, i8* align 1 %34, i64 16, i1 false) #12
  br label %41

40:                                               ; preds = %30
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %33, i8* align 1 %34, i64 %19, i1 false) #12
  br label %41

41:                                               ; preds = %2, %35, %39, %40
  %42 = phi %"class.v8::internal::PreparseDataBuilder"** [ null, %2 ], [ %32, %35 ], [ %32, %39 ], [ %32, %40 ]
  %43 = phi i64 [ 0, %2 ], [ %15, %35 ], [ %15, %39 ], [ %15, %40 ]
  %44 = load %"class.std::__1::vector.2"*, %"class.std::__1::vector.2"** %4, align 8
  %45 = load i64, i64* %8, align 8
  %46 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %44, i64 0, i32 0, i32 1
  %47 = bitcast i8*** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.std::__1::vector.2"* %44 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = sub i64 %48, %50
  %52 = ashr exact i64 %51, 3
  %53 = icmp ugt i64 %45, %52
  %54 = inttoptr i64 %50 to i8**
  br i1 %53, label %55, label %57

55:                                               ; preds = %41
  %56 = sub i64 %45, %52
  tail call void @_ZNSt3__16vectorIPvNS_9allocatorIS1_EEE8__appendEm(%"class.std::__1::vector.2"* %44, i64 %56) #12
  br label %61

57:                                               ; preds = %41
  %58 = icmp ult i64 %45, %52
  br i1 %58, label %59, label %61

59:                                               ; preds = %57
  %60 = getelementptr inbounds i8*, i8** %54, i64 %45
  store i8** %60, i8*** %46, align 8
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = load i64, i64* %8, align 8
  store i64 %62, i64* %11, align 8
  %63 = bitcast %union.anon.1* %3 to %"class.v8::internal::PreparseDataBuilder"***
  store %"class.v8::internal::PreparseDataBuilder"** %42, %"class.v8::internal::PreparseDataBuilder"*** %63, align 8
  store i64 %43, i64* %8, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal19PreparseDataBuilder16HasDataForParentEv(%"class.v8::internal::PreparseDataBuilder"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %0, i64 0, i32 7
  %3 = load i8, i8* %2, align 4
  %4 = and i8 %3, 3
  %5 = icmp eq i8 %4, 2
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %0, i64 0, i32 3
  %8 = load %"class.v8::internal::DeclarationScope"*, %"class.v8::internal::DeclarationScope"** %7, align 8
  %9 = icmp ne %"class.v8::internal::DeclarationScope"* %8, null
  br label %10

10:                                               ; preds = %6, %1
  %11 = phi i1 [ true, %1 ], [ %9, %6 ]
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal19PreparseDataBuilder8AddChildEPS1_(%"class.v8::internal::PreparseDataBuilder"*, %"class.v8::internal::PreparseDataBuilder"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.v8::internal::PreparseDataBuilder"*, align 8
  store %"class.v8::internal::PreparseDataBuilder"* %1, %"class.v8::internal::PreparseDataBuilder"** %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %0, i64 0, i32 2, i32 0
  call void @_ZN2v88internal10ScopedListIPNS0_19PreparseDataBuilderEPvE3AddERKS3_(%"class.v8::internal::ScopedList"* %4, %"class.v8::internal::PreparseDataBuilder"** nonnull dereferenceable(8) %3)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal19PreparseDataBuilder8ByteData5StartEPNSt3__16vectorIhNS3_9allocatorIhEEEE(%"class.v8::internal::PreparseDataBuilder::ByteData"* nocapture, %"class.std::__1::vector"*) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder::ByteData", %"class.v8::internal::PreparseDataBuilder::ByteData"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::vector"* %1, %"class.std::__1::vector"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal19PreparseDataBuilder8ByteData8FinalizeEPNS0_4ZoneE(%"class.v8::internal::PreparseDataBuilder::ByteData"* nocapture, %"class.v8::internal::Zone"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder::ByteData", %"class.v8::internal::PreparseDataBuilder::ByteData"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = sext i32 %4 to i64
  %6 = add nsw i64 %5, 7
  %7 = and i64 %6, -8
  %8 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %11, %9
  %13 = icmp ugt i64 %7, %12
  br i1 %13, label %14, label %16, !prof !2

14:                                               ; preds = %2
  %15 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 %7) #12
  br label %18

16:                                               ; preds = %2
  %17 = add i64 %7, %9
  store i64 %17, i64* %8, align 8
  br label %18

18:                                               ; preds = %14, %16
  %19 = phi i64 [ %15, %14 ], [ %9, %16 ]
  %20 = inttoptr i64 %19 to i8*
  %21 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder::ByteData", %"class.v8::internal::PreparseDataBuilder::ByteData"* %0, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %21, align 8
  %23 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %22, i64 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = load i32, i32* %3, align 8
  %26 = sext i32 %25 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %20, i8* align 1 %24, i64 %26, i1 false) #12
  %27 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %21, align 8
  %28 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %27, i64 0, i32 0, i32 1
  %29 = bitcast i8** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.std::__1::vector"* %27 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = icmp eq i64 %30, %32
  br i1 %33, label %36, label %34

34:                                               ; preds = %18
  %35 = inttoptr i64 %32 to i8*
  store i8* %35, i8** %28, align 8
  br label %36

36:                                               ; preds = %18, %34
  %37 = load i32, i32* %3, align 8
  %38 = sext i32 %37 to i64
  %39 = bitcast %"class.v8::internal::PreparseDataBuilder::ByteData"* %0 to i8**
  store i8* %20, i8** %39, align 8
  %40 = bitcast i32* %3 to i64*
  store i64 %38, i64* %40, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal19PreparseDataBuilder8ByteData7ReserveEm(%"class.v8::internal::PreparseDataBuilder::ByteData"* nocapture readonly, i64) local_unnamed_addr #1 align 2 {
  %3 = alloca i8, align 1
  %4 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder::ByteData", %"class.v8::internal::PreparseDataBuilder::ByteData"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder::ByteData", %"class.v8::internal::PreparseDataBuilder::ByteData"* %0, i64 0, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = sext i32 %13 to i64
  %15 = sub i64 %11, %14
  %16 = icmp ult i64 %15, %1
  br i1 %16, label %17, label %21

17:                                               ; preds = %2
  %18 = inttoptr i64 %8 to i8*
  %19 = sub i64 %1, %15
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #12
  store i8 0, i8* %3, align 1
  %20 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertENS_11__wrap_iterIPKhEEmRS5_(%"class.std::__1::vector"* %5, i8* %18, i64 %19, i8* nonnull dereferenceable(1) %3)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #12
  br label %21

21:                                               ; preds = %2, %17
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2v88internal19PreparseDataBuilder8ByteData6lengthEv(%"class.v8::internal::PreparseDataBuilder::ByteData"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder::ByteData", %"class.v8::internal::PreparseDataBuilder::ByteData"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertENS_11__wrap_iterIPKhEEmRS5_(%"class.std::__1::vector"*, i8*, i64, i8* dereferenceable(1)) local_unnamed_addr #1 comdat align 2 {
  %5 = ptrtoint i8* %1 to i64
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %7 = icmp eq i64 %2, 0
  br i1 %7, label %543, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = bitcast i8** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %13 = load i8*, i8** %12, align 8
  %14 = ptrtoint i8* %13 to i64
  %15 = sub i64 %11, %14
  %16 = icmp ult i64 %15, %2
  br i1 %16, label %326, label %17

17:                                               ; preds = %8
  %18 = sub i64 %14, %5
  %19 = icmp ult i64 %18, %2
  br i1 %19, label %20, label %96

20:                                               ; preds = %17
  %21 = sub i64 %2, %18
  %22 = bitcast i8** %12 to i64*
  %23 = getelementptr inbounds i8, i8* %13, i64 %21
  %24 = icmp eq i64 %21, 0
  br i1 %24, label %91, label %25

25:                                               ; preds = %20
  %26 = icmp ult i64 %21, 32
  br i1 %26, label %27, label %29

27:                                               ; preds = %82, %29, %25
  %28 = phi i8* [ %13, %29 ], [ %13, %25 ], [ %36, %82 ]
  br label %86

29:                                               ; preds = %25
  %30 = getelementptr i8, i8* %3, i64 1
  %31 = icmp ult i8* %13, %30
  %32 = icmp ugt i8* %23, %3
  %33 = and i1 %31, %32
  br i1 %33, label %27, label %34

34:                                               ; preds = %29
  %35 = and i64 %21, -32
  %36 = getelementptr i8, i8* %13, i64 %35
  %37 = add i64 %35, -32
  %38 = lshr exact i64 %37, 5
  %39 = add nuw nsw i64 %38, 1
  %40 = and i64 %39, 1
  %41 = icmp eq i64 %37, 0
  br i1 %41, label %69, label %42

42:                                               ; preds = %34
  %43 = sub nuw nsw i64 %39, %40
  %44 = load i8, i8* %3, align 1, !alias.scope !3
  %45 = insertelement <16 x i8> undef, i8 %44, i32 0
  %46 = shufflevector <16 x i8> %45, <16 x i8> undef, <16 x i32> zeroinitializer
  %47 = insertelement <16 x i8> undef, i8 %44, i32 0
  %48 = shufflevector <16 x i8> %47, <16 x i8> undef, <16 x i32> zeroinitializer
  %49 = load i8, i8* %3, align 1, !alias.scope !3
  %50 = insertelement <16 x i8> undef, i8 %49, i32 0
  %51 = shufflevector <16 x i8> %50, <16 x i8> undef, <16 x i32> zeroinitializer
  %52 = insertelement <16 x i8> undef, i8 %49, i32 0
  %53 = shufflevector <16 x i8> %52, <16 x i8> undef, <16 x i32> zeroinitializer
  br label %54

54:                                               ; preds = %54, %42
  %55 = phi i64 [ 0, %42 ], [ %66, %54 ]
  %56 = phi i64 [ %43, %42 ], [ %67, %54 ]
  %57 = getelementptr i8, i8* %13, i64 %55
  %58 = bitcast i8* %57 to <16 x i8>*
  store <16 x i8> %46, <16 x i8>* %58, align 1, !alias.scope !6, !noalias !3
  %59 = getelementptr i8, i8* %57, i64 16
  %60 = bitcast i8* %59 to <16 x i8>*
  store <16 x i8> %48, <16 x i8>* %60, align 1, !alias.scope !6, !noalias !3
  %61 = or i64 %55, 32
  %62 = getelementptr i8, i8* %13, i64 %61
  %63 = bitcast i8* %62 to <16 x i8>*
  store <16 x i8> %51, <16 x i8>* %63, align 1, !alias.scope !6, !noalias !3
  %64 = getelementptr i8, i8* %62, i64 16
  %65 = bitcast i8* %64 to <16 x i8>*
  store <16 x i8> %53, <16 x i8>* %65, align 1, !alias.scope !6, !noalias !3
  %66 = add i64 %55, 64
  %67 = add i64 %56, -2
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %54, !llvm.loop !8

69:                                               ; preds = %54, %34
  %70 = phi i64 [ 0, %34 ], [ %66, %54 ]
  %71 = icmp eq i64 %40, 0
  br i1 %71, label %82, label %72

72:                                               ; preds = %69
  %73 = getelementptr i8, i8* %13, i64 %70
  %74 = load i8, i8* %3, align 1, !alias.scope !3
  %75 = insertelement <16 x i8> undef, i8 %74, i32 0
  %76 = shufflevector <16 x i8> %75, <16 x i8> undef, <16 x i32> zeroinitializer
  %77 = insertelement <16 x i8> undef, i8 %74, i32 0
  %78 = shufflevector <16 x i8> %77, <16 x i8> undef, <16 x i32> zeroinitializer
  %79 = bitcast i8* %73 to <16 x i8>*
  store <16 x i8> %76, <16 x i8>* %79, align 1, !alias.scope !6, !noalias !3
  %80 = getelementptr i8, i8* %73, i64 16
  %81 = bitcast i8* %80 to <16 x i8>*
  store <16 x i8> %78, <16 x i8>* %81, align 1, !alias.scope !6, !noalias !3
  br label %82

82:                                               ; preds = %69, %72
  %83 = icmp eq i64 %21, %35
  br i1 %83, label %84, label %27

84:                                               ; preds = %86, %82
  %85 = ptrtoint i8* %23 to i64
  br label %91

86:                                               ; preds = %27, %86
  %87 = phi i8* [ %89, %86 ], [ %28, %27 ]
  %88 = load i8, i8* %3, align 1
  store i8 %88, i8* %87, align 1
  %89 = getelementptr inbounds i8, i8* %87, i64 1
  %90 = icmp eq i8* %89, %23
  br i1 %90, label %84, label %86, !llvm.loop !10

91:                                               ; preds = %84, %20
  %92 = phi i64 [ %85, %84 ], [ %14, %20 ]
  store i64 %92, i64* %22, align 8
  %93 = icmp eq i64 %18, 0
  br i1 %93, label %543, label %94

94:                                               ; preds = %91
  %95 = inttoptr i64 %92 to i8*
  br label %96

96:                                               ; preds = %94, %17
  %97 = phi i64 [ %92, %94 ], [ %14, %17 ]
  %98 = phi i8* [ %95, %94 ], [ %13, %17 ]
  %99 = phi i64 [ %18, %94 ], [ %2, %17 ]
  %100 = getelementptr inbounds i8, i8* %1, i64 %2
  %101 = ptrtoint i8* %100 to i64
  %102 = sub i64 %97, %101
  %103 = getelementptr inbounds i8, i8* %1, i64 %102
  %104 = icmp ult i8* %103, %13
  br i1 %104, label %105, label %205

105:                                              ; preds = %96
  %106 = sub i64 %2, %97
  %107 = getelementptr i8, i8* %13, i64 %106
  %108 = ptrtoint i8* %107 to i64
  %109 = icmp ult i8* %107, inttoptr (i64 32 to i8*)
  br i1 %109, label %110, label %113

110:                                              ; preds = %200, %113, %105
  %111 = phi i8* [ %103, %113 ], [ %103, %105 ], [ %123, %200 ]
  %112 = phi i8* [ %98, %113 ], [ %98, %105 ], [ %124, %200 ]
  br label %212

113:                                              ; preds = %105
  %114 = sub i64 %2, %97
  %115 = getelementptr i8, i8* %13, i64 %114
  %116 = ptrtoint i8* %115 to i64
  %117 = getelementptr i8, i8* %98, i64 %116
  %118 = icmp ult i8* %98, %13
  %119 = icmp ult i8* %103, %117
  %120 = and i1 %118, %119
  br i1 %120, label %110, label %121

121:                                              ; preds = %113
  %122 = and i64 %108, -32
  %123 = getelementptr i8, i8* %103, i64 %122
  %124 = getelementptr i8, i8* %98, i64 %122
  %125 = add i64 %122, -32
  %126 = lshr exact i64 %125, 5
  %127 = add nuw nsw i64 %126, 1
  %128 = and i64 %127, 3
  %129 = icmp ult i64 %125, 96
  br i1 %129, label %181, label %130

130:                                              ; preds = %121
  %131 = sub nsw i64 %127, %128
  br label %132

132:                                              ; preds = %132, %130
  %133 = phi i64 [ 0, %130 ], [ %178, %132 ]
  %134 = phi i64 [ %131, %130 ], [ %179, %132 ]
  %135 = getelementptr i8, i8* %103, i64 %133
  %136 = getelementptr i8, i8* %98, i64 %133
  %137 = bitcast i8* %135 to <16 x i8>*
  %138 = load <16 x i8>, <16 x i8>* %137, align 1, !alias.scope !11
  %139 = getelementptr i8, i8* %135, i64 16
  %140 = bitcast i8* %139 to <16 x i8>*
  %141 = load <16 x i8>, <16 x i8>* %140, align 1, !alias.scope !11
  %142 = bitcast i8* %136 to <16 x i8>*
  store <16 x i8> %138, <16 x i8>* %142, align 1, !alias.scope !14, !noalias !11
  %143 = getelementptr i8, i8* %136, i64 16
  %144 = bitcast i8* %143 to <16 x i8>*
  store <16 x i8> %141, <16 x i8>* %144, align 1, !alias.scope !14, !noalias !11
  %145 = or i64 %133, 32
  %146 = getelementptr i8, i8* %103, i64 %145
  %147 = getelementptr i8, i8* %98, i64 %145
  %148 = bitcast i8* %146 to <16 x i8>*
  %149 = load <16 x i8>, <16 x i8>* %148, align 1, !alias.scope !11
  %150 = getelementptr i8, i8* %146, i64 16
  %151 = bitcast i8* %150 to <16 x i8>*
  %152 = load <16 x i8>, <16 x i8>* %151, align 1, !alias.scope !11
  %153 = bitcast i8* %147 to <16 x i8>*
  store <16 x i8> %149, <16 x i8>* %153, align 1, !alias.scope !14, !noalias !11
  %154 = getelementptr i8, i8* %147, i64 16
  %155 = bitcast i8* %154 to <16 x i8>*
  store <16 x i8> %152, <16 x i8>* %155, align 1, !alias.scope !14, !noalias !11
  %156 = or i64 %133, 64
  %157 = getelementptr i8, i8* %103, i64 %156
  %158 = getelementptr i8, i8* %98, i64 %156
  %159 = bitcast i8* %157 to <16 x i8>*
  %160 = load <16 x i8>, <16 x i8>* %159, align 1, !alias.scope !11
  %161 = getelementptr i8, i8* %157, i64 16
  %162 = bitcast i8* %161 to <16 x i8>*
  %163 = load <16 x i8>, <16 x i8>* %162, align 1, !alias.scope !11
  %164 = bitcast i8* %158 to <16 x i8>*
  store <16 x i8> %160, <16 x i8>* %164, align 1, !alias.scope !14, !noalias !11
  %165 = getelementptr i8, i8* %158, i64 16
  %166 = bitcast i8* %165 to <16 x i8>*
  store <16 x i8> %163, <16 x i8>* %166, align 1, !alias.scope !14, !noalias !11
  %167 = or i64 %133, 96
  %168 = getelementptr i8, i8* %103, i64 %167
  %169 = getelementptr i8, i8* %98, i64 %167
  %170 = bitcast i8* %168 to <16 x i8>*
  %171 = load <16 x i8>, <16 x i8>* %170, align 1, !alias.scope !11
  %172 = getelementptr i8, i8* %168, i64 16
  %173 = bitcast i8* %172 to <16 x i8>*
  %174 = load <16 x i8>, <16 x i8>* %173, align 1, !alias.scope !11
  %175 = bitcast i8* %169 to <16 x i8>*
  store <16 x i8> %171, <16 x i8>* %175, align 1, !alias.scope !14, !noalias !11
  %176 = getelementptr i8, i8* %169, i64 16
  %177 = bitcast i8* %176 to <16 x i8>*
  store <16 x i8> %174, <16 x i8>* %177, align 1, !alias.scope !14, !noalias !11
  %178 = add i64 %133, 128
  %179 = add i64 %134, -4
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %181, label %132, !llvm.loop !16

181:                                              ; preds = %132, %121
  %182 = phi i64 [ 0, %121 ], [ %178, %132 ]
  %183 = icmp eq i64 %128, 0
  br i1 %183, label %200, label %184

184:                                              ; preds = %181, %184
  %185 = phi i64 [ %197, %184 ], [ %182, %181 ]
  %186 = phi i64 [ %198, %184 ], [ %128, %181 ]
  %187 = getelementptr i8, i8* %103, i64 %185
  %188 = getelementptr i8, i8* %98, i64 %185
  %189 = bitcast i8* %187 to <16 x i8>*
  %190 = load <16 x i8>, <16 x i8>* %189, align 1, !alias.scope !11
  %191 = getelementptr i8, i8* %187, i64 16
  %192 = bitcast i8* %191 to <16 x i8>*
  %193 = load <16 x i8>, <16 x i8>* %192, align 1, !alias.scope !11
  %194 = bitcast i8* %188 to <16 x i8>*
  store <16 x i8> %190, <16 x i8>* %194, align 1, !alias.scope !14, !noalias !11
  %195 = getelementptr i8, i8* %188, i64 16
  %196 = bitcast i8* %195 to <16 x i8>*
  store <16 x i8> %193, <16 x i8>* %196, align 1, !alias.scope !14, !noalias !11
  %197 = add i64 %185, 32
  %198 = add i64 %186, -1
  %199 = icmp eq i64 %198, 0
  br i1 %199, label %200, label %184, !llvm.loop !17

200:                                              ; preds = %184, %181
  %201 = icmp eq i64 %122, %108
  br i1 %201, label %202, label %110

202:                                              ; preds = %212, %200
  %203 = phi i8* [ %124, %200 ], [ %217, %212 ]
  %204 = ptrtoint i8* %203 to i64
  br label %205

205:                                              ; preds = %202, %96
  %206 = phi i64 [ %204, %202 ], [ %97, %96 ]
  %207 = bitcast i8** %12 to i64*
  store i64 %206, i64* %207, align 8
  %208 = icmp eq i64 %102, 0
  br i1 %208, label %219, label %209

209:                                              ; preds = %205
  %210 = sub i64 0, %102
  %211 = getelementptr inbounds i8, i8* %98, i64 %210
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %211, i8* align 1 %1, i64 %102, i1 false) #12
  br label %219

212:                                              ; preds = %110, %212
  %213 = phi i8* [ %216, %212 ], [ %111, %110 ]
  %214 = phi i8* [ %217, %212 ], [ %112, %110 ]
  %215 = load i8, i8* %213, align 1
  store i8 %215, i8* %214, align 1
  %216 = getelementptr inbounds i8, i8* %213, i64 1
  %217 = getelementptr inbounds i8, i8* %214, i64 1
  %218 = icmp eq i8* %216, %13
  br i1 %218, label %202, label %212, !llvm.loop !19

219:                                              ; preds = %205, %209
  %220 = icmp ugt i8* %1, %3
  br i1 %220, label %226, label %221

221:                                              ; preds = %219
  %222 = load i8*, i8** %12, align 8
  %223 = icmp ugt i8* %222, %3
  %224 = getelementptr inbounds i8, i8* %3, i64 %2
  %225 = select i1 %223, i8* %224, i8* %3
  br label %226

226:                                              ; preds = %221, %219
  %227 = phi i8* [ %3, %219 ], [ %225, %221 ]
  %228 = icmp ult i64 %99, 32
  br i1 %228, label %286, label %229

229:                                              ; preds = %226
  %230 = getelementptr i8, i8* %1, i64 %99
  %231 = getelementptr i8, i8* %227, i64 1
  %232 = icmp ugt i8* %231, %1
  %233 = icmp ult i8* %227, %230
  %234 = and i1 %232, %233
  br i1 %234, label %286, label %235

235:                                              ; preds = %229
  %236 = and i64 %99, -32
  %237 = getelementptr i8, i8* %1, i64 %236
  %238 = sub i64 %99, %236
  %239 = add i64 %236, -32
  %240 = lshr exact i64 %239, 5
  %241 = add nuw nsw i64 %240, 1
  %242 = and i64 %241, 1
  %243 = icmp eq i64 %239, 0
  br i1 %243, label %271, label %244

244:                                              ; preds = %235
  %245 = sub nuw nsw i64 %241, %242
  %246 = load i8, i8* %227, align 1, !alias.scope !20
  %247 = insertelement <16 x i8> undef, i8 %246, i32 0
  %248 = shufflevector <16 x i8> %247, <16 x i8> undef, <16 x i32> zeroinitializer
  %249 = insertelement <16 x i8> undef, i8 %246, i32 0
  %250 = shufflevector <16 x i8> %249, <16 x i8> undef, <16 x i32> zeroinitializer
  %251 = load i8, i8* %227, align 1, !alias.scope !20
  %252 = insertelement <16 x i8> undef, i8 %251, i32 0
  %253 = shufflevector <16 x i8> %252, <16 x i8> undef, <16 x i32> zeroinitializer
  %254 = insertelement <16 x i8> undef, i8 %251, i32 0
  %255 = shufflevector <16 x i8> %254, <16 x i8> undef, <16 x i32> zeroinitializer
  br label %256

256:                                              ; preds = %256, %244
  %257 = phi i64 [ 0, %244 ], [ %268, %256 ]
  %258 = phi i64 [ %245, %244 ], [ %269, %256 ]
  %259 = getelementptr i8, i8* %1, i64 %257
  %260 = bitcast i8* %259 to <16 x i8>*
  store <16 x i8> %248, <16 x i8>* %260, align 1, !alias.scope !23, !noalias !20
  %261 = getelementptr i8, i8* %259, i64 16
  %262 = bitcast i8* %261 to <16 x i8>*
  store <16 x i8> %250, <16 x i8>* %262, align 1, !alias.scope !23, !noalias !20
  %263 = or i64 %257, 32
  %264 = getelementptr i8, i8* %1, i64 %263
  %265 = bitcast i8* %264 to <16 x i8>*
  store <16 x i8> %253, <16 x i8>* %265, align 1, !alias.scope !23, !noalias !20
  %266 = getelementptr i8, i8* %264, i64 16
  %267 = bitcast i8* %266 to <16 x i8>*
  store <16 x i8> %255, <16 x i8>* %267, align 1, !alias.scope !23, !noalias !20
  %268 = add i64 %257, 64
  %269 = add i64 %258, -2
  %270 = icmp eq i64 %269, 0
  br i1 %270, label %271, label %256, !llvm.loop !25

271:                                              ; preds = %256, %235
  %272 = phi i64 [ 0, %235 ], [ %268, %256 ]
  %273 = icmp eq i64 %242, 0
  br i1 %273, label %284, label %274

274:                                              ; preds = %271
  %275 = getelementptr i8, i8* %1, i64 %272
  %276 = load i8, i8* %227, align 1, !alias.scope !20
  %277 = insertelement <16 x i8> undef, i8 %276, i32 0
  %278 = shufflevector <16 x i8> %277, <16 x i8> undef, <16 x i32> zeroinitializer
  %279 = insertelement <16 x i8> undef, i8 %276, i32 0
  %280 = shufflevector <16 x i8> %279, <16 x i8> undef, <16 x i32> zeroinitializer
  %281 = bitcast i8* %275 to <16 x i8>*
  store <16 x i8> %278, <16 x i8>* %281, align 1, !alias.scope !23, !noalias !20
  %282 = getelementptr i8, i8* %275, i64 16
  %283 = bitcast i8* %282 to <16 x i8>*
  store <16 x i8> %280, <16 x i8>* %283, align 1, !alias.scope !23, !noalias !20
  br label %284

284:                                              ; preds = %271, %274
  %285 = icmp eq i64 %99, %236
  br i1 %285, label %543, label %286

286:                                              ; preds = %284, %229, %226
  %287 = phi i8* [ %1, %229 ], [ %1, %226 ], [ %237, %284 ]
  %288 = phi i64 [ %99, %229 ], [ %99, %226 ], [ %238, %284 ]
  %289 = add i64 %288, -1
  %290 = and i64 %288, 7
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %301, label %292

292:                                              ; preds = %286, %292
  %293 = phi i8* [ %297, %292 ], [ %287, %286 ]
  %294 = phi i64 [ %298, %292 ], [ %288, %286 ]
  %295 = phi i64 [ %299, %292 ], [ %290, %286 ]
  %296 = load i8, i8* %227, align 1
  store i8 %296, i8* %293, align 1
  %297 = getelementptr inbounds i8, i8* %293, i64 1
  %298 = add i64 %294, -1
  %299 = add i64 %295, -1
  %300 = icmp eq i64 %299, 0
  br i1 %300, label %301, label %292, !llvm.loop !26

301:                                              ; preds = %292, %286
  %302 = phi i8* [ %287, %286 ], [ %297, %292 ]
  %303 = phi i64 [ %288, %286 ], [ %298, %292 ]
  %304 = icmp ult i64 %289, 7
  br i1 %304, label %543, label %305

305:                                              ; preds = %301, %305
  %306 = phi i8* [ %323, %305 ], [ %302, %301 ]
  %307 = phi i64 [ %324, %305 ], [ %303, %301 ]
  %308 = load i8, i8* %227, align 1
  store i8 %308, i8* %306, align 1
  %309 = getelementptr inbounds i8, i8* %306, i64 1
  %310 = load i8, i8* %227, align 1
  store i8 %310, i8* %309, align 1
  %311 = getelementptr inbounds i8, i8* %306, i64 2
  %312 = load i8, i8* %227, align 1
  store i8 %312, i8* %311, align 1
  %313 = getelementptr inbounds i8, i8* %306, i64 3
  %314 = load i8, i8* %227, align 1
  store i8 %314, i8* %313, align 1
  %315 = getelementptr inbounds i8, i8* %306, i64 4
  %316 = load i8, i8* %227, align 1
  store i8 %316, i8* %315, align 1
  %317 = getelementptr inbounds i8, i8* %306, i64 5
  %318 = load i8, i8* %227, align 1
  store i8 %318, i8* %317, align 1
  %319 = getelementptr inbounds i8, i8* %306, i64 6
  %320 = load i8, i8* %227, align 1
  store i8 %320, i8* %319, align 1
  %321 = getelementptr inbounds i8, i8* %306, i64 7
  %322 = load i8, i8* %227, align 1
  store i8 %322, i8* %321, align 1
  %323 = getelementptr inbounds i8, i8* %306, i64 8
  %324 = add i64 %307, -8
  %325 = icmp eq i64 %324, 0
  br i1 %325, label %543, label %305, !llvm.loop !27

326:                                              ; preds = %8
  %327 = bitcast i8** %12 to i64*
  %328 = bitcast %"class.std::__1::vector"* %0 to i64*
  %329 = load i64, i64* %328, align 8
  %330 = sub i64 %14, %329
  %331 = add i64 %330, %2
  %332 = icmp slt i64 %331, 0
  br i1 %332, label %333, label %335

333:                                              ; preds = %326
  %334 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %334) #13
  unreachable

335:                                              ; preds = %326
  %336 = sub i64 %11, %329
  %337 = icmp ult i64 %336, 4611686018427387903
  br i1 %337, label %340, label %338

338:                                              ; preds = %335
  %339 = sub i64 %5, %329
  br label %346

340:                                              ; preds = %335
  %341 = shl i64 %336, 1
  %342 = icmp ult i64 %341, %331
  %343 = select i1 %342, i64 %331, i64 %341
  %344 = sub i64 %5, %329
  %345 = icmp eq i64 %343, 0
  br i1 %345, label %350, label %346

346:                                              ; preds = %338, %340
  %347 = phi i64 [ %339, %338 ], [ %344, %340 ]
  %348 = phi i64 [ 9223372036854775807, %338 ], [ %343, %340 ]
  %349 = tail call i8* @_Znwm(i64 %348) #14
  br label %350

350:                                              ; preds = %340, %346
  %351 = phi i64 [ %347, %346 ], [ %344, %340 ]
  %352 = phi i64 [ %348, %346 ], [ 0, %340 ]
  %353 = phi i8* [ %349, %346 ], [ null, %340 ]
  %354 = getelementptr inbounds i8, i8* %353, i64 %351
  %355 = getelementptr inbounds i8, i8* %353, i64 %352
  %356 = getelementptr inbounds i8, i8* %354, i64 %2
  %357 = icmp ult i64 %2, 32
  br i1 %357, label %413, label %358

358:                                              ; preds = %350
  %359 = getelementptr i8, i8* %3, i64 1
  %360 = icmp ult i8* %354, %359
  %361 = icmp ugt i8* %356, %3
  %362 = and i1 %360, %361
  br i1 %362, label %413, label %363

363:                                              ; preds = %358
  %364 = and i64 %2, -32
  %365 = getelementptr i8, i8* %354, i64 %364
  %366 = add i64 %364, -32
  %367 = lshr exact i64 %366, 5
  %368 = add nuw nsw i64 %367, 1
  %369 = and i64 %368, 1
  %370 = icmp eq i64 %366, 0
  br i1 %370, label %398, label %371

371:                                              ; preds = %363
  %372 = sub nuw nsw i64 %368, %369
  %373 = load i8, i8* %3, align 1, !alias.scope !28
  %374 = insertelement <16 x i8> undef, i8 %373, i32 0
  %375 = shufflevector <16 x i8> %374, <16 x i8> undef, <16 x i32> zeroinitializer
  %376 = insertelement <16 x i8> undef, i8 %373, i32 0
  %377 = shufflevector <16 x i8> %376, <16 x i8> undef, <16 x i32> zeroinitializer
  %378 = load i8, i8* %3, align 1, !alias.scope !28
  %379 = insertelement <16 x i8> undef, i8 %378, i32 0
  %380 = shufflevector <16 x i8> %379, <16 x i8> undef, <16 x i32> zeroinitializer
  %381 = insertelement <16 x i8> undef, i8 %378, i32 0
  %382 = shufflevector <16 x i8> %381, <16 x i8> undef, <16 x i32> zeroinitializer
  br label %383

383:                                              ; preds = %383, %371
  %384 = phi i64 [ 0, %371 ], [ %395, %383 ]
  %385 = phi i64 [ %372, %371 ], [ %396, %383 ]
  %386 = getelementptr i8, i8* %354, i64 %384
  %387 = bitcast i8* %386 to <16 x i8>*
  store <16 x i8> %375, <16 x i8>* %387, align 1, !alias.scope !31, !noalias !28
  %388 = getelementptr i8, i8* %386, i64 16
  %389 = bitcast i8* %388 to <16 x i8>*
  store <16 x i8> %377, <16 x i8>* %389, align 1, !alias.scope !31, !noalias !28
  %390 = or i64 %384, 32
  %391 = getelementptr i8, i8* %354, i64 %390
  %392 = bitcast i8* %391 to <16 x i8>*
  store <16 x i8> %380, <16 x i8>* %392, align 1, !alias.scope !31, !noalias !28
  %393 = getelementptr i8, i8* %391, i64 16
  %394 = bitcast i8* %393 to <16 x i8>*
  store <16 x i8> %382, <16 x i8>* %394, align 1, !alias.scope !31, !noalias !28
  %395 = add i64 %384, 64
  %396 = add i64 %385, -2
  %397 = icmp eq i64 %396, 0
  br i1 %397, label %398, label %383, !llvm.loop !33

398:                                              ; preds = %383, %363
  %399 = phi i64 [ 0, %363 ], [ %395, %383 ]
  %400 = icmp eq i64 %369, 0
  br i1 %400, label %411, label %401

401:                                              ; preds = %398
  %402 = getelementptr i8, i8* %354, i64 %399
  %403 = load i8, i8* %3, align 1, !alias.scope !28
  %404 = insertelement <16 x i8> undef, i8 %403, i32 0
  %405 = shufflevector <16 x i8> %404, <16 x i8> undef, <16 x i32> zeroinitializer
  %406 = insertelement <16 x i8> undef, i8 %403, i32 0
  %407 = shufflevector <16 x i8> %406, <16 x i8> undef, <16 x i32> zeroinitializer
  %408 = bitcast i8* %402 to <16 x i8>*
  store <16 x i8> %405, <16 x i8>* %408, align 1, !alias.scope !31, !noalias !28
  %409 = getelementptr i8, i8* %402, i64 16
  %410 = bitcast i8* %409 to <16 x i8>*
  store <16 x i8> %407, <16 x i8>* %410, align 1, !alias.scope !31, !noalias !28
  br label %411

411:                                              ; preds = %398, %401
  %412 = icmp eq i64 %364, %2
  br i1 %412, label %420, label %413

413:                                              ; preds = %411, %358, %350
  %414 = phi i8* [ %354, %358 ], [ %354, %350 ], [ %365, %411 ]
  br label %415

415:                                              ; preds = %413, %415
  %416 = phi i8* [ %418, %415 ], [ %414, %413 ]
  %417 = load i8, i8* %3, align 1
  store i8 %417, i8* %416, align 1
  %418 = getelementptr inbounds i8, i8* %416, i64 1
  %419 = icmp eq i8* %356, %418
  br i1 %419, label %420, label %415, !llvm.loop !34

420:                                              ; preds = %415, %411
  %421 = ptrtoint i8* %355 to i64
  %422 = load i8*, i8** %6, align 8
  %423 = ptrtoint i8* %422 to i64
  %424 = sub i64 %5, %423
  %425 = sub i64 0, %424
  %426 = getelementptr inbounds i8, i8* %354, i64 %425
  %427 = ptrtoint i8* %426 to i64
  %428 = icmp sgt i64 %424, 0
  br i1 %428, label %429, label %430

429:                                              ; preds = %420
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %426, i8* align 1 %422, i64 %424, i1 false) #12
  br label %430

430:                                              ; preds = %429, %420
  %431 = load i8*, i8** %12, align 8
  %432 = icmp eq i8* %431, %1
  br i1 %432, label %537, label %433

433:                                              ; preds = %430
  %434 = ptrtoint i8* %431 to i64
  %435 = sub i64 %434, %5
  %436 = icmp ult i64 %435, 32
  br i1 %436, label %527, label %437

437:                                              ; preds = %433
  %438 = add i64 %351, %2
  %439 = sub i64 %438, %5
  %440 = getelementptr i8, i8* %431, i64 %439
  %441 = ptrtoint i8* %440 to i64
  %442 = getelementptr i8, i8* %353, i64 %441
  %443 = icmp ult i8* %356, %431
  %444 = icmp ugt i8* %442, %1
  %445 = and i1 %443, %444
  br i1 %445, label %527, label %446

446:                                              ; preds = %437
  %447 = and i64 %435, -32
  %448 = getelementptr i8, i8* %356, i64 %447
  %449 = getelementptr i8, i8* %1, i64 %447
  %450 = add i64 %447, -32
  %451 = lshr exact i64 %450, 5
  %452 = add nuw nsw i64 %451, 1
  %453 = and i64 %452, 3
  %454 = icmp ult i64 %450, 96
  br i1 %454, label %506, label %455

455:                                              ; preds = %446
  %456 = sub nsw i64 %452, %453
  br label %457

457:                                              ; preds = %457, %455
  %458 = phi i64 [ 0, %455 ], [ %503, %457 ]
  %459 = phi i64 [ %456, %455 ], [ %504, %457 ]
  %460 = getelementptr i8, i8* %356, i64 %458
  %461 = getelementptr i8, i8* %1, i64 %458
  %462 = bitcast i8* %461 to <16 x i8>*
  %463 = load <16 x i8>, <16 x i8>* %462, align 1, !alias.scope !35
  %464 = getelementptr i8, i8* %461, i64 16
  %465 = bitcast i8* %464 to <16 x i8>*
  %466 = load <16 x i8>, <16 x i8>* %465, align 1, !alias.scope !35
  %467 = bitcast i8* %460 to <16 x i8>*
  store <16 x i8> %463, <16 x i8>* %467, align 1, !alias.scope !38, !noalias !35
  %468 = getelementptr i8, i8* %460, i64 16
  %469 = bitcast i8* %468 to <16 x i8>*
  store <16 x i8> %466, <16 x i8>* %469, align 1, !alias.scope !38, !noalias !35
  %470 = or i64 %458, 32
  %471 = getelementptr i8, i8* %356, i64 %470
  %472 = getelementptr i8, i8* %1, i64 %470
  %473 = bitcast i8* %472 to <16 x i8>*
  %474 = load <16 x i8>, <16 x i8>* %473, align 1, !alias.scope !35
  %475 = getelementptr i8, i8* %472, i64 16
  %476 = bitcast i8* %475 to <16 x i8>*
  %477 = load <16 x i8>, <16 x i8>* %476, align 1, !alias.scope !35
  %478 = bitcast i8* %471 to <16 x i8>*
  store <16 x i8> %474, <16 x i8>* %478, align 1, !alias.scope !38, !noalias !35
  %479 = getelementptr i8, i8* %471, i64 16
  %480 = bitcast i8* %479 to <16 x i8>*
  store <16 x i8> %477, <16 x i8>* %480, align 1, !alias.scope !38, !noalias !35
  %481 = or i64 %458, 64
  %482 = getelementptr i8, i8* %356, i64 %481
  %483 = getelementptr i8, i8* %1, i64 %481
  %484 = bitcast i8* %483 to <16 x i8>*
  %485 = load <16 x i8>, <16 x i8>* %484, align 1, !alias.scope !35
  %486 = getelementptr i8, i8* %483, i64 16
  %487 = bitcast i8* %486 to <16 x i8>*
  %488 = load <16 x i8>, <16 x i8>* %487, align 1, !alias.scope !35
  %489 = bitcast i8* %482 to <16 x i8>*
  store <16 x i8> %485, <16 x i8>* %489, align 1, !alias.scope !38, !noalias !35
  %490 = getelementptr i8, i8* %482, i64 16
  %491 = bitcast i8* %490 to <16 x i8>*
  store <16 x i8> %488, <16 x i8>* %491, align 1, !alias.scope !38, !noalias !35
  %492 = or i64 %458, 96
  %493 = getelementptr i8, i8* %356, i64 %492
  %494 = getelementptr i8, i8* %1, i64 %492
  %495 = bitcast i8* %494 to <16 x i8>*
  %496 = load <16 x i8>, <16 x i8>* %495, align 1, !alias.scope !35
  %497 = getelementptr i8, i8* %494, i64 16
  %498 = bitcast i8* %497 to <16 x i8>*
  %499 = load <16 x i8>, <16 x i8>* %498, align 1, !alias.scope !35
  %500 = bitcast i8* %493 to <16 x i8>*
  store <16 x i8> %496, <16 x i8>* %500, align 1, !alias.scope !38, !noalias !35
  %501 = getelementptr i8, i8* %493, i64 16
  %502 = bitcast i8* %501 to <16 x i8>*
  store <16 x i8> %499, <16 x i8>* %502, align 1, !alias.scope !38, !noalias !35
  %503 = add i64 %458, 128
  %504 = add i64 %459, -4
  %505 = icmp eq i64 %504, 0
  br i1 %505, label %506, label %457, !llvm.loop !40

506:                                              ; preds = %457, %446
  %507 = phi i64 [ 0, %446 ], [ %503, %457 ]
  %508 = icmp eq i64 %453, 0
  br i1 %508, label %525, label %509

509:                                              ; preds = %506, %509
  %510 = phi i64 [ %522, %509 ], [ %507, %506 ]
  %511 = phi i64 [ %523, %509 ], [ %453, %506 ]
  %512 = getelementptr i8, i8* %356, i64 %510
  %513 = getelementptr i8, i8* %1, i64 %510
  %514 = bitcast i8* %513 to <16 x i8>*
  %515 = load <16 x i8>, <16 x i8>* %514, align 1, !alias.scope !35
  %516 = getelementptr i8, i8* %513, i64 16
  %517 = bitcast i8* %516 to <16 x i8>*
  %518 = load <16 x i8>, <16 x i8>* %517, align 1, !alias.scope !35
  %519 = bitcast i8* %512 to <16 x i8>*
  store <16 x i8> %515, <16 x i8>* %519, align 1, !alias.scope !38, !noalias !35
  %520 = getelementptr i8, i8* %512, i64 16
  %521 = bitcast i8* %520 to <16 x i8>*
  store <16 x i8> %518, <16 x i8>* %521, align 1, !alias.scope !38, !noalias !35
  %522 = add i64 %510, 32
  %523 = add i64 %511, -1
  %524 = icmp eq i64 %523, 0
  br i1 %524, label %525, label %509, !llvm.loop !41

525:                                              ; preds = %509, %506
  %526 = icmp eq i64 %435, %447
  br i1 %526, label %537, label %527

527:                                              ; preds = %525, %437, %433
  %528 = phi i8* [ %356, %437 ], [ %356, %433 ], [ %448, %525 ]
  %529 = phi i8* [ %1, %437 ], [ %1, %433 ], [ %449, %525 ]
  br label %530

530:                                              ; preds = %527, %530
  %531 = phi i8* [ %535, %530 ], [ %528, %527 ]
  %532 = phi i8* [ %534, %530 ], [ %529, %527 ]
  %533 = load i8, i8* %532, align 1
  store i8 %533, i8* %531, align 1
  %534 = getelementptr inbounds i8, i8* %532, i64 1
  %535 = getelementptr inbounds i8, i8* %531, i64 1
  %536 = icmp eq i8* %534, %431
  br i1 %536, label %537, label %530, !llvm.loop !42

537:                                              ; preds = %530, %525, %430
  %538 = phi i8* [ %356, %430 ], [ %448, %525 ], [ %535, %530 ]
  %539 = ptrtoint i8* %538 to i64
  %540 = load i8*, i8** %6, align 8
  store i64 %427, i64* %328, align 8
  store i64 %539, i64* %327, align 8
  store i64 %421, i64* %10, align 8
  %541 = icmp eq i8* %540, null
  br i1 %541, label %543, label %542

542:                                              ; preds = %537
  tail call void @_ZdlPv(i8* nonnull %540) #14
  br label %543

543:                                              ; preds = %301, %305, %284, %542, %537, %91, %4
  %544 = phi i8* [ %1, %4 ], [ %1, %91 ], [ %354, %537 ], [ %354, %542 ], [ %1, %284 ], [ %1, %305 ], [ %1, %301 ]
  ret i8* %544
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal19PreparseDataBuilder8ByteData3AddEh(%"class.v8::internal::PreparseDataBuilder::ByteData"* nocapture, i8 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder::ByteData", %"class.v8::internal::PreparseDataBuilder::ByteData"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder::ByteData", %"class.v8::internal::PreparseDataBuilder::ByteData"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add nsw i32 %6, 1
  store i32 %7, i32* %5, align 8
  %8 = sext i32 %6 to i64
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %8
  store i8 %1, i8* %11, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal19PreparseDataBuilder8ByteData13WriteVarint32Ej(%"class.v8::internal::PreparseDataBuilder::ByteData"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder::ByteData", %"class.v8::internal::PreparseDataBuilder::ByteData"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder::ByteData", %"class.v8::internal::PreparseDataBuilder::ByteData"* %0, i64 0, i32 0, i32 0, i32 1
  br label %5

5:                                                ; preds = %5, %2
  %6 = phi i32 [ %1, %2 ], [ %9, %5 ]
  %7 = trunc i32 %6 to i8
  %8 = and i8 %7, 127
  %9 = lshr i32 %6, 7
  %10 = icmp ne i32 %9, 0
  %11 = or i8 %7, -128
  %12 = select i1 %10, i8 %11, i8 %8
  %13 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %3, align 8
  %14 = load i32, i32* %4, align 8
  %15 = add nsw i32 %14, 1
  store i32 %15, i32* %4, align 8
  %16 = sext i32 %14 to i64
  %17 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %13, i64 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 %16
  store i8 %12, i8* %19, align 1
  br i1 %10, label %5, label %20

20:                                               ; preds = %5
  %21 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder::ByteData", %"class.v8::internal::PreparseDataBuilder::ByteData"* %0, i64 0, i32 1
  store i8 0, i8* %21, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal19PreparseDataBuilder8ByteData10WriteUint8Eh(%"class.v8::internal::PreparseDataBuilder::ByteData"* nocapture, i8 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder::ByteData", %"class.v8::internal::PreparseDataBuilder::ByteData"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder::ByteData", %"class.v8::internal::PreparseDataBuilder::ByteData"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add nsw i32 %6, 1
  store i32 %7, i32* %5, align 8
  %8 = sext i32 %6 to i64
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %8
  store i8 %1, i8* %11, align 1
  %12 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder::ByteData", %"class.v8::internal::PreparseDataBuilder::ByteData"* %0, i64 0, i32 1
  store i8 0, i8* %12, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal19PreparseDataBuilder8ByteData12WriteQuarterEh(%"class.v8::internal::PreparseDataBuilder::ByteData"* nocapture, i8 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder::ByteData", %"class.v8::internal::PreparseDataBuilder::ByteData"* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %16

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder::ByteData", %"class.v8::internal::PreparseDataBuilder::ByteData"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder::ByteData", %"class.v8::internal::PreparseDataBuilder::ByteData"* %0, i64 0, i32 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = add nsw i32 %10, 1
  store i32 %11, i32* %9, align 8
  %12 = sext i32 %10 to i64
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %12
  store i8 0, i8* %15, align 1
  br label %18

16:                                               ; preds = %2
  %17 = add i8 %4, -1
  br label %18

18:                                               ; preds = %16, %6
  %19 = phi i8 [ %17, %16 ], [ 3, %6 ]
  store i8 %19, i8* %3, align 8
  %20 = shl i8 %19, 1
  %21 = zext i8 %1 to i32
  %22 = zext i8 %20 to i32
  %23 = shl i32 %21, %22
  %24 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder::ByteData", %"class.v8::internal::PreparseDataBuilder::ByteData"* %0, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder::ByteData", %"class.v8::internal::PreparseDataBuilder::ByteData"* %0, i64 0, i32 0, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = add nsw i32 %27, -1
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %25, i64 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds i8, i8* %31, i64 %29
  %33 = load i8, i8* %32, align 1
  %34 = trunc i32 %23 to i8
  %35 = or i8 %33, %34
  store i8 %35, i8* %32, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal19PreparseDataBuilder18DataGatheringScope20SetSkippableFunctionEPNS0_16DeclarationScopeEii(%"class.v8::internal::PreparseDataBuilder::DataGatheringScope"* nocapture readonly, %"class.v8::internal::DeclarationScope"*, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder::DataGatheringScope", %"class.v8::internal::PreparseDataBuilder::DataGatheringScope"* %0, i64 0, i32 1
  %6 = load %"class.v8::internal::PreparseDataBuilder"*, %"class.v8::internal::PreparseDataBuilder"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %6, i64 0, i32 3
  store %"class.v8::internal::DeclarationScope"* %1, %"class.v8::internal::DeclarationScope"** %7, align 8
  %8 = load %"class.v8::internal::PreparseDataBuilder"*, %"class.v8::internal::PreparseDataBuilder"** %5, align 8
  %9 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %8, i64 0, i32 4
  store i32 %2, i32* %9, align 8
  %10 = load %"class.v8::internal::PreparseDataBuilder"*, %"class.v8::internal::PreparseDataBuilder"** %5, align 8
  %11 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %10, i64 0, i32 5
  store i32 %3, i32* %11, align 4
  %12 = load %"class.v8::internal::PreparseDataBuilder"*, %"class.v8::internal::PreparseDataBuilder"** %5, align 8
  %13 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %12, i64 0, i32 0
  %14 = load %"class.v8::internal::PreparseDataBuilder"*, %"class.v8::internal::PreparseDataBuilder"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %14, i64 0, i32 7
  %16 = load i8, i8* %15, align 4
  %17 = or i8 %16, 2
  store i8 %17, i8* %15, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal19PreparseDataBuilder17HasInnerFunctionsEv(%"class.v8::internal::PreparseDataBuilder"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %0, i64 0, i32 2, i32 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = icmp ne i64 %3, 0
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal19PreparseDataBuilder7HasDataEv(%"class.v8::internal::PreparseDataBuilder"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %0, i64 0, i32 7
  %3 = load i8, i8* %2, align 4
  %4 = and i8 %3, 3
  %5 = icmp eq i8 %4, 2
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal10ScopedListIPNS0_19PreparseDataBuilderEPvE3AddERKS3_(%"class.v8::internal::ScopedList"*, %"class.v8::internal::PreparseDataBuilder"** dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::ScopedList", %"class.v8::internal::ScopedList"* %0, i64 0, i32 0
  %4 = load %"class.std::__1::vector.2"*, %"class.std::__1::vector.2"** %3, align 8
  %5 = bitcast %"class.v8::internal::PreparseDataBuilder"** %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %4, i64 0, i32 0, i32 1
  %8 = load i8**, i8*** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load i8**, i8*** %9, align 8
  %11 = icmp ult i8** %8, %10
  %12 = ptrtoint i8** %10 to i64
  br i1 %11, label %13, label %18

13:                                               ; preds = %2
  %14 = bitcast i8** %8 to i64*
  store i64 %6, i64* %14, align 8
  %15 = getelementptr inbounds i8*, i8** %8, i64 1
  %16 = ptrtoint i8** %15 to i64
  %17 = bitcast i8*** %7 to i64*
  store i64 %16, i64* %17, align 8
  br label %75

18:                                               ; preds = %2
  %19 = ptrtoint i8** %8 to i64
  %20 = bitcast i8*** %7 to i64*
  %21 = bitcast %"class.std::__1::vector.2"* %4 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %19, %22
  %24 = ashr exact i64 %23, 3
  %25 = add nsw i64 %24, 1
  %26 = icmp ugt i64 %25, 2305843009213693951
  br i1 %26, label %27, label %29

27:                                               ; preds = %18
  %28 = bitcast %"class.std::__1::vector.2"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %28) #13
  unreachable

29:                                               ; preds = %18
  %30 = bitcast i8*** %9 to i64*
  %31 = sub i64 %12, %22
  %32 = ashr exact i64 %31, 3
  %33 = icmp ult i64 %32, 1152921504606846975
  br i1 %33, label %34, label %42

34:                                               ; preds = %29
  %35 = ashr exact i64 %31, 2
  %36 = icmp ult i64 %35, %25
  %37 = select i1 %36, i64 %25, i64 %35
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %47, label %39

39:                                               ; preds = %34
  %40 = icmp ugt i64 %37, 2305843009213693951
  br i1 %40, label %41, label %42

41:                                               ; preds = %39
  tail call void @abort() #13
  unreachable

42:                                               ; preds = %39, %29
  %43 = phi i64 [ %37, %39 ], [ 2305843009213693951, %29 ]
  %44 = shl i64 %43, 3
  %45 = tail call i8* @_Znwm(i64 %44) #14
  %46 = bitcast i8* %45 to i8**
  br label %47

47:                                               ; preds = %42, %34
  %48 = phi i64 [ %43, %42 ], [ 0, %34 ]
  %49 = phi i8** [ %46, %42 ], [ null, %34 ]
  %50 = getelementptr inbounds i8*, i8** %49, i64 %24
  %51 = getelementptr inbounds i8*, i8** %49, i64 %48
  %52 = ptrtoint i8** %51 to i64
  %53 = bitcast i8** %50 to i64*
  store i64 %6, i64* %53, align 8
  %54 = getelementptr inbounds i8*, i8** %50, i64 1
  %55 = ptrtoint i8** %54 to i64
  %56 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %4, i64 0, i32 0, i32 0
  %57 = load i8**, i8*** %56, align 8
  %58 = load i64, i64* %20, align 8
  %59 = ptrtoint i8** %57 to i64
  %60 = sub i64 %58, %59
  %61 = ashr exact i64 %60, 3
  %62 = sub nsw i64 0, %61
  %63 = getelementptr inbounds i8*, i8** %50, i64 %62
  %64 = ptrtoint i8** %63 to i64
  %65 = icmp sgt i64 %60, 0
  br i1 %65, label %66, label %70

66:                                               ; preds = %47
  %67 = bitcast i8** %63 to i8*
  %68 = bitcast i8** %57 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* align 8 %68, i64 %60, i1 false) #12
  %69 = load i8**, i8*** %56, align 8
  br label %70

70:                                               ; preds = %66, %47
  %71 = phi i8** [ %57, %47 ], [ %69, %66 ]
  store i64 %64, i64* %21, align 8
  store i64 %55, i64* %20, align 8
  store i64 %52, i64* %30, align 8
  %72 = icmp eq i8** %71, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %70
  %74 = bitcast i8** %71 to i8*
  tail call void @_ZdlPv(i8* %74) #14
  br label %75

75:                                               ; preds = %13, %70, %73
  %76 = getelementptr inbounds %"class.v8::internal::ScopedList", %"class.v8::internal::ScopedList"* %0, i64 0, i32 2
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 1
  store i64 %78, i64* %76, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal19PreparseDataBuilder14ScopeNeedsDataEPNS0_5ScopeE(%"class.v8::internal::Scope"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 12
  %3 = load i8, i8* %2, align 8
  %4 = icmp eq i8 %3, 2
  br i1 %4, label %5, label %11

5:                                                ; preds = %1
  %6 = tail call %"class.v8::internal::DeclarationScope"* @_ZN2v88internal5Scope18AsDeclarationScopeEv(%"class.v8::internal::Scope"* %0) #12
  %7 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %6, i64 0, i32 2
  %8 = load i8, i8* %7, align 1
  %9 = and i8 %8, -2
  %10 = icmp ne i8 %9, 4
  br label %48

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 13
  %13 = load i16, i16* %12, align 1
  %14 = and i16 %13, 16
  %15 = icmp eq i16 %14, 0
  br i1 %15, label %16, label %32

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 4, i32 0
  %18 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 4, i32 1
  %19 = load %"class.v8::internal::Variable"**, %"class.v8::internal::Variable"*** %18, align 8
  %20 = icmp eq %"class.v8::internal::Variable"** %17, %19
  br i1 %20, label %32, label %21

21:                                               ; preds = %16, %29
  %22 = phi %"class.v8::internal::Variable"** [ %30, %29 ], [ %17, %16 ]
  %23 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %23, i64 0, i32 6
  %25 = load i16, i16* %24, align 8
  %26 = trunc i16 %25 to i8
  %27 = and i8 %26, 15
  %28 = icmp ult i8 %27, 11
  br i1 %28, label %43, label %29

29:                                               ; preds = %43, %21
  %30 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %23, i64 0, i32 3
  %31 = icmp eq %"class.v8::internal::Variable"** %30, %19
  br i1 %31, label %32, label %21

32:                                               ; preds = %29, %16, %11
  %33 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 1
  %34 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %33, align 8
  %35 = icmp eq %"class.v8::internal::Scope"* %34, null
  br i1 %35, label %48, label %40

36:                                               ; preds = %40
  %37 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %41, i64 0, i32 2
  %38 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %37, align 8
  %39 = icmp eq %"class.v8::internal::Scope"* %38, null
  br i1 %39, label %48, label %40

40:                                               ; preds = %32, %36
  %41 = phi %"class.v8::internal::Scope"* [ %38, %36 ], [ %34, %32 ]
  %42 = tail call zeroext i1 @_ZN2v88internal19PreparseDataBuilder14ScopeNeedsDataEPNS0_5ScopeE(%"class.v8::internal::Scope"* nonnull %41)
  br i1 %42, label %48, label %36

43:                                               ; preds = %21
  %44 = zext i8 %27 to i16
  %45 = lshr i16 1927, %44
  %46 = and i16 %45, 1
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %29, label %48

48:                                               ; preds = %5, %32, %36, %40, %43
  %49 = phi i1 [ true, %43 ], [ %10, %5 ], [ false, %32 ], [ true, %40 ], [ false, %36 ]
  ret i1 %49
}

declare %"class.v8::internal::DeclarationScope"* @_ZN2v88internal5Scope18AsDeclarationScopeEv(%"class.v8::internal::Scope"*) local_unnamed_addr #5

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal19PreparseDataBuilder28SaveDataForSkippableFunctionEPS1_(%"class.v8::internal::PreparseDataBuilder"* nocapture, %"class.v8::internal::PreparseDataBuilder"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %1, i64 0, i32 3
  %4 = load %"class.v8::internal::DeclarationScope"*, %"class.v8::internal::DeclarationScope"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %4, i64 0, i32 0, i32 8
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  br label %9

9:                                                ; preds = %9, %2
  %10 = phi i32 [ %6, %2 ], [ %13, %9 ]
  %11 = trunc i32 %10 to i8
  %12 = and i8 %11, 127
  %13 = lshr i32 %10, 7
  %14 = icmp ne i32 %13, 0
  %15 = or i8 %11, -128
  %16 = select i1 %14, i8 %15, i8 %12
  %17 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %7, align 8
  %18 = load i32, i32* %8, align 8
  %19 = add nsw i32 %18, 1
  store i32 %19, i32* %8, align 8
  %20 = sext i32 %18 to i64
  %21 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %17, i64 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 %20
  store i8 %16, i8* %23, align 1
  br i1 %14, label %9, label %24

24:                                               ; preds = %9
  %25 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %0, i64 0, i32 1, i32 1
  store i8 0, i8* %25, align 8
  %26 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %4, i64 0, i32 0, i32 9
  %27 = load i32, i32* %26, align 4
  br label %28

28:                                               ; preds = %28, %24
  %29 = phi i32 [ %27, %24 ], [ %32, %28 ]
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 127
  %32 = lshr i32 %29, 7
  %33 = icmp ne i32 %32, 0
  %34 = or i8 %30, -128
  %35 = select i1 %33, i8 %34, i8 %31
  %36 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %7, align 8
  %37 = load i32, i32* %8, align 8
  %38 = add nsw i32 %37, 1
  store i32 %38, i32* %8, align 8
  %39 = sext i32 %37 to i64
  %40 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %36, i64 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = getelementptr inbounds i8, i8* %41, i64 %39
  store i8 %35, i8* %42, align 1
  br i1 %33, label %28, label %43

43:                                               ; preds = %28
  store i8 0, i8* %25, align 8
  %44 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %1, i64 0, i32 7
  %45 = load i8, i8* %44, align 4
  %46 = and i8 %45, 3
  %47 = icmp eq i8 %46, 2
  %48 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %4, i64 0, i32 4
  %49 = load i32, i32* %48, align 8
  %50 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %1, i64 0, i32 4
  %51 = load i32, i32* %50, align 8
  %52 = icmp eq i32 %49, %51
  %53 = zext i1 %47 to i32
  %54 = zext i1 %52 to i32
  %55 = shl nuw nsw i32 %54, 1
  %56 = shl i32 %49, 2
  %57 = and i32 %56, 262140
  %58 = or i32 %57, %53
  %59 = or i32 %58, %55
  br label %60

60:                                               ; preds = %60, %43
  %61 = phi i32 [ %59, %43 ], [ %64, %60 ]
  %62 = trunc i32 %61 to i8
  %63 = and i8 %62, 127
  %64 = lshr i32 %61, 7
  %65 = icmp ne i32 %64, 0
  %66 = or i8 %62, -128
  %67 = select i1 %65, i8 %66, i8 %63
  %68 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %7, align 8
  %69 = load i32, i32* %8, align 8
  %70 = add nsw i32 %69, 1
  store i32 %70, i32* %8, align 8
  %71 = sext i32 %69 to i64
  %72 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %68, i64 0, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8
  %74 = getelementptr inbounds i8, i8* %73, i64 %71
  store i8 %67, i8* %74, align 1
  br i1 %65, label %60, label %75

75:                                               ; preds = %60
  store i8 0, i8* %25, align 8
  br i1 %52, label %94, label %76

76:                                               ; preds = %75
  %77 = load i32, i32* %50, align 8
  br label %78

78:                                               ; preds = %78, %76
  %79 = phi i32 [ %77, %76 ], [ %82, %78 ]
  %80 = trunc i32 %79 to i8
  %81 = and i8 %80, 127
  %82 = lshr i32 %79, 7
  %83 = icmp ne i32 %82, 0
  %84 = or i8 %80, -128
  %85 = select i1 %83, i8 %84, i8 %81
  %86 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %7, align 8
  %87 = load i32, i32* %8, align 8
  %88 = add nsw i32 %87, 1
  store i32 %88, i32* %8, align 8
  %89 = sext i32 %87 to i64
  %90 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %86, i64 0, i32 0, i32 0
  %91 = load i8*, i8** %90, align 8
  %92 = getelementptr inbounds i8, i8* %91, i64 %89
  store i8 %85, i8* %92, align 1
  br i1 %83, label %78, label %93

93:                                               ; preds = %78
  store i8 0, i8* %25, align 8
  br label %94

94:                                               ; preds = %93, %75
  %95 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %1, i64 0, i32 5
  %96 = load i32, i32* %95, align 4
  br label %97

97:                                               ; preds = %97, %94
  %98 = phi i32 [ %96, %94 ], [ %101, %97 ]
  %99 = trunc i32 %98 to i8
  %100 = and i8 %99, 127
  %101 = lshr i32 %98, 7
  %102 = icmp ne i32 %101, 0
  %103 = or i8 %99, -128
  %104 = select i1 %102, i8 %103, i8 %100
  %105 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %7, align 8
  %106 = load i32, i32* %8, align 8
  %107 = add nsw i32 %106, 1
  store i32 %107, i32* %8, align 8
  %108 = sext i32 %106 to i64
  %109 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %105, i64 0, i32 0, i32 0
  %110 = load i8*, i8** %109, align 8
  %111 = getelementptr inbounds i8, i8* %110, i64 %108
  store i8 %104, i8* %111, align 1
  br i1 %102, label %97, label %112

112:                                              ; preds = %97
  store i8 0, i8* %25, align 8
  %113 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %4, i64 0, i32 0, i32 13
  %114 = load i16, i16* %113, align 1
  %115 = trunc i16 %114 to i8
  %116 = and i8 %115, 1
  %117 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %4, i64 0, i32 1
  %118 = load i16, i16* %117, align 1
  %119 = lshr i16 %118, 4
  %120 = trunc i16 %119 to i8
  %121 = and i8 %120, 2
  %122 = or i8 %121, %116
  %123 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %7, align 8
  %124 = load i32, i32* %8, align 8
  %125 = add nsw i32 %124, 1
  store i32 %125, i32* %8, align 8
  %126 = sext i32 %124 to i64
  %127 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %123, i64 0, i32 0, i32 0
  %128 = load i8*, i8** %127, align 8
  %129 = getelementptr inbounds i8, i8* %128, i64 %126
  store i8 0, i8* %129, align 1
  store i8 3, i8* %25, align 8
  %130 = shl nuw i8 %122, 6
  %131 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %7, align 8
  %132 = load i32, i32* %8, align 8
  %133 = add nsw i32 %132, -1
  %134 = sext i32 %133 to i64
  %135 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %131, i64 0, i32 0, i32 0
  %136 = load i8*, i8** %135, align 8
  %137 = getelementptr inbounds i8, i8* %136, i64 %134
  %138 = load i8, i8* %137, align 1
  %139 = or i8 %138, %130
  store i8 %139, i8* %137, align 1
  ret i1 %47
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal19PreparseDataBuilder23SaveScopeAllocationDataEPNS0_16DeclarationScopeEPNS0_6ParserE(%"class.v8::internal::PreparseDataBuilder"* nocapture, %"class.v8::internal::DeclarationScope"*, %"class.v8::internal::Parser"*) local_unnamed_addr #1 align 2 {
  %4 = alloca i8, align 1
  %5 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %0, i64 0, i32 7
  %6 = load i8, i8* %5, align 4
  %7 = and i8 %6, 2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %98, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"class.v8::internal::Parser", %"class.v8::internal::Parser"* %2, i64 0, i32 18
  %12 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder::ByteData", %"class.v8::internal::PreparseDataBuilder::ByteData"* %10, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::vector"* %11, %"class.std::__1::vector"** %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %0, i64 0, i32 2
  %14 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %0, i64 0, i32 2, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = mul i64 %15, 21
  %17 = getelementptr inbounds %"class.v8::internal::Parser", %"class.v8::internal::Parser"* %2, i64 0, i32 18, i32 0, i32 1
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector"* %11 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = sext i32 %24 to i64
  %26 = sub i64 %22, %25
  %27 = icmp ugt i64 %16, %26
  br i1 %27, label %28, label %33

28:                                               ; preds = %9
  %29 = inttoptr i64 %19 to i8*
  %30 = sub i64 %16, %26
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #12
  store i8 0, i8* %4, align 1
  %31 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertENS_11__wrap_iterIPKhEEmRS5_(%"class.std::__1::vector"* %11, i8* %29, i64 %30, i8* nonnull dereferenceable(1) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #12
  %32 = load i64, i64* %14, align 8
  br label %33

33:                                               ; preds = %9, %28
  %34 = phi i64 [ %15, %9 ], [ %32, %28 ]
  %35 = bitcast %union.anon.1* %13 to %"class.v8::internal::PreparseDataBuilder"***
  %36 = load %"class.v8::internal::PreparseDataBuilder"**, %"class.v8::internal::PreparseDataBuilder"*** %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder"*, %"class.v8::internal::PreparseDataBuilder"** %36, i64 %34
  %38 = icmp eq i64 %34, 0
  br i1 %38, label %41, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %0, i64 0, i32 6
  br label %45

41:                                               ; preds = %52, %33
  %42 = load i8, i8* %5, align 4
  %43 = and i8 %42, 1
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %55, label %59

45:                                               ; preds = %39, %52
  %46 = phi %"class.v8::internal::PreparseDataBuilder"** [ %36, %39 ], [ %53, %52 ]
  %47 = load %"class.v8::internal::PreparseDataBuilder"*, %"class.v8::internal::PreparseDataBuilder"** %46, align 8
  %48 = call zeroext i1 @_ZN2v88internal19PreparseDataBuilder28SaveDataForSkippableFunctionEPS1_(%"class.v8::internal::PreparseDataBuilder"* %0, %"class.v8::internal::PreparseDataBuilder"* %47)
  br i1 %48, label %49, label %52

49:                                               ; preds = %45
  %50 = load i32, i32* %40, align 8
  %51 = add nsw i32 %50, 1
  store i32 %51, i32* %40, align 8
  br label %52

52:                                               ; preds = %49, %45
  %53 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder"*, %"class.v8::internal::PreparseDataBuilder"** %46, i64 1
  %54 = icmp eq %"class.v8::internal::PreparseDataBuilder"** %53, %37
  br i1 %54, label %41, label %45

55:                                               ; preds = %41
  %56 = bitcast %"class.v8::internal::DeclarationScope"* %1 to %"class.v8::internal::Scope"*
  %57 = call zeroext i1 @_ZN2v88internal19PreparseDataBuilder14ScopeNeedsDataEPNS0_5ScopeE(%"class.v8::internal::Scope"* %56)
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  call void @_ZN2v88internal19PreparseDataBuilder16SaveDataForScopeEPNS0_5ScopeE(%"class.v8::internal::PreparseDataBuilder"* %0, %"class.v8::internal::Scope"* %56)
  br label %59

59:                                               ; preds = %41, %55, %58
  %60 = getelementptr inbounds %"class.v8::internal::Parser", %"class.v8::internal::Parser"* %2, i64 0, i32 0, i32 7, i32 0
  %61 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %60, align 8
  %62 = load i32, i32* %23, align 8
  %63 = sext i32 %62 to i64
  %64 = add nsw i64 %63, 7
  %65 = and i64 %64, -8
  %66 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 2
  %67 = load i64, i64* %66, align 8
  %68 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 3
  %69 = load i64, i64* %68, align 8
  %70 = sub i64 %69, %67
  %71 = icmp ugt i64 %65, %70
  br i1 %71, label %72, label %74, !prof !2

72:                                               ; preds = %59
  %73 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %61, i64 %65) #12
  br label %76

74:                                               ; preds = %59
  %75 = add i64 %65, %67
  store i64 %75, i64* %66, align 8
  br label %76

76:                                               ; preds = %74, %72
  %77 = phi i64 [ %73, %72 ], [ %67, %74 ]
  %78 = inttoptr i64 %77 to i8*
  %79 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %12, align 8
  %80 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %79, i64 0, i32 0, i32 0
  %81 = load i8*, i8** %80, align 8
  %82 = load i32, i32* %23, align 8
  %83 = sext i32 %82 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %78, i8* align 1 %81, i64 %83, i1 false) #12
  %84 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %12, align 8
  %85 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %84, i64 0, i32 0, i32 1
  %86 = bitcast i8** %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = bitcast %"class.std::__1::vector"* %84 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = icmp eq i64 %87, %89
  br i1 %90, label %93, label %91

91:                                               ; preds = %76
  %92 = inttoptr i64 %89 to i8*
  store i8* %92, i8** %85, align 8
  br label %93

93:                                               ; preds = %76, %91
  %94 = load i32, i32* %23, align 8
  %95 = sext i32 %94 to i64
  %96 = bitcast %"class.v8::internal::PreparseDataBuilder::ByteData"* %10 to i8**
  store i8* %78, i8** %96, align 8
  %97 = bitcast i32* %23 to i64*
  store i64 %95, i64* %97, align 8
  br label %98

98:                                               ; preds = %3, %93
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal19PreparseDataBuilder16SaveDataForScopeEPNS0_5ScopeE(%"class.v8::internal::PreparseDataBuilder"* nocapture, %"class.v8::internal::Scope"*) local_unnamed_addr #1 align 2 {
  %3 = alloca i8, align 1
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %1, i64 0, i32 13
  %7 = load i16, i16* %6, align 1
  %8 = and i16 %7, 256
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %18, label %10

10:                                               ; preds = %2
  %11 = tail call %"class.v8::internal::DeclarationScope"* @_ZN2v88internal5Scope18AsDeclarationScopeEv(%"class.v8::internal::Scope"* %1) #12
  %12 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %11, i64 0, i32 0, i32 13
  %13 = load i16, i16* %12, align 1
  %14 = lshr i16 %13, 2
  %15 = trunc i16 %14 to i8
  %16 = and i8 %15, 1
  %17 = load i16, i16* %6, align 1
  br label %18

18:                                               ; preds = %2, %10
  %19 = phi i16 [ %7, %2 ], [ %17, %10 ]
  %20 = phi i8 [ 0, %2 ], [ %16, %10 ]
  %21 = lshr i16 %19, 5
  %22 = trunc i16 %21 to i8
  %23 = and i8 %22, 2
  %24 = or i8 %23, %20
  %25 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %1, i64 0, i32 12
  %26 = load i8, i8* %25, align 8
  %27 = icmp eq i8 %26, 2
  br i1 %27, label %28, label %36

28:                                               ; preds = %18
  %29 = tail call %"class.v8::internal::DeclarationScope"* @_ZN2v88internal5Scope18AsDeclarationScopeEv(%"class.v8::internal::Scope"* %1) #12
  %30 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %29, i64 0, i32 1
  %31 = load i16, i16* %30, align 1
  %32 = load i8, i8* %25, align 8
  %33 = lshr i16 %31, 11
  %34 = trunc i16 %33 to i8
  %35 = and i8 %34, 4
  br label %36

36:                                               ; preds = %28, %18
  %37 = phi i8 [ %32, %28 ], [ %26, %18 ]
  %38 = phi i8 [ %35, %28 ], [ 0, %18 ]
  %39 = or i8 %24, %38
  %40 = icmp eq i8 %37, 0
  br i1 %40, label %41, label %60

41:                                               ; preds = %36
  %42 = tail call %"class.v8::internal::ClassScope"* @_ZN2v88internal5Scope12AsClassScopeEv(%"class.v8::internal::Scope"* %1) #12
  %43 = getelementptr inbounds %"class.v8::internal::ClassScope", %"class.v8::internal::ClassScope"* %42, i64 0, i32 7
  %44 = load i8, i8* %43, align 1, !range !43
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %60

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.v8::internal::ClassScope", %"class.v8::internal::ClassScope"* %42, i64 0, i32 5
  %48 = load i8, i8* %47, align 1, !range !43
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %60

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.v8::internal::ClassScope", %"class.v8::internal::ClassScope"* %42, i64 0, i32 4
  %52 = load i8, i8* %51, align 8, !range !43
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %60, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.v8::internal::ClassScope", %"class.v8::internal::ClassScope"* %42, i64 0, i32 0, i32 13
  %56 = load i16, i16* %55, align 1
  %57 = lshr i16 %56, 3
  %58 = trunc i16 %57 to i8
  %59 = and i8 %58, 8
  br label %60

60:                                               ; preds = %54, %50, %46, %41, %36
  %61 = phi i8 [ 0, %36 ], [ 8, %46 ], [ 8, %41 ], [ 0, %50 ], [ %59, %54 ]
  %62 = or i8 %39, %61
  %63 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %64 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %63, align 8
  %65 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %64, i64 0, i32 0, i32 1
  %66 = bitcast i8** %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.std::__1::vector"* %64 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = sub i64 %67, %69
  %71 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %72 = load i32, i32* %71, align 8
  %73 = sext i32 %72 to i64
  %74 = icmp eq i64 %70, %73
  br i1 %74, label %75, label %81

75:                                               ; preds = %60
  %76 = inttoptr i64 %67 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #12
  store i8 0, i8* %5, align 1
  %77 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertENS_11__wrap_iterIPKhEEmRS5_(%"class.std::__1::vector"* %64, i8* %76, i64 1, i8* nonnull dereferenceable(1) %5) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #12
  %78 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %63, align 8
  %79 = load i32, i32* %71, align 8
  %80 = sext i32 %79 to i64
  br label %81

81:                                               ; preds = %60, %75
  %82 = phi i64 [ %73, %60 ], [ %80, %75 ]
  %83 = phi i32 [ %72, %60 ], [ %79, %75 ]
  %84 = phi %"class.std::__1::vector"* [ %64, %60 ], [ %78, %75 ]
  %85 = add nsw i32 %83, 1
  store i32 %85, i32* %71, align 8
  %86 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %84, i64 0, i32 0, i32 0
  %87 = load i8*, i8** %86, align 8
  %88 = getelementptr inbounds i8, i8* %87, i64 %82
  store i8 %62, i8* %88, align 1
  %89 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %0, i64 0, i32 1, i32 1
  store i8 0, i8* %89, align 8
  %90 = load i8, i8* %25, align 8
  %91 = icmp eq i8 %90, 2
  br i1 %91, label %92, label %147

92:                                               ; preds = %81
  %93 = call %"class.v8::internal::DeclarationScope"* @_ZN2v88internal5Scope18AsDeclarationScopeEv(%"class.v8::internal::Scope"* %1) #12
  %94 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %93, i64 0, i32 9
  %95 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %94, align 8
  %96 = icmp eq %"class.v8::internal::Variable"* %95, null
  br i1 %96, label %147, label %97

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %95, i64 0, i32 6
  %99 = load i16, i16* %98, align 8
  %100 = lshr i16 %99, 14
  %101 = and i16 %100, 1
  %102 = lshr i16 %99, 9
  %103 = and i16 %102, 2
  %104 = or i16 %101, %103
  %105 = zext i16 %104 to i32
  %106 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %63, align 8
  %107 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %106, i64 0, i32 0, i32 1
  %108 = bitcast i8** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.std::__1::vector"* %106 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = sub i64 %109, %111
  %113 = load i32, i32* %71, align 8
  %114 = sext i32 %113 to i64
  %115 = icmp eq i64 %112, %114
  br i1 %115, label %116, label %119

116:                                              ; preds = %97
  %117 = inttoptr i64 %109 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #12
  store i8 0, i8* %4, align 1
  %118 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertENS_11__wrap_iterIPKhEEmRS5_(%"class.std::__1::vector"* %106, i8* %117, i64 1, i8* nonnull dereferenceable(1) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #12
  br label %119

119:                                              ; preds = %116, %97
  %120 = load i8, i8* %89, align 8
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %122, label %130

122:                                              ; preds = %119
  %123 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %63, align 8
  %124 = load i32, i32* %71, align 8
  %125 = add nsw i32 %124, 1
  store i32 %125, i32* %71, align 8
  %126 = sext i32 %124 to i64
  %127 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %123, i64 0, i32 0, i32 0
  %128 = load i8*, i8** %127, align 8
  %129 = getelementptr inbounds i8, i8* %128, i64 %126
  store i8 0, i8* %129, align 1
  br label %132

130:                                              ; preds = %119
  %131 = add i8 %120, -1
  br label %132

132:                                              ; preds = %122, %130
  %133 = phi i8 [ %131, %130 ], [ 3, %122 ]
  store i8 %133, i8* %89, align 8
  %134 = shl i8 %133, 1
  %135 = zext i8 %134 to i32
  %136 = shl i32 %105, %135
  %137 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %63, align 8
  %138 = load i32, i32* %71, align 8
  %139 = add nsw i32 %138, -1
  %140 = sext i32 %139 to i64
  %141 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %137, i64 0, i32 0, i32 0
  %142 = load i8*, i8** %141, align 8
  %143 = getelementptr inbounds i8, i8* %142, i64 %140
  %144 = load i8, i8* %143, align 1
  %145 = trunc i32 %136 to i8
  %146 = or i8 %144, %145
  store i8 %146, i8* %143, align 1
  br label %147

147:                                              ; preds = %132, %92, %81
  %148 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %1, i64 0, i32 4, i32 0
  %149 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %1, i64 0, i32 4, i32 1
  %150 = load %"class.v8::internal::Variable"**, %"class.v8::internal::Variable"*** %149, align 8
  %151 = icmp eq %"class.v8::internal::Variable"** %148, %150
  br i1 %151, label %152, label %167

152:                                              ; preds = %223, %147
  %153 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %1, i64 0, i32 1
  %154 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %153, align 8
  %155 = icmp eq %"class.v8::internal::Scope"* %154, null
  br i1 %155, label %166, label %156

156:                                              ; preds = %152, %162
  %157 = phi %"class.v8::internal::Scope"* [ %164, %162 ], [ %154, %152 ]
  %158 = call zeroext i1 @_ZN2v88internal5Scope24IsSkippableFunctionScopeEv(%"class.v8::internal::Scope"* nonnull %157) #12
  br i1 %158, label %162, label %159

159:                                              ; preds = %156
  %160 = call zeroext i1 @_ZN2v88internal19PreparseDataBuilder14ScopeNeedsDataEPNS0_5ScopeE(%"class.v8::internal::Scope"* nonnull %157) #12
  br i1 %160, label %161, label %162

161:                                              ; preds = %159
  call void @_ZN2v88internal19PreparseDataBuilder16SaveDataForScopeEPNS0_5ScopeE(%"class.v8::internal::PreparseDataBuilder"* %0, %"class.v8::internal::Scope"* nonnull %157) #12
  br label %162

162:                                              ; preds = %161, %159, %156
  %163 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %157, i64 0, i32 2
  %164 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %163, align 8
  %165 = icmp eq %"class.v8::internal::Scope"* %164, null
  br i1 %165, label %166, label %156

166:                                              ; preds = %162, %152
  ret void

167:                                              ; preds = %147, %223
  %168 = phi %"class.v8::internal::Variable"** [ %225, %223 ], [ %148, %147 ]
  %169 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %168, align 8
  %170 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %169, i64 0, i32 6
  %171 = load i16, i16* %170, align 8
  %172 = trunc i16 %171 to i8
  %173 = and i8 %172, 15
  switch i8 %173, label %223 [
    i8 10, label %174
    i8 9, label %174
    i8 8, label %174
    i8 7, label %174
    i8 2, label %174
    i8 1, label %174
    i8 0, label %174
  ]

174:                                              ; preds = %167, %167, %167, %167, %167, %167, %167
  %175 = lshr i16 %171, 14
  %176 = and i16 %175, 1
  %177 = lshr i16 %171, 9
  %178 = and i16 %177, 2
  %179 = or i16 %176, %178
  %180 = zext i16 %179 to i32
  %181 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %63, align 8
  %182 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %181, i64 0, i32 0, i32 1
  %183 = bitcast i8** %182 to i64*
  %184 = load i64, i64* %183, align 8
  %185 = bitcast %"class.std::__1::vector"* %181 to i64*
  %186 = load i64, i64* %185, align 8
  %187 = sub i64 %184, %186
  %188 = load i32, i32* %71, align 8
  %189 = sext i32 %188 to i64
  %190 = icmp eq i64 %187, %189
  br i1 %190, label %191, label %194

191:                                              ; preds = %174
  %192 = inttoptr i64 %184 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #12
  store i8 0, i8* %3, align 1
  %193 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertENS_11__wrap_iterIPKhEEmRS5_(%"class.std::__1::vector"* %181, i8* %192, i64 1, i8* nonnull dereferenceable(1) %3) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #12
  br label %194

194:                                              ; preds = %191, %174
  %195 = load i8, i8* %89, align 8
  %196 = icmp eq i8 %195, 0
  br i1 %196, label %197, label %205

197:                                              ; preds = %194
  %198 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %63, align 8
  %199 = load i32, i32* %71, align 8
  %200 = add nsw i32 %199, 1
  store i32 %200, i32* %71, align 8
  %201 = sext i32 %199 to i64
  %202 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %198, i64 0, i32 0, i32 0
  %203 = load i8*, i8** %202, align 8
  %204 = getelementptr inbounds i8, i8* %203, i64 %201
  store i8 0, i8* %204, align 1
  br label %207

205:                                              ; preds = %194
  %206 = add i8 %195, -1
  br label %207

207:                                              ; preds = %197, %205
  %208 = phi i8 [ %206, %205 ], [ 3, %197 ]
  store i8 %208, i8* %89, align 8
  %209 = shl i8 %208, 1
  %210 = zext i8 %209 to i32
  %211 = shl i32 %180, %210
  %212 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %63, align 8
  %213 = load i32, i32* %71, align 8
  %214 = add nsw i32 %213, -1
  %215 = sext i32 %214 to i64
  %216 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %212, i64 0, i32 0, i32 0
  %217 = load i8*, i8** %216, align 8
  %218 = getelementptr inbounds i8, i8* %217, i64 %215
  %219 = load i8, i8* %218, align 1
  %220 = trunc i32 %211 to i8
  %221 = or i8 %219, %220
  store i8 %221, i8* %218, align 1
  %222 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %168, align 8
  br label %223

223:                                              ; preds = %167, %207
  %224 = phi %"class.v8::internal::Variable"* [ %169, %167 ], [ %222, %207 ]
  %225 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %224, i64 0, i32 3
  %226 = icmp eq %"class.v8::internal::Variable"** %225, %150
  br i1 %226, label %152, label %167
}

declare %"class.v8::internal::ClassScope"* @_ZN2v88internal5Scope12AsClassScopeEv(%"class.v8::internal::Scope"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal19PreparseDataBuilder19SaveDataForVariableEPNS0_8VariableE(%"class.v8::internal::PreparseDataBuilder"* nocapture, %"class.v8::internal::Variable"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = alloca i8, align 1
  %4 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %1, i64 0, i32 6
  %5 = load i16, i16* %4, align 8
  %6 = lshr i16 %5, 14
  %7 = and i16 %6, 1
  %8 = lshr i16 %5, 9
  %9 = and i16 %8, 2
  %10 = or i16 %7, %9
  %11 = zext i16 %10 to i32
  %12 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %13, i64 0, i32 0, i32 1
  %15 = bitcast i8** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector"* %13 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = sext i32 %21 to i64
  %23 = icmp eq i64 %19, %22
  br i1 %23, label %24, label %27

24:                                               ; preds = %2
  %25 = inttoptr i64 %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #12
  store i8 0, i8* %3, align 1
  %26 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertENS_11__wrap_iterIPKhEEmRS5_(%"class.std::__1::vector"* %13, i8* %25, i64 1, i8* nonnull dereferenceable(1) %3) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #12
  br label %27

27:                                               ; preds = %2, %24
  %28 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %0, i64 0, i32 1, i32 1
  %29 = load i8, i8* %28, align 8
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %39

31:                                               ; preds = %27
  %32 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %12, align 8
  %33 = load i32, i32* %20, align 8
  %34 = add nsw i32 %33, 1
  store i32 %34, i32* %20, align 8
  %35 = sext i32 %33 to i64
  %36 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %32, i64 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %35
  store i8 0, i8* %38, align 1
  br label %41

39:                                               ; preds = %27
  %40 = add i8 %29, -1
  br label %41

41:                                               ; preds = %31, %39
  %42 = phi i8 [ %40, %39 ], [ 3, %31 ]
  store i8 %42, i8* %28, align 8
  %43 = shl i8 %42, 1
  %44 = zext i8 %43 to i32
  %45 = shl i32 %11, %44
  %46 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %12, align 8
  %47 = load i32, i32* %20, align 8
  %48 = add nsw i32 %47, -1
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %46, i64 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  %52 = getelementptr inbounds i8, i8* %51, i64 %49
  %53 = load i8, i8* %52, align 1
  %54 = trunc i32 %45 to i8
  %55 = or i8 %53, %54
  store i8 %55, i8* %52, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal19PreparseDataBuilder22SaveDataForInnerScopesEPNS0_5ScopeE(%"class.v8::internal::PreparseDataBuilder"*, %"class.v8::internal::Scope"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %1, i64 0, i32 1
  %4 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %3, align 8
  %5 = icmp eq %"class.v8::internal::Scope"* %4, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %13, %2
  ret void

7:                                                ; preds = %2, %13
  %8 = phi %"class.v8::internal::Scope"* [ %15, %13 ], [ %4, %2 ]
  %9 = tail call zeroext i1 @_ZN2v88internal5Scope24IsSkippableFunctionScopeEv(%"class.v8::internal::Scope"* nonnull %8) #12
  br i1 %9, label %13, label %10

10:                                               ; preds = %7
  %11 = tail call zeroext i1 @_ZN2v88internal19PreparseDataBuilder14ScopeNeedsDataEPNS0_5ScopeE(%"class.v8::internal::Scope"* nonnull %8)
  br i1 %11, label %12, label %13

12:                                               ; preds = %10
  tail call void @_ZN2v88internal19PreparseDataBuilder16SaveDataForScopeEPNS0_5ScopeE(%"class.v8::internal::PreparseDataBuilder"* %0, %"class.v8::internal::Scope"* nonnull %8)
  br label %13

13:                                               ; preds = %10, %7, %12
  %14 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %8, i64 0, i32 2
  %15 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %14, align 8
  %16 = icmp eq %"class.v8::internal::Scope"* %15, null
  br i1 %16, label %6, label %7
}

declare zeroext i1 @_ZN2v88internal5Scope24IsSkippableFunctionScopeEv(%"class.v8::internal::Scope"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal19PreparseDataBuilder8ByteData10CopyToHeapEPNS0_7IsolateEi(%"class.v8::internal::PreparseDataBuilder::ByteData"* nocapture readonly, %"class.v8::internal::Isolate"*, i32) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder::ByteData", %"class.v8::internal::PreparseDataBuilder::ByteData"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = bitcast i32* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = trunc i64 %6 to i32
  %8 = bitcast %"class.v8::internal::Isolate"* %1 to %"class.v8::internal::FactoryBase"*
  %9 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE15NewPreparseDataEii(%"class.v8::internal::FactoryBase"* %8, i32 %7, i32 %2) #12
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.v8::internal::PreparseDataBuilder::ByteData"* %0 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = add i64 %10, 11
  %14 = inttoptr i64 %13 to i8*
  %15 = shl i64 %6, 32
  %16 = ashr exact i64 %15, 32
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %14, i8* align 1 %12, i64 %16, i1 false) #12
  ret i64* %9
}

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE15NewPreparseDataEii(%"class.v8::internal::FactoryBase"*, i32, i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal19PreparseDataBuilder8ByteData15CopyToLocalHeapEPNS0_12LocalIsolateEi(%"class.v8::internal::PreparseDataBuilder::ByteData"* nocapture readonly, %"class.v8::internal::LocalIsolate"*, i32) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder::ByteData", %"class.v8::internal::PreparseDataBuilder::ByteData"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = bitcast i32* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = trunc i64 %6 to i32
  %8 = bitcast %"class.v8::internal::LocalIsolate"* %1 to %"class.v8::internal::FactoryBase.1027"*
  %9 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE15NewPreparseDataEii(%"class.v8::internal::FactoryBase.1027"* %8, i32 %7, i32 %2) #12
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.v8::internal::PreparseDataBuilder::ByteData"* %0 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = add i64 %10, 11
  %14 = inttoptr i64 %13 to i8*
  %15 = shl i64 %6, 32
  %16 = ashr exact i64 %15, 32
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %14, i8* align 1 %12, i64 %16, i1 false) #12
  ret i64* %9
}

declare i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE15NewPreparseDataEii(%"class.v8::internal::FactoryBase.1027"*, i32, i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal19PreparseDataBuilder9SerializeEPNS0_7IsolateE(%"class.v8::internal::PreparseDataBuilder"* nocapture readonly, %"class.v8::internal::Isolate"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %0, i64 0, i32 6
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %7 = bitcast i32* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %8 to i32
  %10 = bitcast %"class.v8::internal::Isolate"* %1 to %"class.v8::internal::FactoryBase"*
  %11 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE15NewPreparseDataEii(%"class.v8::internal::FactoryBase"* %10, i32 %9, i32 %5) #12
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.v8::internal::PreparseDataBuilder::ByteData"* %3 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = add i64 %12, 11
  %16 = inttoptr i64 %15 to i8*
  %17 = shl i64 %8, 32
  %18 = ashr exact i64 %17, 32
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %16, i8* align 1 %14, i64 %18, i1 false) #12
  %19 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %0, i64 0, i32 2
  %20 = bitcast %union.anon.1* %19 to %"class.v8::internal::PreparseDataBuilder"***
  %21 = load %"class.v8::internal::PreparseDataBuilder"**, %"class.v8::internal::PreparseDataBuilder"*** %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %0, i64 0, i32 2, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder"*, %"class.v8::internal::PreparseDataBuilder"** %21, i64 %23
  %25 = icmp eq i64 %23, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %80, %2
  ret i64* %11

27:                                               ; preds = %2, %80
  %28 = phi i32 [ %81, %80 ], [ 0, %2 ]
  %29 = phi %"class.v8::internal::PreparseDataBuilder"** [ %82, %80 ], [ %21, %2 ]
  %30 = load %"class.v8::internal::PreparseDataBuilder"*, %"class.v8::internal::PreparseDataBuilder"** %29, align 8
  %31 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %30, i64 0, i32 7
  %32 = load i8, i8* %31, align 4
  %33 = and i8 %32, 3
  %34 = icmp eq i8 %33, 2
  br i1 %34, label %35, label %80

35:                                               ; preds = %27
  %36 = tail call i64* @_ZN2v88internal19PreparseDataBuilder9SerializeEPNS0_7IsolateE(%"class.v8::internal::PreparseDataBuilder"* %30, %"class.v8::internal::Isolate"* %1)
  %37 = load i64, i64* %11, align 8
  %38 = add nsw i32 %28, 1
  %39 = load i64, i64* %36, align 8
  %40 = add i64 %37, 3
  %41 = inttoptr i64 %40 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = add i32 %42, 15
  %44 = and i32 %43, -4
  %45 = shl i32 %28, 2
  %46 = add nsw i32 %44, %45
  %47 = sext i32 %46 to i64
  %48 = add i64 %37, -1
  %49 = add i64 %48, %47
  %50 = inttoptr i64 %49 to i32*
  %51 = trunc i64 %39 to i32
  store atomic volatile i32 %51, i32* %50 monotonic, align 4
  %52 = and i64 %39, 1
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %65, label %54

54:                                               ; preds = %35
  %55 = and i64 %37, -262144
  %56 = or i64 %55, 8
  %57 = inttoptr i64 %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = and i64 %58, 262144
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %65, label %61

61:                                               ; preds = %54
  %62 = or i64 %55, 16
  %63 = inttoptr i64 %62 to %"class.v8::internal::Heap"**
  %64 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %63, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %64, i64 %37, i64 %49, i64 %39) #12
  br label %65

65:                                               ; preds = %61, %54, %35
  %66 = and i64 %39, -262144
  %67 = or i64 %66, 8
  %68 = inttoptr i64 %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = and i64 %69, 24
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %80, label %72

72:                                               ; preds = %65
  %73 = and i64 %37, -262144
  %74 = or i64 %73, 8
  %75 = inttoptr i64 %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = and i64 %76, 24
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %79, label %80

79:                                               ; preds = %72
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %37, i64 %49, i64 %39) #12
  br label %80

80:                                               ; preds = %79, %72, %65, %27
  %81 = phi i32 [ %28, %27 ], [ %38, %65 ], [ %38, %72 ], [ %38, %79 ]
  %82 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder"*, %"class.v8::internal::PreparseDataBuilder"** %29, i64 1
  %83 = icmp eq %"class.v8::internal::PreparseDataBuilder"** %82, %24
  br i1 %83, label %26, label %27
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal19PreparseDataBuilder9SerializeEPNS0_12LocalIsolateE(%"class.v8::internal::PreparseDataBuilder"* nocapture readonly, %"class.v8::internal::LocalIsolate"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %0, i64 0, i32 6
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %7 = bitcast i32* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %8 to i32
  %10 = bitcast %"class.v8::internal::LocalIsolate"* %1 to %"class.v8::internal::FactoryBase.1027"*
  %11 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE15NewPreparseDataEii(%"class.v8::internal::FactoryBase.1027"* %10, i32 %9, i32 %5) #12
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.v8::internal::PreparseDataBuilder::ByteData"* %3 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = add i64 %12, 11
  %16 = inttoptr i64 %15 to i8*
  %17 = shl i64 %8, 32
  %18 = ashr exact i64 %17, 32
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %16, i8* align 1 %14, i64 %18, i1 false) #12
  %19 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %0, i64 0, i32 2
  %20 = bitcast %union.anon.1* %19 to %"class.v8::internal::PreparseDataBuilder"***
  %21 = load %"class.v8::internal::PreparseDataBuilder"**, %"class.v8::internal::PreparseDataBuilder"*** %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %0, i64 0, i32 2, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder"*, %"class.v8::internal::PreparseDataBuilder"** %21, i64 %23
  %25 = icmp eq i64 %23, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %80, %2
  ret i64* %11

27:                                               ; preds = %2, %80
  %28 = phi i32 [ %81, %80 ], [ 0, %2 ]
  %29 = phi %"class.v8::internal::PreparseDataBuilder"** [ %82, %80 ], [ %21, %2 ]
  %30 = load %"class.v8::internal::PreparseDataBuilder"*, %"class.v8::internal::PreparseDataBuilder"** %29, align 8
  %31 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %30, i64 0, i32 7
  %32 = load i8, i8* %31, align 4
  %33 = and i8 %32, 3
  %34 = icmp eq i8 %33, 2
  br i1 %34, label %35, label %80

35:                                               ; preds = %27
  %36 = tail call i64* @_ZN2v88internal19PreparseDataBuilder9SerializeEPNS0_12LocalIsolateE(%"class.v8::internal::PreparseDataBuilder"* %30, %"class.v8::internal::LocalIsolate"* %1)
  %37 = load i64, i64* %11, align 8
  %38 = add nsw i32 %28, 1
  %39 = load i64, i64* %36, align 8
  %40 = add i64 %37, 3
  %41 = inttoptr i64 %40 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = add i32 %42, 15
  %44 = and i32 %43, -4
  %45 = shl i32 %28, 2
  %46 = add nsw i32 %44, %45
  %47 = sext i32 %46 to i64
  %48 = add i64 %37, -1
  %49 = add i64 %48, %47
  %50 = inttoptr i64 %49 to i32*
  %51 = trunc i64 %39 to i32
  store atomic volatile i32 %51, i32* %50 monotonic, align 4
  %52 = and i64 %39, 1
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %65, label %54

54:                                               ; preds = %35
  %55 = and i64 %37, -262144
  %56 = or i64 %55, 8
  %57 = inttoptr i64 %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = and i64 %58, 262144
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %65, label %61

61:                                               ; preds = %54
  %62 = or i64 %55, 16
  %63 = inttoptr i64 %62 to %"class.v8::internal::Heap"**
  %64 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %63, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %64, i64 %37, i64 %49, i64 %39) #12
  br label %65

65:                                               ; preds = %61, %54, %35
  %66 = and i64 %39, -262144
  %67 = or i64 %66, 8
  %68 = inttoptr i64 %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = and i64 %69, 24
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %80, label %72

72:                                               ; preds = %65
  %73 = and i64 %37, -262144
  %74 = or i64 %73, 8
  %75 = inttoptr i64 %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = and i64 %76, 24
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %79, label %80

79:                                               ; preds = %72
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %37, i64 %49, i64 %39) #12
  br label %80

80:                                               ; preds = %79, %72, %65, %27
  %81 = phi i32 [ %28, %27 ], [ %38, %65 ], [ %38, %72 ], [ %38, %79 ]
  %82 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder"*, %"class.v8::internal::PreparseDataBuilder"** %29, i64 1
  %83 = icmp eq %"class.v8::internal::PreparseDataBuilder"** %82, %24
  br i1 %83, label %26, label %27
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::ZonePreparseData"* @_ZN2v88internal19PreparseDataBuilder9SerializeEPNS0_4ZoneE(%"class.v8::internal::PreparseDataBuilder"* nocapture readonly, %"class.v8::internal::Zone"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %0, i64 0, i32 6
  %5 = load i32, i32* %4, align 8
  %6 = bitcast %"class.v8::internal::PreparseDataBuilder::ByteData"* %3 to %"class.v8::internal::Vector"*
  %7 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %10, %8
  %12 = icmp ult i64 %11, 64
  br i1 %12, label %13, label %15, !prof !2

13:                                               ; preds = %2
  %14 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 64) #12
  br label %17

15:                                               ; preds = %2
  %16 = add i64 %8, 64
  store i64 %16, i64* %7, align 8
  br label %17

17:                                               ; preds = %13, %15
  %18 = phi i64 [ %14, %13 ], [ %8, %15 ]
  %19 = inttoptr i64 %18 to %"class.v8::internal::ZonePreparseData"*
  tail call void @_ZN2v88internal16ZonePreparseDataC2EPNS0_4ZoneEPNS0_6VectorIhEEi(%"class.v8::internal::ZonePreparseData"* %19, %"class.v8::internal::Zone"* %1, %"class.v8::internal::Vector"* %6, i32 %5) #12
  %20 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %0, i64 0, i32 2
  %21 = bitcast %union.anon.1* %20 to %"class.v8::internal::PreparseDataBuilder"***
  %22 = load %"class.v8::internal::PreparseDataBuilder"**, %"class.v8::internal::PreparseDataBuilder"*** %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %0, i64 0, i32 2, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder"*, %"class.v8::internal::PreparseDataBuilder"** %22, i64 %24
  %26 = icmp eq i64 %24, 0
  br i1 %26, label %29, label %27

27:                                               ; preds = %17
  %28 = getelementptr inbounds %"class.v8::internal::ZonePreparseData", %"class.v8::internal::ZonePreparseData"* %19, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %30

29:                                               ; preds = %44, %17
  ret %"class.v8::internal::ZonePreparseData"* %19

30:                                               ; preds = %27, %44
  %31 = phi i32 [ 0, %27 ], [ %45, %44 ]
  %32 = phi %"class.v8::internal::PreparseDataBuilder"** [ %22, %27 ], [ %46, %44 ]
  %33 = load %"class.v8::internal::PreparseDataBuilder"*, %"class.v8::internal::PreparseDataBuilder"** %32, align 8
  %34 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder", %"class.v8::internal::PreparseDataBuilder"* %33, i64 0, i32 7
  %35 = load i8, i8* %34, align 4
  %36 = and i8 %35, 3
  %37 = icmp eq i8 %36, 2
  br i1 %37, label %38, label %44

38:                                               ; preds = %30
  %39 = tail call %"class.v8::internal::ZonePreparseData"* @_ZN2v88internal19PreparseDataBuilder9SerializeEPNS0_4ZoneE(%"class.v8::internal::PreparseDataBuilder"* %33, %"class.v8::internal::Zone"* %1)
  %40 = add nsw i32 %31, 1
  %41 = sext i32 %31 to i64
  %42 = load %"class.v8::internal::ZonePreparseData"**, %"class.v8::internal::ZonePreparseData"*** %28, align 8
  %43 = getelementptr inbounds %"class.v8::internal::ZonePreparseData"*, %"class.v8::internal::ZonePreparseData"** %42, i64 %41
  store %"class.v8::internal::ZonePreparseData"* %39, %"class.v8::internal::ZonePreparseData"** %43, align 8
  br label %44

44:                                               ; preds = %30, %38
  %45 = phi i32 [ %40, %38 ], [ %31, %30 ]
  %46 = getelementptr inbounds %"class.v8::internal::PreparseDataBuilder"*, %"class.v8::internal::PreparseDataBuilder"** %32, i64 1
  %47 = icmp eq %"class.v8::internal::PreparseDataBuilder"** %46, %25
  br i1 %47, label %29, label %30
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::ProducedPreparseData"* @_ZN2v88internal20ProducedPreparseData3ForEPNS0_19PreparseDataBuilderEPNS0_4ZoneE(%"class.v8::internal::PreparseDataBuilder"*, %"class.v8::internal::Zone"*) local_unnamed_addr #1 align 2 {
  %3 = ptrtoint %"class.v8::internal::PreparseDataBuilder"* %0 to i64
  %4 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %7, %5
  %9 = icmp ult i64 %8, 16
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %2
  %11 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 16) #12
  br label %14

12:                                               ; preds = %2
  %13 = add i64 %5, 16
  store i64 %13, i64* %4, align 8
  br label %14

14:                                               ; preds = %10, %12
  %15 = phi i64 [ %11, %10 ], [ %5, %12 ]
  %16 = inttoptr i64 %15 to %"class.v8::internal::BuilderProducedPreparseData"*
  %17 = getelementptr inbounds %"class.v8::internal::BuilderProducedPreparseData", %"class.v8::internal::BuilderProducedPreparseData"* %16, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal27BuilderProducedPreparseDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %18 = getelementptr inbounds %"class.v8::internal::BuilderProducedPreparseData", %"class.v8::internal::BuilderProducedPreparseData"* %16, i64 0, i32 1
  %19 = bitcast %"class.v8::internal::PreparseDataBuilder"** %18 to i64*
  store i64 %3, i64* %19, align 8
  %20 = getelementptr inbounds %"class.v8::internal::BuilderProducedPreparseData", %"class.v8::internal::BuilderProducedPreparseData"* %16, i64 0, i32 0
  ret %"class.v8::internal::ProducedPreparseData"* %20
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::ProducedPreparseData"* @_ZN2v88internal20ProducedPreparseData3ForENS0_6HandleINS0_12PreparseDataEEEPNS0_4ZoneE(i64*, %"class.v8::internal::Zone"*) local_unnamed_addr #1 align 2 {
  %3 = ptrtoint i64* %0 to i64
  %4 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %7, %5
  %9 = icmp ult i64 %8, 16
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %2
  %11 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 16) #12
  br label %14

12:                                               ; preds = %2
  %13 = add i64 %5, 16
  store i64 %13, i64* %4, align 8
  br label %14

14:                                               ; preds = %10, %12
  %15 = phi i64 [ %11, %10 ], [ %5, %12 ]
  %16 = inttoptr i64 %15 to %"class.v8::internal::OnHeapProducedPreparseData"*
  %17 = getelementptr inbounds %"class.v8::internal::OnHeapProducedPreparseData", %"class.v8::internal::OnHeapProducedPreparseData"* %16, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal26OnHeapProducedPreparseDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %18 = getelementptr inbounds %"class.v8::internal::OnHeapProducedPreparseData", %"class.v8::internal::OnHeapProducedPreparseData"* %16, i64 0, i32 1, i32 0, i32 0
  %19 = bitcast i64** %18 to i64*
  store i64 %3, i64* %19, align 8
  %20 = getelementptr inbounds %"class.v8::internal::OnHeapProducedPreparseData", %"class.v8::internal::OnHeapProducedPreparseData"* %16, i64 0, i32 0
  ret %"class.v8::internal::ProducedPreparseData"* %20
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::ProducedPreparseData"* @_ZN2v88internal20ProducedPreparseData3ForEPNS0_16ZonePreparseDataEPNS0_4ZoneE(%"class.v8::internal::ZonePreparseData"*, %"class.v8::internal::Zone"*) local_unnamed_addr #1 align 2 {
  %3 = ptrtoint %"class.v8::internal::ZonePreparseData"* %0 to i64
  %4 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %7, %5
  %9 = icmp ult i64 %8, 16
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %2
  %11 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 16) #12
  br label %14

12:                                               ; preds = %2
  %13 = add i64 %5, 16
  store i64 %13, i64* %4, align 8
  br label %14

14:                                               ; preds = %10, %12
  %15 = phi i64 [ %11, %10 ], [ %5, %12 ]
  %16 = inttoptr i64 %15 to %"class.v8::internal::ZoneProducedPreparseData"*
  %17 = getelementptr inbounds %"class.v8::internal::ZoneProducedPreparseData", %"class.v8::internal::ZoneProducedPreparseData"* %16, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal24ZoneProducedPreparseDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %18 = getelementptr inbounds %"class.v8::internal::ZoneProducedPreparseData", %"class.v8::internal::ZoneProducedPreparseData"* %16, i64 0, i32 1
  %19 = bitcast %"class.v8::internal::ZonePreparseData"** %18 to i64*
  store i64 %3, i64* %19, align 8
  %20 = getelementptr inbounds %"class.v8::internal::ZoneProducedPreparseData", %"class.v8::internal::ZoneProducedPreparseData"* %16, i64 0, i32 0
  ret %"class.v8::internal::ProducedPreparseData"* %20
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN2v88internal26OnHeapConsumedPreparseData12GetScopeDataEv(%"class.v8::internal::OnHeapConsumedPreparseData"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::OnHeapConsumedPreparseData", %"class.v8::internal::OnHeapConsumedPreparseData"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = load i64, i64* %3, align 8
  ret i64 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::ProducedPreparseData"* @_ZN2v88internal26OnHeapConsumedPreparseData12GetChildDataEPNS0_4ZoneEi(%"class.v8::internal::OnHeapConsumedPreparseData"* nocapture readonly, %"class.v8::internal::Zone"*, i32) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::OnHeapConsumedPreparseData", %"class.v8::internal::OnHeapConsumedPreparseData"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 3
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = add i32 %9, 15
  %11 = and i32 %10, -4
  %12 = shl i32 %2, 2
  %13 = add nsw i32 %11, %12
  %14 = add i64 %6, -1
  %15 = sext i32 %13 to i64
  %16 = add i64 %14, %15
  %17 = inttoptr i64 %16 to i32*
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i64 %6, -4294967296
  %20 = zext i32 %18 to i64
  %21 = or i64 %19, %20
  %22 = getelementptr inbounds %"class.v8::internal::OnHeapConsumedPreparseData", %"class.v8::internal::OnHeapConsumedPreparseData"* %0, i64 0, i32 1
  %23 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %23, i64 0, i32 31, i32 4
  %25 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %24, align 8
  %26 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %3
  %28 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %25, i64 %21) #12
  %29 = ptrtoint i64* %28 to i64
  br label %43

30:                                               ; preds = %3
  %31 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %23, i64 0, i32 31, i32 0
  %32 = load i64*, i64** %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %23, i64 0, i32 31, i32 1
  %34 = load i64*, i64** %33, align 8
  %35 = icmp eq i64* %32, %34
  br i1 %35, label %36, label %38

36:                                               ; preds = %30
  %37 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %23) #12
  br label %38

38:                                               ; preds = %36, %30
  %39 = phi i64* [ %37, %36 ], [ %32, %30 ]
  %40 = ptrtoint i64* %39 to i64
  %41 = add i64 %40, 8
  %42 = inttoptr i64 %41 to i64*
  store i64* %42, i64** %31, align 8
  store i64 %21, i64* %39, align 8
  br label %43

43:                                               ; preds = %27, %38
  %44 = phi i64 [ %29, %27 ], [ %40, %38 ]
  %45 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 2
  %46 = load i64, i64* %45, align 8
  %47 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 3
  %48 = load i64, i64* %47, align 8
  %49 = sub i64 %48, %46
  %50 = icmp ult i64 %49, 16
  br i1 %50, label %51, label %53, !prof !2

51:                                               ; preds = %43
  %52 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 16) #12
  br label %55

53:                                               ; preds = %43
  %54 = add i64 %46, 16
  store i64 %54, i64* %45, align 8
  br label %55

55:                                               ; preds = %51, %53
  %56 = phi i64 [ %52, %51 ], [ %46, %53 ]
  %57 = inttoptr i64 %56 to %"class.v8::internal::OnHeapProducedPreparseData"*
  %58 = getelementptr inbounds %"class.v8::internal::OnHeapProducedPreparseData", %"class.v8::internal::OnHeapProducedPreparseData"* %57, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal26OnHeapProducedPreparseDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %58, align 8
  %59 = getelementptr inbounds %"class.v8::internal::OnHeapProducedPreparseData", %"class.v8::internal::OnHeapProducedPreparseData"* %57, i64 0, i32 1, i32 0, i32 0
  %60 = bitcast i64** %59 to i64*
  store i64 %44, i64* %60, align 8
  %61 = getelementptr inbounds %"class.v8::internal::OnHeapProducedPreparseData", %"class.v8::internal::OnHeapProducedPreparseData"* %57, i64 0, i32 0
  ret %"class.v8::internal::ProducedPreparseData"* %61
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal26OnHeapConsumedPreparseDataC2EPNS0_7IsolateENS0_6HandleINS0_12PreparseDataEEE(%"class.v8::internal::OnHeapConsumedPreparseData"* nocapture, %"class.v8::internal::Isolate"*, i64*) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::OnHeapConsumedPreparseData", %"class.v8::internal::OnHeapConsumedPreparseData"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.v8::internal::OnHeapConsumedPreparseData", %"class.v8::internal::OnHeapConsumedPreparseData"* %0, i64 0, i32 0, i32 1
  %6 = tail call i8* @_Znwm(i64 16) #14
  %7 = ptrtoint i8* %6 to i64
  %8 = bitcast %"class.std::__1::unique_ptr.1254"* %5 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 16, i1 false) #12
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::OnHeapConsumedPreparseData", %"class.v8::internal::OnHeapConsumedPreparseData"* %0, i64 0, i32 0, i32 2
  store i32 0, i32* %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2v88internal26OnHeapConsumedPreparseDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %10 = getelementptr inbounds %"class.v8::internal::OnHeapConsumedPreparseData", %"class.v8::internal::OnHeapConsumedPreparseData"* %0, i64 0, i32 1
  store %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Isolate"** %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::OnHeapConsumedPreparseData", %"class.v8::internal::OnHeapConsumedPreparseData"* %0, i64 0, i32 2, i32 0, i32 0
  store i64* %2, i64** %11, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16ZonePreparseDataC2EPNS0_4ZoneEPNS0_6VectorIhEEi(%"class.v8::internal::ZonePreparseData"*, %"class.v8::internal::Zone"*, %"class.v8::internal::Vector"* nocapture readonly, i32) unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %2, i64 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %2, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds i8, i8* %6, i64 %8
  %10 = ptrtoint %"class.v8::internal::Zone"* %1 to i64
  %11 = getelementptr inbounds %"class.v8::internal::ZonePreparseData", %"class.v8::internal::ZonePreparseData"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %12 = bitcast %"struct.std::__1::__compressed_pair_elem.1245"* %11 to i64*
  %13 = bitcast %"class.v8::internal::ZonePreparseData"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #12
  store i64 %10, i64* %12, align 8
  %14 = icmp eq i64 %8, 0
  br i1 %14, label %140, label %15

15:                                               ; preds = %4
  %16 = icmp ugt i64 %8, 2147483647
  br i1 %16, label %17, label %19

17:                                               ; preds = %15
  %18 = bitcast %"class.v8::internal::ZonePreparseData"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %18) #13
  unreachable

19:                                               ; preds = %15
  %20 = add nuw nsw i64 %8, 7
  %21 = and i64 %20, -8
  %22 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 2
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 3
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %25, %23
  %27 = icmp ugt i64 %21, %26
  br i1 %27, label %28, label %30, !prof !2

28:                                               ; preds = %19
  %29 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 %21) #12
  br label %32

30:                                               ; preds = %19
  %31 = add i64 %23, %21
  store i64 %31, i64* %22, align 8
  br label %32

32:                                               ; preds = %28, %30
  %33 = phi i64 [ %29, %28 ], [ %23, %30 ]
  %34 = inttoptr i64 %33 to i8*
  %35 = getelementptr inbounds %"class.v8::internal::ZonePreparseData", %"class.v8::internal::ZonePreparseData"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  store i8* %34, i8** %35, align 8
  %36 = getelementptr inbounds %"class.v8::internal::ZonePreparseData", %"class.v8::internal::ZonePreparseData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8* %34, i8** %36, align 8
  %37 = getelementptr inbounds i8, i8* %34, i64 %8
  %38 = getelementptr inbounds %"class.v8::internal::ZonePreparseData", %"class.v8::internal::ZonePreparseData"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i8* %37, i8** %38, align 8
  %39 = bitcast i8** %35 to i64*
  %40 = icmp ult i64 %8, 32
  br i1 %40, label %127, label %41

41:                                               ; preds = %32
  %42 = getelementptr i8, i8* %34, i64 %8
  %43 = icmp ugt i8* %9, %34
  %44 = icmp ult i8* %6, %42
  %45 = and i1 %43, %44
  br i1 %45, label %127, label %46

46:                                               ; preds = %41
  %47 = and i64 %8, -32
  %48 = getelementptr i8, i8* %34, i64 %47
  %49 = getelementptr i8, i8* %6, i64 %47
  %50 = add i64 %47, -32
  %51 = lshr exact i64 %50, 5
  %52 = add nuw nsw i64 %51, 1
  %53 = and i64 %52, 3
  %54 = icmp ult i64 %50, 96
  br i1 %54, label %106, label %55

55:                                               ; preds = %46
  %56 = sub nsw i64 %52, %53
  br label %57

57:                                               ; preds = %57, %55
  %58 = phi i64 [ 0, %55 ], [ %103, %57 ]
  %59 = phi i64 [ %56, %55 ], [ %104, %57 ]
  %60 = getelementptr i8, i8* %34, i64 %58
  %61 = getelementptr i8, i8* %6, i64 %58
  %62 = bitcast i8* %61 to <16 x i8>*
  %63 = load <16 x i8>, <16 x i8>* %62, align 1, !alias.scope !44
  %64 = getelementptr i8, i8* %61, i64 16
  %65 = bitcast i8* %64 to <16 x i8>*
  %66 = load <16 x i8>, <16 x i8>* %65, align 1, !alias.scope !44
  %67 = bitcast i8* %60 to <16 x i8>*
  store <16 x i8> %63, <16 x i8>* %67, align 1, !alias.scope !47, !noalias !44
  %68 = getelementptr i8, i8* %60, i64 16
  %69 = bitcast i8* %68 to <16 x i8>*
  store <16 x i8> %66, <16 x i8>* %69, align 1, !alias.scope !47, !noalias !44
  %70 = or i64 %58, 32
  %71 = getelementptr i8, i8* %34, i64 %70
  %72 = getelementptr i8, i8* %6, i64 %70
  %73 = bitcast i8* %72 to <16 x i8>*
  %74 = load <16 x i8>, <16 x i8>* %73, align 1, !alias.scope !44
  %75 = getelementptr i8, i8* %72, i64 16
  %76 = bitcast i8* %75 to <16 x i8>*
  %77 = load <16 x i8>, <16 x i8>* %76, align 1, !alias.scope !44
  %78 = bitcast i8* %71 to <16 x i8>*
  store <16 x i8> %74, <16 x i8>* %78, align 1, !alias.scope !47, !noalias !44
  %79 = getelementptr i8, i8* %71, i64 16
  %80 = bitcast i8* %79 to <16 x i8>*
  store <16 x i8> %77, <16 x i8>* %80, align 1, !alias.scope !47, !noalias !44
  %81 = or i64 %58, 64
  %82 = getelementptr i8, i8* %34, i64 %81
  %83 = getelementptr i8, i8* %6, i64 %81
  %84 = bitcast i8* %83 to <16 x i8>*
  %85 = load <16 x i8>, <16 x i8>* %84, align 1, !alias.scope !44
  %86 = getelementptr i8, i8* %83, i64 16
  %87 = bitcast i8* %86 to <16 x i8>*
  %88 = load <16 x i8>, <16 x i8>* %87, align 1, !alias.scope !44
  %89 = bitcast i8* %82 to <16 x i8>*
  store <16 x i8> %85, <16 x i8>* %89, align 1, !alias.scope !47, !noalias !44
  %90 = getelementptr i8, i8* %82, i64 16
  %91 = bitcast i8* %90 to <16 x i8>*
  store <16 x i8> %88, <16 x i8>* %91, align 1, !alias.scope !47, !noalias !44
  %92 = or i64 %58, 96
  %93 = getelementptr i8, i8* %34, i64 %92
  %94 = getelementptr i8, i8* %6, i64 %92
  %95 = bitcast i8* %94 to <16 x i8>*
  %96 = load <16 x i8>, <16 x i8>* %95, align 1, !alias.scope !44
  %97 = getelementptr i8, i8* %94, i64 16
  %98 = bitcast i8* %97 to <16 x i8>*
  %99 = load <16 x i8>, <16 x i8>* %98, align 1, !alias.scope !44
  %100 = bitcast i8* %93 to <16 x i8>*
  store <16 x i8> %96, <16 x i8>* %100, align 1, !alias.scope !47, !noalias !44
  %101 = getelementptr i8, i8* %93, i64 16
  %102 = bitcast i8* %101 to <16 x i8>*
  store <16 x i8> %99, <16 x i8>* %102, align 1, !alias.scope !47, !noalias !44
  %103 = add i64 %58, 128
  %104 = add i64 %59, -4
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %106, label %57, !llvm.loop !49

106:                                              ; preds = %57, %46
  %107 = phi i64 [ 0, %46 ], [ %103, %57 ]
  %108 = icmp eq i64 %53, 0
  br i1 %108, label %125, label %109

109:                                              ; preds = %106, %109
  %110 = phi i64 [ %122, %109 ], [ %107, %106 ]
  %111 = phi i64 [ %123, %109 ], [ %53, %106 ]
  %112 = getelementptr i8, i8* %34, i64 %110
  %113 = getelementptr i8, i8* %6, i64 %110
  %114 = bitcast i8* %113 to <16 x i8>*
  %115 = load <16 x i8>, <16 x i8>* %114, align 1, !alias.scope !44
  %116 = getelementptr i8, i8* %113, i64 16
  %117 = bitcast i8* %116 to <16 x i8>*
  %118 = load <16 x i8>, <16 x i8>* %117, align 1, !alias.scope !44
  %119 = bitcast i8* %112 to <16 x i8>*
  store <16 x i8> %115, <16 x i8>* %119, align 1, !alias.scope !47, !noalias !44
  %120 = getelementptr i8, i8* %112, i64 16
  %121 = bitcast i8* %120 to <16 x i8>*
  store <16 x i8> %118, <16 x i8>* %121, align 1, !alias.scope !47, !noalias !44
  %122 = add i64 %110, 32
  %123 = add i64 %111, -1
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %125, label %109, !llvm.loop !50

125:                                              ; preds = %109, %106
  %126 = icmp eq i64 %8, %47
  br i1 %126, label %137, label %127

127:                                              ; preds = %125, %41, %32
  %128 = phi i8* [ %34, %41 ], [ %34, %32 ], [ %48, %125 ]
  %129 = phi i8* [ %6, %41 ], [ %6, %32 ], [ %49, %125 ]
  br label %130

130:                                              ; preds = %127, %130
  %131 = phi i8* [ %135, %130 ], [ %128, %127 ]
  %132 = phi i8* [ %134, %130 ], [ %129, %127 ]
  %133 = load i8, i8* %132, align 1
  store i8 %133, i8* %131, align 1
  %134 = getelementptr inbounds i8, i8* %132, i64 1
  %135 = getelementptr inbounds i8, i8* %131, i64 1
  %136 = icmp eq i8* %134, %9
  br i1 %136, label %137, label %130, !llvm.loop !51

137:                                              ; preds = %130, %125
  %138 = phi i8* [ %48, %125 ], [ %135, %130 ]
  %139 = ptrtoint i8* %138 to i64
  store i64 %139, i64* %39, align 8
  br label %140

140:                                              ; preds = %4, %137
  %141 = getelementptr inbounds %"class.v8::internal::ZonePreparseData", %"class.v8::internal::ZonePreparseData"* %0, i64 0, i32 1
  %142 = sext i32 %3 to i64
  %143 = getelementptr inbounds %"class.v8::internal::ZonePreparseData", %"class.v8::internal::ZonePreparseData"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %144 = bitcast %"struct.std::__1::__compressed_pair_elem.1252"* %143 to i64*
  %145 = bitcast %"class.v8::internal::ZoneVector.1247"* %141 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %145, i8 0, i64 24, i1 false) #12
  store i64 %10, i64* %144, align 8
  %146 = icmp eq i32 %3, 0
  br i1 %146, label %173, label %147

147:                                              ; preds = %140
  %148 = icmp ugt i32 %3, 268435455
  br i1 %148, label %149, label %151

149:                                              ; preds = %147
  %150 = bitcast %"class.v8::internal::ZoneVector.1247"* %141 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %150) #13
  unreachable

151:                                              ; preds = %147
  %152 = shl nsw i64 %142, 3
  %153 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 2
  %154 = load i64, i64* %153, align 8
  %155 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 3
  %156 = load i64, i64* %155, align 8
  %157 = sub i64 %156, %154
  %158 = icmp ugt i64 %152, %157
  br i1 %158, label %159, label %161, !prof !2

159:                                              ; preds = %151
  %160 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 %152) #12
  br label %163

161:                                              ; preds = %151
  %162 = add i64 %154, %152
  store i64 %162, i64* %153, align 8
  br label %163

163:                                              ; preds = %161, %159
  %164 = phi i64 [ %160, %159 ], [ %154, %161 ]
  %165 = inttoptr i64 %164 to %"class.v8::internal::ZonePreparseData"**
  %166 = inttoptr i64 %164 to i8*
  %167 = getelementptr inbounds %"class.v8::internal::ZonePreparseData", %"class.v8::internal::ZonePreparseData"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %168 = getelementptr inbounds %"class.v8::internal::ZoneVector.1247", %"class.v8::internal::ZoneVector.1247"* %141, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::ZonePreparseData"** %165, %"class.v8::internal::ZonePreparseData"*** %168, align 8
  %169 = getelementptr inbounds %"class.v8::internal::ZonePreparseData"*, %"class.v8::internal::ZonePreparseData"** %165, i64 %142
  %170 = getelementptr inbounds %"class.v8::internal::ZonePreparseData", %"class.v8::internal::ZonePreparseData"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::ZonePreparseData"** %169, %"class.v8::internal::ZonePreparseData"*** %170, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %166, i8 0, i64 %152, i1 false) #12
  %171 = bitcast %"class.v8::internal::ZonePreparseData"*** %167 to i64*
  %172 = ptrtoint %"class.v8::internal::ZonePreparseData"** %169 to i64
  store i64 %172, i64* %171, align 8
  br label %173

173:                                              ; preds = %140, %163
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal16ZonePreparseData9SerializeEPNS0_7IsolateE(%"class.v8::internal::ZonePreparseData"* nocapture readonly, %"class.v8::internal::Isolate"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::ZonePreparseData", %"class.v8::internal::ZonePreparseData"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.v8::internal::ZonePreparseData"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = trunc i64 %8 to i32
  %10 = getelementptr inbounds %"class.v8::internal::ZonePreparseData", %"class.v8::internal::ZonePreparseData"* %0, i64 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.v8::internal::ZonePreparseData", %"class.v8::internal::ZonePreparseData"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %12 = bitcast %"class.v8::internal::ZonePreparseData"*** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector.1248"* %10 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = lshr exact i64 %16, 3
  %18 = trunc i64 %17 to i32
  %19 = bitcast %"class.v8::internal::Isolate"* %1 to %"class.v8::internal::FactoryBase"*
  %20 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE15NewPreparseDataEii(%"class.v8::internal::FactoryBase"* %19, i32 %9, i32 %18) #12
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::ZonePreparseData", %"class.v8::internal::ZonePreparseData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = add i64 %21, 11
  %25 = inttoptr i64 %24 to i8*
  %26 = shl i64 %8, 32
  %27 = ashr exact i64 %26, 32
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %23, i64 %27, i1 false) #12
  %28 = icmp sgt i32 %18, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %2
  %30 = getelementptr inbounds %"class.v8::internal::ZonePreparseData", %"class.v8::internal::ZonePreparseData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %31 = and i64 %17, 4294967295
  br label %33

32:                                               ; preds = %82, %2
  ret i64* %20

33:                                               ; preds = %82, %29
  %34 = phi i64 [ 0, %29 ], [ %83, %82 ]
  %35 = load %"class.v8::internal::ZonePreparseData"**, %"class.v8::internal::ZonePreparseData"*** %30, align 8
  %36 = getelementptr inbounds %"class.v8::internal::ZonePreparseData"*, %"class.v8::internal::ZonePreparseData"** %35, i64 %34
  %37 = load %"class.v8::internal::ZonePreparseData"*, %"class.v8::internal::ZonePreparseData"** %36, align 8
  %38 = tail call i64* @_ZN2v88internal16ZonePreparseData9SerializeEPNS0_7IsolateE(%"class.v8::internal::ZonePreparseData"* %37, %"class.v8::internal::Isolate"* %1)
  %39 = load i64, i64* %20, align 8
  %40 = load i64, i64* %38, align 8
  %41 = add i64 %39, 3
  %42 = inttoptr i64 %41 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = add i32 %43, 15
  %45 = and i32 %44, -4
  %46 = trunc i64 %34 to i32
  %47 = shl i32 %46, 2
  %48 = add nsw i32 %45, %47
  %49 = sext i32 %48 to i64
  %50 = add i64 %39, -1
  %51 = add i64 %50, %49
  %52 = inttoptr i64 %51 to i32*
  %53 = trunc i64 %40 to i32
  store atomic volatile i32 %53, i32* %52 monotonic, align 4
  %54 = and i64 %40, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %67, label %56

56:                                               ; preds = %33
  %57 = and i64 %39, -262144
  %58 = or i64 %57, 8
  %59 = inttoptr i64 %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = and i64 %60, 262144
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %67, label %63

63:                                               ; preds = %56
  %64 = or i64 %57, 16
  %65 = inttoptr i64 %64 to %"class.v8::internal::Heap"**
  %66 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %65, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %66, i64 %39, i64 %51, i64 %40) #12
  br label %67

67:                                               ; preds = %63, %56, %33
  %68 = and i64 %40, -262144
  %69 = or i64 %68, 8
  %70 = inttoptr i64 %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = and i64 %71, 24
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %82, label %74

74:                                               ; preds = %67
  %75 = and i64 %39, -262144
  %76 = or i64 %75, 8
  %77 = inttoptr i64 %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = and i64 %78, 24
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %82

81:                                               ; preds = %74
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %39, i64 %51, i64 %40) #12
  br label %82

82:                                               ; preds = %67, %74, %81
  %83 = add nuw nsw i64 %34, 1
  %84 = icmp eq i64 %83, %31
  br i1 %84, label %32, label %33
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal16ZonePreparseData9SerializeEPNS0_12LocalIsolateE(%"class.v8::internal::ZonePreparseData"* nocapture readonly, %"class.v8::internal::LocalIsolate"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::ZonePreparseData", %"class.v8::internal::ZonePreparseData"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.v8::internal::ZonePreparseData"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = trunc i64 %8 to i32
  %10 = getelementptr inbounds %"class.v8::internal::ZonePreparseData", %"class.v8::internal::ZonePreparseData"* %0, i64 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.v8::internal::ZonePreparseData", %"class.v8::internal::ZonePreparseData"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %12 = bitcast %"class.v8::internal::ZonePreparseData"*** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector.1248"* %10 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = lshr exact i64 %16, 3
  %18 = trunc i64 %17 to i32
  %19 = bitcast %"class.v8::internal::LocalIsolate"* %1 to %"class.v8::internal::FactoryBase.1027"*
  %20 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE15NewPreparseDataEii(%"class.v8::internal::FactoryBase.1027"* %19, i32 %9, i32 %18) #12
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::ZonePreparseData", %"class.v8::internal::ZonePreparseData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = add i64 %21, 11
  %25 = inttoptr i64 %24 to i8*
  %26 = shl i64 %8, 32
  %27 = ashr exact i64 %26, 32
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %23, i64 %27, i1 false) #12
  %28 = icmp sgt i32 %18, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %2
  %30 = getelementptr inbounds %"class.v8::internal::ZonePreparseData", %"class.v8::internal::ZonePreparseData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %31 = and i64 %17, 4294967295
  br label %33

32:                                               ; preds = %82, %2
  ret i64* %20

33:                                               ; preds = %82, %29
  %34 = phi i64 [ 0, %29 ], [ %83, %82 ]
  %35 = load %"class.v8::internal::ZonePreparseData"**, %"class.v8::internal::ZonePreparseData"*** %30, align 8
  %36 = getelementptr inbounds %"class.v8::internal::ZonePreparseData"*, %"class.v8::internal::ZonePreparseData"** %35, i64 %34
  %37 = load %"class.v8::internal::ZonePreparseData"*, %"class.v8::internal::ZonePreparseData"** %36, align 8
  %38 = tail call i64* @_ZN2v88internal16ZonePreparseData9SerializeEPNS0_12LocalIsolateE(%"class.v8::internal::ZonePreparseData"* %37, %"class.v8::internal::LocalIsolate"* %1)
  %39 = load i64, i64* %20, align 8
  %40 = load i64, i64* %38, align 8
  %41 = add i64 %39, 3
  %42 = inttoptr i64 %41 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = add i32 %43, 15
  %45 = and i32 %44, -4
  %46 = trunc i64 %34 to i32
  %47 = shl i32 %46, 2
  %48 = add nsw i32 %45, %47
  %49 = sext i32 %48 to i64
  %50 = add i64 %39, -1
  %51 = add i64 %50, %49
  %52 = inttoptr i64 %51 to i32*
  %53 = trunc i64 %40 to i32
  store atomic volatile i32 %53, i32* %52 monotonic, align 4
  %54 = and i64 %40, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %67, label %56

56:                                               ; preds = %33
  %57 = and i64 %39, -262144
  %58 = or i64 %57, 8
  %59 = inttoptr i64 %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = and i64 %60, 262144
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %67, label %63

63:                                               ; preds = %56
  %64 = or i64 %57, 16
  %65 = inttoptr i64 %64 to %"class.v8::internal::Heap"**
  %66 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %65, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %66, i64 %39, i64 %51, i64 %40) #12
  br label %67

67:                                               ; preds = %63, %56, %33
  %68 = and i64 %40, -262144
  %69 = or i64 %68, 8
  %70 = inttoptr i64 %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = and i64 %71, 24
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %82, label %74

74:                                               ; preds = %67
  %75 = and i64 %39, -262144
  %76 = or i64 %75, 8
  %77 = inttoptr i64 %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = and i64 %78, 24
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %82

81:                                               ; preds = %74
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %39, i64 %51, i64 %40) #12
  br label %82

82:                                               ; preds = %67, %74, %81
  %83 = add nuw nsw i64 %34, 1
  %84 = icmp eq i64 %83, %31
  br i1 %84, label %32, label %33
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal24ZoneConsumedPreparseDataC2EPNS0_4ZoneEPNS0_16ZonePreparseDataE(%"class.v8::internal::ZoneConsumedPreparseData"* nocapture, %"class.v8::internal::Zone"* nocapture readnone, %"class.v8::internal::ZonePreparseData"*) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::ZoneConsumedPreparseData", %"class.v8::internal::ZoneConsumedPreparseData"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.v8::internal::ZoneConsumedPreparseData", %"class.v8::internal::ZoneConsumedPreparseData"* %0, i64 0, i32 0, i32 1
  %6 = tail call i8* @_Znwm(i64 16) #14
  %7 = ptrtoint i8* %6 to i64
  %8 = bitcast %"class.std::__1::unique_ptr.1264"* %5 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 16, i1 false) #12
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::ZoneConsumedPreparseData", %"class.v8::internal::ZoneConsumedPreparseData"* %0, i64 0, i32 0, i32 2
  store i32 0, i32* %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2v88internal24ZoneConsumedPreparseDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %10 = getelementptr inbounds %"class.v8::internal::ZoneConsumedPreparseData", %"class.v8::internal::ZoneConsumedPreparseData"* %0, i64 0, i32 1
  store %"class.v8::internal::ZonePreparseData"* %2, %"class.v8::internal::ZonePreparseData"** %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::ZonePreparseData", %"class.v8::internal::ZonePreparseData"* %2, i64 0, i32 0
  %12 = getelementptr inbounds %"class.v8::internal::ZoneConsumedPreparseData", %"class.v8::internal::ZoneConsumedPreparseData"* %0, i64 0, i32 2, i32 0
  store %"class.v8::internal::ZoneVector"* %11, %"class.v8::internal::ZoneVector"** %12, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::internal::ZoneVector"* @_ZN2v88internal24ZoneConsumedPreparseData12GetScopeDataEv(%"class.v8::internal::ZoneConsumedPreparseData"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::ZoneConsumedPreparseData", %"class.v8::internal::ZoneConsumedPreparseData"* %0, i64 0, i32 2, i32 0
  %3 = load %"class.v8::internal::ZoneVector"*, %"class.v8::internal::ZoneVector"** %2, align 8
  ret %"class.v8::internal::ZoneVector"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::ProducedPreparseData"* @_ZN2v88internal24ZoneConsumedPreparseData12GetChildDataEPNS0_4ZoneEi(%"class.v8::internal::ZoneConsumedPreparseData"* nocapture readonly, %"class.v8::internal::Zone"*, i32) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::ZoneConsumedPreparseData", %"class.v8::internal::ZoneConsumedPreparseData"* %0, i64 0, i32 1
  %5 = load %"class.v8::internal::ZonePreparseData"*, %"class.v8::internal::ZonePreparseData"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::ZonePreparseData", %"class.v8::internal::ZonePreparseData"* %5, i64 0, i32 1, i32 0
  %7 = getelementptr inbounds %"class.v8::internal::ZonePreparseData", %"class.v8::internal::ZonePreparseData"* %5, i64 0, i32 1, i32 0, i32 0, i32 1
  %8 = bitcast %"class.v8::internal::ZonePreparseData"*** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.1248"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = lshr exact i64 %12, 3
  %14 = trunc i64 %13 to i32
  %15 = icmp sgt i32 %14, %2
  br i1 %15, label %17, label %16, !prof !52

16:                                               ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i64 0, i64 0)) #13
  unreachable

17:                                               ; preds = %3
  %18 = inttoptr i64 %11 to %"class.v8::internal::ZonePreparseData"**
  %19 = sext i32 %2 to i64
  %20 = getelementptr inbounds %"class.v8::internal::ZonePreparseData"*, %"class.v8::internal::ZonePreparseData"** %18, i64 %19
  %21 = load %"class.v8::internal::ZonePreparseData"*, %"class.v8::internal::ZonePreparseData"** %20, align 8
  %22 = icmp eq %"class.v8::internal::ZonePreparseData"* %21, null
  br i1 %22, label %42, label %23

23:                                               ; preds = %17
  %24 = ptrtoint %"class.v8::internal::ZonePreparseData"* %21 to i64
  %25 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 2
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 3
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %28, %26
  %30 = icmp ult i64 %29, 16
  br i1 %30, label %31, label %33, !prof !2

31:                                               ; preds = %23
  %32 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 16) #12
  br label %35

33:                                               ; preds = %23
  %34 = add i64 %26, 16
  store i64 %34, i64* %25, align 8
  br label %35

35:                                               ; preds = %31, %33
  %36 = phi i64 [ %32, %31 ], [ %26, %33 ]
  %37 = inttoptr i64 %36 to %"class.v8::internal::ZoneProducedPreparseData"*
  %38 = getelementptr inbounds %"class.v8::internal::ZoneProducedPreparseData", %"class.v8::internal::ZoneProducedPreparseData"* %37, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal24ZoneProducedPreparseDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %38, align 8
  %39 = getelementptr inbounds %"class.v8::internal::ZoneProducedPreparseData", %"class.v8::internal::ZoneProducedPreparseData"* %37, i64 0, i32 1
  %40 = bitcast %"class.v8::internal::ZonePreparseData"** %39 to i64*
  store i64 %24, i64* %40, align 8
  %41 = getelementptr inbounds %"class.v8::internal::ZoneProducedPreparseData", %"class.v8::internal::ZoneProducedPreparseData"* %37, i64 0, i32 0
  br label %42

42:                                               ; preds = %17, %35
  %43 = phi %"class.v8::internal::ProducedPreparseData"* [ %41, %35 ], [ null, %17 ]
  ret %"class.v8::internal::ProducedPreparseData"* %43
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::ConsumedPreparseData"* @_ZN2v88internal20ConsumedPreparseData3ForEPNS0_7IsolateENS0_6HandleINS0_12PreparseDataEEE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #1 align 2 {
  %3 = ptrtoint i64* %1 to i64
  %4 = ptrtoint %"class.v8::internal::Isolate"* %0 to i64
  %5 = tail call i8* @_Znwm(i64 40) #14
  %6 = bitcast i8* %5 to i32 (...)***
  %7 = getelementptr inbounds i8, i8* %5, i64 8
  %8 = tail call i8* @_Znwm(i64 16) #14
  %9 = ptrtoint i8* %8 to i64
  %10 = bitcast i8* %7 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 16, i1 false) #12
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 16
  %12 = bitcast i8* %11 to i32*
  store i32 0, i32* %12, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2v88internal26OnHeapConsumedPreparseDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %13 = getelementptr inbounds i8, i8* %5, i64 24
  %14 = bitcast i8* %13 to i64*
  store i64 %4, i64* %14, align 8
  %15 = getelementptr inbounds i8, i8* %5, i64 32
  %16 = bitcast i8* %15 to i64*
  store i64 %3, i64* %16, align 8
  %17 = bitcast i8* %5 to %"class.v8::internal::ConsumedPreparseData"*
  ret %"class.v8::internal::ConsumedPreparseData"* %17
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::ConsumedPreparseData"* @_ZN2v88internal20ConsumedPreparseData3ForEPNS0_4ZoneEPNS0_16ZonePreparseDataE(%"class.v8::internal::Zone"*, %"class.v8::internal::ZonePreparseData"*) local_unnamed_addr #1 align 2 {
  %3 = icmp eq %"class.v8::internal::ZonePreparseData"* %1, null
  br i1 %3, label %19, label %4

4:                                                ; preds = %2
  %5 = tail call i8* @_Znwm(i64 40) #14
  %6 = bitcast i8* %5 to i32 (...)***
  %7 = getelementptr inbounds i8, i8* %5, i64 8
  %8 = tail call i8* @_Znwm(i64 16) #14
  %9 = ptrtoint i8* %8 to i64
  %10 = bitcast i8* %7 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 16, i1 false) #12
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 16
  %12 = bitcast i8* %11 to i32*
  store i32 0, i32* %12, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2v88internal24ZoneConsumedPreparseDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %13 = getelementptr inbounds i8, i8* %5, i64 24
  %14 = bitcast i8* %13 to %"class.v8::internal::ZonePreparseData"**
  store %"class.v8::internal::ZonePreparseData"* %1, %"class.v8::internal::ZonePreparseData"** %14, align 8
  %15 = getelementptr inbounds %"class.v8::internal::ZonePreparseData", %"class.v8::internal::ZonePreparseData"* %1, i64 0, i32 0
  %16 = getelementptr inbounds i8, i8* %5, i64 32
  %17 = bitcast i8* %16 to %"class.v8::internal::ZoneVector"**
  store %"class.v8::internal::ZoneVector"* %15, %"class.v8::internal::ZoneVector"** %17, align 8
  %18 = bitcast i8* %5 to %"class.v8::internal::ConsumedPreparseData"*
  br label %19

19:                                               ; preds = %2, %4
  %20 = phi %"class.v8::internal::ConsumedPreparseData"* [ %18, %4 ], [ null, %2 ]
  ret %"class.v8::internal::ConsumedPreparseData"* %20
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal24BaseConsumedPreparseDataINS0_12PreparseDataEED2Ev(%"class.v8::internal::BaseConsumedPreparseData"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData", %"class.v8::internal::BaseConsumedPreparseData"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2v88internal24BaseConsumedPreparseDataINS0_12PreparseDataEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData", %"class.v8::internal::BaseConsumedPreparseData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"*, %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"** %3, align 8
  store %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"* null, %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"** %3, align 8
  %5 = icmp eq %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #14
  br label %8

8:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal26OnHeapConsumedPreparseDataD0Ev(%"class.v8::internal::OnHeapConsumedPreparseData"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::OnHeapConsumedPreparseData", %"class.v8::internal::OnHeapConsumedPreparseData"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2v88internal24BaseConsumedPreparseDataINS0_12PreparseDataEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::OnHeapConsumedPreparseData", %"class.v8::internal::OnHeapConsumedPreparseData"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"*, %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"** %3, align 8
  store %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"* null, %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"** %3, align 8
  %5 = icmp eq %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #14
  br label %8

8:                                                ; preds = %1, %6
  %9 = bitcast %"class.v8::internal::OnHeapConsumedPreparseData"* %0 to i8*
  tail call void @_ZdlPv(i8* %9) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::ProducedPreparseData"* @_ZN2v88internal24BaseConsumedPreparseDataINS0_12PreparseDataEE27GetDataForSkippableFunctionEPNS0_4ZoneEiPiS6_S6_S6_PbPNS0_12LanguageModeE(%"class.v8::internal::BaseConsumedPreparseData"*, %"class.v8::internal::Zone"*, i32, i32*, i32*, i32*, i32*, i8*, i8*) unnamed_addr #1 comdat align 2 {
  %10 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData", %"class.v8::internal::BaseConsumedPreparseData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"*, %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"** %10, align 8
  %12 = bitcast %"class.v8::internal::BaseConsumedPreparseData"* %0 to i64 (%"class.v8::internal::BaseConsumedPreparseData"*)***
  %13 = load i64 (%"class.v8::internal::BaseConsumedPreparseData"*)**, i64 (%"class.v8::internal::BaseConsumedPreparseData"*)*** %12, align 8
  %14 = getelementptr inbounds i64 (%"class.v8::internal::BaseConsumedPreparseData"*)*, i64 (%"class.v8::internal::BaseConsumedPreparseData"*)** %13, i64 4
  %15 = load i64 (%"class.v8::internal::BaseConsumedPreparseData"*)*, i64 (%"class.v8::internal::BaseConsumedPreparseData"*)** %14, align 8
  %16 = tail call i64 %15(%"class.v8::internal::BaseConsumedPreparseData"* %0) #12
  %17 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %16, i64* %17, align 8
  %18 = load %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"*, %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"** %10, align 8
  %19 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"* %18, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, 3
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = icmp sge i32 %25, %20
  %27 = sub nsw i32 %25, %20
  %28 = icmp ugt i32 %27, 4
  %29 = and i1 %26, %28
  br i1 %29, label %30, label %33, !prof !53

30:                                               ; preds = %9
  %31 = add i64 %22, 11
  %32 = sext i32 %20 to i64
  br label %34

33:                                               ; preds = %9
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

34:                                               ; preds = %30, %34
  %35 = phi i64 [ %32, %30 ], [ %38, %34 ]
  %36 = phi i32 [ 0, %30 ], [ %47, %34 ]
  %37 = phi i32 [ 0, %30 ], [ %46, %34 ]
  %38 = add i64 %35, 1
  %39 = trunc i64 %38 to i32
  store i32 %39, i32* %19, align 8
  %40 = add i64 %31, %35
  %41 = inttoptr i64 %40 to i8*
  %42 = load i8, i8* %41, align 1
  %43 = and i8 %42, 127
  %44 = zext i8 %43 to i32
  %45 = shl i32 %44, %36
  %46 = or i32 %45, %37
  %47 = add i32 %36, 7
  %48 = icmp slt i8 %42, 0
  br i1 %48, label %34, label %49

49:                                               ; preds = %34
  %50 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"* %18, i64 0, i32 2
  store i8 0, i8* %50, align 4
  %51 = icmp eq i32 %46, %2
  br i1 %51, label %53, label %52, !prof !52

52:                                               ; preds = %49
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.5, i64 0, i64 0)) #13
  unreachable

53:                                               ; preds = %49
  %54 = load %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"*, %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"** %10, align 8
  %55 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"* %54, i64 0, i32 1
  %56 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i32, i32* %55, align 8
  %58 = load i64, i64* %56, align 8
  %59 = add i64 %58, 11
  %60 = sext i32 %57 to i64
  br label %61

61:                                               ; preds = %61, %53
  %62 = phi i64 [ %65, %61 ], [ %60, %53 ]
  %63 = phi i32 [ %74, %61 ], [ 0, %53 ]
  %64 = phi i32 [ %73, %61 ], [ 0, %53 ]
  %65 = add i64 %62, 1
  %66 = trunc i64 %65 to i32
  store i32 %66, i32* %55, align 8
  %67 = add i64 %59, %62
  %68 = inttoptr i64 %67 to i8*
  %69 = load i8, i8* %68, align 1
  %70 = and i8 %69, 127
  %71 = zext i8 %70 to i32
  %72 = shl i32 %71, %63
  %73 = or i32 %72, %64
  %74 = add i32 %63, 7
  %75 = icmp slt i8 %69, 0
  br i1 %75, label %61, label %76

76:                                               ; preds = %61
  %77 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"* %54, i64 0, i32 2
  store i8 0, i8* %77, align 4
  store i32 %73, i32* %3, align 4
  %78 = load %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"*, %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"** %10, align 8
  %79 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"* %78, i64 0, i32 1
  %80 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load i32, i32* %79, align 8
  %82 = load i64, i64* %80, align 8
  %83 = add i64 %82, 11
  %84 = sext i32 %81 to i64
  br label %85

85:                                               ; preds = %85, %76
  %86 = phi i64 [ %89, %85 ], [ %84, %76 ]
  %87 = phi i32 [ %98, %85 ], [ 0, %76 ]
  %88 = phi i32 [ %97, %85 ], [ 0, %76 ]
  %89 = add i64 %86, 1
  %90 = trunc i64 %89 to i32
  store i32 %90, i32* %79, align 8
  %91 = add i64 %83, %86
  %92 = inttoptr i64 %91 to i8*
  %93 = load i8, i8* %92, align 1
  %94 = and i8 %93, 127
  %95 = zext i8 %94 to i32
  %96 = shl i32 %95, %87
  %97 = or i32 %96, %88
  %98 = add i32 %87, 7
  %99 = icmp slt i8 %93, 0
  br i1 %99, label %85, label %100

100:                                              ; preds = %85
  %101 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"* %78, i64 0, i32 2
  store i8 0, i8* %101, align 4
  %102 = and i32 %97, 1
  %103 = icmp eq i32 %102, 0
  %104 = lshr i32 %97, 2
  %105 = and i32 %104, 65535
  store i32 %105, i32* %4, align 4
  %106 = and i32 %97, 2
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %133

108:                                              ; preds = %100
  %109 = load %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"*, %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"** %10, align 8
  %110 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"* %109, i64 0, i32 1
  %111 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"* %109, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load i32, i32* %110, align 8
  %113 = load i64, i64* %111, align 8
  %114 = add i64 %113, 11
  %115 = sext i32 %112 to i64
  br label %116

116:                                              ; preds = %116, %108
  %117 = phi i64 [ %120, %116 ], [ %115, %108 ]
  %118 = phi i32 [ %129, %116 ], [ 0, %108 ]
  %119 = phi i32 [ %128, %116 ], [ 0, %108 ]
  %120 = add i64 %117, 1
  %121 = trunc i64 %120 to i32
  store i32 %121, i32* %110, align 8
  %122 = add i64 %114, %117
  %123 = inttoptr i64 %122 to i8*
  %124 = load i8, i8* %123, align 1
  %125 = and i8 %124, 127
  %126 = zext i8 %125 to i32
  %127 = shl i32 %126, %118
  %128 = or i32 %127, %119
  %129 = add i32 %118, 7
  %130 = icmp slt i8 %124, 0
  br i1 %130, label %116, label %131

131:                                              ; preds = %116
  %132 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"* %109, i64 0, i32 2
  store i8 0, i8* %132, align 4
  br label %133

133:                                              ; preds = %100, %131
  %134 = phi i32 [ %128, %131 ], [ %105, %100 ]
  store i32 %134, i32* %5, align 4
  %135 = load %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"*, %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"** %10, align 8
  %136 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"* %135, i64 0, i32 1
  %137 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"* %135, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = load i32, i32* %136, align 8
  %139 = load i64, i64* %137, align 8
  %140 = add i64 %139, 11
  %141 = sext i32 %138 to i64
  br label %142

142:                                              ; preds = %142, %133
  %143 = phi i64 [ %146, %142 ], [ %141, %133 ]
  %144 = phi i32 [ %155, %142 ], [ 0, %133 ]
  %145 = phi i32 [ %154, %142 ], [ 0, %133 ]
  %146 = add i64 %143, 1
  %147 = trunc i64 %146 to i32
  store i32 %147, i32* %136, align 8
  %148 = add i64 %140, %143
  %149 = inttoptr i64 %148 to i8*
  %150 = load i8, i8* %149, align 1
  %151 = and i8 %150, 127
  %152 = zext i8 %151 to i32
  %153 = shl i32 %152, %144
  %154 = or i32 %153, %145
  %155 = add i32 %144, 7
  %156 = icmp slt i8 %150, 0
  br i1 %156, label %142, label %157

157:                                              ; preds = %142
  %158 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"* %135, i64 0, i32 2
  store i8 0, i8* %158, align 4
  store i32 %154, i32* %6, align 4
  %159 = load %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"*, %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"** %10, align 8
  %160 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"* %159, i64 0, i32 2
  %161 = load i8, i8* %160, align 4
  %162 = icmp eq i8 %161, 0
  br i1 %162, label %167, label %163

163:                                              ; preds = %157
  %164 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"* %159, i64 0, i32 3
  %165 = load i8, i8* %164, align 1
  %166 = add i8 %161, -1
  br label %179

167:                                              ; preds = %157
  %168 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"* %159, i64 0, i32 1
  %169 = load i32, i32* %168, align 8
  %170 = add nsw i32 %169, 1
  store i32 %170, i32* %168, align 8
  %171 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"* %159, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %172 = load i64, i64* %171, align 8
  %173 = sext i32 %169 to i64
  %174 = add nsw i64 %173, 11
  %175 = add i64 %174, %172
  %176 = inttoptr i64 %175 to i8*
  %177 = load i8, i8* %176, align 1
  %178 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"* %159, i64 0, i32 3
  store i8 %177, i8* %178, align 1
  store i8 4, i8* %160, align 4
  br label %179

179:                                              ; preds = %163, %167
  %180 = phi i8 [ %166, %163 ], [ 3, %167 ]
  %181 = phi i8 [ %165, %163 ], [ %177, %167 ]
  %182 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"* %159, i64 0, i32 3
  store i8 %180, i8* %160, align 4
  %183 = shl i8 %181, 2
  store i8 %183, i8* %182, align 1
  %184 = lshr i8 %181, 6
  %185 = and i8 %184, 1
  store i8 %185, i8* %8, align 1
  %186 = lshr i8 %181, 7
  store i8 %186, i8* %7, align 1
  br i1 %103, label %196, label %187

187:                                              ; preds = %179
  %188 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData", %"class.v8::internal::BaseConsumedPreparseData"* %0, i64 0, i32 2
  %189 = load i32, i32* %188, align 8
  %190 = add nsw i32 %189, 1
  store i32 %190, i32* %188, align 8
  %191 = bitcast %"class.v8::internal::BaseConsumedPreparseData"* %0 to %"class.v8::internal::ProducedPreparseData"* (%"class.v8::internal::BaseConsumedPreparseData"*, %"class.v8::internal::Zone"*, i32)***
  %192 = load %"class.v8::internal::ProducedPreparseData"* (%"class.v8::internal::BaseConsumedPreparseData"*, %"class.v8::internal::Zone"*, i32)**, %"class.v8::internal::ProducedPreparseData"* (%"class.v8::internal::BaseConsumedPreparseData"*, %"class.v8::internal::Zone"*, i32)*** %191, align 8
  %193 = getelementptr inbounds %"class.v8::internal::ProducedPreparseData"* (%"class.v8::internal::BaseConsumedPreparseData"*, %"class.v8::internal::Zone"*, i32)*, %"class.v8::internal::ProducedPreparseData"* (%"class.v8::internal::BaseConsumedPreparseData"*, %"class.v8::internal::Zone"*, i32)** %192, i64 5
  %194 = load %"class.v8::internal::ProducedPreparseData"* (%"class.v8::internal::BaseConsumedPreparseData"*, %"class.v8::internal::Zone"*, i32)*, %"class.v8::internal::ProducedPreparseData"* (%"class.v8::internal::BaseConsumedPreparseData"*, %"class.v8::internal::Zone"*, i32)** %193, align 8
  %195 = tail call %"class.v8::internal::ProducedPreparseData"* %194(%"class.v8::internal::BaseConsumedPreparseData"* %0, %"class.v8::internal::Zone"* %1, i32 %189) #12
  br label %196

196:                                              ; preds = %179, %187
  %197 = phi %"class.v8::internal::ProducedPreparseData"* [ %195, %187 ], [ null, %179 ]
  ret %"class.v8::internal::ProducedPreparseData"* %197
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal24BaseConsumedPreparseDataINS0_12PreparseDataEE26RestoreScopeAllocationDataEPNS0_16DeclarationScopeEPNS0_15AstValueFactoryEPNS0_4ZoneE(%"class.v8::internal::BaseConsumedPreparseData"*, %"class.v8::internal::DeclarationScope"*, %"class.v8::internal::AstValueFactory"*, %"class.v8::internal::Zone"*) unnamed_addr #1 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData", %"class.v8::internal::BaseConsumedPreparseData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"*, %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"** %5, align 8
  %7 = bitcast %"class.v8::internal::BaseConsumedPreparseData"* %0 to i64 (%"class.v8::internal::BaseConsumedPreparseData"*)***
  %8 = load i64 (%"class.v8::internal::BaseConsumedPreparseData"*)**, i64 (%"class.v8::internal::BaseConsumedPreparseData"*)*** %7, align 8
  %9 = getelementptr inbounds i64 (%"class.v8::internal::BaseConsumedPreparseData"*)*, i64 (%"class.v8::internal::BaseConsumedPreparseData"*)** %8, i64 4
  %10 = load i64 (%"class.v8::internal::BaseConsumedPreparseData"*)*, i64 (%"class.v8::internal::BaseConsumedPreparseData"*)** %9, align 8
  %11 = tail call i64 %10(%"class.v8::internal::BaseConsumedPreparseData"* %0) #12
  %12 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %11, i64* %12, align 8
  %13 = bitcast %"class.v8::internal::DeclarationScope"* %1 to %"class.v8::internal::Scope"*
  tail call void @_ZN2v88internal24BaseConsumedPreparseDataINS0_12PreparseDataEE19RestoreDataForScopeEPNS0_5ScopeEPNS0_15AstValueFactoryEPNS0_4ZoneE(%"class.v8::internal::BaseConsumedPreparseData"* %0, %"class.v8::internal::Scope"* %13, %"class.v8::internal::AstValueFactory"* %2, %"class.v8::internal::Zone"* %3)
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal24BaseConsumedPreparseDataINS0_17ZoneVectorWrapperEED2Ev(%"class.v8::internal::BaseConsumedPreparseData.1263"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData.1263", %"class.v8::internal::BaseConsumedPreparseData.1263"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2v88internal24BaseConsumedPreparseDataINS0_17ZoneVectorWrapperEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData.1263", %"class.v8::internal::BaseConsumedPreparseData.1263"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"*, %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"** %3, align 8
  store %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"* null, %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"** %3, align 8
  %5 = icmp eq %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #14
  br label %8

8:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal24ZoneConsumedPreparseDataD0Ev(%"class.v8::internal::ZoneConsumedPreparseData"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::ZoneConsumedPreparseData", %"class.v8::internal::ZoneConsumedPreparseData"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2v88internal24BaseConsumedPreparseDataINS0_17ZoneVectorWrapperEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::ZoneConsumedPreparseData", %"class.v8::internal::ZoneConsumedPreparseData"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"*, %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"** %3, align 8
  store %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"* null, %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"** %3, align 8
  %5 = icmp eq %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #14
  br label %8

8:                                                ; preds = %1, %6
  %9 = bitcast %"class.v8::internal::ZoneConsumedPreparseData"* %0 to i8*
  tail call void @_ZdlPv(i8* %9) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::ProducedPreparseData"* @_ZN2v88internal24BaseConsumedPreparseDataINS0_17ZoneVectorWrapperEE27GetDataForSkippableFunctionEPNS0_4ZoneEiPiS6_S6_S6_PbPNS0_12LanguageModeE(%"class.v8::internal::BaseConsumedPreparseData.1263"*, %"class.v8::internal::Zone"*, i32, i32*, i32*, i32*, i32*, i8*, i8*) unnamed_addr #1 comdat align 2 {
  %10 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData.1263", %"class.v8::internal::BaseConsumedPreparseData.1263"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"*, %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"** %10, align 8
  %12 = bitcast %"class.v8::internal::BaseConsumedPreparseData.1263"* %0 to %"class.v8::internal::ZoneVector"* (%"class.v8::internal::BaseConsumedPreparseData.1263"*)***
  %13 = load %"class.v8::internal::ZoneVector"* (%"class.v8::internal::BaseConsumedPreparseData.1263"*)**, %"class.v8::internal::ZoneVector"* (%"class.v8::internal::BaseConsumedPreparseData.1263"*)*** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::ZoneVector"* (%"class.v8::internal::BaseConsumedPreparseData.1263"*)*, %"class.v8::internal::ZoneVector"* (%"class.v8::internal::BaseConsumedPreparseData.1263"*)** %13, i64 4
  %15 = load %"class.v8::internal::ZoneVector"* (%"class.v8::internal::BaseConsumedPreparseData.1263"*)*, %"class.v8::internal::ZoneVector"* (%"class.v8::internal::BaseConsumedPreparseData.1263"*)** %14, align 8
  %16 = tail call %"class.v8::internal::ZoneVector"* %15(%"class.v8::internal::BaseConsumedPreparseData.1263"* %0) #12
  %17 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"* %11, i64 0, i32 0, i32 0
  store %"class.v8::internal::ZoneVector"* %16, %"class.v8::internal::ZoneVector"** %17, align 8
  %18 = load %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"*, %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"** %10, align 8
  %19 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"* %18, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = bitcast %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"* %18 to %"class.std::__1::vector.1242"**
  %22 = load %"class.std::__1::vector.1242"*, %"class.std::__1::vector.1242"** %21, align 8
  %23 = getelementptr inbounds %"class.std::__1::vector.1242", %"class.std::__1::vector.1242"* %22, i64 0, i32 0, i32 1
  %24 = bitcast i8** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.std::__1::vector.1242"* %22 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %25, %27
  %29 = trunc i64 %28 to i32
  %30 = icmp sle i32 %20, %29
  %31 = sub nsw i32 %29, %20
  %32 = icmp ugt i32 %31, 4
  %33 = and i1 %30, %32
  br i1 %33, label %34, label %36, !prof !53

34:                                               ; preds = %9
  %35 = sext i32 %20 to i64
  br label %37

36:                                               ; preds = %9
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

37:                                               ; preds = %34, %49
  %38 = phi i64 [ %35, %34 ], [ %41, %49 ]
  %39 = phi i32 [ 0, %34 ], [ %57, %49 ]
  %40 = phi i32 [ 0, %34 ], [ %56, %49 ]
  %41 = add i64 %38, 1
  %42 = trunc i64 %41 to i32
  store i32 %42, i32* %19, align 8
  %43 = load i64, i64* %24, align 8
  %44 = load i64, i64* %26, align 8
  %45 = sub i64 %43, %44
  %46 = icmp ugt i64 %45, %38
  br i1 %46, label %49, label %47

47:                                               ; preds = %37
  %48 = bitcast %"class.std::__1::vector.1242"* %22 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %48) #13
  unreachable

49:                                               ; preds = %37
  %50 = inttoptr i64 %44 to i8*
  %51 = getelementptr inbounds i8, i8* %50, i64 %38
  %52 = load i8, i8* %51, align 1
  %53 = and i8 %52, 127
  %54 = zext i8 %53 to i32
  %55 = shl i32 %54, %39
  %56 = or i32 %55, %40
  %57 = add i32 %39, 7
  %58 = icmp slt i8 %52, 0
  br i1 %58, label %37, label %59

59:                                               ; preds = %49
  %60 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"* %18, i64 0, i32 2
  store i8 0, i8* %60, align 4
  %61 = icmp eq i32 %56, %2
  br i1 %61, label %63, label %62, !prof !52

62:                                               ; preds = %59
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.5, i64 0, i64 0)) #13
  unreachable

63:                                               ; preds = %59
  %64 = load %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"*, %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"** %10, align 8
  %65 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"* %64, i64 0, i32 1
  %66 = bitcast %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"* %64 to %"class.std::__1::vector.1242"**
  %67 = load i32, i32* %65, align 8
  %68 = load %"class.std::__1::vector.1242"*, %"class.std::__1::vector.1242"** %66, align 8
  %69 = getelementptr inbounds %"class.std::__1::vector.1242", %"class.std::__1::vector.1242"* %68, i64 0, i32 0, i32 1
  %70 = bitcast i8** %69 to i64*
  %71 = bitcast %"class.std::__1::vector.1242"* %68 to i64*
  %72 = sext i32 %67 to i64
  br label %73

73:                                               ; preds = %85, %63
  %74 = phi i64 [ %77, %85 ], [ %72, %63 ]
  %75 = phi i32 [ %93, %85 ], [ 0, %63 ]
  %76 = phi i32 [ %92, %85 ], [ 0, %63 ]
  %77 = add i64 %74, 1
  %78 = trunc i64 %77 to i32
  store i32 %78, i32* %65, align 8
  %79 = load i64, i64* %70, align 8
  %80 = load i64, i64* %71, align 8
  %81 = sub i64 %79, %80
  %82 = icmp ugt i64 %81, %74
  br i1 %82, label %85, label %83

83:                                               ; preds = %73
  %84 = bitcast %"class.std::__1::vector.1242"* %68 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %84) #13
  unreachable

85:                                               ; preds = %73
  %86 = inttoptr i64 %80 to i8*
  %87 = getelementptr inbounds i8, i8* %86, i64 %74
  %88 = load i8, i8* %87, align 1
  %89 = and i8 %88, 127
  %90 = zext i8 %89 to i32
  %91 = shl i32 %90, %75
  %92 = or i32 %91, %76
  %93 = add i32 %75, 7
  %94 = icmp slt i8 %88, 0
  br i1 %94, label %73, label %95

95:                                               ; preds = %85
  %96 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"* %64, i64 0, i32 2
  store i8 0, i8* %96, align 4
  store i32 %92, i32* %3, align 4
  %97 = load %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"*, %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"** %10, align 8
  %98 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"* %97, i64 0, i32 1
  %99 = bitcast %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"* %97 to %"class.std::__1::vector.1242"**
  %100 = load i32, i32* %98, align 8
  %101 = load %"class.std::__1::vector.1242"*, %"class.std::__1::vector.1242"** %99, align 8
  %102 = getelementptr inbounds %"class.std::__1::vector.1242", %"class.std::__1::vector.1242"* %101, i64 0, i32 0, i32 1
  %103 = bitcast i8** %102 to i64*
  %104 = bitcast %"class.std::__1::vector.1242"* %101 to i64*
  %105 = sext i32 %100 to i64
  br label %106

106:                                              ; preds = %118, %95
  %107 = phi i64 [ %110, %118 ], [ %105, %95 ]
  %108 = phi i32 [ %126, %118 ], [ 0, %95 ]
  %109 = phi i32 [ %125, %118 ], [ 0, %95 ]
  %110 = add i64 %107, 1
  %111 = trunc i64 %110 to i32
  store i32 %111, i32* %98, align 8
  %112 = load i64, i64* %103, align 8
  %113 = load i64, i64* %104, align 8
  %114 = sub i64 %112, %113
  %115 = icmp ugt i64 %114, %107
  br i1 %115, label %118, label %116

116:                                              ; preds = %106
  %117 = bitcast %"class.std::__1::vector.1242"* %101 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %117) #13
  unreachable

118:                                              ; preds = %106
  %119 = inttoptr i64 %113 to i8*
  %120 = getelementptr inbounds i8, i8* %119, i64 %107
  %121 = load i8, i8* %120, align 1
  %122 = and i8 %121, 127
  %123 = zext i8 %122 to i32
  %124 = shl i32 %123, %108
  %125 = or i32 %124, %109
  %126 = add i32 %108, 7
  %127 = icmp slt i8 %121, 0
  br i1 %127, label %106, label %128

128:                                              ; preds = %118
  %129 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"* %97, i64 0, i32 2
  store i8 0, i8* %129, align 4
  %130 = and i32 %125, 1
  %131 = icmp eq i32 %130, 0
  %132 = lshr i32 %125, 2
  %133 = and i32 %132, 65535
  store i32 %133, i32* %4, align 4
  %134 = and i32 %125, 2
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %170

136:                                              ; preds = %128
  %137 = load %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"*, %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"** %10, align 8
  %138 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"* %137, i64 0, i32 1
  %139 = bitcast %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"* %137 to %"class.std::__1::vector.1242"**
  %140 = load i32, i32* %138, align 8
  %141 = load %"class.std::__1::vector.1242"*, %"class.std::__1::vector.1242"** %139, align 8
  %142 = getelementptr inbounds %"class.std::__1::vector.1242", %"class.std::__1::vector.1242"* %141, i64 0, i32 0, i32 1
  %143 = bitcast i8** %142 to i64*
  %144 = bitcast %"class.std::__1::vector.1242"* %141 to i64*
  %145 = sext i32 %140 to i64
  br label %146

146:                                              ; preds = %158, %136
  %147 = phi i64 [ %150, %158 ], [ %145, %136 ]
  %148 = phi i32 [ %166, %158 ], [ 0, %136 ]
  %149 = phi i32 [ %165, %158 ], [ 0, %136 ]
  %150 = add i64 %147, 1
  %151 = trunc i64 %150 to i32
  store i32 %151, i32* %138, align 8
  %152 = load i64, i64* %143, align 8
  %153 = load i64, i64* %144, align 8
  %154 = sub i64 %152, %153
  %155 = icmp ugt i64 %154, %147
  br i1 %155, label %158, label %156

156:                                              ; preds = %146
  %157 = bitcast %"class.std::__1::vector.1242"* %141 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %157) #13
  unreachable

158:                                              ; preds = %146
  %159 = inttoptr i64 %153 to i8*
  %160 = getelementptr inbounds i8, i8* %159, i64 %147
  %161 = load i8, i8* %160, align 1
  %162 = and i8 %161, 127
  %163 = zext i8 %162 to i32
  %164 = shl i32 %163, %148
  %165 = or i32 %164, %149
  %166 = add i32 %148, 7
  %167 = icmp slt i8 %161, 0
  br i1 %167, label %146, label %168

168:                                              ; preds = %158
  %169 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"* %137, i64 0, i32 2
  store i8 0, i8* %169, align 4
  br label %170

170:                                              ; preds = %128, %168
  %171 = phi i32 [ %165, %168 ], [ %133, %128 ]
  store i32 %171, i32* %5, align 4
  %172 = load %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"*, %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"** %10, align 8
  %173 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"* %172, i64 0, i32 1
  %174 = bitcast %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"* %172 to %"class.std::__1::vector.1242"**
  %175 = load i32, i32* %173, align 8
  %176 = load %"class.std::__1::vector.1242"*, %"class.std::__1::vector.1242"** %174, align 8
  %177 = getelementptr inbounds %"class.std::__1::vector.1242", %"class.std::__1::vector.1242"* %176, i64 0, i32 0, i32 1
  %178 = bitcast i8** %177 to i64*
  %179 = bitcast %"class.std::__1::vector.1242"* %176 to i64*
  %180 = sext i32 %175 to i64
  br label %181

181:                                              ; preds = %193, %170
  %182 = phi i64 [ %185, %193 ], [ %180, %170 ]
  %183 = phi i32 [ %201, %193 ], [ 0, %170 ]
  %184 = phi i32 [ %200, %193 ], [ 0, %170 ]
  %185 = add i64 %182, 1
  %186 = trunc i64 %185 to i32
  store i32 %186, i32* %173, align 8
  %187 = load i64, i64* %178, align 8
  %188 = load i64, i64* %179, align 8
  %189 = sub i64 %187, %188
  %190 = icmp ugt i64 %189, %182
  br i1 %190, label %193, label %191

191:                                              ; preds = %181
  %192 = bitcast %"class.std::__1::vector.1242"* %176 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %192) #13
  unreachable

193:                                              ; preds = %181
  %194 = inttoptr i64 %188 to i8*
  %195 = getelementptr inbounds i8, i8* %194, i64 %182
  %196 = load i8, i8* %195, align 1
  %197 = and i8 %196, 127
  %198 = zext i8 %197 to i32
  %199 = shl i32 %198, %183
  %200 = or i32 %199, %184
  %201 = add i32 %183, 7
  %202 = icmp slt i8 %196, 0
  br i1 %202, label %181, label %203

203:                                              ; preds = %193
  %204 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"* %172, i64 0, i32 2
  store i8 0, i8* %204, align 4
  store i32 %200, i32* %6, align 4
  %205 = load %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"*, %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"** %10, align 8
  %206 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"* %205, i64 0, i32 2
  %207 = load i8, i8* %206, align 4
  %208 = icmp eq i8 %207, 0
  br i1 %208, label %213, label %209

209:                                              ; preds = %203
  %210 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"* %205, i64 0, i32 3
  %211 = load i8, i8* %210, align 1
  %212 = add i8 %207, -1
  br label %234

213:                                              ; preds = %203
  %214 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"* %205, i64 0, i32 1
  %215 = load i32, i32* %214, align 8
  %216 = add nsw i32 %215, 1
  store i32 %216, i32* %214, align 8
  %217 = bitcast %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"* %205 to %"class.std::__1::vector.1242"**
  %218 = load %"class.std::__1::vector.1242"*, %"class.std::__1::vector.1242"** %217, align 8
  %219 = sext i32 %215 to i64
  %220 = getelementptr inbounds %"class.std::__1::vector.1242", %"class.std::__1::vector.1242"* %218, i64 0, i32 0, i32 1
  %221 = bitcast i8** %220 to i64*
  %222 = load i64, i64* %221, align 8
  %223 = bitcast %"class.std::__1::vector.1242"* %218 to i64*
  %224 = load i64, i64* %223, align 8
  %225 = sub i64 %222, %224
  %226 = icmp ugt i64 %225, %219
  br i1 %226, label %229, label %227

227:                                              ; preds = %213
  %228 = bitcast %"class.std::__1::vector.1242"* %218 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %228) #13
  unreachable

229:                                              ; preds = %213
  %230 = inttoptr i64 %224 to i8*
  %231 = getelementptr inbounds i8, i8* %230, i64 %219
  %232 = load i8, i8* %231, align 1
  %233 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"* %205, i64 0, i32 3
  store i8 %232, i8* %233, align 1
  store i8 4, i8* %206, align 4
  br label %234

234:                                              ; preds = %209, %229
  %235 = phi i8 [ %212, %209 ], [ 3, %229 ]
  %236 = phi i8 [ %211, %209 ], [ %232, %229 ]
  %237 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"* %205, i64 0, i32 3
  store i8 %235, i8* %206, align 4
  %238 = shl i8 %236, 2
  store i8 %238, i8* %237, align 1
  %239 = lshr i8 %236, 6
  %240 = and i8 %239, 1
  store i8 %240, i8* %8, align 1
  %241 = lshr i8 %236, 7
  store i8 %241, i8* %7, align 1
  br i1 %131, label %251, label %242

242:                                              ; preds = %234
  %243 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData.1263", %"class.v8::internal::BaseConsumedPreparseData.1263"* %0, i64 0, i32 2
  %244 = load i32, i32* %243, align 8
  %245 = add nsw i32 %244, 1
  store i32 %245, i32* %243, align 8
  %246 = bitcast %"class.v8::internal::BaseConsumedPreparseData.1263"* %0 to %"class.v8::internal::ProducedPreparseData"* (%"class.v8::internal::BaseConsumedPreparseData.1263"*, %"class.v8::internal::Zone"*, i32)***
  %247 = load %"class.v8::internal::ProducedPreparseData"* (%"class.v8::internal::BaseConsumedPreparseData.1263"*, %"class.v8::internal::Zone"*, i32)**, %"class.v8::internal::ProducedPreparseData"* (%"class.v8::internal::BaseConsumedPreparseData.1263"*, %"class.v8::internal::Zone"*, i32)*** %246, align 8
  %248 = getelementptr inbounds %"class.v8::internal::ProducedPreparseData"* (%"class.v8::internal::BaseConsumedPreparseData.1263"*, %"class.v8::internal::Zone"*, i32)*, %"class.v8::internal::ProducedPreparseData"* (%"class.v8::internal::BaseConsumedPreparseData.1263"*, %"class.v8::internal::Zone"*, i32)** %247, i64 5
  %249 = load %"class.v8::internal::ProducedPreparseData"* (%"class.v8::internal::BaseConsumedPreparseData.1263"*, %"class.v8::internal::Zone"*, i32)*, %"class.v8::internal::ProducedPreparseData"* (%"class.v8::internal::BaseConsumedPreparseData.1263"*, %"class.v8::internal::Zone"*, i32)** %248, align 8
  %250 = tail call %"class.v8::internal::ProducedPreparseData"* %249(%"class.v8::internal::BaseConsumedPreparseData.1263"* %0, %"class.v8::internal::Zone"* %1, i32 %244) #12
  br label %251

251:                                              ; preds = %234, %242
  %252 = phi %"class.v8::internal::ProducedPreparseData"* [ %250, %242 ], [ null, %234 ]
  ret %"class.v8::internal::ProducedPreparseData"* %252
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal24BaseConsumedPreparseDataINS0_17ZoneVectorWrapperEE26RestoreScopeAllocationDataEPNS0_16DeclarationScopeEPNS0_15AstValueFactoryEPNS0_4ZoneE(%"class.v8::internal::BaseConsumedPreparseData.1263"*, %"class.v8::internal::DeclarationScope"*, %"class.v8::internal::AstValueFactory"*, %"class.v8::internal::Zone"*) unnamed_addr #1 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData.1263", %"class.v8::internal::BaseConsumedPreparseData.1263"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"*, %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"** %5, align 8
  %7 = bitcast %"class.v8::internal::BaseConsumedPreparseData.1263"* %0 to %"class.v8::internal::ZoneVector"* (%"class.v8::internal::BaseConsumedPreparseData.1263"*)***
  %8 = load %"class.v8::internal::ZoneVector"* (%"class.v8::internal::BaseConsumedPreparseData.1263"*)**, %"class.v8::internal::ZoneVector"* (%"class.v8::internal::BaseConsumedPreparseData.1263"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::ZoneVector"* (%"class.v8::internal::BaseConsumedPreparseData.1263"*)*, %"class.v8::internal::ZoneVector"* (%"class.v8::internal::BaseConsumedPreparseData.1263"*)** %8, i64 4
  %10 = load %"class.v8::internal::ZoneVector"* (%"class.v8::internal::BaseConsumedPreparseData.1263"*)*, %"class.v8::internal::ZoneVector"* (%"class.v8::internal::BaseConsumedPreparseData.1263"*)** %9, align 8
  %11 = tail call %"class.v8::internal::ZoneVector"* %10(%"class.v8::internal::BaseConsumedPreparseData.1263"* %0) #12
  %12 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"* %6, i64 0, i32 0, i32 0
  store %"class.v8::internal::ZoneVector"* %11, %"class.v8::internal::ZoneVector"** %12, align 8
  %13 = bitcast %"class.v8::internal::DeclarationScope"* %1 to %"class.v8::internal::Scope"*
  tail call void @_ZN2v88internal24BaseConsumedPreparseDataINS0_17ZoneVectorWrapperEE19RestoreDataForScopeEPNS0_5ScopeEPNS0_15AstValueFactoryEPNS0_4ZoneE(%"class.v8::internal::BaseConsumedPreparseData.1263"* %0, %"class.v8::internal::Scope"* %13, %"class.v8::internal::AstValueFactory"* %2, %"class.v8::internal::Zone"* %3)
  ret void
}

declare void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"*, i64, i64, i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64, i64, i64) local_unnamed_addr #5

declare i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"*, i64) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal24BaseConsumedPreparseDataINS0_12PreparseDataEED0Ev(%"class.v8::internal::BaseConsumedPreparseData"*) unnamed_addr #7 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal24BaseConsumedPreparseDataINS0_17ZoneVectorWrapperEED0Ev(%"class.v8::internal::BaseConsumedPreparseData.1263"*) unnamed_addr #7 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIPvNS_9allocatorIS1_EEE8__appendEm(%"class.std::__1::vector.2"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i8*** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i8*** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to i8**
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds i8*, i8** %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr i8*, i8** %13, i64 %18
  %20 = bitcast i8** %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 8
  %25 = and i64 %24, -8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %25, i1 false) #12
  %26 = ptrtoint i8** %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.2"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 3
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 2305843009213693951
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.2"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #13
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, 1152921504606846975
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 2
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 2305843009213693951
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #13
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 2305843009213693951, %38 ]
  %52 = shl i64 %51, 3
  %53 = tail call i8* @_Znwm(i64 %52) #14
  %54 = bitcast i8* %53 to i8**
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi i8** [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds i8*, i8** %57, i64 %33
  %59 = getelementptr inbounds i8*, i8** %57, i64 %56
  %60 = getelementptr inbounds i8*, i8** %58, i64 %1
  %61 = bitcast i8** %58 to i8*
  %62 = shl i64 %1, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 %62, i1 false) #12
  %63 = ptrtoint i8** %59 to i64
  %64 = ptrtoint i8** %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 0
  %66 = load i8**, i8*** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint i8** %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 3
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds i8*, i8** %58, i64 %71
  %73 = ptrtoint i8** %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast i8** %72 to i8*
  %77 = bitcast i8** %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %77, i64 %69, i1 false) #12
  %78 = load i8**, i8*** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi i8** [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq i8** %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast i8** %80 to i8*
  tail call void @_ZdlPv(i8* %83) #14
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal27BuilderProducedPreparseData9SerializeEPNS0_7IsolateE(%"class.v8::internal::BuilderProducedPreparseData"*, %"class.v8::internal::Isolate"*) unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::BuilderProducedPreparseData", %"class.v8::internal::BuilderProducedPreparseData"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::PreparseDataBuilder"*, %"class.v8::internal::PreparseDataBuilder"** %3, align 8
  %5 = tail call i64* @_ZN2v88internal19PreparseDataBuilder9SerializeEPNS0_7IsolateE(%"class.v8::internal::PreparseDataBuilder"* %4, %"class.v8::internal::Isolate"* %1)
  ret i64* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal27BuilderProducedPreparseData9SerializeEPNS0_12LocalIsolateE(%"class.v8::internal::BuilderProducedPreparseData"*, %"class.v8::internal::LocalIsolate"*) unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::BuilderProducedPreparseData", %"class.v8::internal::BuilderProducedPreparseData"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::PreparseDataBuilder"*, %"class.v8::internal::PreparseDataBuilder"** %3, align 8
  %5 = tail call i64* @_ZN2v88internal19PreparseDataBuilder9SerializeEPNS0_12LocalIsolateE(%"class.v8::internal::PreparseDataBuilder"* %4, %"class.v8::internal::LocalIsolate"* %1)
  ret i64* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::ZonePreparseData"* @_ZN2v88internal27BuilderProducedPreparseData9SerializeEPNS0_4ZoneE(%"class.v8::internal::BuilderProducedPreparseData"*, %"class.v8::internal::Zone"*) unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::BuilderProducedPreparseData", %"class.v8::internal::BuilderProducedPreparseData"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::PreparseDataBuilder"*, %"class.v8::internal::PreparseDataBuilder"** %3, align 8
  %5 = tail call %"class.v8::internal::ZonePreparseData"* @_ZN2v88internal19PreparseDataBuilder9SerializeEPNS0_4ZoneE(%"class.v8::internal::PreparseDataBuilder"* %4, %"class.v8::internal::Zone"* %1)
  ret %"class.v8::internal::ZonePreparseData"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal26OnHeapProducedPreparseData9SerializeEPNS0_7IsolateE(%"class.v8::internal::OnHeapProducedPreparseData"*, %"class.v8::internal::Isolate"*) unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::OnHeapProducedPreparseData", %"class.v8::internal::OnHeapProducedPreparseData"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  ret i64* %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal26OnHeapProducedPreparseData9SerializeEPNS0_12LocalIsolateE(%"class.v8::internal::OnHeapProducedPreparseData"*, %"class.v8::internal::LocalIsolate"*) unnamed_addr #1 comdat align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0)) #13
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::ZonePreparseData"* @_ZN2v88internal26OnHeapProducedPreparseData9SerializeEPNS0_4ZoneE(%"class.v8::internal::OnHeapProducedPreparseData"*, %"class.v8::internal::Zone"*) unnamed_addr #1 comdat align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0)) #13
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal24ZoneProducedPreparseData9SerializeEPNS0_7IsolateE(%"class.v8::internal::ZoneProducedPreparseData"*, %"class.v8::internal::Isolate"*) unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::ZoneProducedPreparseData", %"class.v8::internal::ZoneProducedPreparseData"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::ZonePreparseData"*, %"class.v8::internal::ZonePreparseData"** %3, align 8
  %5 = tail call i64* @_ZN2v88internal16ZonePreparseData9SerializeEPNS0_7IsolateE(%"class.v8::internal::ZonePreparseData"* %4, %"class.v8::internal::Isolate"* %1)
  ret i64* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal24ZoneProducedPreparseData9SerializeEPNS0_12LocalIsolateE(%"class.v8::internal::ZoneProducedPreparseData"*, %"class.v8::internal::LocalIsolate"*) unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::ZoneProducedPreparseData", %"class.v8::internal::ZoneProducedPreparseData"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::ZonePreparseData"*, %"class.v8::internal::ZonePreparseData"** %3, align 8
  %5 = tail call i64* @_ZN2v88internal16ZonePreparseData9SerializeEPNS0_12LocalIsolateE(%"class.v8::internal::ZonePreparseData"* %4, %"class.v8::internal::LocalIsolate"* %1)
  ret i64* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::ZonePreparseData"* @_ZN2v88internal24ZoneProducedPreparseData9SerializeEPNS0_4ZoneE(%"class.v8::internal::ZoneProducedPreparseData"*, %"class.v8::internal::Zone"*) unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::ZoneProducedPreparseData", %"class.v8::internal::ZoneProducedPreparseData"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::ZonePreparseData"*, %"class.v8::internal::ZonePreparseData"** %3, align 8
  ret %"class.v8::internal::ZonePreparseData"* %4
}

declare i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"*, i64) local_unnamed_addr #5

declare i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal24BaseConsumedPreparseDataINS0_12PreparseDataEE19RestoreDataForScopeEPNS0_5ScopeEPNS0_15AstValueFactoryEPNS0_4ZoneE(%"class.v8::internal::BaseConsumedPreparseData"*, %"class.v8::internal::Scope"*, %"class.v8::internal::AstValueFactory"*, %"class.v8::internal::Zone"*) local_unnamed_addr #1 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %1, i64 0, i32 13
  %6 = load i16, i16* %5, align 1
  %7 = and i16 %6, 256
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %15, label %9

9:                                                ; preds = %4
  %10 = tail call %"class.v8::internal::DeclarationScope"* @_ZN2v88internal5Scope18AsDeclarationScopeEv(%"class.v8::internal::Scope"* %1) #12
  %11 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %10, i64 0, i32 1
  %12 = load i16, i16* %11, align 1
  %13 = and i16 %12, 256
  %14 = icmp eq i16 %13, 0
  br i1 %14, label %15, label %292

15:                                               ; preds = %9, %4
  %16 = tail call zeroext i1 @_ZN2v88internal19PreparseDataBuilder14ScopeNeedsDataEPNS0_5ScopeE(%"class.v8::internal::Scope"* %1)
  br i1 %16, label %17, label %292

17:                                               ; preds = %15
  %18 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData", %"class.v8::internal::BaseConsumedPreparseData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"*, %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"* %19, i64 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, 3
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = icmp sgt i32 %26, %21
  br i1 %27, label %29, label %28, !prof !53

28:                                               ; preds = %17
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.6, i64 0, i64 0)) #13
  unreachable

29:                                               ; preds = %17
  %30 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"* %19, i64 0, i32 2
  store i8 0, i8* %30, align 4
  %31 = add nsw i32 %21, 1
  store i32 %31, i32* %20, align 8
  %32 = sext i32 %21 to i64
  %33 = add nsw i64 %32, 11
  %34 = add i64 %33, %23
  %35 = inttoptr i64 %34 to i8*
  %36 = load i8, i8* %35, align 1
  %37 = and i8 %36, 1
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %84, label %39

39:                                               ; preds = %29
  %40 = load i16, i16* %5, align 1
  %41 = or i16 %40, 2
  store i16 %41, i16* %5, align 1
  %42 = tail call %"class.v8::internal::DeclarationScope"* @_ZN2v88internal5Scope19GetDeclarationScopeEv(%"class.v8::internal::Scope"* %1) #12
  %43 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %42, i64 0, i32 0, i32 13
  %44 = load i16, i16* %43, align 1
  %45 = or i16 %44, 2
  store i16 %45, i16* %43, align 1
  %46 = and i16 %44, 1
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %48, label %54

48:                                               ; preds = %39
  %49 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %42, i64 0, i32 0, i32 12
  %50 = load i8, i8* %49, align 8
  switch i8 %50, label %51 [
    i8 4, label %54
    i8 1, label %54
  ]

51:                                               ; preds = %48
  %52 = or i16 %44, 6
  store i16 %52, i16* %43, align 1
  %53 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %42, i64 0, i32 0, i32 11
  store i32 3, i32* %53, align 4
  br label %54

54:                                               ; preds = %51, %48, %48, %39
  %55 = load i16, i16* %5, align 1
  %56 = or i16 %55, 64
  store i16 %56, i16* %5, align 1
  %57 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %1, i64 0, i32 0
  %58 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %57, align 8
  %59 = icmp eq %"class.v8::internal::Scope"* %58, null
  br i1 %59, label %71, label %60

60:                                               ; preds = %54, %66
  %61 = phi %"class.v8::internal::Scope"* [ %69, %66 ], [ %58, %54 ]
  %62 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %61, i64 0, i32 13
  %63 = load i16, i16* %62, align 1
  %64 = and i16 %63, 64
  %65 = icmp eq i16 %64, 0
  br i1 %65, label %66, label %71

66:                                               ; preds = %60
  %67 = or i16 %63, 64
  store i16 %67, i16* %62, align 1
  %68 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %61, i64 0, i32 0
  %69 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %68, align 8
  %70 = icmp eq %"class.v8::internal::Scope"* %69, null
  br i1 %70, label %71, label %60

71:                                               ; preds = %66, %60, %54
  %72 = tail call %"class.v8::internal::DeclarationScope"* @_ZN2v88internal5Scope16GetReceiverScopeEv(%"class.v8::internal::Scope"* %1) #12
  %73 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %72, i64 0, i32 2
  %74 = load i8, i8* %73, align 1
  switch i8 %74, label %84 [
    i8 25, label %75
    i8 24, label %75
    i8 23, label %75
    i8 22, label %75
    i8 21, label %75
    i8 20, label %75
    i8 17, label %75
    i8 16, label %75
    i8 15, label %75
    i8 14, label %75
    i8 10, label %75
    i8 9, label %75
    i8 8, label %75
    i8 7, label %75
    i8 6, label %75
    i8 5, label %75
    i8 4, label %75
    i8 3, label %75
  ]

75:                                               ; preds = %71, %71, %71, %71, %71, %71, %71, %71, %71, %71, %71, %71, %71, %71, %71, %71, %71, %71
  %76 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %72, i64 0, i32 1
  %77 = load i16, i16* %76, align 1
  %78 = or i16 %77, 32
  store i16 %78, i16* %76, align 1
  %79 = bitcast %"class.v8::internal::DeclarationScope"* %72 to %"class.v8::internal::Scope"*
  %80 = tail call %"class.v8::internal::Scope"* @_ZN2v88internal5Scope18GetHomeObjectScopeEv(%"class.v8::internal::Scope"* %79) #12
  %81 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %80, i64 0, i32 13
  %82 = load i16, i16* %81, align 1
  %83 = or i16 %82, 8192
  store i16 %83, i16* %81, align 1
  br label %84

84:                                               ; preds = %29, %75, %71
  %85 = and i8 %36, 2
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %104, label %87

87:                                               ; preds = %84
  %88 = load i16, i16* %5, align 1
  %89 = or i16 %88, 64
  store i16 %89, i16* %5, align 1
  %90 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %1, i64 0, i32 0
  %91 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %90, align 8
  %92 = icmp eq %"class.v8::internal::Scope"* %91, null
  br i1 %92, label %104, label %93

93:                                               ; preds = %87, %99
  %94 = phi %"class.v8::internal::Scope"* [ %102, %99 ], [ %91, %87 ]
  %95 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %94, i64 0, i32 13
  %96 = load i16, i16* %95, align 1
  %97 = and i16 %96, 64
  %98 = icmp eq i16 %97, 0
  br i1 %98, label %99, label %104

99:                                               ; preds = %93
  %100 = or i16 %96, 64
  store i16 %100, i16* %95, align 1
  %101 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %94, i64 0, i32 0
  %102 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %101, align 8
  %103 = icmp eq %"class.v8::internal::Scope"* %102, null
  br i1 %103, label %104, label %93

104:                                              ; preds = %99, %93, %84, %87
  %105 = and i8 %36, 4
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %109, label %107

107:                                              ; preds = %104
  %108 = tail call %"class.v8::internal::DeclarationScope"* @_ZN2v88internal5Scope18AsDeclarationScopeEv(%"class.v8::internal::Scope"* %1) #12
  tail call void @_ZN2v88internal16DeclarationScope40RecordNeedsPrivateNameContextChainRecalcEv(%"class.v8::internal::DeclarationScope"* %108) #12
  br label %109

109:                                              ; preds = %104, %107
  %110 = and i8 %36, 8
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %189, label %112

112:                                              ; preds = %109
  %113 = tail call %"class.v8::internal::ClassScope"* @_ZN2v88internal5Scope12AsClassScopeEv(%"class.v8::internal::Scope"* %1) #12
  %114 = getelementptr inbounds %"class.v8::internal::ClassScope", %"class.v8::internal::ClassScope"* %113, i64 0, i32 6
  %115 = load i8, i8* %114, align 2, !range !43
  %116 = icmp eq i8 %115, 0
  %117 = tail call %"class.v8::internal::ClassScope"* @_ZN2v88internal5Scope12AsClassScopeEv(%"class.v8::internal::Scope"* %1) #12
  br i1 %116, label %179, label %118

118:                                              ; preds = %112
  %119 = tail call %"class.v8::internal::Variable"* @_ZN2v88internal10ClassScope20DeclareClassVariableEPNS0_15AstValueFactoryEPKNS0_12AstRawStringEi(%"class.v8::internal::ClassScope"* %117, %"class.v8::internal::AstValueFactory"* %2, %"class.v8::internal::AstRawString"* null, i32 -1) #12
  %120 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %3, i64 0, i32 2
  %121 = load i64, i64* %120, align 8
  %122 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %3, i64 0, i32 3
  %123 = load i64, i64* %122, align 8
  %124 = sub i64 %123, %121
  %125 = icmp ult i64 %124, 8
  br i1 %125, label %126, label %128, !prof !2

126:                                              ; preds = %118
  %127 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %3, i64 8) #12
  br label %130

128:                                              ; preds = %118
  %129 = add i64 %121, 8
  store i64 %129, i64* %120, align 8
  br label %130

130:                                              ; preds = %128, %126
  %131 = phi i64 [ %127, %126 ], [ %121, %128 ]
  %132 = inttoptr i64 %131 to %"class.v8::internal::EmptyStatement"*
  %133 = getelementptr inbounds %"class.v8::internal::EmptyStatement", %"class.v8::internal::EmptyStatement"* %132, i64 0, i32 0, i32 0, i32 0
  store i32 -1, i32* %133, align 4
  %134 = getelementptr inbounds %"class.v8::internal::EmptyStatement", %"class.v8::internal::EmptyStatement"* %132, i64 0, i32 0, i32 0, i32 1
  store i32 10, i32* %134, align 4
  %135 = load i64, i64* %120, align 8
  %136 = load i64, i64* %122, align 8
  %137 = sub i64 %136, %135
  %138 = icmp ult i64 %137, 8
  br i1 %138, label %139, label %141, !prof !2

139:                                              ; preds = %130
  %140 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %3, i64 8) #12
  br label %143

141:                                              ; preds = %130
  %142 = add i64 %135, 8
  store i64 %142, i64* %120, align 8
  br label %143

143:                                              ; preds = %141, %139
  %144 = phi i64 [ %140, %139 ], [ %135, %141 ]
  %145 = inttoptr i64 %144 to %"class.v8::internal::ThisExpression"*
  %146 = getelementptr inbounds %"class.v8::internal::ThisExpression", %"class.v8::internal::ThisExpression"* %145, i64 0, i32 0, i32 0, i32 0
  store i32 -1, i32* %146, align 4
  %147 = getelementptr inbounds %"class.v8::internal::ThisExpression", %"class.v8::internal::ThisExpression"* %145, i64 0, i32 0, i32 0, i32 1
  store i32 49, i32* %147, align 4
  %148 = load i64, i64* %120, align 8
  %149 = load i64, i64* %122, align 8
  %150 = sub i64 %149, %148
  %151 = icmp ult i64 %150, 8
  br i1 %151, label %152, label %154, !prof !2

152:                                              ; preds = %143
  %153 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %3, i64 8) #12
  br label %156

154:                                              ; preds = %143
  %155 = add i64 %148, 8
  store i64 %155, i64* %120, align 8
  br label %156

156:                                              ; preds = %152, %154
  %157 = phi i64 [ %153, %152 ], [ %148, %154 ]
  %158 = inttoptr i64 %157 to %"class.v8::internal::FailureExpression"*
  %159 = getelementptr inbounds %"class.v8::internal::FailureExpression", %"class.v8::internal::FailureExpression"* %158, i64 0, i32 0, i32 0, i32 0
  store i32 -1, i32* %159, align 4
  %160 = getelementptr inbounds %"class.v8::internal::FailureExpression", %"class.v8::internal::FailureExpression"* %158, i64 0, i32 0, i32 0, i32 1
  store i32 55, i32* %160, align 4
  %161 = load i64, i64* %120, align 8
  %162 = load i64, i64* %122, align 8
  %163 = sub i64 %162, %161
  %164 = icmp ult i64 %163, 24
  br i1 %164, label %165, label %167, !prof !2

165:                                              ; preds = %156
  %166 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %3, i64 24) #12
  br label %169

167:                                              ; preds = %156
  %168 = add i64 %161, 24
  store i64 %168, i64* %120, align 8
  br label %169

169:                                              ; preds = %165, %167
  %170 = phi i64 [ %166, %165 ], [ %161, %167 ]
  %171 = inttoptr i64 %170 to %"class.v8::internal::VariableDeclaration"*
  %172 = getelementptr inbounds %"class.v8::internal::VariableDeclaration", %"class.v8::internal::VariableDeclaration"* %171, i64 0, i32 0, i32 0, i32 0
  store i32 -1, i32* %172, align 4
  %173 = getelementptr inbounds %"class.v8::internal::VariableDeclaration", %"class.v8::internal::VariableDeclaration"* %171, i64 0, i32 0, i32 0, i32 1
  %174 = getelementptr inbounds %"class.v8::internal::VariableDeclaration", %"class.v8::internal::VariableDeclaration"* %171, i64 0, i32 0, i32 2
  store %"class.v8::internal::Declaration"* null, %"class.v8::internal::Declaration"** %174, align 8
  store i32 0, i32* %173, align 4
  %175 = getelementptr inbounds %"class.v8::internal::VariableDeclaration", %"class.v8::internal::VariableDeclaration"* %171, i64 0, i32 0
  %176 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %1, i64 0, i32 6, i32 1
  %177 = load %"class.v8::internal::Declaration"**, %"class.v8::internal::Declaration"*** %176, align 8
  store %"class.v8::internal::Declaration"* %175, %"class.v8::internal::Declaration"** %177, align 8
  store %"class.v8::internal::Declaration"** %174, %"class.v8::internal::Declaration"*** %176, align 8
  %178 = getelementptr inbounds %"class.v8::internal::VariableDeclaration", %"class.v8::internal::VariableDeclaration"* %171, i64 0, i32 0, i32 1
  store %"class.v8::internal::Variable"* %119, %"class.v8::internal::Variable"** %178, align 8
  br label %182

179:                                              ; preds = %112
  %180 = getelementptr inbounds %"class.v8::internal::ClassScope", %"class.v8::internal::ClassScope"* %117, i64 0, i32 3
  %181 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %180, align 8
  br label %182

182:                                              ; preds = %179, %169
  %183 = phi %"class.v8::internal::Variable"* [ %119, %169 ], [ %181, %179 ]
  %184 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %183, i64 0, i32 6
  %185 = load i16, i16* %184, align 8
  %186 = or i16 %185, 3072
  store i16 %186, i16* %184, align 8
  %187 = tail call %"class.v8::internal::ClassScope"* @_ZN2v88internal5Scope12AsClassScopeEv(%"class.v8::internal::Scope"* %1) #12
  %188 = getelementptr inbounds %"class.v8::internal::ClassScope", %"class.v8::internal::ClassScope"* %187, i64 0, i32 7
  store i8 1, i8* %188, align 1
  br label %189

189:                                              ; preds = %109, %182
  %190 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %1, i64 0, i32 12
  %191 = load i8, i8* %190, align 8
  %192 = icmp eq i8 %191, 2
  br i1 %192, label %193, label %233

193:                                              ; preds = %189
  %194 = tail call %"class.v8::internal::DeclarationScope"* @_ZN2v88internal5Scope18AsDeclarationScopeEv(%"class.v8::internal::Scope"* %1) #12
  %195 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %194, i64 0, i32 9
  %196 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %195, align 8
  %197 = icmp eq %"class.v8::internal::Variable"* %196, null
  br i1 %197, label %233, label %198

198:                                              ; preds = %193
  %199 = load %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"*, %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"** %18, align 8
  %200 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"* %199, i64 0, i32 2
  %201 = load i8, i8* %200, align 4
  %202 = icmp eq i8 %201, 0
  br i1 %202, label %207, label %203

203:                                              ; preds = %198
  %204 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"* %199, i64 0, i32 3
  %205 = load i8, i8* %204, align 1
  %206 = add i8 %201, -1
  br label %219

207:                                              ; preds = %198
  %208 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"* %199, i64 0, i32 1
  %209 = load i32, i32* %208, align 8
  %210 = add nsw i32 %209, 1
  store i32 %210, i32* %208, align 8
  %211 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"* %199, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = load i64, i64* %211, align 8
  %213 = sext i32 %209 to i64
  %214 = add nsw i64 %213, 11
  %215 = add i64 %214, %212
  %216 = inttoptr i64 %215 to i8*
  %217 = load i8, i8* %216, align 1
  %218 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"* %199, i64 0, i32 3
  store i8 %217, i8* %218, align 1
  store i8 4, i8* %200, align 4
  br label %219

219:                                              ; preds = %207, %203
  %220 = phi i8 [ %206, %203 ], [ 3, %207 ]
  %221 = phi i8 [ %205, %203 ], [ %217, %207 ]
  %222 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"* %199, i64 0, i32 3
  store i8 %220, i8* %200, align 4
  %223 = shl i8 %221, 2
  store i8 %223, i8* %222, align 1
  %224 = and i8 %221, 64
  %225 = icmp eq i8 %224, 0
  br i1 %225, label %227, label %226

226:                                              ; preds = %219
  tail call void @_ZN2v88internal8Variable16SetMaybeAssignedEv(%"class.v8::internal::Variable"* nonnull %196) #12
  br label %227

227:                                              ; preds = %226, %219
  %228 = icmp slt i8 %221, 0
  br i1 %228, label %229, label %233

229:                                              ; preds = %227
  %230 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %196, i64 0, i32 6
  %231 = load i16, i16* %230, align 8
  %232 = or i16 %231, 3072
  store i16 %232, i16* %230, align 8
  br label %233

233:                                              ; preds = %229, %227, %193, %189
  %234 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %1, i64 0, i32 4, i32 0
  %235 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %1, i64 0, i32 4, i32 1
  %236 = load %"class.v8::internal::Variable"**, %"class.v8::internal::Variable"*** %235, align 8
  %237 = icmp eq %"class.v8::internal::Variable"** %234, %236
  br i1 %237, label %238, label %247

238:                                              ; preds = %288, %233
  %239 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %1, i64 0, i32 1
  %240 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %239, align 8
  %241 = icmp eq %"class.v8::internal::Scope"* %240, null
  br i1 %241, label %292, label %242

242:                                              ; preds = %238, %242
  %243 = phi %"class.v8::internal::Scope"* [ %245, %242 ], [ %240, %238 ]
  tail call void @_ZN2v88internal24BaseConsumedPreparseDataINS0_12PreparseDataEE19RestoreDataForScopeEPNS0_5ScopeEPNS0_15AstValueFactoryEPNS0_4ZoneE(%"class.v8::internal::BaseConsumedPreparseData"* %0, %"class.v8::internal::Scope"* nonnull %243, %"class.v8::internal::AstValueFactory"* %2, %"class.v8::internal::Zone"* %3) #12
  %244 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %243, i64 0, i32 2
  %245 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %244, align 8
  %246 = icmp eq %"class.v8::internal::Scope"* %245, null
  br i1 %246, label %292, label %242

247:                                              ; preds = %233, %288
  %248 = phi %"class.v8::internal::Variable"** [ %290, %288 ], [ %234, %233 ]
  %249 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %248, align 8
  %250 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %249, i64 0, i32 6
  %251 = load i16, i16* %250, align 8
  %252 = trunc i16 %251 to i8
  %253 = and i8 %252, 15
  switch i8 %253, label %288 [
    i8 10, label %254
    i8 9, label %254
    i8 8, label %254
    i8 7, label %254
    i8 2, label %254
    i8 1, label %254
    i8 0, label %254
  ]

254:                                              ; preds = %247, %247, %247, %247, %247, %247, %247
  %255 = load %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"*, %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"** %18, align 8
  %256 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"* %255, i64 0, i32 2
  %257 = load i8, i8* %256, align 4
  %258 = icmp eq i8 %257, 0
  br i1 %258, label %263, label %259

259:                                              ; preds = %254
  %260 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"* %255, i64 0, i32 3
  %261 = load i8, i8* %260, align 1
  %262 = add i8 %257, -1
  br label %275

263:                                              ; preds = %254
  %264 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"* %255, i64 0, i32 1
  %265 = load i32, i32* %264, align 8
  %266 = add nsw i32 %265, 1
  store i32 %266, i32* %264, align 8
  %267 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"* %255, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %268 = load i64, i64* %267, align 8
  %269 = sext i32 %265 to i64
  %270 = add nsw i64 %269, 11
  %271 = add i64 %270, %268
  %272 = inttoptr i64 %271 to i8*
  %273 = load i8, i8* %272, align 1
  %274 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"* %255, i64 0, i32 3
  store i8 %273, i8* %274, align 1
  store i8 4, i8* %256, align 4
  br label %275

275:                                              ; preds = %263, %259
  %276 = phi i8 [ %262, %259 ], [ 3, %263 ]
  %277 = phi i8 [ %261, %259 ], [ %273, %263 ]
  %278 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::PreparseData>::ByteData"* %255, i64 0, i32 3
  store i8 %276, i8* %256, align 4
  %279 = shl i8 %277, 2
  store i8 %279, i8* %278, align 1
  %280 = and i8 %277, 64
  %281 = icmp eq i8 %280, 0
  br i1 %281, label %283, label %282

282:                                              ; preds = %275
  tail call void @_ZN2v88internal8Variable16SetMaybeAssignedEv(%"class.v8::internal::Variable"* %249) #12
  br label %283

283:                                              ; preds = %282, %275
  %284 = icmp slt i8 %277, 0
  br i1 %284, label %285, label %288

285:                                              ; preds = %283
  %286 = load i16, i16* %250, align 8
  %287 = or i16 %286, 3072
  store i16 %287, i16* %250, align 8
  br label %288

288:                                              ; preds = %247, %285, %283
  %289 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %248, align 8
  %290 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %289, i64 0, i32 3
  %291 = icmp eq %"class.v8::internal::Variable"** %290, %236
  br i1 %291, label %238, label %247

292:                                              ; preds = %242, %238, %9, %15
  ret void
}

declare void @_ZN2v88internal16DeclarationScope40RecordNeedsPrivateNameContextChainRecalcEv(%"class.v8::internal::DeclarationScope"*) local_unnamed_addr #5

declare %"class.v8::internal::Variable"* @_ZN2v88internal10ClassScope20DeclareClassVariableEPNS0_15AstValueFactoryEPKNS0_12AstRawStringEi(%"class.v8::internal::ClassScope"*, %"class.v8::internal::AstValueFactory"*, %"class.v8::internal::AstRawString"*, i32) local_unnamed_addr #5

declare %"class.v8::internal::DeclarationScope"* @_ZN2v88internal5Scope19GetDeclarationScopeEv(%"class.v8::internal::Scope"*) local_unnamed_addr #5

declare %"class.v8::internal::DeclarationScope"* @_ZN2v88internal5Scope16GetReceiverScopeEv(%"class.v8::internal::Scope"*) local_unnamed_addr #5

declare %"class.v8::internal::Scope"* @_ZN2v88internal5Scope18GetHomeObjectScopeEv(%"class.v8::internal::Scope"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8Variable16SetMaybeAssignedEv(%"class.v8::internal::Variable"*) local_unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %0, i64 0, i32 6
  %3 = load i16, i16* %2, align 8
  %4 = and i16 %3, 15
  %5 = icmp eq i16 %4, 1
  br i1 %5, label %33, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %0, i64 0, i32 1
  %8 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %8, i64 0, i32 3
  %10 = load i8, i8* %9, align 4, !range !43
  %11 = icmp eq i8 %10, 0
  %12 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %8, i64 0, i32 1, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = trunc i64 %13 to i32
  %15 = sdiv i32 %14, 2
  %16 = select i1 %11, i32 %15, i32 %14
  %17 = icmp sgt i32 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %6
  %19 = tail call zeroext i16 @_ZNK2v88internal12AstRawString14FirstCharacterEv(%"class.v8::internal::AstRawString"* %8) #12
  %20 = icmp eq i16 %19, 35
  br i1 %20, label %33, label %21

21:                                               ; preds = %6, %18
  %22 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %0, i64 0, i32 2
  %23 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %22, align 8
  %24 = icmp eq %"class.v8::internal::Variable"* %23, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %21
  %26 = load i16, i16* %2, align 8
  %27 = and i16 %26, 16384
  %28 = icmp eq i16 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %25
  tail call void @_ZN2v88internal8Variable16SetMaybeAssignedEv(%"class.v8::internal::Variable"* nonnull %23)
  br label %30

30:                                               ; preds = %21, %25, %29
  %31 = load i16, i16* %2, align 8
  %32 = or i16 %31, 16384
  store i16 %32, i16* %2, align 8
  br label %33

33:                                               ; preds = %18, %1, %30
  ret void
}

declare zeroext i16 @_ZNK2v88internal12AstRawString14FirstCharacterEv(%"class.v8::internal::AstRawString"*) local_unnamed_addr #5

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal24BaseConsumedPreparseDataINS0_17ZoneVectorWrapperEE19RestoreDataForScopeEPNS0_5ScopeEPNS0_15AstValueFactoryEPNS0_4ZoneE(%"class.v8::internal::BaseConsumedPreparseData.1263"*, %"class.v8::internal::Scope"*, %"class.v8::internal::AstValueFactory"*, %"class.v8::internal::Zone"*) local_unnamed_addr #1 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %1, i64 0, i32 13
  %6 = load i16, i16* %5, align 1
  %7 = and i16 %6, 256
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %15, label %9

9:                                                ; preds = %4
  %10 = tail call %"class.v8::internal::DeclarationScope"* @_ZN2v88internal5Scope18AsDeclarationScopeEv(%"class.v8::internal::Scope"* %1) #12
  %11 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %10, i64 0, i32 1
  %12 = load i16, i16* %11, align 1
  %13 = and i16 %12, 256
  %14 = icmp eq i16 %13, 0
  br i1 %14, label %15, label %320

15:                                               ; preds = %9, %4
  %16 = tail call zeroext i1 @_ZN2v88internal19PreparseDataBuilder14ScopeNeedsDataEPNS0_5ScopeE(%"class.v8::internal::Scope"* %1)
  br i1 %16, label %17, label %320

17:                                               ; preds = %15
  %18 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData.1263", %"class.v8::internal::BaseConsumedPreparseData.1263"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"*, %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"* %19, i64 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = bitcast %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"* %19 to %"class.std::__1::vector.1242"**
  %23 = load %"class.std::__1::vector.1242"*, %"class.std::__1::vector.1242"** %22, align 8
  %24 = getelementptr inbounds %"class.std::__1::vector.1242", %"class.std::__1::vector.1242"* %23, i64 0, i32 0, i32 1
  %25 = bitcast i8** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.std::__1::vector.1242"* %23 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %26, %28
  %30 = trunc i64 %29 to i32
  %31 = icmp slt i32 %21, %30
  br i1 %31, label %33, label %32, !prof !53

32:                                               ; preds = %17
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.6, i64 0, i64 0)) #13
  unreachable

33:                                               ; preds = %17
  %34 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"* %19, i64 0, i32 2
  store i8 0, i8* %34, align 4
  %35 = add nsw i32 %21, 1
  store i32 %35, i32* %20, align 8
  %36 = sext i32 %21 to i64
  %37 = load i64, i64* %25, align 8
  %38 = load i64, i64* %27, align 8
  %39 = sub i64 %37, %38
  %40 = icmp ugt i64 %39, %36
  br i1 %40, label %43, label %41

41:                                               ; preds = %33
  %42 = bitcast %"class.std::__1::vector.1242"* %23 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %42) #13
  unreachable

43:                                               ; preds = %33
  %44 = inttoptr i64 %38 to i8*
  %45 = getelementptr inbounds i8, i8* %44, i64 %36
  %46 = load i8, i8* %45, align 1
  %47 = and i8 %46, 1
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %94, label %49

49:                                               ; preds = %43
  %50 = load i16, i16* %5, align 1
  %51 = or i16 %50, 2
  store i16 %51, i16* %5, align 1
  %52 = tail call %"class.v8::internal::DeclarationScope"* @_ZN2v88internal5Scope19GetDeclarationScopeEv(%"class.v8::internal::Scope"* %1) #12
  %53 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %52, i64 0, i32 0, i32 13
  %54 = load i16, i16* %53, align 1
  %55 = or i16 %54, 2
  store i16 %55, i16* %53, align 1
  %56 = and i16 %54, 1
  %57 = icmp eq i16 %56, 0
  br i1 %57, label %58, label %64

58:                                               ; preds = %49
  %59 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %52, i64 0, i32 0, i32 12
  %60 = load i8, i8* %59, align 8
  switch i8 %60, label %61 [
    i8 4, label %64
    i8 1, label %64
  ]

61:                                               ; preds = %58
  %62 = or i16 %54, 6
  store i16 %62, i16* %53, align 1
  %63 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %52, i64 0, i32 0, i32 11
  store i32 3, i32* %63, align 4
  br label %64

64:                                               ; preds = %61, %58, %58, %49
  %65 = load i16, i16* %5, align 1
  %66 = or i16 %65, 64
  store i16 %66, i16* %5, align 1
  %67 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %1, i64 0, i32 0
  %68 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %67, align 8
  %69 = icmp eq %"class.v8::internal::Scope"* %68, null
  br i1 %69, label %81, label %70

70:                                               ; preds = %64, %76
  %71 = phi %"class.v8::internal::Scope"* [ %79, %76 ], [ %68, %64 ]
  %72 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %71, i64 0, i32 13
  %73 = load i16, i16* %72, align 1
  %74 = and i16 %73, 64
  %75 = icmp eq i16 %74, 0
  br i1 %75, label %76, label %81

76:                                               ; preds = %70
  %77 = or i16 %73, 64
  store i16 %77, i16* %72, align 1
  %78 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %71, i64 0, i32 0
  %79 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %78, align 8
  %80 = icmp eq %"class.v8::internal::Scope"* %79, null
  br i1 %80, label %81, label %70

81:                                               ; preds = %76, %70, %64
  %82 = tail call %"class.v8::internal::DeclarationScope"* @_ZN2v88internal5Scope16GetReceiverScopeEv(%"class.v8::internal::Scope"* %1) #12
  %83 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %82, i64 0, i32 2
  %84 = load i8, i8* %83, align 1
  switch i8 %84, label %94 [
    i8 25, label %85
    i8 24, label %85
    i8 23, label %85
    i8 22, label %85
    i8 21, label %85
    i8 20, label %85
    i8 17, label %85
    i8 16, label %85
    i8 15, label %85
    i8 14, label %85
    i8 10, label %85
    i8 9, label %85
    i8 8, label %85
    i8 7, label %85
    i8 6, label %85
    i8 5, label %85
    i8 4, label %85
    i8 3, label %85
  ]

85:                                               ; preds = %81, %81, %81, %81, %81, %81, %81, %81, %81, %81, %81, %81, %81, %81, %81, %81, %81, %81
  %86 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %82, i64 0, i32 1
  %87 = load i16, i16* %86, align 1
  %88 = or i16 %87, 32
  store i16 %88, i16* %86, align 1
  %89 = bitcast %"class.v8::internal::DeclarationScope"* %82 to %"class.v8::internal::Scope"*
  %90 = tail call %"class.v8::internal::Scope"* @_ZN2v88internal5Scope18GetHomeObjectScopeEv(%"class.v8::internal::Scope"* %89) #12
  %91 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %90, i64 0, i32 13
  %92 = load i16, i16* %91, align 1
  %93 = or i16 %92, 8192
  store i16 %93, i16* %91, align 1
  br label %94

94:                                               ; preds = %43, %85, %81
  %95 = and i8 %46, 2
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %114, label %97

97:                                               ; preds = %94
  %98 = load i16, i16* %5, align 1
  %99 = or i16 %98, 64
  store i16 %99, i16* %5, align 1
  %100 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %1, i64 0, i32 0
  %101 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %100, align 8
  %102 = icmp eq %"class.v8::internal::Scope"* %101, null
  br i1 %102, label %114, label %103

103:                                              ; preds = %97, %109
  %104 = phi %"class.v8::internal::Scope"* [ %112, %109 ], [ %101, %97 ]
  %105 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %104, i64 0, i32 13
  %106 = load i16, i16* %105, align 1
  %107 = and i16 %106, 64
  %108 = icmp eq i16 %107, 0
  br i1 %108, label %109, label %114

109:                                              ; preds = %103
  %110 = or i16 %106, 64
  store i16 %110, i16* %105, align 1
  %111 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %104, i64 0, i32 0
  %112 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %111, align 8
  %113 = icmp eq %"class.v8::internal::Scope"* %112, null
  br i1 %113, label %114, label %103

114:                                              ; preds = %109, %103, %94, %97
  %115 = and i8 %46, 4
  %116 = icmp eq i8 %115, 0
  br i1 %116, label %119, label %117

117:                                              ; preds = %114
  %118 = tail call %"class.v8::internal::DeclarationScope"* @_ZN2v88internal5Scope18AsDeclarationScopeEv(%"class.v8::internal::Scope"* %1) #12
  tail call void @_ZN2v88internal16DeclarationScope40RecordNeedsPrivateNameContextChainRecalcEv(%"class.v8::internal::DeclarationScope"* %118) #12
  br label %119

119:                                              ; preds = %114, %117
  %120 = and i8 %46, 8
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %199, label %122

122:                                              ; preds = %119
  %123 = tail call %"class.v8::internal::ClassScope"* @_ZN2v88internal5Scope12AsClassScopeEv(%"class.v8::internal::Scope"* %1) #12
  %124 = getelementptr inbounds %"class.v8::internal::ClassScope", %"class.v8::internal::ClassScope"* %123, i64 0, i32 6
  %125 = load i8, i8* %124, align 2, !range !43
  %126 = icmp eq i8 %125, 0
  %127 = tail call %"class.v8::internal::ClassScope"* @_ZN2v88internal5Scope12AsClassScopeEv(%"class.v8::internal::Scope"* %1) #12
  br i1 %126, label %189, label %128

128:                                              ; preds = %122
  %129 = tail call %"class.v8::internal::Variable"* @_ZN2v88internal10ClassScope20DeclareClassVariableEPNS0_15AstValueFactoryEPKNS0_12AstRawStringEi(%"class.v8::internal::ClassScope"* %127, %"class.v8::internal::AstValueFactory"* %2, %"class.v8::internal::AstRawString"* null, i32 -1) #12
  %130 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %3, i64 0, i32 2
  %131 = load i64, i64* %130, align 8
  %132 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %3, i64 0, i32 3
  %133 = load i64, i64* %132, align 8
  %134 = sub i64 %133, %131
  %135 = icmp ult i64 %134, 8
  br i1 %135, label %136, label %138, !prof !2

136:                                              ; preds = %128
  %137 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %3, i64 8) #12
  br label %140

138:                                              ; preds = %128
  %139 = add i64 %131, 8
  store i64 %139, i64* %130, align 8
  br label %140

140:                                              ; preds = %138, %136
  %141 = phi i64 [ %137, %136 ], [ %131, %138 ]
  %142 = inttoptr i64 %141 to %"class.v8::internal::EmptyStatement"*
  %143 = getelementptr inbounds %"class.v8::internal::EmptyStatement", %"class.v8::internal::EmptyStatement"* %142, i64 0, i32 0, i32 0, i32 0
  store i32 -1, i32* %143, align 4
  %144 = getelementptr inbounds %"class.v8::internal::EmptyStatement", %"class.v8::internal::EmptyStatement"* %142, i64 0, i32 0, i32 0, i32 1
  store i32 10, i32* %144, align 4
  %145 = load i64, i64* %130, align 8
  %146 = load i64, i64* %132, align 8
  %147 = sub i64 %146, %145
  %148 = icmp ult i64 %147, 8
  br i1 %148, label %149, label %151, !prof !2

149:                                              ; preds = %140
  %150 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %3, i64 8) #12
  br label %153

151:                                              ; preds = %140
  %152 = add i64 %145, 8
  store i64 %152, i64* %130, align 8
  br label %153

153:                                              ; preds = %151, %149
  %154 = phi i64 [ %150, %149 ], [ %145, %151 ]
  %155 = inttoptr i64 %154 to %"class.v8::internal::ThisExpression"*
  %156 = getelementptr inbounds %"class.v8::internal::ThisExpression", %"class.v8::internal::ThisExpression"* %155, i64 0, i32 0, i32 0, i32 0
  store i32 -1, i32* %156, align 4
  %157 = getelementptr inbounds %"class.v8::internal::ThisExpression", %"class.v8::internal::ThisExpression"* %155, i64 0, i32 0, i32 0, i32 1
  store i32 49, i32* %157, align 4
  %158 = load i64, i64* %130, align 8
  %159 = load i64, i64* %132, align 8
  %160 = sub i64 %159, %158
  %161 = icmp ult i64 %160, 8
  br i1 %161, label %162, label %164, !prof !2

162:                                              ; preds = %153
  %163 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %3, i64 8) #12
  br label %166

164:                                              ; preds = %153
  %165 = add i64 %158, 8
  store i64 %165, i64* %130, align 8
  br label %166

166:                                              ; preds = %162, %164
  %167 = phi i64 [ %163, %162 ], [ %158, %164 ]
  %168 = inttoptr i64 %167 to %"class.v8::internal::FailureExpression"*
  %169 = getelementptr inbounds %"class.v8::internal::FailureExpression", %"class.v8::internal::FailureExpression"* %168, i64 0, i32 0, i32 0, i32 0
  store i32 -1, i32* %169, align 4
  %170 = getelementptr inbounds %"class.v8::internal::FailureExpression", %"class.v8::internal::FailureExpression"* %168, i64 0, i32 0, i32 0, i32 1
  store i32 55, i32* %170, align 4
  %171 = load i64, i64* %130, align 8
  %172 = load i64, i64* %132, align 8
  %173 = sub i64 %172, %171
  %174 = icmp ult i64 %173, 24
  br i1 %174, label %175, label %177, !prof !2

175:                                              ; preds = %166
  %176 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %3, i64 24) #12
  br label %179

177:                                              ; preds = %166
  %178 = add i64 %171, 24
  store i64 %178, i64* %130, align 8
  br label %179

179:                                              ; preds = %175, %177
  %180 = phi i64 [ %176, %175 ], [ %171, %177 ]
  %181 = inttoptr i64 %180 to %"class.v8::internal::VariableDeclaration"*
  %182 = getelementptr inbounds %"class.v8::internal::VariableDeclaration", %"class.v8::internal::VariableDeclaration"* %181, i64 0, i32 0, i32 0, i32 0
  store i32 -1, i32* %182, align 4
  %183 = getelementptr inbounds %"class.v8::internal::VariableDeclaration", %"class.v8::internal::VariableDeclaration"* %181, i64 0, i32 0, i32 0, i32 1
  %184 = getelementptr inbounds %"class.v8::internal::VariableDeclaration", %"class.v8::internal::VariableDeclaration"* %181, i64 0, i32 0, i32 2
  store %"class.v8::internal::Declaration"* null, %"class.v8::internal::Declaration"** %184, align 8
  store i32 0, i32* %183, align 4
  %185 = getelementptr inbounds %"class.v8::internal::VariableDeclaration", %"class.v8::internal::VariableDeclaration"* %181, i64 0, i32 0
  %186 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %1, i64 0, i32 6, i32 1
  %187 = load %"class.v8::internal::Declaration"**, %"class.v8::internal::Declaration"*** %186, align 8
  store %"class.v8::internal::Declaration"* %185, %"class.v8::internal::Declaration"** %187, align 8
  store %"class.v8::internal::Declaration"** %184, %"class.v8::internal::Declaration"*** %186, align 8
  %188 = getelementptr inbounds %"class.v8::internal::VariableDeclaration", %"class.v8::internal::VariableDeclaration"* %181, i64 0, i32 0, i32 1
  store %"class.v8::internal::Variable"* %129, %"class.v8::internal::Variable"** %188, align 8
  br label %192

189:                                              ; preds = %122
  %190 = getelementptr inbounds %"class.v8::internal::ClassScope", %"class.v8::internal::ClassScope"* %127, i64 0, i32 3
  %191 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %190, align 8
  br label %192

192:                                              ; preds = %189, %179
  %193 = phi %"class.v8::internal::Variable"* [ %129, %179 ], [ %191, %189 ]
  %194 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %193, i64 0, i32 6
  %195 = load i16, i16* %194, align 8
  %196 = or i16 %195, 3072
  store i16 %196, i16* %194, align 8
  %197 = tail call %"class.v8::internal::ClassScope"* @_ZN2v88internal5Scope12AsClassScopeEv(%"class.v8::internal::Scope"* %1) #12
  %198 = getelementptr inbounds %"class.v8::internal::ClassScope", %"class.v8::internal::ClassScope"* %197, i64 0, i32 7
  store i8 1, i8* %198, align 1
  br label %199

199:                                              ; preds = %119, %192
  %200 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %1, i64 0, i32 12
  %201 = load i8, i8* %200, align 8
  %202 = icmp eq i8 %201, 2
  br i1 %202, label %203, label %252

203:                                              ; preds = %199
  %204 = tail call %"class.v8::internal::DeclarationScope"* @_ZN2v88internal5Scope18AsDeclarationScopeEv(%"class.v8::internal::Scope"* %1) #12
  %205 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %204, i64 0, i32 9
  %206 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %205, align 8
  %207 = icmp eq %"class.v8::internal::Variable"* %206, null
  br i1 %207, label %252, label %208

208:                                              ; preds = %203
  %209 = load %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"*, %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"** %18, align 8
  %210 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"* %209, i64 0, i32 2
  %211 = load i8, i8* %210, align 4
  %212 = icmp eq i8 %211, 0
  br i1 %212, label %217, label %213

213:                                              ; preds = %208
  %214 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"* %209, i64 0, i32 3
  %215 = load i8, i8* %214, align 1
  %216 = add i8 %211, -1
  br label %238

217:                                              ; preds = %208
  %218 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"* %209, i64 0, i32 1
  %219 = load i32, i32* %218, align 8
  %220 = add nsw i32 %219, 1
  store i32 %220, i32* %218, align 8
  %221 = bitcast %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"* %209 to %"class.std::__1::vector.1242"**
  %222 = load %"class.std::__1::vector.1242"*, %"class.std::__1::vector.1242"** %221, align 8
  %223 = sext i32 %219 to i64
  %224 = getelementptr inbounds %"class.std::__1::vector.1242", %"class.std::__1::vector.1242"* %222, i64 0, i32 0, i32 1
  %225 = bitcast i8** %224 to i64*
  %226 = load i64, i64* %225, align 8
  %227 = bitcast %"class.std::__1::vector.1242"* %222 to i64*
  %228 = load i64, i64* %227, align 8
  %229 = sub i64 %226, %228
  %230 = icmp ugt i64 %229, %223
  br i1 %230, label %233, label %231

231:                                              ; preds = %217
  %232 = bitcast %"class.std::__1::vector.1242"* %222 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %232) #13
  unreachable

233:                                              ; preds = %217
  %234 = inttoptr i64 %228 to i8*
  %235 = getelementptr inbounds i8, i8* %234, i64 %223
  %236 = load i8, i8* %235, align 1
  %237 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"* %209, i64 0, i32 3
  store i8 %236, i8* %237, align 1
  store i8 4, i8* %210, align 4
  br label %238

238:                                              ; preds = %233, %213
  %239 = phi i8 [ %216, %213 ], [ 3, %233 ]
  %240 = phi i8 [ %215, %213 ], [ %236, %233 ]
  %241 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"* %209, i64 0, i32 3
  store i8 %239, i8* %210, align 4
  %242 = shl i8 %240, 2
  store i8 %242, i8* %241, align 1
  %243 = and i8 %240, 64
  %244 = icmp eq i8 %243, 0
  br i1 %244, label %246, label %245

245:                                              ; preds = %238
  tail call void @_ZN2v88internal8Variable16SetMaybeAssignedEv(%"class.v8::internal::Variable"* nonnull %206) #12
  br label %246

246:                                              ; preds = %245, %238
  %247 = icmp slt i8 %240, 0
  br i1 %247, label %248, label %252

248:                                              ; preds = %246
  %249 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %206, i64 0, i32 6
  %250 = load i16, i16* %249, align 8
  %251 = or i16 %250, 3072
  store i16 %251, i16* %249, align 8
  br label %252

252:                                              ; preds = %248, %246, %203, %199
  %253 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %1, i64 0, i32 4, i32 0
  %254 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %1, i64 0, i32 4, i32 1
  %255 = load %"class.v8::internal::Variable"**, %"class.v8::internal::Variable"*** %254, align 8
  %256 = icmp eq %"class.v8::internal::Variable"** %253, %255
  br i1 %256, label %257, label %266

257:                                              ; preds = %316, %252
  %258 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %1, i64 0, i32 1
  %259 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %258, align 8
  %260 = icmp eq %"class.v8::internal::Scope"* %259, null
  br i1 %260, label %320, label %261

261:                                              ; preds = %257, %261
  %262 = phi %"class.v8::internal::Scope"* [ %264, %261 ], [ %259, %257 ]
  tail call void @_ZN2v88internal24BaseConsumedPreparseDataINS0_17ZoneVectorWrapperEE19RestoreDataForScopeEPNS0_5ScopeEPNS0_15AstValueFactoryEPNS0_4ZoneE(%"class.v8::internal::BaseConsumedPreparseData.1263"* %0, %"class.v8::internal::Scope"* nonnull %262, %"class.v8::internal::AstValueFactory"* %2, %"class.v8::internal::Zone"* %3) #12
  %263 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %262, i64 0, i32 2
  %264 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %263, align 8
  %265 = icmp eq %"class.v8::internal::Scope"* %264, null
  br i1 %265, label %320, label %261

266:                                              ; preds = %252, %316
  %267 = phi %"class.v8::internal::Variable"** [ %318, %316 ], [ %253, %252 ]
  %268 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %267, align 8
  %269 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %268, i64 0, i32 6
  %270 = load i16, i16* %269, align 8
  %271 = trunc i16 %270 to i8
  %272 = and i8 %271, 15
  switch i8 %272, label %316 [
    i8 10, label %273
    i8 9, label %273
    i8 8, label %273
    i8 7, label %273
    i8 2, label %273
    i8 1, label %273
    i8 0, label %273
  ]

273:                                              ; preds = %266, %266, %266, %266, %266, %266, %266
  %274 = load %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"*, %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"** %18, align 8
  %275 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"* %274, i64 0, i32 2
  %276 = load i8, i8* %275, align 4
  %277 = icmp eq i8 %276, 0
  br i1 %277, label %282, label %278

278:                                              ; preds = %273
  %279 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"* %274, i64 0, i32 3
  %280 = load i8, i8* %279, align 1
  %281 = add i8 %276, -1
  br label %303

282:                                              ; preds = %273
  %283 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"* %274, i64 0, i32 1
  %284 = load i32, i32* %283, align 8
  %285 = add nsw i32 %284, 1
  store i32 %285, i32* %283, align 8
  %286 = bitcast %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"* %274 to %"class.std::__1::vector.1242"**
  %287 = load %"class.std::__1::vector.1242"*, %"class.std::__1::vector.1242"** %286, align 8
  %288 = sext i32 %284 to i64
  %289 = getelementptr inbounds %"class.std::__1::vector.1242", %"class.std::__1::vector.1242"* %287, i64 0, i32 0, i32 1
  %290 = bitcast i8** %289 to i64*
  %291 = load i64, i64* %290, align 8
  %292 = bitcast %"class.std::__1::vector.1242"* %287 to i64*
  %293 = load i64, i64* %292, align 8
  %294 = sub i64 %291, %293
  %295 = icmp ugt i64 %294, %288
  br i1 %295, label %298, label %296

296:                                              ; preds = %282
  %297 = bitcast %"class.std::__1::vector.1242"* %287 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %297) #13
  unreachable

298:                                              ; preds = %282
  %299 = inttoptr i64 %293 to i8*
  %300 = getelementptr inbounds i8, i8* %299, i64 %288
  %301 = load i8, i8* %300, align 1
  %302 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"* %274, i64 0, i32 3
  store i8 %301, i8* %302, align 1
  store i8 4, i8* %275, align 4
  br label %303

303:                                              ; preds = %298, %278
  %304 = phi i8 [ %281, %278 ], [ 3, %298 ]
  %305 = phi i8 [ %280, %278 ], [ %301, %298 ]
  %306 = getelementptr inbounds %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData", %"class.v8::internal::BaseConsumedPreparseData<v8::internal::ZoneVectorWrapper>::ByteData"* %274, i64 0, i32 3
  store i8 %304, i8* %275, align 4
  %307 = shl i8 %305, 2
  store i8 %307, i8* %306, align 1
  %308 = and i8 %305, 64
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %311, label %310

310:                                              ; preds = %303
  tail call void @_ZN2v88internal8Variable16SetMaybeAssignedEv(%"class.v8::internal::Variable"* %268) #12
  br label %311

311:                                              ; preds = %310, %303
  %312 = icmp slt i8 %305, 0
  br i1 %312, label %313, label %316

313:                                              ; preds = %311
  %314 = load i16, i16* %269, align 8
  %315 = or i16 %314, 3072
  store i16 %315, i16* %269, align 8
  br label %316

316:                                              ; preds = %266, %313, %311
  %317 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %267, align 8
  %318 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %317, i64 0, i32 3
  %319 = icmp eq %"class.v8::internal::Variable"** %318, %255
  br i1 %319, label %257, label %266

320:                                              ; preds = %261, %257, %9, %15
  ret void
}

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5}
!5 = distinct !{!5, !"LVerDomain"}
!6 = !{!7}
!7 = distinct !{!7, !5}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.isvectorized", i32 1}
!10 = distinct !{!10, !9}
!11 = !{!12}
!12 = distinct !{!12, !13}
!13 = distinct !{!13, !"LVerDomain"}
!14 = !{!15}
!15 = distinct !{!15, !13}
!16 = distinct !{!16, !9}
!17 = distinct !{!17, !18}
!18 = !{!"llvm.loop.unroll.disable"}
!19 = distinct !{!19, !9}
!20 = !{!21}
!21 = distinct !{!21, !22}
!22 = distinct !{!22, !"LVerDomain"}
!23 = !{!24}
!24 = distinct !{!24, !22}
!25 = distinct !{!25, !9}
!26 = distinct !{!26, !18}
!27 = distinct !{!27, !9}
!28 = !{!29}
!29 = distinct !{!29, !30}
!30 = distinct !{!30, !"LVerDomain"}
!31 = !{!32}
!32 = distinct !{!32, !30}
!33 = distinct !{!33, !9}
!34 = distinct !{!34, !9}
!35 = !{!36}
!36 = distinct !{!36, !37}
!37 = distinct !{!37, !"LVerDomain"}
!38 = !{!39}
!39 = distinct !{!39, !37}
!40 = distinct !{!40, !9}
!41 = distinct !{!41, !18}
!42 = distinct !{!42, !9}
!43 = !{i8 0, i8 2}
!44 = !{!45}
!45 = distinct !{!45, !46}
!46 = distinct !{!46, !"LVerDomain"}
!47 = !{!48}
!48 = distinct !{!48, !46}
!49 = distinct !{!49, !9}
!50 = distinct !{!50, !18}
!51 = distinct !{!51, !9}
!52 = !{!"branch_weights", i32 2000, i32 1}
!53 = !{!"branch_weights", i32 -102759400, i32 4193255}
