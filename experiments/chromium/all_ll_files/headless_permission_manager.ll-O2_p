; ModuleID = '../../headless/lib/browser/headless_permission_manager.cc'
source_filename = "../../headless/lib/browser/headless_permission_manager.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.headless::HeadlessPermissionManager" = type { %"class.content::PermissionControllerDelegate", %"class.content::BrowserContext"* }
%"class.content::PermissionControllerDelegate" = type { i32 (...)** }
%"class.content::BrowserContext" = type { %"class.base::SupportsUserData.base", %"class.std::__1::unique_ptr" }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.content::BrowserContext::Impl"* }
%"class.content::BrowserContext::Impl" = type opaque
%"class.content::RenderFrameHost" = type opaque
%class.GURL = type opaque
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i32* }
%"class.base::OnceCallback.13" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { i32*, i32*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { i32* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional" = type opaque
%"class.base::flat_map" = type opaque

$_ZN7content28PermissionControllerDelegate33SetPermissionOverridesForDevToolsERKN4absl8optionalIN3url6OriginEEERKN4base8flat_mapINS_14PermissionTypeEN5blink5mojom16PermissionStatusENSt3__14lessIvEENSE_6vectorINSE_4pairISA_SD_EENSE_9allocatorISJ_EEEEEE = comdat any

$_ZN7content28PermissionControllerDelegate35ResetPermissionOverridesForDevToolsEv = comdat any

@_ZTVN8headless25HeadlessPermissionManagerE = hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.headless::HeadlessPermissionManager"*)* @_ZN8headless25HeadlessPermissionManagerD2Ev to i8*), i8* bitcast (void (%"class.headless::HeadlessPermissionManager"*)* @_ZN8headless25HeadlessPermissionManagerD0Ev to i8*), i8* bitcast (void (%"class.headless::HeadlessPermissionManager"*, i32, %"class.content::RenderFrameHost"*, %class.GURL*, i1, %"class.base::OnceCallback"*)* @_ZN8headless25HeadlessPermissionManager17RequestPermissionEN7content14PermissionTypeEPNS1_15RenderFrameHostERK4GURLbN4base12OnceCallbackIFvN5blink5mojom16PermissionStatusEEEE to i8*), i8* bitcast (void (%"class.headless::HeadlessPermissionManager"*, %"class.std::__1::vector"*, %"class.content::RenderFrameHost"*, %class.GURL*, i1, %"class.base::OnceCallback.13"*)* @_ZN8headless25HeadlessPermissionManager18RequestPermissionsERKNSt3__16vectorIN7content14PermissionTypeENS1_9allocatorIS4_EEEEPNS3_15RenderFrameHostERK4GURLbN4base12OnceCallbackIFvRKNS2_IN5blink5mojom16PermissionStatusENS5_ISJ_EEEEEEE to i8*), i8* bitcast (i32 (%"class.headless::HeadlessPermissionManager"*, i32, %class.GURL*, %class.GURL*)* @_ZN8headless25HeadlessPermissionManager19GetPermissionStatusEN7content14PermissionTypeERK4GURLS5_ to i8*), i8* bitcast (i32 (%"class.headless::HeadlessPermissionManager"*, i32, %"class.content::RenderFrameHost"*, %class.GURL*)* @_ZN8headless25HeadlessPermissionManager27GetPermissionStatusForFrameEN7content14PermissionTypeEPNS1_15RenderFrameHostERK4GURL to i8*), i8* bitcast (void (%"class.headless::HeadlessPermissionManager"*, i32, %class.GURL*, %class.GURL*)* @_ZN8headless25HeadlessPermissionManager15ResetPermissionEN7content14PermissionTypeERK4GURLS5_ to i8*), i8* bitcast (i64 (%"class.headless::HeadlessPermissionManager"*, i32, %"class.content::RenderFrameHost"*, %class.GURL*, %"class.base::RepeatingCallback"*)* @_ZN8headless25HeadlessPermissionManager31SubscribePermissionStatusChangeEN7content14PermissionTypeEPNS1_15RenderFrameHostERK4GURLN4base17RepeatingCallbackIFvN5blink5mojom16PermissionStatusEEEE to i8*), i8* bitcast (void (%"class.headless::HeadlessPermissionManager"*, i64)* @_ZN8headless25HeadlessPermissionManager33UnsubscribePermissionStatusChangeEN4util6IdTypeIN7content28PermissionControllerDelegateElLl0ELl1EEE to i8*), i8* bitcast (void (%"class.content::PermissionControllerDelegate"*, %"class.absl::optional"*, %"class.base::flat_map"*)* @_ZN7content28PermissionControllerDelegate33SetPermissionOverridesForDevToolsERKN4absl8optionalIN3url6OriginEEERKN4base8flat_mapINS_14PermissionTypeEN5blink5mojom16PermissionStatusENSt3__14lessIvEENSE_6vectorINSE_4pairISA_SD_EENSE_9allocatorISJ_EEEEEE to i8*), i8* bitcast (void (%"class.content::PermissionControllerDelegate"*)* @_ZN7content28PermissionControllerDelegate35ResetPermissionOverridesForDevToolsEv to i8*), i8* bitcast (i1 (%"class.content::PermissionControllerDelegate"*, i32, %"class.absl::optional"*)* @_ZN7content28PermissionControllerDelegate33IsPermissionOverridableByDevToolsENS_14PermissionTypeERKN4absl8optionalIN3url6OriginEEE to i8*)] }, align 8

@_ZN8headless25HeadlessPermissionManagerC1EPN7content14BrowserContextE = hidden unnamed_addr alias void (%"class.headless::HeadlessPermissionManager"*, %"class.content::BrowserContext"*), void (%"class.headless::HeadlessPermissionManager"*, %"class.content::BrowserContext"*)* @_ZN8headless25HeadlessPermissionManagerC2EPN7content14BrowserContextE
@_ZN8headless25HeadlessPermissionManagerD1Ev = hidden unnamed_addr alias void (%"class.headless::HeadlessPermissionManager"*), void (%"class.headless::HeadlessPermissionManager"*)* @_ZN8headless25HeadlessPermissionManagerD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8headless25HeadlessPermissionManagerC2EPN7content14BrowserContextE(%"class.headless::HeadlessPermissionManager"* nocapture, %"class.content::BrowserContext"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.headless::HeadlessPermissionManager", %"class.headless::HeadlessPermissionManager"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN8headless25HeadlessPermissionManagerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.headless::HeadlessPermissionManager", %"class.headless::HeadlessPermissionManager"* %0, i64 0, i32 1
  store %"class.content::BrowserContext"* %1, %"class.content::BrowserContext"** %4, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN8headless25HeadlessPermissionManagerD2Ev(%"class.headless::HeadlessPermissionManager"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless25HeadlessPermissionManagerD0Ev(%"class.headless::HeadlessPermissionManager"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.headless::HeadlessPermissionManager"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless25HeadlessPermissionManager17RequestPermissionEN7content14PermissionTypeEPNS1_15RenderFrameHostERK4GURLbN4base12OnceCallbackIFvN5blink5mojom16PermissionStatusEEEE(%"class.headless::HeadlessPermissionManager"* nocapture readonly, i32, %"class.content::RenderFrameHost"* nocapture readnone, %class.GURL* nocapture readnone, i1 zeroext, %"class.base::OnceCallback"* nocapture) unnamed_addr #2 align 2 {
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = alloca %"class.base::OnceCallback", align 8
  %9 = getelementptr inbounds %"class.headless::HeadlessPermissionManager", %"class.headless::HeadlessPermissionManager"* %0, i64 0, i32 1
  %10 = load %"class.content::BrowserContext"*, %"class.content::BrowserContext"** %9, align 8
  %11 = bitcast %"class.content::BrowserContext"* %10 to i1 (%"class.content::BrowserContext"*)***
  %12 = load i1 (%"class.content::BrowserContext"*)**, i1 (%"class.content::BrowserContext"*)*** %11, align 8
  %13 = getelementptr inbounds i1 (%"class.content::BrowserContext"*)*, i1 (%"class.content::BrowserContext"*)** %12, i64 7
  %14 = load i1 (%"class.content::BrowserContext"*)*, i1 (%"class.content::BrowserContext"*)** %13, align 8
  %15 = tail call zeroext i1 %14(%"class.content::BrowserContext"* %10) #10
  %16 = icmp eq i32 %1, 3
  %17 = and i1 %16, %15
  br i1 %17, label %18, label %29

18:                                               ; preds = %6
  %19 = bitcast %"class.base::OnceCallback"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #10
  %20 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.base::OnceCallback"* %5 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.base::OnceCallback"* %7 to i64*
  store i64 %22, i64* %23, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %20, align 8
  %24 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  %25 = inttoptr i64 %22 to %"class.base::internal::BindStateBase"*
  %26 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %25, i64 0, i32 1
  %27 = bitcast void ()** %26 to void (%"class.base::internal::BindStateBase"*, i32)**
  %28 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %27, align 8
  tail call void %28(%"class.base::internal::BindStateBase"* %25, i32 1) #10
  br label %40

29:                                               ; preds = %6
  %30 = bitcast %"class.base::OnceCallback"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #10
  %31 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0, i32 0, i32 0
  %32 = bitcast %"class.base::OnceCallback"* %5 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.base::OnceCallback"* %8 to i64*
  store i64 %33, i64* %34, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %31, align 8
  %35 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0
  %36 = inttoptr i64 %33 to %"class.base::internal::BindStateBase"*
  %37 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %36, i64 0, i32 1
  %38 = bitcast void ()** %37 to void (%"class.base::internal::BindStateBase"*, i32)**
  %39 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %38, align 8
  tail call void %39(%"class.base::internal::BindStateBase"* %36, i32 2) #10
  br label %40

40:                                               ; preds = %29, %18
  %41 = phi %"class.base::internal::CallbackBase"* [ %35, %29 ], [ %24, %18 ]
  %42 = phi i8* [ %30, %29 ], [ %19, %18 ]
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %41) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless25HeadlessPermissionManager18RequestPermissionsERKNSt3__16vectorIN7content14PermissionTypeENS1_9allocatorIS4_EEEEPNS3_15RenderFrameHostERK4GURLbN4base12OnceCallbackIFvRKNS2_IN5blink5mojom16PermissionStatusENS5_ISJ_EEEEEEE(%"class.headless::HeadlessPermissionManager"* nocapture readnone, %"class.std::__1::vector"* nocapture readonly dereferenceable(24), %"class.content::RenderFrameHost"* nocapture readnone, %class.GURL* nocapture readnone, i1 zeroext, %"class.base::OnceCallback.13"* nocapture) unnamed_addr #2 align 2 {
  %7 = alloca %"class.base::OnceCallback.13", align 8
  %8 = alloca %"class.std::__1::vector.14", align 8
  %9 = bitcast %"class.std::__1::vector.14"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %14 = bitcast i32** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::vector"* %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  %19 = ashr exact i64 %18, 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 24, i1 false) #10
  %20 = icmp eq i64 %18, 0
  br i1 %20, label %114, label %21

21:                                               ; preds = %6
  %22 = icmp ugt i64 %19, 4611686018427387903
  br i1 %22, label %23, label %25

23:                                               ; preds = %21
  %24 = bitcast %"class.std::__1::vector.14"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %24) #11
  unreachable

25:                                               ; preds = %21
  %26 = tail call i8* @_Znwm(i64 %18) #9
  %27 = bitcast i8* %26 to i32*
  %28 = bitcast i32** %11 to i8**
  store i8* %26, i8** %28, align 8
  %29 = bitcast %"class.std::__1::vector.14"* %8 to i8**
  store i8* %26, i8** %29, align 8
  %30 = getelementptr inbounds i32, i32* %27, i64 %19
  store i32* %30, i32** %12, align 8
  %31 = add i64 %18, -4
  %32 = lshr i64 %31, 2
  %33 = add nuw nsw i64 %32, 1
  %34 = icmp ult i64 %33, 8
  br i1 %34, label %105, label %35

35:                                               ; preds = %25
  %36 = and i64 %33, 9223372036854775800
  %37 = getelementptr i32, i32* %27, i64 %36
  %38 = add nsw i64 %36, -8
  %39 = lshr exact i64 %38, 3
  %40 = add nuw nsw i64 %39, 1
  %41 = and i64 %40, 7
  %42 = icmp ult i64 %38, 56
  br i1 %42, label %90, label %43

43:                                               ; preds = %35
  %44 = sub nsw i64 %40, %41
  br label %45

45:                                               ; preds = %45, %43
  %46 = phi i64 [ 0, %43 ], [ %87, %45 ]
  %47 = phi i64 [ %44, %43 ], [ %88, %45 ]
  %48 = getelementptr i32, i32* %27, i64 %46
  %49 = bitcast i32* %48 to <4 x i32>*
  store <4 x i32> <i32 2, i32 2, i32 2, i32 2>, <4 x i32>* %49, align 4
  %50 = getelementptr i32, i32* %48, i64 4
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> <i32 2, i32 2, i32 2, i32 2>, <4 x i32>* %51, align 4
  %52 = or i64 %46, 8
  %53 = getelementptr i32, i32* %27, i64 %52
  %54 = bitcast i32* %53 to <4 x i32>*
  store <4 x i32> <i32 2, i32 2, i32 2, i32 2>, <4 x i32>* %54, align 4
  %55 = getelementptr i32, i32* %53, i64 4
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> <i32 2, i32 2, i32 2, i32 2>, <4 x i32>* %56, align 4
  %57 = or i64 %46, 16
  %58 = getelementptr i32, i32* %27, i64 %57
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> <i32 2, i32 2, i32 2, i32 2>, <4 x i32>* %59, align 4
  %60 = getelementptr i32, i32* %58, i64 4
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> <i32 2, i32 2, i32 2, i32 2>, <4 x i32>* %61, align 4
  %62 = or i64 %46, 24
  %63 = getelementptr i32, i32* %27, i64 %62
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> <i32 2, i32 2, i32 2, i32 2>, <4 x i32>* %64, align 4
  %65 = getelementptr i32, i32* %63, i64 4
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> <i32 2, i32 2, i32 2, i32 2>, <4 x i32>* %66, align 4
  %67 = or i64 %46, 32
  %68 = getelementptr i32, i32* %27, i64 %67
  %69 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> <i32 2, i32 2, i32 2, i32 2>, <4 x i32>* %69, align 4
  %70 = getelementptr i32, i32* %68, i64 4
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> <i32 2, i32 2, i32 2, i32 2>, <4 x i32>* %71, align 4
  %72 = or i64 %46, 40
  %73 = getelementptr i32, i32* %27, i64 %72
  %74 = bitcast i32* %73 to <4 x i32>*
  store <4 x i32> <i32 2, i32 2, i32 2, i32 2>, <4 x i32>* %74, align 4
  %75 = getelementptr i32, i32* %73, i64 4
  %76 = bitcast i32* %75 to <4 x i32>*
  store <4 x i32> <i32 2, i32 2, i32 2, i32 2>, <4 x i32>* %76, align 4
  %77 = or i64 %46, 48
  %78 = getelementptr i32, i32* %27, i64 %77
  %79 = bitcast i32* %78 to <4 x i32>*
  store <4 x i32> <i32 2, i32 2, i32 2, i32 2>, <4 x i32>* %79, align 4
  %80 = getelementptr i32, i32* %78, i64 4
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> <i32 2, i32 2, i32 2, i32 2>, <4 x i32>* %81, align 4
  %82 = or i64 %46, 56
  %83 = getelementptr i32, i32* %27, i64 %82
  %84 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> <i32 2, i32 2, i32 2, i32 2>, <4 x i32>* %84, align 4
  %85 = getelementptr i32, i32* %83, i64 4
  %86 = bitcast i32* %85 to <4 x i32>*
  store <4 x i32> <i32 2, i32 2, i32 2, i32 2>, <4 x i32>* %86, align 4
  %87 = add i64 %46, 64
  %88 = add i64 %47, -8
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %45, !llvm.loop !2

90:                                               ; preds = %45, %35
  %91 = phi i64 [ 0, %35 ], [ %87, %45 ]
  %92 = icmp eq i64 %41, 0
  br i1 %92, label %103, label %93

93:                                               ; preds = %90, %93
  %94 = phi i64 [ %100, %93 ], [ %91, %90 ]
  %95 = phi i64 [ %101, %93 ], [ %41, %90 ]
  %96 = getelementptr i32, i32* %27, i64 %94
  %97 = bitcast i32* %96 to <4 x i32>*
  store <4 x i32> <i32 2, i32 2, i32 2, i32 2>, <4 x i32>* %97, align 4
  %98 = getelementptr i32, i32* %96, i64 4
  %99 = bitcast i32* %98 to <4 x i32>*
  store <4 x i32> <i32 2, i32 2, i32 2, i32 2>, <4 x i32>* %99, align 4
  %100 = add i64 %94, 8
  %101 = add i64 %95, -1
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %103, label %93, !llvm.loop !4

103:                                              ; preds = %93, %90
  %104 = icmp eq i64 %33, %36
  br i1 %104, label %111, label %105

105:                                              ; preds = %103, %25
  %106 = phi i32* [ %27, %25 ], [ %37, %103 ]
  br label %107

107:                                              ; preds = %105, %107
  %108 = phi i32* [ %109, %107 ], [ %106, %105 ]
  store i32 2, i32* %108, align 4
  %109 = getelementptr inbounds i32, i32* %108, i64 1
  %110 = icmp eq i32* %109, %30
  br i1 %110, label %111, label %107, !llvm.loop !6

111:                                              ; preds = %107, %103
  %112 = bitcast i32** %11 to i64*
  %113 = ptrtoint i32* %30 to i64
  store i64 %113, i64* %112, align 8
  br label %114

114:                                              ; preds = %6, %111
  %115 = bitcast %"class.base::OnceCallback.13"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %115) #10
  %116 = getelementptr inbounds %"class.base::OnceCallback.13", %"class.base::OnceCallback.13"* %5, i64 0, i32 0, i32 0, i32 0
  %117 = bitcast %"class.base::OnceCallback.13"* %5 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.base::OnceCallback.13"* %7 to i64*
  store i64 %118, i64* %119, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %116, align 8
  %120 = getelementptr inbounds %"class.base::OnceCallback.13", %"class.base::OnceCallback.13"* %7, i64 0, i32 0
  %121 = inttoptr i64 %118 to %"class.base::internal::BindStateBase"*
  %122 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %121, i64 0, i32 1
  %123 = bitcast void ()** %122 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector.14"*)**
  %124 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector.14"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector.14"*)** %123, align 8
  call void %124(%"class.base::internal::BindStateBase"* %121, %"class.std::__1::vector.14"* nonnull dereferenceable(24) %8) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %120) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %115) #10
  %125 = load i32*, i32** %10, align 8
  %126 = icmp eq i32* %125, null
  br i1 %126, label %131, label %127

127:                                              ; preds = %114
  %128 = ptrtoint i32* %125 to i64
  %129 = bitcast i32** %11 to i64*
  store i64 %128, i64* %129, align 8
  %130 = bitcast i32* %125 to i8*
  call void @_ZdlPv(i8* %130) #9
  br label %131

131:                                              ; preds = %114, %127
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN8headless25HeadlessPermissionManager15ResetPermissionEN7content14PermissionTypeERK4GURLS5_(%"class.headless::HeadlessPermissionManager"* nocapture, i32, %class.GURL* nocapture, %class.GURL* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN8headless25HeadlessPermissionManager19GetPermissionStatusEN7content14PermissionTypeERK4GURLS5_(%"class.headless::HeadlessPermissionManager"* nocapture readnone, i32, %class.GURL* nocapture readnone, %class.GURL* nocapture readnone) unnamed_addr #1 align 2 {
  ret i32 2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN8headless25HeadlessPermissionManager27GetPermissionStatusForFrameEN7content14PermissionTypeEPNS1_15RenderFrameHostERK4GURL(%"class.headless::HeadlessPermissionManager"* nocapture readnone, i32, %"class.content::RenderFrameHost"* nocapture readnone, %class.GURL* nocapture readnone) unnamed_addr #1 align 2 {
  ret i32 2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN8headless25HeadlessPermissionManager31SubscribePermissionStatusChangeEN7content14PermissionTypeEPNS1_15RenderFrameHostERK4GURLN4base17RepeatingCallbackIFvN5blink5mojom16PermissionStatusEEEE(%"class.headless::HeadlessPermissionManager"* nocapture readnone, i32, %"class.content::RenderFrameHost"* nocapture readnone, %class.GURL* nocapture readnone, %"class.base::RepeatingCallback"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i64 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN8headless25HeadlessPermissionManager33UnsubscribePermissionStatusChangeEN4util6IdTypeIN7content28PermissionControllerDelegateElLl0ELl1EEE(%"class.headless::HeadlessPermissionManager"* nocapture, i64) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content28PermissionControllerDelegate33SetPermissionOverridesForDevToolsERKN4absl8optionalIN3url6OriginEEERKN4base8flat_mapINS_14PermissionTypeEN5blink5mojom16PermissionStatusENSt3__14lessIvEENSE_6vectorINSE_4pairISA_SD_EENSE_9allocatorISJ_EEEEEE(%"class.content::PermissionControllerDelegate"*, %"class.absl::optional"*, %"class.base::flat_map"*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content28PermissionControllerDelegate35ResetPermissionOverridesForDevToolsEv(%"class.content::PermissionControllerDelegate"*) unnamed_addr #2 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZN7content28PermissionControllerDelegate33IsPermissionOverridableByDevToolsENS_14PermissionTypeERKN4absl8optionalIN3url6OriginEEE(%"class.content::PermissionControllerDelegate"*, i32, %"class.absl::optional"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { builtin nounwind }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
!6 = distinct !{!6, !7, !3}
!7 = !{!"llvm.loop.unroll.runtime.disable"}
