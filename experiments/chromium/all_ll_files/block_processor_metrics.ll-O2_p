; ModuleID = '../../third_party/webrtc/modules/audio_processing/aec3/block_processor_metrics.cc'
source_filename = "../../third_party/webrtc/modules/audio_processing/aec3/block_processor_metrics.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.webrtc::BlockProcessorMetrics" = type { i32, i8, i32, i32, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.webrtc::metrics::Histogram" = type opaque
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@.str = private unnamed_addr constant [43 x i8] c"WebRTC.Audio.EchoCanceller.RenderUnderruns\00", align 1
@.str.1 = private unnamed_addr constant [42 x i8] c"WebRTC.Audio.EchoCanceller.RenderOverruns\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc21BlockProcessorMetrics13UpdateCaptureEb(%"class.webrtc::BlockProcessorMetrics"* nocapture, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.webrtc::BlockProcessorMetrics", %"class.webrtc::BlockProcessorMetrics"* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = add nsw i32 %6, 1
  store i32 %7, i32* %5, align 4
  br i1 %1, label %8, label %12

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.webrtc::BlockProcessorMetrics", %"class.webrtc::BlockProcessorMetrics"* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = add nsw i32 %10, 1
  store i32 %11, i32* %9, align 4
  br label %12

12:                                               ; preds = %8, %2
  %13 = icmp eq i32 %7, 2500
  %14 = getelementptr inbounds %"class.webrtc::BlockProcessorMetrics", %"class.webrtc::BlockProcessorMetrics"* %0, i64 0, i32 1
  br i1 %13, label %15, label %78

15:                                               ; preds = %12
  store i8 1, i8* %14, align 4
  %16 = getelementptr inbounds %"class.webrtc::BlockProcessorMetrics", %"class.webrtc::BlockProcessorMetrics"* %0, i64 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %15
  %20 = icmp sgt i32 %17, 1250
  br i1 %20, label %26, label %21

21:                                               ; preds = %19
  %22 = icmp sgt i32 %17, 100
  br i1 %22, label %26, label %23

23:                                               ; preds = %21
  %24 = icmp sgt i32 %17, 10
  %25 = select i1 %24, i32 2, i32 1
  br label %26

26:                                               ; preds = %23, %21, %19, %15
  %27 = phi i32 [ 0, %15 ], [ 4, %19 ], [ 3, %21 ], [ %25, %23 ]
  %28 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #7
  %29 = tail call i8* @_Znwm(i64 48) #8
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %29, i8** %30, align 8
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = bitcast i64* %31 to <2 x i64>*
  store <2 x i64> <i64 42, i64 -9223372036854775760>, <2 x i64>* %32, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* align 1 getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0), i64 42, i1 false) #7
  %33 = getelementptr inbounds i8, i8* %29, i64 42
  store i8 0, i8* %33, align 1
  %34 = call %"class.webrtc::metrics::Histogram"* @_ZN6webrtc7metrics30HistogramFactoryGetEnumerationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEi(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %3, i32 5) #7
  %35 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %26
  %40 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %40) #8
  br label %41

41:                                               ; preds = %26, %39
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #7
  %42 = icmp eq %"class.webrtc::metrics::Histogram"* %34, null
  br i1 %42, label %44, label %43

43:                                               ; preds = %41
  call void @_ZN6webrtc7metrics12HistogramAddEPNS0_9HistogramEi(%"class.webrtc::metrics::Histogram"* nonnull %34, i32 %27) #7
  br label %44

44:                                               ; preds = %41, %43
  %45 = getelementptr inbounds %"class.webrtc::BlockProcessorMetrics", %"class.webrtc::BlockProcessorMetrics"* %0, i64 0, i32 3
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %58, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.webrtc::BlockProcessorMetrics", %"class.webrtc::BlockProcessorMetrics"* %0, i64 0, i32 4
  %50 = load i32, i32* %49, align 4
  %51 = ashr i32 %50, 1
  %52 = icmp sgt i32 %46, %51
  br i1 %52, label %58, label %53

53:                                               ; preds = %48
  %54 = icmp sgt i32 %46, 100
  br i1 %54, label %58, label %55

55:                                               ; preds = %53
  %56 = icmp sgt i32 %46, 10
  %57 = select i1 %56, i32 2, i32 1
  br label %58

58:                                               ; preds = %55, %53, %48, %44
  %59 = phi i32 [ 0, %44 ], [ 4, %48 ], [ 3, %53 ], [ %57, %55 ]
  %60 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #7
  %61 = call i8* @_Znwm(i64 48) #8
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %61, i8** %62, align 8
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %64 = bitcast i64* %63 to <2 x i64>*
  store <2 x i64> <i64 41, i64 -9223372036854775760>, <2 x i64>* %64, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %61, i8* align 1 getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0), i64 41, i1 false) #7
  %65 = getelementptr inbounds i8, i8* %61, i64 41
  store i8 0, i8* %65, align 1
  %66 = call %"class.webrtc::metrics::Histogram"* @_ZN6webrtc7metrics30HistogramFactoryGetEnumerationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEi(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, i32 5) #7
  %67 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %69, 0
  br i1 %70, label %71, label %73

71:                                               ; preds = %58
  %72 = load i8*, i8** %62, align 8
  call void @_ZdlPv(i8* %72) #8
  br label %73

73:                                               ; preds = %58, %71
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #7
  %74 = icmp eq %"class.webrtc::metrics::Histogram"* %66, null
  br i1 %74, label %76, label %75

75:                                               ; preds = %73
  call void @_ZN6webrtc7metrics12HistogramAddEPNS0_9HistogramEi(%"class.webrtc::metrics::Histogram"* nonnull %66, i32 %59) #7
  br label %76

76:                                               ; preds = %73, %75
  store i32 0, i32* %16, align 4
  store i32 0, i32* %45, align 4
  %77 = getelementptr inbounds %"class.webrtc::BlockProcessorMetrics", %"class.webrtc::BlockProcessorMetrics"* %0, i64 0, i32 4
  store i32 0, i32* %77, align 4
  store i32 0, i32* %5, align 4
  br label %79

78:                                               ; preds = %12
  store i8 0, i8* %14, align 4
  br label %79

79:                                               ; preds = %78, %76
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.webrtc::metrics::Histogram"* @_ZN6webrtc7metrics30HistogramFactoryGetEnumerationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEi(%"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN6webrtc7metrics12HistogramAddEPNS0_9HistogramEi(%"class.webrtc::metrics::Histogram"*, i32) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc21BlockProcessorMetrics12ResetMetricsEv(%"class.webrtc::BlockProcessorMetrics"* nocapture) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::BlockProcessorMetrics", %"class.webrtc::BlockProcessorMetrics"* %0, i64 0, i32 2
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %"class.webrtc::BlockProcessorMetrics", %"class.webrtc::BlockProcessorMetrics"* %0, i64 0, i32 3
  store i32 0, i32* %3, align 4
  %4 = getelementptr inbounds %"class.webrtc::BlockProcessorMetrics", %"class.webrtc::BlockProcessorMetrics"* %0, i64 0, i32 4
  store i32 0, i32* %4, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc21BlockProcessorMetrics12UpdateRenderEb(%"class.webrtc::BlockProcessorMetrics"* nocapture, i1 zeroext) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::BlockProcessorMetrics", %"class.webrtc::BlockProcessorMetrics"* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 4
  %5 = add nsw i32 %4, 1
  store i32 %5, i32* %3, align 4
  br i1 %1, label %6, label %10

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.webrtc::BlockProcessorMetrics", %"class.webrtc::BlockProcessorMetrics"* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = add nsw i32 %8, 1
  store i32 %9, i32* %7, align 4
  br label %10

10:                                               ; preds = %6, %2
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
