; ModuleID = '../../third_party/boringssl/src/crypto/ec_extra/ec_asn1.c'
source_filename = "../../third_party/boringssl/src/crypto/ec_extra/ec_asn1.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.ec_key_st = type { %struct.ec_group_st*, %struct.ec_point_st*, %struct.EC_WRAPPED_SCALAR*, i32, i32, i32, %struct.ecdsa_method_st*, %struct.crypto_ex_data_st }
%struct.ec_point_st = type { %struct.ec_group_st*, %struct.EC_RAW_POINT }
%struct.EC_RAW_POINT = type { %union.EC_FELEM, %union.EC_FELEM, %union.EC_FELEM }
%union.EC_FELEM = type { [9 x i64] }
%struct.EC_WRAPPED_SCALAR = type { %struct.bignum_st, %union.EC_SCALAR }
%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
%union.EC_SCALAR = type { [9 x i64] }
%struct.ecdsa_method_st = type { %struct.openssl_method_common_st, i8*, i32 (%struct.ec_key_st*)*, i32 (%struct.ec_key_st*)*, i64 (%struct.ec_key_st*)*, i32 (i8*, i64, i8*, i32*, %struct.ec_key_st*)*, i32 }
%struct.openssl_method_common_st = type { i32, i8 }
%struct.crypto_ex_data_st = type { %struct.stack_st_void* }
%struct.stack_st_void = type opaque
%struct.cbs_st = type { i8*, i64 }
%struct.ec_group_st = type { %struct.ec_method_st*, %struct.ec_point_st*, %struct.bignum_st, i32, %struct.bn_mont_ctx_st*, %struct.bignum_st, %union.EC_FELEM, %union.EC_FELEM, i32, i32, %union.EC_FELEM, i32, %struct.bn_mont_ctx_st*, %union.EC_FELEM }
%struct.ec_method_st = type { i32 (%struct.ec_group_st*)*, void (%struct.ec_group_st*)*, i32 (%struct.ec_group_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_ctx*)*, i32 (%struct.ec_group_st*, %struct.EC_RAW_POINT*, %union.EC_FELEM*, %union.EC_FELEM*)*, i32 (%struct.ec_group_st*, %struct.EC_AFFINE*, %struct.EC_RAW_POINT*, i64)*, void (%struct.ec_group_st*, %struct.EC_RAW_POINT*, %struct.EC_RAW_POINT*, %struct.EC_RAW_POINT*)*, void (%struct.ec_group_st*, %struct.EC_RAW_POINT*, %struct.EC_RAW_POINT*)*, void (%struct.ec_group_st*, %struct.EC_RAW_POINT*, %struct.EC_RAW_POINT*, %union.EC_SCALAR*)*, void (%struct.ec_group_st*, %struct.EC_RAW_POINT*, %union.EC_SCALAR*)*, void (%struct.ec_group_st*, %struct.EC_RAW_POINT*, %struct.EC_RAW_POINT*, %union.EC_SCALAR*, %struct.EC_RAW_POINT*, %union.EC_SCALAR*, %struct.EC_RAW_POINT*, %union.EC_SCALAR*)*, void (%struct.ec_group_st*, %struct.EC_RAW_POINT*, %union.EC_SCALAR*, %struct.EC_RAW_POINT*, %union.EC_SCALAR*)*, i32 (%struct.ec_group_st*, %struct.EC_RAW_POINT*, %union.EC_SCALAR*, %struct.EC_RAW_POINT*, %union.EC_SCALAR*, i64)*, i32 (%struct.ec_group_st*, %union.EC_PRECOMP*, %struct.EC_RAW_POINT*)*, void (%struct.ec_group_st*, %struct.EC_RAW_POINT*, %union.EC_PRECOMP*, %union.EC_SCALAR*, %union.EC_PRECOMP*, %union.EC_SCALAR*, %union.EC_PRECOMP*, %union.EC_SCALAR*)*, void (%struct.ec_group_st*, %union.EC_FELEM*, %union.EC_FELEM*, %union.EC_FELEM*)*, void (%struct.ec_group_st*, %union.EC_FELEM*, %union.EC_FELEM*)*, void (%struct.ec_group_st*, i8*, i64*, %union.EC_FELEM*)*, i32 (%struct.ec_group_st*, %union.EC_FELEM*, i8*, i64)*, void (%struct.ec_group_st*, %union.EC_FELEM*, i64*, i64)*, void (%struct.ec_group_st*, %union.EC_FELEM*, %union.EC_FELEM*, i64*, i64)*, void (%struct.ec_group_st*, %union.EC_SCALAR*, %union.EC_SCALAR*)*, i32 (%struct.ec_group_st*, %union.EC_SCALAR*, %union.EC_SCALAR*)*, i32 (%struct.ec_group_st*, %struct.EC_RAW_POINT*, %union.EC_SCALAR*)* }
%struct.bignum_ctx = type opaque
%struct.EC_AFFINE = type { %union.EC_FELEM, %union.EC_FELEM }
%union.EC_PRECOMP = type { [31 x %struct.EC_AFFINE] }
%struct.bn_mont_ctx_st = type { %struct.bignum_st, %struct.bignum_st, [2 x i64] }
%struct.built_in_curves = type { [4 x %struct.built_in_curve] }
%struct.built_in_curve = type { i32, i8*, i8, i8*, i8, i8*, %struct.ec_method_st* }
%struct.cbb_st = type { %struct.cbb_buffer_st*, %struct.cbb_st*, i64, i8, i8, i8 }
%struct.cbb_buffer_st = type { i8*, i64, i64, i8, i8 }

@.str = private unnamed_addr constant [58 x i8] c"../../third_party/boringssl/src/crypto/ec_extra/ec_asn1.c\00", align 1
@kPrimeField = internal constant [7 x i8] c"*\86H\CE=\01\01", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.ec_key_st* @EC_KEY_parse_private_key(%struct.cbs_st*, %struct.ec_group_st*) local_unnamed_addr #0 {
  %3 = alloca %struct.cbs_st, align 8
  %4 = alloca %struct.cbs_st, align 8
  %5 = alloca i64, align 8
  %6 = alloca %struct.cbs_st, align 8
  %7 = alloca %struct.cbs_st, align 8
  %8 = alloca %struct.cbs_st, align 8
  %9 = alloca i8, align 1
  %10 = bitcast %struct.cbs_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #4
  %11 = bitcast %struct.cbs_st* %4 to i8*
  %12 = bitcast %struct.cbs_st* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #4
  %13 = bitcast i64* %5 to i8*
  %14 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #4
  store i64 -6148914691236517206, i64* %5, align 8
  %15 = call i32 @CBS_get_asn1(%struct.cbs_st* %0, %struct.cbs_st* nonnull %3, i32 536870928) #4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %26, label %17

17:                                               ; preds = %2
  %18 = call i32 @CBS_get_asn1_uint64(%struct.cbs_st* nonnull %3, i64* nonnull %5) #4
  %19 = icmp eq i32 %18, 0
  %20 = load i64, i64* %5, align 8
  %21 = icmp ne i64 %20, 1
  %22 = or i1 %19, %21
  br i1 %22, label %26, label %23

23:                                               ; preds = %17
  %24 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %3, %struct.cbs_st* nonnull %4, i32 4) #4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %23, %2, %17
  call void @ERR_put_error(i32 15, i32 0, i32 128, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i64 0, i64 0), i32 82) #4
  br label %138

27:                                               ; preds = %23
  %28 = call i32 @CBS_peek_asn1_tag(%struct.cbs_st* nonnull %3, i32 -1610612736) #4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %53, label %30

30:                                               ; preds = %27
  %31 = bitcast %struct.cbs_st* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #4
  %32 = bitcast %struct.cbs_st* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 16, i1 false)
  %33 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %3, %struct.cbs_st* nonnull %6, i32 -1610612736) #4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %30
  call void @ERR_put_error(i32 15, i32 0, i32 128, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i64 0, i64 0), i32 97) #4
  br label %50

36:                                               ; preds = %30
  %37 = call %struct.ec_group_st* @EC_KEY_parse_parameters(%struct.cbs_st* nonnull %6)
  %38 = icmp eq %struct.ec_group_st* %37, null
  br i1 %38, label %50, label %39

39:                                               ; preds = %36
  %40 = icmp eq %struct.ec_group_st* %1, null
  br i1 %40, label %45, label %41

41:                                               ; preds = %39
  %42 = call i32 @EC_GROUP_cmp(%struct.ec_group_st* nonnull %1, %struct.ec_group_st* nonnull %37, %struct.bignum_ctx* null) #4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %45, label %44

44:                                               ; preds = %41
  call void @ERR_put_error(i32 15, i32 0, i32 130, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i64 0, i64 0), i32 108) #4
  br label %50

45:                                               ; preds = %39, %41
  %46 = phi %struct.ec_group_st* [ %1, %41 ], [ %37, %39 ]
  %47 = call i64 @CBS_len(%struct.cbs_st* nonnull %6) #4
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %52, label %49

49:                                               ; preds = %45
  call void @ERR_put_error(i32 15, i32 0, i32 128, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i64 0, i64 0), i32 112) #4
  br label %50

50:                                               ; preds = %49, %44, %35, %36
  %51 = phi %struct.ec_group_st* [ null, %36 ], [ null, %35 ], [ %37, %44 ], [ %37, %49 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #4
  br label %134

52:                                               ; preds = %45
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #4
  br label %56

53:                                               ; preds = %27
  %54 = icmp eq %struct.ec_group_st* %1, null
  br i1 %54, label %55, label %56

55:                                               ; preds = %53
  call void @ERR_put_error(i32 15, i32 0, i32 114, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i64 0, i64 0), i32 118) #4
  br label %134

56:                                               ; preds = %52, %53
  %57 = phi %struct.ec_group_st* [ %37, %52 ], [ null, %53 ]
  %58 = phi %struct.ec_group_st* [ %46, %52 ], [ %1, %53 ]
  %59 = call %struct.ec_key_st* @EC_KEY_new() #4
  %60 = icmp eq %struct.ec_key_st* %59, null
  br i1 %60, label %134, label %61

61:                                               ; preds = %56
  %62 = call i32 @EC_KEY_set_group(%struct.ec_key_st* nonnull %59, %struct.ec_group_st* nonnull %58) #4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %134, label %64

64:                                               ; preds = %61
  %65 = call i8* @CBS_data(%struct.cbs_st* nonnull %4) #4
  %66 = call i64 @CBS_len(%struct.cbs_st* nonnull %4) #4
  %67 = call %struct.bignum_st* @BN_bin2bn(i8* %65, i64 %66, %struct.bignum_st* null) #4
  %68 = call %struct.ec_point_st* @EC_POINT_new(%struct.ec_group_st* nonnull %58) #4
  %69 = getelementptr inbounds %struct.ec_key_st, %struct.ec_key_st* %59, i64 0, i32 1
  store %struct.ec_point_st* %68, %struct.ec_point_st** %69, align 8
  %70 = icmp eq %struct.bignum_st* %67, null
  br i1 %70, label %134, label %71

71:                                               ; preds = %64
  %72 = icmp eq %struct.ec_point_st* %68, null
  br i1 %72, label %134, label %73

73:                                               ; preds = %71
  %74 = call i32 @EC_KEY_set_private_key(%struct.ec_key_st* nonnull %59, %struct.bignum_st* nonnull %67) #4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %134, label %76

76:                                               ; preds = %73
  %77 = call i32 @CBS_peek_asn1_tag(%struct.cbs_st* nonnull %3, i32 -1610612735) #4
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %114, label %79

79:                                               ; preds = %76
  %80 = bitcast %struct.cbs_st* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %80) #4
  %81 = bitcast %struct.cbs_st* %8 to i8*
  %82 = bitcast %struct.cbs_st* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %82, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %81) #4
  %83 = bitcast %struct.cbs_st* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %83, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #4
  store i8 -86, i8* %9, align 1
  %84 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %3, %struct.cbs_st* nonnull %7, i32 -1610612735) #4
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %107, label %86

86:                                               ; preds = %79
  %87 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %7, %struct.cbs_st* nonnull %8, i32 3) #4
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %107, label %89

89:                                               ; preds = %86
  %90 = call i32 @CBS_get_u8(%struct.cbs_st* nonnull %8, i8* nonnull %9) #4
  %91 = icmp ne i32 %90, 0
  %92 = load i8, i8* %9, align 1
  %93 = icmp eq i8 %92, 0
  %94 = and i1 %91, %93
  br i1 %94, label %95, label %107

95:                                               ; preds = %89
  %96 = call i64 @CBS_len(%struct.cbs_st* nonnull %8) #4
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %107, label %98

98:                                               ; preds = %95
  %99 = load %struct.ec_point_st*, %struct.ec_point_st** %69, align 8
  %100 = call i8* @CBS_data(%struct.cbs_st* nonnull %8) #4
  %101 = call i64 @CBS_len(%struct.cbs_st* nonnull %8) #4
  %102 = call i32 @EC_POINT_oct2point(%struct.ec_group_st* nonnull %58, %struct.ec_point_st* %99, i8* %100, i64 %101, %struct.bignum_ctx* null) #4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %107, label %104

104:                                              ; preds = %98
  %105 = call i64 @CBS_len(%struct.cbs_st* nonnull %7) #4
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %108, label %107

107:                                              ; preds = %89, %104, %98, %86, %79, %95
  call void @ERR_put_error(i32 15, i32 0, i32 128, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i64 0, i64 0), i32 152) #4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %80) #4
  br label %134

108:                                              ; preds = %104
  %109 = call i8* @CBS_data(%struct.cbs_st* nonnull %8) #4
  %110 = load i8, i8* %109, align 1
  %111 = and i8 %110, -2
  %112 = zext i8 %111 to i32
  %113 = getelementptr inbounds %struct.ec_key_st, %struct.ec_key_st* %59, i64 0, i32 4
  store i32 %112, i32* %113, align 4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %80) #4
  br label %126

114:                                              ; preds = %76
  %115 = load %struct.ec_point_st*, %struct.ec_point_st** %69, align 8
  %116 = getelementptr inbounds %struct.ec_point_st, %struct.ec_point_st* %115, i64 0, i32 1
  %117 = getelementptr inbounds %struct.ec_key_st, %struct.ec_key_st* %59, i64 0, i32 2
  %118 = load %struct.EC_WRAPPED_SCALAR*, %struct.EC_WRAPPED_SCALAR** %117, align 8
  %119 = getelementptr inbounds %struct.EC_WRAPPED_SCALAR, %struct.EC_WRAPPED_SCALAR* %118, i64 0, i32 1
  %120 = call i32 @ec_point_mul_scalar_base(%struct.ec_group_st* nonnull %58, %struct.EC_RAW_POINT* %116, %union.EC_SCALAR* %119) #4
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %134, label %122

122:                                              ; preds = %114
  %123 = getelementptr inbounds %struct.ec_key_st, %struct.ec_key_st* %59, i64 0, i32 3
  %124 = load i32, i32* %123, align 8
  %125 = or i32 %124, 2
  store i32 %125, i32* %123, align 8
  br label %126

126:                                              ; preds = %108, %122
  %127 = call i64 @CBS_len(%struct.cbs_st* nonnull %3) #4
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %130, label %129

129:                                              ; preds = %126
  call void @ERR_put_error(i32 15, i32 0, i32 128, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i64 0, i64 0), i32 172) #4
  br label %134

130:                                              ; preds = %126
  %131 = call i32 @EC_KEY_check_key(%struct.ec_key_st* nonnull %59) #4
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %134, label %133

133:                                              ; preds = %130
  call void @BN_free(%struct.bignum_st* nonnull %67) #4
  call void @EC_GROUP_free(%struct.ec_group_st* %57) #4
  br label %138

134:                                              ; preds = %107, %50, %130, %114, %73, %61, %64, %71, %56, %129, %55
  %135 = phi %struct.ec_group_st* [ null, %55 ], [ %57, %56 ], [ %57, %64 ], [ %57, %71 ], [ %57, %129 ], [ %57, %130 ], [ %57, %114 ], [ %57, %73 ], [ %57, %61 ], [ %51, %50 ], [ %57, %107 ]
  %136 = phi %struct.ec_key_st* [ null, %55 ], [ null, %56 ], [ %59, %64 ], [ %59, %71 ], [ %59, %129 ], [ %59, %130 ], [ %59, %114 ], [ %59, %73 ], [ %59, %61 ], [ null, %50 ], [ %59, %107 ]
  %137 = phi %struct.bignum_st* [ null, %55 ], [ null, %56 ], [ null, %64 ], [ %67, %71 ], [ %67, %129 ], [ %67, %130 ], [ %67, %114 ], [ %67, %73 ], [ null, %61 ], [ null, %50 ], [ %67, %107 ]
  call void @EC_KEY_free(%struct.ec_key_st* %136) #4
  call void @BN_free(%struct.bignum_st* %137) #4
  call void @EC_GROUP_free(%struct.ec_group_st* %135) #4
  br label %138

138:                                              ; preds = %133, %134, %26
  %139 = phi %struct.ec_key_st* [ null, %26 ], [ null, %134 ], [ %59, %133 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #4
  ret %struct.ec_key_st* %139
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @CBS_get_asn1(%struct.cbs_st*, %struct.cbs_st*, i32) local_unnamed_addr #2

declare i32 @CBS_get_asn1_uint64(%struct.cbs_st*, i64*) local_unnamed_addr #2

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #2

declare i32 @CBS_peek_asn1_tag(%struct.cbs_st*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.ec_group_st* @EC_KEY_parse_parameters(%struct.cbs_st*) local_unnamed_addr #0 {
  %2 = alloca %struct.cbs_st, align 8
  %3 = alloca %struct.cbs_st, align 8
  %4 = alloca %struct.cbs_st, align 8
  %5 = alloca %struct.cbs_st, align 8
  %6 = alloca %struct.cbs_st, align 8
  %7 = alloca %struct.cbs_st, align 8
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  %10 = alloca i8, align 1
  %11 = alloca %struct.cbs_st, align 8
  %12 = alloca %struct.cbs_st, align 8
  %13 = alloca %struct.cbs_st, align 8
  %14 = alloca %struct.cbs_st, align 8
  %15 = alloca %struct.cbs_st, align 8
  %16 = alloca %struct.cbs_st, align 8
  %17 = tail call i32 @CBS_peek_asn1_tag(%struct.cbs_st* %0, i32 536870928) #4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %21

19:                                               ; preds = %1
  %20 = tail call %struct.ec_group_st* @EC_KEY_parse_curve_name(%struct.cbs_st* %0)
  br label %192

21:                                               ; preds = %1
  %22 = bitcast %struct.cbs_st* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #4
  %23 = bitcast %struct.cbs_st* %12 to i8*
  %24 = bitcast %struct.cbs_st* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #4
  %25 = bitcast %struct.cbs_st* %13 to i8*
  %26 = bitcast %struct.cbs_st* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #4
  %27 = bitcast %struct.cbs_st* %14 to i8*
  %28 = bitcast %struct.cbs_st* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #4
  %29 = bitcast %struct.cbs_st* %15 to i8*
  %30 = bitcast %struct.cbs_st* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #4
  %31 = bitcast %struct.cbs_st* %16 to i8*
  %32 = bitcast %struct.cbs_st* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #4
  %33 = bitcast %struct.cbs_st* %2 to i8*
  %34 = bitcast %struct.cbs_st* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #4
  %35 = bitcast %struct.cbs_st* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 16, i1 false) #4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #4
  %36 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 16, i1 false) #4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #4
  %37 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 16, i1 false) #4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #4
  %38 = bitcast %struct.cbs_st* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 16, i1 false) #4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #4
  %39 = bitcast %struct.cbs_st* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 16, i1 false) #4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #4
  %40 = bitcast i32* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 16, i1 false) #4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %40) #4
  store i32 -1431655766, i32* %8, align 4
  %41 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #4
  store i64 -6148914691236517206, i64* %9, align 8
  %42 = call i32 @CBS_get_asn1(%struct.cbs_st* %0, %struct.cbs_st* nonnull %2, i32 536870928) #4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %102, label %44

44:                                               ; preds = %21
  %45 = call i32 @CBS_get_asn1_uint64(%struct.cbs_st* nonnull %2, i64* nonnull %9) #4
  %46 = icmp eq i32 %45, 0
  %47 = load i64, i64* %9, align 8
  %48 = icmp ne i64 %47, 1
  %49 = or i1 %46, %48
  br i1 %49, label %102, label %50

50:                                               ; preds = %44
  %51 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %2, %struct.cbs_st* nonnull %3, i32 536870928) #4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %102, label %53

53:                                               ; preds = %50
  %54 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %3, %struct.cbs_st* nonnull %4, i32 6) #4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %102, label %56

56:                                               ; preds = %53
  %57 = call i64 @CBS_len(%struct.cbs_st* nonnull %4) #4
  %58 = icmp eq i64 %57, 7
  br i1 %58, label %59, label %102

59:                                               ; preds = %56
  %60 = call i8* @CBS_data(%struct.cbs_st* nonnull %4) #4
  %61 = call i32 @bcmp(i8* %60, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @kPrimeField, i64 0, i64 0), i64 7) #4
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %102

63:                                               ; preds = %59
  %64 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %3, %struct.cbs_st* nonnull %11, i32 2) #4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %102, label %66

66:                                               ; preds = %63
  %67 = call i32 @CBS_is_unsigned_asn1_integer(%struct.cbs_st* nonnull %11) #4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %102, label %69

69:                                               ; preds = %66
  %70 = call i64 @CBS_len(%struct.cbs_st* nonnull %3) #4
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %72, label %102

72:                                               ; preds = %69
  %73 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %2, %struct.cbs_st* nonnull %5, i32 536870928) #4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %102, label %75

75:                                               ; preds = %72
  %76 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %5, %struct.cbs_st* nonnull %12, i32 4) #4
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %102, label %78

78:                                               ; preds = %75
  %79 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %5, %struct.cbs_st* nonnull %13, i32 4) #4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %102, label %81

81:                                               ; preds = %78
  %82 = call i32 @CBS_get_optional_asn1(%struct.cbs_st* nonnull %5, %struct.cbs_st* null, i32* null, i32 3) #4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %102, label %84

84:                                               ; preds = %81
  %85 = call i64 @CBS_len(%struct.cbs_st* nonnull %5) #4
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %87, label %102

87:                                               ; preds = %84
  %88 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %2, %struct.cbs_st* nonnull %6, i32 4) #4
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %102, label %90

90:                                               ; preds = %87
  %91 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %2, %struct.cbs_st* nonnull %16, i32 2) #4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %102, label %93

93:                                               ; preds = %90
  %94 = call i32 @CBS_is_unsigned_asn1_integer(%struct.cbs_st* nonnull %16) #4
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %102, label %96

96:                                               ; preds = %93
  %97 = call i32 @CBS_get_optional_asn1(%struct.cbs_st* nonnull %2, %struct.cbs_st* nonnull %7, i32* nonnull %8, i32 2) #4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %102, label %99

99:                                               ; preds = %96
  %100 = call i64 @CBS_len(%struct.cbs_st* nonnull %2) #4
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %103, label %102

102:                                              ; preds = %99, %96, %93, %90, %87, %84, %81, %78, %75, %72, %69, %66, %63, %59, %56, %53, %50, %44, %21
  call void @ERR_put_error(i32 15, i32 0, i32 128, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i64 0, i64 0), i32 278) #4
  br label %134

103:                                              ; preds = %99
  %104 = load i32, i32* %8, align 4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %114, label %106

106:                                              ; preds = %103
  %107 = call i64 @CBS_len(%struct.cbs_st* nonnull %7) #4
  %108 = icmp eq i64 %107, 1
  br i1 %108, label %109, label %113

109:                                              ; preds = %106
  %110 = call i8* @CBS_data(%struct.cbs_st* nonnull %7) #4
  %111 = load i8, i8* %110, align 1
  %112 = icmp eq i8 %111, 1
  br i1 %112, label %114, label %113

113:                                              ; preds = %109, %106
  call void @ERR_put_error(i32 15, i32 0, i32 123, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i64 0, i64 0), i32 286) #4
  br label %134

114:                                              ; preds = %109, %103
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #4
  store i8 -86, i8* %10, align 1
  %115 = call i32 @CBS_get_u8(%struct.cbs_st* nonnull %6, i8* nonnull %10) #4
  %116 = icmp ne i32 %115, 0
  %117 = load i8, i8* %10, align 1
  %118 = icmp eq i8 %117, 4
  %119 = and i1 %116, %118
  br i1 %119, label %121, label %120

120:                                              ; preds = %114
  call void @ERR_put_error(i32 15, i32 0, i32 111, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i64 0, i64 0), i32 294) #4
  br label %132

121:                                              ; preds = %114
  %122 = call i64 @CBS_len(%struct.cbs_st* nonnull %6) #4
  %123 = and i64 %122, 1
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %126, label %125

125:                                              ; preds = %121
  call void @ERR_put_error(i32 15, i32 0, i32 128, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i64 0, i64 0), i32 299) #4
  br label %132

126:                                              ; preds = %121
  %127 = call i64 @CBS_len(%struct.cbs_st* nonnull %6) #4
  %128 = lshr i64 %127, 1
  %129 = call i8* @CBS_data(%struct.cbs_st* nonnull %6) #4
  call void @CBS_init(%struct.cbs_st* nonnull %14, i8* %129, i64 %128) #4
  %130 = call i8* @CBS_data(%struct.cbs_st* nonnull %6) #4
  %131 = getelementptr inbounds i8, i8* %130, i64 %128
  call void @CBS_init(%struct.cbs_st* nonnull %15, i8* %131, i64 %128) #4
  br label %132

132:                                              ; preds = %126, %125, %120
  %133 = phi i32 [ 0, %120 ], [ 0, %125 ], [ 1, %126 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #4
  br label %134

134:                                              ; preds = %102, %113, %132
  %135 = phi i32 [ 0, %102 ], [ 0, %113 ], [ %133, %132 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %40) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #4
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %190, label %137

137:                                              ; preds = %134
  %138 = call %struct.built_in_curves* @OPENSSL_built_in_curves() #4
  br label %139

139:                                              ; preds = %182, %137
  %140 = phi i64 [ 0, %137 ], [ %183, %182 ]
  %141 = getelementptr inbounds %struct.built_in_curves, %struct.built_in_curves* %138, i64 0, i32 0, i64 %140, i32 4
  %142 = load i8, i8* %141, align 8
  %143 = zext i8 %142 to i32
  %144 = getelementptr inbounds %struct.built_in_curves, %struct.built_in_curves* %138, i64 0, i32 0, i64 %140, i32 5
  %145 = load i8*, i8** %144, align 8
  %146 = zext i8 %142 to i64
  %147 = call fastcc i32 @integers_equal(%struct.cbs_st* nonnull %11, i8* %145, i64 %146)
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %182, label %149

149:                                              ; preds = %139
  %150 = load i8*, i8** %144, align 8
  %151 = getelementptr inbounds i8, i8* %150, i64 %146
  %152 = call fastcc i32 @integers_equal(%struct.cbs_st* nonnull %12, i8* %151, i64 %146)
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %182, label %154

154:                                              ; preds = %149
  %155 = load i8*, i8** %144, align 8
  %156 = shl nuw nsw i32 %143, 1
  %157 = zext i32 %156 to i64
  %158 = getelementptr inbounds i8, i8* %155, i64 %157
  %159 = call fastcc i32 @integers_equal(%struct.cbs_st* nonnull %13, i8* %158, i64 %146)
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %182, label %161

161:                                              ; preds = %154
  %162 = load i8*, i8** %144, align 8
  %163 = mul nuw nsw i32 %143, 3
  %164 = zext i32 %163 to i64
  %165 = getelementptr inbounds i8, i8* %162, i64 %164
  %166 = call fastcc i32 @integers_equal(%struct.cbs_st* nonnull %14, i8* %165, i64 %146)
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %182, label %168

168:                                              ; preds = %161
  %169 = load i8*, i8** %144, align 8
  %170 = shl nuw nsw i32 %143, 2
  %171 = zext i32 %170 to i64
  %172 = getelementptr inbounds i8, i8* %169, i64 %171
  %173 = call fastcc i32 @integers_equal(%struct.cbs_st* nonnull %15, i8* %172, i64 %146)
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %182, label %175

175:                                              ; preds = %168
  %176 = load i8*, i8** %144, align 8
  %177 = mul nuw nsw i32 %143, 5
  %178 = zext i32 %177 to i64
  %179 = getelementptr inbounds i8, i8* %176, i64 %178
  %180 = call fastcc i32 @integers_equal(%struct.cbs_st* nonnull %16, i8* %179, i64 %146)
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %185

182:                                              ; preds = %175, %168, %161, %154, %149, %139
  %183 = add nuw nsw i64 %140, 1
  %184 = icmp eq i64 %183, 4
  br i1 %184, label %189, label %139

185:                                              ; preds = %175
  %186 = getelementptr inbounds %struct.built_in_curves, %struct.built_in_curves* %138, i64 0, i32 0, i64 %140, i32 0
  %187 = load i32, i32* %186, align 8
  %188 = call %struct.ec_group_st* @EC_GROUP_new_by_curve_name(i32 %187) #4
  br label %190

189:                                              ; preds = %182
  call void @ERR_put_error(i32 15, i32 0, i32 123, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i64 0, i64 0), i32 403) #4
  br label %190

190:                                              ; preds = %185, %189, %134
  %191 = phi %struct.ec_group_st* [ null, %134 ], [ null, %189 ], [ %188, %185 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #4
  br label %192

192:                                              ; preds = %190, %19
  %193 = phi %struct.ec_group_st* [ %191, %190 ], [ %20, %19 ]
  ret %struct.ec_group_st* %193
}

declare i32 @EC_GROUP_cmp(%struct.ec_group_st*, %struct.ec_group_st*, %struct.bignum_ctx*) local_unnamed_addr #2

declare i64 @CBS_len(%struct.cbs_st*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %struct.ec_key_st* @EC_KEY_new() local_unnamed_addr #2

declare i32 @EC_KEY_set_group(%struct.ec_key_st*, %struct.ec_group_st*) local_unnamed_addr #2

declare %struct.bignum_st* @BN_bin2bn(i8*, i64, %struct.bignum_st*) local_unnamed_addr #2

declare i8* @CBS_data(%struct.cbs_st*) local_unnamed_addr #2

declare %struct.ec_point_st* @EC_POINT_new(%struct.ec_group_st*) local_unnamed_addr #2

declare i32 @EC_KEY_set_private_key(%struct.ec_key_st*, %struct.bignum_st*) local_unnamed_addr #2

declare i32 @CBS_get_u8(%struct.cbs_st*, i8*) local_unnamed_addr #2

declare i32 @EC_POINT_oct2point(%struct.ec_group_st*, %struct.ec_point_st*, i8*, i64, %struct.bignum_ctx*) local_unnamed_addr #2

declare i32 @ec_point_mul_scalar_base(%struct.ec_group_st*, %struct.EC_RAW_POINT*, %union.EC_SCALAR*) local_unnamed_addr #2

declare i32 @EC_KEY_check_key(%struct.ec_key_st*) local_unnamed_addr #2

declare void @BN_free(%struct.bignum_st*) local_unnamed_addr #2

declare void @EC_GROUP_free(%struct.ec_group_st*) local_unnamed_addr #2

declare void @EC_KEY_free(%struct.ec_key_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EC_KEY_marshal_private_key(%struct.cbb_st*, %struct.ec_key_st*, i32) local_unnamed_addr #0 {
  %4 = alloca i8*, align 8
  %5 = alloca %struct.cbb_st, align 8
  %6 = alloca %struct.cbb_st, align 8
  %7 = alloca %struct.cbb_st, align 8
  %8 = alloca %struct.cbb_st, align 8
  %9 = alloca %struct.cbb_st, align 8
  %10 = icmp eq %struct.ec_key_st* %1, null
  br i1 %10, label %19, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.ec_key_st, %struct.ec_key_st* %1, i64 0, i32 0
  %13 = load %struct.ec_group_st*, %struct.ec_group_st** %12, align 8
  %14 = icmp eq %struct.ec_group_st* %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.ec_key_st, %struct.ec_key_st* %1, i64 0, i32 2
  %17 = load %struct.EC_WRAPPED_SCALAR*, %struct.EC_WRAPPED_SCALAR** %16, align 8
  %18 = icmp eq %struct.EC_WRAPPED_SCALAR* %17, null
  br i1 %18, label %19, label %20

19:                                               ; preds = %15, %11, %3
  tail call void @ERR_put_error(i32 15, i32 0, i32 67, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i64 0, i64 0), i32 195) #4
  br label %101

20:                                               ; preds = %15
  %21 = bitcast %struct.cbb_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 32, i1 false)
  %22 = bitcast %struct.cbb_st* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %22) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 32, i1 false)
  %23 = call i32 @CBB_add_asn1(%struct.cbb_st* %0, %struct.cbb_st* nonnull %5, i32 536870928) #4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %39, label %25

25:                                               ; preds = %20
  %26 = call i32 @CBB_add_asn1_uint64(%struct.cbb_st* nonnull %5, i64 1) #4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %39, label %28

28:                                               ; preds = %25
  %29 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %5, %struct.cbb_st* nonnull %6, i32 4) #4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %39, label %31

31:                                               ; preds = %28
  %32 = load %struct.ec_group_st*, %struct.ec_group_st** %12, align 8
  %33 = call %struct.bignum_st* @EC_GROUP_get0_order(%struct.ec_group_st* %32) #4
  %34 = call i32 @BN_num_bytes(%struct.bignum_st* %33) #4
  %35 = zext i32 %34 to i64
  %36 = call %struct.bignum_st* @EC_KEY_get0_private_key(%struct.ec_key_st* nonnull %1) #4
  %37 = call i32 @BN_bn2cbb_padded(%struct.cbb_st* nonnull %6, i64 %35, %struct.bignum_st* %36) #4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %31, %28, %25, %20
  call void @ERR_put_error(i32 15, i32 0, i32 129, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i64 0, i64 0), i32 206) #4
  br label %99

40:                                               ; preds = %31
  %41 = and i32 %2, 1
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %56

43:                                               ; preds = %40
  %44 = bitcast %struct.cbb_st* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %44) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 32, i1 false)
  %45 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %5, %struct.cbb_st* nonnull %7, i32 -1610612736) #4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %54, label %47

47:                                               ; preds = %43
  %48 = load %struct.ec_group_st*, %struct.ec_group_st** %12, align 8
  %49 = call i32 @EC_KEY_marshal_curve_name(%struct.cbb_st* nonnull %7, %struct.ec_group_st* %48)
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %47
  %52 = call i32 @CBB_flush(%struct.cbb_st* nonnull %5) #4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51, %47, %43
  call void @ERR_put_error(i32 15, i32 0, i32 129, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i64 0, i64 0), i32 215) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %44) #4
  br label %99

55:                                               ; preds = %51
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %44) #4
  br label %56

56:                                               ; preds = %55, %40
  %57 = and i32 %2, 2
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %95

59:                                               ; preds = %56
  %60 = getelementptr inbounds %struct.ec_key_st, %struct.ec_key_st* %1, i64 0, i32 1
  %61 = load %struct.ec_point_st*, %struct.ec_point_st** %60, align 8
  %62 = icmp eq %struct.ec_point_st* %61, null
  br i1 %62, label %95, label %63

63:                                               ; preds = %59
  %64 = bitcast %struct.cbb_st* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %64) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 -86, i64 32, i1 false)
  %65 = bitcast %struct.cbb_st* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %65) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 -86, i64 32, i1 false)
  %66 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %5, %struct.cbb_st* nonnull %8, i32 -1610612735) #4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %93, label %68

68:                                               ; preds = %63
  %69 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %8, %struct.cbb_st* nonnull %9, i32 3) #4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %93, label %71

71:                                               ; preds = %68
  %72 = call i32 @CBB_add_u8(%struct.cbb_st* nonnull %9, i8 zeroext 0) #4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %93, label %74

74:                                               ; preds = %71
  %75 = load %struct.ec_group_st*, %struct.ec_group_st** %12, align 8
  %76 = load %struct.ec_point_st*, %struct.ec_point_st** %60, align 8
  %77 = getelementptr inbounds %struct.ec_key_st, %struct.ec_key_st* %1, i64 0, i32 4
  %78 = load i32, i32* %77, align 4
  %79 = call i64 @EC_POINT_point2oct(%struct.ec_group_st* %75, %struct.ec_point_st* %76, i32 %78, i8* null, i64 0, %struct.bignum_ctx* null) #4
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %93, label %81

81:                                               ; preds = %74
  %82 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %83 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %9, i8** nonnull %4, i64 %79) #4
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %81
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #4
  br label %93

86:                                               ; preds = %81
  %87 = load i8*, i8** %4, align 8
  %88 = call i64 @EC_POINT_point2oct(%struct.ec_group_st* %75, %struct.ec_point_st* %76, i32 %78, i8* %87, i64 %79, %struct.bignum_ctx* null) #4
  %89 = icmp eq i64 %88, %79
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #4
  br i1 %89, label %90, label %93

90:                                               ; preds = %86
  %91 = call i32 @CBB_flush(%struct.cbb_st* nonnull %5) #4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %94

93:                                               ; preds = %86, %74, %85, %90, %71, %68, %63
  call void @ERR_put_error(i32 15, i32 0, i32 129, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i64 0, i64 0), i32 231) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %65) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %64) #4
  br label %99

94:                                               ; preds = %90
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %65) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %64) #4
  br label %95

95:                                               ; preds = %94, %59, %56
  %96 = call i32 @CBB_flush(%struct.cbb_st* %0) #4
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  call void @ERR_put_error(i32 15, i32 0, i32 129, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i64 0, i64 0), i32 237) #4
  br label %99

99:                                               ; preds = %95, %93, %54, %98, %39
  %100 = phi i32 [ 0, %98 ], [ 0, %39 ], [ 0, %54 ], [ 0, %93 ], [ 1, %95 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %22) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #4
  br label %101

101:                                              ; preds = %99, %19
  %102 = phi i32 [ 0, %19 ], [ %100, %99 ]
  ret i32 %102
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i32 @CBB_add_asn1(%struct.cbb_st*, %struct.cbb_st*, i32) local_unnamed_addr #2

declare i32 @CBB_add_asn1_uint64(%struct.cbb_st*, i64) local_unnamed_addr #2

declare i32 @BN_bn2cbb_padded(%struct.cbb_st*, i64, %struct.bignum_st*) local_unnamed_addr #2

declare i32 @BN_num_bytes(%struct.bignum_st*) local_unnamed_addr #2

declare %struct.bignum_st* @EC_GROUP_get0_order(%struct.ec_group_st*) local_unnamed_addr #2

declare %struct.bignum_st* @EC_KEY_get0_private_key(%struct.ec_key_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EC_KEY_marshal_curve_name(%struct.cbb_st*, %struct.ec_group_st*) local_unnamed_addr #0 {
  %3 = alloca %struct.cbb_st, align 8
  %4 = tail call i32 @EC_GROUP_get_curve_name(%struct.ec_group_st* %1) #4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  tail call void @ERR_put_error(i32 15, i32 0, i32 123, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i64 0, i64 0), i32 349) #4
  br label %35

7:                                                ; preds = %2
  %8 = tail call %struct.built_in_curves* @OPENSSL_built_in_curves() #4
  %9 = getelementptr inbounds %struct.built_in_curves, %struct.built_in_curves* %8, i64 0, i32 0, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, %4
  br i1 %11, label %12, label %29

12:                                               ; preds = %41, %37, %29, %7
  %13 = phi i64 [ 0, %7 ], [ 1, %29 ], [ 2, %37 ], [ 3, %41 ]
  %14 = bitcast %struct.cbb_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 32, i1 false)
  %15 = call i32 @CBB_add_asn1(%struct.cbb_st* %0, %struct.cbb_st* nonnull %3, i32 6) #4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %33, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.built_in_curves, %struct.built_in_curves* %8, i64 0, i32 0, i64 %13, i32 1
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds %struct.built_in_curves, %struct.built_in_curves* %8, i64 0, i32 0, i64 %13, i32 2
  %21 = load i8, i8* %20, align 8
  %22 = zext i8 %21 to i64
  %23 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %3, i8* %19, i64 %22) #4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %33, label %25

25:                                               ; preds = %17
  %26 = call i32 @CBB_flush(%struct.cbb_st* %0) #4
  %27 = icmp ne i32 %26, 0
  %28 = zext i1 %27 to i32
  br label %33

29:                                               ; preds = %7
  %30 = getelementptr inbounds %struct.built_in_curves, %struct.built_in_curves* %8, i64 0, i32 0, i64 1, i32 0
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %31, %4
  br i1 %32, label %12, label %37

33:                                               ; preds = %17, %12, %25
  %34 = phi i32 [ 0, %17 ], [ 0, %12 ], [ %28, %25 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #4
  br label %35

35:                                               ; preds = %33, %45, %6
  %36 = phi i32 [ 0, %6 ], [ 0, %45 ], [ %34, %33 ]
  ret i32 %36

37:                                               ; preds = %29
  %38 = getelementptr inbounds %struct.built_in_curves, %struct.built_in_curves* %8, i64 0, i32 0, i64 2, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = icmp eq i32 %39, %4
  br i1 %40, label %12, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %struct.built_in_curves, %struct.built_in_curves* %8, i64 0, i32 0, i64 3, i32 0
  %43 = load i32, i32* %42, align 8
  %44 = icmp eq i32 %43, %4
  br i1 %44, label %12, label %45

45:                                               ; preds = %41
  tail call void @ERR_put_error(i32 15, i32 0, i32 123, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i64 0, i64 0), i32 364) #4
  br label %35
}

declare i32 @CBB_flush(%struct.cbb_st*) local_unnamed_addr #2

declare i32 @CBB_add_u8(%struct.cbb_st*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EC_POINT_point2cbb(%struct.cbb_st*, %struct.ec_group_st*, %struct.ec_point_st*, i32, %struct.bignum_ctx*) local_unnamed_addr #0 {
  %6 = alloca i8*, align 8
  %7 = tail call i64 @EC_POINT_point2oct(%struct.ec_group_st* %1, %struct.ec_point_st* %2, i32 %3, i8* null, i64 0, %struct.bignum_ctx* %4) #4
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %20, label %9

9:                                                ; preds = %5
  %10 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %11 = call i32 @CBB_add_space(%struct.cbb_st* %0, i8** nonnull %6, i64 %7) #4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %18, label %13

13:                                               ; preds = %9
  %14 = load i8*, i8** %6, align 8
  %15 = call i64 @EC_POINT_point2oct(%struct.ec_group_st* %1, %struct.ec_point_st* %2, i32 %3, i8* %14, i64 %7, %struct.bignum_ctx* %4) #4
  %16 = icmp eq i64 %15, %7
  %17 = zext i1 %16 to i32
  br label %18

18:                                               ; preds = %9, %13
  %19 = phi i32 [ 0, %9 ], [ %17, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #4
  br label %20

20:                                               ; preds = %5, %18
  %21 = phi i32 [ %19, %18 ], [ 0, %5 ]
  ret i32 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.ec_group_st* @EC_KEY_parse_curve_name(%struct.cbs_st*) local_unnamed_addr #0 {
  %2 = alloca %struct.cbs_st, align 8
  %3 = bitcast %struct.cbs_st* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #4
  %4 = bitcast %struct.cbs_st* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 16, i1 false)
  %5 = call i32 @CBS_get_asn1(%struct.cbs_st* %0, %struct.cbs_st* nonnull %2, i32 6) #4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %8

7:                                                ; preds = %1
  call void @ERR_put_error(i32 15, i32 0, i32 128, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i64 0, i64 0), i32 327) #4
  br label %36

8:                                                ; preds = %1
  %9 = call %struct.built_in_curves* @OPENSSL_built_in_curves() #4
  %10 = call i64 @CBS_len(%struct.cbs_st* nonnull %2) #4
  %11 = getelementptr inbounds %struct.built_in_curves, %struct.built_in_curves* %9, i64 0, i32 0, i64 0, i32 2
  %12 = load i8, i8* %11, align 8
  %13 = zext i8 %12 to i64
  %14 = icmp eq i64 %10, %13
  br i1 %14, label %15, label %25

15:                                               ; preds = %8
  %16 = call i8* @CBS_data(%struct.cbs_st* nonnull %2) #4
  %17 = load i8, i8* %11, align 8
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %31, label %19

19:                                               ; preds = %15
  %20 = zext i8 %17 to i64
  %21 = getelementptr inbounds %struct.built_in_curves, %struct.built_in_curves* %9, i64 0, i32 0, i64 0, i32 1
  %22 = load i8*, i8** %21, align 8
  %23 = call i32 @bcmp(i8* %16, i8* %22, i64 %20)
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %31, label %25

25:                                               ; preds = %19, %8
  %26 = call i64 @CBS_len(%struct.cbs_st* nonnull %2) #4
  %27 = getelementptr inbounds %struct.built_in_curves, %struct.built_in_curves* %9, i64 0, i32 0, i64 1, i32 2
  %28 = load i8, i8* %27, align 8
  %29 = zext i8 %28 to i64
  %30 = icmp eq i64 %26, %29
  br i1 %30, label %38, label %48

31:                                               ; preds = %74, %70, %58, %54, %42, %38, %15, %19
  %32 = phi i64 [ 0, %15 ], [ 0, %19 ], [ 1, %38 ], [ 1, %42 ], [ 2, %54 ], [ 2, %58 ], [ 3, %70 ], [ 3, %74 ]
  %33 = getelementptr inbounds %struct.built_in_curves, %struct.built_in_curves* %9, i64 0, i32 0, i64 %32, i32 0
  %34 = load i32, i32* %33, align 8
  %35 = call %struct.ec_group_st* @EC_GROUP_new_by_curve_name(i32 %34) #4
  br label %36

36:                                               ; preds = %31, %80, %7
  %37 = phi %struct.ec_group_st* [ null, %7 ], [ null, %80 ], [ %35, %31 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #4
  ret %struct.ec_group_st* %37

38:                                               ; preds = %25
  %39 = call i8* @CBS_data(%struct.cbs_st* nonnull %2) #4
  %40 = load i8, i8* %27, align 8
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %31, label %42

42:                                               ; preds = %38
  %43 = zext i8 %40 to i64
  %44 = getelementptr inbounds %struct.built_in_curves, %struct.built_in_curves* %9, i64 0, i32 0, i64 1, i32 1
  %45 = load i8*, i8** %44, align 8
  %46 = call i32 @bcmp(i8* %39, i8* %45, i64 %43)
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %31, label %48

48:                                               ; preds = %42, %25
  %49 = call i64 @CBS_len(%struct.cbs_st* nonnull %2) #4
  %50 = getelementptr inbounds %struct.built_in_curves, %struct.built_in_curves* %9, i64 0, i32 0, i64 2, i32 2
  %51 = load i8, i8* %50, align 8
  %52 = zext i8 %51 to i64
  %53 = icmp eq i64 %49, %52
  br i1 %53, label %54, label %64

54:                                               ; preds = %48
  %55 = call i8* @CBS_data(%struct.cbs_st* nonnull %2) #4
  %56 = load i8, i8* %50, align 8
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %31, label %58

58:                                               ; preds = %54
  %59 = zext i8 %56 to i64
  %60 = getelementptr inbounds %struct.built_in_curves, %struct.built_in_curves* %9, i64 0, i32 0, i64 2, i32 1
  %61 = load i8*, i8** %60, align 8
  %62 = call i32 @bcmp(i8* %55, i8* %61, i64 %59)
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %31, label %64

64:                                               ; preds = %58, %48
  %65 = call i64 @CBS_len(%struct.cbs_st* nonnull %2) #4
  %66 = getelementptr inbounds %struct.built_in_curves, %struct.built_in_curves* %9, i64 0, i32 0, i64 3, i32 2
  %67 = load i8, i8* %66, align 8
  %68 = zext i8 %67 to i64
  %69 = icmp eq i64 %65, %68
  br i1 %69, label %70, label %80

70:                                               ; preds = %64
  %71 = call i8* @CBS_data(%struct.cbs_st* nonnull %2) #4
  %72 = load i8, i8* %66, align 8
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %31, label %74

74:                                               ; preds = %70
  %75 = zext i8 %72 to i64
  %76 = getelementptr inbounds %struct.built_in_curves, %struct.built_in_curves* %9, i64 0, i32 0, i64 3, i32 1
  %77 = load i8*, i8** %76, align 8
  %78 = call i32 @bcmp(i8* %71, i8* %77, i64 %75)
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %31, label %80

80:                                               ; preds = %74, %64
  call void @ERR_put_error(i32 15, i32 0, i32 123, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i64 0, i64 0), i32 342) #4
  br label %36
}

declare %struct.built_in_curves* @OPENSSL_built_in_curves() local_unnamed_addr #2

declare %struct.ec_group_st* @EC_GROUP_new_by_curve_name(i32) local_unnamed_addr #2

declare i32 @EC_GROUP_get_curve_name(%struct.ec_group_st*) local_unnamed_addr #2

declare i32 @CBB_add_bytes(%struct.cbb_st*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @integers_equal(%struct.cbs_st* nocapture readonly, i8*, i64) unnamed_addr #0 {
  %4 = alloca %struct.cbs_st, align 8
  %5 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #4
  %6 = bitcast %struct.cbs_st* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 %6, i64 16, i1 false)
  %7 = call i64 @CBS_len(%struct.cbs_st* nonnull %4) #4
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %17, label %9

9:                                                ; preds = %3, %13
  %10 = call i8* @CBS_data(%struct.cbs_st* nonnull %4) #4
  %11 = load i8, i8* %10, align 1
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %17

13:                                               ; preds = %9
  %14 = call i32 @CBS_skip(%struct.cbs_st* nonnull %4, i64 1) #4
  %15 = call i64 @CBS_len(%struct.cbs_st* nonnull %4) #4
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %9

17:                                               ; preds = %9, %13, %3
  %18 = icmp eq i64 %2, 0
  br i1 %18, label %28, label %19

19:                                               ; preds = %17, %24
  %20 = phi i64 [ %26, %24 ], [ %2, %17 ]
  %21 = phi i8* [ %25, %24 ], [ %1, %17 ]
  %22 = load i8, i8* %21, align 1
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %28

24:                                               ; preds = %19
  %25 = getelementptr inbounds i8, i8* %21, i64 1
  %26 = add i64 %20, -1
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %28, label %19

28:                                               ; preds = %19, %24, %17
  %29 = phi i8* [ %1, %17 ], [ %25, %24 ], [ %21, %19 ]
  %30 = phi i64 [ 0, %17 ], [ 0, %24 ], [ %20, %19 ]
  %31 = call i32 @CBS_mem_equal(%struct.cbs_st* nonnull %4, i8* %29, i64 %30) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #4
  ret i32 %31
}

declare i64 @EC_POINT_point2oct(%struct.ec_group_st*, %struct.ec_point_st*, i32, i8*, i64, %struct.bignum_ctx*) local_unnamed_addr #2

declare i32 @CBB_add_space(%struct.cbb_st*, i8**, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.ec_key_st* @d2i_ECPrivateKey(%struct.ec_key_st**, i8** nocapture, i64) local_unnamed_addr #0 {
  %4 = alloca %struct.cbs_st, align 8
  %5 = icmp ne %struct.ec_key_st** %0, null
  br i1 %5, label %6, label %11

6:                                                ; preds = %3
  %7 = load %struct.ec_key_st*, %struct.ec_key_st** %0, align 8
  %8 = icmp eq %struct.ec_key_st* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %6
  %10 = tail call %struct.ec_group_st* @EC_KEY_get0_group(%struct.ec_key_st* nonnull %7) #4
  br label %11

11:                                               ; preds = %6, %9, %3
  %12 = phi %struct.ec_group_st* [ %10, %9 ], [ null, %6 ], [ null, %3 ]
  %13 = icmp slt i64 %2, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %11
  tail call void @ERR_put_error(i32 15, i32 0, i32 128, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i64 0, i64 0), i32 427) #4
  br label %27

15:                                               ; preds = %11
  %16 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #4
  %17 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 16, i1 false)
  %18 = load i8*, i8** %1, align 8
  call void @CBS_init(%struct.cbs_st* nonnull %4, i8* %18, i64 %2) #4
  %19 = call %struct.ec_key_st* @EC_KEY_parse_private_key(%struct.cbs_st* nonnull %4, %struct.ec_group_st* %12)
  %20 = icmp eq %struct.ec_key_st* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  br i1 %5, label %22, label %24

22:                                               ; preds = %21
  %23 = load %struct.ec_key_st*, %struct.ec_key_st** %0, align 8
  call void @EC_KEY_free(%struct.ec_key_st* %23) #4
  store %struct.ec_key_st* %19, %struct.ec_key_st** %0, align 8
  br label %24

24:                                               ; preds = %22, %21
  %25 = call i8* @CBS_data(%struct.cbs_st* nonnull %4) #4
  store i8* %25, i8** %1, align 8
  br label %26

26:                                               ; preds = %15, %24
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #4
  br label %27

27:                                               ; preds = %26, %14
  %28 = phi %struct.ec_key_st* [ null, %14 ], [ %19, %26 ]
  ret %struct.ec_key_st* %28
}

declare %struct.ec_group_st* @EC_KEY_get0_group(%struct.ec_key_st*) local_unnamed_addr #2

declare void @CBS_init(%struct.cbs_st*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @i2d_ECPrivateKey(%struct.ec_key_st*, i8**) local_unnamed_addr #0 {
  %3 = alloca %struct.cbb_st, align 8
  %4 = bitcast %struct.cbb_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 32, i1 false)
  %5 = call i32 @CBB_init(%struct.cbb_st* nonnull %3, i64 0) #4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %2
  %8 = call i32 @EC_KEY_get_enc_flags(%struct.ec_key_st* %0) #4
  %9 = call i32 @EC_KEY_marshal_private_key(%struct.cbb_st* nonnull %3, %struct.ec_key_st* %0, i32 %8)
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %12

11:                                               ; preds = %7, %2
  call void @CBB_cleanup(%struct.cbb_st* nonnull %3) #4
  br label %14

12:                                               ; preds = %7
  %13 = call i32 @CBB_finish_i2d(%struct.cbb_st* nonnull %3, i8** %1) #4
  br label %14

14:                                               ; preds = %12, %11
  %15 = phi i32 [ %13, %12 ], [ -1, %11 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #4
  ret i32 %15
}

declare i32 @CBB_init(%struct.cbb_st*, i64) local_unnamed_addr #2

declare i32 @EC_KEY_get_enc_flags(%struct.ec_key_st*) local_unnamed_addr #2

declare void @CBB_cleanup(%struct.cbb_st*) local_unnamed_addr #2

declare i32 @CBB_finish_i2d(%struct.cbb_st*, i8**) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.ec_key_st* @d2i_ECParameters(%struct.ec_key_st**, i8** nocapture, i64) local_unnamed_addr #0 {
  %4 = alloca %struct.cbs_st, align 8
  %5 = icmp slt i64 %2, 0
  br i1 %5, label %27, label %6

6:                                                ; preds = %3
  %7 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #4
  %8 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %1, align 8
  call void @CBS_init(%struct.cbs_st* nonnull %4, i8* %9, i64 %2) #4
  %10 = call %struct.ec_group_st* @EC_KEY_parse_parameters(%struct.cbs_st* nonnull %4)
  %11 = icmp eq %struct.ec_group_st* %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %6
  %13 = call %struct.ec_key_st* @EC_KEY_new() #4
  %14 = icmp eq %struct.ec_key_st* %13, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %12
  %16 = call i32 @EC_KEY_set_group(%struct.ec_key_st* nonnull %13, %struct.ec_group_st* nonnull %10) #4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15, %12
  call void @EC_GROUP_free(%struct.ec_group_st* nonnull %10) #4
  call void @EC_KEY_free(%struct.ec_key_st* %13) #4
  br label %25

19:                                               ; preds = %15
  call void @EC_GROUP_free(%struct.ec_group_st* nonnull %10) #4
  %20 = icmp eq %struct.ec_key_st** %0, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %19
  %22 = load %struct.ec_key_st*, %struct.ec_key_st** %0, align 8
  call void @EC_KEY_free(%struct.ec_key_st* %22) #4
  store %struct.ec_key_st* %13, %struct.ec_key_st** %0, align 8
  br label %23

23:                                               ; preds = %19, %21
  %24 = call i8* @CBS_data(%struct.cbs_st* nonnull %4) #4
  store i8* %24, i8** %1, align 8
  br label %25

25:                                               ; preds = %18, %23, %6
  %26 = phi %struct.ec_key_st* [ null, %6 ], [ null, %18 ], [ %13, %23 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #4
  br label %27

27:                                               ; preds = %3, %25
  %28 = phi %struct.ec_key_st* [ %26, %25 ], [ null, %3 ]
  ret %struct.ec_key_st* %28
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @i2d_ECParameters(%struct.ec_key_st* readonly, i8**) local_unnamed_addr #0 {
  %3 = alloca %struct.cbb_st, align 8
  %4 = icmp eq %struct.ec_key_st* %0, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.ec_key_st, %struct.ec_key_st* %0, i64 0, i32 0
  %7 = load %struct.ec_group_st*, %struct.ec_group_st** %6, align 8
  %8 = icmp eq %struct.ec_group_st* %7, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %5, %2
  tail call void @ERR_put_error(i32 15, i32 0, i32 67, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i64 0, i64 0), i32 484) #4
  br label %23

10:                                               ; preds = %5
  %11 = bitcast %struct.cbb_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 32, i1 false)
  %12 = call i32 @CBB_init(%struct.cbb_st* nonnull %3, i64 0) #4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %18, label %14

14:                                               ; preds = %10
  %15 = load %struct.ec_group_st*, %struct.ec_group_st** %6, align 8
  %16 = call i32 @EC_KEY_marshal_curve_name(%struct.cbb_st* nonnull %3, %struct.ec_group_st* %15)
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %14, %10
  call void @CBB_cleanup(%struct.cbb_st* nonnull %3) #4
  br label %21

19:                                               ; preds = %14
  %20 = call i32 @CBB_finish_i2d(%struct.cbb_st* nonnull %3, i8** %1) #4
  br label %21

21:                                               ; preds = %19, %18
  %22 = phi i32 [ %20, %19 ], [ -1, %18 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #4
  br label %23

23:                                               ; preds = %21, %9
  %24 = phi i32 [ -1, %9 ], [ %22, %21 ]
  ret i32 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.ec_key_st* @o2i_ECPublicKey(%struct.ec_key_st** readonly, i8** nocapture, i64) local_unnamed_addr #0 {
  %4 = icmp eq %struct.ec_key_st** %0, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %3
  %6 = load %struct.ec_key_st*, %struct.ec_key_st** %0, align 8
  %7 = icmp eq %struct.ec_key_st* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.ec_key_st, %struct.ec_key_st* %6, i64 0, i32 0
  %10 = load %struct.ec_group_st*, %struct.ec_group_st** %9, align 8
  %11 = icmp eq %struct.ec_group_st* %10, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %8, %5, %3
  tail call void @ERR_put_error(i32 15, i32 0, i32 67, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i64 0, i64 0), i32 501) #4
  br label %38

13:                                               ; preds = %8
  %14 = getelementptr inbounds %struct.ec_key_st, %struct.ec_key_st* %6, i64 0, i32 1
  %15 = load %struct.ec_point_st*, %struct.ec_point_st** %14, align 8
  %16 = icmp eq %struct.ec_point_st* %15, null
  br i1 %16, label %17, label %23

17:                                               ; preds = %13
  %18 = tail call %struct.ec_point_st* @EC_POINT_new(%struct.ec_group_st* nonnull %10) #4
  store %struct.ec_point_st* %18, %struct.ec_point_st** %14, align 8
  %19 = icmp eq %struct.ec_point_st* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %17
  %21 = load %struct.ec_group_st*, %struct.ec_group_st** %9, align 8
  br label %23

22:                                               ; preds = %17
  tail call void @ERR_put_error(i32 15, i32 0, i32 65, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i64 0, i64 0), i32 507) #4
  br label %38

23:                                               ; preds = %20, %13
  %24 = phi %struct.ec_point_st* [ %18, %20 ], [ %15, %13 ]
  %25 = phi %struct.ec_group_st* [ %21, %20 ], [ %10, %13 ]
  %26 = load i8*, i8** %1, align 8
  %27 = tail call i32 @EC_POINT_oct2point(%struct.ec_group_st* %25, %struct.ec_point_st* nonnull %24, i8* %26, i64 %2, %struct.bignum_ctx* null) #4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %23
  tail call void @ERR_put_error(i32 15, i32 0, i32 15, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i64 0, i64 0), i32 511) #4
  br label %38

30:                                               ; preds = %23
  %31 = load i8*, i8** %1, align 8
  %32 = load i8, i8* %31, align 1
  %33 = and i8 %32, -2
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds %struct.ec_key_st, %struct.ec_key_st* %6, i64 0, i32 4
  store i32 %34, i32* %35, align 4
  %36 = load i8*, i8** %1, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %2
  store i8* %37, i8** %1, align 8
  br label %38

38:                                               ; preds = %30, %29, %22, %12
  %39 = phi %struct.ec_key_st* [ null, %12 ], [ null, %22 ], [ %6, %30 ], [ null, %29 ]
  ret %struct.ec_key_st* %39
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @i2o_ECPublicKey(%struct.ec_key_st* readonly, i8**) local_unnamed_addr #0 {
  %3 = icmp eq %struct.ec_key_st* %0, null
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  tail call void @ERR_put_error(i32 15, i32 0, i32 67, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i64 0, i64 0), i32 525) #4
  br label %44

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.ec_key_st, %struct.ec_key_st* %0, i64 0, i32 0
  %7 = load %struct.ec_group_st*, %struct.ec_group_st** %6, align 8
  %8 = getelementptr inbounds %struct.ec_key_st, %struct.ec_key_st* %0, i64 0, i32 1
  %9 = load %struct.ec_point_st*, %struct.ec_point_st** %8, align 8
  %10 = getelementptr inbounds %struct.ec_key_st, %struct.ec_key_st* %0, i64 0, i32 4
  %11 = load i32, i32* %10, align 4
  %12 = tail call i64 @EC_POINT_point2oct(%struct.ec_group_st* %7, %struct.ec_point_st* %9, i32 %11, i8* null, i64 0, %struct.bignum_ctx* null) #4
  %13 = icmp eq i8** %1, null
  %14 = icmp eq i64 %12, 0
  %15 = or i1 %13, %14
  br i1 %15, label %16, label %18

16:                                               ; preds = %5
  %17 = trunc i64 %12 to i32
  br label %44

18:                                               ; preds = %5
  %19 = load i8*, i8** %1, align 8
  %20 = icmp eq i8* %19, null
  br i1 %20, label %21, label %25

21:                                               ; preds = %18
  %22 = tail call i8* @OPENSSL_malloc(i64 %12) #4
  store i8* %22, i8** %1, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  tail call void @ERR_put_error(i32 15, i32 0, i32 65, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i64 0, i64 0), i32 540) #4
  br label %44

25:                                               ; preds = %21, %18
  %26 = phi i8* [ %19, %18 ], [ %22, %21 ]
  %27 = phi i32 [ 0, %18 ], [ 1, %21 ]
  %28 = load %struct.ec_group_st*, %struct.ec_group_st** %6, align 8
  %29 = load %struct.ec_point_st*, %struct.ec_point_st** %8, align 8
  %30 = load i32, i32* %10, align 4
  %31 = tail call i64 @EC_POINT_point2oct(%struct.ec_group_st* %28, %struct.ec_point_st* %29, i32 %30, i8* nonnull %26, i64 %12, %struct.bignum_ctx* null) #4
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %33, label %37

33:                                               ; preds = %25
  tail call void @ERR_put_error(i32 15, i32 0, i32 15, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i64 0, i64 0), i32 547) #4
  %34 = icmp eq i32 %27, 0
  br i1 %34, label %44, label %35

35:                                               ; preds = %33
  %36 = load i8*, i8** %1, align 8
  tail call void @OPENSSL_free(i8* %36) #4
  store i8* null, i8** %1, align 8
  br label %44

37:                                               ; preds = %25
  %38 = icmp eq i32 %27, 0
  br i1 %38, label %39, label %42

39:                                               ; preds = %37
  %40 = load i8*, i8** %1, align 8
  %41 = getelementptr inbounds i8, i8* %40, i64 %12
  store i8* %41, i8** %1, align 8
  br label %42

42:                                               ; preds = %37, %39
  %43 = trunc i64 %12 to i32
  br label %44

44:                                               ; preds = %35, %33, %42, %24, %16, %4
  %45 = phi i32 [ 0, %4 ], [ %17, %16 ], [ 0, %24 ], [ %43, %42 ], [ 0, %33 ], [ 0, %35 ]
  ret i32 %45
}

declare i8* @OPENSSL_malloc(i64) local_unnamed_addr #2

declare void @OPENSSL_free(i8*) local_unnamed_addr #2

declare i32 @CBS_is_unsigned_asn1_integer(%struct.cbs_st*) local_unnamed_addr #2

declare i32 @CBS_get_optional_asn1(%struct.cbs_st*, %struct.cbs_st*, i32*, i32) local_unnamed_addr #2

declare i32 @CBS_skip(%struct.cbs_st*, i64) local_unnamed_addr #2

declare i32 @CBS_mem_equal(%struct.cbs_st*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind readonly }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
