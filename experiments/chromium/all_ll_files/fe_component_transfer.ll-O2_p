; ModuleID = '../../third_party/blink/renderer/platform/graphics/filters/fe_component_transfer.cc'
source_filename = "../../third_party/blink/renderer/platform/graphics/filters/fe_component_transfer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%union.anon = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"struct.blink::ComponentTransferFunction" = type { i32, float, float, float, float, float, %"class.WTF::Vector.5" }
%"class.WTF::Vector.5" = type { %"class.WTF::VectorBuffer.6" }
%"class.WTF::VectorBuffer.6" = type { %"class.WTF::VectorBufferBase.7" }
%"class.WTF::VectorBufferBase.7" = type { float*, i32, i32 }
%"class.blink::FEComponentTransfer" = type { %"class.blink::FilterEffect", %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction" }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector", %"class.blink::Member.2", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp] }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member" = type opaque
%"class.blink::Member.2" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Filter"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.4, i32, %"class.absl::optional", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.4 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%"class.blink::Filter" = type opaque
%class.sk_sp.9 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%"class.cc::ColorFilterPaintFilter" = type { %"class.cc::PaintFilter", %class.sk_sp.9, %class.sk_sp }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.WTF::TextStream" = type { %"class.WTF::StringBuilder" }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.16, i32, i8, i8, [2 x i8] }>
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.11" }
%"struct.std::__1::atomic.11" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl.14" }
%"struct.std::__1::__cxx_atomic_impl.14" = type { %"struct.std::__1::__cxx_atomic_base_impl.15" }
%"struct.std::__1::__cxx_atomic_base_impl.15" = type { i32 }
%union.anon.16 = type { %"class.WTF::Vector.17" }
%"class.WTF::Vector.17" = type { %"class.WTF::VectorBuffer.18" }
%"class.WTF::VectorBuffer.18" = type { %"class.WTF::VectorBufferBase.19", [16 x i8] }
%"class.WTF::VectorBufferBase.19" = type { i8*, i32, i32 }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.158", %"class.std::__1::unique_ptr.158", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.174", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.186", %"class.std::__1::unique_ptr.192", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.199", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.87", %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.108", %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.138", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.58" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.58" = type { %"struct.std::__1::__atomic_base.59" }
%"struct.std::__1::__atomic_base.59" = type { %"struct.std::__1::__atomic_base.60" }
%"struct.std::__1::__atomic_base.60" = type { %"struct.std::__1::__cxx_atomic_impl.61" }
%"struct.std::__1::__cxx_atomic_impl.61" = type { %"struct.std::__1::__cxx_atomic_base_impl.62" }
%"struct.std::__1::__cxx_atomic_base_impl.62" = type { i64 }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.blink::Worklist.69"* }
%"class.blink::Worklist.69" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.58" }
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.blink::Worklist.76"* }
%"class.blink::Worklist.76" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.58" }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::Worklist.83"* }
%"class.blink::Worklist.83" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.58" }
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.blink::Worklist.90"* }
%"class.blink::Worklist.90" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.58" }
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.blink::Worklist.97"* }
%"class.blink::Worklist.97" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.58" }
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.blink::Worklist.104"* }
%"class.blink::Worklist.104" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.58" }
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.blink::Worklist.111"* }
%"class.blink::Worklist.111" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.58" }
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.118", %"class.std::__1::__compressed_pair.125", %"class.std::__1::__compressed_pair.130", %"class.std::__1::__compressed_pair.132", [4 x i8] }>
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120", %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { i64 }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { float }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.141", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.150" }
%"class.WTF::Vector.150" = type { %"class.WTF::VectorBuffer.151" }
%"class.WTF::VectorBuffer.151" = type { %"class.WTF::VectorBufferBase.152" }
%"class.WTF::VectorBufferBase.152" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.166" }
%"class.WTF::VectorBuffer.166" = type { %"class.WTF::VectorBufferBase.167" }
%"class.WTF::VectorBufferBase.167" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.180" }
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.69"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.76"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.83"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.90"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.97"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.203" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.186" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.192" = type { %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.198 }
%class.scoped_refptr.198 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.199" = type { %"struct.std::__1::__atomic_base.200" }
%"struct.std::__1::__atomic_base.200" = type { %"struct.std::__1::__cxx_atomic_impl.201" }
%"struct.std::__1::__cxx_atomic_impl.201" = type { %"struct.std::__1::__cxx_atomic_base_impl.202" }
%"struct.std::__1::__cxx_atomic_base_impl.202" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.214 }
%union.anon.214 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN5blink19FEComponentTransferD2Ev = comdat any

$_ZN5blink19FEComponentTransferD0Ev = comdat any

$_ZNK5blink12FilterEffect19GetFilterEffectTypeEv = comdat any

$_ZN5blink12FilterEffect30SetOperatingInterpolationSpaceENS_18InterpolationSpaceE = comdat any

$_ZN5blink12FilterEffect36MayProduceInvalidPreMultipliedPixelsEv = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm = comdat any

$_ZNK3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj = comdat any

@_ZTVN5blink19FEComponentTransferE = hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::FEComponentTransfer"*)* @_ZN5blink19FEComponentTransferD2Ev to i8*), i8* bitcast (void (%"class.blink::FEComponentTransfer"*)* @_ZN5blink19FEComponentTransferD0Ev to i8*), i8* bitcast (void (%"class.blink::FilterEffect"*, %"class.blink::Visitor"*)* @_ZNK5blink12FilterEffect5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%class.sk_sp*, %"class.blink::FEComponentTransfer"*)* @_ZN5blink19FEComponentTransfer17CreateImageFilterEv to i8*), i8* bitcast (void (%class.sk_sp*, %"class.blink::FilterEffect"*)* @_ZN5blink12FilterEffect34CreateImageFilterWithoutValidationEv to i8*), i8* bitcast (i32 (%"class.blink::FilterEffect"*)* @_ZNK5blink12FilterEffect19GetFilterEffectTypeEv to i8*), i8* bitcast (%"class.WTF::TextStream"* (%"class.blink::FEComponentTransfer"*, %"class.WTF::TextStream"*, i32)* @_ZNK5blink19FEComponentTransfer22ExternalRepresentationERN3WTF10TextStreamEi to i8*), i8* bitcast (void (%"class.blink::FilterEffect"*, i32)* @_ZN5blink12FilterEffect30SetOperatingInterpolationSpaceENS_18InterpolationSpaceE to i8*), i8* bitcast (i1 (%"class.blink::FEComponentTransfer"*)* @_ZNK5blink19FEComponentTransfer24AffectsTransparentPixelsEv to i8*), i8* bitcast (i1 (%"class.blink::FilterEffect"*)* @_ZN5blink12FilterEffect36MayProduceInvalidPreMultipliedPixelsEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::FilterEffect"*, %"class.blink::FloatRect"*)* @_ZNK5blink12FilterEffect9MapInputsERKNS_9FloatRectE to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::FilterEffect"*, %"class.blink::FloatRect"*)* @_ZNK5blink12FilterEffect9MapEffectERKNS_9FloatRectE to i8*)] }, align 8
@__const._ZN5blink19FEComponentTransfer17CreateImageFilterEv.crop_rect = private unnamed_addr constant { { { { i8, [3 x i8], %union.anon } } } } { { { { i8, [3 x i8], %union.anon } } } { { { i8, [3 x i8], %union.anon } } { { i8, [3 x i8], %union.anon } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon { %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } } } } } }, align 4
@__const._ZN5blink19FEComponentTransfer9GetValuesEPhS1_S1_S1_.transfer_function = private unnamed_addr constant [4 x %"struct.blink::ComponentTransferFunction"] [%"struct.blink::ComponentTransferFunction" { i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %"class.WTF::Vector.5" { %"class.WTF::VectorBuffer.6" { %"class.WTF::VectorBufferBase.7" { float* inttoptr (i64 -6148914691236517206 to float*), i32 -1431655766, i32 -1431655766 } } } }, %"struct.blink::ComponentTransferFunction" { i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %"class.WTF::Vector.5" { %"class.WTF::VectorBuffer.6" { %"class.WTF::VectorBufferBase.7" { float* inttoptr (i64 -6148914691236517206 to float*), i32 -1431655766, i32 -1431655766 } } } }, %"struct.blink::ComponentTransferFunction" { i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %"class.WTF::Vector.5" { %"class.WTF::VectorBuffer.6" { %"class.WTF::VectorBufferBase.7" { float* inttoptr (i64 -6148914691236517206 to float*), i32 -1431655766, i32 -1431655766 } } } }, %"struct.blink::ComponentTransferFunction" { i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %"class.WTF::Vector.5" { %"class.WTF::VectorBuffer.6" { %"class.WTF::VectorBufferBase.7" { float* inttoptr (i64 -6148914691236517206 to float*), i32 -1431655766, i32 -1431655766 } } } }], align 16
@__const._ZN5blink19FEComponentTransfer9GetValuesEPhS1_S1_S1_.call_effect = private unnamed_addr constant [6 x void (i8*, %"struct.blink::ComponentTransferFunction"*)*] [void (i8*, %"struct.blink::ComponentTransferFunction"*)* @_ZN5blinkL8IdentityEPhRKNS_25ComponentTransferFunctionE, void (i8*, %"struct.blink::ComponentTransferFunction"*)* @_ZN5blinkL8IdentityEPhRKNS_25ComponentTransferFunctionE, void (i8*, %"struct.blink::ComponentTransferFunction"*)* @_ZN5blinkL5TableEPhRKNS_25ComponentTransferFunctionE, void (i8*, %"struct.blink::ComponentTransferFunction"*)* @_ZN5blinkL8DiscreteEPhRKNS_25ComponentTransferFunctionE, void (i8*, %"struct.blink::ComponentTransferFunction"*)* @_ZN5blinkL6LinearEPhRKNS_25ComponentTransferFunctionE, void (i8*, %"struct.blink::ComponentTransferFunction"*)* @_ZN5blinkL5GammaEPhRKNS_25ComponentTransferFunctionE], align 16
@.str = private unnamed_addr constant [21 x i8] c"[feComponentTransfer\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c" \0A\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"{red: \00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"}\0A\00", align 1
@.str.4 = private unnamed_addr constant [9 x i8] c"{green: \00", align 1
@.str.5 = private unnamed_addr constant [8 x i8] c"{blue: \00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c"{alpha: \00", align 1
@.str.7 = private unnamed_addr constant [4 x i8] c"}]\0A\00", align 1
@.str.8 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.9 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv = private unnamed_addr constant [53 x i8] c"const char *WTF::GetStringWithTypeName() [T = float]\00", align 1
@.str.10 = private unnamed_addr constant [7 x i8] c"type=\22\00", align 1
@.str.11 = private unnamed_addr constant [10 x i8] c"\22 slope=\22\00", align 1
@.str.12 = private unnamed_addr constant [14 x i8] c"\22 intercept=\22\00", align 1
@.str.13 = private unnamed_addr constant [14 x i8] c"\22 amplitude=\22\00", align 1
@.str.14 = private unnamed_addr constant [13 x i8] c"\22 exponent=\22\00", align 1
@.str.15 = private unnamed_addr constant [11 x i8] c"\22 offset=\22\00", align 1
@.str.16 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.17 = private unnamed_addr constant [8 x i8] c"UNKNOWN\00", align 1
@.str.18 = private unnamed_addr constant [9 x i8] c"IDENTITY\00", align 1
@.str.19 = private unnamed_addr constant [6 x i8] c"TABLE\00", align 1
@.str.20 = private unnamed_addr constant [9 x i8] c"DISCRETE\00", align 1
@.str.21 = private unnamed_addr constant [7 x i8] c"LINEAR\00", align 1
@.str.22 = private unnamed_addr constant [6 x i8] c"GAMMA\00", align 1
@.str.23 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.24 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@switch.table._ZN5blinklsERN3WTF10TextStreamERKNS_25ComponentTransferFunctionE = private unnamed_addr constant [6 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22, i64 0, i64 0)], align 8

@_ZN5blink19FEComponentTransferC1EPNS_6FilterERKNS_25ComponentTransferFunctionES5_S5_S5_ = hidden unnamed_addr alias void (%"class.blink::FEComponentTransfer"*, %"class.blink::Filter"*, %"struct.blink::ComponentTransferFunction"*, %"struct.blink::ComponentTransferFunction"*, %"struct.blink::ComponentTransferFunction"*, %"struct.blink::ComponentTransferFunction"*), void (%"class.blink::FEComponentTransfer"*, %"class.blink::Filter"*, %"struct.blink::ComponentTransferFunction"*, %"struct.blink::ComponentTransferFunction"*, %"struct.blink::ComponentTransferFunction"*, %"struct.blink::ComponentTransferFunction"*)* @_ZN5blink19FEComponentTransferC2EPNS_6FilterERKNS_25ComponentTransferFunctionES5_S5_S5_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19FEComponentTransferC2EPNS_6FilterERKNS_25ComponentTransferFunctionES5_S5_S5_(%"class.blink::FEComponentTransfer"*, %"class.blink::Filter"*, %"struct.blink::ComponentTransferFunction"* nocapture readonly dereferenceable(40), %"struct.blink::ComponentTransferFunction"* nocapture readonly dereferenceable(40), %"struct.blink::ComponentTransferFunction"* nocapture readonly dereferenceable(40), %"struct.blink::ComponentTransferFunction"* nocapture readonly dereferenceable(40)) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 0
  tail call void @_ZN5blink12FilterEffectC2EPNS_6FilterE(%"class.blink::FilterEffect"* %7, %"class.blink::Filter"* %1) #10
  %8 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink19FEComponentTransferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 1
  %10 = bitcast %"struct.blink::ComponentTransferFunction"* %9 to i8*
  %11 = bitcast %"struct.blink::ComponentTransferFunction"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 24, i1 false) #10
  %12 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 1, i32 6
  %13 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %2, i64 0, i32 6, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %12, i64 0, i32 0, i32 0, i32 0
  store float* null, float** %15, align 8
  %16 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 1, i32 6, i32 0, i32 0, i32 1
  store i32 0, i32* %16, align 8
  %17 = icmp eq i32 %14, 0
  br i1 %17, label %27, label %18

18:                                               ; preds = %6
  %19 = zext i32 %14 to i64
  %20 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64 %19) #10
  %21 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %20, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv, i64 0, i64 0)) #10
  %22 = ptrtoint i8* %21 to i64
  %23 = bitcast %"class.WTF::Vector.5"* %12 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = lshr i64 %20, 2
  %25 = trunc i64 %24 to i32
  store i32 %25, i32* %16, align 8
  %26 = icmp ne i8* %21, null
  br label %27

27:                                               ; preds = %18, %6
  %28 = phi i8* [ null, %6 ], [ %21, %18 ]
  %29 = phi i1 [ false, %6 ], [ %26, %18 ]
  %30 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %2, i64 0, i32 6, i32 0, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 1, i32 6, i32 0, i32 0, i32 2
  store i32 %31, i32* %32, align 4
  %33 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %2, i64 0, i32 6, i32 0, i32 0, i32 0
  %34 = load float*, float** %33, align 8
  %35 = icmp ne float* %34, null
  %36 = and i1 %29, %35
  br i1 %36, label %37, label %42, !prof !2

37:                                               ; preds = %27
  %38 = load i32, i32* %30, align 4
  %39 = zext i32 %38 to i64
  %40 = bitcast float* %34 to i8*
  %41 = shl nuw nsw i64 %39, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %40, i64 %41, i1 false) #10
  br label %42

42:                                               ; preds = %27, %37
  %43 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 2
  %44 = bitcast %"struct.blink::ComponentTransferFunction"* %43 to i8*
  %45 = bitcast %"struct.blink::ComponentTransferFunction"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %45, i64 24, i1 false) #10
  %46 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 2, i32 6
  %47 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %3, i64 0, i32 6, i32 0, i32 0, i32 1
  %48 = load i32, i32* %47, align 8
  %49 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %46, i64 0, i32 0, i32 0, i32 0
  store float* null, float** %49, align 8
  %50 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 2, i32 6, i32 0, i32 0, i32 1
  store i32 0, i32* %50, align 8
  %51 = icmp eq i32 %48, 0
  br i1 %51, label %61, label %52

52:                                               ; preds = %42
  %53 = zext i32 %48 to i64
  %54 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64 %53) #10
  %55 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %54, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv, i64 0, i64 0)) #10
  %56 = ptrtoint i8* %55 to i64
  %57 = bitcast %"class.WTF::Vector.5"* %46 to i64*
  store atomic i64 %56, i64* %57 monotonic, align 8
  %58 = lshr i64 %54, 2
  %59 = trunc i64 %58 to i32
  store i32 %59, i32* %50, align 8
  %60 = icmp ne i8* %55, null
  br label %61

61:                                               ; preds = %52, %42
  %62 = phi i8* [ null, %42 ], [ %55, %52 ]
  %63 = phi i1 [ false, %42 ], [ %60, %52 ]
  %64 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %3, i64 0, i32 6, i32 0, i32 0, i32 2
  %65 = load i32, i32* %64, align 4
  %66 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 2, i32 6, i32 0, i32 0, i32 2
  store i32 %65, i32* %66, align 4
  %67 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %3, i64 0, i32 6, i32 0, i32 0, i32 0
  %68 = load float*, float** %67, align 8
  %69 = icmp ne float* %68, null
  %70 = and i1 %63, %69
  br i1 %70, label %71, label %76, !prof !2

71:                                               ; preds = %61
  %72 = load i32, i32* %64, align 4
  %73 = zext i32 %72 to i64
  %74 = bitcast float* %68 to i8*
  %75 = shl nuw nsw i64 %73, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %62, i8* nonnull align 4 %74, i64 %75, i1 false) #10
  br label %76

76:                                               ; preds = %61, %71
  %77 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 3
  %78 = bitcast %"struct.blink::ComponentTransferFunction"* %77 to i8*
  %79 = bitcast %"struct.blink::ComponentTransferFunction"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %79, i64 24, i1 false) #10
  %80 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 3, i32 6
  %81 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %4, i64 0, i32 6, i32 0, i32 0, i32 1
  %82 = load i32, i32* %81, align 8
  %83 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %80, i64 0, i32 0, i32 0, i32 0
  store float* null, float** %83, align 8
  %84 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 3, i32 6, i32 0, i32 0, i32 1
  store i32 0, i32* %84, align 8
  %85 = icmp eq i32 %82, 0
  br i1 %85, label %95, label %86

86:                                               ; preds = %76
  %87 = zext i32 %82 to i64
  %88 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64 %87) #10
  %89 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %88, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv, i64 0, i64 0)) #10
  %90 = ptrtoint i8* %89 to i64
  %91 = bitcast %"class.WTF::Vector.5"* %80 to i64*
  store atomic i64 %90, i64* %91 monotonic, align 8
  %92 = lshr i64 %88, 2
  %93 = trunc i64 %92 to i32
  store i32 %93, i32* %84, align 8
  %94 = icmp ne i8* %89, null
  br label %95

95:                                               ; preds = %86, %76
  %96 = phi i8* [ null, %76 ], [ %89, %86 ]
  %97 = phi i1 [ false, %76 ], [ %94, %86 ]
  %98 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %4, i64 0, i32 6, i32 0, i32 0, i32 2
  %99 = load i32, i32* %98, align 4
  %100 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 3, i32 6, i32 0, i32 0, i32 2
  store i32 %99, i32* %100, align 4
  %101 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %4, i64 0, i32 6, i32 0, i32 0, i32 0
  %102 = load float*, float** %101, align 8
  %103 = icmp ne float* %102, null
  %104 = and i1 %97, %103
  br i1 %104, label %105, label %110, !prof !2

105:                                              ; preds = %95
  %106 = load i32, i32* %98, align 4
  %107 = zext i32 %106 to i64
  %108 = bitcast float* %102 to i8*
  %109 = shl nuw nsw i64 %107, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %96, i8* nonnull align 4 %108, i64 %109, i1 false) #10
  br label %110

110:                                              ; preds = %95, %105
  %111 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 4
  %112 = bitcast %"struct.blink::ComponentTransferFunction"* %111 to i8*
  %113 = bitcast %"struct.blink::ComponentTransferFunction"* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %112, i8* align 8 %113, i64 24, i1 false) #10
  %114 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 4, i32 6
  %115 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %5, i64 0, i32 6, i32 0, i32 0, i32 1
  %116 = load i32, i32* %115, align 8
  %117 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %114, i64 0, i32 0, i32 0, i32 0
  store float* null, float** %117, align 8
  %118 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 4, i32 6, i32 0, i32 0, i32 1
  store i32 0, i32* %118, align 8
  %119 = icmp eq i32 %116, 0
  br i1 %119, label %129, label %120

120:                                              ; preds = %110
  %121 = zext i32 %116 to i64
  %122 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64 %121) #10
  %123 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %122, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv, i64 0, i64 0)) #10
  %124 = ptrtoint i8* %123 to i64
  %125 = bitcast %"class.WTF::Vector.5"* %114 to i64*
  store atomic i64 %124, i64* %125 monotonic, align 8
  %126 = lshr i64 %122, 2
  %127 = trunc i64 %126 to i32
  store i32 %127, i32* %118, align 8
  %128 = icmp ne i8* %123, null
  br label %129

129:                                              ; preds = %120, %110
  %130 = phi i8* [ null, %110 ], [ %123, %120 ]
  %131 = phi i1 [ false, %110 ], [ %128, %120 ]
  %132 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %5, i64 0, i32 6, i32 0, i32 0, i32 2
  %133 = load i32, i32* %132, align 4
  %134 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 4, i32 6, i32 0, i32 0, i32 2
  store i32 %133, i32* %134, align 4
  %135 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %5, i64 0, i32 6, i32 0, i32 0, i32 0
  %136 = load float*, float** %135, align 8
  %137 = icmp ne float* %136, null
  %138 = and i1 %131, %137
  br i1 %138, label %139, label %144, !prof !2

139:                                              ; preds = %129
  %140 = load i32, i32* %132, align 4
  %141 = zext i32 %140 to i64
  %142 = bitcast float* %136 to i8*
  %143 = shl nuw nsw i64 %141, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %130, i8* nonnull align 4 %142, i64 %143, i1 false) #10
  br label %144

144:                                              ; preds = %129, %139
  ret void
}

declare void @_ZN5blink12FilterEffectC2EPNS_6FilterE(%"class.blink::FilterEffect"*, %"class.blink::Filter"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink19FEComponentTransfer24AffectsTransparentPixelsEv(%"class.blink::FEComponentTransfer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 4, i32 0
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %21 [
    i32 5, label %17
    i32 4, label %13
    i32 2, label %4
    i32 3, label %4
  ]

4:                                                ; preds = %1, %1
  %5 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 4, i32 6, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %21, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 4, i32 6
  %10 = tail call dereferenceable(4) float* @_ZNK3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.5"* %9, i32 0) #10
  %11 = load float, float* %10, align 4
  %12 = fpext float %11 to double
  br label %21

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 4, i32 2
  %15 = load float, float* %14, align 8
  %16 = fpext float %15 to double
  br label %21

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 4, i32 5
  %19 = load float, float* %18, align 4
  %20 = fpext float %19 to double
  br label %21

21:                                               ; preds = %4, %8, %1, %17, %13
  %22 = phi double [ 0.000000e+00, %1 ], [ %12, %8 ], [ 0.000000e+00, %4 ], [ %16, %13 ], [ %20, %17 ]
  %23 = fmul double %22, 2.550000e+02
  %24 = fcmp oge double %23, 1.000000e+00
  ret i1 %24
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19FEComponentTransfer17CreateImageFilterEv(%class.sk_sp* noalias nocapture sret, %"class.blink::FEComponentTransfer"*) unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp.9, align 8
  %4 = alloca %class.sk_sp, align 8
  %5 = alloca %class.sk_sp, align 8
  %6 = alloca [256 x i8], align 16
  %7 = alloca [256 x i8], align 16
  %8 = alloca [256 x i8], align 16
  %9 = alloca [256 x i8], align 16
  %10 = alloca %"class.absl::optional", align 4
  %11 = alloca %class.sk_sp.9, align 8
  %12 = bitcast %class.sk_sp* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #10
  %13 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %5, i64 0, i32 0
  store %"class.cc::PaintFilter"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintFilter"*), %"class.cc::PaintFilter"** %13, align 8
  %14 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %1, i64 0, i32 0
  %15 = tail call %"class.blink::FilterEffect"* @_ZNK5blink12FilterEffect11InputEffectEj(%"class.blink::FilterEffect"* %14, i32 0) #10
  %16 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %1, i64 0, i32 0, i32 6
  %17 = load i32, i32* %16, align 4
  call void @_ZN5blink20paint_filter_builder5BuildEPNS_12FilterEffectENS_18InterpolationSpaceEb(%class.sk_sp* nonnull sret %5, %"class.blink::FilterEffect"* %15, i32 %17, i1 zeroext true) #10
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %18) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %18, i8 -86, i64 256, i1 false)
  %19 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %19) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %19, i8 -86, i64 256, i1 false)
  %20 = getelementptr inbounds [256 x i8], [256 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %20) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %20, i8 -86, i64 256, i1 false)
  %21 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %21) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %21, i8 -86, i64 256, i1 false)
  call void @_ZN5blink19FEComponentTransfer9GetValuesEPhS1_S1_S1_(%"class.blink::FEComponentTransfer"* %1, i8* nonnull %18, i8* nonnull %19, i8* nonnull %20, i8* nonnull %21)
  %22 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %22) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %22, i8* align 4 getelementptr inbounds ({ { { { i8, [3 x i8], %union.anon } } } }, { { { { i8, [3 x i8], %union.anon } } } }* @__const._ZN5blink19FEComponentTransfer17CreateImageFilterEv.crop_rect, i64 0, i32 0, i32 0, i32 0, i32 0), i64 20, i1 false)
  call void @_ZNK5blink12FilterEffect11GetCropRectEv(%"class.absl::optional"* nonnull sret %10, %"class.blink::FilterEffect"* %14) #10
  %23 = bitcast %class.sk_sp.9* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #10
  %24 = getelementptr inbounds %class.sk_sp.9, %class.sk_sp.9* %11, i64 0, i32 0
  store %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*), %class.SkColorFilter** %24, align 8
  call void @_ZN18SkTableColorFilter8MakeARGBEPKhS1_S1_S1_(%class.sk_sp.9* nonnull sret %11, i8* nonnull %21, i8* nonnull %18, i8* nonnull %19, i8* nonnull %20) #10
  %25 = load i8, i8* %22, align 4, !range !3
  %26 = icmp eq i8 %25, 0
  %27 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %28 = select i1 %26, %struct.SkRect* null, %struct.SkRect* %27
  %29 = bitcast %class.sk_sp.9* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29)
  %30 = bitcast %class.sk_sp* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30)
  %31 = call i8* @_Znwm(i64 72) #11, !noalias !4
  %32 = bitcast i8* %31 to %"class.cc::ColorFilterPaintFilter"*
  %33 = bitcast %class.sk_sp.9* %11 to i64*
  %34 = load i64, i64* %33, align 8, !noalias !4
  store %class.SkColorFilter* null, %class.SkColorFilter** %24, align 8, !noalias !4
  %35 = bitcast %class.sk_sp.9* %3 to i64*
  store i64 %34, i64* %35, align 8, !noalias !4
  %36 = bitcast %class.sk_sp* %5 to i64*
  %37 = load i64, i64* %36, align 8, !noalias !4
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %13, align 8, !noalias !4
  %38 = bitcast %class.sk_sp* %4 to i64*
  store i64 %37, i64* %38, align 8, !noalias !4
  call void @_ZN2cc22ColorFilterPaintFilterC1E5sk_spI13SkColorFilterES1_INS_11PaintFilterEEPK6SkRect(%"class.cc::ColorFilterPaintFilter"* nonnull %32, %class.sk_sp.9* nonnull %3, %class.sk_sp* nonnull %4, %struct.SkRect* %28) #10, !noalias !4
  %39 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %4, i64 0, i32 0
  %40 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %39, align 8, !noalias !4
  %41 = icmp eq %"class.cc::PaintFilter"* %40, null
  br i1 %41, label %52, label %42

42:                                               ; preds = %2
  %43 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %40, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = atomicrmw add i32* %43, i32 -1 acq_rel, !noalias !4
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %46, label %52

46:                                               ; preds = %42
  %47 = bitcast %"class.cc::PaintFilter"* %40 to %class.SkRefCntBase*
  %48 = bitcast %"class.cc::PaintFilter"* %40 to void (%class.SkRefCntBase*)***
  %49 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %48, align 8, !noalias !4
  %50 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %49, i64 2
  %51 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %50, align 8, !noalias !4
  call void %51(%class.SkRefCntBase* nonnull %47) #10, !noalias !4
  br label %52

52:                                               ; preds = %46, %42, %2
  %53 = getelementptr inbounds %class.sk_sp.9, %class.sk_sp.9* %3, i64 0, i32 0
  %54 = load %class.SkColorFilter*, %class.SkColorFilter** %53, align 8, !noalias !4
  %55 = icmp eq %class.SkColorFilter* %54, null
  br i1 %55, label %66, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %54, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = atomicrmw add i32* %57, i32 -1 acq_rel, !noalias !4
  %59 = icmp eq i32 %58, 1
  br i1 %59, label %60, label %66

60:                                               ; preds = %56
  %61 = bitcast %class.SkColorFilter* %54 to %class.SkRefCntBase*
  %62 = bitcast %class.SkColorFilter* %54 to void (%class.SkRefCntBase*)***
  %63 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %62, align 8, !noalias !4
  %64 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %63, i64 2
  %65 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %64, align 8, !noalias !4
  call void %65(%class.SkRefCntBase* nonnull %61) #10, !noalias !4
  br label %66

66:                                               ; preds = %60, %56, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  %67 = bitcast %class.sk_sp* %0 to i8**
  store i8* %31, i8** %67, align 8
  %68 = load %class.SkColorFilter*, %class.SkColorFilter** %24, align 8
  %69 = icmp eq %class.SkColorFilter* %68, null
  br i1 %69, label %80, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %68, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = atomicrmw add i32* %71, i32 -1 acq_rel
  %73 = icmp eq i32 %72, 1
  br i1 %73, label %74, label %80

74:                                               ; preds = %70
  %75 = bitcast %class.SkColorFilter* %68 to %class.SkRefCntBase*
  %76 = bitcast %class.SkColorFilter* %68 to void (%class.SkRefCntBase*)***
  %77 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %76, align 8
  %78 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %77, i64 2
  %79 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %78, align 8
  call void %79(%class.SkRefCntBase* nonnull %75) #10
  br label %80

80:                                               ; preds = %66, %70, %74
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #10
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %22) #10
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %21) #10
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %20) #10
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %19) #10
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %18) #10
  %81 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %13, align 8
  %82 = icmp eq %"class.cc::PaintFilter"* %81, null
  br i1 %82, label %93, label %83

83:                                               ; preds = %80
  %84 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %81, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = atomicrmw add i32* %84, i32 -1 acq_rel
  %86 = icmp eq i32 %85, 1
  br i1 %86, label %87, label %93

87:                                               ; preds = %83
  %88 = bitcast %"class.cc::PaintFilter"* %81 to %class.SkRefCntBase*
  %89 = bitcast %"class.cc::PaintFilter"* %81 to void (%class.SkRefCntBase*)***
  %90 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %89, align 8
  %91 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %90, i64 2
  %92 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %91, align 8
  call void %92(%class.SkRefCntBase* nonnull %88) #10
  br label %93

93:                                               ; preds = %80, %83, %87
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #10
  ret void
}

declare void @_ZN5blink20paint_filter_builder5BuildEPNS_12FilterEffectENS_18InterpolationSpaceEb(%class.sk_sp* sret, %"class.blink::FilterEffect"*, i32, i1 zeroext) local_unnamed_addr #1

declare %"class.blink::FilterEffect"* @_ZNK5blink12FilterEffect11InputEffectEj(%"class.blink::FilterEffect"*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19FEComponentTransfer9GetValuesEPhS1_S1_S1_(%"class.blink::FEComponentTransfer"* nocapture readonly, i8*, i8*, i8*, i8*) local_unnamed_addr #0 align 2 {
  %6 = alloca [4 x %"struct.blink::ComponentTransferFunction"], align 16
  %7 = getelementptr i8, i8* %4, i64 256
  %8 = getelementptr i8, i8* %3, i64 256
  %9 = getelementptr i8, i8* %2, i64 256
  %10 = getelementptr i8, i8* %1, i64 256
  %11 = icmp ugt i8* %8, %4
  %12 = icmp ugt i8* %7, %3
  %13 = and i1 %11, %12
  %14 = icmp ugt i8* %9, %4
  %15 = icmp ugt i8* %7, %2
  %16 = and i1 %14, %15
  %17 = or i1 %13, %16
  %18 = icmp ugt i8* %10, %4
  %19 = icmp ugt i8* %7, %1
  %20 = and i1 %18, %19
  %21 = or i1 %17, %20
  %22 = icmp ugt i8* %9, %3
  %23 = icmp ugt i8* %8, %2
  %24 = and i1 %22, %23
  %25 = or i1 %21, %24
  %26 = icmp ugt i8* %10, %3
  %27 = icmp ugt i8* %8, %1
  %28 = and i1 %26, %27
  %29 = or i1 %25, %28
  %30 = icmp ugt i8* %10, %2
  %31 = icmp ugt i8* %9, %1
  %32 = and i1 %30, %31
  %33 = or i1 %29, %32
  br i1 %33, label %320, label %34

34:                                               ; preds = %5
  %35 = bitcast i8* %4 to <16 x i8>*
  store <16 x i8> <i8 0, i8 1, i8 2, i8 3, i8 4, i8 5, i8 6, i8 7, i8 8, i8 9, i8 10, i8 11, i8 12, i8 13, i8 14, i8 15>, <16 x i8>* %35, align 1, !alias.scope !7, !noalias !10
  %36 = getelementptr inbounds i8, i8* %4, i64 16
  %37 = bitcast i8* %36 to <16 x i8>*
  store <16 x i8> <i8 16, i8 17, i8 18, i8 19, i8 20, i8 21, i8 22, i8 23, i8 24, i8 25, i8 26, i8 27, i8 28, i8 29, i8 30, i8 31>, <16 x i8>* %37, align 1, !alias.scope !7, !noalias !10
  %38 = bitcast i8* %3 to <16 x i8>*
  store <16 x i8> <i8 0, i8 1, i8 2, i8 3, i8 4, i8 5, i8 6, i8 7, i8 8, i8 9, i8 10, i8 11, i8 12, i8 13, i8 14, i8 15>, <16 x i8>* %38, align 1, !alias.scope !14, !noalias !15
  %39 = getelementptr inbounds i8, i8* %3, i64 16
  %40 = bitcast i8* %39 to <16 x i8>*
  store <16 x i8> <i8 16, i8 17, i8 18, i8 19, i8 20, i8 21, i8 22, i8 23, i8 24, i8 25, i8 26, i8 27, i8 28, i8 29, i8 30, i8 31>, <16 x i8>* %40, align 1, !alias.scope !14, !noalias !15
  %41 = bitcast i8* %2 to <16 x i8>*
  store <16 x i8> <i8 0, i8 1, i8 2, i8 3, i8 4, i8 5, i8 6, i8 7, i8 8, i8 9, i8 10, i8 11, i8 12, i8 13, i8 14, i8 15>, <16 x i8>* %41, align 1, !alias.scope !16, !noalias !17
  %42 = getelementptr inbounds i8, i8* %2, i64 16
  %43 = bitcast i8* %42 to <16 x i8>*
  store <16 x i8> <i8 16, i8 17, i8 18, i8 19, i8 20, i8 21, i8 22, i8 23, i8 24, i8 25, i8 26, i8 27, i8 28, i8 29, i8 30, i8 31>, <16 x i8>* %43, align 1, !alias.scope !16, !noalias !17
  %44 = bitcast i8* %1 to <16 x i8>*
  store <16 x i8> <i8 0, i8 1, i8 2, i8 3, i8 4, i8 5, i8 6, i8 7, i8 8, i8 9, i8 10, i8 11, i8 12, i8 13, i8 14, i8 15>, <16 x i8>* %44, align 1, !alias.scope !17
  %45 = getelementptr inbounds i8, i8* %1, i64 16
  %46 = bitcast i8* %45 to <16 x i8>*
  store <16 x i8> <i8 16, i8 17, i8 18, i8 19, i8 20, i8 21, i8 22, i8 23, i8 24, i8 25, i8 26, i8 27, i8 28, i8 29, i8 30, i8 31>, <16 x i8>* %46, align 1, !alias.scope !17
  %47 = getelementptr inbounds i8, i8* %4, i64 32
  %48 = bitcast i8* %47 to <16 x i8>*
  store <16 x i8> <i8 32, i8 33, i8 34, i8 35, i8 36, i8 37, i8 38, i8 39, i8 40, i8 41, i8 42, i8 43, i8 44, i8 45, i8 46, i8 47>, <16 x i8>* %48, align 1, !alias.scope !7, !noalias !10
  %49 = getelementptr inbounds i8, i8* %4, i64 48
  %50 = bitcast i8* %49 to <16 x i8>*
  store <16 x i8> <i8 48, i8 49, i8 50, i8 51, i8 52, i8 53, i8 54, i8 55, i8 56, i8 57, i8 58, i8 59, i8 60, i8 61, i8 62, i8 63>, <16 x i8>* %50, align 1, !alias.scope !7, !noalias !10
  %51 = getelementptr inbounds i8, i8* %3, i64 32
  %52 = bitcast i8* %51 to <16 x i8>*
  store <16 x i8> <i8 32, i8 33, i8 34, i8 35, i8 36, i8 37, i8 38, i8 39, i8 40, i8 41, i8 42, i8 43, i8 44, i8 45, i8 46, i8 47>, <16 x i8>* %52, align 1, !alias.scope !14, !noalias !15
  %53 = getelementptr inbounds i8, i8* %3, i64 48
  %54 = bitcast i8* %53 to <16 x i8>*
  store <16 x i8> <i8 48, i8 49, i8 50, i8 51, i8 52, i8 53, i8 54, i8 55, i8 56, i8 57, i8 58, i8 59, i8 60, i8 61, i8 62, i8 63>, <16 x i8>* %54, align 1, !alias.scope !14, !noalias !15
  %55 = getelementptr inbounds i8, i8* %2, i64 32
  %56 = bitcast i8* %55 to <16 x i8>*
  store <16 x i8> <i8 32, i8 33, i8 34, i8 35, i8 36, i8 37, i8 38, i8 39, i8 40, i8 41, i8 42, i8 43, i8 44, i8 45, i8 46, i8 47>, <16 x i8>* %56, align 1, !alias.scope !16, !noalias !17
  %57 = getelementptr inbounds i8, i8* %2, i64 48
  %58 = bitcast i8* %57 to <16 x i8>*
  store <16 x i8> <i8 48, i8 49, i8 50, i8 51, i8 52, i8 53, i8 54, i8 55, i8 56, i8 57, i8 58, i8 59, i8 60, i8 61, i8 62, i8 63>, <16 x i8>* %58, align 1, !alias.scope !16, !noalias !17
  %59 = getelementptr inbounds i8, i8* %1, i64 32
  %60 = bitcast i8* %59 to <16 x i8>*
  store <16 x i8> <i8 32, i8 33, i8 34, i8 35, i8 36, i8 37, i8 38, i8 39, i8 40, i8 41, i8 42, i8 43, i8 44, i8 45, i8 46, i8 47>, <16 x i8>* %60, align 1, !alias.scope !17
  %61 = getelementptr inbounds i8, i8* %1, i64 48
  %62 = bitcast i8* %61 to <16 x i8>*
  store <16 x i8> <i8 48, i8 49, i8 50, i8 51, i8 52, i8 53, i8 54, i8 55, i8 56, i8 57, i8 58, i8 59, i8 60, i8 61, i8 62, i8 63>, <16 x i8>* %62, align 1, !alias.scope !17
  %63 = getelementptr inbounds i8, i8* %4, i64 64
  %64 = bitcast i8* %63 to <16 x i8>*
  store <16 x i8> <i8 64, i8 65, i8 66, i8 67, i8 68, i8 69, i8 70, i8 71, i8 72, i8 73, i8 74, i8 75, i8 76, i8 77, i8 78, i8 79>, <16 x i8>* %64, align 1, !alias.scope !7, !noalias !10
  %65 = getelementptr inbounds i8, i8* %4, i64 80
  %66 = bitcast i8* %65 to <16 x i8>*
  store <16 x i8> <i8 80, i8 81, i8 82, i8 83, i8 84, i8 85, i8 86, i8 87, i8 88, i8 89, i8 90, i8 91, i8 92, i8 93, i8 94, i8 95>, <16 x i8>* %66, align 1, !alias.scope !7, !noalias !10
  %67 = getelementptr inbounds i8, i8* %3, i64 64
  %68 = bitcast i8* %67 to <16 x i8>*
  store <16 x i8> <i8 64, i8 65, i8 66, i8 67, i8 68, i8 69, i8 70, i8 71, i8 72, i8 73, i8 74, i8 75, i8 76, i8 77, i8 78, i8 79>, <16 x i8>* %68, align 1, !alias.scope !14, !noalias !15
  %69 = getelementptr inbounds i8, i8* %3, i64 80
  %70 = bitcast i8* %69 to <16 x i8>*
  store <16 x i8> <i8 80, i8 81, i8 82, i8 83, i8 84, i8 85, i8 86, i8 87, i8 88, i8 89, i8 90, i8 91, i8 92, i8 93, i8 94, i8 95>, <16 x i8>* %70, align 1, !alias.scope !14, !noalias !15
  %71 = getelementptr inbounds i8, i8* %2, i64 64
  %72 = bitcast i8* %71 to <16 x i8>*
  store <16 x i8> <i8 64, i8 65, i8 66, i8 67, i8 68, i8 69, i8 70, i8 71, i8 72, i8 73, i8 74, i8 75, i8 76, i8 77, i8 78, i8 79>, <16 x i8>* %72, align 1, !alias.scope !16, !noalias !17
  %73 = getelementptr inbounds i8, i8* %2, i64 80
  %74 = bitcast i8* %73 to <16 x i8>*
  store <16 x i8> <i8 80, i8 81, i8 82, i8 83, i8 84, i8 85, i8 86, i8 87, i8 88, i8 89, i8 90, i8 91, i8 92, i8 93, i8 94, i8 95>, <16 x i8>* %74, align 1, !alias.scope !16, !noalias !17
  %75 = getelementptr inbounds i8, i8* %1, i64 64
  %76 = bitcast i8* %75 to <16 x i8>*
  store <16 x i8> <i8 64, i8 65, i8 66, i8 67, i8 68, i8 69, i8 70, i8 71, i8 72, i8 73, i8 74, i8 75, i8 76, i8 77, i8 78, i8 79>, <16 x i8>* %76, align 1, !alias.scope !17
  %77 = getelementptr inbounds i8, i8* %1, i64 80
  %78 = bitcast i8* %77 to <16 x i8>*
  store <16 x i8> <i8 80, i8 81, i8 82, i8 83, i8 84, i8 85, i8 86, i8 87, i8 88, i8 89, i8 90, i8 91, i8 92, i8 93, i8 94, i8 95>, <16 x i8>* %78, align 1, !alias.scope !17
  %79 = getelementptr inbounds i8, i8* %4, i64 96
  %80 = bitcast i8* %79 to <16 x i8>*
  store <16 x i8> <i8 96, i8 97, i8 98, i8 99, i8 100, i8 101, i8 102, i8 103, i8 104, i8 105, i8 106, i8 107, i8 108, i8 109, i8 110, i8 111>, <16 x i8>* %80, align 1, !alias.scope !7, !noalias !10
  %81 = getelementptr inbounds i8, i8* %4, i64 112
  %82 = bitcast i8* %81 to <16 x i8>*
  store <16 x i8> <i8 112, i8 113, i8 114, i8 115, i8 116, i8 117, i8 118, i8 119, i8 120, i8 121, i8 122, i8 123, i8 124, i8 125, i8 126, i8 127>, <16 x i8>* %82, align 1, !alias.scope !7, !noalias !10
  %83 = getelementptr inbounds i8, i8* %3, i64 96
  %84 = bitcast i8* %83 to <16 x i8>*
  store <16 x i8> <i8 96, i8 97, i8 98, i8 99, i8 100, i8 101, i8 102, i8 103, i8 104, i8 105, i8 106, i8 107, i8 108, i8 109, i8 110, i8 111>, <16 x i8>* %84, align 1, !alias.scope !14, !noalias !15
  %85 = getelementptr inbounds i8, i8* %3, i64 112
  %86 = bitcast i8* %85 to <16 x i8>*
  store <16 x i8> <i8 112, i8 113, i8 114, i8 115, i8 116, i8 117, i8 118, i8 119, i8 120, i8 121, i8 122, i8 123, i8 124, i8 125, i8 126, i8 127>, <16 x i8>* %86, align 1, !alias.scope !14, !noalias !15
  %87 = getelementptr inbounds i8, i8* %2, i64 96
  %88 = bitcast i8* %87 to <16 x i8>*
  store <16 x i8> <i8 96, i8 97, i8 98, i8 99, i8 100, i8 101, i8 102, i8 103, i8 104, i8 105, i8 106, i8 107, i8 108, i8 109, i8 110, i8 111>, <16 x i8>* %88, align 1, !alias.scope !16, !noalias !17
  %89 = getelementptr inbounds i8, i8* %2, i64 112
  %90 = bitcast i8* %89 to <16 x i8>*
  store <16 x i8> <i8 112, i8 113, i8 114, i8 115, i8 116, i8 117, i8 118, i8 119, i8 120, i8 121, i8 122, i8 123, i8 124, i8 125, i8 126, i8 127>, <16 x i8>* %90, align 1, !alias.scope !16, !noalias !17
  %91 = getelementptr inbounds i8, i8* %1, i64 96
  %92 = bitcast i8* %91 to <16 x i8>*
  store <16 x i8> <i8 96, i8 97, i8 98, i8 99, i8 100, i8 101, i8 102, i8 103, i8 104, i8 105, i8 106, i8 107, i8 108, i8 109, i8 110, i8 111>, <16 x i8>* %92, align 1, !alias.scope !17
  %93 = getelementptr inbounds i8, i8* %1, i64 112
  %94 = bitcast i8* %93 to <16 x i8>*
  store <16 x i8> <i8 112, i8 113, i8 114, i8 115, i8 116, i8 117, i8 118, i8 119, i8 120, i8 121, i8 122, i8 123, i8 124, i8 125, i8 126, i8 127>, <16 x i8>* %94, align 1, !alias.scope !17
  %95 = getelementptr inbounds i8, i8* %4, i64 128
  %96 = bitcast i8* %95 to <16 x i8>*
  store <16 x i8> <i8 -128, i8 -127, i8 -126, i8 -125, i8 -124, i8 -123, i8 -122, i8 -121, i8 -120, i8 -119, i8 -118, i8 -117, i8 -116, i8 -115, i8 -114, i8 -113>, <16 x i8>* %96, align 1, !alias.scope !7, !noalias !10
  %97 = getelementptr inbounds i8, i8* %4, i64 144
  %98 = bitcast i8* %97 to <16 x i8>*
  store <16 x i8> <i8 -112, i8 -111, i8 -110, i8 -109, i8 -108, i8 -107, i8 -106, i8 -105, i8 -104, i8 -103, i8 -102, i8 -101, i8 -100, i8 -99, i8 -98, i8 -97>, <16 x i8>* %98, align 1, !alias.scope !7, !noalias !10
  %99 = getelementptr inbounds i8, i8* %3, i64 128
  %100 = bitcast i8* %99 to <16 x i8>*
  store <16 x i8> <i8 -128, i8 -127, i8 -126, i8 -125, i8 -124, i8 -123, i8 -122, i8 -121, i8 -120, i8 -119, i8 -118, i8 -117, i8 -116, i8 -115, i8 -114, i8 -113>, <16 x i8>* %100, align 1, !alias.scope !14, !noalias !15
  %101 = getelementptr inbounds i8, i8* %3, i64 144
  %102 = bitcast i8* %101 to <16 x i8>*
  store <16 x i8> <i8 -112, i8 -111, i8 -110, i8 -109, i8 -108, i8 -107, i8 -106, i8 -105, i8 -104, i8 -103, i8 -102, i8 -101, i8 -100, i8 -99, i8 -98, i8 -97>, <16 x i8>* %102, align 1, !alias.scope !14, !noalias !15
  %103 = getelementptr inbounds i8, i8* %2, i64 128
  %104 = bitcast i8* %103 to <16 x i8>*
  store <16 x i8> <i8 -128, i8 -127, i8 -126, i8 -125, i8 -124, i8 -123, i8 -122, i8 -121, i8 -120, i8 -119, i8 -118, i8 -117, i8 -116, i8 -115, i8 -114, i8 -113>, <16 x i8>* %104, align 1, !alias.scope !16, !noalias !17
  %105 = getelementptr inbounds i8, i8* %2, i64 144
  %106 = bitcast i8* %105 to <16 x i8>*
  store <16 x i8> <i8 -112, i8 -111, i8 -110, i8 -109, i8 -108, i8 -107, i8 -106, i8 -105, i8 -104, i8 -103, i8 -102, i8 -101, i8 -100, i8 -99, i8 -98, i8 -97>, <16 x i8>* %106, align 1, !alias.scope !16, !noalias !17
  %107 = getelementptr inbounds i8, i8* %1, i64 128
  %108 = bitcast i8* %107 to <16 x i8>*
  store <16 x i8> <i8 -128, i8 -127, i8 -126, i8 -125, i8 -124, i8 -123, i8 -122, i8 -121, i8 -120, i8 -119, i8 -118, i8 -117, i8 -116, i8 -115, i8 -114, i8 -113>, <16 x i8>* %108, align 1, !alias.scope !17
  %109 = getelementptr inbounds i8, i8* %1, i64 144
  %110 = bitcast i8* %109 to <16 x i8>*
  store <16 x i8> <i8 -112, i8 -111, i8 -110, i8 -109, i8 -108, i8 -107, i8 -106, i8 -105, i8 -104, i8 -103, i8 -102, i8 -101, i8 -100, i8 -99, i8 -98, i8 -97>, <16 x i8>* %110, align 1, !alias.scope !17
  %111 = getelementptr inbounds i8, i8* %4, i64 160
  %112 = bitcast i8* %111 to <16 x i8>*
  store <16 x i8> <i8 -96, i8 -95, i8 -94, i8 -93, i8 -92, i8 -91, i8 -90, i8 -89, i8 -88, i8 -87, i8 -86, i8 -85, i8 -84, i8 -83, i8 -82, i8 -81>, <16 x i8>* %112, align 1, !alias.scope !7, !noalias !10
  %113 = getelementptr inbounds i8, i8* %4, i64 176
  %114 = bitcast i8* %113 to <16 x i8>*
  store <16 x i8> <i8 -80, i8 -79, i8 -78, i8 -77, i8 -76, i8 -75, i8 -74, i8 -73, i8 -72, i8 -71, i8 -70, i8 -69, i8 -68, i8 -67, i8 -66, i8 -65>, <16 x i8>* %114, align 1, !alias.scope !7, !noalias !10
  %115 = getelementptr inbounds i8, i8* %3, i64 160
  %116 = bitcast i8* %115 to <16 x i8>*
  store <16 x i8> <i8 -96, i8 -95, i8 -94, i8 -93, i8 -92, i8 -91, i8 -90, i8 -89, i8 -88, i8 -87, i8 -86, i8 -85, i8 -84, i8 -83, i8 -82, i8 -81>, <16 x i8>* %116, align 1, !alias.scope !14, !noalias !15
  %117 = getelementptr inbounds i8, i8* %3, i64 176
  %118 = bitcast i8* %117 to <16 x i8>*
  store <16 x i8> <i8 -80, i8 -79, i8 -78, i8 -77, i8 -76, i8 -75, i8 -74, i8 -73, i8 -72, i8 -71, i8 -70, i8 -69, i8 -68, i8 -67, i8 -66, i8 -65>, <16 x i8>* %118, align 1, !alias.scope !14, !noalias !15
  %119 = getelementptr inbounds i8, i8* %2, i64 160
  %120 = bitcast i8* %119 to <16 x i8>*
  store <16 x i8> <i8 -96, i8 -95, i8 -94, i8 -93, i8 -92, i8 -91, i8 -90, i8 -89, i8 -88, i8 -87, i8 -86, i8 -85, i8 -84, i8 -83, i8 -82, i8 -81>, <16 x i8>* %120, align 1, !alias.scope !16, !noalias !17
  %121 = getelementptr inbounds i8, i8* %2, i64 176
  %122 = bitcast i8* %121 to <16 x i8>*
  store <16 x i8> <i8 -80, i8 -79, i8 -78, i8 -77, i8 -76, i8 -75, i8 -74, i8 -73, i8 -72, i8 -71, i8 -70, i8 -69, i8 -68, i8 -67, i8 -66, i8 -65>, <16 x i8>* %122, align 1, !alias.scope !16, !noalias !17
  %123 = getelementptr inbounds i8, i8* %1, i64 160
  %124 = bitcast i8* %123 to <16 x i8>*
  store <16 x i8> <i8 -96, i8 -95, i8 -94, i8 -93, i8 -92, i8 -91, i8 -90, i8 -89, i8 -88, i8 -87, i8 -86, i8 -85, i8 -84, i8 -83, i8 -82, i8 -81>, <16 x i8>* %124, align 1, !alias.scope !17
  %125 = getelementptr inbounds i8, i8* %1, i64 176
  %126 = bitcast i8* %125 to <16 x i8>*
  store <16 x i8> <i8 -80, i8 -79, i8 -78, i8 -77, i8 -76, i8 -75, i8 -74, i8 -73, i8 -72, i8 -71, i8 -70, i8 -69, i8 -68, i8 -67, i8 -66, i8 -65>, <16 x i8>* %126, align 1, !alias.scope !17
  %127 = getelementptr inbounds i8, i8* %4, i64 192
  %128 = bitcast i8* %127 to <16 x i8>*
  store <16 x i8> <i8 -64, i8 -63, i8 -62, i8 -61, i8 -60, i8 -59, i8 -58, i8 -57, i8 -56, i8 -55, i8 -54, i8 -53, i8 -52, i8 -51, i8 -50, i8 -49>, <16 x i8>* %128, align 1, !alias.scope !7, !noalias !10
  %129 = getelementptr inbounds i8, i8* %4, i64 208
  %130 = bitcast i8* %129 to <16 x i8>*
  store <16 x i8> <i8 -48, i8 -47, i8 -46, i8 -45, i8 -44, i8 -43, i8 -42, i8 -41, i8 -40, i8 -39, i8 -38, i8 -37, i8 -36, i8 -35, i8 -34, i8 -33>, <16 x i8>* %130, align 1, !alias.scope !7, !noalias !10
  %131 = getelementptr inbounds i8, i8* %3, i64 192
  %132 = bitcast i8* %131 to <16 x i8>*
  store <16 x i8> <i8 -64, i8 -63, i8 -62, i8 -61, i8 -60, i8 -59, i8 -58, i8 -57, i8 -56, i8 -55, i8 -54, i8 -53, i8 -52, i8 -51, i8 -50, i8 -49>, <16 x i8>* %132, align 1, !alias.scope !14, !noalias !15
  %133 = getelementptr inbounds i8, i8* %3, i64 208
  %134 = bitcast i8* %133 to <16 x i8>*
  store <16 x i8> <i8 -48, i8 -47, i8 -46, i8 -45, i8 -44, i8 -43, i8 -42, i8 -41, i8 -40, i8 -39, i8 -38, i8 -37, i8 -36, i8 -35, i8 -34, i8 -33>, <16 x i8>* %134, align 1, !alias.scope !14, !noalias !15
  %135 = getelementptr inbounds i8, i8* %2, i64 192
  %136 = bitcast i8* %135 to <16 x i8>*
  store <16 x i8> <i8 -64, i8 -63, i8 -62, i8 -61, i8 -60, i8 -59, i8 -58, i8 -57, i8 -56, i8 -55, i8 -54, i8 -53, i8 -52, i8 -51, i8 -50, i8 -49>, <16 x i8>* %136, align 1, !alias.scope !16, !noalias !17
  %137 = getelementptr inbounds i8, i8* %2, i64 208
  %138 = bitcast i8* %137 to <16 x i8>*
  store <16 x i8> <i8 -48, i8 -47, i8 -46, i8 -45, i8 -44, i8 -43, i8 -42, i8 -41, i8 -40, i8 -39, i8 -38, i8 -37, i8 -36, i8 -35, i8 -34, i8 -33>, <16 x i8>* %138, align 1, !alias.scope !16, !noalias !17
  %139 = getelementptr inbounds i8, i8* %1, i64 192
  %140 = bitcast i8* %139 to <16 x i8>*
  store <16 x i8> <i8 -64, i8 -63, i8 -62, i8 -61, i8 -60, i8 -59, i8 -58, i8 -57, i8 -56, i8 -55, i8 -54, i8 -53, i8 -52, i8 -51, i8 -50, i8 -49>, <16 x i8>* %140, align 1, !alias.scope !17
  %141 = getelementptr inbounds i8, i8* %1, i64 208
  %142 = bitcast i8* %141 to <16 x i8>*
  store <16 x i8> <i8 -48, i8 -47, i8 -46, i8 -45, i8 -44, i8 -43, i8 -42, i8 -41, i8 -40, i8 -39, i8 -38, i8 -37, i8 -36, i8 -35, i8 -34, i8 -33>, <16 x i8>* %142, align 1, !alias.scope !17
  %143 = getelementptr inbounds i8, i8* %4, i64 224
  %144 = bitcast i8* %143 to <16 x i8>*
  store <16 x i8> <i8 -32, i8 -31, i8 -30, i8 -29, i8 -28, i8 -27, i8 -26, i8 -25, i8 -24, i8 -23, i8 -22, i8 -21, i8 -20, i8 -19, i8 -18, i8 -17>, <16 x i8>* %144, align 1, !alias.scope !7, !noalias !10
  %145 = getelementptr inbounds i8, i8* %4, i64 240
  %146 = bitcast i8* %145 to <16 x i8>*
  store <16 x i8> <i8 -16, i8 -15, i8 -14, i8 -13, i8 -12, i8 -11, i8 -10, i8 -9, i8 -8, i8 -7, i8 -6, i8 -5, i8 -4, i8 -3, i8 -2, i8 -1>, <16 x i8>* %146, align 1, !alias.scope !7, !noalias !10
  %147 = getelementptr inbounds i8, i8* %3, i64 224
  %148 = bitcast i8* %147 to <16 x i8>*
  store <16 x i8> <i8 -32, i8 -31, i8 -30, i8 -29, i8 -28, i8 -27, i8 -26, i8 -25, i8 -24, i8 -23, i8 -22, i8 -21, i8 -20, i8 -19, i8 -18, i8 -17>, <16 x i8>* %148, align 1, !alias.scope !14, !noalias !15
  %149 = getelementptr inbounds i8, i8* %3, i64 240
  %150 = bitcast i8* %149 to <16 x i8>*
  store <16 x i8> <i8 -16, i8 -15, i8 -14, i8 -13, i8 -12, i8 -11, i8 -10, i8 -9, i8 -8, i8 -7, i8 -6, i8 -5, i8 -4, i8 -3, i8 -2, i8 -1>, <16 x i8>* %150, align 1, !alias.scope !14, !noalias !15
  %151 = getelementptr inbounds i8, i8* %2, i64 224
  %152 = bitcast i8* %151 to <16 x i8>*
  store <16 x i8> <i8 -32, i8 -31, i8 -30, i8 -29, i8 -28, i8 -27, i8 -26, i8 -25, i8 -24, i8 -23, i8 -22, i8 -21, i8 -20, i8 -19, i8 -18, i8 -17>, <16 x i8>* %152, align 1, !alias.scope !16, !noalias !17
  %153 = getelementptr inbounds i8, i8* %2, i64 240
  %154 = bitcast i8* %153 to <16 x i8>*
  store <16 x i8> <i8 -16, i8 -15, i8 -14, i8 -13, i8 -12, i8 -11, i8 -10, i8 -9, i8 -8, i8 -7, i8 -6, i8 -5, i8 -4, i8 -3, i8 -2, i8 -1>, <16 x i8>* %154, align 1, !alias.scope !16, !noalias !17
  %155 = getelementptr inbounds i8, i8* %1, i64 224
  %156 = bitcast i8* %155 to <16 x i8>*
  store <16 x i8> <i8 -32, i8 -31, i8 -30, i8 -29, i8 -28, i8 -27, i8 -26, i8 -25, i8 -24, i8 -23, i8 -22, i8 -21, i8 -20, i8 -19, i8 -18, i8 -17>, <16 x i8>* %156, align 1, !alias.scope !17
  %157 = getelementptr inbounds i8, i8* %1, i64 240
  %158 = bitcast i8* %157 to <16 x i8>*
  store <16 x i8> <i8 -16, i8 -15, i8 -14, i8 -13, i8 -12, i8 -11, i8 -10, i8 -9, i8 -8, i8 -7, i8 -6, i8 -5, i8 -4, i8 -3, i8 -2, i8 -1>, <16 x i8>* %158, align 1, !alias.scope !17
  br label %159

159:                                              ; preds = %320, %34
  %160 = bitcast [4 x %"struct.blink::ComponentTransferFunction"]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %160) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %160, i8* align 16 bitcast ([4 x %"struct.blink::ComponentTransferFunction"]* @__const._ZN5blink19FEComponentTransfer9GetValuesEPhS1_S1_S1_.transfer_function to i8*), i64 160, i1 false)
  %161 = getelementptr inbounds [4 x %"struct.blink::ComponentTransferFunction"], [4 x %"struct.blink::ComponentTransferFunction"]* %6, i64 0, i64 0
  %162 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 1
  %163 = bitcast %"struct.blink::ComponentTransferFunction"* %162 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %160, i8* align 8 %163, i64 24, i1 false) #10
  %164 = getelementptr inbounds [4 x %"struct.blink::ComponentTransferFunction"], [4 x %"struct.blink::ComponentTransferFunction"]* %6, i64 0, i64 0, i32 6
  %165 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 1, i32 6, i32 0, i32 0, i32 1
  %166 = load i32, i32* %165, align 8
  %167 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %164, i64 0, i32 0, i32 0, i32 0
  store float* null, float** %167, align 8
  %168 = getelementptr inbounds [4 x %"struct.blink::ComponentTransferFunction"], [4 x %"struct.blink::ComponentTransferFunction"]* %6, i64 0, i64 0, i32 6, i32 0, i32 0, i32 1
  store i32 0, i32* %168, align 8
  %169 = icmp eq i32 %166, 0
  br i1 %169, label %179, label %170

170:                                              ; preds = %159
  %171 = zext i32 %166 to i64
  %172 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64 %171) #10
  %173 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %172, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv, i64 0, i64 0)) #10
  %174 = ptrtoint i8* %173 to i64
  %175 = bitcast %"class.WTF::Vector.5"* %164 to i64*
  store atomic i64 %174, i64* %175 monotonic, align 8
  %176 = lshr i64 %172, 2
  %177 = trunc i64 %176 to i32
  store i32 %177, i32* %168, align 8
  %178 = icmp ne i8* %173, null
  br label %179

179:                                              ; preds = %170, %159
  %180 = phi i8* [ null, %159 ], [ %173, %170 ]
  %181 = phi i1 [ false, %159 ], [ %178, %170 ]
  %182 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 1, i32 6, i32 0, i32 0, i32 2
  %183 = load i32, i32* %182, align 4
  %184 = getelementptr inbounds [4 x %"struct.blink::ComponentTransferFunction"], [4 x %"struct.blink::ComponentTransferFunction"]* %6, i64 0, i64 0, i32 6, i32 0, i32 0, i32 2
  store i32 %183, i32* %184, align 4
  %185 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 1, i32 6, i32 0, i32 0, i32 0
  %186 = load float*, float** %185, align 8
  %187 = icmp ne float* %186, null
  %188 = and i1 %181, %187
  br i1 %188, label %189, label %193, !prof !2

189:                                              ; preds = %179
  %190 = zext i32 %183 to i64
  %191 = bitcast float* %186 to i8*
  %192 = shl nuw nsw i64 %190, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %180, i8* nonnull align 4 %191, i64 %192, i1 false) #10
  br label %193

193:                                              ; preds = %179, %189
  %194 = getelementptr inbounds [4 x %"struct.blink::ComponentTransferFunction"], [4 x %"struct.blink::ComponentTransferFunction"]* %6, i64 0, i64 1
  %195 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 2
  %196 = bitcast %"struct.blink::ComponentTransferFunction"* %194 to i8*
  %197 = bitcast %"struct.blink::ComponentTransferFunction"* %195 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %196, i8* align 8 %197, i64 24, i1 false) #10
  %198 = getelementptr inbounds [4 x %"struct.blink::ComponentTransferFunction"], [4 x %"struct.blink::ComponentTransferFunction"]* %6, i64 0, i64 1, i32 6
  %199 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 2, i32 6, i32 0, i32 0, i32 1
  %200 = load i32, i32* %199, align 8
  %201 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %198, i64 0, i32 0, i32 0, i32 0
  store float* null, float** %201, align 8
  %202 = getelementptr inbounds [4 x %"struct.blink::ComponentTransferFunction"], [4 x %"struct.blink::ComponentTransferFunction"]* %6, i64 0, i64 1, i32 6, i32 0, i32 0, i32 1
  store i32 0, i32* %202, align 8
  %203 = icmp eq i32 %200, 0
  br i1 %203, label %213, label %204

204:                                              ; preds = %193
  %205 = zext i32 %200 to i64
  %206 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64 %205) #10
  %207 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %206, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv, i64 0, i64 0)) #10
  %208 = ptrtoint i8* %207 to i64
  %209 = bitcast %"class.WTF::Vector.5"* %198 to i64*
  store atomic i64 %208, i64* %209 monotonic, align 8
  %210 = lshr i64 %206, 2
  %211 = trunc i64 %210 to i32
  store i32 %211, i32* %202, align 8
  %212 = icmp ne i8* %207, null
  br label %213

213:                                              ; preds = %204, %193
  %214 = phi i8* [ null, %193 ], [ %207, %204 ]
  %215 = phi i1 [ false, %193 ], [ %212, %204 ]
  %216 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 2, i32 6, i32 0, i32 0, i32 2
  %217 = load i32, i32* %216, align 4
  %218 = getelementptr inbounds [4 x %"struct.blink::ComponentTransferFunction"], [4 x %"struct.blink::ComponentTransferFunction"]* %6, i64 0, i64 1, i32 6, i32 0, i32 0, i32 2
  store i32 %217, i32* %218, align 4
  %219 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 2, i32 6, i32 0, i32 0, i32 0
  %220 = load float*, float** %219, align 8
  %221 = icmp ne float* %220, null
  %222 = and i1 %215, %221
  br i1 %222, label %223, label %227, !prof !2

223:                                              ; preds = %213
  %224 = zext i32 %217 to i64
  %225 = bitcast float* %220 to i8*
  %226 = shl nuw nsw i64 %224, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %214, i8* nonnull align 4 %225, i64 %226, i1 false) #10
  br label %227

227:                                              ; preds = %213, %223
  %228 = getelementptr inbounds [4 x %"struct.blink::ComponentTransferFunction"], [4 x %"struct.blink::ComponentTransferFunction"]* %6, i64 0, i64 2
  %229 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 3
  %230 = bitcast %"struct.blink::ComponentTransferFunction"* %228 to i8*
  %231 = bitcast %"struct.blink::ComponentTransferFunction"* %229 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %230, i8* align 8 %231, i64 24, i1 false) #10
  %232 = getelementptr inbounds [4 x %"struct.blink::ComponentTransferFunction"], [4 x %"struct.blink::ComponentTransferFunction"]* %6, i64 0, i64 2, i32 6
  %233 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 3, i32 6, i32 0, i32 0, i32 1
  %234 = load i32, i32* %233, align 8
  %235 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %232, i64 0, i32 0, i32 0, i32 0
  store float* null, float** %235, align 8
  %236 = getelementptr inbounds [4 x %"struct.blink::ComponentTransferFunction"], [4 x %"struct.blink::ComponentTransferFunction"]* %6, i64 0, i64 2, i32 6, i32 0, i32 0, i32 1
  store i32 0, i32* %236, align 8
  %237 = icmp eq i32 %234, 0
  br i1 %237, label %247, label %238

238:                                              ; preds = %227
  %239 = zext i32 %234 to i64
  %240 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64 %239) #10
  %241 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %240, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv, i64 0, i64 0)) #10
  %242 = ptrtoint i8* %241 to i64
  %243 = bitcast %"class.WTF::Vector.5"* %232 to i64*
  store atomic i64 %242, i64* %243 monotonic, align 8
  %244 = lshr i64 %240, 2
  %245 = trunc i64 %244 to i32
  store i32 %245, i32* %236, align 8
  %246 = icmp ne i8* %241, null
  br label %247

247:                                              ; preds = %238, %227
  %248 = phi i8* [ null, %227 ], [ %241, %238 ]
  %249 = phi i1 [ false, %227 ], [ %246, %238 ]
  %250 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 3, i32 6, i32 0, i32 0, i32 2
  %251 = load i32, i32* %250, align 4
  %252 = getelementptr inbounds [4 x %"struct.blink::ComponentTransferFunction"], [4 x %"struct.blink::ComponentTransferFunction"]* %6, i64 0, i64 2, i32 6, i32 0, i32 0, i32 2
  store i32 %251, i32* %252, align 4
  %253 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 3, i32 6, i32 0, i32 0, i32 0
  %254 = load float*, float** %253, align 8
  %255 = icmp ne float* %254, null
  %256 = and i1 %249, %255
  br i1 %256, label %257, label %261, !prof !2

257:                                              ; preds = %247
  %258 = zext i32 %251 to i64
  %259 = bitcast float* %254 to i8*
  %260 = shl nuw nsw i64 %258, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %248, i8* nonnull align 4 %259, i64 %260, i1 false) #10
  br label %261

261:                                              ; preds = %247, %257
  %262 = getelementptr inbounds [4 x %"struct.blink::ComponentTransferFunction"], [4 x %"struct.blink::ComponentTransferFunction"]* %6, i64 0, i64 3
  %263 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 4
  %264 = bitcast %"struct.blink::ComponentTransferFunction"* %262 to i8*
  %265 = bitcast %"struct.blink::ComponentTransferFunction"* %263 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %264, i8* align 8 %265, i64 24, i1 false) #10
  %266 = getelementptr inbounds [4 x %"struct.blink::ComponentTransferFunction"], [4 x %"struct.blink::ComponentTransferFunction"]* %6, i64 0, i64 3, i32 6
  %267 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 4, i32 6, i32 0, i32 0, i32 1
  %268 = load i32, i32* %267, align 8
  %269 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %266, i64 0, i32 0, i32 0, i32 0
  store float* null, float** %269, align 8
  %270 = getelementptr inbounds [4 x %"struct.blink::ComponentTransferFunction"], [4 x %"struct.blink::ComponentTransferFunction"]* %6, i64 0, i64 3, i32 6, i32 0, i32 0, i32 1
  store i32 0, i32* %270, align 8
  %271 = icmp eq i32 %268, 0
  br i1 %271, label %281, label %272

272:                                              ; preds = %261
  %273 = zext i32 %268 to i64
  %274 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64 %273) #10
  %275 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %274, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv, i64 0, i64 0)) #10
  %276 = ptrtoint i8* %275 to i64
  %277 = bitcast %"class.WTF::Vector.5"* %266 to i64*
  store atomic i64 %276, i64* %277 monotonic, align 8
  %278 = lshr i64 %274, 2
  %279 = trunc i64 %278 to i32
  store i32 %279, i32* %270, align 8
  %280 = icmp ne i8* %275, null
  br label %281

281:                                              ; preds = %272, %261
  %282 = phi i8* [ null, %261 ], [ %275, %272 ]
  %283 = phi i1 [ false, %261 ], [ %280, %272 ]
  %284 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 4, i32 6, i32 0, i32 0, i32 2
  %285 = load i32, i32* %284, align 4
  %286 = getelementptr inbounds [4 x %"struct.blink::ComponentTransferFunction"], [4 x %"struct.blink::ComponentTransferFunction"]* %6, i64 0, i64 3, i32 6, i32 0, i32 0, i32 2
  store i32 %285, i32* %286, align 4
  %287 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 4, i32 6, i32 0, i32 0, i32 0
  %288 = load float*, float** %287, align 8
  %289 = icmp ne float* %288, null
  %290 = and i1 %283, %289
  br i1 %290, label %291, label %295, !prof !2

291:                                              ; preds = %281
  %292 = zext i32 %285 to i64
  %293 = bitcast float* %288 to i8*
  %294 = shl nuw nsw i64 %292, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %282, i8* nonnull align 4 %293, i64 %294, i1 false) #10
  br label %295

295:                                              ; preds = %281, %291
  %296 = getelementptr inbounds [4 x %"struct.blink::ComponentTransferFunction"], [4 x %"struct.blink::ComponentTransferFunction"]* %6, i64 0, i64 0, i32 0
  %297 = load i32, i32* %296, align 16
  %298 = zext i32 %297 to i64
  %299 = getelementptr inbounds [6 x void (i8*, %"struct.blink::ComponentTransferFunction"*)*], [6 x void (i8*, %"struct.blink::ComponentTransferFunction"*)*]* @__const._ZN5blink19FEComponentTransfer9GetValuesEPhS1_S1_S1_.call_effect, i64 0, i64 %298
  %300 = load void (i8*, %"struct.blink::ComponentTransferFunction"*)*, void (i8*, %"struct.blink::ComponentTransferFunction"*)** %299, align 8
  call void %300(i8* %1, %"struct.blink::ComponentTransferFunction"* nonnull dereferenceable(40) %161) #10
  %301 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %194, i64 0, i32 0
  %302 = load i32, i32* %301, align 8
  %303 = zext i32 %302 to i64
  %304 = getelementptr inbounds [6 x void (i8*, %"struct.blink::ComponentTransferFunction"*)*], [6 x void (i8*, %"struct.blink::ComponentTransferFunction"*)*]* @__const._ZN5blink19FEComponentTransfer9GetValuesEPhS1_S1_S1_.call_effect, i64 0, i64 %303
  %305 = load void (i8*, %"struct.blink::ComponentTransferFunction"*)*, void (i8*, %"struct.blink::ComponentTransferFunction"*)** %304, align 8
  call void %305(i8* %2, %"struct.blink::ComponentTransferFunction"* dereferenceable(40) %194) #10
  %306 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %228, i64 0, i32 0
  %307 = load i32, i32* %306, align 16
  %308 = zext i32 %307 to i64
  %309 = getelementptr inbounds [6 x void (i8*, %"struct.blink::ComponentTransferFunction"*)*], [6 x void (i8*, %"struct.blink::ComponentTransferFunction"*)*]* @__const._ZN5blink19FEComponentTransfer9GetValuesEPhS1_S1_S1_.call_effect, i64 0, i64 %308
  %310 = load void (i8*, %"struct.blink::ComponentTransferFunction"*)*, void (i8*, %"struct.blink::ComponentTransferFunction"*)** %309, align 8
  call void %310(i8* %3, %"struct.blink::ComponentTransferFunction"* dereferenceable(40) %228) #10
  %311 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %262, i64 0, i32 0
  %312 = load i32, i32* %311, align 8
  %313 = zext i32 %312 to i64
  %314 = getelementptr inbounds [6 x void (i8*, %"struct.blink::ComponentTransferFunction"*)*], [6 x void (i8*, %"struct.blink::ComponentTransferFunction"*)*]* @__const._ZN5blink19FEComponentTransfer9GetValuesEPhS1_S1_S1_.call_effect, i64 0, i64 %313
  %315 = load void (i8*, %"struct.blink::ComponentTransferFunction"*)*, void (i8*, %"struct.blink::ComponentTransferFunction"*)** %314, align 8
  call void %315(i8* %4, %"struct.blink::ComponentTransferFunction"* dereferenceable(40) %262) #10
  %316 = getelementptr inbounds [4 x %"struct.blink::ComponentTransferFunction"], [4 x %"struct.blink::ComponentTransferFunction"]* %6, i64 0, i64 3, i32 6, i32 0, i32 0, i32 0
  %317 = load float*, float** %316, align 8
  %318 = icmp eq float* %317, null
  %319 = bitcast float* %317 to i8*
  br i1 %318, label %344, label %338, !prof !2

320:                                              ; preds = %5, %320
  %321 = phi i64 [ %335, %320 ], [ 0, %5 ]
  %322 = phi i32 [ %336, %320 ], [ 0, %5 ]
  %323 = trunc i32 %322 to i8
  %324 = getelementptr inbounds i8, i8* %4, i64 %321
  store i8 %323, i8* %324, align 1
  %325 = getelementptr inbounds i8, i8* %3, i64 %321
  store i8 %323, i8* %325, align 1
  %326 = getelementptr inbounds i8, i8* %2, i64 %321
  store i8 %323, i8* %326, align 1
  %327 = getelementptr inbounds i8, i8* %1, i64 %321
  store i8 %323, i8* %327, align 1
  %328 = or i64 %321, 1
  %329 = trunc i32 %322 to i8
  %330 = or i8 %329, 1
  %331 = getelementptr inbounds i8, i8* %4, i64 %328
  store i8 %330, i8* %331, align 1
  %332 = getelementptr inbounds i8, i8* %3, i64 %328
  store i8 %330, i8* %332, align 1
  %333 = getelementptr inbounds i8, i8* %2, i64 %328
  store i8 %330, i8* %333, align 1
  %334 = getelementptr inbounds i8, i8* %1, i64 %328
  store i8 %330, i8* %334, align 1
  %335 = add nuw nsw i64 %321, 2
  %336 = add nuw nsw i32 %322, 2
  %337 = icmp eq i64 %335, 256
  br i1 %337, label %159, label %320, !llvm.loop !18

338:                                              ; preds = %295
  %339 = getelementptr inbounds [4 x %"struct.blink::ComponentTransferFunction"], [4 x %"struct.blink::ComponentTransferFunction"]* %6, i64 0, i64 3, i32 6, i32 0, i32 0, i32 2
  %340 = load i32, i32* %339, align 4
  %341 = icmp eq i32 %340, 0
  br i1 %341, label %343, label %342, !prof !20

342:                                              ; preds = %338
  store i32 0, i32* %339, align 4
  br label %343

343:                                              ; preds = %342, %338
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %319) #10
  store float* null, float** %316, align 8
  br label %344

344:                                              ; preds = %295, %343
  %345 = getelementptr inbounds [4 x %"struct.blink::ComponentTransferFunction"], [4 x %"struct.blink::ComponentTransferFunction"]* %6, i64 0, i64 2, i32 6, i32 0, i32 0, i32 0
  %346 = load float*, float** %345, align 8
  %347 = icmp eq float* %346, null
  %348 = bitcast float* %346 to i8*
  br i1 %347, label %355, label %349, !prof !2

349:                                              ; preds = %344
  %350 = getelementptr inbounds [4 x %"struct.blink::ComponentTransferFunction"], [4 x %"struct.blink::ComponentTransferFunction"]* %6, i64 0, i64 2, i32 6, i32 0, i32 0, i32 2
  %351 = load i32, i32* %350, align 4
  %352 = icmp eq i32 %351, 0
  br i1 %352, label %354, label %353, !prof !20

353:                                              ; preds = %349
  store i32 0, i32* %350, align 4
  br label %354

354:                                              ; preds = %353, %349
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %348) #10
  store float* null, float** %345, align 8
  br label %355

355:                                              ; preds = %354, %344
  %356 = getelementptr inbounds [4 x %"struct.blink::ComponentTransferFunction"], [4 x %"struct.blink::ComponentTransferFunction"]* %6, i64 0, i64 1, i32 6, i32 0, i32 0, i32 0
  %357 = load float*, float** %356, align 8
  %358 = icmp eq float* %357, null
  %359 = bitcast float* %357 to i8*
  br i1 %358, label %366, label %360, !prof !2

360:                                              ; preds = %355
  %361 = getelementptr inbounds [4 x %"struct.blink::ComponentTransferFunction"], [4 x %"struct.blink::ComponentTransferFunction"]* %6, i64 0, i64 1, i32 6, i32 0, i32 0, i32 2
  %362 = load i32, i32* %361, align 4
  %363 = icmp eq i32 %362, 0
  br i1 %363, label %365, label %364, !prof !20

364:                                              ; preds = %360
  store i32 0, i32* %361, align 4
  br label %365

365:                                              ; preds = %364, %360
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %359) #10
  store float* null, float** %356, align 8
  br label %366

366:                                              ; preds = %365, %355
  %367 = getelementptr inbounds [4 x %"struct.blink::ComponentTransferFunction"], [4 x %"struct.blink::ComponentTransferFunction"]* %6, i64 0, i64 0, i32 6, i32 0, i32 0, i32 0
  %368 = load float*, float** %367, align 8
  %369 = icmp eq float* %368, null
  %370 = bitcast float* %368 to i8*
  br i1 %369, label %377, label %371, !prof !2

371:                                              ; preds = %366
  %372 = getelementptr inbounds [4 x %"struct.blink::ComponentTransferFunction"], [4 x %"struct.blink::ComponentTransferFunction"]* %6, i64 0, i64 0, i32 6, i32 0, i32 0, i32 2
  %373 = load i32, i32* %372, align 4
  %374 = icmp eq i32 %373, 0
  br i1 %374, label %376, label %375, !prof !20

375:                                              ; preds = %371
  store i32 0, i32* %372, align 4
  br label %376

376:                                              ; preds = %375, %371
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %370) #10
  store float* null, float** %367, align 8
  br label %377

377:                                              ; preds = %376, %366
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %160) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZNK5blink12FilterEffect11GetCropRectEv(%"class.absl::optional"* sret, %"class.blink::FilterEffect"*) local_unnamed_addr #1

declare void @_ZN18SkTableColorFilter8MakeARGBEPKhS1_S1_S1_(%class.sk_sp.9* sret, i8*, i8*, i8*, i8*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blinkL8IdentityEPhRKNS_25ComponentTransferFunctionE(i8* nocapture, %"struct.blink::ComponentTransferFunction"* nocapture dereferenceable(40)) #3 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blinkL5TableEPhRKNS_25ComponentTransferFunctionE(i8* nocapture, %"struct.blink::ComponentTransferFunction"* dereferenceable(40)) #0 {
  %3 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %1, i64 0, i32 6
  %4 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %1, i64 0, i32 6, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %40, label %7

7:                                                ; preds = %2
  %8 = add i32 %5, -1
  %9 = uitofp i32 %8 to double
  br label %10

10:                                               ; preds = %10, %7
  %11 = phi i64 [ 0, %7 ], [ %38, %10 ]
  %12 = trunc i64 %11 to i32
  %13 = uitofp i32 %12 to double
  %14 = fdiv double %13, 2.550000e+02
  %15 = fmul double %14, %9
  %16 = fptoui double %15 to i32
  %17 = tail call dereferenceable(4) float* @_ZNK3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.5"* %3, i32 %16) #10
  %18 = load float, float* %17, align 4
  %19 = fpext float %18 to double
  %20 = add i32 %16, 1
  %21 = icmp ult i32 %8, %20
  %22 = select i1 %21, i32 %8, i32 %20
  %23 = tail call dereferenceable(4) float* @_ZNK3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.5"* %3, i32 %22) #10
  %24 = load float, float* %23, align 4
  %25 = fpext float %24 to double
  %26 = uitofp i32 %16 to double
  %27 = fsub double %15, %26
  %28 = fsub double %25, %19
  %29 = fmul double %27, %28
  %30 = fadd double %29, %19
  %31 = fmul double %30, 2.550000e+02
  %32 = fcmp ult double %31, 2.550000e+02
  %33 = fcmp ole double %31, 0.000000e+00
  %34 = select i1 %33, double 0.000000e+00, double %31
  %35 = select i1 %32, double %34, double 2.550000e+02
  %36 = fptoui double %35 to i8
  %37 = getelementptr inbounds i8, i8* %0, i64 %11
  store i8 %36, i8* %37, align 1
  %38 = add nuw nsw i64 %11, 1
  %39 = icmp eq i64 %38, 256
  br i1 %39, label %40, label %10

40:                                               ; preds = %10, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blinkL8DiscreteEPhRKNS_25ComponentTransferFunctionE(i8* nocapture, %"struct.blink::ComponentTransferFunction"* dereferenceable(40)) #0 {
  %3 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %1, i64 0, i32 6
  %4 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %1, i64 0, i32 6, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %29, label %7

7:                                                ; preds = %2
  %8 = add i32 %5, -1
  br label %9

9:                                                ; preds = %9, %7
  %10 = phi i64 [ 0, %7 ], [ %27, %9 ]
  %11 = trunc i64 %10 to i32
  %12 = mul i32 %5, %11
  %13 = uitofp i32 %12 to double
  %14 = fdiv double %13, 2.550000e+02
  %15 = fptoui double %14 to i32
  %16 = icmp ult i32 %8, %15
  %17 = select i1 %16, i32 %8, i32 %15
  %18 = tail call dereferenceable(4) float* @_ZNK3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.5"* %3, i32 %17) #10
  %19 = load float, float* %18, align 4
  %20 = fmul float %19, 2.550000e+02
  %21 = fcmp ult float %20, 2.550000e+02
  %22 = fcmp ole float %20, 0.000000e+00
  %23 = select i1 %22, float 0.000000e+00, float %20
  %24 = fptoui float %23 to i8
  %25 = select i1 %21, i8 %24, i8 -1
  %26 = getelementptr inbounds i8, i8* %0, i64 %10
  store i8 %25, i8* %26, align 1
  %27 = add nuw nsw i64 %10, 1
  %28 = icmp eq i64 %27, 256
  br i1 %28, label %29, label %9

29:                                               ; preds = %9, %2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZN5blinkL6LinearEPhRKNS_25ComponentTransferFunctionE(i8* nocapture, %"struct.blink::ComponentTransferFunction"* nocapture readonly dereferenceable(40)) #4 {
  %3 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %1, i64 0, i32 1
  %4 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %1, i64 0, i32 2
  %5 = getelementptr i8, i8* %0, i64 256
  %6 = getelementptr %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %1, i64 0, i32 2
  %7 = bitcast float* %6 to i8*
  %8 = getelementptr i8, i8* %7, i64 1
  %9 = bitcast float* %4 to i8*
  %10 = icmp ugt i8* %8, %0
  %11 = icmp ugt i8* %5, %9
  %12 = and i1 %10, %11
  br i1 %12, label %21, label %13

13:                                               ; preds = %2
  %14 = load float, float* %3, align 4, !alias.scope !21
  %15 = insertelement <4 x float> undef, float %14, i32 0
  %16 = shufflevector <4 x float> %15, <4 x float> undef, <4 x i32> zeroinitializer
  %17 = load float, float* %4, align 8, !alias.scope !21
  %18 = insertelement <4 x float> undef, float %17, i32 0
  %19 = fmul <4 x float> %18, <float 2.550000e+02, float undef, float undef, float undef>
  %20 = shufflevector <4 x float> %19, <4 x float> undef, <4 x i32> zeroinitializer
  br label %23

21:                                               ; preds = %2
  %22 = bitcast float* %3 to <2 x float>*
  br label %40

23:                                               ; preds = %13, %23
  %24 = phi i64 [ %36, %23 ], [ 0, %13 ]
  %25 = phi <4 x i32> [ %37, %23 ], [ <i32 0, i32 1, i32 2, i32 3>, %13 ]
  %26 = uitofp <4 x i32> %25 to <4 x float>
  %27 = fmul <4 x float> %16, %26
  %28 = fadd <4 x float> %27, %20
  %29 = fcmp ult <4 x float> %28, <float 2.550000e+02, float 2.550000e+02, float 2.550000e+02, float 2.550000e+02>
  %30 = fcmp ole <4 x float> %28, zeroinitializer
  %31 = select <4 x i1> %30, <4 x float> zeroinitializer, <4 x float> %28
  %32 = fptoui <4 x float> %31 to <4 x i8>
  %33 = select <4 x i1> %29, <4 x i8> %32, <4 x i8> <i8 -1, i8 -1, i8 -1, i8 -1>
  %34 = getelementptr inbounds i8, i8* %0, i64 %24
  %35 = bitcast i8* %34 to <4 x i8>*
  store <4 x i8> %33, <4 x i8>* %35, align 1, !alias.scope !24, !noalias !21
  %36 = add i64 %24, 4
  %37 = add <4 x i32> %25, <i32 4, i32 4, i32 4, i32 4>
  %38 = icmp eq i64 %36, 256
  br i1 %38, label %39, label %23, !llvm.loop !26

39:                                               ; preds = %23, %40
  ret void

40:                                               ; preds = %21, %40
  %41 = phi i64 [ %56, %40 ], [ 0, %21 ]
  %42 = trunc i64 %41 to i32
  %43 = uitofp i32 %42 to float
  %44 = load <2 x float>, <2 x float>* %22, align 4
  %45 = insertelement <2 x float> <float undef, float 2.550000e+02>, float %43, i32 0
  %46 = fmul <2 x float> %44, %45
  %47 = extractelement <2 x float> %46, i32 0
  %48 = extractelement <2 x float> %46, i32 1
  %49 = fadd float %47, %48
  %50 = fcmp ult float %49, 2.550000e+02
  %51 = fcmp ole float %49, 0.000000e+00
  %52 = select i1 %51, float 0.000000e+00, float %49
  %53 = fptoui float %52 to i8
  %54 = select i1 %50, i8 %53, i8 -1
  %55 = getelementptr inbounds i8, i8* %0, i64 %41
  store i8 %54, i8* %55, align 1
  %56 = add nuw nsw i64 %41, 1
  %57 = icmp eq i64 %56, 256
  br i1 %57, label %39, label %40, !llvm.loop !27
}

; Function Attrs: nofree nounwind ssp uwtable
define internal void @_ZN5blinkL5GammaEPhRKNS_25ComponentTransferFunctionE(i8* nocapture, %"struct.blink::ComponentTransferFunction"* nocapture readonly dereferenceable(40)) #5 {
  %3 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %1, i64 0, i32 4
  %4 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %1, i64 0, i32 3
  %5 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %1, i64 0, i32 5
  br label %7

6:                                                ; preds = %7
  ret void

7:                                                ; preds = %7, %2
  %8 = phi i64 [ 0, %2 ], [ %28, %7 ]
  %9 = load float, float* %3, align 8
  %10 = fpext float %9 to double
  %11 = load float, float* %4, align 4
  %12 = fpext float %11 to double
  %13 = trunc i64 %8 to i32
  %14 = uitofp i32 %13 to double
  %15 = fdiv double %14, 2.550000e+02
  %16 = tail call double @pow(double %15, double %10) #10
  %17 = fmul double %16, %12
  %18 = load float, float* %5, align 4
  %19 = fpext float %18 to double
  %20 = fadd double %17, %19
  %21 = fmul double %20, 2.550000e+02
  %22 = fcmp ult double %21, 2.550000e+02
  %23 = fcmp ole double %21, 0.000000e+00
  %24 = select i1 %23, double 0.000000e+00, double %21
  %25 = select i1 %22, double %24, double 2.550000e+02
  %26 = fptoui double %25 to i8
  %27 = getelementptr inbounds i8, i8* %0, i64 %8
  store i8 %26, i8* %27, align 1
  %28 = add nuw nsw i64 %8, 1
  %29 = icmp eq i64 %28, 256
  br i1 %29, label %6, label %7
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(48) %"class.WTF::TextStream"* @_ZNK5blink19FEComponentTransfer22ExternalRepresentationERN3WTF10TextStreamEi(%"class.blink::FEComponentTransfer"*, %"class.WTF::TextStream"* returned dereferenceable(48), i32) unnamed_addr #0 align 2 {
  tail call void @_ZN3WTF11WriteIndentERNS_10TextStreamEi(%"class.WTF::TextStream"* dereferenceable(48) %1, i32 %2) #10
  %4 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  %5 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 0
  %6 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZNK5blink12FilterEffect22ExternalRepresentationERN3WTF10TextStreamEi(%"class.blink::FilterEffect"* %5, %"class.WTF::TextStream"* dereferenceable(48) %1, i32 0) #10
  %7 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0)) #10
  %8 = add nsw i32 %2, 2
  tail call void @_ZN3WTF11WriteIndentERNS_10TextStreamEi(%"class.WTF::TextStream"* dereferenceable(48) %1, i32 %8) #10
  %9 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0)) #10
  %10 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 1
  %11 = tail call fastcc dereferenceable(48) %"class.WTF::TextStream"* @_ZN5blinklsERN3WTF10TextStreamERKNS_25ComponentTransferFunctionE(%"class.WTF::TextStream"* dereferenceable(48) %9, %"struct.blink::ComponentTransferFunction"* dereferenceable(40) %10)
  %12 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %11, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0)) #10
  tail call void @_ZN3WTF11WriteIndentERNS_10TextStreamEi(%"class.WTF::TextStream"* dereferenceable(48) %1, i32 %8) #10
  %13 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0)) #10
  %14 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 2
  %15 = tail call fastcc dereferenceable(48) %"class.WTF::TextStream"* @_ZN5blinklsERN3WTF10TextStreamERKNS_25ComponentTransferFunctionE(%"class.WTF::TextStream"* dereferenceable(48) %13, %"struct.blink::ComponentTransferFunction"* dereferenceable(40) %14)
  %16 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %15, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0)) #10
  tail call void @_ZN3WTF11WriteIndentERNS_10TextStreamEi(%"class.WTF::TextStream"* dereferenceable(48) %1, i32 %8) #10
  %17 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0)) #10
  %18 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 3
  %19 = tail call fastcc dereferenceable(48) %"class.WTF::TextStream"* @_ZN5blinklsERN3WTF10TextStreamERKNS_25ComponentTransferFunctionE(%"class.WTF::TextStream"* dereferenceable(48) %17, %"struct.blink::ComponentTransferFunction"* dereferenceable(40) %18)
  %20 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %19, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0)) #10
  tail call void @_ZN3WTF11WriteIndentERNS_10TextStreamEi(%"class.WTF::TextStream"* dereferenceable(48) %1, i32 %8) #10
  %21 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0)) #10
  %22 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 4
  %23 = tail call fastcc dereferenceable(48) %"class.WTF::TextStream"* @_ZN5blinklsERN3WTF10TextStreamERKNS_25ComponentTransferFunctionE(%"class.WTF::TextStream"* dereferenceable(48) %21, %"struct.blink::ComponentTransferFunction"* dereferenceable(40) %22)
  %24 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %23, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i64 0, i64 0)) #10
  %25 = tail call %"class.blink::FilterEffect"* @_ZNK5blink12FilterEffect11InputEffectEj(%"class.blink::FilterEffect"* %5, i32 0) #10
  %26 = add nsw i32 %2, 1
  %27 = bitcast %"class.blink::FilterEffect"* %25 to %"class.WTF::TextStream"* (%"class.blink::FilterEffect"*, %"class.WTF::TextStream"*, i32)***
  %28 = load %"class.WTF::TextStream"* (%"class.blink::FilterEffect"*, %"class.WTF::TextStream"*, i32)**, %"class.WTF::TextStream"* (%"class.blink::FilterEffect"*, %"class.WTF::TextStream"*, i32)*** %27, align 8
  %29 = getelementptr inbounds %"class.WTF::TextStream"* (%"class.blink::FilterEffect"*, %"class.WTF::TextStream"*, i32)*, %"class.WTF::TextStream"* (%"class.blink::FilterEffect"*, %"class.WTF::TextStream"*, i32)** %28, i64 6
  %30 = load %"class.WTF::TextStream"* (%"class.blink::FilterEffect"*, %"class.WTF::TextStream"*, i32)*, %"class.WTF::TextStream"* (%"class.blink::FilterEffect"*, %"class.WTF::TextStream"*, i32)** %29, align 8
  %31 = tail call dereferenceable(48) %"class.WTF::TextStream"* %30(%"class.blink::FilterEffect"* %25, %"class.WTF::TextStream"* dereferenceable(48) %1, i32 %26) #10
  ret %"class.WTF::TextStream"* %1
}

declare void @_ZN3WTF11WriteIndentERNS_10TextStreamEi(%"class.WTF::TextStream"* dereferenceable(48), i32) local_unnamed_addr #1

declare dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"*, i8*) local_unnamed_addr #1

declare dereferenceable(48) %"class.WTF::TextStream"* @_ZNK5blink12FilterEffect22ExternalRepresentationERN3WTF10TextStreamEi(%"class.blink::FilterEffect"*, %"class.WTF::TextStream"* dereferenceable(48), i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc dereferenceable(48) %"class.WTF::TextStream"* @_ZN5blinklsERN3WTF10TextStreamERKNS_25ComponentTransferFunctionE(%"class.WTF::TextStream"* returned dereferenceable(48), %"struct.blink::ComponentTransferFunction"* nocapture readonly dereferenceable(40)) unnamed_addr #0 {
  %3 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0)) #10
  %4 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp ult i32 %5, 6
  br i1 %6, label %7, label %12

7:                                                ; preds = %2
  %8 = sext i32 %5 to i64
  %9 = getelementptr inbounds [6 x i8*], [6 x i8*]* @switch.table._ZN5blinklsERN3WTF10TextStreamERKNS_25ComponentTransferFunctionE, i64 0, i64 %8
  %10 = load i8*, i8** %9, align 8
  %11 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %3, i8* %10) #10
  br label %12

12:                                               ; preds = %2, %7
  %13 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0)) #10
  %14 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %1, i64 0, i32 1
  %15 = load float, float* %14, align 4
  %16 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEf(%"class.WTF::TextStream"* %13, float %15) #10
  %17 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %16, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.12, i64 0, i64 0)) #10
  %18 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %1, i64 0, i32 2
  %19 = load float, float* %18, align 8
  %20 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEf(%"class.WTF::TextStream"* %17, float %19) #10
  %21 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %20, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i64 0, i64 0)) #10
  %22 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %1, i64 0, i32 3
  %23 = load float, float* %22, align 4
  %24 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEf(%"class.WTF::TextStream"* %21, float %23) #10
  %25 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %24, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i64 0, i64 0)) #10
  %26 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %1, i64 0, i32 4
  %27 = load float, float* %26, align 8
  %28 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEf(%"class.WTF::TextStream"* %25, float %27) #10
  %29 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %28, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0)) #10
  %30 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %1, i64 0, i32 5
  %31 = load float, float* %30, align 4
  %32 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEf(%"class.WTF::TextStream"* %29, float %31) #10
  %33 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %32, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i64 0, i64 0)) #10
  ret %"class.WTF::TextStream"* %0
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19FEComponentTransferD2Ev(%"class.blink::FEComponentTransfer"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink19FEComponentTransferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 4, i32 6, i32 0, i32 0, i32 0
  %4 = load float*, float** %3, align 8
  %5 = icmp eq float* %4, null
  %6 = bitcast float* %4 to i8*
  br i1 %5, label %13, label %7, !prof !2

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 4, i32 6, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11, !prof !20

11:                                               ; preds = %7
  store i32 0, i32* %8, align 4
  br label %12

12:                                               ; preds = %11, %7
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %6) #10
  store float* null, float** %3, align 8
  br label %13

13:                                               ; preds = %1, %12
  %14 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 3, i32 6, i32 0, i32 0, i32 0
  %15 = load float*, float** %14, align 8
  %16 = icmp eq float* %15, null
  %17 = bitcast float* %15 to i8*
  br i1 %16, label %24, label %18, !prof !2

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 3, i32 6, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %23, label %22, !prof !20

22:                                               ; preds = %18
  store i32 0, i32* %19, align 4
  br label %23

23:                                               ; preds = %22, %18
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %17) #10
  store float* null, float** %14, align 8
  br label %24

24:                                               ; preds = %13, %23
  %25 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 2, i32 6, i32 0, i32 0, i32 0
  %26 = load float*, float** %25, align 8
  %27 = icmp eq float* %26, null
  %28 = bitcast float* %26 to i8*
  br i1 %27, label %35, label %29, !prof !2

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 2, i32 6, i32 0, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %34, label %33, !prof !20

33:                                               ; preds = %29
  store i32 0, i32* %30, align 4
  br label %34

34:                                               ; preds = %33, %29
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %28) #10
  store float* null, float** %25, align 8
  br label %35

35:                                               ; preds = %24, %34
  %36 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 1, i32 6, i32 0, i32 0, i32 0
  %37 = load float*, float** %36, align 8
  %38 = icmp eq float* %37, null
  %39 = bitcast float* %37 to i8*
  br i1 %38, label %46, label %40, !prof !2

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 1, i32 6, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %45, label %44, !prof !20

44:                                               ; preds = %40
  store i32 0, i32* %41, align 4
  br label %45

45:                                               ; preds = %44, %40
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %39) #10
  store float* null, float** %36, align 8
  br label %46

46:                                               ; preds = %35, %45
  %47 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 0
  tail call void @_ZN5blink12FilterEffectD2Ev(%"class.blink::FilterEffect"* %47) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19FEComponentTransferD0Ev(%"class.blink::FEComponentTransfer"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink19FEComponentTransferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 4, i32 6, i32 0, i32 0, i32 0
  %4 = load float*, float** %3, align 8
  %5 = icmp eq float* %4, null
  %6 = bitcast float* %4 to i8*
  br i1 %5, label %13, label %7, !prof !2

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 4, i32 6, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11, !prof !20

11:                                               ; preds = %7
  store i32 0, i32* %8, align 4
  br label %12

12:                                               ; preds = %11, %7
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %6) #10
  store float* null, float** %3, align 8
  br label %13

13:                                               ; preds = %12, %1
  %14 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 3, i32 6, i32 0, i32 0, i32 0
  %15 = load float*, float** %14, align 8
  %16 = icmp eq float* %15, null
  %17 = bitcast float* %15 to i8*
  br i1 %16, label %24, label %18, !prof !2

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 3, i32 6, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %23, label %22, !prof !20

22:                                               ; preds = %18
  store i32 0, i32* %19, align 4
  br label %23

23:                                               ; preds = %22, %18
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %17) #10
  store float* null, float** %14, align 8
  br label %24

24:                                               ; preds = %23, %13
  %25 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 2, i32 6, i32 0, i32 0, i32 0
  %26 = load float*, float** %25, align 8
  %27 = icmp eq float* %26, null
  %28 = bitcast float* %26 to i8*
  br i1 %27, label %35, label %29, !prof !2

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 2, i32 6, i32 0, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %34, label %33, !prof !20

33:                                               ; preds = %29
  store i32 0, i32* %30, align 4
  br label %34

34:                                               ; preds = %33, %29
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %28) #10
  store float* null, float** %25, align 8
  br label %35

35:                                               ; preds = %34, %24
  %36 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 1, i32 6, i32 0, i32 0, i32 0
  %37 = load float*, float** %36, align 8
  %38 = icmp eq float* %37, null
  %39 = bitcast float* %37 to i8*
  br i1 %38, label %46, label %40, !prof !2

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 1, i32 6, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %45, label %44, !prof !20

44:                                               ; preds = %40
  store i32 0, i32* %41, align 4
  br label %45

45:                                               ; preds = %44, %40
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %39) #10
  store float* null, float** %36, align 8
  br label %46

46:                                               ; preds = %35, %45
  %47 = getelementptr inbounds %"class.blink::FEComponentTransfer", %"class.blink::FEComponentTransfer"* %0, i64 0, i32 0
  tail call void @_ZN5blink12FilterEffectD2Ev(%"class.blink::FilterEffect"* %47) #10
  ret void
}

declare void @_ZNK5blink12FilterEffect5TraceEPNS_7VisitorE(%"class.blink::FilterEffect"*, %"class.blink::Visitor"*) unnamed_addr #1

declare void @_ZN5blink12FilterEffect34CreateImageFilterWithoutValidationEv(%class.sk_sp* sret, %"class.blink::FilterEffect"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink12FilterEffect19GetFilterEffectTypeEv(%"class.blink::FilterEffect"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12FilterEffect30SetOperatingInterpolationSpaceENS_18InterpolationSpaceE(%"class.blink::FilterEffect"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 6
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink12FilterEffect36MayProduceInvalidPreMultipliedPixelsEv(%"class.blink::FilterEffect"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare { <2 x float>, <2 x float> } @_ZNK5blink12FilterEffect9MapInputsERKNS_9FloatRectE(%"class.blink::FilterEffect"*, %"class.blink::FloatRect"* dereferenceable(16)) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK5blink12FilterEffect9MapEffectERKNS_9FloatRectE(%"class.blink::FilterEffect"*, %"class.blink::FloatRect"* dereferenceable(16)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.9, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #7

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare double @pow(double, double) local_unnamed_addr #8

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEf(%"class.WTF::TextStream"*, float) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink12FilterEffectD2Ev(%"class.blink::FilterEffect"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) float* @_ZNK3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.5"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.23, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.24, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load float*, float** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds float, float* %24, i64 %25
  ret float* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

declare void @_ZN2cc22ColorFilterPaintFilterC1E5sk_spI13SkColorFilterES1_INS_11PaintFilterEEPK6SkRect(%"class.cc::ColorFilterPaintFilter"*, %class.sk_sp.9*, %class.sk_sp*, %struct.SkRect*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_Z10sk_make_spIN2cc22ColorFilterPaintFilterEJ5sk_spI13SkColorFilterES2_INS0_11PaintFilterEEP6SkRectEES2_IT_EDpOT0_: argument 0"}
!6 = distinct !{!6, !"_Z10sk_make_spIN2cc22ColorFilterPaintFilterEJ5sk_spI13SkColorFilterES2_INS0_11PaintFilterEEP6SkRectEES2_IT_EDpOT0_"}
!7 = !{!8}
!8 = distinct !{!8, !9}
!9 = distinct !{!9, !"LVerDomain"}
!10 = !{!11, !12, !13}
!11 = distinct !{!11, !9}
!12 = distinct !{!12, !9}
!13 = distinct !{!13, !9}
!14 = !{!11}
!15 = !{!12, !13}
!16 = !{!12}
!17 = !{!13}
!18 = distinct !{!18, !19}
!19 = !{!"llvm.loop.isvectorized", i32 1}
!20 = !{!"branch_weights", i32 1, i32 2000}
!21 = !{!22}
!22 = distinct !{!22, !23}
!23 = distinct !{!23, !"LVerDomain"}
!24 = !{!25}
!25 = distinct !{!25, !23}
!26 = distinct !{!26, !19}
!27 = distinct !{!27, !19}
