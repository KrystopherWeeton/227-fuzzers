; ModuleID = '../../third_party/pdfium/third_party/lcms/src/cmsopt.c'
source_filename = "../../third_party/pdfium/third_party/lcms/src/cmsopt.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct._cmsOptimizationPluginChunkType = type { %struct._cmsOptimizationCollection_st* }
%struct._cmsOptimizationCollection_st = type { i32 (%struct._cmsPipeline_struct**, i32, i32*, i32*, i32*)*, %struct._cmsOptimizationCollection_st* }
%struct._cmsPipeline_struct = type { %struct._cmsStage_struct*, i32, i32, i8*, void (i16*, i16*, i8*)*, void (float*, float*, i8*)*, void (%struct._cmsContext_struct*, i8*)*, i8* (%struct._cmsContext_struct*, i8*)*, %struct._cmsContext_struct*, i32 }
%struct._cmsStage_struct = type { %struct._cmsContext_struct*, i32, i32, i32, i32, void (float*, float*, %struct._cmsStage_struct*)*, i8* (%struct._cmsStage_struct*)*, void (%struct._cmsStage_struct*)*, i8*, %struct._cmsStage_struct* }
%struct._cmsContext_struct = type { %struct._cmsContext_struct*, %struct._cmsSubAllocator*, [15 x i8*], %struct._cmsMemPluginChunkType }
%struct._cmsSubAllocator = type { %struct._cmsContext_struct*, %struct._cmsSubAllocator_chunk_st* }
%struct._cmsSubAllocator_chunk_st = type { i8*, i32, i32, %struct._cmsSubAllocator_chunk_st* }
%struct._cmsMemPluginChunkType = type { i8* (%struct._cmsContext_struct*, i32)*, i8* (%struct._cmsContext_struct*, i32)*, void (%struct._cmsContext_struct*, i8*)*, i8* (%struct._cmsContext_struct*, i8*, i32)*, i8* (%struct._cmsContext_struct*, i32, i32)*, i8* (%struct._cmsContext_struct*, i8*, i32)* }
%struct._cmsPluginBaseStruct = type { i32, i32, i32, %struct._cmsPluginBaseStruct* }
%struct.cmsMAT3 = type { [3 x %struct.cmsVEC3] }
%struct.cmsVEC3 = type { [3 x double] }
%struct._cms_curve_struct = type { %struct._cms_interp_struc*, i32, %struct.cmsCurveSegment*, %struct._cms_interp_struc**, double (i32, double*, double)**, i32, i16* }
%struct._cms_interp_struc = type { %struct._cmsContext_struct*, i32, i32, i32, [8 x i32], [8 x i32], [8 x i32], i8*, %union.cmsInterpFunction }
%union.cmsInterpFunction = type { void (i16*, i16*, %struct._cms_interp_struc*)* }
%struct.cmsCurveSegment = type { float, float, i32, [10 x double], i32, float* }
%struct._cmsStageCLutData = type { %union.anon, %struct._cms_interp_struc*, i32, i32 }
%union.anon = type { i16* }
%struct._cmsStageToneCurvesData = type { i32, %struct._cms_curve_struct** }
%struct.Prelin16Data = type { %struct._cmsContext_struct*, i32, i32, [8 x void (i16*, i16*, %struct._cms_interp_struc*)*], [8 x %struct._cms_interp_struc*], void (i16*, i16*, %struct._cms_interp_struc*)*, %struct._cms_interp_struc*, void (i16*, i16*, %struct._cms_interp_struc*)**, %struct._cms_interp_struc** }
%struct.Curves16Data = type { %struct._cmsContext_struct*, i32, i32, i16** }

@_cmsOptimizationPluginChunk = hidden local_unnamed_addr global %struct._cmsOptimizationPluginChunkType zeroinitializer, align 8
@_cmsAllocOptimizationPluginChunk.OptimizationPluginChunkType = internal global %struct._cmsOptimizationPluginChunkType zeroinitializer, align 8
@DefaultOptimization = internal global [4 x %struct._cmsOptimizationCollection_st] [%struct._cmsOptimizationCollection_st { i32 (%struct._cmsPipeline_struct**, i32, i32*, i32*, i32*)* @OptimizeByJoiningCurves, %struct._cmsOptimizationCollection_st* bitcast (i8* getelementptr (i8, i8* bitcast ([4 x %struct._cmsOptimizationCollection_st]* @DefaultOptimization to i8*), i64 16) to %struct._cmsOptimizationCollection_st*) }, %struct._cmsOptimizationCollection_st { i32 (%struct._cmsPipeline_struct**, i32, i32*, i32*, i32*)* @OptimizeMatrixShaper, %struct._cmsOptimizationCollection_st* bitcast (i8* getelementptr (i8, i8* bitcast ([4 x %struct._cmsOptimizationCollection_st]* @DefaultOptimization to i8*), i64 32) to %struct._cmsOptimizationCollection_st*) }, %struct._cmsOptimizationCollection_st { i32 (%struct._cmsPipeline_struct**, i32, i32*, i32*, i32*)* @OptimizeByComputingLinearization, %struct._cmsOptimizationCollection_st* bitcast (i8* getelementptr (i8, i8* bitcast ([4 x %struct._cmsOptimizationCollection_st]* @DefaultOptimization to i8*), i64 48) to %struct._cmsOptimizationCollection_st*) }, %struct._cmsOptimizationCollection_st { i32 (%struct._cmsPipeline_struct**, i32, i32*, i32*, i32*)* @OptimizeByResampling, %struct._cmsOptimizationCollection_st* null }], align 16
@.str = private unnamed_addr constant [48 x i8] c"(internal) Attempt to PatchLUT on non-lut stage\00", align 1
@.str.1 = private unnamed_addr constant [53 x i8] c"(internal) %d Channels are not supported on PatchLUT\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_cmsAllocOptimizationPluginChunk(%struct._cmsContext_struct* nocapture, %struct._cmsContext_struct* readonly) local_unnamed_addr #0 {
  %3 = alloca %struct._cmsOptimizationPluginChunkType, align 8
  %4 = icmp eq %struct._cmsContext_struct* %1, null
  br i1 %4, label %48, label %5

5:                                                ; preds = %2
  %6 = bitcast %struct._cmsOptimizationPluginChunkType* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #5
  %7 = bitcast %struct._cmsOptimizationPluginChunkType* %3 to i64*
  store i64 0, i64* %7, align 8
  %8 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %1, i64 0, i32 2, i64 12
  %9 = bitcast i8** %8 to %struct._cmsOptimizationPluginChunkType**
  %10 = load %struct._cmsOptimizationPluginChunkType*, %struct._cmsOptimizationPluginChunkType** %9, align 8
  %11 = getelementptr inbounds %struct._cmsOptimizationPluginChunkType, %struct._cmsOptimizationPluginChunkType* %10, i64 0, i32 0
  %12 = load %struct._cmsOptimizationCollection_st*, %struct._cmsOptimizationCollection_st** %11, align 8
  %13 = icmp eq %struct._cmsOptimizationCollection_st* %12, null
  %14 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %0, i64 0, i32 1
  %15 = load %struct._cmsSubAllocator*, %struct._cmsSubAllocator** %14, align 8
  br i1 %13, label %43, label %16

16:                                               ; preds = %5
  %17 = bitcast %struct._cmsOptimizationPluginChunkType* %3 to i8**
  br label %18

18:                                               ; preds = %37, %16
  %19 = phi %struct._cmsOptimizationCollection_st* [ null, %16 ], [ %38, %37 ]
  %20 = phi %struct._cmsSubAllocator* [ %15, %16 ], [ %42, %37 ]
  %21 = phi %struct._cmsOptimizationCollection_st* [ %12, %16 ], [ %40, %37 ]
  %22 = phi %struct._cmsOptimizationCollection_st* [ null, %16 ], [ %25, %37 ]
  %23 = bitcast %struct._cmsOptimizationCollection_st* %21 to i8*
  %24 = tail call i8* @_cmsSubAllocDup(%struct._cmsSubAllocator* %20, i8* nonnull %23, i32 16) #5
  %25 = bitcast i8* %24 to %struct._cmsOptimizationCollection_st*
  %26 = icmp eq i8* %24, null
  br i1 %26, label %47, label %27

27:                                               ; preds = %18
  %28 = getelementptr inbounds i8, i8* %24, i64 8
  %29 = bitcast i8* %28 to %struct._cmsOptimizationCollection_st**
  store %struct._cmsOptimizationCollection_st* null, %struct._cmsOptimizationCollection_st** %29, align 8
  %30 = icmp eq %struct._cmsOptimizationCollection_st* %22, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %struct._cmsOptimizationCollection_st, %struct._cmsOptimizationCollection_st* %22, i64 0, i32 1
  %33 = bitcast %struct._cmsOptimizationCollection_st** %32 to i8**
  store i8* %24, i8** %33, align 8
  br label %34

34:                                               ; preds = %31, %27
  %35 = icmp eq %struct._cmsOptimizationCollection_st* %19, null
  br i1 %35, label %36, label %37

36:                                               ; preds = %34
  store i8* %24, i8** %17, align 8
  br label %37

37:                                               ; preds = %36, %34
  %38 = phi %struct._cmsOptimizationCollection_st* [ %25, %36 ], [ %19, %34 ]
  %39 = getelementptr inbounds %struct._cmsOptimizationCollection_st, %struct._cmsOptimizationCollection_st* %21, i64 0, i32 1
  %40 = load %struct._cmsOptimizationCollection_st*, %struct._cmsOptimizationCollection_st** %39, align 8
  %41 = icmp eq %struct._cmsOptimizationCollection_st* %40, null
  %42 = load %struct._cmsSubAllocator*, %struct._cmsSubAllocator** %14, align 8
  br i1 %41, label %43, label %18

43:                                               ; preds = %37, %5
  %44 = phi %struct._cmsSubAllocator* [ %15, %5 ], [ %42, %37 ]
  %45 = call i8* @_cmsSubAllocDup(%struct._cmsSubAllocator* %44, i8* nonnull %6, i32 8) #5
  %46 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %0, i64 0, i32 2, i64 12
  store i8* %45, i8** %46, align 8
  br label %47

47:                                               ; preds = %18, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #5
  br label %53

48:                                               ; preds = %2
  %49 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %0, i64 0, i32 1
  %50 = load %struct._cmsSubAllocator*, %struct._cmsSubAllocator** %49, align 8
  %51 = tail call i8* @_cmsSubAllocDup(%struct._cmsSubAllocator* %50, i8* bitcast (%struct._cmsOptimizationPluginChunkType* @_cmsAllocOptimizationPluginChunk.OptimizationPluginChunkType to i8*), i32 8) #5
  %52 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %0, i64 0, i32 2, i64 12
  store i8* %51, i8** %52, align 8
  br label %53

53:                                               ; preds = %48, %47
  ret void
}

declare i8* @_cmsSubAllocDup(%struct._cmsSubAllocator*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_cmsRegisterOptimizationPlugin(%struct._cmsContext_struct*, %struct._cmsPluginBaseStruct* readonly) local_unnamed_addr #0 {
  %3 = tail call i8* @_cmsContextGetClientChunk(%struct._cmsContext_struct* %0, i32 12) #5
  %4 = icmp eq %struct._cmsPluginBaseStruct* %1, null
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = bitcast i8* %3 to %struct._cmsOptimizationCollection_st**
  store %struct._cmsOptimizationCollection_st* null, %struct._cmsOptimizationCollection_st** %6, align 8
  br label %24

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct._cmsPluginBaseStruct, %struct._cmsPluginBaseStruct* %1, i64 1
  %9 = bitcast %struct._cmsPluginBaseStruct* %8 to i32 (%struct._cmsPipeline_struct**, i32, i32*, i32*, i32*)**
  %10 = load i32 (%struct._cmsPipeline_struct**, i32, i32*, i32*, i32*)*, i32 (%struct._cmsPipeline_struct**, i32, i32*, i32*, i32*)** %9, align 8
  %11 = icmp eq i32 (%struct._cmsPipeline_struct**, i32, i32*, i32*, i32*)* %10, null
  br i1 %11, label %24, label %12

12:                                               ; preds = %7
  %13 = tail call i8* @_cmsPluginMalloc(%struct._cmsContext_struct* %0, i32 16) #5
  %14 = icmp eq i8* %13, null
  br i1 %14, label %24, label %15

15:                                               ; preds = %12
  %16 = bitcast %struct._cmsPluginBaseStruct* %8 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast i8* %13 to i64*
  store i64 %17, i64* %18, align 8
  %19 = bitcast i8* %3 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds i8, i8* %13, i64 8
  %22 = bitcast i8* %21 to i64*
  store i64 %20, i64* %22, align 8
  %23 = bitcast i8* %3 to i8**
  store i8* %13, i8** %23, align 8
  br label %24

24:                                               ; preds = %12, %7, %15, %5
  %25 = phi i32 [ 1, %5 ], [ 1, %15 ], [ 0, %7 ], [ 0, %12 ]
  ret i32 %25
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare i8* @_cmsContextGetClientChunk(%struct._cmsContext_struct*, i32) local_unnamed_addr #1

declare i8* @_cmsPluginMalloc(%struct._cmsContext_struct*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_cmsOptimizePipeline(%struct._cmsContext_struct*, %struct._cmsPipeline_struct**, i32, i32*, i32*, i32*) local_unnamed_addr #0 {
  %7 = tail call i8* @_cmsContextGetClientChunk(%struct._cmsContext_struct* %0, i32 12) #5
  %8 = load i32, i32* %5, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %1, align 8
  br i1 %10, label %15, label %12

12:                                               ; preds = %6
  %13 = tail call fastcc i32 @PreOptimize(%struct._cmsPipeline_struct* %11)
  %14 = tail call i32 @OptimizeByResampling(%struct._cmsPipeline_struct** %1, i32 %2, i32* %3, i32* %4, i32* %5)
  br label %58

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %11, i64 0, i32 0
  %17 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %16, align 8
  %18 = icmp eq %struct._cmsStage_struct* %17, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %15
  %20 = bitcast %struct._cmsPipeline_struct* %11 to i8*
  tail call void @_cmsPipelineSetOptimizationParameters(%struct._cmsPipeline_struct* %11, void (i16*, i16*, i8*)* nonnull @FastIdentity16, i8* %20, void (%struct._cmsContext_struct*, i8*)* null, i8* (%struct._cmsContext_struct*, i8*)* null) #5
  br label %58

21:                                               ; preds = %15
  %22 = tail call fastcc i32 @PreOptimize(%struct._cmsPipeline_struct* %11)
  %23 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %1, align 8
  %24 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %23, i64 0, i32 0
  %25 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %24, align 8
  %26 = icmp eq %struct._cmsStage_struct* %25, null
  br i1 %26, label %27, label %29

27:                                               ; preds = %21
  %28 = bitcast %struct._cmsPipeline_struct* %23 to i8*
  tail call void @_cmsPipelineSetOptimizationParameters(%struct._cmsPipeline_struct* %23, void (i16*, i16*, i8*)* nonnull @FastIdentity16, i8* %28, void (%struct._cmsContext_struct*, i8*)* null, i8* (%struct._cmsContext_struct*, i8*)* null) #5
  br label %58

29:                                               ; preds = %21
  %30 = load i32, i32* %5, align 4
  %31 = and i32 %30, 256
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %58

33:                                               ; preds = %29
  %34 = bitcast i8* %7 to %struct._cmsOptimizationCollection_st**
  %35 = load %struct._cmsOptimizationCollection_st*, %struct._cmsOptimizationCollection_st** %34, align 8
  %36 = icmp eq %struct._cmsOptimizationCollection_st* %35, null
  br i1 %36, label %37, label %42

37:                                               ; preds = %38, %33
  br label %48

38:                                               ; preds = %42
  %39 = getelementptr inbounds %struct._cmsOptimizationCollection_st, %struct._cmsOptimizationCollection_st* %43, i64 0, i32 1
  %40 = load %struct._cmsOptimizationCollection_st*, %struct._cmsOptimizationCollection_st** %39, align 8
  %41 = icmp eq %struct._cmsOptimizationCollection_st* %40, null
  br i1 %41, label %37, label %42

42:                                               ; preds = %33, %38
  %43 = phi %struct._cmsOptimizationCollection_st* [ %40, %38 ], [ %35, %33 ]
  %44 = getelementptr inbounds %struct._cmsOptimizationCollection_st, %struct._cmsOptimizationCollection_st* %43, i64 0, i32 0
  %45 = load i32 (%struct._cmsPipeline_struct**, i32, i32*, i32*, i32*)*, i32 (%struct._cmsPipeline_struct**, i32, i32*, i32*, i32*)** %44, align 8
  %46 = tail call i32 %45(%struct._cmsPipeline_struct** %1, i32 %2, i32* %3, i32* %4, i32* %5) #5
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %38, label %58

48:                                               ; preds = %37, %54
  %49 = phi %struct._cmsOptimizationCollection_st* [ %56, %54 ], [ getelementptr inbounds ([4 x %struct._cmsOptimizationCollection_st], [4 x %struct._cmsOptimizationCollection_st]* @DefaultOptimization, i64 0, i64 0), %37 ]
  %50 = getelementptr inbounds %struct._cmsOptimizationCollection_st, %struct._cmsOptimizationCollection_st* %49, i64 0, i32 0
  %51 = load i32 (%struct._cmsPipeline_struct**, i32, i32*, i32*, i32*)*, i32 (%struct._cmsPipeline_struct**, i32, i32*, i32*, i32*)** %50, align 8
  %52 = tail call i32 %51(%struct._cmsPipeline_struct** %1, i32 %2, i32* %3, i32* %4, i32* %5) #5
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %58

54:                                               ; preds = %48
  %55 = getelementptr inbounds %struct._cmsOptimizationCollection_st, %struct._cmsOptimizationCollection_st* %49, i64 0, i32 1
  %56 = load %struct._cmsOptimizationCollection_st*, %struct._cmsOptimizationCollection_st** %55, align 8
  %57 = icmp eq %struct._cmsOptimizationCollection_st* %56, null
  br i1 %57, label %58, label %48

58:                                               ; preds = %42, %54, %48, %29, %27, %19, %12
  %59 = phi i32 [ %14, %12 ], [ 1, %19 ], [ 1, %27 ], [ 0, %29 ], [ %22, %54 ], [ 1, %48 ], [ 1, %42 ]
  ret i32 %59
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @PreOptimize(%struct._cmsPipeline_struct* nocapture) unnamed_addr #0 {
  %2 = alloca %struct.cmsMAT3, align 8
  %3 = alloca %struct.cmsMAT3, align 8
  %4 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %0, i64 0, i32 0
  %5 = bitcast %struct.cmsMAT3* %3 to i8*
  %6 = bitcast %struct.cmsMAT3* %2 to i8*
  %7 = getelementptr inbounds %struct.cmsMAT3, %struct.cmsMAT3* %3, i64 0, i32 0, i64 0, i32 0, i64 0
  %8 = getelementptr inbounds %struct.cmsMAT3, %struct.cmsMAT3* %2, i64 0, i32 0, i64 0, i32 0, i64 0
  %9 = getelementptr inbounds %struct.cmsMAT3, %struct.cmsMAT3* %3, i64 0, i32 0, i64 0, i32 0, i64 1
  %10 = getelementptr inbounds %struct.cmsMAT3, %struct.cmsMAT3* %2, i64 0, i32 0, i64 0, i32 0, i64 1
  %11 = getelementptr inbounds %struct.cmsMAT3, %struct.cmsMAT3* %3, i64 0, i32 0, i64 0, i32 0, i64 2
  %12 = getelementptr inbounds %struct.cmsMAT3, %struct.cmsMAT3* %2, i64 0, i32 0, i64 0, i32 0, i64 2
  %13 = getelementptr inbounds %struct.cmsMAT3, %struct.cmsMAT3* %3, i64 0, i32 0, i64 1, i32 0, i64 0
  %14 = getelementptr inbounds %struct.cmsMAT3, %struct.cmsMAT3* %2, i64 0, i32 0, i64 1, i32 0, i64 0
  %15 = getelementptr inbounds %struct.cmsMAT3, %struct.cmsMAT3* %3, i64 0, i32 0, i64 1, i32 0, i64 1
  %16 = getelementptr inbounds %struct.cmsMAT3, %struct.cmsMAT3* %2, i64 0, i32 0, i64 1, i32 0, i64 1
  %17 = getelementptr inbounds %struct.cmsMAT3, %struct.cmsMAT3* %3, i64 0, i32 0, i64 1, i32 0, i64 2
  %18 = getelementptr inbounds %struct.cmsMAT3, %struct.cmsMAT3* %2, i64 0, i32 0, i64 1, i32 0, i64 2
  %19 = getelementptr inbounds %struct.cmsMAT3, %struct.cmsMAT3* %3, i64 0, i32 0, i64 2, i32 0, i64 0
  %20 = getelementptr inbounds %struct.cmsMAT3, %struct.cmsMAT3* %2, i64 0, i32 0, i64 2, i32 0, i64 0
  %21 = getelementptr inbounds %struct.cmsMAT3, %struct.cmsMAT3* %3, i64 0, i32 0, i64 2, i32 0, i64 1
  %22 = getelementptr inbounds %struct.cmsMAT3, %struct.cmsMAT3* %2, i64 0, i32 0, i64 2, i32 0, i64 1
  %23 = getelementptr inbounds %struct.cmsMAT3, %struct.cmsMAT3* %3, i64 0, i32 0, i64 2, i32 0, i64 2
  %24 = getelementptr inbounds %struct.cmsMAT3, %struct.cmsMAT3* %2, i64 0, i32 0, i64 2, i32 0, i64 2
  %25 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %0, i64 0, i32 8
  br label %26

26:                                               ; preds = %394, %1
  %27 = phi i32 [ 0, %1 ], [ 1, %394 ]
  %28 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %4, align 8
  %29 = icmp eq %struct._cmsStage_struct* %28, null
  br i1 %29, label %394, label %30

30:                                               ; preds = %26, %42
  %31 = phi %struct._cmsStage_struct* [ %45, %42 ], [ %28, %26 ]
  %32 = phi i32 [ %44, %42 ], [ 0, %26 ]
  %33 = phi %struct._cmsStage_struct** [ %43, %42 ], [ %4, %26 ]
  %34 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %31, i64 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 1768189472
  %37 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %31, i64 0, i32 9
  br i1 %36, label %38, label %42

38:                                               ; preds = %30
  %39 = bitcast %struct._cmsStage_struct** %37 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %struct._cmsStage_struct** %33 to i64*
  store i64 %40, i64* %41, align 8
  call void @cmsStageFree(%struct._cmsStage_struct* nonnull %31) #5
  br label %42

42:                                               ; preds = %38, %30
  %43 = phi %struct._cmsStage_struct** [ %33, %38 ], [ %37, %30 ]
  %44 = phi i32 [ 1, %38 ], [ %32, %30 ]
  %45 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %43, align 8
  %46 = icmp eq %struct._cmsStage_struct* %45, null
  br i1 %46, label %47, label %30

47:                                               ; preds = %42
  %48 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %4, align 8
  %49 = icmp eq %struct._cmsStage_struct* %48, null
  br i1 %49, label %394, label %50

50:                                               ; preds = %47, %76
  %51 = phi i32 [ %79, %76 ], [ 0, %47 ]
  %52 = phi %struct._cmsStage_struct** [ %78, %76 ], [ %4, %47 ]
  %53 = phi %struct._cmsStage_struct* [ %77, %76 ], [ %48, %47 ]
  %54 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %53, i64 0, i32 9
  %55 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %54, align 8
  %56 = icmp eq %struct._cmsStage_struct* %55, null
  br i1 %56, label %81, label %57

57:                                               ; preds = %50
  %58 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %53, i64 0, i32 2
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, 1815246880
  br i1 %60, label %61, label %76

61:                                               ; preds = %57
  %62 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %55, i64 0, i32 2
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 2016570400
  br i1 %64, label %65, label %76

65:                                               ; preds = %61
  %66 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %55, i64 0, i32 9
  %67 = bitcast %struct._cmsStage_struct** %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = bitcast %struct._cmsStage_struct** %54 to i64*
  store i64 %68, i64* %69, align 8
  call void @cmsStageFree(%struct._cmsStage_struct* nonnull %55) #5
  %70 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %52, align 8
  %71 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %70, i64 0, i32 9
  %72 = bitcast %struct._cmsStage_struct** %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = bitcast %struct._cmsStage_struct** %52 to i64*
  store i64 %73, i64* %74, align 8
  call void @cmsStageFree(%struct._cmsStage_struct* %70) #5
  %75 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %52, align 8
  br label %76

76:                                               ; preds = %65, %61, %57
  %77 = phi %struct._cmsStage_struct* [ %75, %65 ], [ %55, %61 ], [ %55, %57 ]
  %78 = phi %struct._cmsStage_struct** [ %52, %65 ], [ %54, %61 ], [ %54, %57 ]
  %79 = phi i32 [ 1, %65 ], [ %51, %61 ], [ %51, %57 ]
  %80 = icmp eq %struct._cmsStage_struct* %77, null
  br i1 %80, label %81, label %50

81:                                               ; preds = %50, %76
  %82 = phi i32 [ %79, %76 ], [ %51, %50 ]
  %83 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %4, align 8
  %84 = or i32 %82, %44
  %85 = icmp eq %struct._cmsStage_struct* %83, null
  br i1 %85, label %394, label %86

86:                                               ; preds = %81, %112
  %87 = phi i32 [ %115, %112 ], [ 0, %81 ]
  %88 = phi %struct._cmsStage_struct** [ %114, %112 ], [ %4, %81 ]
  %89 = phi %struct._cmsStage_struct* [ %113, %112 ], [ %83, %81 ]
  %90 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %89, i64 0, i32 9
  %91 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %90, align 8
  %92 = icmp eq %struct._cmsStage_struct* %91, null
  br i1 %92, label %117, label %93

93:                                               ; preds = %86
  %94 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %89, i64 0, i32 2
  %95 = load i32, i32* %94, align 4
  %96 = icmp eq i32 %95, 2016570400
  br i1 %96, label %97, label %112

97:                                               ; preds = %93
  %98 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %91, i64 0, i32 2
  %99 = load i32, i32* %98, align 4
  %100 = icmp eq i32 %99, 1815246880
  br i1 %100, label %101, label %112

101:                                              ; preds = %97
  %102 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %91, i64 0, i32 9
  %103 = bitcast %struct._cmsStage_struct** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %struct._cmsStage_struct** %90 to i64*
  store i64 %104, i64* %105, align 8
  call void @cmsStageFree(%struct._cmsStage_struct* nonnull %91) #5
  %106 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %88, align 8
  %107 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %106, i64 0, i32 9
  %108 = bitcast %struct._cmsStage_struct** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %struct._cmsStage_struct** %88 to i64*
  store i64 %109, i64* %110, align 8
  call void @cmsStageFree(%struct._cmsStage_struct* %106) #5
  %111 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %88, align 8
  br label %112

112:                                              ; preds = %101, %97, %93
  %113 = phi %struct._cmsStage_struct* [ %111, %101 ], [ %91, %97 ], [ %91, %93 ]
  %114 = phi %struct._cmsStage_struct** [ %88, %101 ], [ %90, %97 ], [ %90, %93 ]
  %115 = phi i32 [ 1, %101 ], [ %87, %97 ], [ %87, %93 ]
  %116 = icmp eq %struct._cmsStage_struct* %113, null
  br i1 %116, label %117, label %86

117:                                              ; preds = %86, %112
  %118 = phi i32 [ %87, %86 ], [ %115, %112 ]
  %119 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %4, align 8
  %120 = or i32 %118, %84
  %121 = icmp eq %struct._cmsStage_struct* %119, null
  br i1 %121, label %394, label %122

122:                                              ; preds = %117, %148
  %123 = phi i32 [ %151, %148 ], [ 0, %117 ]
  %124 = phi %struct._cmsStage_struct** [ %150, %148 ], [ %4, %117 ]
  %125 = phi %struct._cmsStage_struct* [ %149, %148 ], [ %119, %117 ]
  %126 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %125, i64 0, i32 9
  %127 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %126, align 8
  %128 = icmp eq %struct._cmsStage_struct* %127, null
  br i1 %128, label %153, label %129

129:                                              ; preds = %122
  %130 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %125, i64 0, i32 2
  %131 = load i32, i32* %130, align 4
  %132 = icmp eq i32 %131, 874525216
  br i1 %132, label %133, label %148

133:                                              ; preds = %129
  %134 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %127, i64 0, i32 2
  %135 = load i32, i32* %134, align 4
  %136 = icmp eq i32 %135, 840971296
  br i1 %136, label %137, label %148

137:                                              ; preds = %133
  %138 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %127, i64 0, i32 9
  %139 = bitcast %struct._cmsStage_struct** %138 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = bitcast %struct._cmsStage_struct** %126 to i64*
  store i64 %140, i64* %141, align 8
  call void @cmsStageFree(%struct._cmsStage_struct* nonnull %127) #5
  %142 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %124, align 8
  %143 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %142, i64 0, i32 9
  %144 = bitcast %struct._cmsStage_struct** %143 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast %struct._cmsStage_struct** %124 to i64*
  store i64 %145, i64* %146, align 8
  call void @cmsStageFree(%struct._cmsStage_struct* %142) #5
  %147 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %124, align 8
  br label %148

148:                                              ; preds = %137, %133, %129
  %149 = phi %struct._cmsStage_struct* [ %147, %137 ], [ %127, %133 ], [ %127, %129 ]
  %150 = phi %struct._cmsStage_struct** [ %124, %137 ], [ %126, %133 ], [ %126, %129 ]
  %151 = phi i32 [ 1, %137 ], [ %123, %133 ], [ %123, %129 ]
  %152 = icmp eq %struct._cmsStage_struct* %149, null
  br i1 %152, label %153, label %122

153:                                              ; preds = %122, %148
  %154 = phi i32 [ %151, %148 ], [ %123, %122 ]
  %155 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %4, align 8
  %156 = or i32 %154, %120
  %157 = icmp eq %struct._cmsStage_struct* %155, null
  br i1 %157, label %394, label %158

158:                                              ; preds = %153, %184
  %159 = phi i32 [ %187, %184 ], [ 0, %153 ]
  %160 = phi %struct._cmsStage_struct** [ %186, %184 ], [ %4, %153 ]
  %161 = phi %struct._cmsStage_struct* [ %185, %184 ], [ %155, %153 ]
  %162 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %161, i64 0, i32 9
  %163 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %162, align 8
  %164 = icmp eq %struct._cmsStage_struct* %163, null
  br i1 %164, label %189, label %165

165:                                              ; preds = %158
  %166 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %161, i64 0, i32 2
  %167 = load i32, i32* %166, align 4
  %168 = icmp eq i32 %167, 840971296
  br i1 %168, label %169, label %184

169:                                              ; preds = %165
  %170 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %163, i64 0, i32 2
  %171 = load i32, i32* %170, align 4
  %172 = icmp eq i32 %171, 874525216
  br i1 %172, label %173, label %184

173:                                              ; preds = %169
  %174 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %163, i64 0, i32 9
  %175 = bitcast %struct._cmsStage_struct** %174 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = bitcast %struct._cmsStage_struct** %162 to i64*
  store i64 %176, i64* %177, align 8
  call void @cmsStageFree(%struct._cmsStage_struct* nonnull %163) #5
  %178 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %160, align 8
  %179 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %178, i64 0, i32 9
  %180 = bitcast %struct._cmsStage_struct** %179 to i64*
  %181 = load i64, i64* %180, align 8
  %182 = bitcast %struct._cmsStage_struct** %160 to i64*
  store i64 %181, i64* %182, align 8
  call void @cmsStageFree(%struct._cmsStage_struct* %178) #5
  %183 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %160, align 8
  br label %184

184:                                              ; preds = %173, %169, %165
  %185 = phi %struct._cmsStage_struct* [ %183, %173 ], [ %163, %169 ], [ %163, %165 ]
  %186 = phi %struct._cmsStage_struct** [ %160, %173 ], [ %162, %169 ], [ %162, %165 ]
  %187 = phi i32 [ 1, %173 ], [ %159, %169 ], [ %159, %165 ]
  %188 = icmp eq %struct._cmsStage_struct* %185, null
  br i1 %188, label %189, label %158

189:                                              ; preds = %158, %184
  %190 = phi i32 [ %187, %184 ], [ %159, %158 ]
  %191 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %4, align 8
  %192 = or i32 %190, %156
  %193 = icmp eq %struct._cmsStage_struct* %191, null
  br i1 %193, label %394, label %194

194:                                              ; preds = %189, %220
  %195 = phi i32 [ %223, %220 ], [ 0, %189 ]
  %196 = phi %struct._cmsStage_struct** [ %222, %220 ], [ %4, %189 ]
  %197 = phi %struct._cmsStage_struct* [ %221, %220 ], [ %191, %189 ]
  %198 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %197, i64 0, i32 9
  %199 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %198, align 8
  %200 = icmp eq %struct._cmsStage_struct* %199, null
  br i1 %200, label %225, label %201

201:                                              ; preds = %194
  %202 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %197, i64 0, i32 2
  %203 = load i32, i32* %202, align 4
  %204 = icmp eq i32 %203, 1681026080
  br i1 %204, label %205, label %220

205:                                              ; preds = %201
  %206 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %199, i64 0, i32 2
  %207 = load i32, i32* %206, align 4
  %208 = icmp eq i32 %207, 1815241760
  br i1 %208, label %209, label %220

209:                                              ; preds = %205
  %210 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %199, i64 0, i32 9
  %211 = bitcast %struct._cmsStage_struct** %210 to i64*
  %212 = load i64, i64* %211, align 8
  %213 = bitcast %struct._cmsStage_struct** %198 to i64*
  store i64 %212, i64* %213, align 8
  call void @cmsStageFree(%struct._cmsStage_struct* nonnull %199) #5
  %214 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %196, align 8
  %215 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %214, i64 0, i32 9
  %216 = bitcast %struct._cmsStage_struct** %215 to i64*
  %217 = load i64, i64* %216, align 8
  %218 = bitcast %struct._cmsStage_struct** %196 to i64*
  store i64 %217, i64* %218, align 8
  call void @cmsStageFree(%struct._cmsStage_struct* %214) #5
  %219 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %196, align 8
  br label %220

220:                                              ; preds = %209, %205, %201
  %221 = phi %struct._cmsStage_struct* [ %219, %209 ], [ %199, %205 ], [ %199, %201 ]
  %222 = phi %struct._cmsStage_struct** [ %196, %209 ], [ %198, %205 ], [ %198, %201 ]
  %223 = phi i32 [ 1, %209 ], [ %195, %205 ], [ %195, %201 ]
  %224 = icmp eq %struct._cmsStage_struct* %221, null
  br i1 %224, label %225, label %194

225:                                              ; preds = %194, %220
  %226 = phi i32 [ %223, %220 ], [ %195, %194 ]
  %227 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %4, align 8
  %228 = or i32 %226, %192
  %229 = icmp eq %struct._cmsStage_struct* %227, null
  br i1 %229, label %394, label %230

230:                                              ; preds = %225, %256
  %231 = phi i32 [ %259, %256 ], [ 0, %225 ]
  %232 = phi %struct._cmsStage_struct** [ %258, %256 ], [ %4, %225 ]
  %233 = phi %struct._cmsStage_struct* [ %257, %256 ], [ %227, %225 ]
  %234 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %233, i64 0, i32 9
  %235 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %234, align 8
  %236 = icmp eq %struct._cmsStage_struct* %235, null
  br i1 %236, label %261, label %237

237:                                              ; preds = %230
  %238 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %233, i64 0, i32 2
  %239 = load i32, i32* %238, align 4
  %240 = icmp eq i32 %239, 1681029152
  br i1 %240, label %241, label %256

241:                                              ; preds = %237
  %242 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %235, i64 0, i32 2
  %243 = load i32, i32* %242, align 4
  %244 = icmp eq i32 %243, 2016568352
  br i1 %244, label %245, label %256

245:                                              ; preds = %241
  %246 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %235, i64 0, i32 9
  %247 = bitcast %struct._cmsStage_struct** %246 to i64*
  %248 = load i64, i64* %247, align 8
  %249 = bitcast %struct._cmsStage_struct** %234 to i64*
  store i64 %248, i64* %249, align 8
  call void @cmsStageFree(%struct._cmsStage_struct* nonnull %235) #5
  %250 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %232, align 8
  %251 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %250, i64 0, i32 9
  %252 = bitcast %struct._cmsStage_struct** %251 to i64*
  %253 = load i64, i64* %252, align 8
  %254 = bitcast %struct._cmsStage_struct** %232 to i64*
  store i64 %253, i64* %254, align 8
  call void @cmsStageFree(%struct._cmsStage_struct* %250) #5
  %255 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %232, align 8
  br label %256

256:                                              ; preds = %245, %241, %237
  %257 = phi %struct._cmsStage_struct* [ %255, %245 ], [ %235, %241 ], [ %235, %237 ]
  %258 = phi %struct._cmsStage_struct** [ %232, %245 ], [ %234, %241 ], [ %234, %237 ]
  %259 = phi i32 [ 1, %245 ], [ %231, %241 ], [ %231, %237 ]
  %260 = icmp eq %struct._cmsStage_struct* %257, null
  br i1 %260, label %261, label %230

261:                                              ; preds = %230, %256
  %262 = phi i32 [ %259, %256 ], [ %231, %230 ]
  %263 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %4, align 8
  %264 = or i32 %262, %228
  %265 = icmp eq %struct._cmsStage_struct* %263, null
  br i1 %265, label %394, label %266

266:                                              ; preds = %261, %389
  %267 = phi i32 [ %392, %389 ], [ 0, %261 ]
  %268 = phi %struct._cmsStage_struct** [ %391, %389 ], [ %4, %261 ]
  %269 = phi %struct._cmsStage_struct* [ %390, %389 ], [ %263, %261 ]
  %270 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %269, i64 0, i32 9
  %271 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %270, align 8
  %272 = icmp eq %struct._cmsStage_struct* %271, null
  br i1 %272, label %394, label %273

273:                                              ; preds = %266
  %274 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %269, i64 0, i32 2
  %275 = load i32, i32* %274, align 4
  %276 = icmp eq i32 %275, 1835103334
  br i1 %276, label %277, label %389

277:                                              ; preds = %273
  %278 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %271, i64 0, i32 2
  %279 = load i32, i32* %278, align 4
  %280 = icmp eq i32 %279, 1835103334
  br i1 %280, label %281, label %389

281:                                              ; preds = %277
  %282 = call i8* @cmsStageData(%struct._cmsStage_struct* nonnull %269) #5
  %283 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %270, align 8
  %284 = call i8* @cmsStageData(%struct._cmsStage_struct* %283) #5
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %5) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -1, i64 72, i1 false) #5
  %285 = getelementptr inbounds i8, i8* %282, i64 8
  %286 = bitcast i8* %285 to double**
  %287 = load double*, double** %286, align 8
  %288 = icmp eq double* %287, null
  br i1 %288, label %289, label %386

289:                                              ; preds = %281
  %290 = getelementptr inbounds i8, i8* %284, i64 8
  %291 = bitcast i8* %290 to double**
  %292 = load double*, double** %291, align 8
  %293 = icmp eq double* %292, null
  br i1 %293, label %294, label %386

294:                                              ; preds = %289
  %295 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %268, align 8
  %296 = call i32 @cmsStageInputChannels(%struct._cmsStage_struct* %295) #5
  %297 = icmp eq i32 %296, 3
  br i1 %297, label %298, label %386

298:                                              ; preds = %294
  %299 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %268, align 8
  %300 = call i32 @cmsStageOutputChannels(%struct._cmsStage_struct* %299) #5
  %301 = icmp eq i32 %300, 3
  br i1 %301, label %302, label %386

302:                                              ; preds = %298
  %303 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %270, align 8
  %304 = call i32 @cmsStageInputChannels(%struct._cmsStage_struct* %303) #5
  %305 = icmp eq i32 %304, 3
  br i1 %305, label %306, label %386

306:                                              ; preds = %302
  %307 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %270, align 8
  %308 = call i32 @cmsStageOutputChannels(%struct._cmsStage_struct* %307) #5
  %309 = icmp eq i32 %308, 3
  br i1 %309, label %310, label %386

310:                                              ; preds = %306
  %311 = bitcast i8* %284 to %struct.cmsMAT3**
  %312 = load %struct.cmsMAT3*, %struct.cmsMAT3** %311, align 8
  %313 = bitcast i8* %282 to %struct.cmsMAT3**
  %314 = load %struct.cmsMAT3*, %struct.cmsMAT3** %313, align 8
  call void @_cmsMAT3per(%struct.cmsMAT3* nonnull %3, %struct.cmsMAT3* %312, %struct.cmsMAT3* %314) #5
  %315 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %270, align 8
  %316 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %315, i64 0, i32 9
  %317 = bitcast %struct._cmsStage_struct** %316 to i64*
  %318 = load i64, i64* %317, align 8
  %319 = bitcast %struct._cmsStage_struct** %270 to i64*
  store i64 %318, i64* %319, align 8
  call void @cmsStageFree(%struct._cmsStage_struct* %315) #5
  %320 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %268, align 8
  %321 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %320, i64 0, i32 9
  %322 = bitcast %struct._cmsStage_struct** %321 to i64*
  %323 = load i64, i64* %322, align 8
  %324 = bitcast %struct._cmsStage_struct** %268 to i64*
  store i64 %323, i64* %324, align 8
  call void @cmsStageFree(%struct._cmsStage_struct* %320) #5
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %6) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -1, i64 72, i1 false) #5
  call void @_cmsMAT3identity(%struct.cmsMAT3* nonnull %2) #5
  %325 = load double, double* %7, align 8
  %326 = load double, double* %8, align 8
  %327 = fsub double %326, %325
  %328 = call double @llvm.fabs.f64(double %327) #5
  %329 = fcmp uge double %328, 0x3EE4F8B580000000
  br i1 %329, label %379, label %330

330:                                              ; preds = %310
  %331 = load double, double* %9, align 8
  %332 = load double, double* %10, align 8
  %333 = fsub double %332, %331
  %334 = call double @llvm.fabs.f64(double %333) #5
  %335 = fcmp uge double %334, 0x3EE4F8B580000000
  br i1 %335, label %379, label %336

336:                                              ; preds = %330
  %337 = load double, double* %11, align 8
  %338 = load double, double* %12, align 8
  %339 = fsub double %338, %337
  %340 = call double @llvm.fabs.f64(double %339) #5
  %341 = fcmp uge double %340, 0x3EE4F8B580000000
  br i1 %341, label %379, label %342

342:                                              ; preds = %336
  %343 = load double, double* %13, align 8
  %344 = load double, double* %14, align 8
  %345 = fsub double %344, %343
  %346 = call double @llvm.fabs.f64(double %345) #5
  %347 = fcmp uge double %346, 0x3EE4F8B580000000
  br i1 %347, label %379, label %348

348:                                              ; preds = %342
  %349 = load double, double* %15, align 8
  %350 = load double, double* %16, align 8
  %351 = fsub double %350, %349
  %352 = call double @llvm.fabs.f64(double %351) #5
  %353 = fcmp uge double %352, 0x3EE4F8B580000000
  br i1 %353, label %379, label %354

354:                                              ; preds = %348
  %355 = load double, double* %17, align 8
  %356 = load double, double* %18, align 8
  %357 = fsub double %356, %355
  %358 = call double @llvm.fabs.f64(double %357) #5
  %359 = fcmp uge double %358, 0x3EE4F8B580000000
  br i1 %359, label %379, label %360

360:                                              ; preds = %354
  %361 = load double, double* %19, align 8
  %362 = load double, double* %20, align 8
  %363 = fsub double %362, %361
  %364 = call double @llvm.fabs.f64(double %363) #5
  %365 = fcmp uge double %364, 0x3EE4F8B580000000
  br i1 %365, label %379, label %366

366:                                              ; preds = %360
  %367 = load double, double* %21, align 8
  %368 = load double, double* %22, align 8
  %369 = fsub double %368, %367
  %370 = call double @llvm.fabs.f64(double %369) #5
  %371 = fcmp uge double %370, 0x3EE4F8B580000000
  br i1 %371, label %379, label %372

372:                                              ; preds = %366
  %373 = load double, double* %23, align 8
  %374 = load double, double* %24, align 8
  %375 = fsub double %374, %373
  %376 = call double @llvm.fabs.f64(double %375) #5
  %377 = fcmp uge double %376, 0x3EE4F8B580000000
  br i1 %377, label %379, label %378

378:                                              ; preds = %372
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %6) #5
  br label %387

379:                                              ; preds = %372, %366, %360, %354, %348, %342, %336, %330, %310
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %6) #5
  %380 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %25, align 8
  %381 = call %struct._cmsStage_struct* @cmsStageAllocMatrix(%struct._cmsContext_struct* %380, i32 3, i32 3, double* nonnull %7, double* null) #5
  %382 = icmp eq %struct._cmsStage_struct* %381, null
  br i1 %382, label %386, label %383

383:                                              ; preds = %379
  %384 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %381, i64 0, i32 9
  %385 = bitcast %struct._cmsStage_struct** %384 to i64*
  store i64 %318, i64* %385, align 8
  store %struct._cmsStage_struct* %381, %struct._cmsStage_struct** %268, align 8
  br label %387

386:                                              ; preds = %379, %306, %302, %298, %294, %289, %281
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %5) #5
  br label %394

387:                                              ; preds = %383, %378
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %5) #5
  %388 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %268, align 8
  br label %389

389:                                              ; preds = %387, %277, %273
  %390 = phi %struct._cmsStage_struct* [ %388, %387 ], [ %271, %277 ], [ %271, %273 ]
  %391 = phi %struct._cmsStage_struct** [ %268, %387 ], [ %270, %277 ], [ %270, %273 ]
  %392 = phi i32 [ 1, %387 ], [ %267, %277 ], [ %267, %273 ]
  %393 = icmp eq %struct._cmsStage_struct* %390, null
  br i1 %393, label %394, label %266

394:                                              ; preds = %266, %389, %81, %117, %26, %47, %189, %153, %225, %261, %386
  %395 = phi i32 [ %264, %261 ], [ %264, %386 ], [ %228, %225 ], [ %156, %153 ], [ %192, %189 ], [ %44, %47 ], [ 0, %26 ], [ %120, %117 ], [ %84, %81 ], [ %264, %389 ], [ %264, %266 ]
  %396 = phi i32 [ 0, %261 ], [ 0, %386 ], [ 0, %225 ], [ 0, %153 ], [ 0, %189 ], [ 0, %47 ], [ 0, %26 ], [ 0, %117 ], [ 0, %81 ], [ %267, %266 ], [ %392, %389 ]
  %397 = or i32 %396, %395
  %398 = icmp eq i32 %397, 0
  br i1 %398, label %399, label %26

399:                                              ; preds = %394
  ret i32 %27
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @OptimizeByResampling(%struct._cmsPipeline_struct** nocapture, i32, i32* nocapture readonly, i32* nocapture readonly, i32* nocapture) #0 {
  %6 = alloca %struct._cmsStage_struct*, align 8
  %7 = alloca %struct._cmsStage_struct*, align 8
  %8 = bitcast %struct._cmsStage_struct** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #5
  store %struct._cmsStage_struct* null, %struct._cmsStage_struct** %6, align 8
  %9 = bitcast %struct._cmsStage_struct** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #5
  store %struct._cmsStage_struct* null, %struct._cmsStage_struct** %7, align 8
  %10 = load i32, i32* %2, align 4
  %11 = tail call i32 @_cmsFormatterIsFloat(i32 %10) #5
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %209

13:                                               ; preds = %5
  %14 = load i32, i32* %3, align 4
  %15 = tail call i32 @_cmsFormatterIsFloat(i32 %14) #5
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %209

17:                                               ; preds = %13
  %18 = load i32, i32* %2, align 4
  %19 = lshr i32 %18, 16
  %20 = and i32 %19, 31
  %21 = tail call i32 @_cmsICCcolorSpace(i32 %20) #5
  %22 = load i32, i32* %3, align 4
  %23 = lshr i32 %22, 16
  %24 = and i32 %23, 31
  %25 = tail call i32 @_cmsICCcolorSpace(i32 %24) #5
  %26 = icmp eq i32 %21, 0
  %27 = icmp eq i32 %25, 0
  %28 = or i1 %26, %27
  br i1 %28, label %209, label %29

29:                                               ; preds = %17
  %30 = load i32, i32* %4, align 4
  %31 = tail call i32 @_cmsReasonableGridpointsByColorspace(i32 %21, i32 %30) #5
  %32 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %0, align 8
  %33 = tail call i32 @cmsPipelineStageCount(%struct._cmsPipeline_struct* %32) #5
  %34 = icmp eq i32 %33, 0
  %35 = select i1 %34, i32 2, i32 %31
  %36 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %0, align 8
  %37 = tail call %struct._cmsStage_struct* @cmsPipelineGetPtrToFirstStage(%struct._cmsPipeline_struct* %36) #5
  %38 = icmp eq %struct._cmsStage_struct* %37, null
  br i1 %38, label %46, label %39

39:                                               ; preds = %29, %43
  %40 = phi %struct._cmsStage_struct* [ %44, %43 ], [ %37, %29 ]
  %41 = tail call i32 @cmsStageType(%struct._cmsStage_struct* nonnull %40) #5
  %42 = icmp eq i32 %41, 1852009504
  br i1 %42, label %209, label %43

43:                                               ; preds = %39
  %44 = tail call %struct._cmsStage_struct* @cmsStageNext(%struct._cmsStage_struct* nonnull %40) #5
  %45 = icmp eq %struct._cmsStage_struct* %44, null
  br i1 %45, label %46, label %39

46:                                               ; preds = %43, %29
  %47 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %36, i64 0, i32 8
  %48 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %47, align 8
  %49 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %36, i64 0, i32 1
  %50 = load i32, i32* %49, align 8
  %51 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %36, i64 0, i32 2
  %52 = load i32, i32* %51, align 4
  %53 = tail call %struct._cmsPipeline_struct* @cmsPipelineAlloc(%struct._cmsContext_struct* %48, i32 %50, i32 %52) #5
  %54 = icmp eq %struct._cmsPipeline_struct* %53, null
  br i1 %54, label %209, label %55

55:                                               ; preds = %46
  %56 = load i32, i32* %4, align 4
  %57 = and i32 %56, 16
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %88, label %59

59:                                               ; preds = %55
  %60 = tail call %struct._cmsStage_struct* @cmsPipelineGetPtrToFirstStage(%struct._cmsPipeline_struct* %36) #5
  %61 = icmp eq %struct._cmsStage_struct* %60, null
  br i1 %61, label %88, label %62

62:                                               ; preds = %59
  %63 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %60, i64 0, i32 1
  %64 = load i32, i32* %63, align 8
  %65 = icmp eq i32 %64, 1668707188
  br i1 %65, label %66, label %88

66:                                               ; preds = %62
  %67 = tail call %struct._cms_curve_struct** @_cmsStageGetPtrToCurveSet(%struct._cmsStage_struct* nonnull %60) #5
  %68 = icmp eq %struct._cms_curve_struct** %67, null
  br i1 %68, label %83, label %69

69:                                               ; preds = %66
  %70 = tail call i32 @cmsStageOutputChannels(%struct._cmsStage_struct* nonnull %60) #5
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %88, label %72

72:                                               ; preds = %69
  %73 = zext i32 %70 to i64
  br label %76

74:                                               ; preds = %76
  %75 = icmp eq i64 %82, %73
  br i1 %75, label %88, label %76

76:                                               ; preds = %74, %72
  %77 = phi i64 [ 0, %72 ], [ %82, %74 ]
  %78 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %67, i64 %77
  %79 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %78, align 8
  %80 = tail call i32 @cmsIsToneCurveLinear(%struct._cms_curve_struct* %79) #5
  %81 = icmp eq i32 %80, 0
  %82 = add nuw nsw i64 %77, 1
  br i1 %81, label %83, label %74

83:                                               ; preds = %76, %66
  %84 = tail call %struct._cmsStage_struct* @cmsStageDup(%struct._cmsStage_struct* nonnull %60) #5
  %85 = tail call i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct* nonnull %53, i32 0, %struct._cmsStage_struct* %84) #5
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %135, label %87

87:                                               ; preds = %83
  call void @cmsPipelineUnlinkStage(%struct._cmsPipeline_struct* %36, i32 0, %struct._cmsStage_struct** nonnull %6) #5
  br label %88

88:                                               ; preds = %74, %69, %62, %87, %59, %55
  %89 = phi %struct._cmsStage_struct* [ null, %55 ], [ null, %69 ], [ null, %59 ], [ null, %62 ], [ %84, %87 ], [ null, %74 ]
  %90 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %47, align 8
  %91 = load i32, i32* %49, align 8
  %92 = load i32, i32* %51, align 4
  %93 = call %struct._cmsStage_struct* @cmsStageAllocCLut16bit(%struct._cmsContext_struct* %90, i32 %35, i32 %91, i32 %92, i16* null) #5
  %94 = icmp eq %struct._cmsStage_struct* %93, null
  br i1 %94, label %135, label %95

95:                                               ; preds = %88
  %96 = call i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct* nonnull %53, i32 1, %struct._cmsStage_struct* nonnull %93) #5
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %135, label %98

98:                                               ; preds = %95
  %99 = load i32, i32* %4, align 4
  %100 = and i32 %99, 1
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %130, label %102

102:                                              ; preds = %98
  %103 = call %struct._cmsStage_struct* @cmsPipelineGetPtrToLastStage(%struct._cmsPipeline_struct* %36) #5
  %104 = icmp eq %struct._cmsStage_struct* %103, null
  br i1 %104, label %130, label %105

105:                                              ; preds = %102
  %106 = call i32 @cmsStageType(%struct._cmsStage_struct* nonnull %103) #5
  %107 = icmp eq i32 %106, 1668707188
  br i1 %107, label %108, label %130

108:                                              ; preds = %105
  %109 = call %struct._cms_curve_struct** @_cmsStageGetPtrToCurveSet(%struct._cmsStage_struct* nonnull %103) #5
  %110 = icmp eq %struct._cms_curve_struct** %109, null
  br i1 %110, label %125, label %111

111:                                              ; preds = %108
  %112 = call i32 @cmsStageOutputChannels(%struct._cmsStage_struct* nonnull %103) #5
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %130, label %114

114:                                              ; preds = %111
  %115 = zext i32 %112 to i64
  br label %118

116:                                              ; preds = %118
  %117 = icmp eq i64 %124, %115
  br i1 %117, label %130, label %118

118:                                              ; preds = %116, %114
  %119 = phi i64 [ 0, %114 ], [ %124, %116 ]
  %120 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %109, i64 %119
  %121 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %120, align 8
  %122 = call i32 @cmsIsToneCurveLinear(%struct._cms_curve_struct* %121) #5
  %123 = icmp eq i32 %122, 0
  %124 = add nuw nsw i64 %119, 1
  br i1 %123, label %125, label %116

125:                                              ; preds = %118, %108
  %126 = call %struct._cmsStage_struct* @cmsStageDup(%struct._cmsStage_struct* nonnull %103) #5
  %127 = call i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct* nonnull %53, i32 1, %struct._cmsStage_struct* %126) #5
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %135, label %129

129:                                              ; preds = %125
  call void @cmsPipelineUnlinkStage(%struct._cmsPipeline_struct* %36, i32 1, %struct._cmsStage_struct** nonnull %7) #5
  br label %130

130:                                              ; preds = %116, %111, %105, %129, %102, %98
  %131 = phi %struct._cmsStage_struct* [ null, %98 ], [ null, %111 ], [ null, %102 ], [ null, %105 ], [ %126, %129 ], [ null, %116 ]
  %132 = bitcast %struct._cmsPipeline_struct* %36 to i8*
  %133 = call i32 @cmsStageSampleCLut16bit(%struct._cmsStage_struct* nonnull %93, i32 (i16*, i16*, i8*)* nonnull @XFormSampler16, i8* %132, i32 0) #5
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %146

135:                                              ; preds = %125, %83, %130, %95, %88
  %136 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %6, align 8
  %137 = icmp eq %struct._cmsStage_struct* %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %135
  %139 = call i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct* %36, i32 0, %struct._cmsStage_struct* nonnull %136) #5
  br label %140

140:                                              ; preds = %135, %138
  %141 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %7, align 8
  %142 = icmp eq %struct._cmsStage_struct* %141, null
  br i1 %142, label %145, label %143

143:                                              ; preds = %140
  %144 = call i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct* %36, i32 1, %struct._cmsStage_struct* nonnull %141) #5
  br label %145

145:                                              ; preds = %140, %143
  call void @cmsPipelineFree(%struct._cmsPipeline_struct* nonnull %53) #5
  br label %209

146:                                              ; preds = %130
  %147 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %6, align 8
  %148 = icmp eq %struct._cmsStage_struct* %147, null
  br i1 %148, label %150, label %149

149:                                              ; preds = %146
  call void @cmsStageFree(%struct._cmsStage_struct* nonnull %147) #5
  br label %150

150:                                              ; preds = %146, %149
  %151 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %7, align 8
  %152 = icmp eq %struct._cmsStage_struct* %151, null
  br i1 %152, label %154, label %153

153:                                              ; preds = %150
  call void @cmsStageFree(%struct._cmsStage_struct* nonnull %151) #5
  br label %154

154:                                              ; preds = %150, %153
  call void @cmsPipelineFree(%struct._cmsPipeline_struct* %36) #5
  %155 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %93, i64 0, i32 8
  %156 = bitcast i8** %155 to %struct._cmsStageCLutData**
  %157 = load %struct._cmsStageCLutData*, %struct._cmsStageCLutData** %156, align 8
  %158 = icmp eq %struct._cmsStage_struct* %89, null
  br i1 %158, label %165, label %159

159:                                              ; preds = %154
  %160 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %89, i64 0, i32 8
  %161 = bitcast i8** %160 to %struct._cmsStageToneCurvesData**
  %162 = load %struct._cmsStageToneCurvesData*, %struct._cmsStageToneCurvesData** %161, align 8
  %163 = getelementptr inbounds %struct._cmsStageToneCurvesData, %struct._cmsStageToneCurvesData* %162, i64 0, i32 1
  %164 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %163, align 8
  br label %165

165:                                              ; preds = %154, %159
  %166 = phi %struct._cms_curve_struct** [ %164, %159 ], [ null, %154 ]
  %167 = icmp eq %struct._cmsStage_struct* %131, null
  br i1 %167, label %174, label %168

168:                                              ; preds = %165
  %169 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %131, i64 0, i32 8
  %170 = bitcast i8** %169 to %struct._cmsStageToneCurvesData**
  %171 = load %struct._cmsStageToneCurvesData*, %struct._cmsStageToneCurvesData** %170, align 8
  %172 = getelementptr inbounds %struct._cmsStageToneCurvesData, %struct._cmsStageToneCurvesData* %171, i64 0, i32 1
  %173 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %172, align 8
  br label %174

174:                                              ; preds = %165, %168
  %175 = phi %struct._cms_curve_struct** [ %173, %168 ], [ null, %165 ]
  %176 = icmp eq %struct._cms_curve_struct** %166, null
  %177 = icmp eq %struct._cms_curve_struct** %175, null
  %178 = and i1 %176, %177
  br i1 %178, label %179, label %186

179:                                              ; preds = %174
  %180 = getelementptr inbounds %struct._cmsStageCLutData, %struct._cmsStageCLutData* %157, i64 0, i32 1
  %181 = load %struct._cms_interp_struc*, %struct._cms_interp_struc** %180, align 8
  %182 = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %181, i64 0, i32 8, i32 0
  %183 = bitcast void (i16*, i16*, %struct._cms_interp_struc*)** %182 to void (i16*, i16*, i8*)**
  %184 = load void (i16*, i16*, i8*)*, void (i16*, i16*, i8*)** %183, align 8
  %185 = bitcast %struct._cms_interp_struc* %181 to i8*
  call void @_cmsPipelineSetOptimizationParameters(%struct._cmsPipeline_struct* nonnull %53, void (i16*, i16*, i8*)* %184, i8* %185, void (%struct._cmsContext_struct*, i8*)* null, i8* (%struct._cmsContext_struct*, i8*)* null) #5
  br label %197

186:                                              ; preds = %174
  %187 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %53, i64 0, i32 8
  %188 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %187, align 8
  %189 = getelementptr inbounds %struct._cmsStageCLutData, %struct._cmsStageCLutData* %157, i64 0, i32 1
  %190 = load %struct._cms_interp_struc*, %struct._cms_interp_struc** %189, align 8
  %191 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %53, i64 0, i32 1
  %192 = load i32, i32* %191, align 8
  %193 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %53, i64 0, i32 2
  %194 = load i32, i32* %193, align 4
  %195 = call fastcc %struct.Prelin16Data* @PrelinOpt16alloc(%struct._cmsContext_struct* %188, %struct._cms_interp_struc* %190, i32 %192, %struct._cms_curve_struct** %166, i32 %194, %struct._cms_curve_struct** %175)
  %196 = bitcast %struct.Prelin16Data* %195 to i8*
  call void @_cmsPipelineSetOptimizationParameters(%struct._cmsPipeline_struct* nonnull %53, void (i16*, i16*, i8*)* nonnull @PrelinEval16, i8* %196, void (%struct._cmsContext_struct*, i8*)* nonnull @PrelinOpt16free, i8* (%struct._cmsContext_struct*, i8*)* nonnull @Prelin16dup) #5
  br label %197

197:                                              ; preds = %186, %179
  %198 = icmp eq i32 %1, 3
  %199 = load i32, i32* %4, align 4
  br i1 %198, label %200, label %202

200:                                              ; preds = %197
  %201 = or i32 %199, 4
  store i32 %201, i32* %4, align 4
  br label %202

202:                                              ; preds = %197, %200
  %203 = phi i32 [ %201, %200 ], [ %199, %197 ]
  %204 = and i32 %203, 4
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %208

206:                                              ; preds = %202
  %207 = call fastcc i32 @FixWhiteMisalignment(%struct._cmsPipeline_struct* nonnull %53, i32 %21, i32 %25)
  br label %208

208:                                              ; preds = %202, %206
  store %struct._cmsPipeline_struct* %53, %struct._cmsPipeline_struct** %0, align 8
  br label %209

209:                                              ; preds = %39, %46, %17, %5, %13, %208, %145
  %210 = phi i32 [ 0, %145 ], [ 1, %208 ], [ 0, %13 ], [ 0, %5 ], [ 0, %17 ], [ 0, %46 ], [ 0, %39 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #5
  ret i32 %210
}

declare void @_cmsPipelineSetOptimizationParameters(%struct._cmsPipeline_struct*, void (i16*, i16*, i8*)*, i8*, void (%struct._cmsContext_struct*, i8*)*, i8* (%struct._cmsContext_struct*, i8*)*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @FastIdentity16(i16* nocapture readonly, i16* nocapture, i8* nocapture readonly) #3 {
  %4 = getelementptr inbounds i8, i8* %2, i64 8
  %5 = bitcast i8* %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %17, label %8

8:                                                ; preds = %3, %8
  %9 = phi i64 [ %13, %8 ], [ 0, %3 ]
  %10 = getelementptr inbounds i16, i16* %0, i64 %9
  %11 = load i16, i16* %10, align 2
  %12 = getelementptr inbounds i16, i16* %1, i64 %9
  store i16 %11, i16* %12, align 2
  %13 = add nuw nsw i64 %9, 1
  %14 = load i32, i32* %5, align 8
  %15 = zext i32 %14 to i64
  %16 = icmp ult i64 %13, %15
  br i1 %16, label %8, label %17

17:                                               ; preds = %8, %3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @cmsStageFree(%struct._cmsStage_struct*) local_unnamed_addr #1

declare i8* @cmsStageData(%struct._cmsStage_struct*) local_unnamed_addr #1

declare i32 @cmsStageInputChannels(%struct._cmsStage_struct*) local_unnamed_addr #1

declare i32 @cmsStageOutputChannels(%struct._cmsStage_struct*) local_unnamed_addr #1

declare void @_cmsMAT3per(%struct.cmsMAT3*, %struct.cmsMAT3*, %struct.cmsMAT3*) local_unnamed_addr #1

declare %struct._cmsStage_struct* @cmsStageAllocMatrix(%struct._cmsContext_struct*, i32, i32, double*, double*) local_unnamed_addr #1

declare void @_cmsMAT3identity(%struct.cmsMAT3*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #4

declare i32 @_cmsFormatterIsFloat(i32) local_unnamed_addr #1

declare i32 @_cmsICCcolorSpace(i32) local_unnamed_addr #1

declare i32 @_cmsReasonableGridpointsByColorspace(i32, i32) local_unnamed_addr #1

declare i32 @cmsPipelineStageCount(%struct._cmsPipeline_struct*) local_unnamed_addr #1

declare %struct._cmsStage_struct* @cmsPipelineGetPtrToFirstStage(%struct._cmsPipeline_struct*) local_unnamed_addr #1

declare i32 @cmsStageType(%struct._cmsStage_struct*) local_unnamed_addr #1

declare %struct._cmsStage_struct* @cmsStageNext(%struct._cmsStage_struct*) local_unnamed_addr #1

declare %struct._cmsPipeline_struct* @cmsPipelineAlloc(%struct._cmsContext_struct*, i32, i32) local_unnamed_addr #1

declare %struct._cmsStage_struct* @cmsStageDup(%struct._cmsStage_struct*) local_unnamed_addr #1

declare i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct*, i32, %struct._cmsStage_struct*) local_unnamed_addr #1

declare void @cmsPipelineUnlinkStage(%struct._cmsPipeline_struct*, i32, %struct._cmsStage_struct**) local_unnamed_addr #1

declare %struct._cmsStage_struct* @cmsStageAllocCLut16bit(%struct._cmsContext_struct*, i32, i32, i32, i16*) local_unnamed_addr #1

declare %struct._cmsStage_struct* @cmsPipelineGetPtrToLastStage(%struct._cmsPipeline_struct*) local_unnamed_addr #1

declare i32 @cmsStageSampleCLut16bit(%struct._cmsStage_struct*, i32 (i16*, i16*, i8*)*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal i32 @XFormSampler16(i16* nocapture readonly, i16* nocapture, i8*) #0 {
  %4 = alloca [16 x float], align 16
  %5 = alloca [16 x float], align 16
  %6 = bitcast i8* %2 to %struct._cmsPipeline_struct*
  %7 = bitcast [16 x float]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %7) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -1, i64 64, i1 false)
  %8 = bitcast [16 x float]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %8) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -1, i64 64, i1 false)
  %9 = getelementptr inbounds i8, i8* %2, i64 8
  %10 = bitcast i8* %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %74, label %13

13:                                               ; preds = %3
  %14 = zext i32 %11 to i64
  %15 = icmp eq i32 %11, 1
  br i1 %15, label %62, label %16

16:                                               ; preds = %13
  %17 = and i64 %14, 4294967294
  %18 = add nsw i64 %17, -2
  %19 = lshr exact i64 %18, 1
  %20 = add nuw i64 %19, 1
  %21 = and i64 %20, 1
  %22 = icmp eq i64 %18, 0
  br i1 %22, label %48, label %23

23:                                               ; preds = %16
  %24 = sub nuw i64 %20, %21
  br label %25

25:                                               ; preds = %25, %23
  %26 = phi i64 [ 0, %23 ], [ %45, %25 ]
  %27 = phi i64 [ %24, %23 ], [ %46, %25 ]
  %28 = getelementptr inbounds i16, i16* %0, i64 %26
  %29 = bitcast i16* %28 to <2 x i16>*
  %30 = load <2 x i16>, <2 x i16>* %29, align 2
  %31 = uitofp <2 x i16> %30 to <2 x double>
  %32 = fdiv <2 x double> %31, <double 6.553500e+04, double 6.553500e+04>
  %33 = fptrunc <2 x double> %32 to <2 x float>
  %34 = getelementptr inbounds [16 x float], [16 x float]* %4, i64 0, i64 %26
  %35 = bitcast float* %34 to <2 x float>*
  store <2 x float> %33, <2 x float>* %35, align 16
  %36 = or i64 %26, 2
  %37 = getelementptr inbounds i16, i16* %0, i64 %36
  %38 = bitcast i16* %37 to <2 x i16>*
  %39 = load <2 x i16>, <2 x i16>* %38, align 2
  %40 = uitofp <2 x i16> %39 to <2 x double>
  %41 = fdiv <2 x double> %40, <double 6.553500e+04, double 6.553500e+04>
  %42 = fptrunc <2 x double> %41 to <2 x float>
  %43 = getelementptr inbounds [16 x float], [16 x float]* %4, i64 0, i64 %36
  %44 = bitcast float* %43 to <2 x float>*
  store <2 x float> %42, <2 x float>* %44, align 8
  %45 = add i64 %26, 4
  %46 = add i64 %27, -2
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %25, !llvm.loop !2

48:                                               ; preds = %25, %16
  %49 = phi i64 [ 0, %16 ], [ %45, %25 ]
  %50 = icmp eq i64 %21, 0
  br i1 %50, label %60, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds i16, i16* %0, i64 %49
  %53 = bitcast i16* %52 to <2 x i16>*
  %54 = load <2 x i16>, <2 x i16>* %53, align 2
  %55 = uitofp <2 x i16> %54 to <2 x double>
  %56 = fdiv <2 x double> %55, <double 6.553500e+04, double 6.553500e+04>
  %57 = fptrunc <2 x double> %56 to <2 x float>
  %58 = getelementptr inbounds [16 x float], [16 x float]* %4, i64 0, i64 %49
  %59 = bitcast float* %58 to <2 x float>*
  store <2 x float> %57, <2 x float>* %59, align 8
  br label %60

60:                                               ; preds = %48, %51
  %61 = icmp eq i64 %17, %14
  br i1 %61, label %74, label %62

62:                                               ; preds = %60, %13
  %63 = phi i64 [ 0, %13 ], [ %17, %60 ]
  br label %64

64:                                               ; preds = %62, %64
  %65 = phi i64 [ %72, %64 ], [ %63, %62 ]
  %66 = getelementptr inbounds i16, i16* %0, i64 %65
  %67 = load i16, i16* %66, align 2
  %68 = uitofp i16 %67 to double
  %69 = fdiv double %68, 6.553500e+04
  %70 = fptrunc double %69 to float
  %71 = getelementptr inbounds [16 x float], [16 x float]* %4, i64 0, i64 %65
  store float %70, float* %71, align 4
  %72 = add nuw nsw i64 %65, 1
  %73 = icmp ult i64 %72, %14
  br i1 %73, label %64, label %74, !llvm.loop !4

74:                                               ; preds = %64, %60, %3
  %75 = getelementptr inbounds [16 x float], [16 x float]* %4, i64 0, i64 0
  %76 = getelementptr inbounds [16 x float], [16 x float]* %5, i64 0, i64 0
  call void @cmsPipelineEvalFloat(float* nonnull %75, float* nonnull %76, %struct._cmsPipeline_struct* %6) #5
  %77 = getelementptr inbounds i8, i8* %2, i64 12
  %78 = bitcast i8* %77 to i32*
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %104, label %81

81:                                               ; preds = %74, %97
  %82 = phi i64 [ %100, %97 ], [ 0, %74 ]
  %83 = getelementptr inbounds [16 x float], [16 x float]* %5, i64 0, i64 %82
  %84 = load float, float* %83, align 4
  %85 = fpext float %84 to double
  %86 = fmul double %85, 6.553500e+04
  %87 = fadd double %86, 5.000000e-01
  %88 = fcmp ugt double %87, 0.000000e+00
  br i1 %88, label %89, label %97

89:                                               ; preds = %81
  %90 = fcmp ult double %87, 6.553500e+04
  br i1 %90, label %91, label %97

91:                                               ; preds = %89
  %92 = fadd double %87, -3.276700e+04
  %93 = call double @llvm.floor.f64(double %92) #5
  %94 = fptosi double %93 to i32
  %95 = trunc i32 %94 to i16
  %96 = add i16 %95, 32767
  br label %97

97:                                               ; preds = %81, %89, %91
  %98 = phi i16 [ %96, %91 ], [ 0, %81 ], [ -1, %89 ]
  %99 = getelementptr inbounds i16, i16* %1, i64 %82
  store i16 %98, i16* %99, align 2
  %100 = add nuw nsw i64 %82, 1
  %101 = load i32, i32* %78, align 4
  %102 = zext i32 %101 to i64
  %103 = icmp ult i64 %100, %102
  br i1 %103, label %81, label %104

104:                                              ; preds = %97, %74
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %7) #5
  ret i32 1
}

declare void @cmsPipelineFree(%struct._cmsPipeline_struct*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc %struct.Prelin16Data* @PrelinOpt16alloc(%struct._cmsContext_struct*, %struct._cms_interp_struc*, i32, %struct._cms_curve_struct** readonly, i32, %struct._cms_curve_struct** readonly) unnamed_addr #0 {
  %7 = tail call i8* @_cmsMallocZero(%struct._cmsContext_struct* %0, i32 176) #5
  %8 = bitcast i8* %7 to %struct.Prelin16Data*
  %9 = icmp eq i8* %7, null
  br i1 %9, label %89, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds i8, i8* %7, i64 8
  %12 = bitcast i8* %11 to i32*
  store i32 %2, i32* %12, align 8
  %13 = getelementptr inbounds i8, i8* %7, i64 12
  %14 = bitcast i8* %13 to i32*
  store i32 %4, i32* %14, align 4
  %15 = icmp eq i32 %2, 0
  br i1 %15, label %42, label %16

16:                                               ; preds = %10
  %17 = icmp eq %struct._cms_curve_struct** %3, null
  %18 = getelementptr inbounds i8, i8* %7, i64 80
  %19 = bitcast i8* %18 to [8 x %struct._cms_interp_struc*]*
  %20 = getelementptr inbounds i8, i8* %7, i64 16
  %21 = bitcast i8* %20 to [8 x void (i16*, i16*, %struct._cms_interp_struc*)*]*
  %22 = zext i32 %2 to i64
  br label %23

23:                                               ; preds = %39, %16
  %24 = phi i64 [ 0, %16 ], [ %40, %39 ]
  br i1 %17, label %25, label %28

25:                                               ; preds = %23
  %26 = getelementptr inbounds [8 x %struct._cms_interp_struc*], [8 x %struct._cms_interp_struc*]* %19, i64 0, i64 %24
  store %struct._cms_interp_struc* null, %struct._cms_interp_struc** %26, align 8
  %27 = getelementptr inbounds [8 x void (i16*, i16*, %struct._cms_interp_struc*)*], [8 x void (i16*, i16*, %struct._cms_interp_struc*)*]* %21, i64 0, i64 %24
  store void (i16*, i16*, %struct._cms_interp_struc*)* @Eval16nop1D, void (i16*, i16*, %struct._cms_interp_struc*)** %27, align 8
  br label %39

28:                                               ; preds = %23
  %29 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %3, i64 %24
  %30 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %29, align 8
  %31 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %30, i64 0, i32 0
  %32 = load %struct._cms_interp_struc*, %struct._cms_interp_struc** %31, align 8
  %33 = getelementptr inbounds [8 x %struct._cms_interp_struc*], [8 x %struct._cms_interp_struc*]* %19, i64 0, i64 %24
  store %struct._cms_interp_struc* %32, %struct._cms_interp_struc** %33, align 8
  %34 = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %32, i64 0, i32 8, i32 0
  %35 = bitcast void (i16*, i16*, %struct._cms_interp_struc*)** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds [8 x void (i16*, i16*, %struct._cms_interp_struc*)*], [8 x void (i16*, i16*, %struct._cms_interp_struc*)*]* %21, i64 0, i64 %24
  %38 = bitcast void (i16*, i16*, %struct._cms_interp_struc*)** %37 to i64*
  store i64 %36, i64* %38, align 8
  br label %39

39:                                               ; preds = %25, %28
  %40 = add nuw nsw i64 %24, 1
  %41 = icmp eq i64 %40, %22
  br i1 %41, label %42, label %23

42:                                               ; preds = %39, %10
  %43 = getelementptr inbounds i8, i8* %7, i64 152
  %44 = bitcast i8* %43 to %struct._cms_interp_struc**
  store %struct._cms_interp_struc* %1, %struct._cms_interp_struc** %44, align 8
  %45 = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %1, i64 0, i32 8, i32 0
  %46 = bitcast void (i16*, i16*, %struct._cms_interp_struc*)** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = getelementptr inbounds i8, i8* %7, i64 144
  %49 = bitcast i8* %48 to i64*
  store i64 %47, i64* %49, align 8
  %50 = tail call i8* @_cmsCalloc(%struct._cmsContext_struct* %0, i32 %4, i32 8) #5
  %51 = getelementptr inbounds i8, i8* %7, i64 160
  %52 = bitcast i8* %51 to void (i16*, i16*, %struct._cms_interp_struc*)***
  %53 = bitcast i8* %51 to i8**
  store i8* %50, i8** %53, align 8
  %54 = tail call i8* @_cmsCalloc(%struct._cmsContext_struct* %0, i32 %4, i32 8) #5
  %55 = getelementptr inbounds i8, i8* %7, i64 168
  %56 = bitcast i8* %55 to %struct._cms_interp_struc***
  %57 = bitcast i8* %55 to i8**
  store i8* %54, i8** %57, align 8
  %58 = icmp eq i32 %4, 0
  br i1 %58, label %89, label %59

59:                                               ; preds = %42
  %60 = icmp eq %struct._cms_curve_struct** %5, null
  %61 = zext i32 %4 to i64
  br label %62

62:                                               ; preds = %86, %59
  %63 = phi i64 [ 0, %59 ], [ %87, %86 ]
  br i1 %60, label %64, label %69

64:                                               ; preds = %62
  %65 = load %struct._cms_interp_struc**, %struct._cms_interp_struc*** %56, align 8
  %66 = getelementptr inbounds %struct._cms_interp_struc*, %struct._cms_interp_struc** %65, i64 %63
  store %struct._cms_interp_struc* null, %struct._cms_interp_struc** %66, align 8
  %67 = load void (i16*, i16*, %struct._cms_interp_struc*)**, void (i16*, i16*, %struct._cms_interp_struc*)*** %52, align 8
  %68 = getelementptr inbounds void (i16*, i16*, %struct._cms_interp_struc*)*, void (i16*, i16*, %struct._cms_interp_struc*)** %67, i64 %63
  store void (i16*, i16*, %struct._cms_interp_struc*)* @Eval16nop1D, void (i16*, i16*, %struct._cms_interp_struc*)** %68, align 8
  br label %86

69:                                               ; preds = %62
  %70 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %5, i64 %63
  %71 = bitcast %struct._cms_curve_struct** %70 to i64**
  %72 = load i64*, i64** %71, align 8
  %73 = load i64, i64* %72, align 8
  %74 = load %struct._cms_interp_struc**, %struct._cms_interp_struc*** %56, align 8
  %75 = getelementptr inbounds %struct._cms_interp_struc*, %struct._cms_interp_struc** %74, i64 %63
  %76 = bitcast %struct._cms_interp_struc** %75 to i64*
  store i64 %73, i64* %76, align 8
  %77 = load %struct._cms_interp_struc**, %struct._cms_interp_struc*** %56, align 8
  %78 = getelementptr inbounds %struct._cms_interp_struc*, %struct._cms_interp_struc** %77, i64 %63
  %79 = load %struct._cms_interp_struc*, %struct._cms_interp_struc** %78, align 8
  %80 = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %79, i64 0, i32 8, i32 0
  %81 = bitcast void (i16*, i16*, %struct._cms_interp_struc*)** %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = load void (i16*, i16*, %struct._cms_interp_struc*)**, void (i16*, i16*, %struct._cms_interp_struc*)*** %52, align 8
  %84 = getelementptr inbounds void (i16*, i16*, %struct._cms_interp_struc*)*, void (i16*, i16*, %struct._cms_interp_struc*)** %83, i64 %63
  %85 = bitcast void (i16*, i16*, %struct._cms_interp_struc*)** %84 to i64*
  store i64 %82, i64* %85, align 8
  br label %86

86:                                               ; preds = %64, %69
  %87 = add nuw nsw i64 %63, 1
  %88 = icmp eq i64 %87, %61
  br i1 %88, label %89, label %62

89:                                               ; preds = %86, %42, %6
  %90 = phi %struct.Prelin16Data* [ null, %6 ], [ %8, %42 ], [ %8, %86 ]
  ret %struct.Prelin16Data* %90
}

; Function Attrs: nounwind ssp uwtable
define internal void @PrelinEval16(i16*, i16*, i8* nocapture readonly) #0 {
  %4 = alloca [8 x i16], align 16
  %5 = alloca [16 x i16], align 16
  %6 = bitcast [8 x i16]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #5
  %7 = getelementptr inbounds [8 x i16], [8 x i16]* %4, i64 0, i64 0
  %8 = bitcast [16 x i16]* %5 to i8*
  %9 = bitcast [8 x i16]* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #5
  %10 = getelementptr inbounds [16 x i16], [16 x i16]* %5, i64 0, i64 0
  %11 = getelementptr inbounds i8, i8* %2, i64 8
  %12 = bitcast i8* %11 to i32*
  %13 = bitcast [16 x i16]* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %13, i8 -86, i64 32, i1 false)
  %14 = load i32, i32* %12, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %33, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds i8, i8* %2, i64 16
  %18 = bitcast i8* %17 to [8 x void (i16*, i16*, %struct._cms_interp_struc*)*]*
  %19 = getelementptr inbounds i8, i8* %2, i64 80
  %20 = bitcast i8* %19 to [8 x %struct._cms_interp_struc*]*
  br label %21

21:                                               ; preds = %16, %21
  %22 = phi i64 [ 0, %16 ], [ %29, %21 ]
  %23 = getelementptr inbounds [8 x void (i16*, i16*, %struct._cms_interp_struc*)*], [8 x void (i16*, i16*, %struct._cms_interp_struc*)*]* %18, i64 0, i64 %22
  %24 = load void (i16*, i16*, %struct._cms_interp_struc*)*, void (i16*, i16*, %struct._cms_interp_struc*)** %23, align 8
  %25 = getelementptr inbounds i16, i16* %0, i64 %22
  %26 = getelementptr inbounds [8 x i16], [8 x i16]* %4, i64 0, i64 %22
  %27 = getelementptr inbounds [8 x %struct._cms_interp_struc*], [8 x %struct._cms_interp_struc*]* %20, i64 0, i64 %22
  %28 = load %struct._cms_interp_struc*, %struct._cms_interp_struc** %27, align 8
  call void %24(i16* %25, i16* %26, %struct._cms_interp_struc* %28) #5
  %29 = add nuw nsw i64 %22, 1
  %30 = load i32, i32* %12, align 8
  %31 = zext i32 %30 to i64
  %32 = icmp ult i64 %29, %31
  br i1 %32, label %21, label %33

33:                                               ; preds = %21, %3
  %34 = getelementptr inbounds i8, i8* %2, i64 144
  %35 = bitcast i8* %34 to void (i16*, i16*, %struct._cms_interp_struc*)**
  %36 = load void (i16*, i16*, %struct._cms_interp_struc*)*, void (i16*, i16*, %struct._cms_interp_struc*)** %35, align 8
  %37 = getelementptr inbounds i8, i8* %2, i64 152
  %38 = bitcast i8* %37 to %struct._cms_interp_struc**
  %39 = load %struct._cms_interp_struc*, %struct._cms_interp_struc** %38, align 8
  call void %36(i16* nonnull %7, i16* nonnull %10, %struct._cms_interp_struc* %39) #5
  %40 = getelementptr inbounds i8, i8* %2, i64 12
  %41 = bitcast i8* %40 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %63, label %44

44:                                               ; preds = %33
  %45 = getelementptr inbounds i8, i8* %2, i64 160
  %46 = bitcast i8* %45 to void (i16*, i16*, %struct._cms_interp_struc*)***
  %47 = getelementptr inbounds i8, i8* %2, i64 168
  %48 = bitcast i8* %47 to %struct._cms_interp_struc***
  br label %49

49:                                               ; preds = %44, %49
  %50 = phi i64 [ 0, %44 ], [ %59, %49 ]
  %51 = load void (i16*, i16*, %struct._cms_interp_struc*)**, void (i16*, i16*, %struct._cms_interp_struc*)*** %46, align 8
  %52 = getelementptr inbounds void (i16*, i16*, %struct._cms_interp_struc*)*, void (i16*, i16*, %struct._cms_interp_struc*)** %51, i64 %50
  %53 = load void (i16*, i16*, %struct._cms_interp_struc*)*, void (i16*, i16*, %struct._cms_interp_struc*)** %52, align 8
  %54 = getelementptr inbounds [16 x i16], [16 x i16]* %5, i64 0, i64 %50
  %55 = getelementptr inbounds i16, i16* %1, i64 %50
  %56 = load %struct._cms_interp_struc**, %struct._cms_interp_struc*** %48, align 8
  %57 = getelementptr inbounds %struct._cms_interp_struc*, %struct._cms_interp_struc** %56, i64 %50
  %58 = load %struct._cms_interp_struc*, %struct._cms_interp_struc** %57, align 8
  call void %53(i16* %54, i16* %55, %struct._cms_interp_struc* %58) #5
  %59 = add nuw nsw i64 %50, 1
  %60 = load i32, i32* %41, align 4
  %61 = zext i32 %60 to i64
  %62 = icmp ult i64 %59, %61
  br i1 %62, label %49, label %63

63:                                               ; preds = %49, %33
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @PrelinOpt16free(%struct._cmsContext_struct*, i8*) #0 {
  %3 = getelementptr inbounds i8, i8* %1, i64 160
  %4 = bitcast i8* %3 to i8**
  %5 = load i8*, i8** %4, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %0, i8* %5) #5
  %6 = getelementptr inbounds i8, i8* %1, i64 168
  %7 = bitcast i8* %6 to i8**
  %8 = load i8*, i8** %7, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %0, i8* %8) #5
  tail call void @_cmsFree(%struct._cmsContext_struct* %0, i8* %1) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Prelin16dup(%struct._cmsContext_struct*, i8*) #0 {
  %3 = tail call i8* @_cmsDupMem(%struct._cmsContext_struct* %0, i8* %1, i32 176) #5
  %4 = icmp eq i8* %3, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds i8, i8* %1, i64 160
  %7 = bitcast i8* %6 to i8**
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds i8, i8* %1, i64 12
  %10 = bitcast i8* %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = shl i32 %11, 3
  %13 = tail call i8* @_cmsDupMem(%struct._cmsContext_struct* %0, i8* %8, i32 %12) #5
  %14 = getelementptr inbounds i8, i8* %3, i64 160
  %15 = bitcast i8* %14 to i8**
  store i8* %13, i8** %15, align 8
  %16 = getelementptr inbounds i8, i8* %1, i64 168
  %17 = bitcast i8* %16 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = load i32, i32* %10, align 4
  %20 = shl i32 %19, 3
  %21 = tail call i8* @_cmsDupMem(%struct._cmsContext_struct* %0, i8* %18, i32 %20) #5
  %22 = getelementptr inbounds i8, i8* %3, i64 168
  %23 = bitcast i8* %22 to i8**
  store i8* %21, i8** %23, align 8
  br label %24

24:                                               ; preds = %2, %5
  ret i8* %3
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @FixWhiteMisalignment(%struct._cmsPipeline_struct*, i32, i32) unnamed_addr #0 {
  %4 = alloca i16*, align 8
  %5 = alloca i16*, align 8
  %6 = alloca [16 x i16], align 16
  %7 = alloca [16 x i16], align 16
  %8 = alloca [16 x i16], align 16
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct._cmsStage_struct*, align 8
  %12 = alloca %struct._cmsStage_struct*, align 8
  %13 = alloca %struct._cmsStage_struct*, align 8
  %14 = bitcast i16** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #5
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %4, align 8
  %15 = bitcast i16** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #5
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %5, align 8
  %16 = bitcast [16 x i16]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #5
  %17 = getelementptr inbounds [16 x i16], [16 x i16]* %6, i64 0, i64 0
  %18 = getelementptr inbounds [16 x i16], [16 x i16]* %6, i64 0, i64 1
  %19 = getelementptr inbounds [16 x i16], [16 x i16]* %6, i64 0, i64 2
  %20 = getelementptr inbounds [16 x i16], [16 x i16]* %6, i64 0, i64 3
  %21 = bitcast [16 x i16]* %7 to i8*
  %22 = bitcast [16 x i16]* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %22, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21) #5
  %23 = bitcast [16 x i16]* %8 to i8*
  %24 = bitcast [16 x i16]* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %24, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #5
  %25 = getelementptr inbounds [16 x i16], [16 x i16]* %8, i64 0, i64 0
  %26 = bitcast i32* %9 to i8*
  %27 = bitcast [16 x i16]* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %27, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26) #5
  store i32 -1431655766, i32* %9, align 4
  %28 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #5
  store i32 -1431655766, i32* %10, align 4
  %29 = bitcast %struct._cmsStage_struct** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #5
  store %struct._cmsStage_struct* null, %struct._cmsStage_struct** %11, align 8
  %30 = bitcast %struct._cmsStage_struct** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #5
  store %struct._cmsStage_struct* null, %struct._cmsStage_struct** %12, align 8
  %31 = bitcast %struct._cmsStage_struct** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #5
  store %struct._cmsStage_struct* null, %struct._cmsStage_struct** %13, align 8
  %32 = call i32 @_cmsEndPointsBySpace(i32 %1, i16** nonnull %4, i16** null, i32* nonnull %10) #5
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %530, label %34

34:                                               ; preds = %3
  %35 = call i32 @_cmsEndPointsBySpace(i32 %2, i16** nonnull %5, i16** null, i32* nonnull %9) #5
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %530, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %0, i64 0, i32 1
  %39 = load i32, i32* %38, align 8
  %40 = load i32, i32* %10, align 4
  %41 = icmp eq i32 %39, %40
  br i1 %41, label %42, label %530

42:                                               ; preds = %37
  %43 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %0, i64 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = load i32, i32* %9, align 4
  %46 = icmp eq i32 %44, %45
  br i1 %46, label %47, label %530

47:                                               ; preds = %42
  %48 = load i16*, i16** %4, align 8
  call void @cmsPipelineEval16(i16* %48, i16* nonnull %25, %struct._cmsPipeline_struct* %0) #5
  %49 = load i32, i32* %9, align 4
  %50 = load i16*, i16** %5, align 8
  %51 = icmp eq i32 %49, 0
  br i1 %51, label %530, label %52

52:                                               ; preds = %47
  %53 = zext i32 %49 to i64
  br label %56

54:                                               ; preds = %69
  %55 = icmp eq i64 %71, %53
  br i1 %55, label %530, label %56

56:                                               ; preds = %54, %52
  %57 = phi i64 [ 0, %52 ], [ %71, %54 ]
  %58 = getelementptr inbounds i16, i16* %50, i64 %57
  %59 = load i16, i16* %58, align 2
  %60 = zext i16 %59 to i32
  %61 = getelementptr inbounds [16 x i16], [16 x i16]* %8, i64 0, i64 %57
  %62 = load i16, i16* %61, align 2
  %63 = zext i16 %62 to i32
  %64 = sub nsw i32 %60, %63
  %65 = icmp slt i32 %64, 0
  %66 = sub nsw i32 0, %64
  %67 = select i1 %65, i32 %66, i32 %64
  %68 = icmp sgt i32 %67, 61440
  br i1 %68, label %530, label %69

69:                                               ; preds = %56
  %70 = icmp eq i16 %59, %62
  %71 = add nuw nsw i64 %57, 1
  br i1 %70, label %54, label %72

72:                                               ; preds = %69
  %73 = call i32 (%struct._cmsPipeline_struct*, i32, ...) @cmsPipelineCheckAndRetreiveStages(%struct._cmsPipeline_struct* %0, i32 3, i32 1668707188, i32 1668052340, i32 1668707188, %struct._cmsStage_struct** nonnull %11, %struct._cmsStage_struct** nonnull %12, %struct._cmsStage_struct** nonnull %13) #5
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %84

75:                                               ; preds = %72
  %76 = call i32 (%struct._cmsPipeline_struct*, i32, ...) @cmsPipelineCheckAndRetreiveStages(%struct._cmsPipeline_struct* %0, i32 2, i32 1668707188, i32 1668052340, %struct._cmsStage_struct** nonnull %11, %struct._cmsStage_struct** nonnull %12) #5
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %84

78:                                               ; preds = %75
  %79 = call i32 (%struct._cmsPipeline_struct*, i32, ...) @cmsPipelineCheckAndRetreiveStages(%struct._cmsPipeline_struct* %0, i32 2, i32 1668052340, i32 1668707188, %struct._cmsStage_struct** nonnull %12, %struct._cmsStage_struct** nonnull %13) #5
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %84

81:                                               ; preds = %78
  %82 = call i32 (%struct._cmsPipeline_struct*, i32, ...) @cmsPipelineCheckAndRetreiveStages(%struct._cmsPipeline_struct* %0, i32 1, i32 1668052340, %struct._cmsStage_struct** nonnull %12) #5
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %530, label %84

84:                                               ; preds = %81, %78, %75, %72
  %85 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %11, align 8
  %86 = icmp eq %struct._cmsStage_struct* %85, null
  br i1 %86, label %87, label %175

87:                                               ; preds = %84
  %88 = load i32, i32* %10, align 4
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %199, label %90

90:                                               ; preds = %87
  %91 = load i16*, i16** %4, align 8
  %92 = zext i32 %88 to i64
  %93 = icmp ult i32 %88, 16
  br i1 %93, label %94, label %96

94:                                               ; preds = %173, %90
  %95 = phi i64 [ 0, %90 ], [ %97, %173 ]
  br label %192

96:                                               ; preds = %90
  %97 = and i64 %92, 4294967280
  %98 = add nsw i64 %97, -16
  %99 = lshr exact i64 %98, 4
  %100 = add nuw nsw i64 %99, 1
  %101 = and i64 %100, 3
  %102 = icmp ult i64 %98, 48
  br i1 %102, label %154, label %103

103:                                              ; preds = %96
  %104 = sub nsw i64 %100, %101
  br label %105

105:                                              ; preds = %105, %103
  %106 = phi i64 [ 0, %103 ], [ %151, %105 ]
  %107 = phi i64 [ %104, %103 ], [ %152, %105 ]
  %108 = getelementptr inbounds i16, i16* %91, i64 %106
  %109 = bitcast i16* %108 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2
  %111 = getelementptr inbounds i16, i16* %108, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2
  %114 = getelementptr inbounds [16 x i16], [16 x i16]* %6, i64 0, i64 %106
  %115 = bitcast i16* %114 to <8 x i16>*
  store <8 x i16> %110, <8 x i16>* %115, align 16
  %116 = getelementptr inbounds i16, i16* %114, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %117, align 16
  %118 = or i64 %106, 16
  %119 = getelementptr inbounds i16, i16* %91, i64 %118
  %120 = bitcast i16* %119 to <8 x i16>*
  %121 = load <8 x i16>, <8 x i16>* %120, align 2
  %122 = getelementptr inbounds i16, i16* %119, i64 8
  %123 = bitcast i16* %122 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2
  %125 = getelementptr inbounds [16 x i16], [16 x i16]* %6, i64 0, i64 %118
  %126 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %121, <8 x i16>* %126, align 16
  %127 = getelementptr inbounds i16, i16* %125, i64 8
  %128 = bitcast i16* %127 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 16
  %129 = or i64 %106, 32
  %130 = getelementptr inbounds i16, i16* %91, i64 %129
  %131 = bitcast i16* %130 to <8 x i16>*
  %132 = load <8 x i16>, <8 x i16>* %131, align 2
  %133 = getelementptr inbounds i16, i16* %130, i64 8
  %134 = bitcast i16* %133 to <8 x i16>*
  %135 = load <8 x i16>, <8 x i16>* %134, align 2
  %136 = getelementptr inbounds [16 x i16], [16 x i16]* %6, i64 0, i64 %129
  %137 = bitcast i16* %136 to <8 x i16>*
  store <8 x i16> %132, <8 x i16>* %137, align 16
  %138 = getelementptr inbounds i16, i16* %136, i64 8
  %139 = bitcast i16* %138 to <8 x i16>*
  store <8 x i16> %135, <8 x i16>* %139, align 16
  %140 = or i64 %106, 48
  %141 = getelementptr inbounds i16, i16* %91, i64 %140
  %142 = bitcast i16* %141 to <8 x i16>*
  %143 = load <8 x i16>, <8 x i16>* %142, align 2
  %144 = getelementptr inbounds i16, i16* %141, i64 8
  %145 = bitcast i16* %144 to <8 x i16>*
  %146 = load <8 x i16>, <8 x i16>* %145, align 2
  %147 = getelementptr inbounds [16 x i16], [16 x i16]* %6, i64 0, i64 %140
  %148 = bitcast i16* %147 to <8 x i16>*
  store <8 x i16> %143, <8 x i16>* %148, align 16
  %149 = getelementptr inbounds i16, i16* %147, i64 8
  %150 = bitcast i16* %149 to <8 x i16>*
  store <8 x i16> %146, <8 x i16>* %150, align 16
  %151 = add i64 %106, 64
  %152 = add i64 %107, -4
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %105, !llvm.loop !6

154:                                              ; preds = %105, %96
  %155 = phi i64 [ 0, %96 ], [ %151, %105 ]
  %156 = icmp eq i64 %101, 0
  br i1 %156, label %173, label %157

157:                                              ; preds = %154, %157
  %158 = phi i64 [ %170, %157 ], [ %155, %154 ]
  %159 = phi i64 [ %171, %157 ], [ %101, %154 ]
  %160 = getelementptr inbounds i16, i16* %91, i64 %158
  %161 = bitcast i16* %160 to <8 x i16>*
  %162 = load <8 x i16>, <8 x i16>* %161, align 2
  %163 = getelementptr inbounds i16, i16* %160, i64 8
  %164 = bitcast i16* %163 to <8 x i16>*
  %165 = load <8 x i16>, <8 x i16>* %164, align 2
  %166 = getelementptr inbounds [16 x i16], [16 x i16]* %6, i64 0, i64 %158
  %167 = bitcast i16* %166 to <8 x i16>*
  store <8 x i16> %162, <8 x i16>* %167, align 16
  %168 = getelementptr inbounds i16, i16* %166, i64 8
  %169 = bitcast i16* %168 to <8 x i16>*
  store <8 x i16> %165, <8 x i16>* %169, align 16
  %170 = add i64 %158, 16
  %171 = add i64 %159, -1
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %173, label %157, !llvm.loop !7

173:                                              ; preds = %157, %154
  %174 = icmp eq i64 %97, %92
  br i1 %174, label %199, label %94

175:                                              ; preds = %84
  %176 = call %struct._cms_curve_struct** @_cmsStageGetPtrToCurveSet(%struct._cmsStage_struct* nonnull %85) #5
  %177 = load i32, i32* %10, align 4
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %199, label %179

179:                                              ; preds = %175, %179
  %180 = phi i64 [ %188, %179 ], [ 0, %175 ]
  %181 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %176, i64 %180
  %182 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %181, align 8
  %183 = load i16*, i16** %4, align 8
  %184 = getelementptr inbounds i16, i16* %183, i64 %180
  %185 = load i16, i16* %184, align 2
  %186 = call zeroext i16 @cmsEvalToneCurve16(%struct._cms_curve_struct* %182, i16 zeroext %185) #5
  %187 = getelementptr inbounds [16 x i16], [16 x i16]* %6, i64 0, i64 %180
  store i16 %186, i16* %187, align 2
  %188 = add nuw nsw i64 %180, 1
  %189 = load i32, i32* %10, align 4
  %190 = zext i32 %189 to i64
  %191 = icmp ult i64 %188, %190
  br i1 %191, label %179, label %199

192:                                              ; preds = %94, %192
  %193 = phi i64 [ %197, %192 ], [ %95, %94 ]
  %194 = getelementptr inbounds i16, i16* %91, i64 %193
  %195 = load i16, i16* %194, align 2
  %196 = getelementptr inbounds [16 x i16], [16 x i16]* %6, i64 0, i64 %193
  store i16 %195, i16* %196, align 2
  %197 = add nuw nsw i64 %193, 1
  %198 = icmp ult i64 %197, %92
  br i1 %198, label %192, label %199, !llvm.loop !9

199:                                              ; preds = %179, %192, %173, %87, %175
  %200 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %13, align 8
  %201 = icmp eq %struct._cmsStage_struct* %200, null
  br i1 %201, label %202, label %290

202:                                              ; preds = %199
  %203 = load i32, i32* %9, align 4
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %320, label %205

205:                                              ; preds = %202
  %206 = load i16*, i16** %5, align 8
  %207 = zext i32 %203 to i64
  %208 = icmp ult i32 %203, 16
  br i1 %208, label %209, label %211

209:                                              ; preds = %288, %205
  %210 = phi i64 [ 0, %205 ], [ %212, %288 ]
  br label %313

211:                                              ; preds = %205
  %212 = and i64 %207, 4294967280
  %213 = add nsw i64 %212, -16
  %214 = lshr exact i64 %213, 4
  %215 = add nuw nsw i64 %214, 1
  %216 = and i64 %215, 3
  %217 = icmp ult i64 %213, 48
  br i1 %217, label %269, label %218

218:                                              ; preds = %211
  %219 = sub nsw i64 %215, %216
  br label %220

220:                                              ; preds = %220, %218
  %221 = phi i64 [ 0, %218 ], [ %266, %220 ]
  %222 = phi i64 [ %219, %218 ], [ %267, %220 ]
  %223 = getelementptr inbounds i16, i16* %206, i64 %221
  %224 = bitcast i16* %223 to <8 x i16>*
  %225 = load <8 x i16>, <8 x i16>* %224, align 2
  %226 = getelementptr inbounds i16, i16* %223, i64 8
  %227 = bitcast i16* %226 to <8 x i16>*
  %228 = load <8 x i16>, <8 x i16>* %227, align 2
  %229 = getelementptr inbounds [16 x i16], [16 x i16]* %7, i64 0, i64 %221
  %230 = bitcast i16* %229 to <8 x i16>*
  store <8 x i16> %225, <8 x i16>* %230, align 16
  %231 = getelementptr inbounds i16, i16* %229, i64 8
  %232 = bitcast i16* %231 to <8 x i16>*
  store <8 x i16> %228, <8 x i16>* %232, align 16
  %233 = or i64 %221, 16
  %234 = getelementptr inbounds i16, i16* %206, i64 %233
  %235 = bitcast i16* %234 to <8 x i16>*
  %236 = load <8 x i16>, <8 x i16>* %235, align 2
  %237 = getelementptr inbounds i16, i16* %234, i64 8
  %238 = bitcast i16* %237 to <8 x i16>*
  %239 = load <8 x i16>, <8 x i16>* %238, align 2
  %240 = getelementptr inbounds [16 x i16], [16 x i16]* %7, i64 0, i64 %233
  %241 = bitcast i16* %240 to <8 x i16>*
  store <8 x i16> %236, <8 x i16>* %241, align 16
  %242 = getelementptr inbounds i16, i16* %240, i64 8
  %243 = bitcast i16* %242 to <8 x i16>*
  store <8 x i16> %239, <8 x i16>* %243, align 16
  %244 = or i64 %221, 32
  %245 = getelementptr inbounds i16, i16* %206, i64 %244
  %246 = bitcast i16* %245 to <8 x i16>*
  %247 = load <8 x i16>, <8 x i16>* %246, align 2
  %248 = getelementptr inbounds i16, i16* %245, i64 8
  %249 = bitcast i16* %248 to <8 x i16>*
  %250 = load <8 x i16>, <8 x i16>* %249, align 2
  %251 = getelementptr inbounds [16 x i16], [16 x i16]* %7, i64 0, i64 %244
  %252 = bitcast i16* %251 to <8 x i16>*
  store <8 x i16> %247, <8 x i16>* %252, align 16
  %253 = getelementptr inbounds i16, i16* %251, i64 8
  %254 = bitcast i16* %253 to <8 x i16>*
  store <8 x i16> %250, <8 x i16>* %254, align 16
  %255 = or i64 %221, 48
  %256 = getelementptr inbounds i16, i16* %206, i64 %255
  %257 = bitcast i16* %256 to <8 x i16>*
  %258 = load <8 x i16>, <8 x i16>* %257, align 2
  %259 = getelementptr inbounds i16, i16* %256, i64 8
  %260 = bitcast i16* %259 to <8 x i16>*
  %261 = load <8 x i16>, <8 x i16>* %260, align 2
  %262 = getelementptr inbounds [16 x i16], [16 x i16]* %7, i64 0, i64 %255
  %263 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %258, <8 x i16>* %263, align 16
  %264 = getelementptr inbounds i16, i16* %262, i64 8
  %265 = bitcast i16* %264 to <8 x i16>*
  store <8 x i16> %261, <8 x i16>* %265, align 16
  %266 = add i64 %221, 64
  %267 = add i64 %222, -4
  %268 = icmp eq i64 %267, 0
  br i1 %268, label %269, label %220, !llvm.loop !10

269:                                              ; preds = %220, %211
  %270 = phi i64 [ 0, %211 ], [ %266, %220 ]
  %271 = icmp eq i64 %216, 0
  br i1 %271, label %288, label %272

272:                                              ; preds = %269, %272
  %273 = phi i64 [ %285, %272 ], [ %270, %269 ]
  %274 = phi i64 [ %286, %272 ], [ %216, %269 ]
  %275 = getelementptr inbounds i16, i16* %206, i64 %273
  %276 = bitcast i16* %275 to <8 x i16>*
  %277 = load <8 x i16>, <8 x i16>* %276, align 2
  %278 = getelementptr inbounds i16, i16* %275, i64 8
  %279 = bitcast i16* %278 to <8 x i16>*
  %280 = load <8 x i16>, <8 x i16>* %279, align 2
  %281 = getelementptr inbounds [16 x i16], [16 x i16]* %7, i64 0, i64 %273
  %282 = bitcast i16* %281 to <8 x i16>*
  store <8 x i16> %277, <8 x i16>* %282, align 16
  %283 = getelementptr inbounds i16, i16* %281, i64 8
  %284 = bitcast i16* %283 to <8 x i16>*
  store <8 x i16> %280, <8 x i16>* %284, align 16
  %285 = add i64 %273, 16
  %286 = add i64 %274, -1
  %287 = icmp eq i64 %286, 0
  br i1 %287, label %288, label %272, !llvm.loop !11

288:                                              ; preds = %272, %269
  %289 = icmp eq i64 %212, %207
  br i1 %289, label %320, label %209

290:                                              ; preds = %199
  %291 = call %struct._cms_curve_struct** @_cmsStageGetPtrToCurveSet(%struct._cmsStage_struct* nonnull %200) #5
  %292 = load i32, i32* %9, align 4
  %293 = icmp eq i32 %292, 0
  br i1 %293, label %320, label %294

294:                                              ; preds = %290, %308
  %295 = phi i64 [ %309, %308 ], [ 0, %290 ]
  %296 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %291, i64 %295
  %297 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %296, align 8
  %298 = call %struct._cms_curve_struct* @cmsReverseToneCurve(%struct._cms_curve_struct* %297) #5
  %299 = icmp eq %struct._cms_curve_struct* %298, null
  %300 = load i16*, i16** %5, align 8
  %301 = getelementptr inbounds i16, i16* %300, i64 %295
  %302 = load i16, i16* %301, align 2
  br i1 %299, label %303, label %305

303:                                              ; preds = %294
  %304 = getelementptr inbounds [16 x i16], [16 x i16]* %7, i64 0, i64 %295
  store i16 %302, i16* %304, align 2
  br label %308

305:                                              ; preds = %294
  %306 = call zeroext i16 @cmsEvalToneCurve16(%struct._cms_curve_struct* nonnull %298, i16 zeroext %302) #5
  %307 = getelementptr inbounds [16 x i16], [16 x i16]* %7, i64 0, i64 %295
  store i16 %306, i16* %307, align 2
  call void @cmsFreeToneCurve(%struct._cms_curve_struct* nonnull %298) #5
  br label %308

308:                                              ; preds = %305, %303
  %309 = add nuw nsw i64 %295, 1
  %310 = load i32, i32* %9, align 4
  %311 = zext i32 %310 to i64
  %312 = icmp ult i64 %309, %311
  br i1 %312, label %294, label %320

313:                                              ; preds = %209, %313
  %314 = phi i64 [ %318, %313 ], [ %210, %209 ]
  %315 = getelementptr inbounds i16, i16* %206, i64 %314
  %316 = load i16, i16* %315, align 2
  %317 = getelementptr inbounds [16 x i16], [16 x i16]* %7, i64 0, i64 %314
  store i16 %316, i16* %317, align 2
  %318 = add nuw nsw i64 %314, 1
  %319 = icmp ult i64 %318, %207
  br i1 %319, label %313, label %320, !llvm.loop !12

320:                                              ; preds = %308, %313, %288, %202, %290
  %321 = phi i32 [ 0, %202 ], [ 0, %290 ], [ %203, %288 ], [ %203, %313 ], [ %310, %308 ]
  %322 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %12, align 8
  %323 = load i32, i32* %10, align 4
  %324 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %322, i64 0, i32 8
  %325 = bitcast i8** %324 to %struct._cmsStageCLutData**
  %326 = load %struct._cmsStageCLutData*, %struct._cmsStageCLutData** %325, align 8
  %327 = getelementptr inbounds %struct._cmsStageCLutData, %struct._cmsStageCLutData* %326, i64 0, i32 1
  %328 = load %struct._cms_interp_struc*, %struct._cms_interp_struc** %327, align 8
  %329 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %322, i64 0, i32 1
  %330 = load i32, i32* %329, align 8
  %331 = icmp eq i32 %330, 1668052340
  br i1 %331, label %335, label %332

332:                                              ; preds = %320
  %333 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %322, i64 0, i32 0
  %334 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %333, align 8
  call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %334, i32 3, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0)) #5
  br label %530

335:                                              ; preds = %320
  switch i32 %323, label %472 [
    i32 4, label %336
    i32 3, label %404
    i32 1, label %455
  ]

336:                                              ; preds = %335
  %337 = load i16, i16* %17, align 16
  %338 = uitofp i16 %337 to double
  %339 = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %328, i64 0, i32 5, i64 0
  %340 = load i32, i32* %339, align 4
  %341 = uitofp i32 %340 to double
  %342 = fmul double %338, %341
  %343 = fdiv double %342, 6.553500e+04
  %344 = load i16, i16* %18, align 2
  %345 = uitofp i16 %344 to double
  %346 = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %328, i64 0, i32 5, i64 1
  %347 = load i32, i32* %346, align 4
  %348 = uitofp i32 %347 to double
  %349 = fmul double %345, %348
  %350 = fdiv double %349, 6.553500e+04
  %351 = load i16, i16* %19, align 4
  %352 = uitofp i16 %351 to double
  %353 = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %328, i64 0, i32 5, i64 2
  %354 = load i32, i32* %353, align 4
  %355 = uitofp i32 %354 to double
  %356 = fmul double %352, %355
  %357 = fdiv double %356, 6.553500e+04
  %358 = load i16, i16* %20, align 2
  %359 = uitofp i16 %358 to double
  %360 = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %328, i64 0, i32 5, i64 3
  %361 = load i32, i32* %360, align 4
  %362 = uitofp i32 %361 to double
  %363 = fmul double %359, %362
  %364 = fdiv double %363, 6.553500e+04
  %365 = call double @llvm.floor.f64(double %343) #5
  %366 = fptosi double %365 to i32
  %367 = call double @llvm.floor.f64(double %350) #5
  %368 = fptosi double %367 to i32
  %369 = call double @llvm.floor.f64(double %357) #5
  %370 = fptosi double %369 to i32
  %371 = call double @llvm.floor.f64(double %364) #5
  %372 = fptosi double %371 to i32
  %373 = sitofp i32 %366 to double
  %374 = fsub double %343, %373
  %375 = fcmp une double %374, 0.000000e+00
  br i1 %375, label %530, label %376

376:                                              ; preds = %336
  %377 = sitofp i32 %368 to double
  %378 = fsub double %350, %377
  %379 = fcmp une double %378, 0.000000e+00
  br i1 %379, label %530, label %380

380:                                              ; preds = %376
  %381 = sitofp i32 %370 to double
  %382 = fsub double %357, %381
  %383 = fcmp une double %382, 0.000000e+00
  br i1 %383, label %530, label %384

384:                                              ; preds = %380
  %385 = sitofp i32 %372 to double
  %386 = fsub double %364, %385
  %387 = fcmp une double %386, 0.000000e+00
  br i1 %387, label %530, label %388

388:                                              ; preds = %384
  %389 = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %328, i64 0, i32 6, i64 3
  %390 = load i32, i32* %389, align 4
  %391 = mul nsw i32 %390, %366
  %392 = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %328, i64 0, i32 6, i64 2
  %393 = load i32, i32* %392, align 4
  %394 = mul nsw i32 %393, %368
  %395 = add nsw i32 %394, %391
  %396 = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %328, i64 0, i32 6, i64 1
  %397 = load i32, i32* %396, align 4
  %398 = mul nsw i32 %397, %370
  %399 = add nsw i32 %395, %398
  %400 = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %328, i64 0, i32 6, i64 0
  %401 = load i32, i32* %400, align 4
  %402 = mul nsw i32 %401, %372
  %403 = add nsw i32 %399, %402
  br label %475

404:                                              ; preds = %335
  %405 = load i16, i16* %17, align 16
  %406 = uitofp i16 %405 to double
  %407 = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %328, i64 0, i32 5, i64 0
  %408 = load i32, i32* %407, align 4
  %409 = uitofp i32 %408 to double
  %410 = fmul double %406, %409
  %411 = fdiv double %410, 6.553500e+04
  %412 = load i16, i16* %18, align 2
  %413 = uitofp i16 %412 to double
  %414 = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %328, i64 0, i32 5, i64 1
  %415 = load i32, i32* %414, align 4
  %416 = uitofp i32 %415 to double
  %417 = fmul double %413, %416
  %418 = fdiv double %417, 6.553500e+04
  %419 = load i16, i16* %19, align 4
  %420 = uitofp i16 %419 to double
  %421 = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %328, i64 0, i32 5, i64 2
  %422 = load i32, i32* %421, align 4
  %423 = uitofp i32 %422 to double
  %424 = fmul double %420, %423
  %425 = fdiv double %424, 6.553500e+04
  %426 = call double @llvm.floor.f64(double %411) #5
  %427 = fptosi double %426 to i32
  %428 = call double @llvm.floor.f64(double %418) #5
  %429 = fptosi double %428 to i32
  %430 = call double @llvm.floor.f64(double %425) #5
  %431 = fptosi double %430 to i32
  %432 = sitofp i32 %427 to double
  %433 = fsub double %411, %432
  %434 = fcmp une double %433, 0.000000e+00
  br i1 %434, label %530, label %435

435:                                              ; preds = %404
  %436 = sitofp i32 %429 to double
  %437 = fsub double %418, %436
  %438 = fcmp une double %437, 0.000000e+00
  br i1 %438, label %530, label %439

439:                                              ; preds = %435
  %440 = sitofp i32 %431 to double
  %441 = fsub double %425, %440
  %442 = fcmp une double %441, 0.000000e+00
  br i1 %442, label %530, label %443

443:                                              ; preds = %439
  %444 = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %328, i64 0, i32 6, i64 2
  %445 = load i32, i32* %444, align 4
  %446 = mul nsw i32 %445, %427
  %447 = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %328, i64 0, i32 6, i64 1
  %448 = load i32, i32* %447, align 4
  %449 = mul nsw i32 %448, %429
  %450 = add nsw i32 %449, %446
  %451 = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %328, i64 0, i32 6, i64 0
  %452 = load i32, i32* %451, align 4
  %453 = mul nsw i32 %452, %431
  %454 = add nsw i32 %450, %453
  br label %475

455:                                              ; preds = %335
  %456 = load i16, i16* %17, align 16
  %457 = uitofp i16 %456 to double
  %458 = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %328, i64 0, i32 5, i64 0
  %459 = load i32, i32* %458, align 4
  %460 = uitofp i32 %459 to double
  %461 = fmul double %457, %460
  %462 = fdiv double %461, 6.553500e+04
  %463 = call double @llvm.floor.f64(double %462) #5
  %464 = fptosi double %463 to i32
  %465 = sitofp i32 %464 to double
  %466 = fsub double %462, %465
  %467 = fcmp une double %466, 0.000000e+00
  br i1 %467, label %530, label %468

468:                                              ; preds = %455
  %469 = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %328, i64 0, i32 6, i64 0
  %470 = load i32, i32* %469, align 4
  %471 = mul nsw i32 %470, %464
  br label %475

472:                                              ; preds = %335
  %473 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %322, i64 0, i32 0
  %474 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %473, align 8
  call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %474, i32 3, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.1, i64 0, i64 0), i32 %323) #5
  br label %530

475:                                              ; preds = %468, %443, %388
  %476 = phi i32 [ %403, %388 ], [ %454, %443 ], [ %471, %468 ]
  %477 = icmp sgt i32 %321, 0
  br i1 %477, label %478, label %530

478:                                              ; preds = %475
  %479 = getelementptr inbounds %struct._cmsStageCLutData, %struct._cmsStageCLutData* %326, i64 0, i32 0, i32 0
  %480 = sext i32 %476 to i64
  %481 = zext i32 %321 to i64
  %482 = add nsw i64 %481, -1
  %483 = and i64 %481, 3
  %484 = icmp ult i64 %482, 3
  br i1 %484, label %516, label %485

485:                                              ; preds = %478
  %486 = sub nsw i64 %481, %483
  br label %487

487:                                              ; preds = %487, %485
  %488 = phi i64 [ 0, %485 ], [ %513, %487 ]
  %489 = phi i64 [ %486, %485 ], [ %514, %487 ]
  %490 = getelementptr inbounds [16 x i16], [16 x i16]* %7, i64 0, i64 %488
  %491 = load i16, i16* %490, align 8
  %492 = load i16*, i16** %479, align 8
  %493 = add nsw i64 %488, %480
  %494 = getelementptr inbounds i16, i16* %492, i64 %493
  store i16 %491, i16* %494, align 2
  %495 = or i64 %488, 1
  %496 = getelementptr inbounds [16 x i16], [16 x i16]* %7, i64 0, i64 %495
  %497 = load i16, i16* %496, align 2
  %498 = load i16*, i16** %479, align 8
  %499 = add nsw i64 %495, %480
  %500 = getelementptr inbounds i16, i16* %498, i64 %499
  store i16 %497, i16* %500, align 2
  %501 = or i64 %488, 2
  %502 = getelementptr inbounds [16 x i16], [16 x i16]* %7, i64 0, i64 %501
  %503 = load i16, i16* %502, align 4
  %504 = load i16*, i16** %479, align 8
  %505 = add nsw i64 %501, %480
  %506 = getelementptr inbounds i16, i16* %504, i64 %505
  store i16 %503, i16* %506, align 2
  %507 = or i64 %488, 3
  %508 = getelementptr inbounds [16 x i16], [16 x i16]* %7, i64 0, i64 %507
  %509 = load i16, i16* %508, align 2
  %510 = load i16*, i16** %479, align 8
  %511 = add nsw i64 %507, %480
  %512 = getelementptr inbounds i16, i16* %510, i64 %511
  store i16 %509, i16* %512, align 2
  %513 = add nuw nsw i64 %488, 4
  %514 = add i64 %489, -4
  %515 = icmp eq i64 %514, 0
  br i1 %515, label %516, label %487

516:                                              ; preds = %487, %478
  %517 = phi i64 [ 0, %478 ], [ %513, %487 ]
  %518 = icmp eq i64 %483, 0
  br i1 %518, label %530, label %519

519:                                              ; preds = %516, %519
  %520 = phi i64 [ %527, %519 ], [ %517, %516 ]
  %521 = phi i64 [ %528, %519 ], [ %483, %516 ]
  %522 = getelementptr inbounds [16 x i16], [16 x i16]* %7, i64 0, i64 %520
  %523 = load i16, i16* %522, align 2
  %524 = load i16*, i16** %479, align 8
  %525 = add nsw i64 %520, %480
  %526 = getelementptr inbounds i16, i16* %524, i64 %525
  store i16 %523, i16* %526, align 2
  %527 = add nuw nsw i64 %520, 1
  %528 = add i64 %521, -1
  %529 = icmp eq i64 %528, 0
  br i1 %529, label %530, label %519, !llvm.loop !13

530:                                              ; preds = %56, %54, %516, %519, %47, %475, %472, %455, %439, %435, %404, %384, %380, %376, %336, %332, %81, %42, %37, %34, %3
  %531 = phi i32 [ 0, %3 ], [ 0, %34 ], [ 0, %37 ], [ 0, %42 ], [ 0, %81 ], [ 1, %332 ], [ 1, %336 ], [ 1, %376 ], [ 1, %380 ], [ 1, %384 ], [ 1, %404 ], [ 1, %435 ], [ 1, %439 ], [ 1, %455 ], [ 1, %472 ], [ 1, %475 ], [ 1, %47 ], [ 1, %519 ], [ 1, %516 ], [ 1, %54 ], [ 1, %56 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #5
  ret i32 %531
}

declare %struct._cms_curve_struct** @_cmsStageGetPtrToCurveSet(%struct._cmsStage_struct*) local_unnamed_addr #1

declare i32 @cmsIsToneCurveLinear(%struct._cms_curve_struct*) local_unnamed_addr #1

declare void @cmsPipelineEvalFloat(float*, float*, %struct._cmsPipeline_struct*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare double @llvm.floor.f64(double) #4

declare i8* @_cmsMallocZero(%struct._cmsContext_struct*, i32) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @Eval16nop1D(i16* nocapture readonly, i16* nocapture, %struct._cms_interp_struc* nocapture readnone) #3 {
  %4 = load i16, i16* %0, align 2
  store i16 %4, i16* %1, align 2
  ret void
}

declare i8* @_cmsCalloc(%struct._cmsContext_struct*, i32, i32) local_unnamed_addr #1

declare void @_cmsFree(%struct._cmsContext_struct*, i8*) local_unnamed_addr #1

declare i8* @_cmsDupMem(%struct._cmsContext_struct*, i8*, i32) local_unnamed_addr #1

declare i32 @_cmsEndPointsBySpace(i32, i16**, i16**, i32*) local_unnamed_addr #1

declare void @cmsPipelineEval16(i16*, i16*, %struct._cmsPipeline_struct*) local_unnamed_addr #1

declare i32 @cmsPipelineCheckAndRetreiveStages(%struct._cmsPipeline_struct*, i32, ...) local_unnamed_addr #1

declare zeroext i16 @cmsEvalToneCurve16(%struct._cms_curve_struct*, i16 zeroext) local_unnamed_addr #1

declare %struct._cms_curve_struct* @cmsReverseToneCurve(%struct._cms_curve_struct*) local_unnamed_addr #1

declare void @cmsFreeToneCurve(%struct._cms_curve_struct*) local_unnamed_addr #1

declare void @cmsSignalError(%struct._cmsContext_struct*, i32, i8*, ...) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal i32 @OptimizeByJoiningCurves(%struct._cmsPipeline_struct** nocapture, i32, i32* nocapture readonly, i32* nocapture readonly, i32* nocapture) #0 {
  %6 = alloca [16 x float], align 16
  %7 = alloca [16 x float], align 16
  %8 = bitcast [16 x float]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %8) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -1, i64 64, i1 false)
  %9 = bitcast [16 x float]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %9) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -1, i64 64, i1 false)
  %10 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %0, align 8
  %11 = load i32, i32* %2, align 4
  %12 = tail call i32 @_cmsFormatterIsFloat(i32 %11) #5
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %205

14:                                               ; preds = %5
  %15 = load i32, i32* %3, align 4
  %16 = tail call i32 @_cmsFormatterIsFloat(i32 %15) #5
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %205

18:                                               ; preds = %14
  %19 = tail call %struct._cmsStage_struct* @cmsPipelineGetPtrToFirstStage(%struct._cmsPipeline_struct* %10) #5
  %20 = icmp eq %struct._cmsStage_struct* %19, null
  br i1 %20, label %28, label %21

21:                                               ; preds = %18, %25
  %22 = phi %struct._cmsStage_struct* [ %26, %25 ], [ %19, %18 ]
  %23 = tail call i32 @cmsStageType(%struct._cmsStage_struct* nonnull %22) #5
  %24 = icmp eq i32 %23, 1668707188
  br i1 %24, label %25, label %205

25:                                               ; preds = %21
  %26 = tail call %struct._cmsStage_struct* @cmsStageNext(%struct._cmsStage_struct* nonnull %22) #5
  %27 = icmp eq %struct._cmsStage_struct* %26, null
  br i1 %27, label %28, label %21

28:                                               ; preds = %25, %18
  %29 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %10, i64 0, i32 8
  %30 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %29, align 8
  %31 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %10, i64 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %10, i64 0, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = tail call %struct._cmsPipeline_struct* @cmsPipelineAlloc(%struct._cmsContext_struct* %30, i32 %32, i32 %34) #5
  %36 = icmp eq %struct._cmsPipeline_struct* %35, null
  br i1 %36, label %205, label %37

37:                                               ; preds = %28
  %38 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %29, align 8
  %39 = load i32, i32* %31, align 8
  %40 = tail call i8* @_cmsCalloc(%struct._cmsContext_struct* %38, i32 %39, i32 8) #5
  %41 = bitcast i8* %40 to %struct._cms_curve_struct**
  %42 = icmp eq i8* %40, null
  br i1 %42, label %204, label %43

43:                                               ; preds = %37
  %44 = load i32, i32* %31, align 8
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %50, label %54

46:                                               ; preds = %54
  %47 = load i32, i32* %31, align 8
  %48 = zext i32 %47 to i64
  %49 = icmp ult i64 %60, %48
  br i1 %49, label %54, label %50

50:                                               ; preds = %46, %43
  %51 = phi i32 [ 0, %43 ], [ %47, %46 ]
  %52 = getelementptr inbounds [16 x float], [16 x float]* %6, i64 0, i64 0
  %53 = getelementptr inbounds [16 x float], [16 x float]* %7, i64 0, i64 0
  br label %61

54:                                               ; preds = %43, %46
  %55 = phi i64 [ %60, %46 ], [ 0, %43 ]
  %56 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %29, align 8
  %57 = tail call %struct._cms_curve_struct* @cmsBuildTabulatedToneCurve16(%struct._cmsContext_struct* %56, i32 4096, i16* null) #5
  %58 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %41, i64 %55
  store %struct._cms_curve_struct* %57, %struct._cms_curve_struct** %58, align 8
  %59 = icmp eq %struct._cms_curve_struct* %57, null
  %60 = add nuw nsw i64 %55, 1
  br i1 %59, label %186, label %46

61:                                               ; preds = %107, %50
  %62 = phi i32 [ %51, %50 ], [ %108, %107 ]
  %63 = phi i64 [ 0, %50 ], [ %109, %107 ]
  %64 = icmp eq i32 %62, 0
  br i1 %64, label %77, label %65

65:                                               ; preds = %61
  %66 = trunc i64 %63 to i32
  %67 = uitofp i32 %66 to double
  %68 = fdiv double %67, 4.095000e+03
  %69 = fptrunc double %68 to float
  br label %70

70:                                               ; preds = %65, %70
  %71 = phi i64 [ 0, %65 ], [ %73, %70 ]
  %72 = getelementptr inbounds [16 x float], [16 x float]* %6, i64 0, i64 %71
  store float %69, float* %72, align 4
  %73 = add nuw nsw i64 %71, 1
  %74 = load i32, i32* %31, align 8
  %75 = zext i32 %74 to i64
  %76 = icmp ult i64 %73, %75
  br i1 %76, label %70, label %77

77:                                               ; preds = %70, %61
  call void @cmsPipelineEvalFloat(float* nonnull %52, float* nonnull %53, %struct._cmsPipeline_struct* %10) #5
  %78 = load i32, i32* %31, align 8
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %107, label %80

80:                                               ; preds = %77, %96
  %81 = phi i64 [ %103, %96 ], [ 0, %77 ]
  %82 = getelementptr inbounds [16 x float], [16 x float]* %7, i64 0, i64 %81
  %83 = load float, float* %82, align 4
  %84 = fpext float %83 to double
  %85 = fmul double %84, 6.553500e+04
  %86 = fadd double %85, 5.000000e-01
  %87 = fcmp ugt double %86, 0.000000e+00
  br i1 %87, label %88, label %96

88:                                               ; preds = %80
  %89 = fcmp ult double %86, 6.553500e+04
  br i1 %89, label %90, label %96

90:                                               ; preds = %88
  %91 = fadd double %86, -3.276700e+04
  %92 = call double @llvm.floor.f64(double %91) #5
  %93 = fptosi double %92 to i32
  %94 = trunc i32 %93 to i16
  %95 = add i16 %94, 32767
  br label %96

96:                                               ; preds = %80, %88, %90
  %97 = phi i16 [ %95, %90 ], [ 0, %80 ], [ -1, %88 ]
  %98 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %41, i64 %81
  %99 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %98, align 8
  %100 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %99, i64 0, i32 6
  %101 = load i16*, i16** %100, align 8
  %102 = getelementptr inbounds i16, i16* %101, i64 %63
  store i16 %97, i16* %102, align 2
  %103 = add nuw nsw i64 %81, 1
  %104 = load i32, i32* %31, align 8
  %105 = zext i32 %104 to i64
  %106 = icmp ult i64 %103, %105
  br i1 %106, label %80, label %107

107:                                              ; preds = %96, %77
  %108 = phi i32 [ 0, %77 ], [ %104, %96 ]
  %109 = add nuw nsw i64 %63, 1
  %110 = icmp eq i64 %109, 4096
  br i1 %110, label %111, label %61

111:                                              ; preds = %107
  %112 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %29, align 8
  %113 = call %struct._cmsStage_struct* @cmsStageAllocToneCurves(%struct._cmsContext_struct* %112, i32 %108, %struct._cms_curve_struct** nonnull %41) #5
  %114 = icmp eq %struct._cmsStage_struct* %113, null
  br i1 %114, label %186, label %115

115:                                              ; preds = %111
  %116 = load i32, i32* %31, align 8
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %126, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %122, %118 ], [ 0, %115 ]
  %120 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %41, i64 %119
  %121 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %120, align 8
  call void @cmsFreeToneCurve(%struct._cms_curve_struct* %121) #5
  store %struct._cms_curve_struct* null, %struct._cms_curve_struct** %120, align 8
  %122 = add nuw nsw i64 %119, 1
  %123 = load i32, i32* %31, align 8
  %124 = zext i32 %123 to i64
  %125 = icmp ult i64 %122, %124
  br i1 %125, label %118, label %126

126:                                              ; preds = %118, %115
  %127 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %29, align 8
  call void @_cmsFree(%struct._cmsContext_struct* %127, i8* nonnull %40) #5
  %128 = call %struct._cms_curve_struct** @_cmsStageGetPtrToCurveSet(%struct._cmsStage_struct* nonnull %113) #5
  %129 = icmp eq %struct._cms_curve_struct** %128, null
  br i1 %129, label %144, label %130

130:                                              ; preds = %126
  %131 = call i32 @cmsStageOutputChannels(%struct._cmsStage_struct* nonnull %113) #5
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %173, label %133

133:                                              ; preds = %130
  %134 = zext i32 %131 to i64
  br label %137

135:                                              ; preds = %137
  %136 = icmp eq i64 %143, %134
  br i1 %136, label %173, label %137

137:                                              ; preds = %135, %133
  %138 = phi i64 [ 0, %133 ], [ %143, %135 ]
  %139 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %128, i64 %138
  %140 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %139, align 8
  %141 = call i32 @cmsIsToneCurveLinear(%struct._cms_curve_struct* %140) #5
  %142 = icmp eq i32 %141, 0
  %143 = add nuw nsw i64 %138, 1
  br i1 %142, label %144, label %135

144:                                              ; preds = %137, %126
  %145 = call i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct* nonnull %35, i32 0, %struct._cmsStage_struct* nonnull %113) #5
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %185, label %147

147:                                              ; preds = %144
  %148 = call i8* @cmsStageData(%struct._cmsStage_struct* nonnull %113) #5
  %149 = load i32, i32* %2, align 4
  %150 = call i32 @_cmsFormatterIs8bit(i32 %149) #5
  %151 = icmp eq i32 %150, 0
  %152 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %35, i64 0, i32 8
  %153 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %152, align 8
  %154 = bitcast i8* %148 to i32*
  %155 = load i32, i32* %154, align 8
  %156 = getelementptr inbounds i8, i8* %148, i64 8
  %157 = bitcast i8* %156 to %struct._cms_curve_struct***
  %158 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %157, align 8
  br i1 %151, label %166, label %159

159:                                              ; preds = %147
  %160 = call fastcc %struct.Curves16Data* @CurvesAlloc(%struct._cmsContext_struct* %153, i32 %155, i32 256, %struct._cms_curve_struct** %158)
  %161 = icmp eq %struct.Curves16Data* %160, null
  br i1 %161, label %204, label %162

162:                                              ; preds = %159
  %163 = load i32, i32* %4, align 4
  %164 = or i32 %163, 64
  store i32 %164, i32* %4, align 4
  %165 = bitcast %struct.Curves16Data* %160 to i8*
  call void @_cmsPipelineSetOptimizationParameters(%struct._cmsPipeline_struct* nonnull %35, void (i16*, i16*, i8*)* nonnull @FastEvaluateCurves8, i8* nonnull %165, void (%struct._cmsContext_struct*, i8*)* nonnull @CurvesFree, i8* (%struct._cmsContext_struct*, i8*)* nonnull @CurvesDup) #5
  br label %184

166:                                              ; preds = %147
  %167 = call fastcc %struct.Curves16Data* @CurvesAlloc(%struct._cmsContext_struct* %153, i32 %155, i32 65536, %struct._cms_curve_struct** %158)
  %168 = icmp eq %struct.Curves16Data* %167, null
  br i1 %168, label %204, label %169

169:                                              ; preds = %166
  %170 = load i32, i32* %4, align 4
  %171 = or i32 %170, 64
  store i32 %171, i32* %4, align 4
  %172 = bitcast %struct.Curves16Data* %167 to i8*
  call void @_cmsPipelineSetOptimizationParameters(%struct._cmsPipeline_struct* nonnull %35, void (i16*, i16*, i8*)* nonnull @FastEvaluateCurves16, i8* nonnull %172, void (%struct._cmsContext_struct*, i8*)* nonnull @CurvesFree, i8* (%struct._cmsContext_struct*, i8*)* nonnull @CurvesDup) #5
  br label %184

173:                                              ; preds = %135, %130
  call void @cmsStageFree(%struct._cmsStage_struct* nonnull %113) #5
  %174 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %35, i64 0, i32 8
  %175 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %174, align 8
  %176 = load i32, i32* %31, align 8
  %177 = call %struct._cmsStage_struct* @cmsStageAllocIdentity(%struct._cmsContext_struct* %175, i32 %176) #5
  %178 = call i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct* nonnull %35, i32 0, %struct._cmsStage_struct* %177) #5
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %204, label %180

180:                                              ; preds = %173
  %181 = load i32, i32* %4, align 4
  %182 = or i32 %181, 64
  store i32 %182, i32* %4, align 4
  %183 = bitcast %struct._cmsPipeline_struct* %35 to i8*
  call void @_cmsPipelineSetOptimizationParameters(%struct._cmsPipeline_struct* nonnull %35, void (i16*, i16*, i8*)* nonnull @FastIdentity16, i8* nonnull %183, void (%struct._cmsContext_struct*, i8*)* null, i8* (%struct._cmsContext_struct*, i8*)* null) #5
  br label %184

184:                                              ; preds = %169, %162, %180
  call void @cmsPipelineFree(%struct._cmsPipeline_struct* %10) #5
  store %struct._cmsPipeline_struct* %35, %struct._cmsPipeline_struct** %0, align 8
  br label %205

185:                                              ; preds = %144
  call void @cmsStageFree(%struct._cmsStage_struct* nonnull %113) #5
  br label %204

186:                                              ; preds = %54, %111
  %187 = load i32, i32* %31, align 8
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %202, label %189

189:                                              ; preds = %186, %197
  %190 = phi i32 [ %198, %197 ], [ %187, %186 ]
  %191 = phi i64 [ %199, %197 ], [ 0, %186 ]
  %192 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %41, i64 %191
  %193 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %192, align 8
  %194 = icmp eq %struct._cms_curve_struct* %193, null
  br i1 %194, label %197, label %195

195:                                              ; preds = %189
  call void @cmsFreeToneCurve(%struct._cms_curve_struct* nonnull %193) #5
  %196 = load i32, i32* %31, align 8
  br label %197

197:                                              ; preds = %189, %195
  %198 = phi i32 [ %190, %189 ], [ %196, %195 ]
  %199 = add nuw nsw i64 %191, 1
  %200 = zext i32 %198 to i64
  %201 = icmp ult i64 %199, %200
  br i1 %201, label %189, label %202

202:                                              ; preds = %197, %186
  %203 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %29, align 8
  call void @_cmsFree(%struct._cmsContext_struct* %203, i8* nonnull %40) #5
  br label %204

204:                                              ; preds = %37, %173, %159, %166, %185, %202
  call void @cmsPipelineFree(%struct._cmsPipeline_struct* nonnull %35) #5
  br label %205

205:                                              ; preds = %21, %28, %5, %14, %204, %184
  %206 = phi i32 [ 0, %204 ], [ 1, %184 ], [ 0, %14 ], [ 0, %5 ], [ 0, %28 ], [ 0, %21 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %8) #5
  ret i32 %206
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @OptimizeMatrixShaper(%struct._cmsPipeline_struct** nocapture, i32, i32* nocapture readonly, i32* nocapture, i32* nocapture) #0 {
  %6 = alloca %struct._cmsStage_struct*, align 8
  %7 = alloca %struct._cmsStage_struct*, align 8
  %8 = alloca %struct._cmsStage_struct*, align 8
  %9 = alloca %struct._cmsStage_struct*, align 8
  %10 = alloca %struct.cmsMAT3, align 8
  %11 = alloca %struct._cmsPipeline_struct*, align 8
  %12 = bitcast %struct._cmsStage_struct** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #5
  store %struct._cmsStage_struct* inttoptr (i64 -6148914691236517206 to %struct._cmsStage_struct*), %struct._cmsStage_struct** %6, align 8
  %13 = bitcast %struct._cmsStage_struct** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #5
  store %struct._cmsStage_struct* inttoptr (i64 -6148914691236517206 to %struct._cmsStage_struct*), %struct._cmsStage_struct** %7, align 8
  %14 = bitcast %struct._cmsStage_struct** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #5
  store %struct._cmsStage_struct* inttoptr (i64 -6148914691236517206 to %struct._cmsStage_struct*), %struct._cmsStage_struct** %8, align 8
  %15 = bitcast %struct._cmsStage_struct** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #5
  store %struct._cmsStage_struct* inttoptr (i64 -6148914691236517206 to %struct._cmsStage_struct*), %struct._cmsStage_struct** %9, align 8
  %16 = bitcast %struct.cmsMAT3* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %16) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -1, i64 72, i1 false)
  %17 = bitcast %struct._cmsPipeline_struct** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #5
  store %struct._cmsPipeline_struct* inttoptr (i64 -6148914691236517206 to %struct._cmsPipeline_struct*), %struct._cmsPipeline_struct** %11, align 8
  %18 = load i32, i32* %2, align 4
  %19 = and i32 %18, 120
  %20 = icmp eq i32 %19, 24
  br i1 %20, label %21, label %385

21:                                               ; preds = %5
  %22 = load i32, i32* %3, align 4
  %23 = and i32 %22, 120
  %24 = icmp eq i32 %23, 24
  br i1 %24, label %25, label %385

25:                                               ; preds = %21
  %26 = tail call i32 @_cmsFormatterIs8bit(i32 %18) #5
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %385, label %28

28:                                               ; preds = %25
  %29 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %0, align 8
  %30 = call i32 (%struct._cmsPipeline_struct*, i32, ...) @cmsPipelineCheckAndRetreiveStages(%struct._cmsPipeline_struct* %29, i32 4, i32 1668707188, i32 1835103334, i32 1835103334, i32 1668707188, %struct._cmsStage_struct** nonnull %6, %struct._cmsStage_struct** nonnull %8, %struct._cmsStage_struct** nonnull %9, %struct._cmsStage_struct** nonnull %7) #5
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %49, label %32

32:                                               ; preds = %28
  %33 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %8, align 8
  %34 = call i8* @cmsStageData(%struct._cmsStage_struct* %33) #5
  %35 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %9, align 8
  %36 = call i8* @cmsStageData(%struct._cmsStage_struct* %35) #5
  %37 = getelementptr inbounds i8, i8* %34, i64 8
  %38 = bitcast i8* %37 to double**
  %39 = load double*, double** %38, align 8
  %40 = icmp eq double* %39, null
  br i1 %40, label %41, label %385

41:                                               ; preds = %32
  %42 = bitcast i8* %36 to %struct.cmsMAT3**
  %43 = load %struct.cmsMAT3*, %struct.cmsMAT3** %42, align 8
  %44 = bitcast i8* %34 to %struct.cmsMAT3**
  %45 = load %struct.cmsMAT3*, %struct.cmsMAT3** %44, align 8
  call void @_cmsMAT3per(%struct.cmsMAT3* nonnull %10, %struct.cmsMAT3* %43, %struct.cmsMAT3* %45) #5
  %46 = getelementptr inbounds i8, i8* %36, i64 8
  %47 = bitcast i8* %46 to double**
  %48 = load double*, double** %47, align 8
  br label %60

49:                                               ; preds = %28
  %50 = call i32 (%struct._cmsPipeline_struct*, i32, ...) @cmsPipelineCheckAndRetreiveStages(%struct._cmsPipeline_struct* %29, i32 3, i32 1668707188, i32 1835103334, i32 1668707188, %struct._cmsStage_struct** nonnull %6, %struct._cmsStage_struct** nonnull %8, %struct._cmsStage_struct** nonnull %7) #5
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %385, label %52

52:                                               ; preds = %49
  %53 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %8, align 8
  %54 = call i8* @cmsStageData(%struct._cmsStage_struct* %53) #5
  %55 = bitcast i8* %54 to i8**
  %56 = load i8*, i8** %55, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %16, i8* align 8 %56, i64 72, i1 false)
  %57 = getelementptr inbounds i8, i8* %54, i64 8
  %58 = bitcast i8* %57 to double**
  %59 = load double*, double** %58, align 8
  br label %60

60:                                               ; preds = %41, %52
  %61 = phi double* [ %48, %41 ], [ %59, %52 ]
  %62 = call i32 @_cmsMAT3isIdentity(%struct.cmsMAT3* nonnull %10) #5
  %63 = icmp ne i32 %62, 0
  %64 = icmp eq double* %61, null
  %65 = and i1 %64, %63
  %66 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %29, i64 0, i32 8
  %67 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %66, align 8
  %68 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %29, i64 0, i32 1
  %69 = load i32, i32* %68, align 8
  %70 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %29, i64 0, i32 2
  %71 = load i32, i32* %70, align 4
  %72 = call %struct._cmsPipeline_struct* @cmsPipelineAlloc(%struct._cmsContext_struct* %67, i32 %69, i32 %71) #5
  store %struct._cmsPipeline_struct* %72, %struct._cmsPipeline_struct** %11, align 8
  %73 = icmp eq %struct._cmsPipeline_struct* %72, null
  %74 = ptrtoint %struct._cmsPipeline_struct* %72 to i64
  br i1 %73, label %385, label %75

75:                                               ; preds = %60
  %76 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %6, align 8
  %77 = call %struct._cmsStage_struct* @cmsStageDup(%struct._cmsStage_struct* %76) #5
  %78 = call i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct* nonnull %72, i32 0, %struct._cmsStage_struct* %77) #5
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %384, label %80

80:                                               ; preds = %75
  br i1 %65, label %88, label %81

81:                                               ; preds = %80
  %82 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %72, i64 0, i32 8
  %83 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %82, align 8
  %84 = getelementptr inbounds %struct.cmsMAT3, %struct.cmsMAT3* %10, i64 0, i32 0, i64 0, i32 0, i64 0
  %85 = call %struct._cmsStage_struct* @cmsStageAllocMatrix(%struct._cmsContext_struct* %83, i32 3, i32 3, double* nonnull %84, double* %61) #5
  %86 = call i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct* nonnull %72, i32 1, %struct._cmsStage_struct* %85) #5
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %384, label %88

88:                                               ; preds = %81, %80
  %89 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %7, align 8
  %90 = call %struct._cmsStage_struct* @cmsStageDup(%struct._cmsStage_struct* %89) #5
  %91 = call i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct* nonnull %72, i32 1, %struct._cmsStage_struct* %90) #5
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %384, label %93

93:                                               ; preds = %88
  br i1 %65, label %94, label %98

94:                                               ; preds = %93
  %95 = call i32 @OptimizeByJoiningCurves(%struct._cmsPipeline_struct** nonnull %11, i32 %1, i32* %2, i32* %3, i32* %4)
  %96 = bitcast %struct._cmsPipeline_struct** %11 to i64*
  %97 = load i64, i64* %96, align 8
  br label %381

98:                                               ; preds = %93
  %99 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %6, align 8
  %100 = call i8* @cmsStageData(%struct._cmsStage_struct* %99) #5
  %101 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %7, align 8
  %102 = call i8* @cmsStageData(%struct._cmsStage_struct* %101) #5
  %103 = load i32, i32* %4, align 4
  %104 = or i32 %103, 64
  store i32 %104, i32* %4, align 4
  %105 = getelementptr inbounds i8, i8* %100, i64 8
  %106 = bitcast i8* %105 to %struct._cms_curve_struct***
  %107 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %106, align 8
  %108 = getelementptr inbounds i8, i8* %102, i64 8
  %109 = bitcast i8* %108 to %struct._cms_curve_struct***
  %110 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %109, align 8
  %111 = load i32, i32* %3, align 4
  %112 = call i32 @_cmsFormatterIs8bit(i32 %111) #5
  %113 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %72, i64 0, i32 8
  %114 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %113, align 8
  %115 = call i8* @_cmsMalloc(%struct._cmsContext_struct* %114, i32 101440) #5
  %116 = icmp eq i8* %115, null
  br i1 %116, label %381, label %117

117:                                              ; preds = %98
  %118 = bitcast %struct._cmsContext_struct** %113 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast i8* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds i8, i8* %115, i64 8
  %122 = bitcast i8* %121 to i32*
  %123 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %107, align 8
  br label %124

124:                                              ; preds = %138, %117
  %125 = phi i64 [ 0, %117 ], [ %141, %138 ]
  %126 = trunc i64 %125 to i32
  %127 = sitofp i32 %126 to double
  %128 = fdiv double %127, 2.550000e+02
  %129 = fptrunc double %128 to float
  %130 = call float @cmsEvalToneCurveFloat(%struct._cms_curve_struct* %123, float %129) #5
  %131 = fcmp olt float %130, 1.310720e+05
  br i1 %131, label %132, label %138

132:                                              ; preds = %124
  %133 = fpext float %130 to double
  %134 = fmul double %133, 1.638400e+04
  %135 = fadd double %134, 5.000000e-01
  %136 = call double @llvm.floor.f64(double %135) #5
  %137 = fptosi double %136 to i32
  br label %138

138:                                              ; preds = %132, %124
  %139 = phi i32 [ %137, %132 ], [ 2147483647, %124 ]
  %140 = getelementptr inbounds i32, i32* %122, i64 %125
  store i32 %139, i32* %140, align 4
  %141 = add nuw nsw i64 %125, 1
  %142 = icmp eq i64 %141, 256
  br i1 %142, label %143, label %124

143:                                              ; preds = %138
  %144 = getelementptr inbounds i8, i8* %115, i64 1032
  %145 = bitcast i8* %144 to i32*
  %146 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %107, i64 1
  %147 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %146, align 8
  br label %148

148:                                              ; preds = %162, %143
  %149 = phi i64 [ 0, %143 ], [ %165, %162 ]
  %150 = trunc i64 %149 to i32
  %151 = sitofp i32 %150 to double
  %152 = fdiv double %151, 2.550000e+02
  %153 = fptrunc double %152 to float
  %154 = call float @cmsEvalToneCurveFloat(%struct._cms_curve_struct* %147, float %153) #5
  %155 = fcmp olt float %154, 1.310720e+05
  br i1 %155, label %156, label %162

156:                                              ; preds = %148
  %157 = fpext float %154 to double
  %158 = fmul double %157, 1.638400e+04
  %159 = fadd double %158, 5.000000e-01
  %160 = call double @llvm.floor.f64(double %159) #5
  %161 = fptosi double %160 to i32
  br label %162

162:                                              ; preds = %156, %148
  %163 = phi i32 [ %161, %156 ], [ 2147483647, %148 ]
  %164 = getelementptr inbounds i32, i32* %145, i64 %149
  store i32 %163, i32* %164, align 4
  %165 = add nuw nsw i64 %149, 1
  %166 = icmp eq i64 %165, 256
  br i1 %166, label %167, label %148

167:                                              ; preds = %162
  %168 = getelementptr inbounds i8, i8* %115, i64 2056
  %169 = bitcast i8* %168 to i32*
  %170 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %107, i64 2
  %171 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %170, align 8
  br label %172

172:                                              ; preds = %186, %167
  %173 = phi i64 [ 0, %167 ], [ %189, %186 ]
  %174 = trunc i64 %173 to i32
  %175 = sitofp i32 %174 to double
  %176 = fdiv double %175, 2.550000e+02
  %177 = fptrunc double %176 to float
  %178 = call float @cmsEvalToneCurveFloat(%struct._cms_curve_struct* %171, float %177) #5
  %179 = fcmp olt float %178, 1.310720e+05
  br i1 %179, label %180, label %186

180:                                              ; preds = %172
  %181 = fpext float %178 to double
  %182 = fmul double %181, 1.638400e+04
  %183 = fadd double %182, 5.000000e-01
  %184 = call double @llvm.floor.f64(double %183) #5
  %185 = fptosi double %184 to i32
  br label %186

186:                                              ; preds = %180, %172
  %187 = phi i32 [ %185, %180 ], [ 2147483647, %172 ]
  %188 = getelementptr inbounds i32, i32* %169, i64 %173
  store i32 %187, i32* %188, align 4
  %189 = add nuw nsw i64 %173, 1
  %190 = icmp eq i64 %189, 256
  br i1 %190, label %191, label %172

191:                                              ; preds = %186
  %192 = getelementptr inbounds i8, i8* %115, i64 3128
  %193 = bitcast i8* %192 to i16*
  %194 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %110, align 8
  %195 = icmp eq i32 %112, 0
  br label %196

196:                                              ; preds = %229, %191
  %197 = phi i64 [ 0, %191 ], [ %232, %229 ]
  %198 = trunc i64 %197 to i32
  %199 = sitofp i32 %198 to double
  %200 = fmul double %199, 0x3F10000000000000
  %201 = fptrunc double %200 to float
  %202 = call float @cmsEvalToneCurveFloat(%struct._cms_curve_struct* %194, float %201) #5
  %203 = fcmp olt float %202, 0.000000e+00
  %204 = select i1 %203, float 0.000000e+00, float %202
  %205 = fcmp ogt float %204, 1.000000e+00
  %206 = select i1 %205, float 1.000000e+00, float %204
  %207 = fpext float %206 to double
  %208 = fmul double %207, 6.553500e+04
  %209 = fadd double %208, 5.000000e-01
  %210 = fcmp ugt double %209, 0.000000e+00
  br i1 %210, label %211, label %219

211:                                              ; preds = %196
  %212 = fcmp ult double %209, 6.553500e+04
  br i1 %212, label %213, label %219

213:                                              ; preds = %211
  %214 = fadd double %209, -3.276700e+04
  %215 = call double @llvm.floor.f64(double %214) #5
  %216 = fptosi double %215 to i32
  %217 = trunc i32 %216 to i16
  %218 = add i16 %217, 32767
  br label %219

219:                                              ; preds = %213, %211, %196
  %220 = phi i16 [ %218, %213 ], [ 0, %196 ], [ -1, %211 ]
  br i1 %195, label %229, label %221

221:                                              ; preds = %219
  %222 = zext i16 %220 to i32
  %223 = mul nuw i32 %222, 65281
  %224 = add nuw i32 %223, 8388608
  %225 = lshr i32 %224, 24
  %226 = shl nuw nsw i32 %225, 8
  %227 = or i32 %226, %225
  %228 = trunc i32 %227 to i16
  br label %229

229:                                              ; preds = %221, %219
  %230 = phi i16 [ %228, %221 ], [ %220, %219 ]
  %231 = getelementptr inbounds i16, i16* %193, i64 %197
  store i16 %230, i16* %231, align 2
  %232 = add nuw nsw i64 %197, 1
  %233 = icmp eq i64 %232, 16385
  br i1 %233, label %234, label %196

234:                                              ; preds = %229
  %235 = getelementptr inbounds i8, i8* %115, i64 35898
  %236 = bitcast i8* %235 to i16*
  %237 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %110, i64 1
  %238 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %237, align 8
  br label %239

239:                                              ; preds = %272, %234
  %240 = phi i64 [ 0, %234 ], [ %275, %272 ]
  %241 = trunc i64 %240 to i32
  %242 = sitofp i32 %241 to double
  %243 = fmul double %242, 0x3F10000000000000
  %244 = fptrunc double %243 to float
  %245 = call float @cmsEvalToneCurveFloat(%struct._cms_curve_struct* %238, float %244) #5
  %246 = fcmp olt float %245, 0.000000e+00
  %247 = select i1 %246, float 0.000000e+00, float %245
  %248 = fcmp ogt float %247, 1.000000e+00
  %249 = select i1 %248, float 1.000000e+00, float %247
  %250 = fpext float %249 to double
  %251 = fmul double %250, 6.553500e+04
  %252 = fadd double %251, 5.000000e-01
  %253 = fcmp ugt double %252, 0.000000e+00
  br i1 %253, label %254, label %262

254:                                              ; preds = %239
  %255 = fcmp ult double %252, 6.553500e+04
  br i1 %255, label %256, label %262

256:                                              ; preds = %254
  %257 = fadd double %252, -3.276700e+04
  %258 = call double @llvm.floor.f64(double %257) #5
  %259 = fptosi double %258 to i32
  %260 = trunc i32 %259 to i16
  %261 = add i16 %260, 32767
  br label %262

262:                                              ; preds = %256, %254, %239
  %263 = phi i16 [ %261, %256 ], [ 0, %239 ], [ -1, %254 ]
  br i1 %195, label %272, label %264

264:                                              ; preds = %262
  %265 = zext i16 %263 to i32
  %266 = mul nuw i32 %265, 65281
  %267 = add nuw i32 %266, 8388608
  %268 = lshr i32 %267, 24
  %269 = shl nuw nsw i32 %268, 8
  %270 = or i32 %269, %268
  %271 = trunc i32 %270 to i16
  br label %272

272:                                              ; preds = %264, %262
  %273 = phi i16 [ %271, %264 ], [ %263, %262 ]
  %274 = getelementptr inbounds i16, i16* %236, i64 %240
  store i16 %273, i16* %274, align 2
  %275 = add nuw nsw i64 %240, 1
  %276 = icmp eq i64 %275, 16385
  br i1 %276, label %277, label %239

277:                                              ; preds = %272
  %278 = getelementptr inbounds i8, i8* %115, i64 68668
  %279 = bitcast i8* %278 to i16*
  %280 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %110, i64 2
  %281 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %280, align 8
  br label %282

282:                                              ; preds = %315, %277
  %283 = phi i64 [ 0, %277 ], [ %318, %315 ]
  %284 = trunc i64 %283 to i32
  %285 = sitofp i32 %284 to double
  %286 = fmul double %285, 0x3F10000000000000
  %287 = fptrunc double %286 to float
  %288 = call float @cmsEvalToneCurveFloat(%struct._cms_curve_struct* %281, float %287) #5
  %289 = fcmp olt float %288, 0.000000e+00
  %290 = select i1 %289, float 0.000000e+00, float %288
  %291 = fcmp ogt float %290, 1.000000e+00
  %292 = select i1 %291, float 1.000000e+00, float %290
  %293 = fpext float %292 to double
  %294 = fmul double %293, 6.553500e+04
  %295 = fadd double %294, 5.000000e-01
  %296 = fcmp ugt double %295, 0.000000e+00
  br i1 %296, label %297, label %305

297:                                              ; preds = %282
  %298 = fcmp ult double %295, 6.553500e+04
  br i1 %298, label %299, label %305

299:                                              ; preds = %297
  %300 = fadd double %295, -3.276700e+04
  %301 = call double @llvm.floor.f64(double %300) #5
  %302 = fptosi double %301 to i32
  %303 = trunc i32 %302 to i16
  %304 = add i16 %303, 32767
  br label %305

305:                                              ; preds = %299, %297, %282
  %306 = phi i16 [ %304, %299 ], [ 0, %282 ], [ -1, %297 ]
  br i1 %195, label %315, label %307

307:                                              ; preds = %305
  %308 = zext i16 %306 to i32
  %309 = mul nuw i32 %308, 65281
  %310 = add nuw i32 %309, 8388608
  %311 = lshr i32 %310, 24
  %312 = shl nuw nsw i32 %311, 8
  %313 = or i32 %312, %311
  %314 = trunc i32 %313 to i16
  br label %315

315:                                              ; preds = %307, %305
  %316 = phi i16 [ %314, %307 ], [ %306, %305 ]
  %317 = getelementptr inbounds i16, i16* %279, i64 %283
  store i16 %316, i16* %317, align 2
  %318 = add nuw nsw i64 %283, 1
  %319 = icmp eq i64 %318, 16385
  br i1 %319, label %320, label %282

320:                                              ; preds = %315
  %321 = getelementptr inbounds i8, i8* %115, i64 3080
  %322 = bitcast %struct.cmsMAT3* %10 to <4 x double>*
  %323 = load <4 x double>, <4 x double>* %322, align 8
  %324 = fmul <4 x double> %323, <double 1.638400e+04, double 1.638400e+04, double 1.638400e+04, double 1.638400e+04>
  %325 = fadd <4 x double> %324, <double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01>
  %326 = call <4 x double> @llvm.floor.v4f64(<4 x double> %325)
  %327 = fptosi <4 x double> %326 to <4 x i32>
  %328 = bitcast i8* %321 to <4 x i32>*
  store <4 x i32> %327, <4 x i32>* %328, align 4
  %329 = getelementptr inbounds %struct.cmsMAT3, %struct.cmsMAT3* %10, i64 0, i32 0, i64 1, i32 0, i64 1
  %330 = getelementptr inbounds i8, i8* %115, i64 3096
  %331 = bitcast double* %329 to <4 x double>*
  %332 = load <4 x double>, <4 x double>* %331, align 8
  %333 = fmul <4 x double> %332, <double 1.638400e+04, double 1.638400e+04, double 1.638400e+04, double 1.638400e+04>
  %334 = fadd <4 x double> %333, <double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01>
  %335 = call <4 x double> @llvm.floor.v4f64(<4 x double> %334)
  %336 = fptosi <4 x double> %335 to <4 x i32>
  %337 = bitcast i8* %330 to <4 x i32>*
  store <4 x i32> %336, <4 x i32>* %337, align 4
  %338 = getelementptr inbounds %struct.cmsMAT3, %struct.cmsMAT3* %10, i64 0, i32 0, i64 2, i32 0, i64 2
  %339 = load double, double* %338, align 8
  %340 = fmul double %339, 1.638400e+04
  %341 = fadd double %340, 5.000000e-01
  %342 = call double @llvm.floor.f64(double %341) #5
  %343 = fptosi double %342 to i32
  %344 = getelementptr inbounds i8, i8* %115, i64 3112
  %345 = bitcast i8* %344 to i32*
  store i32 %343, i32* %345, align 4
  %346 = icmp eq double* %61, null
  %347 = getelementptr inbounds i8, i8* %115, i64 3116
  br i1 %346, label %373, label %352

348:                                              ; preds = %377
  %349 = load i32, i32* %3, align 4
  %350 = or i32 %349, 2097152
  store i32 %350, i32* %3, align 4
  br label %351

351:                                              ; preds = %377, %348
  call void @_cmsPipelineSetOptimizationParameters(%struct._cmsPipeline_struct* nonnull %72, void (i16*, i16*, i8*)* nonnull @MatShaperEval16, i8* nonnull %115, void (%struct._cmsContext_struct*, i8*)* nonnull @FreeMatShaper, i8* (%struct._cmsContext_struct*, i8*)* nonnull @DupMatShaper) #5
  br label %381

352:                                              ; preds = %320
  %353 = load double, double* %61, align 8
  %354 = fmul double %353, 1.638400e+04
  %355 = fadd double %354, 5.000000e-01
  %356 = call double @llvm.floor.f64(double %355) #5
  %357 = fptosi double %356 to i32
  %358 = bitcast i8* %347 to i32*
  store i32 %357, i32* %358, align 4
  %359 = getelementptr inbounds double, double* %61, i64 1
  %360 = load double, double* %359, align 8
  %361 = fmul double %360, 1.638400e+04
  %362 = fadd double %361, 5.000000e-01
  %363 = call double @llvm.floor.f64(double %362) #5
  %364 = fptosi double %363 to i32
  %365 = getelementptr inbounds i8, i8* %115, i64 3120
  %366 = bitcast i8* %365 to i32*
  store i32 %364, i32* %366, align 4
  %367 = getelementptr inbounds double, double* %61, i64 2
  %368 = load double, double* %367, align 8
  %369 = fmul double %368, 1.638400e+04
  %370 = fadd double %369, 5.000000e-01
  %371 = call double @llvm.floor.f64(double %370) #5
  %372 = fptosi double %371 to i32
  br label %377

373:                                              ; preds = %320
  %374 = bitcast i8* %347 to i32*
  store i32 0, i32* %374, align 4
  %375 = getelementptr inbounds i8, i8* %115, i64 3120
  %376 = bitcast i8* %375 to i32*
  store i32 0, i32* %376, align 4
  br label %377

377:                                              ; preds = %373, %352
  %378 = phi i32 [ 0, %373 ], [ %372, %352 ]
  %379 = getelementptr inbounds i8, i8* %115, i64 3124
  %380 = bitcast i8* %379 to i32*
  store i32 %378, i32* %380, align 4
  br i1 %195, label %351, label %348

381:                                              ; preds = %351, %98, %94
  %382 = phi i64 [ %74, %351 ], [ %74, %98 ], [ %97, %94 ]
  call void @cmsPipelineFree(%struct._cmsPipeline_struct* %29) #5
  %383 = bitcast %struct._cmsPipeline_struct** %0 to i64*
  store i64 %382, i64* %383, align 8
  br label %385

384:                                              ; preds = %88, %81, %75
  call void @cmsPipelineFree(%struct._cmsPipeline_struct* nonnull %72) #5
  br label %385

385:                                              ; preds = %32, %60, %49, %25, %5, %21, %384, %381
  %386 = phi i32 [ 1, %381 ], [ 0, %384 ], [ 0, %21 ], [ 0, %5 ], [ 0, %25 ], [ 0, %49 ], [ 0, %60 ], [ 0, %32 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #5
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %16) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #5
  ret i32 %386
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @OptimizeByComputingLinearization(%struct._cmsPipeline_struct** nocapture, i32, i32* nocapture readonly, i32* nocapture readonly, i32* nocapture) #0 {
  %6 = alloca [16 x %struct._cms_curve_struct*], align 16
  %7 = alloca [16 x %struct._cms_curve_struct*], align 16
  %8 = alloca [16 x float], align 16
  %9 = alloca [16 x float], align 16
  %10 = bitcast [16 x %struct._cms_curve_struct*]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 -86, i64 128, i1 false)
  %11 = bitcast [16 x %struct._cms_curve_struct*]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %11) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 128, i1 false)
  %12 = bitcast [16 x float]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %12) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 -1, i64 64, i1 false)
  %13 = bitcast [16 x float]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %13) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %13, i8 -1, i64 64, i1 false)
  %14 = load i32, i32* %2, align 4
  %15 = tail call i32 @_cmsFormatterIsFloat(i32 %14) #5
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %661

17:                                               ; preds = %5
  %18 = load i32, i32* %3, align 4
  %19 = tail call i32 @_cmsFormatterIsFloat(i32 %18) #5
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %661

21:                                               ; preds = %17
  %22 = load i32, i32* %2, align 4
  %23 = and i32 %22, 2035712
  %24 = icmp eq i32 %23, 262144
  br i1 %24, label %25, label %661

25:                                               ; preds = %21
  %26 = load i32, i32* %3, align 4
  %27 = and i32 %26, 2035712
  %28 = icmp eq i32 %27, 262144
  br i1 %28, label %29, label %661

29:                                               ; preds = %25
  %30 = tail call i32 @_cmsFormatterIs8bit(i32 %22) #5
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %36

32:                                               ; preds = %29
  %33 = load i32, i32* %4, align 4
  %34 = and i32 %33, 16
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %661, label %36

36:                                               ; preds = %32, %29
  %37 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %0, align 8
  %38 = tail call %struct._cmsStage_struct* @cmsPipelineGetPtrToFirstStage(%struct._cmsPipeline_struct* %37) #5
  %39 = icmp eq %struct._cmsStage_struct* %38, null
  br i1 %39, label %47, label %40

40:                                               ; preds = %36, %44
  %41 = phi %struct._cmsStage_struct* [ %45, %44 ], [ %38, %36 ]
  %42 = tail call i32 @cmsStageType(%struct._cmsStage_struct* nonnull %41) #5
  %43 = icmp eq i32 %42, 1852009504
  br i1 %43, label %661, label %44

44:                                               ; preds = %40
  %45 = tail call %struct._cmsStage_struct* @cmsStageNext(%struct._cmsStage_struct* nonnull %41) #5
  %46 = icmp eq %struct._cmsStage_struct* %45, null
  br i1 %46, label %47, label %40

47:                                               ; preds = %44, %36
  %48 = load i32, i32* %2, align 4
  %49 = lshr i32 %48, 16
  %50 = and i32 %49, 31
  %51 = tail call i32 @_cmsICCcolorSpace(i32 %50) #5
  %52 = load i32, i32* %3, align 4
  %53 = lshr i32 %52, 16
  %54 = and i32 %53, 31
  %55 = tail call i32 @_cmsICCcolorSpace(i32 %54) #5
  %56 = icmp eq i32 %51, 0
  %57 = icmp eq i32 %55, 0
  %58 = or i1 %56, %57
  br i1 %58, label %661, label %59

59:                                               ; preds = %47
  %60 = load i32, i32* %4, align 4
  %61 = tail call i32 @_cmsReasonableGridpointsByColorspace(i32 %51, i32 %60) #5
  %62 = getelementptr inbounds [16 x %struct._cms_curve_struct*], [16 x %struct._cms_curve_struct*]* %6, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 0, i64 128, i1 false)
  %63 = getelementptr inbounds [16 x %struct._cms_curve_struct*], [16 x %struct._cms_curve_struct*]* %7, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 0, i64 128, i1 false)
  %64 = tail call %struct._cmsStage_struct* @cmsPipelineGetPtrToLastStage(%struct._cmsPipeline_struct* %37) #5
  %65 = icmp eq %struct._cmsStage_struct* %64, null
  br i1 %65, label %633, label %66

66:                                               ; preds = %59
  %67 = tail call i32 @cmsStageType(%struct._cmsStage_struct* nonnull %64) #5
  %68 = icmp eq i32 %67, 1668707188
  br i1 %68, label %69, label %166

69:                                               ; preds = %66
  %70 = tail call i8* @cmsStageData(%struct._cmsStage_struct* nonnull %64) #5
  %71 = bitcast i8* %70 to i32*
  %72 = load i32, i32* %71, align 8
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %166, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds i8, i8* %70, i64 8
  %76 = bitcast i8* %75 to %struct._cms_curve_struct***
  %77 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %76, align 8
  %78 = zext i32 %72 to i64
  br label %79

79:                                               ; preds = %74, %163
  %80 = phi i64 [ 0, %74 ], [ %164, %163 ]
  %81 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %77, i64 %80
  %82 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %81, align 8
  %83 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %82, i64 0, i32 5
  %84 = load i32, i32* %83, align 8
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %163, label %86

86:                                               ; preds = %79
  %87 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %82, i64 0, i32 6
  %88 = load i16*, i16** %87, align 8
  %89 = zext i32 %84 to i64
  %90 = zext i32 %84 to i64
  %91 = icmp ult i32 %84, 8
  br i1 %91, label %134, label %92

92:                                               ; preds = %86
  %93 = and i64 %90, 4294967288
  br label %94

94:                                               ; preds = %94, %92
  %95 = phi i64 [ 0, %92 ], [ %118, %94 ]
  %96 = phi <4 x i32> [ zeroinitializer, %92 ], [ %116, %94 ]
  %97 = phi <4 x i32> [ zeroinitializer, %92 ], [ %117, %94 ]
  %98 = phi <4 x i32> [ zeroinitializer, %92 ], [ %110, %94 ]
  %99 = phi <4 x i32> [ zeroinitializer, %92 ], [ %111, %94 ]
  %100 = getelementptr inbounds i16, i16* %88, i64 %95
  %101 = bitcast i16* %100 to <4 x i16>*
  %102 = load <4 x i16>, <4 x i16>* %101, align 2
  %103 = getelementptr inbounds i16, i16* %100, i64 4
  %104 = bitcast i16* %103 to <4 x i16>*
  %105 = load <4 x i16>, <4 x i16>* %104, align 2
  %106 = icmp eq <4 x i16> %102, zeroinitializer
  %107 = icmp eq <4 x i16> %105, zeroinitializer
  %108 = zext <4 x i1> %106 to <4 x i32>
  %109 = zext <4 x i1> %107 to <4 x i32>
  %110 = add <4 x i32> %98, %108
  %111 = add <4 x i32> %99, %109
  %112 = icmp eq <4 x i16> %102, <i16 -1, i16 -1, i16 -1, i16 -1>
  %113 = icmp eq <4 x i16> %105, <i16 -1, i16 -1, i16 -1, i16 -1>
  %114 = zext <4 x i1> %112 to <4 x i32>
  %115 = zext <4 x i1> %113 to <4 x i32>
  %116 = add <4 x i32> %96, %114
  %117 = add <4 x i32> %97, %115
  %118 = add i64 %95, 8
  %119 = icmp eq i64 %118, %93
  br i1 %119, label %120, label %94, !llvm.loop !14

120:                                              ; preds = %94
  %121 = add <4 x i32> %111, %110
  %122 = shufflevector <4 x i32> %121, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %123 = add <4 x i32> %121, %122
  %124 = shufflevector <4 x i32> %123, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %125 = add <4 x i32> %123, %124
  %126 = extractelement <4 x i32> %125, i32 0
  %127 = add <4 x i32> %117, %116
  %128 = shufflevector <4 x i32> %127, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %129 = add <4 x i32> %127, %128
  %130 = shufflevector <4 x i32> %129, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %131 = add <4 x i32> %129, %130
  %132 = extractelement <4 x i32> %131, i32 0
  %133 = icmp eq i64 %93, %90
  br i1 %133, label %152, label %134

134:                                              ; preds = %120, %86
  %135 = phi i64 [ 0, %86 ], [ %93, %120 ]
  %136 = phi i32 [ 0, %86 ], [ %132, %120 ]
  %137 = phi i32 [ 0, %86 ], [ %126, %120 ]
  br label %138

138:                                              ; preds = %134, %138
  %139 = phi i64 [ %150, %138 ], [ %135, %134 ]
  %140 = phi i32 [ %149, %138 ], [ %136, %134 ]
  %141 = phi i32 [ %146, %138 ], [ %137, %134 ]
  %142 = getelementptr inbounds i16, i16* %88, i64 %139
  %143 = load i16, i16* %142, align 2
  %144 = icmp eq i16 %143, 0
  %145 = zext i1 %144 to i32
  %146 = add i32 %141, %145
  %147 = icmp eq i16 %143, -1
  %148 = zext i1 %147 to i32
  %149 = add i32 %140, %148
  %150 = add nuw nsw i64 %139, 1
  %151 = icmp eq i64 %150, %89
  br i1 %151, label %152, label %138, !llvm.loop !15

152:                                              ; preds = %138, %120
  %153 = phi i32 [ %126, %120 ], [ %146, %138 ]
  %154 = phi i32 [ %132, %120 ], [ %149, %138 ]
  %155 = icmp eq i32 %153, 1
  %156 = icmp eq i32 %154, 1
  %157 = and i1 %155, %156
  br i1 %157, label %163, label %158

158:                                              ; preds = %152
  %159 = udiv i32 %84, 20
  %160 = icmp ugt i32 %153, %159
  %161 = icmp ugt i32 %154, %159
  %162 = or i1 %160, %161
  br i1 %162, label %633, label %163

163:                                              ; preds = %158, %152, %79
  %164 = add nuw nsw i64 %80, 1
  %165 = icmp ult i64 %164, %78
  br i1 %165, label %79, label %166

166:                                              ; preds = %163, %69, %66
  %167 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %37, i64 0, i32 1
  %168 = load i32, i32* %167, align 8
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %176, label %170

170:                                              ; preds = %166
  %171 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %37, i64 0, i32 8
  br label %180

172:                                              ; preds = %180
  %173 = load i32, i32* %167, align 8
  %174 = zext i32 %173 to i64
  %175 = icmp ult i64 %186, %174
  br i1 %175, label %180, label %176

176:                                              ; preds = %172, %166
  %177 = phi i32 [ 0, %166 ], [ %173, %172 ]
  %178 = getelementptr inbounds [16 x float], [16 x float]* %8, i64 0, i64 0
  %179 = getelementptr inbounds [16 x float], [16 x float]* %9, i64 0, i64 0
  br label %189

180:                                              ; preds = %170, %172
  %181 = phi i64 [ 0, %170 ], [ %186, %172 ]
  %182 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %171, align 8
  %183 = tail call %struct._cms_curve_struct* @cmsBuildTabulatedToneCurve16(%struct._cmsContext_struct* %182, i32 4096, i16* null) #5
  %184 = getelementptr inbounds [16 x %struct._cms_curve_struct*], [16 x %struct._cms_curve_struct*]* %6, i64 0, i64 %181
  store %struct._cms_curve_struct* %183, %struct._cms_curve_struct** %184, align 8
  %185 = icmp eq %struct._cms_curve_struct* %183, null
  %186 = add nuw nsw i64 %181, 1
  br i1 %185, label %633, label %172

187:                                              ; preds = %234
  %188 = icmp eq i32 %235, 0
  br i1 %188, label %238, label %241

189:                                              ; preds = %234, %176
  %190 = phi i32 [ %177, %176 ], [ %235, %234 ]
  %191 = phi i64 [ 0, %176 ], [ %236, %234 ]
  %192 = trunc i64 %191 to i32
  %193 = uitofp i32 %192 to double
  %194 = fdiv double %193, 4.095000e+03
  %195 = fptrunc double %194 to float
  %196 = icmp eq i32 %190, 0
  br i1 %196, label %204, label %197

197:                                              ; preds = %189, %197
  %198 = phi i64 [ %200, %197 ], [ 0, %189 ]
  %199 = getelementptr inbounds [16 x float], [16 x float]* %8, i64 0, i64 %198
  store float %195, float* %199, align 4
  %200 = add nuw nsw i64 %198, 1
  %201 = load i32, i32* %167, align 8
  %202 = zext i32 %201 to i64
  %203 = icmp ult i64 %200, %202
  br i1 %203, label %197, label %204

204:                                              ; preds = %197, %189
  call void @cmsPipelineEvalFloat(float* nonnull %178, float* nonnull %179, %struct._cmsPipeline_struct* %37) #5
  %205 = load i32, i32* %167, align 8
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %234, label %207

207:                                              ; preds = %204, %223
  %208 = phi i64 [ %230, %223 ], [ 0, %204 ]
  %209 = getelementptr inbounds [16 x float], [16 x float]* %9, i64 0, i64 %208
  %210 = load float, float* %209, align 4
  %211 = fpext float %210 to double
  %212 = fmul double %211, 6.553500e+04
  %213 = fadd double %212, 5.000000e-01
  %214 = fcmp ugt double %213, 0.000000e+00
  br i1 %214, label %215, label %223

215:                                              ; preds = %207
  %216 = fcmp ult double %213, 6.553500e+04
  br i1 %216, label %217, label %223

217:                                              ; preds = %215
  %218 = fadd double %213, -3.276700e+04
  %219 = call double @llvm.floor.f64(double %218) #5
  %220 = fptosi double %219 to i32
  %221 = trunc i32 %220 to i16
  %222 = add i16 %221, 32767
  br label %223

223:                                              ; preds = %207, %215, %217
  %224 = phi i16 [ %222, %217 ], [ 0, %207 ], [ -1, %215 ]
  %225 = getelementptr inbounds [16 x %struct._cms_curve_struct*], [16 x %struct._cms_curve_struct*]* %6, i64 0, i64 %208
  %226 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %225, align 8
  %227 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %226, i64 0, i32 6
  %228 = load i16*, i16** %227, align 8
  %229 = getelementptr inbounds i16, i16* %228, i64 %191
  store i16 %224, i16* %229, align 2
  %230 = add nuw nsw i64 %208, 1
  %231 = load i32, i32* %167, align 8
  %232 = zext i32 %231 to i64
  %233 = icmp ult i64 %230, %232
  br i1 %233, label %207, label %234

234:                                              ; preds = %223, %204
  %235 = phi i32 [ 0, %204 ], [ %231, %223 ]
  %236 = add nuw nsw i64 %191, 1
  %237 = icmp eq i64 %236, 4096
  br i1 %237, label %187, label %189

238:                                              ; preds = %333, %187
  %239 = phi i32 [ 0, %187 ], [ %335, %333 ]
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %344, label %347

241:                                              ; preds = %187, %333
  %242 = phi i64 [ %334, %333 ], [ 0, %187 ]
  %243 = getelementptr inbounds [16 x %struct._cms_curve_struct*], [16 x %struct._cms_curve_struct*]* %6, i64 0, i64 %242
  %244 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %243, align 8
  %245 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %244, i64 0, i32 5
  %246 = load i32, i32* %245, align 8
  %247 = uitofp i32 %246 to double
  %248 = fmul double %247, 2.000000e-02
  %249 = fadd double %248, 5.000000e-01
  %250 = call double @llvm.floor.f64(double %249) #5
  %251 = fptosi double %250 to i32
  %252 = xor i32 %251, -1
  %253 = add i32 %246, %252
  %254 = call i32 @cmsIsToneCurveDescending(%struct._cms_curve_struct* %244) #5
  %255 = icmp eq i32 %254, 0
  %256 = select i1 %255, double 0.000000e+00, double 6.553500e+04
  %257 = select i1 %255, double 6.553500e+04, double 0.000000e+00
  %258 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %244, i64 0, i32 6
  %259 = load i16*, i16** %258, align 8
  %260 = sext i32 %251 to i64
  %261 = getelementptr inbounds i16, i16* %259, i64 %260
  %262 = load i16, i16* %261, align 2
  %263 = uitofp i16 %262 to double
  %264 = fsub double %263, %256
  %265 = sitofp i32 %251 to double
  %266 = fdiv double %264, %265
  %267 = fmul double %266, %265
  %268 = fsub double %263, %267
  %269 = icmp sgt i32 %251, 0
  br i1 %269, label %270, label %296

270:                                              ; preds = %241
  %271 = zext i32 %251 to i64
  br label %272

272:                                              ; preds = %288, %270
  %273 = phi i64 [ 0, %270 ], [ %292, %288 ]
  %274 = trunc i64 %273 to i32
  %275 = sitofp i32 %274 to double
  %276 = fmul double %266, %275
  %277 = fadd double %268, %276
  %278 = fadd double %277, 5.000000e-01
  %279 = fcmp ugt double %278, 0.000000e+00
  br i1 %279, label %280, label %288

280:                                              ; preds = %272
  %281 = fcmp ult double %278, 6.553500e+04
  br i1 %281, label %282, label %288

282:                                              ; preds = %280
  %283 = fadd double %278, -3.276700e+04
  %284 = call double @llvm.floor.f64(double %283) #5
  %285 = fptosi double %284 to i32
  %286 = trunc i32 %285 to i16
  %287 = add i16 %286, 32767
  br label %288

288:                                              ; preds = %282, %280, %272
  %289 = phi i16 [ %287, %282 ], [ 0, %272 ], [ -1, %280 ]
  %290 = load i16*, i16** %258, align 8
  %291 = getelementptr inbounds i16, i16* %290, i64 %273
  store i16 %289, i16* %291, align 2
  %292 = add nuw nsw i64 %273, 1
  %293 = icmp eq i64 %292, %271
  br i1 %293, label %294, label %272

294:                                              ; preds = %288
  %295 = load i16*, i16** %258, align 8
  br label %296

296:                                              ; preds = %294, %241
  %297 = phi i16* [ %295, %294 ], [ %259, %241 ]
  %298 = sext i32 %253 to i64
  %299 = getelementptr inbounds i16, i16* %297, i64 %298
  %300 = load i16, i16* %299, align 2
  %301 = uitofp i16 %300 to double
  %302 = fsub double %257, %301
  %303 = fdiv double %302, %265
  %304 = sitofp i32 %253 to double
  %305 = fmul double %303, %304
  %306 = fsub double %301, %305
  %307 = load i32, i32* %245, align 8
  %308 = icmp slt i32 %253, %307
  br i1 %308, label %309, label %333

309:                                              ; preds = %296, %325
  %310 = phi i64 [ %329, %325 ], [ %298, %296 ]
  %311 = trunc i64 %310 to i32
  %312 = sitofp i32 %311 to double
  %313 = fmul double %303, %312
  %314 = fadd double %306, %313
  %315 = fadd double %314, 5.000000e-01
  %316 = fcmp ugt double %315, 0.000000e+00
  br i1 %316, label %317, label %325

317:                                              ; preds = %309
  %318 = fcmp ult double %315, 6.553500e+04
  br i1 %318, label %319, label %325

319:                                              ; preds = %317
  %320 = fadd double %315, -3.276700e+04
  %321 = call double @llvm.floor.f64(double %320) #5
  %322 = fptosi double %321 to i32
  %323 = trunc i32 %322 to i16
  %324 = add i16 %323, 32767
  br label %325

325:                                              ; preds = %319, %317, %309
  %326 = phi i16 [ %324, %319 ], [ 0, %309 ], [ -1, %317 ]
  %327 = load i16*, i16** %258, align 8
  %328 = getelementptr inbounds i16, i16* %327, i64 %310
  store i16 %326, i16* %328, align 2
  %329 = add nsw i64 %310, 1
  %330 = load i32, i32* %245, align 8
  %331 = sext i32 %330 to i64
  %332 = icmp slt i64 %329, %331
  br i1 %332, label %309, label %333

333:                                              ; preds = %325, %296
  %334 = add nuw nsw i64 %242, 1
  %335 = load i32, i32* %167, align 8
  %336 = zext i32 %335 to i64
  %337 = icmp ult i64 %334, %336
  br i1 %337, label %241, label %238

338:                                              ; preds = %428, %347
  %339 = icmp eq i32 %357, 0
  br i1 %339, label %633, label %340

340:                                              ; preds = %437, %338
  %341 = add i32 %348, 1
  %342 = load i32, i32* %167, align 8
  %343 = icmp ult i32 %341, %342
  br i1 %343, label %347, label %344

344:                                              ; preds = %340, %238
  %345 = phi i32 [ %239, %238 ], [ %342, %340 ]
  %346 = icmp eq i32 %345, 0
  br i1 %346, label %453, label %445

347:                                              ; preds = %238, %340
  %348 = phi i32 [ %341, %340 ], [ 0, %238 ]
  %349 = phi i32 [ %357, %340 ], [ 1, %238 ]
  %350 = zext i32 %348 to i64
  %351 = getelementptr inbounds [16 x %struct._cms_curve_struct*], [16 x %struct._cms_curve_struct*]* %6, i64 0, i64 %350
  %352 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %351, align 8
  %353 = call i32 @cmsIsToneCurveLinear(%struct._cms_curve_struct* %352) #5
  %354 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %351, align 8
  %355 = call i32 @cmsIsToneCurveMonotonic(%struct._cms_curve_struct* %354) #5
  %356 = icmp eq i32 %355, 0
  %357 = select i1 %356, i32 0, i32 %349
  %358 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %351, align 8
  %359 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %358, i64 0, i32 5
  %360 = load i32, i32* %359, align 8
  %361 = icmp eq i32 %360, 0
  br i1 %361, label %338, label %362

362:                                              ; preds = %347
  %363 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %358, i64 0, i32 6
  %364 = load i16*, i16** %363, align 8
  %365 = zext i32 %360 to i64
  %366 = zext i32 %360 to i64
  %367 = icmp ult i32 %360, 8
  br i1 %367, label %410, label %368

368:                                              ; preds = %362
  %369 = and i64 %366, 4294967288
  br label %370

370:                                              ; preds = %370, %368
  %371 = phi i64 [ 0, %368 ], [ %394, %370 ]
  %372 = phi <4 x i32> [ zeroinitializer, %368 ], [ %392, %370 ]
  %373 = phi <4 x i32> [ zeroinitializer, %368 ], [ %393, %370 ]
  %374 = phi <4 x i32> [ zeroinitializer, %368 ], [ %386, %370 ]
  %375 = phi <4 x i32> [ zeroinitializer, %368 ], [ %387, %370 ]
  %376 = getelementptr inbounds i16, i16* %364, i64 %371
  %377 = bitcast i16* %376 to <4 x i16>*
  %378 = load <4 x i16>, <4 x i16>* %377, align 2
  %379 = getelementptr inbounds i16, i16* %376, i64 4
  %380 = bitcast i16* %379 to <4 x i16>*
  %381 = load <4 x i16>, <4 x i16>* %380, align 2
  %382 = icmp eq <4 x i16> %378, zeroinitializer
  %383 = icmp eq <4 x i16> %381, zeroinitializer
  %384 = zext <4 x i1> %382 to <4 x i32>
  %385 = zext <4 x i1> %383 to <4 x i32>
  %386 = add <4 x i32> %374, %384
  %387 = add <4 x i32> %375, %385
  %388 = icmp eq <4 x i16> %378, <i16 -1, i16 -1, i16 -1, i16 -1>
  %389 = icmp eq <4 x i16> %381, <i16 -1, i16 -1, i16 -1, i16 -1>
  %390 = zext <4 x i1> %388 to <4 x i32>
  %391 = zext <4 x i1> %389 to <4 x i32>
  %392 = add <4 x i32> %372, %390
  %393 = add <4 x i32> %373, %391
  %394 = add i64 %371, 8
  %395 = icmp eq i64 %394, %369
  br i1 %395, label %396, label %370, !llvm.loop !16

396:                                              ; preds = %370
  %397 = add <4 x i32> %387, %386
  %398 = shufflevector <4 x i32> %397, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %399 = add <4 x i32> %397, %398
  %400 = shufflevector <4 x i32> %399, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %401 = add <4 x i32> %399, %400
  %402 = extractelement <4 x i32> %401, i32 0
  %403 = add <4 x i32> %393, %392
  %404 = shufflevector <4 x i32> %403, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %405 = add <4 x i32> %403, %404
  %406 = shufflevector <4 x i32> %405, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %407 = add <4 x i32> %405, %406
  %408 = extractelement <4 x i32> %407, i32 0
  %409 = icmp eq i64 %369, %366
  br i1 %409, label %428, label %410

410:                                              ; preds = %396, %362
  %411 = phi i64 [ 0, %362 ], [ %369, %396 ]
  %412 = phi i32 [ 0, %362 ], [ %408, %396 ]
  %413 = phi i32 [ 0, %362 ], [ %402, %396 ]
  br label %414

414:                                              ; preds = %410, %414
  %415 = phi i64 [ %426, %414 ], [ %411, %410 ]
  %416 = phi i32 [ %425, %414 ], [ %412, %410 ]
  %417 = phi i32 [ %422, %414 ], [ %413, %410 ]
  %418 = getelementptr inbounds i16, i16* %364, i64 %415
  %419 = load i16, i16* %418, align 2
  %420 = icmp eq i16 %419, 0
  %421 = zext i1 %420 to i32
  %422 = add i32 %417, %421
  %423 = icmp eq i16 %419, -1
  %424 = zext i1 %423 to i32
  %425 = add i32 %416, %424
  %426 = add nuw nsw i64 %415, 1
  %427 = icmp eq i64 %426, %365
  br i1 %427, label %428, label %414, !llvm.loop !17

428:                                              ; preds = %414, %396
  %429 = phi i32 [ %402, %396 ], [ %422, %414 ]
  %430 = phi i32 [ %408, %396 ], [ %425, %414 ]
  %431 = icmp eq i32 %429, 1
  %432 = icmp eq i32 %430, 1
  %433 = and i1 %431, %432
  br i1 %433, label %338, label %434

434:                                              ; preds = %428
  %435 = udiv i32 %360, 20
  %436 = icmp ugt i32 %429, %435
  br i1 %436, label %633, label %437

437:                                              ; preds = %434
  %438 = icmp ugt i32 %430, %435
  %439 = icmp eq i32 %357, 0
  %440 = or i1 %438, %439
  br i1 %440, label %633, label %340

441:                                              ; preds = %445
  %442 = load i32, i32* %167, align 8
  %443 = zext i32 %442 to i64
  %444 = icmp ult i64 %452, %443
  br i1 %444, label %445, label %453

445:                                              ; preds = %344, %441
  %446 = phi i64 [ %452, %441 ], [ 0, %344 ]
  %447 = getelementptr inbounds [16 x %struct._cms_curve_struct*], [16 x %struct._cms_curve_struct*]* %6, i64 0, i64 %446
  %448 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %447, align 8
  %449 = call %struct._cms_curve_struct* @cmsReverseToneCurveEx(i32 4096, %struct._cms_curve_struct* %448) #5
  %450 = getelementptr inbounds [16 x %struct._cms_curve_struct*], [16 x %struct._cms_curve_struct*]* %7, i64 0, i64 %446
  store %struct._cms_curve_struct* %449, %struct._cms_curve_struct** %450, align 8
  %451 = icmp eq %struct._cms_curve_struct* %449, null
  %452 = add nuw nsw i64 %446, 1
  br i1 %451, label %633, label %441

453:                                              ; preds = %441, %344
  %454 = call %struct._cmsPipeline_struct* @cmsPipelineDup(%struct._cmsPipeline_struct* %37) #5
  %455 = icmp eq %struct._cmsPipeline_struct* %454, null
  br i1 %455, label %633, label %456

456:                                              ; preds = %453
  %457 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %37, i64 0, i32 8
  %458 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %457, align 8
  %459 = load i32, i32* %167, align 8
  %460 = call %struct._cmsStage_struct* @cmsStageAllocToneCurves(%struct._cmsContext_struct* %458, i32 %459, %struct._cms_curve_struct** nonnull %63) #5
  %461 = call i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct* nonnull %454, i32 0, %struct._cmsStage_struct* %460) #5
  %462 = icmp eq i32 %461, 0
  br i1 %462, label %633, label %463

463:                                              ; preds = %456
  %464 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %457, align 8
  %465 = load i32, i32* %167, align 8
  %466 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %37, i64 0, i32 2
  %467 = load i32, i32* %466, align 4
  %468 = call %struct._cmsPipeline_struct* @cmsPipelineAlloc(%struct._cmsContext_struct* %464, i32 %465, i32 %467) #5
  %469 = icmp eq %struct._cmsPipeline_struct* %468, null
  br i1 %469, label %633, label %470

470:                                              ; preds = %463
  %471 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %457, align 8
  %472 = load i32, i32* %167, align 8
  %473 = call %struct._cmsStage_struct* @cmsStageAllocToneCurves(%struct._cmsContext_struct* %471, i32 %472, %struct._cms_curve_struct** nonnull %62) #5
  %474 = call i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct* nonnull %468, i32 0, %struct._cmsStage_struct* %473) #5
  %475 = icmp eq i32 %474, 0
  br i1 %475, label %633, label %476

476:                                              ; preds = %470
  %477 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %457, align 8
  %478 = load i32, i32* %167, align 8
  %479 = load i32, i32* %466, align 4
  %480 = call %struct._cmsStage_struct* @cmsStageAllocCLut16bit(%struct._cmsContext_struct* %477, i32 %61, i32 %478, i32 %479, i16* null) #5
  %481 = call i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct* nonnull %468, i32 1, %struct._cmsStage_struct* %480) #5
  %482 = icmp eq i32 %481, 0
  br i1 %482, label %633, label %483

483:                                              ; preds = %476
  %484 = bitcast %struct._cmsPipeline_struct* %454 to i8*
  %485 = call i32 @cmsStageSampleCLut16bit(%struct._cmsStage_struct* %480, i32 (i16*, i16*, i8*)* nonnull @XFormSampler16, i8* nonnull %484, i32 0) #5
  %486 = icmp eq i32 %485, 0
  br i1 %486, label %633, label %487

487:                                              ; preds = %483
  %488 = load i32, i32* %167, align 8
  %489 = icmp eq i32 %488, 0
  br i1 %489, label %506, label %490

490:                                              ; preds = %487, %501
  %491 = phi i64 [ %502, %501 ], [ 0, %487 ]
  %492 = getelementptr inbounds [16 x %struct._cms_curve_struct*], [16 x %struct._cms_curve_struct*]* %6, i64 0, i64 %491
  %493 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %492, align 8
  %494 = icmp eq %struct._cms_curve_struct* %493, null
  br i1 %494, label %496, label %495

495:                                              ; preds = %490
  call void @cmsFreeToneCurve(%struct._cms_curve_struct* nonnull %493) #5
  br label %496

496:                                              ; preds = %490, %495
  %497 = getelementptr inbounds [16 x %struct._cms_curve_struct*], [16 x %struct._cms_curve_struct*]* %7, i64 0, i64 %491
  %498 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %497, align 8
  %499 = icmp eq %struct._cms_curve_struct* %498, null
  br i1 %499, label %501, label %500

500:                                              ; preds = %496
  call void @cmsFreeToneCurve(%struct._cms_curve_struct* nonnull %498) #5
  br label %501

501:                                              ; preds = %496, %500
  %502 = add nuw nsw i64 %491, 1
  %503 = load i32, i32* %167, align 8
  %504 = zext i32 %503 to i64
  %505 = icmp ult i64 %502, %504
  br i1 %505, label %490, label %506

506:                                              ; preds = %501, %487
  call void @cmsPipelineFree(%struct._cmsPipeline_struct* nonnull %454) #5
  %507 = call %struct._cms_curve_struct** @_cmsStageGetPtrToCurveSet(%struct._cmsStage_struct* %473) #5
  %508 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %480, i64 0, i32 8
  %509 = bitcast i8** %508 to %struct._cmsStageCLutData**
  %510 = load %struct._cmsStageCLutData*, %struct._cmsStageCLutData** %509, align 8
  %511 = load i32, i32* %2, align 4
  %512 = call i32 @_cmsFormatterIs8bit(i32 %511) #5
  %513 = icmp eq i32 %512, 0
  %514 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %468, i64 0, i32 8
  %515 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %514, align 8
  %516 = getelementptr inbounds %struct._cmsStageCLutData, %struct._cmsStageCLutData* %510, i64 0, i32 1
  %517 = load %struct._cms_interp_struc*, %struct._cms_interp_struc** %516, align 8
  br i1 %513, label %609, label %518

518:                                              ; preds = %506
  %519 = call i8* @_cmsMallocZero(%struct._cmsContext_struct* %515, i32 4624) #5
  %520 = icmp eq i8* %519, null
  br i1 %520, label %661, label %521

521:                                              ; preds = %518
  %522 = icmp eq %struct._cms_curve_struct** %507, null
  %523 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %507, i64 1
  %524 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %507, i64 2
  %525 = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %517, i64 0, i32 5, i64 0
  %526 = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %517, i64 0, i32 5, i64 1
  %527 = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %517, i64 0, i32 5, i64 2
  %528 = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %517, i64 0, i32 6, i64 2
  %529 = getelementptr inbounds i8, i8* %519, i64 1552
  %530 = bitcast i8* %529 to [256 x i32]*
  %531 = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %517, i64 0, i32 6, i64 1
  %532 = getelementptr inbounds i8, i8* %519, i64 2576
  %533 = bitcast i8* %532 to [256 x i32]*
  %534 = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %517, i64 0, i32 6, i64 0
  %535 = getelementptr inbounds i8, i8* %519, i64 3600
  %536 = bitcast i8* %535 to [256 x i32]*
  %537 = getelementptr inbounds i8, i8* %519, i64 16
  %538 = bitcast i8* %537 to [256 x i16]*
  %539 = getelementptr inbounds i8, i8* %519, i64 528
  %540 = bitcast i8* %539 to [256 x i16]*
  %541 = getelementptr inbounds i8, i8* %519, i64 1040
  %542 = bitcast i8* %541 to [256 x i16]*
  br label %543

543:                                              ; preds = %562, %521
  %544 = phi i64 [ 0, %521 ], [ %602, %562 ]
  %545 = phi i32 [ 0, %521 ], [ %603, %562 ]
  br i1 %522, label %557, label %546

546:                                              ; preds = %543
  %547 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %507, align 8
  %548 = shl i32 %545, 8
  %549 = trunc i64 %544 to i32
  %550 = or i32 %548, %549
  %551 = trunc i32 %550 to i16
  %552 = call zeroext i16 @cmsEvalToneCurve16(%struct._cms_curve_struct* %547, i16 zeroext %551) #5
  %553 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %523, align 8
  %554 = call zeroext i16 @cmsEvalToneCurve16(%struct._cms_curve_struct* %553, i16 zeroext %551) #5
  %555 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %524, align 8
  %556 = call zeroext i16 @cmsEvalToneCurve16(%struct._cms_curve_struct* %555, i16 zeroext %551) #5
  br label %562

557:                                              ; preds = %543
  %558 = shl i32 %545, 8
  %559 = trunc i64 %544 to i32
  %560 = or i32 %558, %559
  %561 = trunc i32 %560 to i16
  br label %562

562:                                              ; preds = %557, %546
  %563 = phi i16 [ %556, %546 ], [ %561, %557 ]
  %564 = phi i16 [ %554, %546 ], [ %561, %557 ]
  %565 = phi i16 [ %552, %546 ], [ %561, %557 ]
  %566 = zext i16 %565 to i32
  %567 = load i32, i32* %525, align 4
  %568 = mul i32 %567, %566
  %569 = add nsw i32 %568, 32767
  %570 = sdiv i32 %569, 65535
  %571 = add nsw i32 %570, %568
  %572 = zext i16 %564 to i32
  %573 = load i32, i32* %526, align 4
  %574 = mul i32 %573, %572
  %575 = add nsw i32 %574, 32767
  %576 = sdiv i32 %575, 65535
  %577 = add nsw i32 %576, %574
  %578 = zext i16 %563 to i32
  %579 = load i32, i32* %527, align 4
  %580 = mul i32 %579, %578
  %581 = add nsw i32 %580, 32767
  %582 = sdiv i32 %581, 65535
  %583 = add nsw i32 %582, %580
  %584 = load i32, i32* %528, align 4
  %585 = ashr i32 %571, 16
  %586 = mul i32 %585, %584
  %587 = getelementptr inbounds [256 x i32], [256 x i32]* %530, i64 0, i64 %544
  store i32 %586, i32* %587, align 4
  %588 = load i32, i32* %531, align 4
  %589 = ashr i32 %577, 16
  %590 = mul i32 %589, %588
  %591 = getelementptr inbounds [256 x i32], [256 x i32]* %533, i64 0, i64 %544
  store i32 %590, i32* %591, align 4
  %592 = load i32, i32* %534, align 4
  %593 = ashr i32 %583, 16
  %594 = mul i32 %592, %593
  %595 = getelementptr inbounds [256 x i32], [256 x i32]* %536, i64 0, i64 %544
  store i32 %594, i32* %595, align 4
  %596 = trunc i32 %571 to i16
  %597 = getelementptr inbounds [256 x i16], [256 x i16]* %538, i64 0, i64 %544
  store i16 %596, i16* %597, align 2
  %598 = trunc i32 %577 to i16
  %599 = getelementptr inbounds [256 x i16], [256 x i16]* %540, i64 0, i64 %544
  store i16 %598, i16* %599, align 2
  %600 = trunc i32 %583 to i16
  %601 = getelementptr inbounds [256 x i16], [256 x i16]* %542, i64 0, i64 %544
  store i16 %600, i16* %601, align 2
  %602 = add nuw nsw i64 %544, 1
  %603 = add nuw nsw i32 %545, 1
  %604 = icmp eq i64 %602, 256
  br i1 %604, label %605, label %543

605:                                              ; preds = %562
  %606 = bitcast i8* %519 to %struct._cmsContext_struct**
  store %struct._cmsContext_struct* %515, %struct._cmsContext_struct** %606, align 8
  %607 = getelementptr inbounds i8, i8* %519, i64 8
  %608 = bitcast i8* %607 to %struct._cms_interp_struc**
  store %struct._cms_interp_struc* %517, %struct._cms_interp_struc** %608, align 8
  call void @_cmsPipelineSetOptimizationParameters(%struct._cmsPipeline_struct* nonnull %468, void (i16*, i16*, i8*)* nonnull @PrelinEval8, i8* nonnull %519, void (%struct._cmsContext_struct*, i8*)* nonnull @Prelin8free, i8* (%struct._cmsContext_struct*, i8*)* nonnull @Prelin8dup) #5
  br label %620

609:                                              ; preds = %506
  %610 = call i8* @_cmsMallocZero(%struct._cmsContext_struct* %515, i32 176) #5
  %611 = icmp eq i8* %610, null
  br i1 %611, label %661, label %612

612:                                              ; preds = %609
  %613 = getelementptr inbounds i8, i8* %610, i64 8
  %614 = bitcast i8* %613 to i32*
  store i32 3, i32* %614, align 8
  %615 = getelementptr inbounds i8, i8* %610, i64 12
  %616 = bitcast i8* %615 to i32*
  store i32 3, i32* %616, align 4
  %617 = icmp eq %struct._cms_curve_struct** %507, null
  %618 = getelementptr inbounds i8, i8* %610, i64 80
  %619 = getelementptr inbounds i8, i8* %610, i64 16
  br i1 %617, label %694, label %663

620:                                              ; preds = %701, %605
  %621 = icmp eq i32 %1, 3
  %622 = load i32, i32* %4, align 4
  br i1 %621, label %623, label %625

623:                                              ; preds = %620
  %624 = or i32 %622, 4
  store i32 %624, i32* %4, align 4
  br label %625

625:                                              ; preds = %620, %623
  %626 = phi i32 [ %624, %623 ], [ %622, %620 ]
  %627 = and i32 %626, 4
  %628 = icmp eq i32 %627, 0
  br i1 %628, label %629, label %632

629:                                              ; preds = %625
  %630 = call fastcc i32 @FixWhiteMisalignment(%struct._cmsPipeline_struct* nonnull %468, i32 %51, i32 %55)
  %631 = icmp eq i32 %630, 0
  br i1 %631, label %661, label %632

632:                                              ; preds = %629, %625
  call void @cmsPipelineFree(%struct._cmsPipeline_struct* %37) #5
  store %struct._cmsPipeline_struct* %468, %struct._cmsPipeline_struct** %0, align 8
  br label %661

633:                                              ; preds = %158, %180, %437, %434, %338, %445, %59, %483, %476, %470, %456, %463, %453
  %634 = phi %struct._cmsPipeline_struct* [ null, %453 ], [ null, %463 ], [ %468, %483 ], [ %468, %476 ], [ %468, %470 ], [ null, %456 ], [ null, %59 ], [ null, %445 ], [ null, %338 ], [ null, %434 ], [ null, %437 ], [ null, %180 ], [ null, %158 ]
  %635 = phi %struct._cmsPipeline_struct* [ null, %453 ], [ %454, %463 ], [ %454, %483 ], [ %454, %476 ], [ %454, %470 ], [ %454, %456 ], [ null, %59 ], [ null, %445 ], [ null, %338 ], [ null, %434 ], [ null, %437 ], [ null, %180 ], [ null, %158 ]
  %636 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %37, i64 0, i32 1
  %637 = load i32, i32* %636, align 8
  %638 = icmp eq i32 %637, 0
  br i1 %638, label %655, label %639

639:                                              ; preds = %633, %650
  %640 = phi i64 [ %651, %650 ], [ 0, %633 ]
  %641 = getelementptr inbounds [16 x %struct._cms_curve_struct*], [16 x %struct._cms_curve_struct*]* %6, i64 0, i64 %640
  %642 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %641, align 8
  %643 = icmp eq %struct._cms_curve_struct* %642, null
  br i1 %643, label %645, label %644

644:                                              ; preds = %639
  call void @cmsFreeToneCurve(%struct._cms_curve_struct* nonnull %642) #5
  br label %645

645:                                              ; preds = %639, %644
  %646 = getelementptr inbounds [16 x %struct._cms_curve_struct*], [16 x %struct._cms_curve_struct*]* %7, i64 0, i64 %640
  %647 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %646, align 8
  %648 = icmp eq %struct._cms_curve_struct* %647, null
  br i1 %648, label %650, label %649

649:                                              ; preds = %645
  call void @cmsFreeToneCurve(%struct._cms_curve_struct* nonnull %647) #5
  br label %650

650:                                              ; preds = %645, %649
  %651 = add nuw nsw i64 %640, 1
  %652 = load i32, i32* %636, align 8
  %653 = zext i32 %652 to i64
  %654 = icmp ult i64 %651, %653
  br i1 %654, label %639, label %655

655:                                              ; preds = %650, %633
  %656 = icmp eq %struct._cmsPipeline_struct* %635, null
  br i1 %656, label %658, label %657

657:                                              ; preds = %655
  call void @cmsPipelineFree(%struct._cmsPipeline_struct* nonnull %635) #5
  br label %658

658:                                              ; preds = %655, %657
  %659 = icmp eq %struct._cmsPipeline_struct* %634, null
  br i1 %659, label %661, label %660

660:                                              ; preds = %658
  call void @cmsPipelineFree(%struct._cmsPipeline_struct* nonnull %634) #5
  br label %661

661:                                              ; preds = %40, %609, %518, %660, %658, %629, %47, %32, %25, %21, %5, %17, %632
  %662 = phi i32 [ 1, %632 ], [ 0, %17 ], [ 0, %5 ], [ 0, %21 ], [ 0, %25 ], [ 0, %32 ], [ 0, %47 ], [ 0, %629 ], [ 0, %658 ], [ 0, %660 ], [ 0, %518 ], [ 0, %609 ], [ 0, %40 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %13) #5
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %10) #5
  ret i32 %662

663:                                              ; preds = %612
  %664 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %507, align 8
  %665 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %664, i64 0, i32 0
  %666 = load %struct._cms_interp_struc*, %struct._cms_interp_struc** %665, align 8
  %667 = bitcast i8* %618 to %struct._cms_interp_struc**
  store %struct._cms_interp_struc* %666, %struct._cms_interp_struc** %667, align 8
  %668 = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %666, i64 0, i32 8, i32 0
  %669 = bitcast void (i16*, i16*, %struct._cms_interp_struc*)** %668 to i64*
  %670 = load i64, i64* %669, align 8
  %671 = bitcast i8* %619 to i64*
  store i64 %670, i64* %671, align 8
  %672 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %507, i64 1
  %673 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %672, align 8
  %674 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %673, i64 0, i32 0
  %675 = load %struct._cms_interp_struc*, %struct._cms_interp_struc** %674, align 8
  %676 = getelementptr inbounds i8, i8* %610, i64 88
  %677 = bitcast i8* %676 to %struct._cms_interp_struc**
  store %struct._cms_interp_struc* %675, %struct._cms_interp_struc** %677, align 8
  %678 = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %675, i64 0, i32 8, i32 0
  %679 = bitcast void (i16*, i16*, %struct._cms_interp_struc*)** %678 to i64*
  %680 = load i64, i64* %679, align 8
  %681 = getelementptr inbounds i8, i8* %610, i64 24
  %682 = bitcast i8* %681 to i64*
  store i64 %680, i64* %682, align 8
  %683 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %507, i64 2
  %684 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %683, align 8
  %685 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %684, i64 0, i32 0
  %686 = load %struct._cms_interp_struc*, %struct._cms_interp_struc** %685, align 8
  %687 = getelementptr inbounds i8, i8* %610, i64 96
  %688 = bitcast i8* %687 to %struct._cms_interp_struc**
  store %struct._cms_interp_struc* %686, %struct._cms_interp_struc** %688, align 8
  %689 = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %686, i64 0, i32 8, i32 0
  %690 = bitcast void (i16*, i16*, %struct._cms_interp_struc*)** %689 to i64*
  %691 = load i64, i64* %690, align 8
  %692 = getelementptr inbounds i8, i8* %610, i64 32
  %693 = bitcast i8* %692 to i64*
  store i64 %691, i64* %693, align 8
  br label %701

694:                                              ; preds = %612
  %695 = bitcast i8* %618 to <2 x %struct._cms_interp_struc*>*
  store <2 x %struct._cms_interp_struc*> zeroinitializer, <2 x %struct._cms_interp_struc*>* %695, align 8
  %696 = bitcast i8* %619 to <2 x void (i16*, i16*, %struct._cms_interp_struc*)*>*
  store <2 x void (i16*, i16*, %struct._cms_interp_struc*)*> <void (i16*, i16*, %struct._cms_interp_struc*)* @Eval16nop1D, void (i16*, i16*, %struct._cms_interp_struc*)* @Eval16nop1D>, <2 x void (i16*, i16*, %struct._cms_interp_struc*)*>* %696, align 8
  %697 = getelementptr inbounds i8, i8* %610, i64 96
  %698 = bitcast i8* %697 to %struct._cms_interp_struc**
  store %struct._cms_interp_struc* null, %struct._cms_interp_struc** %698, align 8
  %699 = getelementptr inbounds i8, i8* %610, i64 32
  %700 = bitcast i8* %699 to void (i16*, i16*, %struct._cms_interp_struc*)**
  store void (i16*, i16*, %struct._cms_interp_struc*)* @Eval16nop1D, void (i16*, i16*, %struct._cms_interp_struc*)** %700, align 8
  br label %701

701:                                              ; preds = %694, %663
  %702 = getelementptr inbounds i8, i8* %610, i64 152
  %703 = bitcast i8* %702 to %struct._cms_interp_struc**
  store %struct._cms_interp_struc* %517, %struct._cms_interp_struc** %703, align 8
  %704 = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %517, i64 0, i32 8, i32 0
  %705 = bitcast void (i16*, i16*, %struct._cms_interp_struc*)** %704 to i64*
  %706 = load i64, i64* %705, align 8
  %707 = getelementptr inbounds i8, i8* %610, i64 144
  %708 = bitcast i8* %707 to i64*
  store i64 %706, i64* %708, align 8
  %709 = call i8* @_cmsCalloc(%struct._cmsContext_struct* %515, i32 3, i32 8) #5
  %710 = getelementptr inbounds i8, i8* %610, i64 160
  %711 = bitcast i8* %710 to void (i16*, i16*, %struct._cms_interp_struc*)***
  %712 = bitcast i8* %710 to i8**
  store i8* %709, i8** %712, align 8
  %713 = call i8* @_cmsCalloc(%struct._cmsContext_struct* %515, i32 3, i32 8) #5
  %714 = getelementptr inbounds i8, i8* %610, i64 168
  %715 = bitcast i8* %714 to %struct._cms_interp_struc***
  %716 = bitcast i8* %714 to i8**
  store i8* %713, i8** %716, align 8
  %717 = bitcast i8* %713 to %struct._cms_interp_struc**
  store %struct._cms_interp_struc* null, %struct._cms_interp_struc** %717, align 8
  %718 = load void (i16*, i16*, %struct._cms_interp_struc*)**, void (i16*, i16*, %struct._cms_interp_struc*)*** %711, align 8
  store void (i16*, i16*, %struct._cms_interp_struc*)* @Eval16nop1D, void (i16*, i16*, %struct._cms_interp_struc*)** %718, align 8
  %719 = load %struct._cms_interp_struc**, %struct._cms_interp_struc*** %715, align 8
  %720 = getelementptr inbounds %struct._cms_interp_struc*, %struct._cms_interp_struc** %719, i64 1
  store %struct._cms_interp_struc* null, %struct._cms_interp_struc** %720, align 8
  %721 = load void (i16*, i16*, %struct._cms_interp_struc*)**, void (i16*, i16*, %struct._cms_interp_struc*)*** %711, align 8
  %722 = getelementptr inbounds void (i16*, i16*, %struct._cms_interp_struc*)*, void (i16*, i16*, %struct._cms_interp_struc*)** %721, i64 1
  store void (i16*, i16*, %struct._cms_interp_struc*)* @Eval16nop1D, void (i16*, i16*, %struct._cms_interp_struc*)** %722, align 8
  %723 = load %struct._cms_interp_struc**, %struct._cms_interp_struc*** %715, align 8
  %724 = getelementptr inbounds %struct._cms_interp_struc*, %struct._cms_interp_struc** %723, i64 2
  store %struct._cms_interp_struc* null, %struct._cms_interp_struc** %724, align 8
  %725 = load void (i16*, i16*, %struct._cms_interp_struc*)**, void (i16*, i16*, %struct._cms_interp_struc*)*** %711, align 8
  %726 = getelementptr inbounds void (i16*, i16*, %struct._cms_interp_struc*)*, void (i16*, i16*, %struct._cms_interp_struc*)** %725, i64 2
  store void (i16*, i16*, %struct._cms_interp_struc*)* @Eval16nop1D, void (i16*, i16*, %struct._cms_interp_struc*)** %726, align 8
  call void @_cmsPipelineSetOptimizationParameters(%struct._cmsPipeline_struct* nonnull %468, void (i16*, i16*, i8*)* nonnull @PrelinEval16, i8* nonnull %610, void (%struct._cmsContext_struct*, i8*)* nonnull @PrelinOpt16free, i8* (%struct._cmsContext_struct*, i8*)* nonnull @Prelin16dup) #5
  br label %620
}

declare %struct._cms_curve_struct* @cmsBuildTabulatedToneCurve16(%struct._cmsContext_struct*, i32, i16*) local_unnamed_addr #1

declare %struct._cmsStage_struct* @cmsStageAllocToneCurves(%struct._cmsContext_struct*, i32, %struct._cms_curve_struct**) local_unnamed_addr #1

declare i32 @_cmsFormatterIs8bit(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc %struct.Curves16Data* @CurvesAlloc(%struct._cmsContext_struct*, i32, i32, %struct._cms_curve_struct** nocapture readonly) unnamed_addr #0 {
  %5 = tail call i8* @_cmsMallocZero(%struct._cmsContext_struct* %0, i32 24) #5
  %6 = bitcast i8* %5 to %struct.Curves16Data*
  %7 = icmp eq i8* %5, null
  br i1 %7, label %82, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds i8, i8* %5, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 %1, i32* %10, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 12
  %12 = bitcast i8* %11 to i32*
  store i32 %2, i32* %12, align 4
  %13 = tail call i8* @_cmsCalloc(%struct._cmsContext_struct* %0, i32 %1, i32 8) #5
  %14 = getelementptr inbounds i8, i8* %5, i64 16
  %15 = bitcast i8* %14 to i16***
  %16 = bitcast i8* %14 to i8**
  store i8* %13, i8** %16, align 8
  %17 = icmp eq i8* %13, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %8
  %19 = icmp eq i32 %1, 0
  br i1 %19, label %82, label %20

20:                                               ; preds = %18
  %21 = zext i32 %2 to i64
  br label %23

22:                                               ; preds = %8
  tail call void @_cmsFree(%struct._cmsContext_struct* %0, i8* nonnull %5) #5
  br label %82

23:                                               ; preds = %79, %20
  %24 = phi i32 [ 0, %20 ], [ %80, %79 ]
  %25 = tail call i8* @_cmsCalloc(%struct._cmsContext_struct* %0, i32 %2, i32 2) #5
  %26 = load i16**, i16*** %15, align 8
  %27 = zext i32 %24 to i64
  %28 = getelementptr inbounds i16*, i16** %26, i64 %27
  %29 = bitcast i16** %28 to i8**
  store i8* %25, i8** %29, align 8
  %30 = load i16**, i16*** %15, align 8
  %31 = getelementptr inbounds i16*, i16** %30, i64 %27
  %32 = load i16*, i16** %31, align 8
  %33 = icmp eq i16* %32, null
  br i1 %33, label %34, label %49

34:                                               ; preds = %23
  %35 = zext i32 %24 to i64
  %36 = icmp eq i32 %24, 0
  br i1 %36, label %46, label %37

37:                                               ; preds = %34, %37
  %38 = phi i64 [ %43, %37 ], [ 0, %34 ]
  %39 = phi i16** [ %44, %37 ], [ %30, %34 ]
  %40 = getelementptr inbounds i16*, i16** %39, i64 %38
  %41 = bitcast i16** %40 to i8**
  %42 = load i8*, i8** %41, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %0, i8* %42) #5
  %43 = add nuw nsw i64 %38, 1
  %44 = load i16**, i16*** %15, align 8
  %45 = icmp eq i64 %43, %35
  br i1 %45, label %46, label %37

46:                                               ; preds = %37, %34
  %47 = phi i16** [ %30, %34 ], [ %44, %37 ]
  %48 = bitcast i16** %47 to i8*
  tail call void @_cmsFree(%struct._cmsContext_struct* %0, i8* %48) #5
  tail call void @_cmsFree(%struct._cmsContext_struct* %0, i8* nonnull %5) #5
  br label %82

49:                                               ; preds = %23
  switch i32 %2, label %50 [
    i32 256, label %52
    i32 0, label %79
  ]

50:                                               ; preds = %49
  %51 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %3, i64 %27
  br label %68

52:                                               ; preds = %49
  %53 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %3, i64 %27
  br label %54

54:                                               ; preds = %54, %52
  %55 = phi i64 [ 0, %52 ], [ %66, %54 ]
  %56 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %53, align 8
  %57 = trunc i64 %55 to i32
  %58 = shl i32 %57, 8
  %59 = or i32 %58, %57
  %60 = trunc i32 %59 to i16
  %61 = tail call zeroext i16 @cmsEvalToneCurve16(%struct._cms_curve_struct* %56, i16 zeroext %60) #5
  %62 = load i16**, i16*** %15, align 8
  %63 = getelementptr inbounds i16*, i16** %62, i64 %27
  %64 = load i16*, i16** %63, align 8
  %65 = getelementptr inbounds i16, i16* %64, i64 %55
  store i16 %61, i16* %65, align 2
  %66 = add nuw nsw i64 %55, 1
  %67 = icmp eq i64 %66, 256
  br i1 %67, label %79, label %54

68:                                               ; preds = %68, %50
  %69 = phi i64 [ 0, %50 ], [ %77, %68 ]
  %70 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %51, align 8
  %71 = trunc i64 %69 to i16
  %72 = tail call zeroext i16 @cmsEvalToneCurve16(%struct._cms_curve_struct* %70, i16 zeroext %71) #5
  %73 = load i16**, i16*** %15, align 8
  %74 = getelementptr inbounds i16*, i16** %73, i64 %27
  %75 = load i16*, i16** %74, align 8
  %76 = getelementptr inbounds i16, i16* %75, i64 %69
  store i16 %72, i16* %76, align 2
  %77 = add nuw nsw i64 %69, 1
  %78 = icmp eq i64 %77, %21
  br i1 %78, label %79, label %68

79:                                               ; preds = %54, %68, %49
  %80 = add i32 %24, 1
  %81 = icmp eq i32 %80, %1
  br i1 %81, label %82, label %23

82:                                               ; preds = %79, %18, %4, %46, %22
  %83 = phi %struct.Curves16Data* [ null, %22 ], [ null, %46 ], [ null, %4 ], [ %6, %18 ], [ %6, %79 ]
  ret %struct.Curves16Data* %83
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @FastEvaluateCurves8(i16* nocapture readonly, i16* nocapture, i8* nocapture readonly) #3 {
  %4 = getelementptr inbounds i8, i8* %2, i64 8
  %5 = bitcast i8* %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %27, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds i8, i8* %2, i64 16
  %10 = bitcast i8* %9 to i16***
  br label %11

11:                                               ; preds = %8, %11
  %12 = phi i64 [ 0, %8 ], [ %23, %11 ]
  %13 = getelementptr inbounds i16, i16* %0, i64 %12
  %14 = load i16, i16* %13, align 2
  %15 = lshr i16 %14, 8
  %16 = load i16**, i16*** %10, align 8
  %17 = getelementptr inbounds i16*, i16** %16, i64 %12
  %18 = load i16*, i16** %17, align 8
  %19 = zext i16 %15 to i64
  %20 = getelementptr inbounds i16, i16* %18, i64 %19
  %21 = load i16, i16* %20, align 2
  %22 = getelementptr inbounds i16, i16* %1, i64 %12
  store i16 %21, i16* %22, align 2
  %23 = add nuw nsw i64 %12, 1
  %24 = load i32, i32* %5, align 8
  %25 = zext i32 %24 to i64
  %26 = icmp ult i64 %23, %25
  br i1 %26, label %11, label %27

27:                                               ; preds = %11, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @CurvesFree(%struct._cmsContext_struct*, i8*) #0 {
  %3 = getelementptr inbounds i8, i8* %1, i64 8
  %4 = bitcast i8* %3 to i32*
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds i8, i8* %1, i64 16
  %8 = bitcast i8* %7 to i16***
  %9 = load i16**, i16*** %8, align 8
  br i1 %6, label %21, label %10

10:                                               ; preds = %2, %10
  %11 = phi i64 [ %16, %10 ], [ 0, %2 ]
  %12 = phi i16** [ %20, %10 ], [ %9, %2 ]
  %13 = getelementptr inbounds i16*, i16** %12, i64 %11
  %14 = bitcast i16** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %0, i8* %15) #5
  %16 = add nuw nsw i64 %11, 1
  %17 = load i32, i32* %4, align 8
  %18 = zext i32 %17 to i64
  %19 = icmp ult i64 %16, %18
  %20 = load i16**, i16*** %8, align 8
  br i1 %19, label %10, label %21

21:                                               ; preds = %10, %2
  %22 = phi i16** [ %9, %2 ], [ %20, %10 ]
  %23 = bitcast i16** %22 to i8*
  tail call void @_cmsFree(%struct._cmsContext_struct* %0, i8* %23) #5
  tail call void @_cmsFree(%struct._cmsContext_struct* %0, i8* %1) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @CurvesDup(%struct._cmsContext_struct*, i8*) #0 {
  %3 = tail call i8* @_cmsDupMem(%struct._cmsContext_struct* %0, i8* %1, i32 24) #5
  %4 = icmp eq i8* %3, null
  br i1 %4, label %45, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds i8, i8* %3, i64 16
  %7 = bitcast i8* %6 to i16***
  %8 = bitcast i8* %6 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds i8, i8* %3, i64 8
  %11 = bitcast i8* %10 to i32*
  %12 = load i32, i32* %11, align 8
  %13 = shl i32 %12, 3
  %14 = tail call i8* @_cmsDupMem(%struct._cmsContext_struct* %0, i8* %9, i32 %13) #5
  store i8* %14, i8** %8, align 8
  %15 = load i32, i32* %11, align 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %45, label %17

17:                                               ; preds = %5
  %18 = getelementptr inbounds i8, i8* %3, i64 12
  %19 = bitcast i8* %18 to i32*
  %20 = bitcast i8* %14 to i8**
  %21 = load i8*, i8** %20, align 8
  %22 = load i32, i32* %19, align 4
  %23 = shl i32 %22, 1
  %24 = tail call i8* @_cmsDupMem(%struct._cmsContext_struct* %0, i8* %21, i32 %23) #5
  %25 = bitcast i8* %6 to i8***
  %26 = load i8**, i8*** %25, align 8
  store i8* %24, i8** %26, align 8
  %27 = load i32, i32* %11, align 8
  %28 = icmp ugt i32 %27, 1
  br i1 %28, label %29, label %45

29:                                               ; preds = %17, %29
  %30 = phi i64 [ %41, %29 ], [ 1, %17 ]
  %31 = load i16**, i16*** %7, align 8
  %32 = getelementptr inbounds i16*, i16** %31, i64 %30
  %33 = bitcast i16** %32 to i8**
  %34 = load i8*, i8** %33, align 8
  %35 = load i32, i32* %19, align 4
  %36 = shl i32 %35, 1
  %37 = tail call i8* @_cmsDupMem(%struct._cmsContext_struct* %0, i8* %34, i32 %36) #5
  %38 = load i16**, i16*** %7, align 8
  %39 = getelementptr inbounds i16*, i16** %38, i64 %30
  %40 = bitcast i16** %39 to i8**
  store i8* %37, i8** %40, align 8
  %41 = add nuw nsw i64 %30, 1
  %42 = load i32, i32* %11, align 8
  %43 = zext i32 %42 to i64
  %44 = icmp ult i64 %41, %43
  br i1 %44, label %29, label %45

45:                                               ; preds = %29, %17, %5, %2
  ret i8* %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @FastEvaluateCurves16(i16* nocapture readonly, i16* nocapture, i8* nocapture readonly) #3 {
  %4 = getelementptr inbounds i8, i8* %2, i64 8
  %5 = bitcast i8* %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %26, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds i8, i8* %2, i64 16
  %10 = bitcast i8* %9 to i16***
  br label %11

11:                                               ; preds = %8, %11
  %12 = phi i64 [ 0, %8 ], [ %22, %11 ]
  %13 = load i16**, i16*** %10, align 8
  %14 = getelementptr inbounds i16*, i16** %13, i64 %12
  %15 = load i16*, i16** %14, align 8
  %16 = getelementptr inbounds i16, i16* %0, i64 %12
  %17 = load i16, i16* %16, align 2
  %18 = zext i16 %17 to i64
  %19 = getelementptr inbounds i16, i16* %15, i64 %18
  %20 = load i16, i16* %19, align 2
  %21 = getelementptr inbounds i16, i16* %1, i64 %12
  store i16 %20, i16* %21, align 2
  %22 = add nuw nsw i64 %12, 1
  %23 = load i32, i32* %5, align 8
  %24 = zext i32 %23 to i64
  %25 = icmp ult i64 %22, %24
  br i1 %25, label %11, label %26

26:                                               ; preds = %11, %3
  ret void
}

declare %struct._cmsStage_struct* @cmsStageAllocIdentity(%struct._cmsContext_struct*, i32) local_unnamed_addr #1

declare i32 @_cmsMAT3isIdentity(%struct.cmsMAT3*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare i8* @_cmsMalloc(%struct._cmsContext_struct*, i32) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @MatShaperEval16(i16* nocapture readonly, i16* nocapture, i8* nocapture readonly) #3 {
  %4 = load i16, i16* %0, align 2
  %5 = and i16 %4, 255
  %6 = getelementptr inbounds i16, i16* %0, i64 1
  %7 = load i16, i16* %6, align 2
  %8 = and i16 %7, 255
  %9 = getelementptr inbounds i16, i16* %0, i64 2
  %10 = load i16, i16* %9, align 2
  %11 = and i16 %10, 255
  %12 = getelementptr inbounds i8, i8* %2, i64 8
  %13 = bitcast i8* %12 to [256 x i32]*
  %14 = zext i16 %5 to i64
  %15 = getelementptr inbounds [256 x i32], [256 x i32]* %13, i64 0, i64 %14
  %16 = load i32, i32* %15, align 4
  %17 = icmp ugt i32 %16, 32767
  br i1 %17, label %18, label %23

18:                                               ; preds = %3
  %19 = icmp slt i32 %16, -268435456
  br i1 %19, label %23, label %20

20:                                               ; preds = %18
  %21 = icmp slt i32 %16, 268435455
  %22 = select i1 %21, i32 %16, i32 268435455
  br label %23

23:                                               ; preds = %3, %18, %20
  %24 = phi i32 [ %16, %3 ], [ -268435456, %18 ], [ %22, %20 ]
  %25 = getelementptr inbounds i8, i8* %2, i64 1032
  %26 = bitcast i8* %25 to [256 x i32]*
  %27 = zext i16 %8 to i64
  %28 = getelementptr inbounds [256 x i32], [256 x i32]* %26, i64 0, i64 %27
  %29 = load i32, i32* %28, align 4
  %30 = icmp ugt i32 %29, 32767
  br i1 %30, label %31, label %36

31:                                               ; preds = %23
  %32 = icmp slt i32 %29, -268435456
  br i1 %32, label %36, label %33

33:                                               ; preds = %31
  %34 = icmp slt i32 %29, 268435455
  %35 = select i1 %34, i32 %29, i32 268435455
  br label %36

36:                                               ; preds = %23, %31, %33
  %37 = phi i32 [ %29, %23 ], [ -268435456, %31 ], [ %35, %33 ]
  %38 = getelementptr inbounds i8, i8* %2, i64 2056
  %39 = bitcast i8* %38 to [256 x i32]*
  %40 = zext i16 %11 to i64
  %41 = getelementptr inbounds [256 x i32], [256 x i32]* %39, i64 0, i64 %40
  %42 = load i32, i32* %41, align 4
  %43 = icmp ugt i32 %42, 32767
  br i1 %43, label %44, label %49

44:                                               ; preds = %36
  %45 = icmp slt i32 %42, -268435456
  br i1 %45, label %49, label %46

46:                                               ; preds = %44
  %47 = icmp slt i32 %42, 268435455
  %48 = select i1 %47, i32 %42, i32 268435455
  br label %49

49:                                               ; preds = %36, %44, %46
  %50 = phi i32 [ %42, %36 ], [ -268435456, %44 ], [ %48, %46 ]
  %51 = getelementptr inbounds i8, i8* %2, i64 3080
  %52 = bitcast i8* %51 to i32*
  %53 = getelementptr inbounds i8, i8* %2, i64 3116
  %54 = bitcast i8* %53 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = load i32, i32* %52, align 4
  %57 = sext i32 %56 to i64
  %58 = sext i32 %24 to i64
  %59 = mul nsw i64 %57, %58
  %60 = getelementptr inbounds i8, i8* %2, i64 3084
  %61 = bitcast i8* %60 to i32*
  %62 = load i32, i32* %61, align 4
  %63 = sext i32 %62 to i64
  %64 = sext i32 %37 to i64
  %65 = mul nsw i64 %63, %64
  %66 = getelementptr inbounds i8, i8* %2, i64 3088
  %67 = bitcast i8* %66 to i32*
  %68 = load i32, i32* %67, align 4
  %69 = sext i32 %68 to i64
  %70 = sext i32 %50 to i64
  %71 = mul nsw i64 %69, %70
  %72 = sext i32 %55 to i64
  %73 = add nsw i64 %72, 8192
  %74 = add nsw i64 %73, %59
  %75 = add nsw i64 %74, %65
  %76 = add nsw i64 %75, %71
  %77 = ashr i64 %76, 14
  %78 = getelementptr inbounds i8, i8* %2, i64 3092
  %79 = bitcast i8* %78 to i32*
  %80 = getelementptr inbounds i8, i8* %2, i64 3120
  %81 = bitcast i8* %80 to i32*
  %82 = load i32, i32* %81, align 4
  %83 = load i32, i32* %79, align 4
  %84 = sext i32 %83 to i64
  %85 = mul nsw i64 %84, %58
  %86 = getelementptr inbounds i8, i8* %2, i64 3096
  %87 = bitcast i8* %86 to i32*
  %88 = load i32, i32* %87, align 4
  %89 = sext i32 %88 to i64
  %90 = mul nsw i64 %89, %64
  %91 = getelementptr inbounds i8, i8* %2, i64 3100
  %92 = bitcast i8* %91 to i32*
  %93 = load i32, i32* %92, align 4
  %94 = sext i32 %93 to i64
  %95 = mul nsw i64 %94, %70
  %96 = sext i32 %82 to i64
  %97 = add nsw i64 %96, 8192
  %98 = add nsw i64 %97, %85
  %99 = add nsw i64 %98, %90
  %100 = add nsw i64 %99, %95
  %101 = ashr i64 %100, 14
  %102 = getelementptr inbounds i8, i8* %2, i64 3104
  %103 = bitcast i8* %102 to i32*
  %104 = getelementptr inbounds i8, i8* %2, i64 3124
  %105 = bitcast i8* %104 to i32*
  %106 = load i32, i32* %105, align 4
  %107 = load i32, i32* %103, align 4
  %108 = sext i32 %107 to i64
  %109 = mul nsw i64 %108, %58
  %110 = getelementptr inbounds i8, i8* %2, i64 3108
  %111 = bitcast i8* %110 to i32*
  %112 = load i32, i32* %111, align 4
  %113 = sext i32 %112 to i64
  %114 = mul nsw i64 %113, %64
  %115 = getelementptr inbounds i8, i8* %2, i64 3112
  %116 = bitcast i8* %115 to i32*
  %117 = load i32, i32* %116, align 4
  %118 = sext i32 %117 to i64
  %119 = mul nsw i64 %118, %70
  %120 = sext i32 %106 to i64
  %121 = add nsw i64 %120, 8192
  %122 = add nsw i64 %121, %109
  %123 = add nsw i64 %122, %114
  %124 = add nsw i64 %123, %119
  %125 = ashr i64 %124, 14
  %126 = icmp slt i64 %76, 0
  br i1 %126, label %131, label %127

127:                                              ; preds = %49
  %128 = icmp slt i64 %77, 16384
  %129 = select i1 %128, i64 %77, i64 16384
  %130 = and i64 %129, 4294967295
  br label %131

131:                                              ; preds = %127, %49
  %132 = phi i64 [ 0, %49 ], [ %130, %127 ]
  %133 = icmp slt i64 %100, 0
  br i1 %133, label %138, label %134

134:                                              ; preds = %131
  %135 = icmp slt i64 %101, 16384
  %136 = select i1 %135, i64 %101, i64 16384
  %137 = and i64 %136, 4294967295
  br label %138

138:                                              ; preds = %134, %131
  %139 = phi i64 [ 0, %131 ], [ %137, %134 ]
  %140 = icmp slt i64 %124, 0
  br i1 %140, label %145, label %141

141:                                              ; preds = %138
  %142 = icmp slt i64 %125, 16384
  %143 = select i1 %142, i64 %125, i64 16384
  %144 = and i64 %143, 4294967295
  br label %145

145:                                              ; preds = %141, %138
  %146 = phi i64 [ 0, %138 ], [ %144, %141 ]
  %147 = getelementptr inbounds i8, i8* %2, i64 3128
  %148 = bitcast i8* %147 to [16385 x i16]*
  %149 = getelementptr inbounds [16385 x i16], [16385 x i16]* %148, i64 0, i64 %132
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %1, align 2
  %151 = getelementptr inbounds i8, i8* %2, i64 35898
  %152 = bitcast i8* %151 to [16385 x i16]*
  %153 = getelementptr inbounds [16385 x i16], [16385 x i16]* %152, i64 0, i64 %139
  %154 = load i16, i16* %153, align 2
  %155 = getelementptr inbounds i16, i16* %1, i64 1
  store i16 %154, i16* %155, align 2
  %156 = getelementptr inbounds i8, i8* %2, i64 68668
  %157 = bitcast i8* %156 to [16385 x i16]*
  %158 = getelementptr inbounds [16385 x i16], [16385 x i16]* %157, i64 0, i64 %146
  %159 = load i16, i16* %158, align 2
  %160 = getelementptr inbounds i16, i16* %1, i64 2
  store i16 %159, i16* %160, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @FreeMatShaper(%struct._cmsContext_struct*, i8*) #0 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %5, label %4

4:                                                ; preds = %2
  tail call void @_cmsFree(%struct._cmsContext_struct* %0, i8* nonnull %1) #5
  br label %5

5:                                                ; preds = %2, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @DupMatShaper(%struct._cmsContext_struct*, i8*) #0 {
  %3 = tail call i8* @_cmsDupMem(%struct._cmsContext_struct* %0, i8* %1, i32 101440) #5
  ret i8* %3
}

declare float @cmsEvalToneCurveFloat(%struct._cms_curve_struct*, float) local_unnamed_addr #1

declare i32 @cmsIsToneCurveMonotonic(%struct._cms_curve_struct*) local_unnamed_addr #1

declare %struct._cms_curve_struct* @cmsReverseToneCurveEx(i32, %struct._cms_curve_struct*) local_unnamed_addr #1

declare %struct._cmsPipeline_struct* @cmsPipelineDup(%struct._cmsPipeline_struct*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @PrelinEval8(i16* nocapture readonly, i16* nocapture, i8* nocapture readonly) #3 {
  %4 = getelementptr inbounds i8, i8* %2, i64 8
  %5 = bitcast i8* %4 to %struct._cms_interp_struc**
  %6 = load %struct._cms_interp_struc*, %struct._cms_interp_struc** %5, align 8
  %7 = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %6, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %6, i64 0, i32 7
  %10 = bitcast i8** %9 to i16**
  %11 = load i16*, i16** %10, align 8
  %12 = load i16, i16* %0, align 2
  %13 = lshr i16 %12, 8
  %14 = zext i16 %13 to i64
  %15 = getelementptr inbounds i16, i16* %0, i64 1
  %16 = load i16, i16* %15, align 2
  %17 = lshr i16 %16, 8
  %18 = zext i16 %17 to i64
  %19 = getelementptr inbounds i16, i16* %0, i64 2
  %20 = load i16, i16* %19, align 2
  %21 = lshr i16 %20, 8
  %22 = zext i16 %21 to i64
  %23 = getelementptr inbounds i8, i8* %2, i64 1552
  %24 = bitcast i8* %23 to [256 x i32]*
  %25 = getelementptr inbounds [256 x i32], [256 x i32]* %24, i64 0, i64 %14
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds i8, i8* %2, i64 2576
  %28 = bitcast i8* %27 to [256 x i32]*
  %29 = getelementptr inbounds [256 x i32], [256 x i32]* %28, i64 0, i64 %18
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds i8, i8* %2, i64 3600
  %32 = bitcast i8* %31 to [256 x i32]*
  %33 = getelementptr inbounds [256 x i32], [256 x i32]* %32, i64 0, i64 %22
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds i8, i8* %2, i64 16
  %36 = bitcast i8* %35 to [256 x i16]*
  %37 = getelementptr inbounds [256 x i16], [256 x i16]* %36, i64 0, i64 %14
  %38 = load i16, i16* %37, align 2
  %39 = zext i16 %38 to i32
  %40 = getelementptr inbounds i8, i8* %2, i64 528
  %41 = bitcast i8* %40 to [256 x i16]*
  %42 = getelementptr inbounds [256 x i16], [256 x i16]* %41, i64 0, i64 %18
  %43 = load i16, i16* %42, align 2
  %44 = zext i16 %43 to i32
  %45 = getelementptr inbounds i8, i8* %2, i64 1040
  %46 = bitcast i8* %45 to [256 x i16]*
  %47 = getelementptr inbounds [256 x i16], [256 x i16]* %46, i64 0, i64 %22
  %48 = load i16, i16* %47, align 2
  %49 = zext i16 %48 to i32
  %50 = icmp eq i16 %38, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %3
  %52 = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %6, i64 0, i32 6, i64 2
  %53 = load i32, i32* %52, align 4
  br label %54

54:                                               ; preds = %3, %51
  %55 = phi i32 [ %53, %51 ], [ 0, %3 ]
  %56 = add nsw i32 %55, %26
  %57 = icmp eq i16 %43, 0
  br i1 %57, label %61, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %6, i64 0, i32 6, i64 1
  %60 = load i32, i32* %59, align 4
  br label %61

61:                                               ; preds = %54, %58
  %62 = phi i32 [ %60, %58 ], [ 0, %54 ]
  %63 = add nsw i32 %62, %30
  %64 = icmp eq i16 %48, 0
  br i1 %64, label %68, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %6, i64 0, i32 6, i64 0
  %67 = load i32, i32* %66, align 4
  br label %68

68:                                               ; preds = %61, %65
  %69 = phi i32 [ %67, %65 ], [ 0, %61 ]
  %70 = add nsw i32 %69, %34
  %71 = icmp sgt i32 %8, 0
  br i1 %71, label %72, label %250

72:                                               ; preds = %68
  %73 = add nsw i32 %30, %26
  %74 = icmp ult i16 %38, %43
  %75 = icmp ult i16 %43, %48
  %76 = or i1 %74, %75
  %77 = add nsw i32 %63, %56
  %78 = icmp ult i16 %38, %48
  %79 = icmp ult i16 %48, %43
  %80 = or i1 %78, %79
  %81 = add nsw i32 %56, %30
  %82 = icmp ult i16 %48, %38
  %83 = or i1 %74, %82
  %84 = icmp ult i16 %43, %38
  %85 = or i1 %84, %78
  %86 = or i1 %75, %82
  %87 = add nsw i32 %63, %26
  %88 = or i1 %84, %79
  %89 = zext i32 %8 to i64
  br label %90

90:                                               ; preds = %232, %72
  %91 = phi i64 [ 0, %72 ], [ %248, %232 ]
  %92 = trunc i64 %91 to i32
  %93 = add i32 %34, %92
  %94 = add i32 %93, %73
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds i16, i16* %11, i64 %95
  %97 = load i16, i16* %96, align 2
  %98 = zext i16 %97 to i32
  br i1 %76, label %120, label %99

99:                                               ; preds = %90
  %100 = add i32 %93, %30
  %101 = add i32 %100, %56
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds i16, i16* %11, i64 %102
  %104 = load i16, i16* %103, align 2
  %105 = zext i16 %104 to i32
  %106 = sub nsw i32 %105, %98
  %107 = add i32 %93, %77
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds i16, i16* %11, i64 %108
  %110 = load i16, i16* %109, align 2
  %111 = zext i16 %110 to i32
  %112 = sub nsw i32 %111, %105
  %113 = add i32 %70, %92
  %114 = add i32 %113, %77
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds i16, i16* %11, i64 %115
  %117 = load i16, i16* %116, align 2
  %118 = zext i16 %117 to i32
  %119 = sub nsw i32 %118, %111
  br label %232

120:                                              ; preds = %90
  br i1 %80, label %142, label %121

121:                                              ; preds = %120
  %122 = add i32 %93, %81
  %123 = sext i32 %122 to i64
  %124 = getelementptr inbounds i16, i16* %11, i64 %123
  %125 = load i16, i16* %124, align 2
  %126 = zext i16 %125 to i32
  %127 = sub nsw i32 %126, %98
  %128 = add i32 %70, %92
  %129 = add i32 %128, %56
  %130 = add i32 %129, %63
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds i16, i16* %11, i64 %131
  %133 = load i16, i16* %132, align 2
  %134 = zext i16 %133 to i32
  %135 = add i32 %128, %81
  %136 = sext i32 %135 to i64
  %137 = getelementptr inbounds i16, i16* %11, i64 %136
  %138 = load i16, i16* %137, align 2
  %139 = zext i16 %138 to i32
  %140 = sub nsw i32 %134, %139
  %141 = sub nsw i32 %139, %126
  br label %232

142:                                              ; preds = %120
  br i1 %83, label %165, label %143

143:                                              ; preds = %142
  %144 = add i32 %70, %92
  %145 = add i32 %144, %30
  %146 = add i32 %145, %56
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds i16, i16* %11, i64 %147
  %149 = load i16, i16* %148, align 2
  %150 = zext i16 %149 to i32
  %151 = add i32 %144, %73
  %152 = sext i32 %151 to i64
  %153 = getelementptr inbounds i16, i16* %11, i64 %152
  %154 = load i16, i16* %153, align 2
  %155 = zext i16 %154 to i32
  %156 = sub nsw i32 %150, %155
  %157 = add i32 %144, %56
  %158 = add i32 %157, %63
  %159 = sext i32 %158 to i64
  %160 = getelementptr inbounds i16, i16* %11, i64 %159
  %161 = load i16, i16* %160, align 2
  %162 = zext i16 %161 to i32
  %163 = sub nsw i32 %162, %150
  %164 = sub nsw i32 %155, %98
  br label %232

165:                                              ; preds = %142
  br i1 %85, label %187, label %166

166:                                              ; preds = %165
  %167 = add i32 %93, %77
  %168 = sext i32 %167 to i64
  %169 = getelementptr inbounds i16, i16* %11, i64 %168
  %170 = load i16, i16* %169, align 2
  %171 = zext i16 %170 to i32
  %172 = add i32 %93, %26
  %173 = add i32 %172, %63
  %174 = sext i32 %173 to i64
  %175 = getelementptr inbounds i16, i16* %11, i64 %174
  %176 = load i16, i16* %175, align 2
  %177 = zext i16 %176 to i32
  %178 = sub nsw i32 %171, %177
  %179 = sub nsw i32 %177, %98
  %180 = add i32 %70, %92
  %181 = add i32 %180, %77
  %182 = sext i32 %181 to i64
  %183 = getelementptr inbounds i16, i16* %11, i64 %182
  %184 = load i16, i16* %183, align 2
  %185 = zext i16 %184 to i32
  %186 = sub nsw i32 %185, %171
  br label %232

187:                                              ; preds = %165
  br i1 %86, label %209, label %188

188:                                              ; preds = %187
  %189 = add i32 %70, %92
  %190 = add i32 %189, %56
  %191 = add i32 %190, %63
  %192 = sext i32 %191 to i64
  %193 = getelementptr inbounds i16, i16* %11, i64 %192
  %194 = load i16, i16* %193, align 2
  %195 = zext i16 %194 to i32
  %196 = add i32 %189, %87
  %197 = sext i32 %196 to i64
  %198 = getelementptr inbounds i16, i16* %11, i64 %197
  %199 = load i16, i16* %198, align 2
  %200 = zext i16 %199 to i32
  %201 = sub nsw i32 %195, %200
  %202 = add i32 %93, %87
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds i16, i16* %11, i64 %203
  %205 = load i16, i16* %204, align 2
  %206 = zext i16 %205 to i32
  %207 = sub nsw i32 %206, %98
  %208 = sub nsw i32 %200, %206
  br label %232

209:                                              ; preds = %187
  br i1 %88, label %232, label %210

210:                                              ; preds = %209
  %211 = add i32 %70, %92
  %212 = add i32 %211, %56
  %213 = add i32 %212, %63
  %214 = sext i32 %213 to i64
  %215 = getelementptr inbounds i16, i16* %11, i64 %214
  %216 = load i16, i16* %215, align 2
  %217 = zext i16 %216 to i32
  %218 = add i32 %211, %26
  %219 = add i32 %218, %63
  %220 = sext i32 %219 to i64
  %221 = getelementptr inbounds i16, i16* %11, i64 %220
  %222 = load i16, i16* %221, align 2
  %223 = zext i16 %222 to i32
  %224 = sub nsw i32 %217, %223
  %225 = add i32 %211, %73
  %226 = sext i32 %225 to i64
  %227 = getelementptr inbounds i16, i16* %11, i64 %226
  %228 = load i16, i16* %227, align 2
  %229 = zext i16 %228 to i32
  %230 = sub nsw i32 %223, %229
  %231 = sub nsw i32 %229, %98
  br label %232

232:                                              ; preds = %209, %121, %166, %210, %188, %143, %99
  %233 = phi i32 [ %106, %99 ], [ %127, %121 ], [ %156, %143 ], [ %178, %166 ], [ %201, %188 ], [ %224, %210 ], [ 0, %209 ]
  %234 = phi i32 [ %112, %99 ], [ %140, %121 ], [ %163, %143 ], [ %179, %166 ], [ %207, %188 ], [ %230, %210 ], [ 0, %209 ]
  %235 = phi i32 [ %119, %99 ], [ %141, %121 ], [ %164, %143 ], [ %186, %166 ], [ %208, %188 ], [ %231, %210 ], [ 0, %209 ]
  %236 = mul nsw i32 %233, %39
  %237 = mul nsw i32 %234, %44
  %238 = mul nsw i32 %235, %49
  %239 = add i32 %236, 32769
  %240 = add i32 %239, %237
  %241 = add i32 %240, %238
  %242 = ashr i32 %241, 16
  %243 = add nsw i32 %242, %241
  %244 = lshr i32 %243, 16
  %245 = trunc i32 %244 to i16
  %246 = add i16 %97, %245
  %247 = getelementptr inbounds i16, i16* %1, i64 %91
  store i16 %246, i16* %247, align 2
  %248 = add nuw nsw i64 %91, 1
  %249 = icmp eq i64 %248, %89
  br i1 %249, label %250, label %90

250:                                              ; preds = %232, %68
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @Prelin8free(%struct._cmsContext_struct*, i8*) #0 {
  tail call void @_cmsFree(%struct._cmsContext_struct* %0, i8* %1) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Prelin8dup(%struct._cmsContext_struct*, i8*) #0 {
  %3 = tail call i8* @_cmsDupMem(%struct._cmsContext_struct* %0, i8* %1, i32 4624) #5
  ret i8* %3
}

declare i32 @cmsIsToneCurveDescending(%struct._cms_curve_struct*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare <4 x double> @llvm.floor.v4f64(<4 x double>) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
!4 = distinct !{!4, !5, !3}
!5 = !{!"llvm.loop.unroll.runtime.disable"}
!6 = distinct !{!6, !3}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.unroll.disable"}
!9 = distinct !{!9, !5, !3}
!10 = distinct !{!10, !3}
!11 = distinct !{!11, !8}
!12 = distinct !{!12, !5, !3}
!13 = distinct !{!13, !8}
!14 = distinct !{!14, !3}
!15 = distinct !{!15, !5, !3}
!16 = distinct !{!16, !3}
!17 = distinct !{!17, !5, !3}
