; ModuleID = '../../third_party/webrtc/modules/audio_coding/neteq/preemptive_expand.cc'
source_filename = "../../third_party/webrtc/modules/audio_coding/neteq/preemptive_expand.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.webrtc::PreemptiveExpand" = type { %"class.webrtc::TimeStretch.base", i64, i64 }
%"class.webrtc::TimeStretch.base" = type <{ i32 (...)**, i32, i32, i64, %"class.webrtc::BackgroundNoise"*, i16, [110 x i16], [51 x i16] }>
%"class.webrtc::BackgroundNoise" = type opaque
%"class.webrtc::AudioMultiVector" = type { i32 (...)**, %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.webrtc::AudioVector"**, %"class.webrtc::AudioVector"**, %"class.std::__1::__compressed_pair.1" }
%"class.webrtc::AudioVector" = type { i32 (...)**, %"class.std::__1::unique_ptr", i64, i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i16* }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.webrtc::AudioVector"** }
%"class.webrtc::TimeStretch" = type <{ i32 (...)**, i32, i32, i64, %"class.webrtc::BackgroundNoise"*, i16, [110 x i16], [51 x i16], [4 x i8] }>
%"struct.webrtc::PreemptiveExpandFactory" = type { i32 (...)** }

$_ZN6webrtc11TimeStretchD2Ev = comdat any

$_ZN6webrtc16PreemptiveExpandD0Ev = comdat any

$_ZN6webrtc23PreemptiveExpandFactoryD2Ev = comdat any

$_ZN6webrtc23PreemptiveExpandFactoryD0Ev = comdat any

@_ZTVN6webrtc16PreemptiveExpandE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::TimeStretch"*)* @_ZN6webrtc11TimeStretchD2Ev to i8*), i8* bitcast (void (%"class.webrtc::PreemptiveExpand"*)* @_ZN6webrtc16PreemptiveExpandD0Ev to i8*), i8* bitcast (void (%"class.webrtc::PreemptiveExpand"*, i64, i16*, i64*)* @_ZNK6webrtc16PreemptiveExpand29SetParametersForPassiveSpeechEmPsPm to i8*), i8* bitcast (i32 (%"class.webrtc::PreemptiveExpand"*, i16*, i64, i64, i16, i1, i1, %"class.webrtc::AudioMultiVector"*)* @_ZNK6webrtc16PreemptiveExpand23CheckCriteriaAndStretchEPKsmmsbbPNS_16AudioMultiVectorE to i8*)] }, align 8
@_ZTVN6webrtc23PreemptiveExpandFactoryE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.webrtc::PreemptiveExpandFactory"*)* @_ZN6webrtc23PreemptiveExpandFactoryD2Ev to i8*), i8* bitcast (void (%"struct.webrtc::PreemptiveExpandFactory"*)* @_ZN6webrtc23PreemptiveExpandFactoryD0Ev to i8*), i8* bitcast (%"class.webrtc::PreemptiveExpand"* (%"struct.webrtc::PreemptiveExpandFactory"*, i32, i64, %"class.webrtc::BackgroundNoise"*, i64)* @_ZNK6webrtc23PreemptiveExpandFactory6CreateEimRKNS_15BackgroundNoiseEm to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc16PreemptiveExpand7ProcessEPKsmmPNS_16AudioMultiVectorEPm(%"class.webrtc::PreemptiveExpand"*, i16*, i64, i64, %"class.webrtc::AudioMultiVector"*, i64*) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.webrtc::PreemptiveExpand", %"class.webrtc::PreemptiveExpand"* %0, i64 0, i32 1
  store i64 %3, i64* %7, align 8
  %8 = bitcast %"class.webrtc::PreemptiveExpand"* %0 to %"class.webrtc::TimeStretch"*
  %9 = getelementptr inbounds %"class.webrtc::PreemptiveExpand", %"class.webrtc::PreemptiveExpand"* %0, i64 0, i32 0, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %24, label %12

12:                                               ; preds = %6
  %13 = udiv i64 %2, %10
  %14 = getelementptr inbounds %"class.webrtc::PreemptiveExpand", %"class.webrtc::PreemptiveExpand"* %0, i64 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = sext i32 %15 to i64
  %17 = mul nsw i64 %16, 239
  %18 = icmp ult i64 %13, %17
  br i1 %18, label %24, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.webrtc::PreemptiveExpand", %"class.webrtc::PreemptiveExpand"* %0, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %13, %21
  %23 = icmp ugt i64 %22, %3
  br i1 %23, label %27, label %24

24:                                               ; preds = %19, %12, %6
  %25 = icmp eq i64 %2, 0
  %26 = select i1 %25, i16* null, i16* %1
  tail call void @_ZN6webrtc16AudioMultiVector19PushBackInterleavedEN3rtc9ArrayViewIKsLln4711EEE(%"class.webrtc::AudioMultiVector"* %4, i16* %26, i64 %2) #7
  br label %29

27:                                               ; preds = %19
  %28 = tail call i32 @_ZN6webrtc11TimeStretch7ProcessEPKsmbPNS_16AudioMultiVectorEPm(%"class.webrtc::TimeStretch"* %8, i16* %1, i64 %2, i1 zeroext false, %"class.webrtc::AudioMultiVector"* %4, i64* %5) #7
  br label %29

29:                                               ; preds = %27, %24
  %30 = phi i32 [ -1, %24 ], [ %28, %27 ]
  ret i32 %30
}

declare void @_ZN6webrtc16AudioMultiVector19PushBackInterleavedEN3rtc9ArrayViewIKsLln4711EEE(%"class.webrtc::AudioMultiVector"*, i16*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare i32 @_ZN6webrtc11TimeStretch7ProcessEPKsmbPNS_16AudioMultiVectorEPm(%"class.webrtc::TimeStretch"*, i16*, i64, i1 zeroext, %"class.webrtc::AudioMultiVector"*, i64*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6webrtc16PreemptiveExpand29SetParametersForPassiveSpeechEmPsPm(%"class.webrtc::PreemptiveExpand"* nocapture readonly, i64, i16* nocapture, i64* nocapture) unnamed_addr #0 align 2 {
  store i16 0, i16* %2, align 2
  %5 = getelementptr inbounds %"class.webrtc::PreemptiveExpand", %"class.webrtc::PreemptiveExpand"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = sub i64 %1, %6
  %8 = load i64, i64* %3, align 8
  %9 = icmp ult i64 %7, %8
  %10 = select i1 %9, i64 %7, i64 %8
  store i64 %10, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK6webrtc16PreemptiveExpand23CheckCriteriaAndStretchEPKsmmsbbPNS_16AudioMultiVectorE(%"class.webrtc::PreemptiveExpand"* nocapture readonly, i16*, i64, i64, i16 signext, i1 zeroext, i1 zeroext, %"class.webrtc::AudioMultiVector"*) unnamed_addr #0 align 2 {
  %9 = alloca %"class.webrtc::AudioMultiVector", align 8
  %10 = getelementptr inbounds %"class.webrtc::PreemptiveExpand", %"class.webrtc::PreemptiveExpand"* %0, i64 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul nsw i32 %11, 120
  %13 = sext i32 %12 to i64
  %14 = icmp sgt i16 %4, 14746
  br i1 %14, label %15, label %21

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.webrtc::PreemptiveExpand", %"class.webrtc::PreemptiveExpand"* %0, i64 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = icmp ule i64 %17, %13
  %19 = xor i1 %5, true
  %20 = or i1 %18, %19
  br i1 %20, label %26, label %58

21:                                               ; preds = %8
  br i1 %5, label %58, label %22

22:                                               ; preds = %21
  %23 = getelementptr inbounds %"class.webrtc::PreemptiveExpand", %"class.webrtc::PreemptiveExpand"* %0, i64 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = xor i1 %5, true
  br label %26

26:                                               ; preds = %22, %15
  %27 = phi i1 [ %25, %22 ], [ %19, %15 ]
  %28 = phi i64 [ %24, %22 ], [ %17, %15 ]
  %29 = icmp ult i64 %28, %13
  %30 = select i1 %29, i64 %13, i64 %28
  %31 = add i64 %30, %3
  %32 = getelementptr inbounds %"class.webrtc::PreemptiveExpand", %"class.webrtc::PreemptiveExpand"* %0, i64 0, i32 0, i32 3
  %33 = load i64, i64* %32, align 8
  %34 = mul i64 %31, %33
  %35 = icmp eq i64 %34, 0
  %36 = select i1 %35, i16* null, i16* %1
  tail call void @_ZN6webrtc16AudioMultiVector19PushBackInterleavedEN3rtc9ArrayViewIKsLln4711EEE(%"class.webrtc::AudioMultiVector"* %7, i16* %36, i64 %34) #7
  %37 = bitcast %"class.webrtc::AudioMultiVector"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %37) #7
  %38 = bitcast %"class.webrtc::AudioMultiVector"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 40, i1 false)
  %39 = load i64, i64* %32, align 8
  call void @_ZN6webrtc16AudioMultiVectorC1Em(%"class.webrtc::AudioMultiVector"* nonnull %9, i64 %39) #7
  %40 = sub i64 %30, %3
  %41 = load i64, i64* %32, align 8
  %42 = mul i64 %41, %40
  %43 = getelementptr inbounds i16, i16* %1, i64 %42
  %44 = mul i64 %41, %3
  %45 = icmp eq i64 %44, 0
  %46 = select i1 %45, i16* null, i16* %43
  call void @_ZN6webrtc16AudioMultiVector19PushBackInterleavedEN3rtc9ArrayViewIKsLln4711EEE(%"class.webrtc::AudioMultiVector"* nonnull %9, i16* %46, i64 %44) #7
  %47 = bitcast %"class.webrtc::AudioMultiVector"* %7 to void (%"class.webrtc::AudioMultiVector"*, %"class.webrtc::AudioMultiVector"*, i64)***
  %48 = load void (%"class.webrtc::AudioMultiVector"*, %"class.webrtc::AudioMultiVector"*, i64)**, void (%"class.webrtc::AudioMultiVector"*, %"class.webrtc::AudioMultiVector"*, i64)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.webrtc::AudioMultiVector"*, %"class.webrtc::AudioMultiVector"*, i64)*, void (%"class.webrtc::AudioMultiVector"*, %"class.webrtc::AudioMultiVector"*, i64)** %48, i64 13
  %50 = load void (%"class.webrtc::AudioMultiVector"*, %"class.webrtc::AudioMultiVector"*, i64)*, void (%"class.webrtc::AudioMultiVector"*, %"class.webrtc::AudioMultiVector"*, i64)** %49, align 8
  call void %50(%"class.webrtc::AudioMultiVector"* %7, %"class.webrtc::AudioMultiVector"* nonnull dereferenceable(40) %9, i64 %3) #7
  %51 = load i64, i64* %32, align 8
  %52 = mul i64 %51, %30
  %53 = getelementptr inbounds i16, i16* %1, i64 %52
  %54 = sub i64 %2, %52
  %55 = icmp eq i64 %54, 0
  %56 = select i1 %55, i16* null, i16* %53
  call void @_ZN6webrtc16AudioMultiVector19PushBackInterleavedEN3rtc9ArrayViewIKsLln4711EEE(%"class.webrtc::AudioMultiVector"* %7, i16* %56, i64 %54) #7
  %57 = zext i1 %27 to i32
  call void @_ZN6webrtc16AudioMultiVectorD1Ev(%"class.webrtc::AudioMultiVector"* nonnull %9) #7
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %37) #7
  br label %61

58:                                               ; preds = %15, %21
  %59 = icmp eq i64 %2, 0
  %60 = select i1 %59, i16* null, i16* %1
  tail call void @_ZN6webrtc16AudioMultiVector19PushBackInterleavedEN3rtc9ArrayViewIKsLln4711EEE(%"class.webrtc::AudioMultiVector"* %7, i16* %60, i64 %2) #7
  br label %61

61:                                               ; preds = %58, %26
  %62 = phi i32 [ %57, %26 ], [ 2, %58 ]
  ret i32 %62
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN6webrtc16AudioMultiVectorC1Em(%"class.webrtc::AudioMultiVector"*, i64) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN6webrtc16AudioMultiVectorD1Ev(%"class.webrtc::AudioMultiVector"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden noalias nonnull %"class.webrtc::PreemptiveExpand"* @_ZNK6webrtc23PreemptiveExpandFactory6CreateEimRKNS_15BackgroundNoiseEm(%"struct.webrtc::PreemptiveExpandFactory"* nocapture readnone, i32, i64, %"class.webrtc::BackgroundNoise"*, i64) unnamed_addr #0 align 2 {
  %6 = tail call i8* @_Znwm(i64 376) #8
  %7 = bitcast i8* %6 to %"class.webrtc::PreemptiveExpand"*
  %8 = bitcast i8* %6 to i32 (...)***
  %9 = getelementptr inbounds i8, i8* %6, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 %1, i32* %10, align 8
  %11 = getelementptr inbounds i8, i8* %6, i64 12
  %12 = bitcast i8* %11 to i32*
  %13 = sdiv i32 %1, 8000
  store i32 %13, i32* %12, align 4
  %14 = getelementptr inbounds i8, i8* %6, i64 16
  %15 = bitcast i8* %14 to i64*
  store i64 %2, i64* %15, align 8
  %16 = getelementptr inbounds i8, i8* %6, i64 24
  %17 = bitcast i8* %16 to %"class.webrtc::BackgroundNoise"**
  store %"class.webrtc::BackgroundNoise"* %3, %"class.webrtc::BackgroundNoise"** %17, align 8
  %18 = getelementptr inbounds i8, i8* %6, i64 32
  %19 = bitcast i8* %18 to i16*
  store i16 0, i16* %19, align 8
  %20 = getelementptr inbounds i8, i8* %6, i64 254
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %20, i8 0, i64 102, i1 false) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc16PreemptiveExpandE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %21 = getelementptr inbounds i8, i8* %6, i64 360
  %22 = bitcast i8* %21 to i64*
  store i64 0, i64* %22, align 8
  %23 = getelementptr inbounds i8, i8* %6, i64 368
  %24 = bitcast i8* %23 to i64*
  store i64 %4, i64* %24, align 8
  ret %"class.webrtc::PreemptiveExpand"* %7
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc11TimeStretchD2Ev(%"class.webrtc::TimeStretch"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc16PreemptiveExpandD0Ev(%"class.webrtc::PreemptiveExpand"*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %"class.webrtc::PreemptiveExpand"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc23PreemptiveExpandFactoryD2Ev(%"struct.webrtc::PreemptiveExpandFactory"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc23PreemptiveExpandFactoryD0Ev(%"struct.webrtc::PreemptiveExpandFactory"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"struct.webrtc::PreemptiveExpandFactory"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
