; ModuleID = '../../ui/gl/gl_image.cc'
source_filename = "../../ui/gl/gl_image.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gl::GLImage" = type { i32 (...)**, %"class.base::RefCounted", %"class.gfx::ColorSpace" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::GpuFence" = type { %"struct.gfx::GpuFenceHandle" }
%"struct.gfx::GpuFenceHandle" = type { %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::trace_event::ProcessMemoryDump" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.gfx::NativePixmap" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }

$_ZN2gl7GLImageD2Ev = comdat any

$_ZN2gl7GLImageD0Ev = comdat any

@_ZTVN2gl7GLImageE = hidden unnamed_addr constant { [24 x i8*] } { [24 x i8*] [i8* null, i8* null, i8* bitcast (i64 (%"class.gl::GLImage"*)* @_ZN2gl7GLImage7GetSizeEv to i8*), i8* bitcast (i32 (%"class.gl::GLImage"*)* @_ZN2gl7GLImage17GetInternalFormatEv to i8*), i8* bitcast (i32 (%"class.gl::GLImage"*)* @_ZN2gl7GLImage13GetDataFormatEv to i8*), i8* bitcast (i32 (%"class.gl::GLImage"*)* @_ZN2gl7GLImage11GetDataTypeEv to i8*), i8* bitcast (i32 (%"class.gl::GLImage"*)* @_ZN2gl7GLImage16ShouldBindOrCopyEv to i8*), i8* bitcast (i1 (%"class.gl::GLImage"*, i32)* @_ZN2gl7GLImage12BindTexImageEj to i8*), i8* bitcast (i1 (%"class.gl::GLImage"*, i32, i32)* @_ZN2gl7GLImage30BindTexImageWithInternalformatEjj to i8*), i8* bitcast (void (%"class.gl::GLImage"*, i32)* @_ZN2gl7GLImage15ReleaseTexImageEj to i8*), i8* bitcast (i1 (%"class.gl::GLImage"*, i32)* @_ZN2gl7GLImage12CopyTexImageEj to i8*), i8* bitcast (i1 (%"class.gl::GLImage"*, i32, %"class.gfx::Point"*, %"class.gfx::Rect"*)* @_ZN2gl7GLImage15CopyTexSubImageEjRKN3gfx5PointERKNS1_4RectE to i8*), i8* bitcast (i1 (%"class.gl::GLImage"*, i32, i32, i32, %"class.gfx::Rect"*, %"class.gfx::RectF"*, i1, i64)* @_ZN2gl7GLImage20ScheduleOverlayPlaneEjiN3gfx16OverlayTransformERKNS1_4RectERKNS1_5RectFEbNSt3__110unique_ptrINS1_8GpuFenceENS9_14default_deleteISB_EEEE to i8*), i8* bitcast (void (%"class.gl::GLImage"*, %"class.gfx::ColorSpace"*)* @_ZN2gl7GLImage13SetColorSpaceERKN3gfx10ColorSpaceE to i8*), i8* bitcast (void (%"class.gl::GLImage"*)* @_ZN2gl7GLImage5FlushEv to i8*), i8* bitcast (void (%"class.gl::GLImage"*, %"class.base::trace_event::ProcessMemoryDump"*, i64, %"class.std::__1::basic_string"*)* @_ZN2gl7GLImage12OnMemoryDumpEPN4base11trace_event17ProcessMemoryDumpEmRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE to i8*), i8* bitcast (i1 (%"class.gl::GLImage"*)* @_ZNK2gl7GLImage12EmulatingRGBEv to i8*), i8* bitcast (i1 (%"class.gl::GLImage"*)* @_ZNK2gl7GLImage21IsInUseByWindowServerEv to i8*), i8* bitcast (void (%"class.gl::GLImage"*)* @_ZN2gl7GLImage26DisableInUseByWindowServerEv to i8*), i8* bitcast (i32 (%"class.gl::GLImage"*)* @_ZNK2gl7GLImage7GetTypeEv to i8*), i8* bitcast (i1 (%"class.gl::GLImage"*)* @_ZNK2gl7GLImage15HasMutableStateEv to i8*), i8* bitcast (%"class.gfx::NativePixmap"* (%"class.gl::GLImage"*)* @_ZN2gl7GLImage15GetNativePixmapEv to i8*), i8* bitcast (void (%"class.gl::GLImage"*)* @_ZN2gl7GLImageD2Ev to i8*), i8* bitcast (void (%"class.gl::GLImage"*)* @_ZN2gl7GLImageD0Ev to i8*)] }, align 8

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2gl7GLImage7GetSizeEv(%"class.gl::GLImage"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i64 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2gl7GLImage17GetInternalFormatEv(%"class.gl::GLImage"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl7GLImage13GetDataFormatEv(%"class.gl::GLImage"*) unnamed_addr #1 align 2 {
  %2 = bitcast %"class.gl::GLImage"* %0 to i32 (%"class.gl::GLImage"*)***
  %3 = load i32 (%"class.gl::GLImage"*)**, i32 (%"class.gl::GLImage"*)*** %2, align 8
  %4 = getelementptr inbounds i32 (%"class.gl::GLImage"*)*, i32 (%"class.gl::GLImage"*)** %3, i64 1
  %5 = load i32 (%"class.gl::GLImage"*)*, i32 (%"class.gl::GLImage"*)** %4, align 8
  %6 = tail call i32 %5(%"class.gl::GLImage"* %0) #5
  switch i32 %6, label %11 [
    i32 33322, label %12
    i32 33324, label %7
    i32 32857, label %8
    i32 30970, label %9
    i32 30972, label %9
    i32 30973, label %9
    i32 6403, label %10
    i32 33319, label %10
    i32 6407, label %10
    i32 6408, label %10
    i32 32993, label %10
  ]

7:                                                ; preds = %1
  br label %12

8:                                                ; preds = %1
  br label %12

9:                                                ; preds = %1, %1, %1
  br label %12

10:                                               ; preds = %1, %1, %1, %1, %1
  br label %12

11:                                               ; preds = %1
  br label %12

12:                                               ; preds = %1, %11, %10, %9, %8, %7
  %13 = phi i32 [ 0, %11 ], [ %6, %10 ], [ 6407, %9 ], [ 6408, %8 ], [ 33319, %7 ], [ 6403, %1 ]
  ret i32 %13
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2gl7GLImage11GetDataTypeEv(%"class.gl::GLImage"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2gl7GLImage16ShouldBindOrCopyEv(%"class.gl::GLImage"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2gl7GLImage12BindTexImageEj(%"class.gl::GLImage"* nocapture readnone, i32) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2gl7GLImage30BindTexImageWithInternalformatEjj(%"class.gl::GLImage"* nocapture readnone, i32, i32) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl7GLImage15ReleaseTexImageEj(%"class.gl::GLImage"* nocapture, i32) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2gl7GLImage12CopyTexImageEj(%"class.gl::GLImage"* nocapture readnone, i32) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2gl7GLImage15CopyTexSubImageEjRKN3gfx5PointERKNS1_4RectE(%"class.gl::GLImage"* nocapture readnone, i32, %"class.gfx::Point"* nocapture readnone dereferenceable(8), %"class.gfx::Rect"* nocapture readnone dereferenceable(16)) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl7GLImage20ScheduleOverlayPlaneEjiN3gfx16OverlayTransformERKNS1_4RectERKNS1_5RectFEbNSt3__110unique_ptrINS1_8GpuFenceENS9_14default_deleteISB_EEEE(%"class.gl::GLImage"* nocapture readnone, i32, i32, i32, %"class.gfx::Rect"* nocapture readnone dereferenceable(16), %"class.gfx::RectF"* nocapture readnone dereferenceable(16), i1 zeroext, i64) unnamed_addr #1 align 2 {
  %9 = icmp eq i64 %7, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %8
  %11 = inttoptr i64 %7 to %"class.gfx::GpuFence"*
  tail call void @_ZN3gfx8GpuFenceD1Ev(%"class.gfx::GpuFence"* nonnull %11) #5
  %12 = inttoptr i64 %7 to i8*
  tail call void @_ZdlPv(i8* %12) #6
  br label %13

13:                                               ; preds = %8, %10
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl7GLImage13SetColorSpaceERKN3gfx10ColorSpaceE(%"class.gl::GLImage"* nocapture, %"class.gfx::ColorSpace"* nocapture readonly dereferenceable(68)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::GLImage", %"class.gl::GLImage"* %0, i64 0, i32 2, i32 0
  %4 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %1, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 68, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl7GLImage5FlushEv(%"class.gl::GLImage"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl7GLImage12OnMemoryDumpEPN4base11trace_event17ProcessMemoryDumpEmRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.gl::GLImage"* nocapture, %"class.base::trace_event::ProcessMemoryDump"* nocapture, i64, %"class.std::__1::basic_string"* nocapture dereferenceable(24)) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK2gl7GLImage12EmulatingRGBEv(%"class.gl::GLImage"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK2gl7GLImage21IsInUseByWindowServerEv(%"class.gl::GLImage"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl7GLImage26DisableInUseByWindowServerEv(%"class.gl::GLImage"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK2gl7GLImage7GetTypeEv(%"class.gl::GLImage"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK2gl7GLImage15HasMutableStateEv(%"class.gl::GLImage"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.gfx::NativePixmap"* @_ZN2gl7GLImage15GetNativePixmapEv(%"class.gl::GLImage"* nocapture readnone) unnamed_addr #0 align 2 {
  ret %"class.gfx::NativePixmap"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl7GLImageD2Ev(%"class.gl::GLImage"*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl7GLImageD0Ev(%"class.gl::GLImage"*) unnamed_addr #1 comdat align 2 {
  %2 = bitcast %"class.gl::GLImage"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3gfx8GpuFenceD1Ev(%"class.gfx::GpuFence"*) unnamed_addr #4

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
