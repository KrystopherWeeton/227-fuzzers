; ModuleID = '../../third_party/blink/renderer/modules/webdatabase/database_thread.cc'
source_filename = "../../third_party/blink/renderer/modules/webdatabase/database_thread.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.26", i32, [4 x i8], %"class.std::__1::unique_ptr.163", %"class.std::__1::unique_ptr.163", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque.169", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.174", %"class.std::__1::unique_ptr.180", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.192", %"class.std::__1::unique_ptr.198", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.11", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.47", %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.77", %"class.std::__1::unique_ptr.77", %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.98", %"class.std::__1::unique_ptr.98", %"class.std::__1::unique_ptr.105", %"class.std::__1::unique_ptr.112", %"class.std::__1::unique_ptr.119", %"class.std::__1::unique_ptr.144", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.62" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.62" = type { %"struct.std::__1::__atomic_base.63" }
%"struct.std::__1::__atomic_base.63" = type { %"struct.std::__1::__atomic_base.64" }
%"struct.std::__1::__atomic_base.64" = type { %"struct.std::__1::__cxx_atomic_impl.65" }
%"struct.std::__1::__cxx_atomic_impl.65" = type { %"struct.std::__1::__cxx_atomic_base_impl.66" }
%"struct.std::__1::__cxx_atomic_base_impl.66" = type { i64 }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.blink::Worklist.73"* }
%"class.blink::Worklist.73" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.62" }
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.blink::Worklist.80"* }
%"class.blink::Worklist.80" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.62" }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.blink::Worklist.87"* }
%"class.blink::Worklist.87" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.62" }
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.blink::Worklist.94"* }
%"class.blink::Worklist.94" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.62" }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.blink::Worklist.101"* }
%"class.blink::Worklist.101" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.62" }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.blink::Worklist.108"* }
%"class.blink::Worklist.108" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.62" }
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.blink::Worklist.115"* }
%"class.blink::Worklist.115" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.62" }
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.122", %"class.std::__1::__compressed_pair.131", %"class.std::__1::__compressed_pair.136", %"class.std::__1::__compressed_pair.138", [4 x i8] }>
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124", %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { i64 }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { float }
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.147", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer.156" }
%"class.WTF::VectorBuffer.156" = type { %"class.WTF::VectorBufferBase.157" }
%"class.WTF::VectorBufferBase.157" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque.169" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.172" }
%"class.WTF::VectorBuffer.172" = type { %"class.WTF::VectorBufferBase.173" }
%"class.WTF::VectorBufferBase.173" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.186" }
%"class.std::__1::unique_ptr.186" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.73"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.80"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.87"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.94"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.101"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.231" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.192" = type { %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.198" = type { %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.204 }
%class.scoped_refptr.204 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.11" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__cxx_atomic_impl.13" }
%"struct.std::__1::__cxx_atomic_impl.13" = type { %"struct.std::__1::__cxx_atomic_base_impl.14" }
%"struct.std::__1::__cxx_atomic_base_impl.14" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::DatabaseThread" = type <{ %"class.std::__1::unique_ptr", %"class.WTF::HashSet", %"class.std::__1::unique_ptr.212", %"class.blink::CrossThreadPersistent.218", %"class.base::WaitableEvent"*, %"class.WTF::Mutex", i8, [7 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::Thread"* }
%"class.blink::Thread" = type { i32 (...)** }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::CrossThreadPersistent"*, i32, i32, i32, [4 x i8] }>
%"class.blink::CrossThreadPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::Database"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::Database" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr, %class.scoped_refptr, %"class.blink::Member", %class.scoped_refptr.3, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, %"struct.std::__1::atomic.11", i8, %"class.blink::DatabaseAuthorizer", %"class.blink::SQLiteDatabase", %"class.WTF::Deque", %"class.WTF::Mutex", i8, i8, %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%class.scoped_refptr = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.311", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional.311" = type { %"class.absl::optional_internal::optional_data.312" }
%"class.absl::optional_internal::optional_data.312" = type { %"class.absl::optional_internal::optional_data_base.313" }
%"class.absl::optional_internal::optional_data_base.313" = type { %"class.absl::optional_internal::optional_data_dtor_base.314" }
%"class.absl::optional_internal::optional_data_dtor_base.314" = type { i8, %union.anon.315 }
%union.anon.315 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::DatabaseContext"* }
%"class.blink::DatabaseContext" = type opaque
%class.scoped_refptr.3 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.6" }
%"struct.std::__1::atomic.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl.9" }
%"struct.std::__1::__cxx_atomic_impl.9" = type { %"struct.std::__1::__cxx_atomic_base_impl.10" }
%"struct.std::__1::__cxx_atomic_base_impl.10" = type { i32 }
%"class.blink::DatabaseAuthorizer" = type { i32, i8, %"class.WTF::String" }
%"class.blink::SQLiteDatabase" = type <{ %struct.sqlite3*, i32, i8, [3 x i8], %"class.WTF::Mutex", %"class.blink::DatabaseAuthorizer"*, i32, [4 x i8], %"class.WTF::Mutex", i32, [4 x i8], %"class.std::__1::basic_string", i32, [4 x i8] }>
%struct.sqlite3 = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::Deque" = type { %"class.WTF::Deque<blink::CrossThreadPersistent<blink::SQLTransactionBackend>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::CrossThreadPersistent<blink::SQLTransactionBackend>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::CrossThreadPersistent.20"*, i32, i32 }
%"class.blink::CrossThreadPersistent.20" = type { %"class.blink::PersistentBase.21" }
%"class.blink::PersistentBase.21" = type { %"class.blink::SQLTransactionBackend"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::SQLTransactionBackend" = type { %"class.blink::SQLTransactionStateMachine", %"class.blink::CrossThreadPersistent.238", %"class.blink::CrossThreadPersistent.264", %"class.blink::CrossThreadPersistent", %"class.blink::Member.296", %"class.std::__1::unique_ptr.257", i8, i8, i8, i8, i8, i8, i8, i8, %"class.WTF::Mutex", %"class.WTF::Deque.300", %"class.std::__1::unique_ptr.305" }
%"class.blink::SQLTransactionStateMachine" = type { i32 (...)**, i32, i32 }
%"class.blink::CrossThreadPersistent.238" = type { %"class.blink::PersistentBase.239" }
%"class.blink::PersistentBase.239" = type { %"class.blink::SQLTransaction"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::SQLTransaction" = type <{ %"class.blink::ScriptWrappable", %"class.blink::SQLTransactionStateMachine.240", %"class.blink::Member.241", %"class.blink::Member.243", %"class.blink::Member.245", %"class.blink::Member.249", %"class.blink::Member.253", i8, [7 x i8], %"class.std::__1::unique_ptr.257", %"class.blink::probe::AsyncTaskId", i8, [7 x i8] }>
%"class.blink::SQLTransactionStateMachine.240" = type { i32 (...)**, i32, i32 }
%"class.blink::Member.241" = type { %"class.blink::MemberBase.242" }
%"class.blink::MemberBase.242" = type { %"class.blink::Database"* }
%"class.blink::Member.243" = type { %"class.blink::MemberBase.244" }
%"class.blink::MemberBase.244" = type { %"class.blink::SQLTransactionBackend"* }
%"class.blink::Member.245" = type { %"class.blink::MemberBase.246" }
%"class.blink::MemberBase.246" = type { %"class.blink::SQLTransaction::OnProcessCallback"* }
%"class.blink::SQLTransaction::OnProcessCallback" = type { i32 (...)** }
%"class.blink::Member.249" = type { %"class.blink::MemberBase.250" }
%"class.blink::MemberBase.250" = type { %"class.blink::SQLTransaction::OnSuccessCallback"* }
%"class.blink::SQLTransaction::OnSuccessCallback" = type { i32 (...)** }
%"class.blink::Member.253" = type { %"class.blink::MemberBase.254" }
%"class.blink::MemberBase.254" = type { %"class.blink::SQLTransaction::OnErrorCallback"* }
%"class.blink::SQLTransaction::OnErrorCallback" = type { i32 (...)** }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.263 }
%union.anon.263 = type { i64 }
%"class.blink::CrossThreadPersistent.264" = type { %"class.blink::PersistentBase.265" }
%"class.blink::PersistentBase.265" = type { %"class.blink::SQLStatementBackend"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::SQLStatementBackend" = type <{ %"class.blink::Member.268", %"class.WTF::String", %"class.WTF::Vector.282", i8, i8, [6 x i8], %"class.std::__1::unique_ptr.257", %"class.blink::Member.287", i32, [4 x i8] }>
%"class.blink::Member.268" = type { %"class.blink::MemberBase.269" }
%"class.blink::MemberBase.269" = type { %"class.blink::SQLStatement"* }
%"class.blink::SQLStatement" = type { %"class.blink::Member.272", %"class.blink::Member.274", %"class.blink::Member.278", %"class.blink::probe::AsyncTaskId" }
%"class.blink::Member.272" = type { %"class.blink::MemberBase.273" }
%"class.blink::MemberBase.273" = type { %"class.blink::SQLStatementBackend"* }
%"class.blink::Member.274" = type { %"class.blink::MemberBase.275" }
%"class.blink::MemberBase.275" = type { %"class.blink::SQLStatement::OnSuccessCallback"* }
%"class.blink::SQLStatement::OnSuccessCallback" = type { i32 (...)** }
%"class.blink::Member.278" = type { %"class.blink::MemberBase.279" }
%"class.blink::MemberBase.279" = type { %"class.blink::SQLStatement::OnErrorCallback"* }
%"class.blink::SQLStatement::OnErrorCallback" = type { i32 (...)** }
%"class.WTF::Vector.282" = type { %"class.WTF::VectorBuffer.283" }
%"class.WTF::VectorBuffer.283" = type { %"class.WTF::VectorBufferBase.284" }
%"class.WTF::VectorBufferBase.284" = type { %"class.blink::SQLValue"*, i32, i32 }
%"class.blink::SQLValue" = type { i32, double, %"class.WTF::String" }
%"class.blink::Member.287" = type { %"class.blink::MemberBase.288" }
%"class.blink::MemberBase.288" = type { %"class.blink::SQLResultSet"* }
%"class.blink::SQLResultSet" = type <{ %"class.blink::ScriptWrappable", %"class.blink::Member.289", i64, i32, i8, i8, [2 x i8] }>
%"class.blink::Member.289" = type { %"class.blink::MemberBase.290" }
%"class.blink::MemberBase.290" = type { %"class.blink::SQLResultSetRowList"* }
%"class.blink::SQLResultSetRowList" = type { %"class.blink::ScriptWrappable", %"class.WTF::Vector.291", %"class.WTF::Vector.282" }
%"class.WTF::Vector.291" = type { %"class.WTF::VectorBuffer.292" }
%"class.WTF::VectorBuffer.292" = type { %"class.WTF::VectorBufferBase.293" }
%"class.WTF::VectorBufferBase.293" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::Member.296" = type { %"class.blink::MemberBase.297" }
%"class.blink::MemberBase.297" = type { %"class.blink::SQLTransactionWrapper"* }
%"class.blink::SQLTransactionWrapper" = type { i32 (...)** }
%"class.std::__1::unique_ptr.257" = type { %"class.std::__1::__compressed_pair.258" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"class.blink::SQLErrorData"* }
%"class.blink::SQLErrorData" = type opaque
%"class.WTF::Deque.300" = type { %"class.WTF::Deque<blink::CrossThreadPersistent<blink::SQLStatementBackend>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::CrossThreadPersistent<blink::SQLStatementBackend>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.303" }
%"class.WTF::VectorBuffer.303" = type { %"class.WTF::VectorBufferBase.304" }
%"class.WTF::VectorBufferBase.304" = type { %"class.blink::CrossThreadPersistent.264"*, i32, i32 }
%"class.std::__1::unique_ptr.305" = type { %"class.std::__1::__compressed_pair.306" }
%"class.std::__1::__compressed_pair.306" = type { %"struct.std::__1::__compressed_pair_elem.307" }
%"struct.std::__1::__compressed_pair_elem.307" = type { %"class.blink::SQLiteTransaction"* }
%"class.blink::SQLiteTransaction" = type opaque
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.205 }
%class.scoped_refptr.205 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.206", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.206" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.207" }
%"struct.std::__1::atomic.207" = type { %"struct.std::__1::__atomic_base.208" }
%"struct.std::__1::__atomic_base.208" = type { %"struct.std::__1::__atomic_base.209" }
%"struct.std::__1::__atomic_base.209" = type { %"struct.std::__1::__cxx_atomic_impl.210" }
%"struct.std::__1::__cxx_atomic_impl.210" = type { %"struct.std::__1::__cxx_atomic_base_impl.211" }
%"struct.std::__1::__cxx_atomic_base_impl.211" = type { i8 }
%"class.blink::CrossThreadPersistentNodePtr" = type { %"struct.std::__1::atomic.22" }
%"struct.std::__1::atomic.22" = type { %"struct.std::__1::__atomic_base.23" }
%"struct.std::__1::__atomic_base.23" = type { %"struct.std::__1::__cxx_atomic_impl.24" }
%"struct.std::__1::__cxx_atomic_impl.24" = type { %"struct.std::__1::__cxx_atomic_base_impl.25" }
%"struct.std::__1::__cxx_atomic_base_impl.25" = type { %"class.blink::PersistentNode"* }
%"class.std::__1::unique_ptr.212" = type { %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"class.blink::SQLTransactionClient"* }
%"class.blink::SQLTransactionClient" = type { i8 }
%"class.blink::CrossThreadPersistent.218" = type { %"class.blink::PersistentBase.219" }
%"class.blink::PersistentBase.219" = type { %"class.blink::SQLTransactionCoordinator"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::SQLTransactionCoordinator" = type { %"class.WTF::HashMap", i8, [7 x i8] }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.222" }
%"class.WTF::HashTable.222" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::String", %"struct.blink::SQLTransactionCoordinator::CoordinationInfo" }
%"struct.blink::SQLTransactionCoordinator::CoordinationInfo" = type { %"class.WTF::Deque", %"class.WTF::HashSet.332", %"class.blink::CrossThreadPersistent.20" }
%"class.WTF::HashSet.332" = type { %"class.WTF::HashTable.333" }
%"class.WTF::HashTable.333" = type <{ %"class.blink::CrossThreadPersistent.20"*, i32, i32, i32, [4 x i8] }>
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.225, i8, [7 x i8] }>
%class.scoped_refptr.225 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.226", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.226" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.227" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"class.blink::CrossThreadPersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.322 }
%class.scoped_refptr.322 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.323", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.323" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::CrossThreadOnceFunction" = type { %"class.base::OnceCallback" }
%"struct.blink::ThreadCreationParams" = type <{ i32, [4 x i8], i8*, %"class.blink::FrameOrWorkerScheduler"*, i32, i8, [3 x i8] }>
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.316", %"class.base::WeakPtrFactory" }
%"class.WTF::HashMap.316" = type { %"class.WTF::HashTable.317" }
%"class.WTF::HashTable.317" = type <{ %"struct.WTF::KeyValuePair.320"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.320" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.321 }
%class.scoped_refptr.321 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.blink::CrossThreadPersistent.324" = type { %"class.blink::PersistentBase.325" }
%"class.blink::PersistentBase.325" = type { %"class.blink::DatabaseThread"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.blink::DatabaseTask" = type { i32 (...)**, %"class.blink::CrossThreadPersistent", %"class.base::WaitableEvent"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN3WTF19CrossThreadBindOnceIMN5blink14DatabaseThreadEFvvEJNS1_21CrossThreadPersistentIS2_EEEEEDaOT_DpOT0_ = comdat any

$_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_8DatabaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS4_j = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink14DatabaseThreadEFvvEJNS3_21CrossThreadPersistentIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink14DatabaseThreadEFvvEJNS2_21CrossThreadPersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN5blink14PersistentBaseINS_14DatabaseThreadELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_ = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_14DatabaseThreadELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink10TraceTraitINS_14DatabaseThreadEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink12DatabaseTaskEFvvEJNSt3__110unique_ptrIS4_NS7_14default_deleteIS4_EEEEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink12DatabaseTaskEFvvEJNSt3__110unique_ptrIS3_NS6_14default_deleteIS3_EEEEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_25SQLTransactionCoordinatorEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_25SQLTransactionCoordinatorEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_25SQLTransactionCoordinatorEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_25SQLTransactionCoordinatorEE7GetNameEPKv = comdat any

$_ZN5blink25SQLTransactionCoordinator16CoordinationInfoD2Ev = comdat any

$_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_21SQLTransactionBackendEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS4_j = comdat any

$_ZN3WTF5DequeIN5blink21CrossThreadPersistentINS1_21SQLTransactionBackendEEELj0ENS_18PartitionAllocatorEE10DestroyAllEv = comdat any

$_ZN5blink14PersistentBaseINS_25SQLTransactionCoordinatorELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_ = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_25SQLTransactionCoordinatorELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_8DatabaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_8DatabaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6ExpandEPS4_ = comdat any

$_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_8DatabaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE8RehashToEPS4_jSC_ = comdat any

$_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_8DatabaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE16LookupForWritingERKS4_ = comdat any

$_ZN3WTF5MoverIN5blink21CrossThreadPersistentINS1_8DatabaseEEENS_18PartitionAllocatorENS_10HashTraitsIS4_EELb0EE4MoveEOS4_RS4_ = comdat any

$_ZN5blink14PersistentBaseINS_8DatabaseELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_ = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_8DatabaseELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink10TraceTraitINS_8DatabaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_8DatabaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE12DeleteBucketERKS4_ = comdat any

$_ZNK3WTF9HashTableIN5blink21CrossThreadPersistentINS1_8DatabaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE4findEPS3_ = comdat any

$_ZZN5blink11GCInfoTraitINS_25SQLTransactionCoordinatorEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_25SQLTransactionCoordinatorEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [6 x i8] c"Start\00", align 1
@.str.1 = private unnamed_addr constant [72 x i8] c"../../third_party/blink/renderer/modules/webdatabase/database_thread.cc\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"Terminate\00", align 1
@.str.3 = private unnamed_addr constant [22 x i8] c"CleanupDatabaseThread\00", align 1
@.str.4 = private unnamed_addr constant [13 x i8] c"ScheduleTask\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.6 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_25SQLTransactionCoordinatorEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_25SQLTransactionCoordinatorEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_25SQLTransactionCoordinatorEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_25SQLTransactionCoordinatorEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_25SQLTransactionCoordinatorEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.7 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.8 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.9 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21CrossThreadPersistentINS1_8DatabaseEEEEEPKcv = private unnamed_addr constant [93 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CrossThreadPersistent<blink::Database>]\00", align 1

@_ZN5blink14DatabaseThreadC1Ev = hidden unnamed_addr alias void (%"class.blink::DatabaseThread"*), void (%"class.blink::DatabaseThread"*)* @_ZN5blink14DatabaseThreadC2Ev
@_ZN5blink14DatabaseThreadD1Ev = hidden unnamed_addr alias void (%"class.blink::DatabaseThread"*), void (%"class.blink::DatabaseThread"*)* @_ZN5blink14DatabaseThreadD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14DatabaseThreadC2Ev(%"class.blink::DatabaseThread"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::DatabaseThread"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 28, i1 false)
  %3 = tail call noalias i8* @malloc(i64 1) #9
  %4 = getelementptr inbounds %"class.blink::DatabaseThread", %"class.blink::DatabaseThread"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = bitcast %"class.blink::SQLTransactionClient"** %4 to i8**
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds %"class.blink::DatabaseThread", %"class.blink::DatabaseThread"* %0, i64 0, i32 3
  %7 = getelementptr inbounds %"class.blink::DatabaseThread", %"class.blink::DatabaseThread"* %0, i64 0, i32 5, i32 0
  %8 = bitcast %"class.blink::CrossThreadPersistent.218"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false)
  tail call void @_ZN3WTF9MutexBaseC2Eb(%"class.WTF::MutexBase"* %7, i1 zeroext false) #9
  %9 = getelementptr inbounds %"class.blink::DatabaseThread", %"class.blink::DatabaseThread"* %0, i64 0, i32 6
  store i8 0, i8* %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14DatabaseThreadD2Ev(%"class.blink::DatabaseThread"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DatabaseThread", %"class.blink::DatabaseThread"* %0, i64 0, i32 5, i32 0
  tail call void @_ZN3WTF9MutexBaseD2Ev(%"class.WTF::MutexBase"* %2) #9
  %3 = getelementptr inbounds %"class.blink::DatabaseThread", %"class.blink::DatabaseThread"* %0, i64 0, i32 3, i32 0, i32 1
  %4 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %3 to i64*
  %5 = load atomic i64, i64* %4 acquire, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9
  %9 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %8, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %9) #9
  %10 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9
  %11 = load atomic i64, i64* %4 monotonic, align 8
  %12 = inttoptr i64 %11 to %"class.blink::PersistentNode"*
  %13 = icmp eq i64 %11, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %10, i64 0, i32 0, i32 0
  %16 = bitcast %"class.blink::CrossThreadPersistentRegion"* %10 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = inttoptr i64 %11 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %12, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %19, align 8
  store %"class.blink::PersistentNode"* %12, %"class.blink::PersistentNode"** %15, align 8
  br label %20

20:                                               ; preds = %14, %7
  store atomic i64 0, i64* %4 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %9) #9
  br label %21

21:                                               ; preds = %1, %20
  %22 = getelementptr inbounds %"class.blink::DatabaseThread", %"class.blink::DatabaseThread"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %23 = load %"class.blink::SQLTransactionClient"*, %"class.blink::SQLTransactionClient"** %22, align 8
  store %"class.blink::SQLTransactionClient"* null, %"class.blink::SQLTransactionClient"** %22, align 8
  %24 = icmp eq %"class.blink::SQLTransactionClient"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.blink::SQLTransactionClient", %"class.blink::SQLTransactionClient"* %23, i64 0, i32 0
  tail call void @free(i8* %26) #9
  br label %27

27:                                               ; preds = %21, %25
  %28 = getelementptr inbounds %"class.blink::DatabaseThread", %"class.blink::DatabaseThread"* %0, i64 0, i32 1, i32 0, i32 0
  %29 = load %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"** %28, align 8
  %30 = icmp eq %"class.blink::CrossThreadPersistent"* %29, null
  br i1 %30, label %34, label %31, !prof !2

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.blink::DatabaseThread", %"class.blink::DatabaseThread"* %0, i64 0, i32 1, i32 0, i32 1
  %33 = load i32, i32* %32, align 8
  tail call void @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_8DatabaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS4_j(%"class.blink::CrossThreadPersistent"* nonnull %29, i32 %33) #9
  store %"class.blink::CrossThreadPersistent"* null, %"class.blink::CrossThreadPersistent"** %28, align 8
  br label %34

34:                                               ; preds = %27, %31
  %35 = getelementptr inbounds %"class.blink::DatabaseThread", %"class.blink::DatabaseThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::Thread"*, %"class.blink::Thread"** %35, align 8
  store %"class.blink::Thread"* null, %"class.blink::Thread"** %35, align 8
  %37 = icmp eq %"class.blink::Thread"* %36, null
  br i1 %37, label %43, label %38

38:                                               ; preds = %34
  %39 = bitcast %"class.blink::Thread"* %36 to void (%"class.blink::Thread"*)***
  %40 = load void (%"class.blink::Thread"*)**, void (%"class.blink::Thread"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.blink::Thread"*)*, void (%"class.blink::Thread"*)** %40, i64 1
  %42 = load void (%"class.blink::Thread"*)*, void (%"class.blink::Thread"*)** %41, align 8
  tail call void %42(%"class.blink::Thread"* nonnull %36) #9
  br label %43

43:                                               ; preds = %34, %38
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3WTF9MutexBaseD2Ev(%"class.WTF::MutexBase"*) unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZNK5blink14DatabaseThread5TraceEPNS_7VisitorE(%"class.blink::DatabaseThread"* nocapture, %"class.blink::Visitor"* nocapture) local_unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14DatabaseThread5StartEv(%"class.blink::DatabaseThread"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %4 = alloca %"struct.blink::ThreadCreationParams", align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %7 = alloca <2 x i64>, align 16
  %8 = bitcast <2 x i64>* %7 to { i64, i64 }*
  %9 = alloca %"class.blink::CrossThreadPersistent.324", align 8
  %10 = getelementptr inbounds %"class.blink::DatabaseThread", %"class.blink::DatabaseThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::Thread"*, %"class.blink::Thread"** %10, align 8
  %12 = icmp eq %"class.blink::Thread"* %11, null
  br i1 %12, label %13, label %104

13:                                               ; preds = %1
  %14 = bitcast %"struct.blink::ThreadCreationParams"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #9
  call void @_ZN5blink20ThreadCreationParamsC1ENS_10ThreadTypeE(%"struct.blink::ThreadCreationParams"* nonnull %4, i32 9) #9
  %15 = call dereferenceable(32) %"struct.blink::ThreadCreationParams"* @_ZN5blink20ThreadCreationParams13SetSupportsGCEb(%"struct.blink::ThreadCreationParams"* nonnull %4, i1 zeroext true) #9
  %16 = call %"class.blink::Thread"* @_ZN5blink6Thread12CreateThreadERKNS_20ThreadCreationParamsE(%"struct.blink::ThreadCreationParams"* dereferenceable(32) %15) #9
  %17 = ptrtoint %"class.blink::Thread"* %16 to i64
  %18 = load %"class.blink::Thread"*, %"class.blink::Thread"** %10, align 8
  %19 = bitcast %"class.blink::DatabaseThread"* %0 to i64*
  store i64 %17, i64* %19, align 8
  %20 = icmp eq %"class.blink::Thread"* %18, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %13
  %22 = bitcast %"class.blink::Thread"* %18 to void (%"class.blink::Thread"*)***
  %23 = load void (%"class.blink::Thread"*)**, void (%"class.blink::Thread"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.blink::Thread"*)*, void (%"class.blink::Thread"*)** %23, i64 1
  %25 = load void (%"class.blink::Thread"*)*, void (%"class.blink::Thread"*)** %24, align 8
  call void %25(%"class.blink::Thread"* nonnull %18) #9
  %26 = load %"class.blink::Thread"*, %"class.blink::Thread"** %10, align 8
  br label %27

27:                                               ; preds = %21, %13
  %28 = phi %"class.blink::Thread"* [ %26, %21 ], [ %16, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #9
  %29 = bitcast %"class.blink::Thread"* %28 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)***
  %30 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*** %29, align 8
  %31 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %30, i64 3
  %32 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %31, align 8
  %33 = call %"class.base::SingleThreadTaskRunner"* %32(%"class.blink::Thread"* %28) #9
  %34 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %34) #9
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.1, i64 0, i64 0), i32 64) #9
  %35 = bitcast <2 x i64>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #9
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::DatabaseThread"*)* @_ZN5blink14DatabaseThread19SetupDatabaseThreadEv to i64), i64 0>, <2 x i64>* %7, align 16
  %36 = bitcast %"class.blink::CrossThreadPersistent.324"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #9
  %37 = getelementptr inbounds %"class.blink::CrossThreadPersistent.324", %"class.blink::CrossThreadPersistent.324"* %9, i64 0, i32 0
  %38 = getelementptr inbounds %"class.blink::CrossThreadPersistent.324", %"class.blink::CrossThreadPersistent.324"* %9, i64 0, i32 0, i32 0
  store %"class.blink::DatabaseThread"* %0, %"class.blink::DatabaseThread"** %38, align 8, !alias.scope !3
  %39 = getelementptr inbounds %"class.blink::CrossThreadPersistent.324", %"class.blink::CrossThreadPersistent.324"* %9, i64 0, i32 0, i32 1
  %40 = getelementptr inbounds %"class.blink::CrossThreadPersistentNodePtr", %"class.blink::CrossThreadPersistentNodePtr"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %40, align 8, !alias.scope !3
  %41 = ptrtoint %"class.blink::DatabaseThread"* %0 to i64
  switch i64 %41, label %42 [
    i64 0, label %61
    i64 -1, label %61
  ]

42:                                               ; preds = %27
  %43 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9, !noalias !3
  %44 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %43, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %44) #9, !noalias !3
  %45 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9, !noalias !3
  %46 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %45, i64 0, i32 0, i32 0
  %47 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %46, align 8, !noalias !3
  %48 = icmp eq %"class.blink::PersistentNode"* %47, null
  br i1 %48, label %49, label %52, !prof !6

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %45, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %50) #9
  %51 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %46, align 8
  br label %52

52:                                               ; preds = %49, %42
  %53 = phi %"class.blink::PersistentNode"* [ %51, %49 ], [ %47, %42 ]
  %54 = bitcast %"class.blink::PersistentNode"* %53 to i64*
  %55 = load i64, i64* %54, align 8, !noalias !3
  %56 = bitcast %"class.blink::CrossThreadPersistentRegion"* %45 to i64*
  store i64 %55, i64* %56, align 8, !noalias !3
  %57 = bitcast %"class.blink::PersistentNode"* %53 to %"class.blink::PersistentBase.325"**
  store %"class.blink::PersistentBase.325"* %37, %"class.blink::PersistentBase.325"** %57, align 8, !noalias !3
  %58 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %53, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_14DatabaseThreadELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %58, align 8
  %59 = ptrtoint %"class.blink::PersistentNode"* %53 to i64
  %60 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %39 to i64*
  store atomic i64 %59, i64* %60 release, align 8, !alias.scope !3
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %44) #9
  br label %61

61:                                               ; preds = %27, %27, %52
  call void @_ZN3WTF19CrossThreadBindOnceIMN5blink14DatabaseThreadEFvvEJNS1_21CrossThreadPersistentIS2_EEEEEDaOT_DpOT0_(%"class.WTF::CrossThreadOnceFunction"* nonnull sret %6, { i64, i64 }* nonnull dereferenceable(16) %8, %"class.blink::CrossThreadPersistent.324"* nonnull dereferenceable(16) %9)
  %62 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62)
  %63 = bitcast %"class.WTF::CrossThreadOnceFunction"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63)
  %64 = bitcast %"class.base::SingleThreadTaskRunner"* %33 to %"class.base::TaskRunner"*
  %65 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.WTF::CrossThreadOnceFunction"* %6 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %65, align 8
  %68 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %69 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %67, i64* %69, align 8, !alias.scope !7
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %68, align 8, !noalias !7
  %70 = bitcast %"class.base::SingleThreadTaskRunner"* %33 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %71 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %70, align 8
  %72 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %71, align 8
  %73 = call zeroext i1 %72(%"class.base::TaskRunner"* %64, %"class.base::Location"* nonnull dereferenceable(32) %5, %"class.base::OnceCallback"* nonnull %2, i64 0) #9
  %74 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %74) #9
  %75 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %3, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %75) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63)
  %76 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %6, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %76) #9
  %77 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %39 to i64*
  %78 = load atomic i64, i64* %77 acquire, align 8
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %94, label %80

80:                                               ; preds = %61
  %81 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9
  %82 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %81, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %82) #9
  %83 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9
  %84 = load atomic i64, i64* %77 monotonic, align 8
  %85 = inttoptr i64 %84 to %"class.blink::PersistentNode"*
  %86 = icmp eq i64 %84, 0
  br i1 %86, label %93, label %87

87:                                               ; preds = %80
  %88 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %83, i64 0, i32 0, i32 0
  %89 = bitcast %"class.blink::CrossThreadPersistentRegion"* %83 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = inttoptr i64 %84 to i64*
  store i64 %90, i64* %91, align 8
  %92 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %85, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %92, align 8
  store %"class.blink::PersistentNode"* %85, %"class.blink::PersistentNode"** %88, align 8
  br label %93

93:                                               ; preds = %87, %80
  store atomic i64 0, i64* %77 release, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %82) #9
  br label %94

94:                                               ; preds = %61, %93
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %34) #9
  %95 = icmp eq %"class.base::SingleThreadTaskRunner"* %33, null
  br i1 %95, label %104, label %96

96:                                               ; preds = %94
  %97 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %33, i64 0, i32 0, i32 0, i32 1
  %98 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %97, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = atomicrmw sub i32* %98, i32 1 acq_rel
  %100 = icmp eq i32 %99, 1
  br i1 %100, label %101, label %104

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %97, i64 -2
  %103 = bitcast %"class.base::RefCountedThreadSafe"* %102 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %103) #9
  br label %104

104:                                              ; preds = %1, %101, %96, %94
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare %"class.blink::Thread"* @_ZN5blink6Thread12CreateThreadERKNS_20ThreadCreationParamsE(%"struct.blink::ThreadCreationParams"* dereferenceable(32)) local_unnamed_addr #4

declare void @_ZN5blink20ThreadCreationParamsC1ENS_10ThreadTypeE(%"struct.blink::ThreadCreationParams"*, i32) unnamed_addr #4

declare dereferenceable(32) %"struct.blink::ThreadCreationParams"* @_ZN5blink20ThreadCreationParams13SetSupportsGCEb(%"struct.blink::ThreadCreationParams"*, i1 zeroext) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF19CrossThreadBindOnceIMN5blink14DatabaseThreadEFvvEJNS1_21CrossThreadPersistentIS2_EEEEEDaOT_DpOT0_(%"class.WTF::CrossThreadOnceFunction"* noalias sret, { i64, i64 }* dereferenceable(16), %"class.blink::CrossThreadPersistent.324"* dereferenceable(16)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.blink::CrossThreadPersistent.324", align 8
  %7 = bitcast %"class.blink::CrossThreadPersistent.324"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.blink::CrossThreadPersistent.324", %"class.blink::CrossThreadPersistent.324"* %6, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 16, i1 false) #9, !alias.scope !10
  %9 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9, !noalias !10
  %10 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %9, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %10) #9, !noalias !10
  %11 = getelementptr inbounds %"class.blink::CrossThreadPersistent.324", %"class.blink::CrossThreadPersistent.324"* %2, i64 0, i32 0, i32 0
  %12 = load %"class.blink::DatabaseThread"*, %"class.blink::DatabaseThread"** %11, align 8, !noalias !10
  call void @_ZN5blink14PersistentBaseINS_14DatabaseThreadELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.325"* nonnull %8, %"class.blink::DatabaseThread"* %12) #9
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %10) #9
  %13 = call i8* @_Znwm(i64 64) #10, !noalias !13
  %14 = bitcast i8* %13 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %14, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink14DatabaseThreadEFvvEJNS3_21CrossThreadPersistentIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink14DatabaseThreadEFvvEJNS2_21CrossThreadPersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #9, !noalias !13
  %15 = bitcast { i64, i64 }* %1 to <2 x i64>*
  %16 = load <2 x i64>, <2 x i64>* %15, align 8, !noalias !13
  %17 = getelementptr inbounds i8, i8* %13, i64 32
  %18 = bitcast i8* %17 to <2 x i64>*
  store <2 x i64> %16, <2 x i64>* %18, align 8, !noalias !13
  %19 = getelementptr inbounds i8, i8* %13, i64 48
  %20 = bitcast i8* %19 to %"class.blink::PersistentBase.325"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9, !noalias !13
  %21 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9, !noalias !13
  %22 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %21, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %22) #9, !noalias !13
  %23 = getelementptr inbounds %"class.blink::CrossThreadPersistent.324", %"class.blink::CrossThreadPersistent.324"* %6, i64 0, i32 0, i32 0
  %24 = load %"class.blink::DatabaseThread"*, %"class.blink::DatabaseThread"** %23, align 8, !noalias !13
  call void @_ZN5blink14PersistentBaseINS_14DatabaseThreadELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.325"* %20, %"class.blink::DatabaseThread"* %24) #9, !noalias !13
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %22) #9, !noalias !13
  %25 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25)
  %26 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0, i32 0, i32 0
  %27 = ptrtoint i8* %13 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %26, align 8, !noalias !18
  %28 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  %29 = bitcast %"class.WTF::CrossThreadOnceFunction"* %0 to i64*
  store i64 %27, i64* %29, align 8, !alias.scope !18
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %28, align 8, !noalias !18
  %30 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %30) #9, !noalias !18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25)
  %31 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %31) #9
  %32 = getelementptr inbounds %"class.blink::CrossThreadPersistent.324", %"class.blink::CrossThreadPersistent.324"* %6, i64 0, i32 0, i32 1
  %33 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %32 to i64*
  %34 = load atomic i64, i64* %33 acquire, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %50, label %36

36:                                               ; preds = %3
  %37 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9
  %38 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %37, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %38) #9
  %39 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9
  %40 = load atomic i64, i64* %33 monotonic, align 8
  %41 = inttoptr i64 %40 to %"class.blink::PersistentNode"*
  %42 = icmp eq i64 %40, 0
  br i1 %42, label %49, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %39, i64 0, i32 0, i32 0
  %45 = bitcast %"class.blink::CrossThreadPersistentRegion"* %39 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = inttoptr i64 %40 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %41, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %48, align 8
  store %"class.blink::PersistentNode"* %41, %"class.blink::PersistentNode"** %44, align 8
  br label %49

49:                                               ; preds = %43, %36
  store atomic i64 0, i64* %33 release, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %38) #9
  br label %50

50:                                               ; preds = %3, %49
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14DatabaseThread19SetupDatabaseThreadEv(%"class.blink::DatabaseThread"*) #0 align 2 {
  %2 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_25SQLTransactionCoordinatorEEEPhm(i64 32) #9
  %3 = bitcast i8* %2 to %"class.blink::SQLTransactionCoordinator"*
  tail call void @_ZN5blink25SQLTransactionCoordinatorC1Ev(%"class.blink::SQLTransactionCoordinator"* %3) #9
  %4 = getelementptr inbounds i8, i8* %2, i64 -4
  %5 = bitcast i8* %4 to i16*
  %6 = load atomic i16, i16* %5 monotonic, align 2
  %7 = or i16 %6, 1
  store atomic i16 %7, i16* %5 release, align 2
  %8 = getelementptr inbounds %"class.blink::DatabaseThread", %"class.blink::DatabaseThread"* %0, i64 0, i32 3, i32 0
  %9 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9
  %10 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %9, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %10) #9
  tail call void @_ZN5blink14PersistentBaseINS_25SQLTransactionCoordinatorELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.219"* %8, %"class.blink::SQLTransactionCoordinator"* %3) #9
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %10) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14DatabaseThread9TerminateEv(%"class.blink::DatabaseThread"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %4 = alloca %"class.base::WaitableEvent", align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %7 = alloca <2 x i64>, align 16
  %8 = bitcast <2 x i64>* %7 to { i64, i64 }*
  %9 = alloca %"class.blink::CrossThreadPersistent.324", align 8
  %10 = bitcast %"class.base::WaitableEvent"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #9
  %11 = bitcast %"class.base::WaitableEvent"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false)
  call void @_ZN4base13WaitableEventC1ENS0_11ResetPolicyENS0_12InitialStateE(%"class.base::WaitableEvent"* nonnull %4, i32 0, i32 1) #9
  %12 = getelementptr inbounds %"class.blink::DatabaseThread", %"class.blink::DatabaseThread"* %0, i64 0, i32 5, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %12) #9
  %13 = getelementptr inbounds %"class.blink::DatabaseThread", %"class.blink::DatabaseThread"* %0, i64 0, i32 6
  store i8 1, i8* %13, align 8
  %14 = getelementptr inbounds %"class.blink::DatabaseThread", %"class.blink::DatabaseThread"* %0, i64 0, i32 4
  store %"class.base::WaitableEvent"* %4, %"class.base::WaitableEvent"** %14, align 8
  %15 = getelementptr inbounds %"class.blink::DatabaseThread", %"class.blink::DatabaseThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Thread"*, %"class.blink::Thread"** %15, align 8
  %17 = bitcast %"class.blink::Thread"* %16 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)***
  %18 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*** %17, align 8
  %19 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %18, i64 3
  %20 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %19, align 8
  %21 = call %"class.base::SingleThreadTaskRunner"* %20(%"class.blink::Thread"* %16) #9
  %22 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %22) #9
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.1, i64 0, i64 0), i32 84) #9
  %23 = bitcast <2 x i64>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #9
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::DatabaseThread"*)* @_ZN5blink14DatabaseThread21CleanupDatabaseThreadEv to i64), i64 0>, <2 x i64>* %7, align 16
  %24 = bitcast %"class.blink::CrossThreadPersistent.324"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #9
  %25 = getelementptr inbounds %"class.blink::CrossThreadPersistent.324", %"class.blink::CrossThreadPersistent.324"* %9, i64 0, i32 0
  %26 = getelementptr inbounds %"class.blink::CrossThreadPersistent.324", %"class.blink::CrossThreadPersistent.324"* %9, i64 0, i32 0, i32 0
  store %"class.blink::DatabaseThread"* %0, %"class.blink::DatabaseThread"** %26, align 8, !alias.scope !21
  %27 = getelementptr inbounds %"class.blink::CrossThreadPersistent.324", %"class.blink::CrossThreadPersistent.324"* %9, i64 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.blink::CrossThreadPersistentNodePtr", %"class.blink::CrossThreadPersistentNodePtr"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %28, align 8, !alias.scope !21
  %29 = ptrtoint %"class.blink::DatabaseThread"* %0 to i64
  switch i64 %29, label %30 [
    i64 0, label %49
    i64 -1, label %49
  ]

30:                                               ; preds = %1
  %31 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9, !noalias !21
  %32 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %31, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %32) #9, !noalias !21
  %33 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9, !noalias !21
  %34 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %33, i64 0, i32 0, i32 0
  %35 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %34, align 8, !noalias !21
  %36 = icmp eq %"class.blink::PersistentNode"* %35, null
  br i1 %36, label %37, label %40, !prof !6

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %33, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %38) #9
  %39 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %34, align 8
  br label %40

40:                                               ; preds = %37, %30
  %41 = phi %"class.blink::PersistentNode"* [ %39, %37 ], [ %35, %30 ]
  %42 = bitcast %"class.blink::PersistentNode"* %41 to i64*
  %43 = load i64, i64* %42, align 8, !noalias !21
  %44 = bitcast %"class.blink::CrossThreadPersistentRegion"* %33 to i64*
  store i64 %43, i64* %44, align 8, !noalias !21
  %45 = bitcast %"class.blink::PersistentNode"* %41 to %"class.blink::PersistentBase.325"**
  store %"class.blink::PersistentBase.325"* %25, %"class.blink::PersistentBase.325"** %45, align 8, !noalias !21
  %46 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %41, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_14DatabaseThreadELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %46, align 8
  %47 = ptrtoint %"class.blink::PersistentNode"* %41 to i64
  %48 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %27 to i64*
  store atomic i64 %47, i64* %48 release, align 8, !alias.scope !21
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %32) #9
  br label %49

49:                                               ; preds = %1, %1, %40
  call void @_ZN3WTF19CrossThreadBindOnceIMN5blink14DatabaseThreadEFvvEJNS1_21CrossThreadPersistentIS2_EEEEEDaOT_DpOT0_(%"class.WTF::CrossThreadOnceFunction"* nonnull sret %6, { i64, i64 }* nonnull dereferenceable(16) %8, %"class.blink::CrossThreadPersistent.324"* nonnull dereferenceable(16) %9)
  %50 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50)
  %51 = bitcast %"class.WTF::CrossThreadOnceFunction"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51)
  %52 = bitcast %"class.base::SingleThreadTaskRunner"* %21 to %"class.base::TaskRunner"*
  %53 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %54 = bitcast %"class.WTF::CrossThreadOnceFunction"* %6 to i64*
  %55 = load i64, i64* %54, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %53, align 8
  %56 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %55, i64* %57, align 8, !alias.scope !24
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %56, align 8, !noalias !24
  %58 = bitcast %"class.base::SingleThreadTaskRunner"* %21 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %59 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %58, align 8
  %60 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %59, align 8
  %61 = call zeroext i1 %60(%"class.base::TaskRunner"* %52, %"class.base::Location"* nonnull dereferenceable(32) %5, %"class.base::OnceCallback"* nonnull %2, i64 0) #9
  %62 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %62) #9
  %63 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %3, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %63) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51)
  %64 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %6, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %64) #9
  %65 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %27 to i64*
  %66 = load atomic i64, i64* %65 acquire, align 8
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %82, label %68

68:                                               ; preds = %49
  %69 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9
  %70 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %69, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %70) #9
  %71 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9
  %72 = load atomic i64, i64* %65 monotonic, align 8
  %73 = inttoptr i64 %72 to %"class.blink::PersistentNode"*
  %74 = icmp eq i64 %72, 0
  br i1 %74, label %81, label %75

75:                                               ; preds = %68
  %76 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %71, i64 0, i32 0, i32 0
  %77 = bitcast %"class.blink::CrossThreadPersistentRegion"* %71 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = inttoptr i64 %72 to i64*
  store i64 %78, i64* %79, align 8
  %80 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %73, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %80, align 8
  store %"class.blink::PersistentNode"* %73, %"class.blink::PersistentNode"** %76, align 8
  br label %81

81:                                               ; preds = %75, %68
  store atomic i64 0, i64* %65 release, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %70) #9
  br label %82

82:                                               ; preds = %49, %81
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %22) #9
  %83 = icmp eq %"class.base::SingleThreadTaskRunner"* %21, null
  br i1 %83, label %92, label %84

84:                                               ; preds = %82
  %85 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %21, i64 0, i32 0, i32 0, i32 1
  %86 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = atomicrmw sub i32* %86, i32 1 acq_rel
  %88 = icmp eq i32 %87, 1
  br i1 %88, label %89, label %92

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %85, i64 -2
  %91 = bitcast %"class.base::RefCountedThreadSafe"* %90 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %91) #9
  br label %92

92:                                               ; preds = %82, %84, %89
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %12) #9
  notail call void @_ZN4base13WaitableEvent4WaitEv(%"class.base::WaitableEvent"* nonnull %4) #9
  %93 = load %"class.blink::Thread"*, %"class.blink::Thread"** %15, align 8
  store %"class.blink::Thread"* null, %"class.blink::Thread"** %15, align 8
  %94 = icmp eq %"class.blink::Thread"* %93, null
  br i1 %94, label %100, label %95

95:                                               ; preds = %92
  %96 = bitcast %"class.blink::Thread"* %93 to void (%"class.blink::Thread"*)***
  %97 = load void (%"class.blink::Thread"*)**, void (%"class.blink::Thread"*)*** %96, align 8
  %98 = getelementptr inbounds void (%"class.blink::Thread"*)*, void (%"class.blink::Thread"*)** %97, i64 1
  %99 = load void (%"class.blink::Thread"*)*, void (%"class.blink::Thread"*)** %98, align 8
  call void %99(%"class.blink::Thread"* nonnull %93) #9
  br label %100

100:                                              ; preds = %92, %95
  call void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #9
  ret void
}

declare void @_ZN4base13WaitableEventC1ENS0_11ResetPolicyENS0_12InitialStateE(%"class.base::WaitableEvent"*, i32, i32) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14DatabaseThread21CleanupDatabaseThreadEv(%"class.blink::DatabaseThread"*) #0 align 2 {
  %2 = alloca %"class.base::Location", align 8
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.blink::CrossThreadPersistent.324", align 8
  %5 = getelementptr inbounds %"class.blink::DatabaseThread", %"class.blink::DatabaseThread"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::SQLTransactionCoordinator"*, %"class.blink::SQLTransactionCoordinator"** %5, align 8
  tail call void @_ZN5blink25SQLTransactionCoordinator8ShutdownEv(%"class.blink::SQLTransactionCoordinator"* %6) #9
  %7 = getelementptr inbounds %"class.blink::DatabaseThread", %"class.blink::DatabaseThread"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.blink::DatabaseThread", %"class.blink::DatabaseThread"* %0, i64 0, i32 1, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %51, label %11

11:                                               ; preds = %1
  %12 = bitcast %"class.WTF::HashSet"* %7 to i64*
  %13 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %7, i64 0, i32 0, i32 0
  %14 = load %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"** %13, align 8
  store atomic i64 0, i64* %12 monotonic, align 8
  %15 = getelementptr inbounds %"class.blink::DatabaseThread", %"class.blink::DatabaseThread"* %0, i64 0, i32 1, i32 0, i32 1
  %16 = load i32, i32* %15, align 4
  store i32 0, i32* %15, align 4
  store i32 0, i32* %8, align 4
  %17 = getelementptr inbounds %"class.blink::DatabaseThread", %"class.blink::DatabaseThread"* %0, i64 0, i32 1, i32 0, i32 3
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, -2147483648
  store i32 %19, i32* %17, align 8
  %20 = zext i32 %16 to i64
  %21 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %14, i64 %20
  %22 = icmp eq i32 %16, 0
  br i1 %22, label %30, label %23

23:                                               ; preds = %11, %27
  %24 = phi %"class.blink::CrossThreadPersistent"* [ %28, %27 ], [ %14, %11 ]
  %25 = bitcast %"class.blink::CrossThreadPersistent"* %24 to i64*
  %26 = load i64, i64* %25, align 8
  switch i64 %26, label %30 [
    i64 -1, label %27
    i64 0, label %27
  ]

27:                                               ; preds = %23, %23
  %28 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %24, i64 1
  %29 = icmp eq %"class.blink::CrossThreadPersistent"* %28, %21
  br i1 %29, label %33, label %23

30:                                               ; preds = %23, %11
  %31 = phi %"class.blink::CrossThreadPersistent"* [ %14, %11 ], [ %24, %23 ]
  %32 = icmp eq %"class.blink::CrossThreadPersistent"* %31, %21
  br i1 %32, label %33, label %36

33:                                               ; preds = %27, %36, %49, %46, %30
  %34 = icmp eq %"class.blink::CrossThreadPersistent"* %14, null
  br i1 %34, label %51, label %35, !prof !2

35:                                               ; preds = %33
  tail call void @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_8DatabaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS4_j(%"class.blink::CrossThreadPersistent"* nonnull %14, i32 %16) #9
  br label %51

36:                                               ; preds = %30, %49
  %37 = phi %"class.blink::CrossThreadPersistent"* [ %43, %49 ], [ %31, %30 ]
  %38 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %37, i64 0, i32 0, i32 0
  %39 = load %"class.blink::Database"*, %"class.blink::Database"** %38, align 8
  tail call void @_ZN5blink8Database5CloseEv(%"class.blink::Database"* %39) #9
  %40 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %37, i64 1
  %41 = icmp eq %"class.blink::CrossThreadPersistent"* %40, %21
  br i1 %41, label %33, label %42

42:                                               ; preds = %36, %46
  %43 = phi %"class.blink::CrossThreadPersistent"* [ %47, %46 ], [ %40, %36 ]
  %44 = bitcast %"class.blink::CrossThreadPersistent"* %43 to i64*
  %45 = load i64, i64* %44, align 8
  switch i64 %45, label %49 [
    i64 -1, label %46
    i64 0, label %46
  ]

46:                                               ; preds = %42, %42
  %47 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %43, i64 1
  %48 = icmp eq %"class.blink::CrossThreadPersistent"* %47, %21
  br i1 %48, label %33, label %42

49:                                               ; preds = %42
  %50 = icmp eq %"class.blink::CrossThreadPersistent"* %43, %21
  br i1 %50, label %33, label %36

51:                                               ; preds = %35, %33, %1
  %52 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %7, i64 0, i32 0, i32 0
  %53 = load %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"** %52, align 8
  %54 = icmp eq %"class.blink::CrossThreadPersistent"* %53, null
  br i1 %54, label %59, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.blink::DatabaseThread", %"class.blink::DatabaseThread"* %0, i64 0, i32 1, i32 0, i32 1
  %57 = load i32, i32* %56, align 8
  tail call void @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_8DatabaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS4_j(%"class.blink::CrossThreadPersistent"* nonnull %53, i32 %57) #9
  %58 = bitcast %"class.WTF::HashSet"* %7 to i64*
  store atomic i64 0, i64* %58 monotonic, align 8
  store i32 0, i32* %56, align 8
  store i32 0, i32* %8, align 4
  br label %59

59:                                               ; preds = %51, %55
  %60 = getelementptr inbounds %"class.blink::DatabaseThread", %"class.blink::DatabaseThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %61 = load %"class.blink::Thread"*, %"class.blink::Thread"** %60, align 8
  %62 = bitcast %"class.blink::Thread"* %61 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)***
  %63 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*** %62, align 8
  %64 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %63, i64 3
  %65 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %64, align 8
  %66 = tail call %"class.base::SingleThreadTaskRunner"* %65(%"class.blink::Thread"* %61) #9
  %67 = bitcast %"class.base::SingleThreadTaskRunner"* %66 to %"class.base::TaskRunner"*
  %68 = bitcast %"class.base::Location"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %68) #9
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %2, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.1, i64 0, i64 0), i32 121) #9
  %69 = bitcast %"class.blink::CrossThreadPersistent.324"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %69) #9
  %70 = getelementptr inbounds %"class.blink::CrossThreadPersistent.324", %"class.blink::CrossThreadPersistent.324"* %4, i64 0, i32 0
  %71 = getelementptr inbounds %"class.blink::CrossThreadPersistent.324", %"class.blink::CrossThreadPersistent.324"* %4, i64 0, i32 0, i32 0
  store %"class.blink::DatabaseThread"* %0, %"class.blink::DatabaseThread"** %71, align 8, !alias.scope !27
  %72 = getelementptr inbounds %"class.blink::CrossThreadPersistent.324", %"class.blink::CrossThreadPersistent.324"* %4, i64 0, i32 0, i32 1
  %73 = getelementptr inbounds %"class.blink::CrossThreadPersistentNodePtr", %"class.blink::CrossThreadPersistentNodePtr"* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %73, align 8, !alias.scope !27
  %74 = ptrtoint %"class.blink::DatabaseThread"* %0 to i64
  switch i64 %74, label %75 [
    i64 0, label %94
    i64 -1, label %94
  ]

75:                                               ; preds = %59
  %76 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9, !noalias !27
  %77 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %76, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %77) #9, !noalias !27
  %78 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9, !noalias !27
  %79 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %78, i64 0, i32 0, i32 0
  %80 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %79, align 8, !noalias !27
  %81 = icmp eq %"class.blink::PersistentNode"* %80, null
  br i1 %81, label %82, label %85, !prof !6

82:                                               ; preds = %75
  %83 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %78, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %83) #9
  %84 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %79, align 8
  br label %85

85:                                               ; preds = %82, %75
  %86 = phi %"class.blink::PersistentNode"* [ %84, %82 ], [ %80, %75 ]
  %87 = bitcast %"class.blink::PersistentNode"* %86 to i64*
  %88 = load i64, i64* %87, align 8, !noalias !27
  %89 = bitcast %"class.blink::CrossThreadPersistentRegion"* %78 to i64*
  store i64 %88, i64* %89, align 8, !noalias !27
  %90 = bitcast %"class.blink::PersistentNode"* %86 to %"class.blink::PersistentBase.325"**
  store %"class.blink::PersistentBase.325"* %70, %"class.blink::PersistentBase.325"** %90, align 8, !noalias !27
  %91 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %86, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_14DatabaseThreadELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %91, align 8
  %92 = ptrtoint %"class.blink::PersistentNode"* %86 to i64
  %93 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %72 to i64*
  store atomic i64 %92, i64* %93 release, align 8, !alias.scope !27
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %77) #9
  br label %94

94:                                               ; preds = %59, %59, %85
  %95 = call i8* @_Znwm(i64 64) #10, !noalias !30
  %96 = bitcast i8* %95 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %96, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink14DatabaseThreadEFvvEJNS3_21CrossThreadPersistentIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink14DatabaseThreadEFvvEJNS2_21CrossThreadPersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #9, !noalias !30
  %97 = getelementptr inbounds i8, i8* %95, i64 32
  %98 = bitcast i8* %97 to i64*
  store i64 ptrtoint (void (%"class.blink::DatabaseThread"*)* @_ZN5blink14DatabaseThread30CleanupDatabaseThreadCompletedEv to i64), i64* %98, align 8, !noalias !30
  %99 = getelementptr inbounds i8, i8* %95, i64 40
  %100 = getelementptr inbounds i8, i8* %95, i64 48
  %101 = bitcast i8* %100 to %"class.blink::PersistentBase.325"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %99, i8 0, i64 24, i1 false)
  %102 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9, !noalias !30
  %103 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %102, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %103) #9, !noalias !30
  %104 = load %"class.blink::DatabaseThread"*, %"class.blink::DatabaseThread"** %71, align 8, !noalias !30
  call void @_ZN5blink14PersistentBaseINS_14DatabaseThreadELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.325"* %101, %"class.blink::DatabaseThread"* %104) #9, !noalias !30
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %103) #9, !noalias !30
  %105 = bitcast %"class.base::OnceCallback"* %3 to i8**
  store i8* %95, i8** %105, align 8, !alias.scope !30
  %106 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %67, %"class.base::Location"* nonnull dereferenceable(32) %2, %"class.base::OnceCallback"* nonnull %3) #9
  %107 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %107) #9
  %108 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %72 to i64*
  %109 = load atomic i64, i64* %108 acquire, align 8
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %125, label %111

111:                                              ; preds = %94
  %112 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9
  %113 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %112, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %113) #9
  %114 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9
  %115 = load atomic i64, i64* %108 monotonic, align 8
  %116 = inttoptr i64 %115 to %"class.blink::PersistentNode"*
  %117 = icmp eq i64 %115, 0
  br i1 %117, label %124, label %118

118:                                              ; preds = %111
  %119 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %114, i64 0, i32 0, i32 0
  %120 = bitcast %"class.blink::CrossThreadPersistentRegion"* %114 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = inttoptr i64 %115 to i64*
  store i64 %121, i64* %122, align 8
  %123 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %116, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %123, align 8
  store %"class.blink::PersistentNode"* %116, %"class.blink::PersistentNode"** %119, align 8
  br label %124

124:                                              ; preds = %118, %111
  store atomic i64 0, i64* %108 release, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %113) #9
  br label %125

125:                                              ; preds = %94, %124
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %69) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %68) #9
  %126 = icmp eq %"class.base::SingleThreadTaskRunner"* %66, null
  br i1 %126, label %135, label %127

127:                                              ; preds = %125
  %128 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %66, i64 0, i32 0, i32 0, i32 1
  %129 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %128, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = atomicrmw sub i32* %129, i32 1 acq_rel
  %131 = icmp eq i32 %130, 1
  br i1 %131, label %132, label %135

132:                                              ; preds = %127
  %133 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %128, i64 -2
  %134 = bitcast %"class.base::RefCountedThreadSafe"* %133 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %134) #9
  br label %135

135:                                              ; preds = %125, %127, %132
  ret void
}

declare void @_ZN4base13WaitableEvent4WaitEv(%"class.base::WaitableEvent"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"*) unnamed_addr #1

declare void @_ZN5blink25SQLTransactionCoordinator8ShutdownEv(%"class.blink::SQLTransactionCoordinator"*) local_unnamed_addr #4

declare void @_ZN5blink8Database5CloseEv(%"class.blink::Database"*) local_unnamed_addr #4

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14DatabaseThread30CleanupDatabaseThreadCompletedEv(%"class.blink::DatabaseThread"* nocapture readonly) #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DatabaseThread", %"class.blink::DatabaseThread"* %0, i64 0, i32 4
  %3 = load %"class.base::WaitableEvent"*, %"class.base::WaitableEvent"** %2, align 8
  %4 = icmp eq %"class.base::WaitableEvent"* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"* nonnull %3) #9
  br label %6

6:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #1

declare void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14DatabaseThread18RecordDatabaseOpenEPNS_8DatabaseE(%"class.blink::DatabaseThread"*, %"class.blink::Database"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Database"*, align 8
  store %"class.blink::Database"* %1, %"class.blink::Database"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::DatabaseThread", %"class.blink::DatabaseThread"* %0, i64 0, i32 5, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %4) #9
  %5 = getelementptr inbounds %"class.blink::DatabaseThread", %"class.blink::DatabaseThread"* %0, i64 0, i32 6
  %6 = load i8, i8* %5, align 8, !range !37
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::DatabaseThread", %"class.blink::DatabaseThread"* %0, i64 0, i32 1, i32 0
  %10 = call { %"class.blink::CrossThreadPersistent"*, i8 } @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_8DatabaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable"* %9, %"class.blink::Database"** nonnull dereferenceable(8) %3, %"class.blink::Database"** nonnull dereferenceable(8) %3) #9
  br label %11

11:                                               ; preds = %2, %8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14DatabaseThread20RecordDatabaseClosedEPNS_8DatabaseE(%"class.blink::DatabaseThread"*, %"class.blink::Database"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DatabaseThread", %"class.blink::DatabaseThread"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %3, i64 0, i32 0
  %5 = tail call { %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"* } @_ZNK3WTF9HashTableIN5blink21CrossThreadPersistentINS1_8DatabaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE4findEPS3_(%"class.WTF::HashTable"* %4, %"class.blink::Database"* %1) #9
  %6 = extractvalue { %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"* } %5, 0
  %7 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %3, i64 0, i32 0, i32 0
  %8 = load %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::DatabaseThread", %"class.blink::DatabaseThread"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %8, i64 %11
  %13 = icmp eq %"class.blink::CrossThreadPersistent"* %12, %6
  br i1 %13, label %36, label %14

14:                                               ; preds = %2
  tail call void @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_8DatabaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE12DeleteBucketERKS4_(%"class.blink::CrossThreadPersistent"* dereferenceable(16) %6) #9
  %15 = getelementptr inbounds %"class.blink::DatabaseThread", %"class.blink::DatabaseThread"* %0, i64 0, i32 1, i32 0, i32 3
  %16 = load i32, i32* %15, align 8
  %17 = add i32 %16, 1
  %18 = and i32 %17, 2147483647
  %19 = and i32 %16, -2147483648
  %20 = or i32 %18, %19
  store i32 %20, i32* %15, align 8
  %21 = getelementptr inbounds %"class.blink::DatabaseThread", %"class.blink::DatabaseThread"* %0, i64 0, i32 1, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = add i32 %22, -1
  store i32 %23, i32* %21, align 4
  %24 = mul i32 %23, 6
  %25 = load i32, i32* %9, align 8
  %26 = icmp ult i32 %24, %25
  %27 = icmp ugt i32 %25, 8
  %28 = and i1 %26, %27
  br i1 %28, label %29, label %36

29:                                               ; preds = %14
  %30 = lshr i32 %25, 1
  %31 = zext i32 %30 to i64
  %32 = shl nuw nsw i64 %31, 4
  %33 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %32, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21CrossThreadPersistentINS1_8DatabaseEEEEEPKcv, i64 0, i64 0)) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %33, i8 0, i64 %32, i1 false) #9
  %34 = bitcast i8* %33 to %"class.blink::CrossThreadPersistent"*
  %35 = tail call %"class.blink::CrossThreadPersistent"* @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_8DatabaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable"* %4, %"class.blink::CrossThreadPersistent"* %34, i32 %30, %"class.blink::CrossThreadPersistent"* null) #9
  br label %36

36:                                               ; preds = %2, %14, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink14DatabaseThread14IsDatabaseOpenEPNS_8DatabaseE(%"class.blink::DatabaseThread"*, %"class.blink::Database"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DatabaseThread", %"class.blink::DatabaseThread"* %0, i64 0, i32 5, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %3) #9
  %4 = getelementptr inbounds %"class.blink::DatabaseThread", %"class.blink::DatabaseThread"* %0, i64 0, i32 6
  %5 = load i8, i8* %4, align 8, !range !37
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %73

7:                                                ; preds = %2
  %8 = ptrtoint %"class.blink::Database"* %1 to i64
  %9 = getelementptr inbounds %"class.blink::DatabaseThread", %"class.blink::DatabaseThread"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"** %9, align 8
  %11 = icmp eq %"class.blink::CrossThreadPersistent"* %10, null
  br i1 %11, label %70, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.blink::DatabaseThread", %"class.blink::DatabaseThread"* %0, i64 0, i32 1, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = add i32 %14, -1
  %16 = zext i32 %15 to i64
  %17 = shl i64 %8, 32
  %18 = xor i64 %17, -1
  %19 = add i64 %18, %8
  %20 = lshr i64 %19, 22
  %21 = xor i64 %20, %19
  %22 = shl i64 %21, 13
  %23 = xor i64 %22, -1
  %24 = add i64 %21, %23
  %25 = lshr i64 %24, 8
  %26 = xor i64 %25, %24
  %27 = mul i64 %26, 9
  %28 = lshr i64 %27, 15
  %29 = xor i64 %28, %27
  %30 = shl i64 %29, 27
  %31 = xor i64 %30, -1
  %32 = add i64 %29, %31
  %33 = lshr i64 %32, 31
  %34 = xor i64 %33, %32
  %35 = trunc i64 %34 to i32
  %36 = and i32 %15, %35
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %10, i64 %37
  %39 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.blink::Database"*, %"class.blink::Database"** %39, align 8
  %41 = icmp eq %"class.blink::Database"* %40, %1
  br i1 %41, label %70, label %42

42:                                               ; preds = %12
  %43 = xor i32 %35, -1
  %44 = lshr i32 %35, 23
  %45 = add i32 %44, %43
  %46 = shl i32 %45, 12
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 7
  %49 = xor i32 %48, %47
  %50 = shl i32 %49, 2
  %51 = xor i32 %50, %49
  %52 = lshr i32 %51, 20
  %53 = xor i32 %52, %51
  %54 = or i32 %53, 1
  %55 = zext i32 %54 to i64
  br label %56

56:                                               ; preds = %61, %42
  %57 = phi %"class.blink::Database"* [ %40, %42 ], [ %68, %61 ]
  %58 = phi i64 [ %37, %42 ], [ %65, %61 ]
  %59 = phi i64 [ 0, %42 ], [ %63, %61 ]
  %60 = icmp eq %"class.blink::Database"* %57, null
  br i1 %60, label %70, label %61

61:                                               ; preds = %56
  %62 = icmp eq i64 %59, 0
  %63 = select i1 %62, i64 %55, i64 %59
  %64 = add i64 %63, %58
  %65 = and i64 %64, %16
  %66 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %10, i64 %65
  %67 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %66, i64 0, i32 0, i32 0
  %68 = load %"class.blink::Database"*, %"class.blink::Database"** %67, align 8
  %69 = icmp eq %"class.blink::Database"* %68, %1
  br i1 %69, label %70, label %56

70:                                               ; preds = %56, %61, %7, %12
  %71 = phi %"class.blink::CrossThreadPersistent"* [ null, %7 ], [ %38, %12 ], [ %66, %61 ], [ null, %56 ]
  %72 = icmp ne %"class.blink::CrossThreadPersistent"* %71, null
  br label %73

73:                                               ; preds = %2, %70
  %74 = phi i1 [ false, %2 ], [ %72, %70 ]
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %3) #9
  ret i1 %74
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink14DatabaseThread16IsDatabaseThreadEv(%"class.blink::DatabaseThread"* nocapture readnone) local_unnamed_addr #0 align 2 {
  %2 = tail call zeroext i1 @_ZN3WTF12IsMainThreadEv() #9
  %3 = xor i1 %2, true
  ret i1 %3
}

declare zeroext i1 @_ZN3WTF12IsMainThreadEv() local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14DatabaseThread12ScheduleTaskENSt3__110unique_ptrINS_12DatabaseTaskENS1_14default_deleteIS3_EEEE(%"class.blink::DatabaseThread"* nocapture readonly, %"class.blink::DatabaseTask"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %9 = ptrtoint %"class.blink::DatabaseTask"* %1 to i64
  %10 = getelementptr inbounds %"class.blink::DatabaseThread", %"class.blink::DatabaseThread"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::Thread"*, %"class.blink::Thread"** %10, align 8
  %12 = bitcast %"class.blink::Thread"* %11 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)***
  %13 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*** %12, align 8
  %14 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %13, i64 3
  %15 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %14, align 8
  %16 = tail call %"class.base::SingleThreadTaskRunner"* %15(%"class.blink::Thread"* %11) #9
  %17 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #9
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.1, i64 0, i64 0), i32 174) #9
  %18 = bitcast %"class.base::OnceCallback"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = call i8* @_Znwm(i64 56) #10, !noalias !38
  %20 = bitcast i8* %19 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %20, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink12DatabaseTaskEFvvEJNSt3__110unique_ptrIS4_NS7_14default_deleteIS4_EEEEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink12DatabaseTaskEFvvEJNSt3__110unique_ptrIS3_NS6_14default_deleteIS3_EEEEEE7DestroyEPKNS0_13BindStateBaseE) #9, !noalias !38
  %21 = getelementptr inbounds i8, i8* %19, i64 32
  %22 = bitcast i8* %21 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::DatabaseTask"*)* @_ZN5blink12DatabaseTask3RunEv to i64), i64 0>, <2 x i64>* %22, align 8, !noalias !38
  %23 = getelementptr inbounds i8, i8* %19, i64 48
  %24 = bitcast i8* %23 to i64*
  store i64 %9, i64* %24, align 8, !noalias !38
  %25 = bitcast %"class.base::OnceCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #9, !noalias !45
  %26 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0, i32 0, i32 0
  %27 = ptrtoint i8* %19 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %26, align 8, !noalias !46
  %28 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %28, align 8, !noalias !46
  %29 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %29) #9, !noalias !46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9, !noalias !45
  %30 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %30) #9, !noalias !45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  %31 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31)
  %32 = bitcast %"class.WTF::CrossThreadOnceFunction"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32)
  %33 = bitcast %"class.base::SingleThreadTaskRunner"* %16 to %"class.base::TaskRunner"*
  %34 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %34, align 8
  %35 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %27, i64* %36, align 8, !alias.scope !49
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %35, align 8, !noalias !49
  %37 = bitcast %"class.base::SingleThreadTaskRunner"* %16 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %38 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %37, align 8
  %39 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %38, align 8
  %40 = call zeroext i1 %39(%"class.base::TaskRunner"* %33, %"class.base::Location"* nonnull dereferenceable(32) %7, %"class.base::OnceCallback"* nonnull %3, i64 0) #9
  %41 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %41) #9
  %42 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %4, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %42) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32)
  %43 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %8, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %43) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #9
  %44 = icmp eq %"class.base::SingleThreadTaskRunner"* %16, null
  br i1 %44, label %53, label %45

45:                                               ; preds = %2
  %46 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %16, i64 0, i32 0, i32 0, i32 1
  %47 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw sub i32* %47, i32 1 acq_rel
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %53

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %46, i64 -2
  %52 = bitcast %"class.base::RefCountedThreadSafe"* %51 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %52) #9
  br label %53

53:                                               ; preds = %50, %45, %2
  ret void
}

declare void @_ZN5blink12DatabaseTask3RunEv(%"class.blink::DatabaseTask"*) #4

declare void @_ZN3WTF9MutexBaseC2Eb(%"class.WTF::MutexBase"*, i1 zeroext) unnamed_addr #4

declare dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() local_unnamed_addr #4

declare dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_8DatabaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS4_j(%"class.blink::CrossThreadPersistent"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  br label %8

6:                                                ; preds = %32, %2
  %7 = bitcast %"class.blink::CrossThreadPersistent"* %0 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #9
  ret void

8:                                                ; preds = %32, %4
  %9 = phi i64 [ 0, %4 ], [ %33, %32 ]
  %10 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %0, i64 %9, i32 0, i32 0
  %11 = load %"class.blink::Database"*, %"class.blink::Database"** %10, align 8
  %12 = icmp eq %"class.blink::Database"* %11, inttoptr (i64 -1 to %"class.blink::Database"*)
  br i1 %12, label %32, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %0, i64 %9, i32 0, i32 1
  %15 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %14 to i64*
  %16 = load atomic i64, i64* %15 acquire, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %32, label %18

18:                                               ; preds = %13
  %19 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9
  %20 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %19, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %20) #9
  %21 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9
  %22 = load atomic i64, i64* %15 monotonic, align 8
  %23 = inttoptr i64 %22 to %"class.blink::PersistentNode"*
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %31, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %21, i64 0, i32 0, i32 0
  %27 = bitcast %"class.blink::CrossThreadPersistentRegion"* %21 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = inttoptr i64 %22 to i64*
  store i64 %28, i64* %29, align 8
  %30 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %23, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %30, align 8
  store %"class.blink::PersistentNode"* %23, %"class.blink::PersistentNode"** %26, align 8
  br label %31

31:                                               ; preds = %25, %18
  store atomic i64 0, i64* %15 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %20) #9
  br label %32

32:                                               ; preds = %31, %13, %8
  %33 = add nuw nsw i64 %9, 1
  %34 = icmp eq i64 %33, %5
  br i1 %34, label %6, label %8
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink14DatabaseThreadEFvvEJNS3_21CrossThreadPersistentIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %8
  %12 = bitcast i8* %11 to %"class.blink::DatabaseThread"*
  %13 = and i64 %5, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %5, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.blink::DatabaseThread"*)**
  %21 = load void (%"class.blink::DatabaseThread"*)*, void (%"class.blink::DatabaseThread"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %5 to void (%"class.blink::DatabaseThread"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.blink::DatabaseThread"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.blink::DatabaseThread"* %12) #9
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink14DatabaseThreadEFvvEJNS2_21CrossThreadPersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %24, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to i64*
  %6 = load atomic i64, i64* %5 acquire, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %22, label %8

8:                                                ; preds = %3
  %9 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9
  %10 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %9, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %10) #9
  %11 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9
  %12 = load atomic i64, i64* %5 monotonic, align 8
  %13 = inttoptr i64 %12 to %"class.blink::PersistentNode"*
  %14 = icmp eq i64 %12, 0
  br i1 %14, label %21, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %11, i64 0, i32 0, i32 0
  %17 = bitcast %"class.blink::CrossThreadPersistentRegion"* %11 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = inttoptr i64 %12 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %13, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %20, align 8
  store %"class.blink::PersistentNode"* %13, %"class.blink::PersistentNode"** %16, align 8
  br label %21

21:                                               ; preds = %15, %8
  store atomic i64 0, i64* %5 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %10) #9
  br label %22

22:                                               ; preds = %3, %21
  %23 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %23) #10
  br label %24

24:                                               ; preds = %22, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_14DatabaseThreadELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.325"*, %"class.blink::DatabaseThread"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PersistentBase.325", %"class.blink::PersistentBase.325"* %0, i64 0, i32 0
  store %"class.blink::DatabaseThread"* %1, %"class.blink::DatabaseThread"** %3, align 8
  %4 = ptrtoint %"class.blink::DatabaseThread"* %1 to i64
  switch i64 %4, label %5 [
    i64 0, label %29
    i64 -1, label %29
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::PersistentBase.325", %"class.blink::PersistentBase.325"* %0, i64 0, i32 1
  %7 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %6 to i64*
  %8 = load atomic i64, i64* %7 acquire, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %46

10:                                               ; preds = %5
  %11 = bitcast %"class.blink::PersistentBase.325"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  switch i64 %12, label %13 [
    i64 0, label %46
    i64 -1, label %46
  ]

13:                                               ; preds = %10
  %14 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9
  %15 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %14, i64 0, i32 0, i32 0
  %16 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %15, align 8
  %17 = icmp eq %"class.blink::PersistentNode"* %16, null
  br i1 %17, label %18, label %21, !prof !6

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %14, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %19) #9
  %20 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %15, align 8
  br label %21

21:                                               ; preds = %18, %13
  %22 = phi %"class.blink::PersistentNode"* [ %20, %18 ], [ %16, %13 ]
  %23 = bitcast %"class.blink::PersistentNode"* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::CrossThreadPersistentRegion"* %14 to i64*
  store i64 %24, i64* %25, align 8
  %26 = bitcast %"class.blink::PersistentNode"* %22 to %"class.blink::PersistentBase.325"**
  store %"class.blink::PersistentBase.325"* %0, %"class.blink::PersistentBase.325"** %26, align 8
  %27 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %22, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_14DatabaseThreadELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %27, align 8
  %28 = ptrtoint %"class.blink::PersistentNode"* %22 to i64
  store atomic i64 %28, i64* %7 release, align 8
  br label %46

29:                                               ; preds = %2, %2
  %30 = getelementptr inbounds %"class.blink::PersistentBase.325", %"class.blink::PersistentBase.325"* %0, i64 0, i32 1
  %31 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %30 to i64*
  %32 = load atomic i64, i64* %31 acquire, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %46, label %34

34:                                               ; preds = %29
  %35 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9
  %36 = load atomic i64, i64* %31 monotonic, align 8
  %37 = inttoptr i64 %36 to %"class.blink::PersistentNode"*
  %38 = icmp eq i64 %36, 0
  br i1 %38, label %45, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %35, i64 0, i32 0, i32 0
  %41 = bitcast %"class.blink::CrossThreadPersistentRegion"* %35 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = inttoptr i64 %36 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %37, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %44, align 8
  store %"class.blink::PersistentNode"* %37, %"class.blink::PersistentNode"** %40, align 8
  br label %45

45:                                               ; preds = %39, %34
  store atomic i64 0, i64* %31 release, align 8
  br label %46

46:                                               ; preds = %5, %45, %29, %21, %10, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_14DatabaseThreadELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::DatabaseThread"**
  %5 = load %"class.blink::DatabaseThread"*, %"class.blink::DatabaseThread"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #9
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #9
  %7 = icmp eq %"class.blink::DatabaseThread"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::DatabaseThread"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14DatabaseThreadEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #9
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #9
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14DatabaseThreadEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #4

declare void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #4

declare void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink12DatabaseTaskEFvvEJNSt3__110unique_ptrIS4_NS7_14default_deleteIS4_EEEEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %8
  %12 = bitcast i8* %11 to %"class.blink::DatabaseTask"*
  %13 = and i64 %5, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %5, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.blink::DatabaseTask"*)**
  %21 = load void (%"class.blink::DatabaseTask"*)*, void (%"class.blink::DatabaseTask"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %5 to void (%"class.blink::DatabaseTask"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.blink::DatabaseTask"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.blink::DatabaseTask"* %12) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink12DatabaseTaskEFvvEJNSt3__110unique_ptrIS3_NS6_14default_deleteIS3_EEEEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %15, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.blink::DatabaseTask"**
  %6 = load %"class.blink::DatabaseTask"*, %"class.blink::DatabaseTask"** %5, align 8
  store %"class.blink::DatabaseTask"* null, %"class.blink::DatabaseTask"** %5, align 8
  %7 = icmp eq %"class.blink::DatabaseTask"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.blink::DatabaseTask"* %6 to void (%"class.blink::DatabaseTask"*)***
  %10 = load void (%"class.blink::DatabaseTask"*)**, void (%"class.blink::DatabaseTask"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::DatabaseTask"*)*, void (%"class.blink::DatabaseTask"*)** %10, i64 1
  %12 = load void (%"class.blink::DatabaseTask"*)*, void (%"class.blink::DatabaseTask"*)** %11, align 8
  tail call void %12(%"class.blink::DatabaseTask"* nonnull %6) #9
  br label %13

13:                                               ; preds = %3, %8
  %14 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %14) #10
  br label %15

15:                                               ; preds = %13, %1
  ret void
}

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #1

declare void @_ZN5blink25SQLTransactionCoordinatorC1Ev(%"class.blink::SQLTransactionCoordinator"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_25SQLTransactionCoordinatorEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #9
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !6

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #9
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_25SQLTransactionCoordinatorEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_25SQLTransactionCoordinatorEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.6"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_25SQLTransactionCoordinatorEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.6"*)) #9
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #9
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #9
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #9
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* %40, i8* %41) #9
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #9
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.6, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #9
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #9
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !6

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #9
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #4

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #4

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #4

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #4

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #4

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_25SQLTransactionCoordinatorEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SQLTransactionCoordinator"*
  tail call void @_ZNK5blink25SQLTransactionCoordinator5TraceEPNS_7VisitorE(%"class.blink::SQLTransactionCoordinator"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_25SQLTransactionCoordinatorEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"struct.WTF::KeyValuePair"**
  %3 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %2, align 8
  %4 = icmp eq %"struct.WTF::KeyValuePair"* %3, null
  br i1 %4, label %41, label %5, !prof !2

5:                                                ; preds = %1
  %6 = getelementptr inbounds i8, i8* %0, i64 8
  %7 = bitcast i8* %6 to i32*
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %39, label %10

10:                                               ; preds = %5
  %11 = zext i32 %8 to i64
  br label %12

12:                                               ; preds = %36, %10
  %13 = phi i64 [ 0, %10 ], [ %37, %36 ]
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %13
  %15 = bitcast %"struct.WTF::KeyValuePair"* %14 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = icmp eq i8* %16, inttoptr (i64 -1 to i8*)
  br i1 %17, label %36, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %13, i32 1
  tail call void @_ZN5blink25SQLTransactionCoordinator16CoordinationInfoD2Ev(%"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %19) #9
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %14, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #9
  br label %36

36:                                               ; preds = %35, %32, %18, %12
  %37 = add nuw nsw i64 %13, 1
  %38 = icmp eq i64 %37, %11
  br i1 %38, label %39, label %12

39:                                               ; preds = %36, %5
  %40 = bitcast %"struct.WTF::KeyValuePair"* %3 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %40) #9
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %2, align 8
  br label %41

41:                                               ; preds = %1, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_25SQLTransactionCoordinatorEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.6"*) local_unnamed_addr #4

declare void @_ZNK5blink25SQLTransactionCoordinator5TraceEPNS_7VisitorE(%"class.blink::SQLTransactionCoordinator"*, %"class.blink::Visitor"*) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25SQLTransactionCoordinator16CoordinationInfoD2Ev(%"struct.blink::SQLTransactionCoordinator::CoordinationInfo"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"struct.blink::SQLTransactionCoordinator::CoordinationInfo", %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %0, i64 0, i32 2, i32 0, i32 1
  %3 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %2 to i64*
  %4 = load atomic i64, i64* %3 acquire, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %20, label %6

6:                                                ; preds = %1
  %7 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9
  %8 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %7, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %8) #9
  %9 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9
  %10 = load atomic i64, i64* %3 monotonic, align 8
  %11 = inttoptr i64 %10 to %"class.blink::PersistentNode"*
  %12 = icmp eq i64 %10, 0
  br i1 %12, label %19, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %9, i64 0, i32 0, i32 0
  %15 = bitcast %"class.blink::CrossThreadPersistentRegion"* %9 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = inttoptr i64 %10 to i64*
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %11, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %18, align 8
  store %"class.blink::PersistentNode"* %11, %"class.blink::PersistentNode"** %14, align 8
  br label %19

19:                                               ; preds = %13, %6
  store atomic i64 0, i64* %3 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %8) #9
  br label %20

20:                                               ; preds = %1, %19
  %21 = getelementptr inbounds %"struct.blink::SQLTransactionCoordinator::CoordinationInfo", %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %0, i64 0, i32 1, i32 0, i32 0
  %22 = load %"class.blink::CrossThreadPersistent.20"*, %"class.blink::CrossThreadPersistent.20"** %21, align 8
  %23 = icmp eq %"class.blink::CrossThreadPersistent.20"* %22, null
  br i1 %23, label %27, label %24, !prof !2

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"struct.blink::SQLTransactionCoordinator::CoordinationInfo", %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %0, i64 0, i32 1, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  tail call void @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_21SQLTransactionBackendEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS4_j(%"class.blink::CrossThreadPersistent.20"* nonnull %22, i32 %26) #9
  store %"class.blink::CrossThreadPersistent.20"* null, %"class.blink::CrossThreadPersistent.20"** %21, align 8
  br label %27

27:                                               ; preds = %20, %24
  %28 = getelementptr inbounds %"struct.blink::SQLTransactionCoordinator::CoordinationInfo", %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %0, i64 0, i32 0
  %29 = getelementptr inbounds %"struct.blink::SQLTransactionCoordinator::CoordinationInfo", %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::CrossThreadPersistent.20"*, %"class.blink::CrossThreadPersistent.20"** %29, align 8
  %31 = icmp eq %"class.blink::CrossThreadPersistent.20"* %30, null
  br i1 %31, label %44, label %32

32:                                               ; preds = %27
  %33 = bitcast %"class.blink::CrossThreadPersistent.20"* %30 to i8*
  %34 = getelementptr inbounds %"struct.blink::SQLTransactionCoordinator::CoordinationInfo", %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %0, i64 0, i32 0, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = getelementptr inbounds %"struct.blink::SQLTransactionCoordinator::CoordinationInfo", %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %0, i64 0, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %35, %37
  br i1 %38, label %42, label %39

39:                                               ; preds = %32
  tail call void @_ZN3WTF5DequeIN5blink21CrossThreadPersistentINS1_21SQLTransactionBackendEEELj0ENS_18PartitionAllocatorEE10DestroyAllEv(%"class.WTF::Deque"* %28) #9
  %40 = bitcast %"struct.blink::SQLTransactionCoordinator::CoordinationInfo"* %0 to i8**
  %41 = load i8*, i8** %40, align 8
  br label %42

42:                                               ; preds = %39, %32
  %43 = phi i8* [ %41, %39 ], [ %33, %32 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %43) #9
  store %"class.blink::CrossThreadPersistent.20"* null, %"class.blink::CrossThreadPersistent.20"** %29, align 8
  br label %44

44:                                               ; preds = %27, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_21SQLTransactionBackendEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS4_j(%"class.blink::CrossThreadPersistent.20"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  br label %8

6:                                                ; preds = %32, %2
  %7 = bitcast %"class.blink::CrossThreadPersistent.20"* %0 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #9
  ret void

8:                                                ; preds = %32, %4
  %9 = phi i64 [ 0, %4 ], [ %33, %32 ]
  %10 = getelementptr inbounds %"class.blink::CrossThreadPersistent.20", %"class.blink::CrossThreadPersistent.20"* %0, i64 %9, i32 0, i32 0
  %11 = load %"class.blink::SQLTransactionBackend"*, %"class.blink::SQLTransactionBackend"** %10, align 8
  %12 = icmp eq %"class.blink::SQLTransactionBackend"* %11, inttoptr (i64 -1 to %"class.blink::SQLTransactionBackend"*)
  br i1 %12, label %32, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::CrossThreadPersistent.20", %"class.blink::CrossThreadPersistent.20"* %0, i64 %9, i32 0, i32 1
  %15 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %14 to i64*
  %16 = load atomic i64, i64* %15 acquire, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %32, label %18

18:                                               ; preds = %13
  %19 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9
  %20 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %19, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %20) #9
  %21 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9
  %22 = load atomic i64, i64* %15 monotonic, align 8
  %23 = inttoptr i64 %22 to %"class.blink::PersistentNode"*
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %31, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %21, i64 0, i32 0, i32 0
  %27 = bitcast %"class.blink::CrossThreadPersistentRegion"* %21 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = inttoptr i64 %22 to i64*
  store i64 %28, i64* %29, align 8
  %30 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %23, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %30, align 8
  store %"class.blink::PersistentNode"* %23, %"class.blink::PersistentNode"** %26, align 8
  br label %31

31:                                               ; preds = %25, %18
  store atomic i64 0, i64* %15 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %20) #9
  br label %32

32:                                               ; preds = %31, %13, %8
  %33 = add nuw nsw i64 %9, 1
  %34 = icmp eq i64 %33, %5
  br i1 %34, label %6, label %8
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5DequeIN5blink21CrossThreadPersistentINS1_21SQLTransactionBackendEEELj0ENS_18PartitionAllocatorEE10DestroyAllEv(%"class.WTF::Deque"*) local_unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp ugt i32 %3, %5
  %7 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::CrossThreadPersistent.20"*, %"class.blink::CrossThreadPersistent.20"** %7, align 8
  %9 = zext i32 %5 to i64
  %10 = getelementptr inbounds %"class.blink::CrossThreadPersistent.20", %"class.blink::CrossThreadPersistent.20"* %8, i64 %9
  br i1 %6, label %39, label %11

11:                                               ; preds = %1
  %12 = icmp eq i32 %3, %5
  br i1 %12, label %101, label %13

13:                                               ; preds = %11
  %14 = zext i32 %3 to i64
  %15 = getelementptr inbounds %"class.blink::CrossThreadPersistent.20", %"class.blink::CrossThreadPersistent.20"* %8, i64 %14
  br label %16

16:                                               ; preds = %13, %36
  %17 = phi %"class.blink::CrossThreadPersistent.20"* [ %37, %36 ], [ %15, %13 ]
  %18 = getelementptr inbounds %"class.blink::CrossThreadPersistent.20", %"class.blink::CrossThreadPersistent.20"* %17, i64 0, i32 0, i32 1
  %19 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %18 to i64*
  %20 = load atomic i64, i64* %19 acquire, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %36, label %22

22:                                               ; preds = %16
  %23 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9
  %24 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %23, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %24) #9
  %25 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9
  %26 = load atomic i64, i64* %19 monotonic, align 8
  %27 = inttoptr i64 %26 to %"class.blink::PersistentNode"*
  %28 = icmp eq i64 %26, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %25, i64 0, i32 0, i32 0
  %31 = bitcast %"class.blink::CrossThreadPersistentRegion"* %25 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = inttoptr i64 %26 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %27, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %34, align 8
  store %"class.blink::PersistentNode"* %27, %"class.blink::PersistentNode"** %30, align 8
  br label %35

35:                                               ; preds = %29, %22
  store atomic i64 0, i64* %19 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %24) #9
  br label %36

36:                                               ; preds = %35, %16
  %37 = getelementptr inbounds %"class.blink::CrossThreadPersistent.20", %"class.blink::CrossThreadPersistent.20"* %17, i64 1
  %38 = icmp eq %"class.blink::CrossThreadPersistent.20"* %37, %10
  br i1 %38, label %101, label %16

39:                                               ; preds = %1
  %40 = icmp eq i32 %5, 0
  br i1 %40, label %67, label %41

41:                                               ; preds = %39, %61
  %42 = phi %"class.blink::CrossThreadPersistent.20"* [ %62, %61 ], [ %8, %39 ]
  %43 = getelementptr inbounds %"class.blink::CrossThreadPersistent.20", %"class.blink::CrossThreadPersistent.20"* %42, i64 0, i32 0, i32 1
  %44 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %43 to i64*
  %45 = load atomic i64, i64* %44 acquire, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %61, label %47

47:                                               ; preds = %41
  %48 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9
  %49 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %48, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %49) #9
  %50 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9
  %51 = load atomic i64, i64* %44 monotonic, align 8
  %52 = inttoptr i64 %51 to %"class.blink::PersistentNode"*
  %53 = icmp eq i64 %51, 0
  br i1 %53, label %60, label %54

54:                                               ; preds = %47
  %55 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %50, i64 0, i32 0, i32 0
  %56 = bitcast %"class.blink::CrossThreadPersistentRegion"* %50 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = inttoptr i64 %51 to i64*
  store i64 %57, i64* %58, align 8
  %59 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %52, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %59, align 8
  store %"class.blink::PersistentNode"* %52, %"class.blink::PersistentNode"** %55, align 8
  br label %60

60:                                               ; preds = %54, %47
  store atomic i64 0, i64* %44 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %49) #9
  br label %61

61:                                               ; preds = %60, %41
  %62 = getelementptr inbounds %"class.blink::CrossThreadPersistent.20", %"class.blink::CrossThreadPersistent.20"* %42, i64 1
  %63 = icmp eq %"class.blink::CrossThreadPersistent.20"* %62, %10
  br i1 %63, label %64, label %41

64:                                               ; preds = %61
  %65 = load %"class.blink::CrossThreadPersistent.20"*, %"class.blink::CrossThreadPersistent.20"** %7, align 8
  %66 = load i32, i32* %2, align 8
  br label %67

67:                                               ; preds = %64, %39
  %68 = phi i32 [ %66, %64 ], [ %3, %39 ]
  %69 = phi %"class.blink::CrossThreadPersistent.20"* [ %65, %64 ], [ %8, %39 ]
  %70 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %71 = load i32, i32* %70, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.blink::CrossThreadPersistent.20", %"class.blink::CrossThreadPersistent.20"* %69, i64 %72
  %74 = icmp eq i32 %68, %71
  br i1 %74, label %101, label %75

75:                                               ; preds = %67
  %76 = zext i32 %68 to i64
  %77 = getelementptr inbounds %"class.blink::CrossThreadPersistent.20", %"class.blink::CrossThreadPersistent.20"* %69, i64 %76
  br label %78

78:                                               ; preds = %75, %98
  %79 = phi %"class.blink::CrossThreadPersistent.20"* [ %99, %98 ], [ %77, %75 ]
  %80 = getelementptr inbounds %"class.blink::CrossThreadPersistent.20", %"class.blink::CrossThreadPersistent.20"* %79, i64 0, i32 0, i32 1
  %81 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %80 to i64*
  %82 = load atomic i64, i64* %81 acquire, align 8
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %98, label %84

84:                                               ; preds = %78
  %85 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9
  %86 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %85, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %86) #9
  %87 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9
  %88 = load atomic i64, i64* %81 monotonic, align 8
  %89 = inttoptr i64 %88 to %"class.blink::PersistentNode"*
  %90 = icmp eq i64 %88, 0
  br i1 %90, label %97, label %91

91:                                               ; preds = %84
  %92 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %87, i64 0, i32 0, i32 0
  %93 = bitcast %"class.blink::CrossThreadPersistentRegion"* %87 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %88 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %89, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %96, align 8
  store %"class.blink::PersistentNode"* %89, %"class.blink::PersistentNode"** %92, align 8
  br label %97

97:                                               ; preds = %91, %84
  store atomic i64 0, i64* %81 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %86) #9
  br label %98

98:                                               ; preds = %97, %78
  %99 = getelementptr inbounds %"class.blink::CrossThreadPersistent.20", %"class.blink::CrossThreadPersistent.20"* %79, i64 1
  %100 = icmp eq %"class.blink::CrossThreadPersistent.20"* %99, %73
  br i1 %100, label %101, label %78

101:                                              ; preds = %36, %98, %67, %11
  ret void
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_25SQLTransactionCoordinatorELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.219"*, %"class.blink::SQLTransactionCoordinator"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PersistentBase.219", %"class.blink::PersistentBase.219"* %0, i64 0, i32 0
  store %"class.blink::SQLTransactionCoordinator"* %1, %"class.blink::SQLTransactionCoordinator"** %3, align 8
  %4 = ptrtoint %"class.blink::SQLTransactionCoordinator"* %1 to i64
  switch i64 %4, label %5 [
    i64 0, label %29
    i64 -1, label %29
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::PersistentBase.219", %"class.blink::PersistentBase.219"* %0, i64 0, i32 1
  %7 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %6 to i64*
  %8 = load atomic i64, i64* %7 acquire, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %46

10:                                               ; preds = %5
  %11 = bitcast %"class.blink::PersistentBase.219"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  switch i64 %12, label %13 [
    i64 0, label %46
    i64 -1, label %46
  ]

13:                                               ; preds = %10
  %14 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9
  %15 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %14, i64 0, i32 0, i32 0
  %16 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %15, align 8
  %17 = icmp eq %"class.blink::PersistentNode"* %16, null
  br i1 %17, label %18, label %21, !prof !6

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %14, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %19) #9
  %20 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %15, align 8
  br label %21

21:                                               ; preds = %18, %13
  %22 = phi %"class.blink::PersistentNode"* [ %20, %18 ], [ %16, %13 ]
  %23 = bitcast %"class.blink::PersistentNode"* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::CrossThreadPersistentRegion"* %14 to i64*
  store i64 %24, i64* %25, align 8
  %26 = bitcast %"class.blink::PersistentNode"* %22 to %"class.blink::PersistentBase.219"**
  store %"class.blink::PersistentBase.219"* %0, %"class.blink::PersistentBase.219"** %26, align 8
  %27 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %22, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_25SQLTransactionCoordinatorELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %27, align 8
  %28 = ptrtoint %"class.blink::PersistentNode"* %22 to i64
  store atomic i64 %28, i64* %7 release, align 8
  br label %46

29:                                               ; preds = %2, %2
  %30 = getelementptr inbounds %"class.blink::PersistentBase.219", %"class.blink::PersistentBase.219"* %0, i64 0, i32 1
  %31 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %30 to i64*
  %32 = load atomic i64, i64* %31 acquire, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %46, label %34

34:                                               ; preds = %29
  %35 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9
  %36 = load atomic i64, i64* %31 monotonic, align 8
  %37 = inttoptr i64 %36 to %"class.blink::PersistentNode"*
  %38 = icmp eq i64 %36, 0
  br i1 %38, label %45, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %35, i64 0, i32 0, i32 0
  %41 = bitcast %"class.blink::CrossThreadPersistentRegion"* %35 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = inttoptr i64 %36 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %37, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %44, align 8
  store %"class.blink::PersistentNode"* %37, %"class.blink::PersistentNode"** %40, align 8
  br label %45

45:                                               ; preds = %39, %34
  store atomic i64 0, i64* %31 release, align 8
  br label %46

46:                                               ; preds = %5, %45, %29, %21, %10, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_25SQLTransactionCoordinatorELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::SQLTransactionCoordinator"**
  %5 = load %"class.blink::SQLTransactionCoordinator"*, %"class.blink::SQLTransactionCoordinator"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #9
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #9
  %7 = icmp eq %"class.blink::SQLTransactionCoordinator"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::SQLTransactionCoordinator"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_25SQLTransactionCoordinatorEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #9
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::CrossThreadPersistent"*, i8 } @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_8DatabaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.blink::Database"** dereferenceable(8), %"class.blink::Database"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"** %4, align 8
  %6 = icmp eq %"class.blink::CrossThreadPersistent"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::CrossThreadPersistent"* @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_8DatabaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable"* %0, %"class.blink::CrossThreadPersistent"* null)
  %9 = load %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::CrossThreadPersistent"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::Database"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %11, i64 %38
  %40 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.blink::Database"*, %"class.blink::Database"** %40, align 8
  %42 = icmp eq %"class.blink::Database"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::Database"*
  br i1 %42, label %86, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::Database"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"class.blink::CrossThreadPersistent"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"class.blink::CrossThreadPersistent"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::Database"* %59, %43
  br i1 %64, label %103, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::Database"* %59, inttoptr (i64 -1 to %"class.blink::Database"*)
  %67 = select i1 %66, %"class.blink::CrossThreadPersistent"* %60, %"class.blink::CrossThreadPersistent"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %11, i64 %71
  %73 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %72, i64 0, i32 0, i32 0
  %74 = load %"class.blink::Database"*, %"class.blink::Database"** %73, align 8
  %75 = icmp eq %"class.blink::Database"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"class.blink::CrossThreadPersistent"* %67, null
  br i1 %77, label %86, label %78

78:                                               ; preds = %76
  %79 = bitcast %"class.blink::CrossThreadPersistent"* %67 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 0, i64 16, i1 false) #9
  %80 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  br label %86

86:                                               ; preds = %10, %76, %78
  %87 = phi %"class.blink::CrossThreadPersistent"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %88 = load %"class.blink::Database"*, %"class.blink::Database"** %2, align 8
  %89 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %87, i64 0, i32 0
  %90 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9
  %91 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %90, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %91) #9
  tail call void @_ZN5blink14PersistentBaseINS_8DatabaseELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase"* %89, %"class.blink::Database"* %88) #9
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %91) #9
  %92 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %93 = load i32, i32* %92, align 4
  %94 = add i32 %93, 1
  store i32 %94, i32* %92, align 4
  %95 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %96 = load i32, i32* %95, align 8
  %97 = add i32 %96, %94
  %98 = shl i32 %97, 1
  %99 = load i32, i32* %12, align 8
  %100 = icmp ult i32 %98, %99
  br i1 %100, label %103, label %101

101:                                              ; preds = %86
  %102 = tail call %"class.blink::CrossThreadPersistent"* @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_8DatabaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable"* %0, %"class.blink::CrossThreadPersistent"* %87)
  br label %103

103:                                              ; preds = %58, %86, %101
  %104 = phi i8 [ 1, %86 ], [ 1, %101 ], [ 0, %58 ]
  %105 = phi %"class.blink::CrossThreadPersistent"* [ %87, %86 ], [ %102, %101 ], [ %60, %58 ]
  %106 = insertvalue { %"class.blink::CrossThreadPersistent"*, i8 } undef, %"class.blink::CrossThreadPersistent"* %105, 0
  %107 = insertvalue { %"class.blink::CrossThreadPersistent"*, i8 } %106, i8 %104, 1
  ret { %"class.blink::CrossThreadPersistent"*, i8 } %107
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CrossThreadPersistent"* @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_8DatabaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable"*, %"class.blink::CrossThreadPersistent"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #9
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i8* %22, i8* %23) #9
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.9, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #9
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21CrossThreadPersistentINS1_8DatabaseEEEEEPKcv, i64 0, i64 0)) #9
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #9
  %36 = bitcast i8* %35 to %"class.blink::CrossThreadPersistent"*
  %37 = call %"class.blink::CrossThreadPersistent"* @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_8DatabaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable"* %0, %"class.blink::CrossThreadPersistent"* %36, i32 %32, %"class.blink::CrossThreadPersistent"* %1) #9
  ret %"class.blink::CrossThreadPersistent"* %37
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CrossThreadPersistent"* @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_8DatabaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable"*, %"class.blink::CrossThreadPersistent"*, i32, %"class.blink::CrossThreadPersistent"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable", align 8
  %6 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"class.blink::CrossThreadPersistent"* %1, %"class.blink::CrossThreadPersistent"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"class.blink::CrossThreadPersistent"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"** %15, align 8
  %23 = ptrtoint %"class.blink::CrossThreadPersistent"* %22 to i64
  br label %42

24:                                               ; preds = %61
  %25 = bitcast %"class.WTF::HashTable"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %62, %24 ]
  %33 = phi %"class.blink::CrossThreadPersistent"* [ null, %16 ], [ %65, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %63, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %28
  %37 = inttoptr i64 %32 to %"class.blink::CrossThreadPersistent"*
  call void @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_8DatabaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS4_j(%"class.blink::CrossThreadPersistent"* nonnull %37, i32 %34) #9
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %38

38:                                               ; preds = %28, %36
  %39 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, -2147483648
  store i32 %41, i32* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #9
  ret %"class.blink::CrossThreadPersistent"* %33

42:                                               ; preds = %21, %61
  %43 = phi i64 [ %62, %61 ], [ %23, %21 ]
  %44 = phi i32 [ %63, %61 ], [ %13, %21 ]
  %45 = phi %"class.blink::CrossThreadPersistent"* [ %64, %61 ], [ %22, %21 ]
  %46 = phi %"class.blink::CrossThreadPersistent"* [ %65, %61 ], [ null, %21 ]
  %47 = phi i32 [ %66, %61 ], [ 0, %21 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %45, i64 %48
  %50 = bitcast %"class.blink::CrossThreadPersistent"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  switch i64 %51, label %52 [
    i64 -1, label %61
    i64 0, label %61
  ]

52:                                               ; preds = %42
  %53 = call { %"class.blink::CrossThreadPersistent"*, i8 } @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_8DatabaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable"* nonnull %5, %"class.blink::CrossThreadPersistent"* dereferenceable(16) %49) #9
  %54 = extractvalue { %"class.blink::CrossThreadPersistent"*, i8 } %53, 0
  call void @_ZN3WTF5MoverIN5blink21CrossThreadPersistentINS1_8DatabaseEEENS_18PartitionAllocatorENS_10HashTraitsIS4_EELb0EE4MoveEOS4_RS4_(%"class.blink::CrossThreadPersistent"* dereferenceable(16) %49, %"class.blink::CrossThreadPersistent"* dereferenceable(16) %54) #9
  %55 = load %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"** %15, align 8
  %56 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %55, i64 %48
  %57 = icmp eq %"class.blink::CrossThreadPersistent"* %56, %3
  %58 = select i1 %57, %"class.blink::CrossThreadPersistent"* %54, %"class.blink::CrossThreadPersistent"* %46
  %59 = load i32, i32* %12, align 8
  %60 = ptrtoint %"class.blink::CrossThreadPersistent"* %55 to i64
  br label %61

61:                                               ; preds = %42, %42, %52
  %62 = phi i64 [ %43, %42 ], [ %60, %52 ], [ %43, %42 ]
  %63 = phi i32 [ %44, %42 ], [ %59, %52 ], [ %44, %42 ]
  %64 = phi %"class.blink::CrossThreadPersistent"* [ %45, %42 ], [ %55, %52 ], [ %45, %42 ]
  %65 = phi %"class.blink::CrossThreadPersistent"* [ %46, %42 ], [ %58, %52 ], [ %46, %42 ]
  %66 = add i32 %47, 1
  %67 = icmp eq i32 %66, %63
  br i1 %67, label %24, label %42
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::CrossThreadPersistent"*, i8 } @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_8DatabaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable"*, %"class.blink::CrossThreadPersistent"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::CrossThreadPersistent"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %4, i64 %31
  %33 = ptrtoint %"class.blink::CrossThreadPersistent"* %32 to i64
  %34 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %32, i64 0, i32 0, i32 0
  %35 = load %"class.blink::Database"*, %"class.blink::Database"** %34, align 8
  %36 = icmp eq %"class.blink::Database"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::Database"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %68
  %53 = ptrtoint %"class.blink::CrossThreadPersistent"* %75 to i64
  %54 = inttoptr i64 %70 to %"class.blink::CrossThreadPersistent"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"class.blink::CrossThreadPersistent"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"class.blink::CrossThreadPersistent"* %57, null
  %59 = ptrtoint %"class.blink::CrossThreadPersistent"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %80

61:                                               ; preds = %68, %38
  %62 = phi i64 [ 0, %38 ], [ %70, %68 ]
  %63 = phi %"class.blink::Database"* [ %35, %38 ], [ %78, %68 ]
  %64 = phi i64 [ %33, %38 ], [ %76, %68 ]
  %65 = phi i64 [ %31, %38 ], [ %74, %68 ]
  %66 = phi i64 [ 0, %38 ], [ %72, %68 ]
  %67 = icmp eq %"class.blink::Database"* %63, %37
  br i1 %67, label %80, label %68

68:                                               ; preds = %61
  %69 = icmp eq %"class.blink::Database"* %63, inttoptr (i64 -1 to %"class.blink::Database"*)
  %70 = select i1 %69, i64 %64, i64 %62
  %71 = icmp eq i64 %66, 0
  %72 = select i1 %71, i64 %51, i64 %66
  %73 = add i64 %72, %65
  %74 = and i64 %73, %8
  %75 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %4, i64 %74
  %76 = ptrtoint %"class.blink::CrossThreadPersistent"* %75 to i64
  %77 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %75, i64 0, i32 0, i32 0
  %78 = load %"class.blink::Database"*, %"class.blink::Database"** %77, align 8
  %79 = icmp eq %"class.blink::Database"* %78, null
  br i1 %79, label %52, label %61

80:                                               ; preds = %61, %55
  %81 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %82 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %83 = inttoptr i64 %81 to %"class.blink::CrossThreadPersistent"*
  %84 = insertvalue { %"class.blink::CrossThreadPersistent"*, i8 } undef, %"class.blink::CrossThreadPersistent"* %83, 0
  %85 = insertvalue { %"class.blink::CrossThreadPersistent"*, i8 } %84, i8 %82, 1
  ret { %"class.blink::CrossThreadPersistent"*, i8 } %85
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5MoverIN5blink21CrossThreadPersistentINS1_8DatabaseEEENS_18PartitionAllocatorENS_10HashTraitsIS4_EELb0EE4MoveEOS4_RS4_(%"class.blink::CrossThreadPersistent"* dereferenceable(16), %"class.blink::CrossThreadPersistent"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %1, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %1, i64 0, i32 0, i32 1
  %5 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %4 to i64*
  %6 = load atomic i64, i64* %5 acquire, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %22, label %8

8:                                                ; preds = %2
  %9 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9
  %10 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %9, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %10) #9
  %11 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9
  %12 = load atomic i64, i64* %5 monotonic, align 8
  %13 = inttoptr i64 %12 to %"class.blink::PersistentNode"*
  %14 = icmp eq i64 %12, 0
  br i1 %14, label %21, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %11, i64 0, i32 0, i32 0
  %17 = bitcast %"class.blink::CrossThreadPersistentRegion"* %11 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = inttoptr i64 %12 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %13, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %20, align 8
  store %"class.blink::PersistentNode"* %13, %"class.blink::PersistentNode"** %16, align 8
  br label %21

21:                                               ; preds = %15, %8
  store atomic i64 0, i64* %5 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %10) #9
  br label %22

22:                                               ; preds = %2, %21
  %23 = bitcast %"class.blink::CrossThreadPersistent"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #9
  %24 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9
  %25 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %24, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %25) #9
  %26 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %0, i64 0, i32 0, i32 0
  %27 = load %"class.blink::Database"*, %"class.blink::Database"** %26, align 8
  tail call void @_ZN5blink14PersistentBaseINS_8DatabaseELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase"* %3, %"class.blink::Database"* %27) #9
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %25) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_8DatabaseELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase"*, %"class.blink::Database"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PersistentBase", %"class.blink::PersistentBase"* %0, i64 0, i32 0
  store %"class.blink::Database"* %1, %"class.blink::Database"** %3, align 8
  %4 = ptrtoint %"class.blink::Database"* %1 to i64
  switch i64 %4, label %5 [
    i64 0, label %29
    i64 -1, label %29
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::PersistentBase", %"class.blink::PersistentBase"* %0, i64 0, i32 1
  %7 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %6 to i64*
  %8 = load atomic i64, i64* %7 acquire, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %46

10:                                               ; preds = %5
  %11 = bitcast %"class.blink::PersistentBase"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  switch i64 %12, label %13 [
    i64 0, label %46
    i64 -1, label %46
  ]

13:                                               ; preds = %10
  %14 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9
  %15 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %14, i64 0, i32 0, i32 0
  %16 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %15, align 8
  %17 = icmp eq %"class.blink::PersistentNode"* %16, null
  br i1 %17, label %18, label %21, !prof !6

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %14, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %19) #9
  %20 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %15, align 8
  br label %21

21:                                               ; preds = %18, %13
  %22 = phi %"class.blink::PersistentNode"* [ %20, %18 ], [ %16, %13 ]
  %23 = bitcast %"class.blink::PersistentNode"* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::CrossThreadPersistentRegion"* %14 to i64*
  store i64 %24, i64* %25, align 8
  %26 = bitcast %"class.blink::PersistentNode"* %22 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %0, %"class.blink::PersistentBase"** %26, align 8
  %27 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %22, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_8DatabaseELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %27, align 8
  %28 = ptrtoint %"class.blink::PersistentNode"* %22 to i64
  store atomic i64 %28, i64* %7 release, align 8
  br label %46

29:                                               ; preds = %2, %2
  %30 = getelementptr inbounds %"class.blink::PersistentBase", %"class.blink::PersistentBase"* %0, i64 0, i32 1
  %31 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %30 to i64*
  %32 = load atomic i64, i64* %31 acquire, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %46, label %34

34:                                               ; preds = %29
  %35 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9
  %36 = load atomic i64, i64* %31 monotonic, align 8
  %37 = inttoptr i64 %36 to %"class.blink::PersistentNode"*
  %38 = icmp eq i64 %36, 0
  br i1 %38, label %45, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %35, i64 0, i32 0, i32 0
  %41 = bitcast %"class.blink::CrossThreadPersistentRegion"* %35 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = inttoptr i64 %36 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %37, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %44, align 8
  store %"class.blink::PersistentNode"* %37, %"class.blink::PersistentNode"** %40, align 8
  br label %45

45:                                               ; preds = %39, %34
  store atomic i64 0, i64* %31 release, align 8
  br label %46

46:                                               ; preds = %5, %45, %29, %21, %10, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_8DatabaseELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::Database"**
  %5 = load %"class.blink::Database"*, %"class.blink::Database"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #9
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #9
  %7 = icmp eq %"class.blink::Database"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::Database"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8DatabaseEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #9
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8DatabaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Database"*
  tail call void @_ZNK5blink8Database5TraceEPNS_7VisitorE(%"class.blink::Database"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

declare void @_ZNK5blink8Database5TraceEPNS_7VisitorE(%"class.blink::Database"*, %"class.blink::Visitor"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_8DatabaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE12DeleteBucketERKS4_(%"class.blink::CrossThreadPersistent"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %0, i64 0, i32 0, i32 1
  %3 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %2 to i64*
  %4 = load atomic i64, i64* %3 acquire, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %20, label %6

6:                                                ; preds = %1
  %7 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9
  %8 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %7, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %8) #9
  %9 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9
  %10 = load atomic i64, i64* %3 monotonic, align 8
  %11 = inttoptr i64 %10 to %"class.blink::PersistentNode"*
  %12 = icmp eq i64 %10, 0
  br i1 %12, label %19, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %9, i64 0, i32 0, i32 0
  %15 = bitcast %"class.blink::CrossThreadPersistentRegion"* %9 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = inttoptr i64 %10 to i64*
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %11, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %18, align 8
  store %"class.blink::PersistentNode"* %11, %"class.blink::PersistentNode"** %14, align 8
  br label %19

19:                                               ; preds = %13, %6
  store atomic i64 0, i64* %3 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %8) #9
  br label %20

20:                                               ; preds = %1, %19
  %21 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9
  %22 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %21, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %22) #9
  %23 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %0, i64 0, i32 0, i32 0
  store %"class.blink::Database"* inttoptr (i64 -1 to %"class.blink::Database"*), %"class.blink::Database"** %23, align 8
  %24 = load atomic i64, i64* %3 acquire, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %38, label %26

26:                                               ; preds = %20
  %27 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9
  %28 = load atomic i64, i64* %3 monotonic, align 8
  %29 = inttoptr i64 %28 to %"class.blink::PersistentNode"*
  %30 = icmp eq i64 %28, 0
  br i1 %30, label %37, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %27, i64 0, i32 0, i32 0
  %33 = bitcast %"class.blink::CrossThreadPersistentRegion"* %27 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = inttoptr i64 %28 to i64*
  store i64 %34, i64* %35, align 8
  %36 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %29, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %36, align 8
  store %"class.blink::PersistentNode"* %29, %"class.blink::PersistentNode"** %32, align 8
  br label %37

37:                                               ; preds = %31, %26
  store atomic i64 0, i64* %3 release, align 8
  br label %38

38:                                               ; preds = %20, %37
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %22) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"* } @_ZNK3WTF9HashTableIN5blink21CrossThreadPersistentINS1_8DatabaseEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE4findEPS3_(%"class.WTF::HashTable"*, %"class.blink::Database"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::Database"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"** %4, align 8
  %6 = icmp eq %"class.blink::CrossThreadPersistent"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %68, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %5, i64 %32
  %34 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %33, i64 0, i32 0, i32 0
  %35 = load %"class.blink::Database"*, %"class.blink::Database"** %34, align 8
  %36 = icmp eq %"class.blink::Database"* %35, %1
  br i1 %36, label %65, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %56, %37
  %52 = phi %"class.blink::Database"* [ %35, %37 ], [ %63, %56 ]
  %53 = phi i64 [ %32, %37 ], [ %60, %56 ]
  %54 = phi i64 [ 0, %37 ], [ %58, %56 ]
  %55 = icmp eq %"class.blink::Database"* %52, null
  br i1 %55, label %68, label %56

56:                                               ; preds = %51
  %57 = icmp eq i64 %54, 0
  %58 = select i1 %57, i64 %50, i64 %54
  %59 = add i64 %58, %53
  %60 = and i64 %59, %11
  %61 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %5, i64 %60
  %62 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %61, i64 0, i32 0, i32 0
  %63 = load %"class.blink::Database"*, %"class.blink::Database"** %62, align 8
  %64 = icmp eq %"class.blink::Database"* %63, %1
  br i1 %64, label %65, label %51

65:                                               ; preds = %56, %9
  %66 = phi %"class.blink::CrossThreadPersistent"* [ %33, %9 ], [ %61, %56 ]
  %67 = icmp eq %"class.blink::CrossThreadPersistent"* %66, null
  br i1 %67, label %68, label %71

68:                                               ; preds = %51, %65, %2
  %69 = zext i32 %8 to i64
  %70 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %5, i64 %69
  br label %74

71:                                               ; preds = %65
  %72 = zext i32 %8 to i64
  %73 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %5, i64 %72
  br label %74

74:                                               ; preds = %68, %71
  %75 = phi %"class.blink::CrossThreadPersistent"* [ %66, %71 ], [ %70, %68 ]
  %76 = phi %"class.blink::CrossThreadPersistent"* [ %73, %71 ], [ %70, %68 ]
  %77 = insertvalue { %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"* } undef, %"class.blink::CrossThreadPersistent"* %75, 0
  %78 = insertvalue { %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"* } %77, %"class.blink::CrossThreadPersistent"* %76, 1
  ret { %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"* } %78
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN5blink33WrapCrossThreadPersistentInternalINS_14DatabaseThreadEEENS_21CrossThreadPersistentIT_EEPS3_: argument 0"}
!5 = distinct !{!5, !"_ZN5blink33WrapCrossThreadPersistentInternalINS_14DatabaseThreadEEENS_21CrossThreadPersistentIT_EEPS3_"}
!6 = !{!"branch_weights", i32 1, i32 2000}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE: argument 0"}
!9 = distinct !{!9, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN3WTF28CrossThreadCopierPassThroughIN5blink21CrossThreadPersistentINS1_14DatabaseThreadEEEE4CopyERKS4_: argument 0"}
!12 = distinct !{!12, !"_ZN3WTF28CrossThreadCopierPassThroughIN5blink21CrossThreadPersistentINS1_14DatabaseThreadEEEE4CopyERKS4_"}
!13 = !{!14, !16}
!14 = distinct !{!14, !15, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink14DatabaseThreadEFvvEJNS3_21CrossThreadPersistentIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!15 = distinct !{!15, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink14DatabaseThreadEFvvEJNS3_21CrossThreadPersistentIS4_EEEEEDcOT0_DpOT1_"}
!16 = distinct !{!16, !17, !"_ZN4base8BindOnceIMN5blink14DatabaseThreadEFvvEJNS1_21CrossThreadPersistentIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!17 = distinct !{!17, !"_ZN4base8BindOnceIMN5blink14DatabaseThreadEFvvEJNS1_21CrossThreadPersistentIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE: argument 0"}
!20 = distinct !{!20, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZN5blink33WrapCrossThreadPersistentInternalINS_14DatabaseThreadEEENS_21CrossThreadPersistentIT_EEPS3_: argument 0"}
!23 = distinct !{!23, !"_ZN5blink33WrapCrossThreadPersistentInternalINS_14DatabaseThreadEEENS_21CrossThreadPersistentIT_EEPS3_"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE: argument 0"}
!26 = distinct !{!26, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZN5blink33WrapCrossThreadPersistentInternalINS_14DatabaseThreadEEENS_21CrossThreadPersistentIT_EEPS3_: argument 0"}
!29 = distinct !{!29, !"_ZN5blink33WrapCrossThreadPersistentInternalINS_14DatabaseThreadEEENS_21CrossThreadPersistentIT_EEPS3_"}
!30 = !{!31, !33, !35}
!31 = distinct !{!31, !32, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink14DatabaseThreadEFvvEJNS3_21CrossThreadPersistentIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!32 = distinct !{!32, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink14DatabaseThreadEFvvEJNS3_21CrossThreadPersistentIS4_EEEEEDcOT0_DpOT1_"}
!33 = distinct !{!33, !34, !"_ZN4base8BindOnceIMN5blink14DatabaseThreadEFvvEJNS1_21CrossThreadPersistentIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!34 = distinct !{!34, !"_ZN4base8BindOnceIMN5blink14DatabaseThreadEFvvEJNS1_21CrossThreadPersistentIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!35 = distinct !{!35, !36, !"_ZN3WTF4BindIMN5blink14DatabaseThreadEFvvEJNS1_21CrossThreadPersistentIS2_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!36 = distinct !{!36, !"_ZN3WTF4BindIMN5blink14DatabaseThreadEFvvEJNS1_21CrossThreadPersistentIS2_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!37 = !{i8 0, i8 2}
!38 = !{!39, !41, !43}
!39 = distinct !{!39, !40, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink12DatabaseTaskEFvvEJNSt3__110unique_ptrIS4_NS7_14default_deleteIS4_EEEEEEEDcOT0_DpOT1_: argument 0"}
!40 = distinct !{!40, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink12DatabaseTaskEFvvEJNSt3__110unique_ptrIS4_NS7_14default_deleteIS4_EEEEEEEDcOT0_DpOT1_"}
!41 = distinct !{!41, !42, !"_ZN4base8BindOnceIMN5blink12DatabaseTaskEFvvEJNSt3__110unique_ptrIS2_NS5_14default_deleteIS2_EEEEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!42 = distinct !{!42, !"_ZN4base8BindOnceIMN5blink12DatabaseTaskEFvvEJNSt3__110unique_ptrIS2_NS5_14default_deleteIS2_EEEEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
!43 = distinct !{!43, !44, !"_ZN3WTF19CrossThreadBindOnceIMN5blink12DatabaseTaskEFvvEJNSt3__110unique_ptrIS2_NS5_14default_deleteIS2_EEEEEEEDaOT_DpOT0_: argument 0"}
!44 = distinct !{!44, !"_ZN3WTF19CrossThreadBindOnceIMN5blink12DatabaseTaskEFvvEJNSt3__110unique_ptrIS2_NS5_14default_deleteIS2_EEEEEEEDaOT_DpOT0_"}
!45 = !{!43}
!46 = !{!47, !43}
!47 = distinct !{!47, !48, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE: argument 0"}
!48 = distinct !{!48, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE"}
!49 = !{!50}
!50 = distinct !{!50, !51, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE: argument 0"}
!51 = distinct !{!51, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE"}
