; ModuleID = '../../components/viz/common/transition_utils.cc'
source_filename = "../../components/viz/common/transition_utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.viz::CompositorRenderPass"* }
%"class.viz::CompositorRenderPass" = type <{ %"class.viz::RenderPassInternal", %"class.util::IdType", %"class.viz::SubtreeCaptureId", %"class.gfx::Size", [4 x i8] }>
%"class.viz::RenderPassInternal" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Transform", %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.14", i8, i8, i8, i8, %"class.std::__1::vector.19", %"class.viz::QuadList", %"class.cc::ListContainer.31" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.0" }
%"class.std::__1::vector.0" = type { %"class.std::__1::__vector_base.1" }
%"class.std::__1::__vector_base.1" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.9" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp, [20 x float], i32, [4 x i8], %"class.std::__1::vector.4", i32, [4 x i8] }>
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.3, i32, %"class.absl::optional", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.3 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::vector.4" = type { %"class.std::__1::__vector_base.5" }
%"class.std::__1::__vector_base.5" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.cc::FilterOperation"* }
%"class.absl::optional.14" = type { %"class.absl::optional_internal::optional_data.15" }
%"class.absl::optional_internal::optional_data.15" = type { %"class.absl::optional_internal::optional_data_base.16" }
%"class.absl::optional_internal::optional_data_base.16" = type { %"class.absl::optional_internal::optional_data_dtor_base.17" }
%"class.absl::optional_internal::optional_data_dtor_base.17" = type { i8, %union.anon.18 }
%union.anon.18 = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.std::__1::vector.19" = type { %"class.std::__1::__vector_base.20" }
%"class.std::__1::__vector_base.20" = type { %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"*, %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::unique_ptr.21" = type opaque
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.std::__1::unique_ptr.21"* }
%"class.viz::QuadList" = type { %"class.cc::ListContainer" }
%"class.cc::ListContainer" = type { %"class.cc::ListContainerHelper" }
%"class.cc::ListContainerHelper" = type { %"class.std::__1::unique_ptr.27" }
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.cc::ListContainerHelper::CharAllocator"* }
%"class.cc::ListContainerHelper::CharAllocator" = type opaque
%"class.cc::ListContainer.31" = type { %"class.cc::ListContainerHelper" }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i64 }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.std::__1::unique_ptr"* }
%"class.cc::ListContainerHelper::Iterator" = type { %"struct.cc::ListContainerHelper::PositionInCharAllocator", i64 }
%"struct.cc::ListContainerHelper::PositionInCharAllocator" = type { %"class.cc::ListContainerHelper::CharAllocator"*, i64, i8* }
%"class.cc::ListContainer<viz::DrawQuad>::Iterator" = type { %"class.cc::ListContainerHelper::Iterator" }
%"class.viz::DrawQuad" = type <{ i32 (...)**, i32, %"class.gfx::Rect", %"class.gfx::Rect", i8, [3 x i8], %"class.viz::SharedQuadState"*, %"struct.viz::DrawQuad::Resources", [4 x i8] }>
%"class.viz::SharedQuadState" = type <{ %"class.gfx::Transform", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::MaskFilterInfo", %"class.absl::optional.40", i8, [3 x i8], float, i32, i32, i8, [3 x i8], %"class.absl::optional.45", float, i8, [3 x i8] }>
%"class.gfx::MaskFilterInfo" = type { %"class.gfx::RRectF" }
%"class.absl::optional.40" = type { %"class.absl::optional_internal::optional_data.41" }
%"class.absl::optional_internal::optional_data.41" = type { %"class.absl::optional_internal::optional_data_base.42" }
%"class.absl::optional_internal::optional_data_base.42" = type { %"class.absl::optional_internal::optional_data_dtor_base.43" }
%"class.absl::optional_internal::optional_data_dtor_base.43" = type { i8, %union.anon.44 }
%union.anon.44 = type { %"class.gfx::Rect" }
%"class.absl::optional.45" = type { %"class.absl::optional_internal::optional_data.46" }
%"class.absl::optional_internal::optional_data.46" = type { %"class.absl::optional_internal::optional_data_base.47" }
%"class.absl::optional_internal::optional_data_base.47" = type { %"class.absl::optional_internal::optional_data_dtor_base.48" }
%"class.absl::optional_internal::optional_data_dtor_base.48" = type { i8, %union.anon.49 }
%union.anon.49 = type { i64 }
%"struct.viz::DrawQuad::Resources" = type { i32, [4 x %"class.util::IdType.50"] }
%"class.util::IdType.50" = type { %"class.base::StrongAlias.51" }
%"class.base::StrongAlias.51" = type { i32 }
%"class.viz::CompositorRenderPassDrawQuad" = type { %"class.viz::RenderPassDrawQuadInternal.base", %"class.util::IdType" }
%"class.viz::RenderPassDrawQuadInternal.base" = type <{ %"class.viz::DrawQuad.base", %"class.gfx::RectF", %"class.gfx::Size", %"class.gfx::Vector2dF", %"class.gfx::PointF", %"class.gfx::RectF", float, i8, i8 }>
%"class.viz::DrawQuad.base" = type <{ i32 (...)**, i32, %"class.gfx::Rect", %"class.gfx::Rect", i8, [3 x i8], %"class.viz::SharedQuadState"*, %"struct.viz::DrawQuad::Resources" }>
%"class.gfx::Vector2dF" = type { float, float }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZN3viz15TransitionUtils25ComputeAccumulatedOpacityERKNSt3__16vectorINS1_10unique_ptrINS_20CompositorRenderPassENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEEN4util6IdTypeIS4_mLm0ELm1EEE(%"class.std::__1::vector"* nocapture readonly dereferenceable(24), i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.cc::ListContainerHelper::Iterator", align 8
  %4 = alloca %"class.cc::ListContainerHelper::Iterator", align 8
  %5 = alloca %"struct.cc::ListContainerHelper::PositionInCharAllocator", align 8
  %6 = alloca %"class.cc::ListContainer<viz::DrawQuad>::Iterator", align 8
  %7 = alloca %"class.cc::ListContainer<viz::DrawQuad>::Iterator", align 8
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %9 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %11 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %10, align 8
  %12 = icmp eq %"class.std::__1::unique_ptr"* %9, %11
  br i1 %12, label %33, label %13

13:                                               ; preds = %2
  %14 = bitcast %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %6 to i8*
  %15 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %6, i64 0, i32 0, i32 0, i32 2
  %16 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %6, i64 0, i32 0, i32 1
  %17 = bitcast %"class.cc::ListContainerHelper::Iterator"* %3 to i8*
  %18 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %6, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.cc::ListContainerHelper::Iterator", %"class.cc::ListContainerHelper::Iterator"* %3, i64 0, i32 0
  %20 = getelementptr inbounds %"class.cc::ListContainerHelper::Iterator", %"class.cc::ListContainerHelper::Iterator"* %3, i64 0, i32 1
  %21 = bitcast %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %7 to i8*
  %22 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %7, i64 0, i32 0, i32 1
  %23 = bitcast %"class.cc::ListContainerHelper::Iterator"* %4 to i8*
  %24 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %7, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.cc::ListContainerHelper::Iterator", %"class.cc::ListContainerHelper::Iterator"* %4, i64 0, i32 0
  %26 = getelementptr inbounds %"class.cc::ListContainerHelper::Iterator", %"class.cc::ListContainerHelper::Iterator"* %4, i64 0, i32 1
  %27 = bitcast i8** %15 to %"class.viz::DrawQuad"**
  %28 = bitcast %"struct.cc::ListContainerHelper::PositionInCharAllocator"* %5 to i8*
  %29 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %7, i64 0, i32 0
  %30 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %6, i64 0, i32 0
  %31 = bitcast %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %6 to i8*
  %32 = bitcast %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %7 to i8*
  br label %35

33:                                               ; preds = %80, %2
  %34 = phi float [ 1.000000e+00, %2 ], [ %83, %80 ]
  ret float %34

35:                                               ; preds = %13, %80
  %36 = phi float [ 1.000000e+00, %13 ], [ %83, %80 ]
  %37 = phi i8 [ 0, %13 ], [ %82, %80 ]
  %38 = phi %"class.std::__1::unique_ptr"* [ %9, %13 ], [ %84, %80 ]
  %39 = phi i64 [ %1, %13 ], [ %81, %80 ]
  %40 = and i8 %37, 1
  %41 = icmp eq i8 %40, 0
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %38, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.viz::CompositorRenderPass"*, %"class.viz::CompositorRenderPass"** %42, align 8
  br i1 %41, label %44, label %49

44:                                               ; preds = %35
  %45 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %43, i64 0, i32 1, i32 0, i32 0
  %46 = load i64, i64* %45, align 8
  %47 = icmp eq i64 %46, %39
  %48 = zext i1 %47 to i8
  br label %80

49:                                               ; preds = %35
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #4, !noalias !2
  %50 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %43, i64 0, i32 0, i32 11, i32 0, i32 0
  call void @_ZN2cc19ListContainerHelper5beginEv(%"class.cc::ListContainerHelper::Iterator"* nonnull sret %3, %"class.cc::ListContainerHelper"* %50) #4, !noalias !2
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocatorC2ERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %18, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %19) #4
  %51 = load i64, i64* %20, align 8, !noalias !2
  store i64 %51, i64* %16, align 8, !alias.scope !2
  call void @_ZN2cc19ListContainerHelper8IteratorD1Ev(%"class.cc::ListContainerHelper::Iterator"* nonnull %3) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #4, !noalias !2
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #4, !noalias !5
  call void @_ZN2cc19ListContainerHelper3endEv(%"class.cc::ListContainerHelper::Iterator"* nonnull sret %4, %"class.cc::ListContainerHelper"* %50) #4, !noalias !5
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocatorC2ERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %24, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %25) #4
  %52 = load i64, i64* %26, align 8, !noalias !5
  store i64 %52, i64* %22, align 8, !alias.scope !5
  call void @_ZN2cc19ListContainerHelper8IteratorD1Ev(%"class.cc::ListContainerHelper::Iterator"* nonnull %4) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #4, !noalias !5
  %53 = call zeroext i1 @_ZNK2cc19ListContainerHelper23PositionInCharAllocatorneERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %18, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %24) #4
  br i1 %53, label %54, label %77

54:                                               ; preds = %49, %73
  %55 = load %"class.viz::DrawQuad"*, %"class.viz::DrawQuad"** %27, align 8
  %56 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %55, i64 0, i32 1
  %57 = load i32, i32* %56, align 8
  %58 = icmp eq i32 %57, 3
  br i1 %58, label %59, label %73

59:                                               ; preds = %54
  %60 = call %"class.viz::CompositorRenderPassDrawQuad"* @_ZN3viz28CompositorRenderPassDrawQuad12MaterialCastEPKNS_8DrawQuadE(%"class.viz::DrawQuad"* %55) #4
  %61 = getelementptr inbounds %"class.viz::CompositorRenderPassDrawQuad", %"class.viz::CompositorRenderPassDrawQuad"* %60, i64 0, i32 1, i32 0, i32 0
  %62 = load i64, i64* %61, align 8
  %63 = icmp eq i64 %62, %39
  br i1 %63, label %64, label %73

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.viz::CompositorRenderPassDrawQuad", %"class.viz::CompositorRenderPassDrawQuad"* %60, i64 0, i32 0, i32 0, i32 6
  %66 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %65, align 8
  %67 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %66, i64 0, i32 7
  %68 = load float, float* %67, align 8
  %69 = fmul float %36, %68
  %70 = load %"class.viz::CompositorRenderPass"*, %"class.viz::CompositorRenderPass"** %42, align 8
  %71 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %70, i64 0, i32 1, i32 0, i32 0
  %72 = load i64, i64* %71, align 8
  br label %77

73:                                               ; preds = %59, %54
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #4
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocator9IncrementEv(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull sret %5, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %18) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #4
  %74 = load i64, i64* %16, align 8
  %75 = add i64 %74, 1
  store i64 %75, i64* %16, align 8
  %76 = call zeroext i1 @_ZNK2cc19ListContainerHelper23PositionInCharAllocatorneERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %18, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %24) #4
  br i1 %76, label %54, label %77

77:                                               ; preds = %73, %49, %64
  %78 = phi i64 [ %72, %64 ], [ %39, %49 ], [ %39, %73 ]
  %79 = phi float [ %69, %64 ], [ %36, %49 ], [ %36, %73 ]
  call void @_ZN2cc19ListContainerHelper8IteratorD2Ev(%"class.cc::ListContainerHelper::Iterator"* nonnull %29) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #4
  call void @_ZN2cc19ListContainerHelper8IteratorD2Ev(%"class.cc::ListContainerHelper::Iterator"* nonnull %30) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #4
  br label %80

80:                                               ; preds = %77, %44
  %81 = phi i64 [ %39, %44 ], [ %78, %77 ]
  %82 = phi i8 [ %48, %44 ], [ %37, %77 ]
  %83 = phi float [ %36, %44 ], [ %79, %77 ]
  %84 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %38, i64 1
  %85 = icmp eq %"class.std::__1::unique_ptr"* %84, %11
  br i1 %85, label %33, label %35
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZNK2cc19ListContainerHelper23PositionInCharAllocatorneERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"*, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* dereferenceable(24)) local_unnamed_addr #2

declare %"class.viz::CompositorRenderPassDrawQuad"* @_ZN3viz28CompositorRenderPassDrawQuad12MaterialCastEPKNS_8DrawQuadE(%"class.viz::DrawQuad"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare void @_ZN2cc19ListContainerHelper8IteratorD2Ev(%"class.cc::ListContainerHelper::Iterator"*) unnamed_addr #3

declare void @_ZN2cc19ListContainerHelper5beginEv(%"class.cc::ListContainerHelper::Iterator"* sret, %"class.cc::ListContainerHelper"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2cc19ListContainerHelper8IteratorD1Ev(%"class.cc::ListContainerHelper::Iterator"*) unnamed_addr #3

declare void @_ZN2cc19ListContainerHelper23PositionInCharAllocatorC2ERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"*, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* dereferenceable(24)) unnamed_addr #2

declare void @_ZN2cc19ListContainerHelper3endEv(%"class.cc::ListContainerHelper::Iterator"* sret, %"class.cc::ListContainerHelper"*) local_unnamed_addr #2

declare void @_ZN2cc19ListContainerHelper23PositionInCharAllocator9IncrementEv(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* sret, %"struct.cc::ListContainerHelper::PositionInCharAllocator"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN2cc13ListContainerIN3viz8DrawQuadEE5beginEv: argument 0"}
!4 = distinct !{!4, !"_ZN2cc13ListContainerIN3viz8DrawQuadEE5beginEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN2cc13ListContainerIN3viz8DrawQuadEE3endEv: argument 0"}
!7 = distinct !{!7, !"_ZN2cc13ListContainerIN3viz8DrawQuadEE3endEv"}
