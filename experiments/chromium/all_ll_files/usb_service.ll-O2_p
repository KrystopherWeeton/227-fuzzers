; ModuleID = '../../services/device/usb/usb_service.cc'
source_filename = "../../services/device/usb/usb_service.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::TaskTraits" = type { %"struct.base::TaskTraitsExtensionStorage", i8, i8, i8, i8, i8, i8 }
%"struct.base::TaskTraitsExtensionStorage" = type { i8, %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [8 x i8] }
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.device::UsbService::Observer" = type { i32 (...)** }
%"class.device::UsbService" = type { i32 (...)**, %"class.std::__1::unordered_map", %"class.std::__1::unordered_set", %"class.base::ObserverList.141" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.102", %"class.std::__1::__compressed_pair.110", %"class.std::__1::__compressed_pair.115", %"class.std::__1::__compressed_pair.117", [4 x i8] }>
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104", %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { i64 }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { float }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.120" }
%"class.std::__1::__hash_table.120" = type <{ %"class.std::__1::unique_ptr.121", %"class.std::__1::__compressed_pair.131", %"class.std::__1::__compressed_pair.136", %"class.std::__1::__compressed_pair.138", [4 x i8] }>
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123", %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"struct.std::__1::__hash_node_base.124"** }
%"struct.std::__1::__hash_node_base.124" = type { %"struct.std::__1::__hash_node_base.124"* }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.std::__1::__bucket_list_deallocator.126" }
%"class.std::__1::__bucket_list_deallocator.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"struct.std::__1::__hash_node_base.124" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"class.base::ObserverList.141" = type <{ %"class.std::__1::vector.92", %"class.base::LinkedList.142", i64, i32, [4 x i8] }>
%"class.std::__1::vector.92" = type { %"class.std::__1::__vector_base.93" }
%"class.std::__1::__vector_base.93" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.94" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList.142" = type { %"class.base::LinkNode.143" }
%"class.base::LinkNode.143" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.device::UsbDevice" = type { i32 (...)**, %"class.base::RefCountedThreadSafe", %"class.mojo::StructPtr", %"class.std::__1::list", %"class.base::ObserverList" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.device::mojom::UsbDeviceInfo"* }
%"class.device::mojom::UsbDeviceInfo" = type { %"class.std::__1::basic_string", i8, i8, i8, i8, i8, i8, i32, i32, i16, i16, i8, i8, i8, %"class.absl::optional", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.14", i8, %"class.std::__1::vector" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.4 }
%union.anon.4 = type { %"class.std::__1::basic_string.5" }
%"class.std::__1::basic_string.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.8 }
%union.anon.8 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.absl::optional.14" = type { %"class.absl::optional_internal::optional_data.15" }
%"class.absl::optional_internal::optional_data.15" = type { %"class.absl::optional_internal::optional_data_base.16" }
%"class.absl::optional_internal::optional_data_base.16" = type { %"class.absl::optional_internal::optional_data_dtor_base.17" }
%"class.absl::optional_internal::optional_data_dtor_base.17" = type { i8, %union.anon.18 }
%union.anon.18 = type { %class.GURL }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.19" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %class.GURL* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::StructPtr.23"*, %"class.mojo::StructPtr.23"*, %"class.std::__1::__compressed_pair.79" }
%"class.mojo::StructPtr.23" = type { %"class.std::__1::unique_ptr.24" }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.device::mojom::UsbConfigurationInfo"* }
%"class.device::mojom::UsbConfigurationInfo" = type { i8, %"class.absl::optional", i8, i8, i8, %"class.std::__1::vector.27", %"class.std::__1::vector.45" }
%"class.std::__1::vector.27" = type { %"class.std::__1::__vector_base.28" }
%"class.std::__1::__vector_base.28" = type { %"class.mojo::StructPtr.29"*, %"class.mojo::StructPtr.29"*, %"class.std::__1::__compressed_pair.71" }
%"class.mojo::StructPtr.29" = type { %"class.std::__1::unique_ptr.30" }
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.device::mojom::UsbInterfaceInfo"* }
%"class.device::mojom::UsbInterfaceInfo" = type { i8, i8, %"class.std::__1::vector.33" }
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { %"class.mojo::StructPtr.35"*, %"class.mojo::StructPtr.35"*, %"class.std::__1::__compressed_pair.63" }
%"class.mojo::StructPtr.35" = type { %"class.std::__1::unique_ptr.36" }
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.device::mojom::UsbAlternateInterfaceInfo"* }
%"class.device::mojom::UsbAlternateInterfaceInfo" = type { i8, i8, i8, i8, %"class.absl::optional", %"class.std::__1::vector.39", %"class.std::__1::vector.45" }
%"class.std::__1::vector.39" = type { %"class.std::__1::__vector_base.40" }
%"class.std::__1::__vector_base.40" = type { %"class.mojo::StructPtr.41"*, %"class.mojo::StructPtr.41"*, %"class.std::__1::__compressed_pair.55" }
%"class.mojo::StructPtr.41" = type { %"class.std::__1::unique_ptr.42" }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.device::mojom::UsbEndpointInfo"* }
%"class.device::mojom::UsbEndpointInfo" = type { i8, i32, i32, i32, i32, i32, i8, %"class.std::__1::vector.45" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.mojo::StructPtr.41"* }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.mojo::StructPtr.35"* }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.mojo::StructPtr.29"* }
%"class.std::__1::vector.45" = type { %"class.std::__1::__vector_base.46" }
%"class.std::__1::__vector_base.46" = type { i8*, i8*, %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { i8* }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.mojo::StructPtr.23"* }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.87" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.92", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.device::UsbServiceLinux" = type { %"class.device::UsbService", i8, i32, %"class.std::__1::list.151", %class.scoped_refptr.158, %"class.std::__1::unique_ptr.160", %"class.std::__1::unordered_map.164", %"class.base::WeakPtrFactory" }
%"class.std::__1::list.151" = type { %"class.std::__1::__list_imp.152" }
%"class.std::__1::__list_imp.152" = type { %"struct.std::__1::__list_node_base.153", %"class.std::__1::__compressed_pair.154" }
%"struct.std::__1::__list_node_base.153" = type { %"struct.std::__1::__list_node_base.153"*, %"struct.std::__1::__list_node_base.153"* }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%class.scoped_refptr.158 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.159" }>
%"class.base::RefCountedThreadSafe.159" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162", %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.device::UsbServiceLinux::BlockingTaskRunnerHelper"* }
%"class.device::UsbServiceLinux::BlockingTaskRunnerHelper" = type opaque
%"struct.std::__1::__compressed_pair_elem.163" = type { %"struct.base::OnTaskRunnerDeleter" }
%"struct.base::OnTaskRunnerDeleter" = type { %class.scoped_refptr.158 }
%"class.std::__1::unordered_map.164" = type { %"class.std::__1::__hash_table.165" }
%"class.std::__1::__hash_table.165" = type <{ %"class.std::__1::unique_ptr.166", %"class.std::__1::__compressed_pair.176", %"class.std::__1::__compressed_pair.181", %"class.std::__1::__compressed_pair.184", [4 x i8] }>
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168", %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"struct.std::__1::__hash_node_base.169"** }
%"struct.std::__1::__hash_node_base.169" = type { %"struct.std::__1::__hash_node_base.169"* }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.std::__1::__bucket_list_deallocator.171" }
%"class.std::__1::__bucket_list_deallocator.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"struct.std::__1::__hash_node_base.169" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.188 }
%class.scoped_refptr.188 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.189", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.189" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.190" }
%"struct.std::__1::atomic.190" = type { %"struct.std::__1::__atomic_base.191" }
%"struct.std::__1::__atomic_base.191" = type { %"struct.std::__1::__atomic_base.192" }
%"struct.std::__1::__atomic_base.192" = type { %"struct.std::__1::__cxx_atomic_impl.193" }
%"struct.std::__1::__cxx_atomic_impl.193" = type { %"struct.std::__1::__cxx_atomic_base_impl.194" }
%"struct.std::__1::__cxx_atomic_base_impl.194" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.198 }
%class.scoped_refptr.198 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.199", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.199" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector.200" = type { %"class.std::__1::__vector_base.201" }
%"class.std::__1::__vector_base.201" = type { %class.scoped_refptr*, %class.scoped_refptr*, %"class.std::__1::__compressed_pair.202" }
%class.scoped_refptr = type { %"class.device::UsbDevice"* }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %class.scoped_refptr* }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::OnceCallback.207" = type { %"class.base::internal::CallbackBase" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.159", [4 x i8] }>
%"struct.base::internal::BindState" = type { %"class.base::internal::BindStateBase", %"class.base::OnceCallback", %"class.std::__1::tuple" }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.std::__1::vector.200" }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"class.std::__1::basic_string", %class.scoped_refptr }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::tuple.228" = type { %"struct.std::__1::__tuple_impl.229" }
%"struct.std::__1::__tuple_impl.229" = type { %"class.std::__1::__tuple_leaf.230" }
%"class.std::__1::__tuple_leaf.230" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::tuple.231" = type { i8 }
%"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter" = type { %"class.base::internal::WeakLinkNode", i64, i64 }
%"class.base::internal::WeakLinkNode" = type { %"class.base::LinkNode.143", %"class.base::ObserverList.141"* }
%"class.std::__1::unique_ptr.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234", %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"struct.std::__1::__hash_node"* }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.std::__1::__hash_node_destructor" }
%"class.std::__1::__hash_node_destructor" = type <{ %"class.std::__1::allocator.113"*, i8, [7 x i8] }>
%"class.std::__1::allocator.113" = type { i8 }
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242", %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"struct.std::__1::__hash_node.209"* }
%"struct.std::__1::__hash_node.209" = type { %"struct.std::__1::__hash_node_base.124", i64, %"class.std::__1::basic_string" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"class.std::__1::__hash_node_destructor.244" }
%"class.std::__1::__hash_node_destructor.244" = type <{ %"class.std::__1::allocator.134"*, i8, [7 x i8] }>
%"class.std::__1::allocator.134" = type { i8 }
%"struct.std::__1::__murmur2_or_cityhash" = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZNSt3__16vectorI13scoped_refptrIN6device9UsbDeviceEENS_9allocatorIS4_EEE7reserveEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE13scoped_refptrIN6device9UsbDeviceEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE4findIS7_EENS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEERKT_ = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm = comdat any

$_ZNSt3__16vectorI13scoped_refptrIN6device9UsbDeviceEENS_9allocatorIS4_EEE21__push_back_slow_pathIRKS4_EEvOT_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateINS_12OnceCallbackIFvRKNSt3__16vectorI13scoped_refptrIN6device9UsbDeviceEENS4_9allocatorIS9_EEEEEEEJSC_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateINS_12OnceCallbackIFvRKNSt3__16vectorI13scoped_refptrIN6device9UsbDeviceEENS3_9allocatorIS8_EEEEEEEJSB_EEC2ISF_JRSB_EEENS3_17integral_constantIbLb1EEEPFvvEOT_DpOT0_ = comdat any

$_ZN4base8internal9BindStateINS_12OnceCallbackIFvRKNSt3__16vectorI13scoped_refptrIN6device9UsbDeviceEENS3_9allocatorIS8_EEEEEEEJSB_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS_12OnceCallbackIFvRKNSt3__16vectorI13scoped_refptrIN6device9UsbDeviceEENS4_9allocatorIS9_EEEEEEEJSC_EEEEEbPKNS0_13BindStateBaseENSI_21CancellationQueryModeE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE13scoped_refptrIN6device9UsbDeviceEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSR_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE13scoped_refptrIN6device9UsbDeviceEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE13scoped_refptrIN6device9UsbDeviceEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE4findIS6_EENS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEERKT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE13scoped_refptrIN6device9UsbDeviceEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeISC_PvEEEE = comdat any

$_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_PvEEEE = comdat any

@_ZN6device10UsbService19kBlockingTaskTraitsE = hidden constant %"class.base::TaskTraits" { %"struct.base::TaskTraitsExtensionStorage" zeroinitializer, i8 1, i8 -128, i8 0, i8 1, i8 0, i8 0 }, align 1
@_ZTVN6device10UsbServiceE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.device::UsbService"*)* @_ZN6device10UsbServiceD2Ev to i8*), i8* bitcast (void (%"class.device::UsbService"*)* @_ZN6device10UsbServiceD0Ev to i8*), i8* bitcast (void (%"class.device::UsbService"*, %"class.base::OnceCallback"*)* @_ZN6device10UsbService10GetDevicesEN4base12OnceCallbackIFvRKNSt3__16vectorI13scoped_refptrINS_9UsbDeviceEENS3_9allocatorIS7_EEEEEEE to i8*)] }, align 8
@.str = private unnamed_addr constant [11 x i8] c"GetDevices\00", align 1
@.str.1 = private unnamed_addr constant [41 x i8] c"../../services/device/usb/usb_service.cc\00", align 1
@_ZTVN6device10UsbService8ObserverE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.device::UsbService::Observer"*)* @_ZN6device10UsbService8ObserverD2Ev to i8*), i8* bitcast (void (%"class.device::UsbService::Observer"*)* @_ZN6device10UsbService8ObserverD0Ev to i8*), i8* bitcast (void (%"class.device::UsbService::Observer"*, %"class.device::UsbDevice"*)* @_ZN6device10UsbService8Observer13OnDeviceAddedE13scoped_refptrINS_9UsbDeviceEE to i8*), i8* bitcast (void (%"class.device::UsbService::Observer"*, %"class.device::UsbDevice"*)* @_ZN6device10UsbService8Observer15OnDeviceRemovedE13scoped_refptrINS_9UsbDeviceEE to i8*), i8* bitcast (void (%"class.device::UsbService::Observer"*, %"class.device::UsbDevice"*)* @_ZN6device10UsbService8Observer22OnDeviceRemovedCleanupE13scoped_refptrINS_9UsbDeviceEE to i8*), i8* bitcast (void (%"class.device::UsbService::Observer"*)* @_ZN6device10UsbService8Observer21WillDestroyUsbServiceEv to i8*)] }, align 8
@.str.3 = private unnamed_addr constant [27 x i8] c"../../base/bind_internal.h\00", align 1
@.str.4 = private unnamed_addr constant [18 x i8] c"!IsNull(functor_)\00", align 1
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1

@_ZN6device10UsbService8ObserverD1Ev = hidden unnamed_addr alias void (%"class.device::UsbService::Observer"*), void (%"class.device::UsbService::Observer"*)* @_ZN6device10UsbService8ObserverD2Ev
@_ZN6device10UsbServiceD1Ev = hidden unnamed_addr alias void (%"class.device::UsbService"*), void (%"class.device::UsbService"*)* @_ZN6device10UsbServiceD2Ev
@_ZN6device10UsbServiceC1Ev = hidden unnamed_addr alias void (%"class.device::UsbService"*), void (%"class.device::UsbService"*)* @_ZN6device10UsbServiceC2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6device10UsbService8ObserverD2Ev(%"class.device::UsbService::Observer"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device10UsbService8ObserverD0Ev(%"class.device::UsbService::Observer"*) unnamed_addr #1 align 2 {
  %2 = bitcast %"class.device::UsbService::Observer"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device10UsbService8Observer13OnDeviceAddedE13scoped_refptrINS_9UsbDeviceEE(%"class.device::UsbService::Observer"* nocapture readnone, %"class.device::UsbDevice"*) unnamed_addr #1 align 2 {
  %3 = icmp eq %"class.device::UsbDevice"* %1, null
  br i1 %3, label %16, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.device::UsbDevice", %"class.device::UsbDevice"* %1, i64 0, i32 1
  %6 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw sub i32* %6, i32 1 acq_rel
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %16

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %5, i64 -2
  %11 = bitcast %"class.base::RefCountedThreadSafe"* %10 to %"class.device::UsbDevice"*
  %12 = bitcast %"class.base::RefCountedThreadSafe"* %10 to void (%"class.device::UsbDevice"*)***
  %13 = load void (%"class.device::UsbDevice"*)**, void (%"class.device::UsbDevice"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.device::UsbDevice"*)*, void (%"class.device::UsbDevice"*)** %13, i64 5
  %15 = load void (%"class.device::UsbDevice"*)*, void (%"class.device::UsbDevice"*)** %14, align 8
  tail call void %15(%"class.device::UsbDevice"* nonnull %11) #13
  br label %16

16:                                               ; preds = %2, %4, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device10UsbService8Observer15OnDeviceRemovedE13scoped_refptrINS_9UsbDeviceEE(%"class.device::UsbService::Observer"* nocapture readnone, %"class.device::UsbDevice"*) unnamed_addr #1 align 2 {
  %3 = icmp eq %"class.device::UsbDevice"* %1, null
  br i1 %3, label %16, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.device::UsbDevice", %"class.device::UsbDevice"* %1, i64 0, i32 1
  %6 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw sub i32* %6, i32 1 acq_rel
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %16

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %5, i64 -2
  %11 = bitcast %"class.base::RefCountedThreadSafe"* %10 to %"class.device::UsbDevice"*
  %12 = bitcast %"class.base::RefCountedThreadSafe"* %10 to void (%"class.device::UsbDevice"*)***
  %13 = load void (%"class.device::UsbDevice"*)**, void (%"class.device::UsbDevice"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.device::UsbDevice"*)*, void (%"class.device::UsbDevice"*)** %13, i64 5
  %15 = load void (%"class.device::UsbDevice"*)*, void (%"class.device::UsbDevice"*)** %14, align 8
  tail call void %15(%"class.device::UsbDevice"* nonnull %11) #13
  br label %16

16:                                               ; preds = %2, %4, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device10UsbService8Observer22OnDeviceRemovedCleanupE13scoped_refptrINS_9UsbDeviceEE(%"class.device::UsbService::Observer"* nocapture readnone, %"class.device::UsbDevice"*) unnamed_addr #1 align 2 {
  %3 = icmp eq %"class.device::UsbDevice"* %1, null
  br i1 %3, label %16, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.device::UsbDevice", %"class.device::UsbDevice"* %1, i64 0, i32 1
  %6 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw sub i32* %6, i32 1 acq_rel
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %16

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %5, i64 -2
  %11 = bitcast %"class.base::RefCountedThreadSafe"* %10 to %"class.device::UsbDevice"*
  %12 = bitcast %"class.base::RefCountedThreadSafe"* %10 to void (%"class.device::UsbDevice"*)***
  %13 = load void (%"class.device::UsbDevice"*)**, void (%"class.device::UsbDevice"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.device::UsbDevice"*)*, void (%"class.device::UsbDevice"*)** %13, i64 5
  %15 = load void (%"class.device::UsbDevice"*)*, void (%"class.device::UsbDevice"*)** %14, align 8
  tail call void %15(%"class.device::UsbDevice"* nonnull %11) #13
  br label %16

16:                                               ; preds = %2, %4, %9
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6device10UsbService8Observer21WillDestroyUsbServiceEv(%"class.device::UsbService::Observer"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.device::UsbService"* @_ZN6device10UsbService6CreateEv() local_unnamed_addr #1 align 2 {
  %1 = tail call i8* @_Znwm(i64 256) #12
  %2 = bitcast i8* %1 to %"class.device::UsbServiceLinux"*
  tail call void @_ZN6device15UsbServiceLinuxC1Ev(%"class.device::UsbServiceLinux"* nonnull %2) #13
  %3 = bitcast i8* %1 to %"class.device::UsbService"*
  ret %"class.device::UsbService"* %3
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN6device15UsbServiceLinuxC1Ev(%"class.device::UsbServiceLinux"*) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::SequencedTaskRunner"* @_ZN6device10UsbService24CreateBlockingTaskRunnerEv() local_unnamed_addr #1 align 2 {
  %1 = tail call %"class.base::SequencedTaskRunner"* @_ZN4base10ThreadPool25CreateSequencedTaskRunnerERKNS_10TaskTraitsE(%"class.base::TaskTraits"* nonnull dereferenceable(15) @_ZN6device10UsbService19kBlockingTaskTraitsE) #13
  ret %"class.base::SequencedTaskRunner"* %1
}

declare %"class.base::SequencedTaskRunner"* @_ZN4base10ThreadPool25CreateSequencedTaskRunnerERKNS_10TaskTraitsE(%"class.base::TaskTraits"* dereferenceable(15)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device10UsbServiceD2Ev(%"class.device::UsbService"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.device::UsbService", %"class.device::UsbService"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6device10UsbServiceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.device::UsbService", %"class.device::UsbService"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 1
  %4 = bitcast %"class.base::internal::LinkNodeBase"** %3 to %"class.base::LinkNode.143"**
  %5 = getelementptr inbounds %"class.device::UsbService", %"class.device::UsbService"* %0, i64 0, i32 3, i32 1, i32 0
  %6 = load %"class.base::LinkNode.143"*, %"class.base::LinkNode.143"** %4, align 8
  %7 = icmp eq %"class.base::LinkNode.143"* %6, %5
  br i1 %7, label %20, label %8

8:                                                ; preds = %1, %17
  %9 = phi %"class.base::LinkNode.143"* [ %18, %17 ], [ %6, %1 ]
  %10 = getelementptr inbounds %"class.base::LinkNode.143", %"class.base::LinkNode.143"* %9, i64 1
  %11 = bitcast %"class.base::LinkNode.143"* %10 to %"class.base::ObserverList.141"**
  %12 = load %"class.base::ObserverList.141"*, %"class.base::ObserverList.141"** %11, align 8
  %13 = icmp eq %"class.base::ObserverList.141"* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %8
  store %"class.base::ObserverList.141"* null, %"class.base::ObserverList.141"** %11, align 8
  %15 = getelementptr inbounds %"class.base::LinkNode.143", %"class.base::LinkNode.143"* %9, i64 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* %15) #13
  %16 = load %"class.base::LinkNode.143"*, %"class.base::LinkNode.143"** %4, align 8
  br label %17

17:                                               ; preds = %14, %8
  %18 = phi %"class.base::LinkNode.143"* [ %9, %8 ], [ %16, %14 ]
  %19 = icmp eq %"class.base::LinkNode.143"* %18, %5
  br i1 %19, label %20, label %8

20:                                               ; preds = %17, %1
  %21 = getelementptr inbounds %"class.device::UsbService", %"class.device::UsbService"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %22 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %21, align 8
  %23 = getelementptr inbounds %"class.device::UsbService", %"class.device::UsbService"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %24 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %23, align 8
  %25 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %22, %24
  br i1 %25, label %34, label %26

26:                                               ; preds = %20, %31
  %27 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %32, %31 ], [ %22, %20 ]
  %28 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %27, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %27, i64 1
  %33 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %32, %24
  br i1 %33, label %98, label %26

34:                                               ; preds = %26, %20
  %35 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %22, %20 ], [ %27, %26 ]
  %36 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %35 to i64
  %37 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %35, %24
  br i1 %37, label %98, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %35, i64 1
  %40 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %39, %24
  br i1 %40, label %93, label %41

41:                                               ; preds = %38
  %42 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %24, i64 -2, i32 0
  %43 = ptrtoint i8** %42 to i64
  %44 = sub i64 %43, %36
  %45 = lshr i64 %44, 3
  %46 = add nuw nsw i64 %45, 1
  %47 = and i64 %46, 3
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %67, label %49

49:                                               ; preds = %41, %62
  %50 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %64, %62 ], [ %39, %41 ]
  %51 = phi i64 [ %63, %62 ], [ %36, %41 ]
  %52 = phi i64 [ %65, %62 ], [ %47, %41 ]
  %53 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %50, i64 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = icmp eq i8* %54, null
  br i1 %55, label %62, label %56

56:                                               ; preds = %49
  %57 = ptrtoint i8* %54 to i64
  %58 = inttoptr i64 %51 to %"class.base::internal::UncheckedObserverAdapter"*
  %59 = inttoptr i64 %51 to i64*
  store i64 %57, i64* %59, align 8
  %60 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %58, i64 1
  %61 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %60 to i64
  br label %62

62:                                               ; preds = %56, %49
  %63 = phi i64 [ %51, %49 ], [ %61, %56 ]
  %64 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %50, i64 1
  %65 = add i64 %52, -1
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %67, label %49, !llvm.loop !2

67:                                               ; preds = %62, %41
  %68 = phi i64 [ undef, %41 ], [ %63, %62 ]
  %69 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %39, %41 ], [ %64, %62 ]
  %70 = phi i64 [ %36, %41 ], [ %63, %62 ]
  %71 = icmp ult i64 %44, 24
  br i1 %71, label %89, label %72

72:                                               ; preds = %67, %201
  %73 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %203, %201 ], [ %69, %67 ]
  %74 = phi i64 [ %202, %201 ], [ %70, %67 ]
  %75 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 0, i32 0
  %76 = load i8*, i8** %75, align 8
  %77 = icmp eq i8* %76, null
  br i1 %77, label %84, label %78

78:                                               ; preds = %72
  %79 = ptrtoint i8* %76 to i64
  %80 = inttoptr i64 %74 to %"class.base::internal::UncheckedObserverAdapter"*
  %81 = inttoptr i64 %74 to i64*
  store i64 %79, i64* %81, align 8
  %82 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %80, i64 1
  %83 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %82 to i64
  br label %84

84:                                               ; preds = %78, %72
  %85 = phi i64 [ %74, %72 ], [ %83, %78 ]
  %86 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 1, i32 0
  %87 = load i8*, i8** %86, align 8
  %88 = icmp eq i8* %87, null
  br i1 %88, label %179, label %173

89:                                               ; preds = %201, %67
  %90 = phi i64 [ %68, %67 ], [ %202, %201 ]
  %91 = inttoptr i64 %90 to %"class.base::internal::UncheckedObserverAdapter"*
  %92 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %23, align 8
  br label %93

93:                                               ; preds = %89, %38
  %94 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %24, %38 ], [ %92, %89 ]
  %95 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %35, %38 ], [ %91, %89 ]
  %96 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %95, %94
  br i1 %96, label %98, label %97

97:                                               ; preds = %93
  store %"class.base::internal::UncheckedObserverAdapter"* %95, %"class.base::internal::UncheckedObserverAdapter"** %23, align 8
  br label %98

98:                                               ; preds = %31, %97, %93, %34
  %99 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %21, align 8
  %100 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %99, null
  br i1 %100, label %105, label %101

101:                                              ; preds = %98
  %102 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %99 to i64
  %103 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %23 to i64*
  store i64 %102, i64* %103, align 8
  %104 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %99 to i8*
  tail call void @_ZdlPv(i8* %104) #12
  br label %105

105:                                              ; preds = %98, %101
  %106 = getelementptr inbounds %"class.device::UsbService", %"class.device::UsbService"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.124"*, %"struct.std::__1::__hash_node_base.124"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.124"* %107, null
  br i1 %108, label %124, label %109

109:                                              ; preds = %105, %121
  %110 = phi %"struct.std::__1::__hash_node_base.124"* [ %112, %121 ], [ %107, %105 ]
  %111 = getelementptr inbounds %"struct.std::__1::__hash_node_base.124", %"struct.std::__1::__hash_node_base.124"* %110, i64 0, i32 0
  %112 = load %"struct.std::__1::__hash_node_base.124"*, %"struct.std::__1::__hash_node_base.124"** %111, align 8
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base.124", %"struct.std::__1::__hash_node_base.124"* %110, i64 2
  %114 = bitcast %"struct.std::__1::__hash_node_base.124"* %113 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %115 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %114, i64 0, i32 1, i32 0
  %116 = load i8, i8* %115, align 1
  %117 = icmp slt i8 %116, 0
  br i1 %117, label %118, label %121

118:                                              ; preds = %109
  %119 = bitcast %"struct.std::__1::__hash_node_base.124"* %113 to i8**
  %120 = load i8*, i8** %119, align 8
  tail call void @_ZdlPv(i8* %120) #12
  br label %121

121:                                              ; preds = %118, %109
  %122 = bitcast %"struct.std::__1::__hash_node_base.124"* %110 to i8*
  tail call void @_ZdlPv(i8* %122) #12
  %123 = icmp eq %"struct.std::__1::__hash_node_base.124"* %112, null
  br i1 %123, label %124, label %109

124:                                              ; preds = %121, %105
  %125 = getelementptr inbounds %"class.device::UsbService", %"class.device::UsbService"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load %"struct.std::__1::__hash_node_base.124"**, %"struct.std::__1::__hash_node_base.124"*** %125, align 8
  store %"struct.std::__1::__hash_node_base.124"** null, %"struct.std::__1::__hash_node_base.124"*** %125, align 8
  %127 = icmp eq %"struct.std::__1::__hash_node_base.124"** %126, null
  br i1 %127, label %130, label %128

128:                                              ; preds = %124
  %129 = bitcast %"struct.std::__1::__hash_node_base.124"** %126 to i8*
  tail call void @_ZdlPv(i8* %129) #12
  br label %130

130:                                              ; preds = %124, %128
  %131 = getelementptr inbounds %"class.device::UsbService", %"class.device::UsbService"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base"* %132, null
  br i1 %133, label %166, label %134

134:                                              ; preds = %130, %163
  %135 = phi %"struct.std::__1::__hash_node_base"* [ %137, %163 ], [ %132, %130 ]
  %136 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %135, i64 0, i32 0
  %137 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %136, align 8
  %138 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %135, i64 2
  %139 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %135, i64 5
  %140 = bitcast %"struct.std::__1::__hash_node_base"* %139 to %"class.device::UsbDevice"**
  %141 = load %"class.device::UsbDevice"*, %"class.device::UsbDevice"** %140, align 8
  %142 = icmp eq %"class.device::UsbDevice"* %141, null
  br i1 %142, label %155, label %143

143:                                              ; preds = %134
  %144 = getelementptr inbounds %"class.device::UsbDevice", %"class.device::UsbDevice"* %141, i64 0, i32 1
  %145 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %144, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = atomicrmw sub i32* %145, i32 1 acq_rel
  %147 = icmp eq i32 %146, 1
  br i1 %147, label %148, label %155

148:                                              ; preds = %143
  %149 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %144, i64 -2
  %150 = bitcast %"class.base::RefCountedThreadSafe"* %149 to %"class.device::UsbDevice"*
  %151 = bitcast %"class.base::RefCountedThreadSafe"* %149 to void (%"class.device::UsbDevice"*)***
  %152 = load void (%"class.device::UsbDevice"*)**, void (%"class.device::UsbDevice"*)*** %151, align 8
  %153 = getelementptr inbounds void (%"class.device::UsbDevice"*)*, void (%"class.device::UsbDevice"*)** %152, i64 5
  %154 = load void (%"class.device::UsbDevice"*)*, void (%"class.device::UsbDevice"*)** %153, align 8
  tail call void %154(%"class.device::UsbDevice"* nonnull %150) #13
  br label %155

155:                                              ; preds = %148, %143, %134
  %156 = bitcast %"struct.std::__1::__hash_node_base"* %138 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %157 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %156, i64 0, i32 1, i32 0
  %158 = load i8, i8* %157, align 1
  %159 = icmp slt i8 %158, 0
  br i1 %159, label %160, label %163

160:                                              ; preds = %155
  %161 = bitcast %"struct.std::__1::__hash_node_base"* %138 to i8**
  %162 = load i8*, i8** %161, align 8
  tail call void @_ZdlPv(i8* %162) #12
  br label %163

163:                                              ; preds = %160, %155
  %164 = bitcast %"struct.std::__1::__hash_node_base"* %135 to i8*
  tail call void @_ZdlPv(i8* %164) #12
  %165 = icmp eq %"struct.std::__1::__hash_node_base"* %137, null
  br i1 %165, label %166, label %134

166:                                              ; preds = %163, %130
  %167 = getelementptr inbounds %"class.device::UsbService", %"class.device::UsbService"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %168 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %167, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %167, align 8
  %169 = icmp eq %"struct.std::__1::__hash_node_base"** %168, null
  br i1 %169, label %172, label %170

170:                                              ; preds = %166
  %171 = bitcast %"struct.std::__1::__hash_node_base"** %168 to i8*
  tail call void @_ZdlPv(i8* %171) #12
  br label %172

172:                                              ; preds = %166, %170
  ret void

173:                                              ; preds = %84
  %174 = ptrtoint i8* %87 to i64
  %175 = inttoptr i64 %85 to %"class.base::internal::UncheckedObserverAdapter"*
  %176 = inttoptr i64 %85 to i64*
  store i64 %174, i64* %176, align 8
  %177 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %175, i64 1
  %178 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %177 to i64
  br label %179

179:                                              ; preds = %173, %84
  %180 = phi i64 [ %85, %84 ], [ %178, %173 ]
  %181 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 2, i32 0
  %182 = load i8*, i8** %181, align 8
  %183 = icmp eq i8* %182, null
  br i1 %183, label %190, label %184

184:                                              ; preds = %179
  %185 = ptrtoint i8* %182 to i64
  %186 = inttoptr i64 %180 to %"class.base::internal::UncheckedObserverAdapter"*
  %187 = inttoptr i64 %180 to i64*
  store i64 %185, i64* %187, align 8
  %188 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %186, i64 1
  %189 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %188 to i64
  br label %190

190:                                              ; preds = %184, %179
  %191 = phi i64 [ %180, %179 ], [ %189, %184 ]
  %192 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 3, i32 0
  %193 = load i8*, i8** %192, align 8
  %194 = icmp eq i8* %193, null
  br i1 %194, label %201, label %195

195:                                              ; preds = %190
  %196 = ptrtoint i8* %193 to i64
  %197 = inttoptr i64 %191 to %"class.base::internal::UncheckedObserverAdapter"*
  %198 = inttoptr i64 %191 to i64*
  store i64 %196, i64* %198, align 8
  %199 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %197, i64 1
  %200 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %199 to i64
  br label %201

201:                                              ; preds = %195, %190
  %202 = phi i64 [ %191, %190 ], [ %200, %195 ]
  %203 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 4
  %204 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %203, %24
  br i1 %204, label %89, label %72
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device10UsbServiceD0Ev(%"class.device::UsbService"*) unnamed_addr #1 align 2 {
  tail call void @_ZN6device10UsbServiceD2Ev(%"class.device::UsbService"* %0) #13
  %2 = bitcast %"class.device::UsbService"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device10UsbServiceC2Ev(%"class.device::UsbService"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.device::UsbService", %"class.device::UsbService"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6device10UsbServiceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.device::UsbService", %"class.device::UsbService"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.device::UsbService", %"class.device::UsbService"* %0, i64 0, i32 1, i32 0, i32 3
  %5 = bitcast %"class.std::__1::__compressed_pair.117"* %4 to i32*
  %6 = bitcast %"class.std::__1::unordered_map"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %5, align 4
  %7 = getelementptr inbounds %"class.device::UsbService", %"class.device::UsbService"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.device::UsbService", %"class.device::UsbService"* %0, i64 0, i32 2, i32 0, i32 3
  %9 = bitcast %"class.std::__1::__compressed_pair.138"* %8 to i32*
  %10 = bitcast %"class.std::__1::unordered_set"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %9, align 4
  %11 = getelementptr inbounds %"class.device::UsbService", %"class.device::UsbService"* %0, i64 0, i32 3
  %12 = bitcast %"class.base::ObserverList.141"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #13
  %13 = getelementptr inbounds %"class.device::UsbService", %"class.device::UsbService"* %0, i64 0, i32 3, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %13, %"class.base::internal::LinkNodeBase"* %13, %"class.base::internal::LinkNodeBase"* %13) #13
  %14 = getelementptr inbounds %"class.device::UsbService", %"class.device::UsbService"* %0, i64 0, i32 3, i32 2
  store i64 0, i64* %14, align 8
  %15 = getelementptr inbounds %"class.device::UsbService", %"class.device::UsbService"* %0, i64 0, i32 3, i32 3
  store i32 0, i32* %15, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.device::UsbDevice"* @_ZN6device10UsbService9GetDeviceERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.device::UsbService"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.device::UsbService", %"class.device::UsbService"* %0, i64 0, i32 1, i32 0
  %4 = tail call %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE13scoped_refptrIN6device9UsbDeviceEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE4findIS7_EENS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEERKT_(%"class.std::__1::__hash_table"* %3, %"class.std::__1::basic_string"* dereferenceable(24) %1) #13
  %5 = icmp eq %"struct.std::__1::__hash_node_base"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %4, i64 5
  %8 = bitcast %"struct.std::__1::__hash_node_base"* %7 to %"class.device::UsbDevice"**
  %9 = load %"class.device::UsbDevice"*, %"class.device::UsbDevice"** %8, align 8
  %10 = icmp eq %"class.device::UsbDevice"* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.device::UsbDevice", %"class.device::UsbDevice"* %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw add i32* %12, i32 1 monotonic
  br label %14

14:                                               ; preds = %11, %6, %2
  %15 = phi %"class.device::UsbDevice"* [ null, %2 ], [ null, %6 ], [ %9, %11 ]
  ret %"class.device::UsbDevice"* %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device10UsbService10GetDevicesEN4base12OnceCallbackIFvRKNSt3__16vectorI13scoped_refptrINS_9UsbDeviceEENS3_9allocatorIS7_EEEEEEE(%"class.device::UsbService"* nocapture readonly, %"class.base::OnceCallback"*) unnamed_addr #1 align 2 {
  %3 = alloca %"class.std::__1::vector.200", align 8
  %4 = alloca %"class.base::Location", align 8
  %5 = alloca %"class.base::OnceCallback.207", align 8
  %6 = bitcast %"class.std::__1::vector.200"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.std::__1::vector.200", %"class.std::__1::vector.200"* %3, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector.200", %"class.std::__1::vector.200"* %3, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.std::__1::vector.200", %"class.std::__1::vector.200"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #13
  %10 = getelementptr inbounds %"class.device::UsbService", %"class.device::UsbService"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %class.scoped_refptr** %9 to i64*
  %13 = bitcast %"class.std::__1::vector.200"* %3 to i64*
  %14 = icmp eq i64 %11, 0
  br i1 %14, label %26, label %15

15:                                               ; preds = %2
  %16 = icmp ugt i64 %11, 2305843009213693951
  br i1 %16, label %17, label %18

17:                                               ; preds = %15
  tail call void @abort() #14
  unreachable

18:                                               ; preds = %15
  %19 = bitcast %class.scoped_refptr** %8 to i64*
  %20 = shl i64 %11, 3
  %21 = tail call i8* @_Znwm(i64 %20) #12
  %22 = bitcast i8* %21 to %class.scoped_refptr*
  %23 = ptrtoint i8* %21 to i64
  %24 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %22, i64 %11
  %25 = ptrtoint %class.scoped_refptr* %24 to i64
  store i64 %23, i64* %13, align 8
  store i64 %23, i64* %19, align 8
  store i64 %25, i64* %12, align 8
  br label %26

26:                                               ; preds = %18, %2
  %27 = phi %class.scoped_refptr* [ null, %2 ], [ %24, %18 ]
  %28 = phi %class.scoped_refptr* [ null, %2 ], [ %22, %18 ]
  %29 = getelementptr inbounds %"class.device::UsbService", %"class.device::UsbService"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %30 = bitcast %"struct.std::__1::__hash_node_base"** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %35, label %33

33:                                               ; preds = %26
  %34 = bitcast %class.scoped_refptr** %8 to i64*
  br label %77

35:                                               ; preds = %96, %26
  %36 = call dereferenceable(8) %class.scoped_refptr.158* @_ZN4base25SequencedTaskRunnerHandle3GetEv() #13
  %37 = bitcast %class.scoped_refptr.158* %36 to %"class.base::TaskRunner"**
  %38 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %37, align 8
  %39 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %39) #13
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1, i64 0, i64 0), i32 98) #13
  %40 = call i8* @_Znwm(i64 64) #12, !noalias !4
  %41 = bitcast i8* %40 to %"struct.base::internal::BindState"*
  call void @_ZN4base8internal9BindStateINS_12OnceCallbackIFvRKNSt3__16vectorI13scoped_refptrIN6device9UsbDeviceEENS3_9allocatorIS8_EEEEEEEJSB_EEC2ISF_JRSB_EEENS3_17integral_constantIbLb1EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState"* nonnull %41, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateINS_12OnceCallbackIFvRKNSt3__16vectorI13scoped_refptrIN6device9UsbDeviceEENS4_9allocatorIS9_EEEEEEEJSC_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), %"class.base::OnceCallback"* dereferenceable(8) %1, %"class.std::__1::vector.200"* nonnull dereferenceable(24) %3) #13, !noalias !4
  %42 = bitcast %"class.base::OnceCallback.207"* %5 to i8**
  store i8* %40, i8** %42, align 8, !alias.scope !4
  %43 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %38, %"class.base::Location"* nonnull dereferenceable(32) %4, %"class.base::OnceCallback.207"* nonnull %5) #13
  %44 = getelementptr inbounds %"class.base::OnceCallback.207", %"class.base::OnceCallback.207"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %44) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %39) #13
  %45 = load %class.scoped_refptr*, %class.scoped_refptr** %7, align 8
  %46 = icmp eq %class.scoped_refptr* %45, null
  br i1 %46, label %76, label %47

47:                                               ; preds = %35
  %48 = bitcast %class.scoped_refptr* %45 to i8*
  %49 = load %class.scoped_refptr*, %class.scoped_refptr** %8, align 8
  %50 = icmp eq %class.scoped_refptr* %49, %45
  br i1 %50, label %74, label %51

51:                                               ; preds = %47, %69
  %52 = phi %class.scoped_refptr* [ %53, %69 ], [ %49, %47 ]
  %53 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %52, i64 -1
  %54 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %53, i64 0, i32 0
  %55 = load %"class.device::UsbDevice"*, %"class.device::UsbDevice"** %54, align 8
  %56 = icmp eq %"class.device::UsbDevice"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.device::UsbDevice", %"class.device::UsbDevice"* %55, i64 0, i32 1
  %59 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = atomicrmw sub i32* %59, i32 1 acq_rel
  %61 = icmp eq i32 %60, 1
  br i1 %61, label %62, label %69

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %58, i64 -2
  %64 = bitcast %"class.base::RefCountedThreadSafe"* %63 to %"class.device::UsbDevice"*
  %65 = bitcast %"class.base::RefCountedThreadSafe"* %63 to void (%"class.device::UsbDevice"*)***
  %66 = load void (%"class.device::UsbDevice"*)**, void (%"class.device::UsbDevice"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.device::UsbDevice"*)*, void (%"class.device::UsbDevice"*)** %66, i64 5
  %68 = load void (%"class.device::UsbDevice"*)*, void (%"class.device::UsbDevice"*)** %67, align 8
  call void %68(%"class.device::UsbDevice"* nonnull %64) #13
  br label %69

69:                                               ; preds = %62, %57, %51
  %70 = icmp eq %class.scoped_refptr* %53, %45
  br i1 %70, label %71, label %51

71:                                               ; preds = %69
  %72 = bitcast %"class.std::__1::vector.200"* %3 to i8**
  %73 = load i8*, i8** %72, align 8
  br label %74

74:                                               ; preds = %71, %47
  %75 = phi i8* [ %73, %71 ], [ %48, %47 ]
  store %class.scoped_refptr* %45, %class.scoped_refptr** %8, align 8
  call void @_ZdlPv(i8* %75) #12
  br label %76

76:                                               ; preds = %35, %74
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #13
  ret void

77:                                               ; preds = %100, %33
  %78 = phi %class.scoped_refptr* [ %27, %33 ], [ %102, %100 ]
  %79 = phi %class.scoped_refptr* [ %28, %33 ], [ %101, %100 ]
  %80 = phi i64 [ %31, %33 ], [ %98, %100 ]
  %81 = inttoptr i64 %80 to %"struct.std::__1::__hash_node"*
  %82 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %81, i64 0, i32 2, i32 0, i32 1
  %83 = icmp eq %class.scoped_refptr* %79, %78
  br i1 %83, label %95, label %84

84:                                               ; preds = %77
  %85 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %82, i64 0, i32 0
  %86 = load %"class.device::UsbDevice"*, %"class.device::UsbDevice"** %85, align 8
  %87 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %79, i64 0, i32 0
  store %"class.device::UsbDevice"* %86, %"class.device::UsbDevice"** %87, align 8
  %88 = icmp eq %"class.device::UsbDevice"* %86, null
  br i1 %88, label %92, label %89

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.device::UsbDevice", %"class.device::UsbDevice"* %86, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = atomicrmw add i32* %90, i32 1 monotonic
  br label %92

92:                                               ; preds = %89, %84
  %93 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %79, i64 1
  %94 = ptrtoint %class.scoped_refptr* %93 to i64
  store i64 %94, i64* %34, align 8
  br label %96

95:                                               ; preds = %77
  call void @_ZNSt3__16vectorI13scoped_refptrIN6device9UsbDeviceEENS_9allocatorIS4_EEE21__push_back_slow_pathIRKS4_EEvOT_(%"class.std::__1::vector.200"* nonnull %3, %class.scoped_refptr* dereferenceable(8) %82) #13
  br label %96

96:                                               ; preds = %92, %95
  %97 = inttoptr i64 %80 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %35, label %100

100:                                              ; preds = %96
  %101 = load %class.scoped_refptr*, %class.scoped_refptr** %8, align 8
  %102 = load %class.scoped_refptr*, %class.scoped_refptr** %9, align 8
  br label %77
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI13scoped_refptrIN6device9UsbDeviceEENS_9allocatorIS4_EEE7reserveEm(%"class.std::__1::vector.200"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.200", %"class.std::__1::vector.200"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %class.scoped_refptr** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.200"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %class.scoped_refptr*
  br i1 %10, label %12, label %142

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector.200", %"class.std::__1::vector.200"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %class.scoped_refptr** %13 to i64*
  %15 = icmp ugt i64 %1, 2305843009213693951
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #14
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = ashr exact i64 %19, 3
  %21 = shl i64 %1, 3
  %22 = tail call i8* @_Znwm(i64 %21) #12
  %23 = bitcast i8* %22 to %class.scoped_refptr*
  %24 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %23, i64 %20
  %25 = ptrtoint %class.scoped_refptr* %24 to i64
  %26 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %23, i64 %1
  %27 = ptrtoint %class.scoped_refptr* %26 to i64
  %28 = inttoptr i64 %18 to %class.scoped_refptr*
  %29 = icmp eq %class.scoped_refptr* %28, %11
  br i1 %29, label %57, label %30

30:                                               ; preds = %17
  %31 = getelementptr %class.scoped_refptr, %class.scoped_refptr* %28, i64 -1, i32 0
  %32 = bitcast %"class.device::UsbDevice"** %31 to i8*
  %33 = sub i64 0, %7
  %34 = getelementptr i8, i8* %32, i64 %33
  %35 = ptrtoint i8* %34 to i64
  %36 = lshr i64 %35, 3
  %37 = add nuw nsw i64 %36, 1
  %38 = and i64 %37, 7
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %52, label %40

40:                                               ; preds = %30, %40
  %41 = phi %class.scoped_refptr* [ %44, %40 ], [ %24, %30 ]
  %42 = phi %class.scoped_refptr* [ %45, %40 ], [ %28, %30 ]
  %43 = phi i64 [ %50, %40 ], [ %38, %30 ]
  %44 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %41, i64 -1
  %45 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %42, i64 -1
  %46 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %45, i64 0, i32 0
  %47 = bitcast %class.scoped_refptr* %45 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %class.scoped_refptr* %44 to i64*
  store i64 %48, i64* %49, align 8
  store %"class.device::UsbDevice"* null, %"class.device::UsbDevice"** %46, align 8
  %50 = add i64 %43, -1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %40, !llvm.loop !9

52:                                               ; preds = %40, %30
  %53 = phi %class.scoped_refptr* [ undef, %30 ], [ %44, %40 ]
  %54 = phi %class.scoped_refptr* [ %24, %30 ], [ %44, %40 ]
  %55 = phi %class.scoped_refptr* [ %28, %30 ], [ %45, %40 ]
  %56 = icmp ult i8* %34, inttoptr (i64 56 to i8*)
  br i1 %56, label %110, label %58

57:                                               ; preds = %17
  store i64 %25, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  br label %137

58:                                               ; preds = %52, %58
  %59 = phi %class.scoped_refptr* [ %103, %58 ], [ %54, %52 ]
  %60 = phi %class.scoped_refptr* [ %104, %58 ], [ %55, %52 ]
  %61 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %59, i64 -1
  %62 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %60, i64 -1
  %63 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %62, i64 0, i32 0
  %64 = bitcast %class.scoped_refptr* %62 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %class.scoped_refptr* %61 to i64*
  store i64 %65, i64* %66, align 8
  store %"class.device::UsbDevice"* null, %"class.device::UsbDevice"** %63, align 8
  %67 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %59, i64 -2
  %68 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %60, i64 -2
  %69 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %68, i64 0, i32 0
  %70 = bitcast %class.scoped_refptr* %68 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = bitcast %class.scoped_refptr* %67 to i64*
  store i64 %71, i64* %72, align 8
  store %"class.device::UsbDevice"* null, %"class.device::UsbDevice"** %69, align 8
  %73 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %59, i64 -3
  %74 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %60, i64 -3
  %75 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %74, i64 0, i32 0
  %76 = bitcast %class.scoped_refptr* %74 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = bitcast %class.scoped_refptr* %73 to i64*
  store i64 %77, i64* %78, align 8
  store %"class.device::UsbDevice"* null, %"class.device::UsbDevice"** %75, align 8
  %79 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %59, i64 -4
  %80 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %60, i64 -4
  %81 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %80, i64 0, i32 0
  %82 = bitcast %class.scoped_refptr* %80 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %class.scoped_refptr* %79 to i64*
  store i64 %83, i64* %84, align 8
  store %"class.device::UsbDevice"* null, %"class.device::UsbDevice"** %81, align 8
  %85 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %59, i64 -5
  %86 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %60, i64 -5
  %87 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %86, i64 0, i32 0
  %88 = bitcast %class.scoped_refptr* %86 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %class.scoped_refptr* %85 to i64*
  store i64 %89, i64* %90, align 8
  store %"class.device::UsbDevice"* null, %"class.device::UsbDevice"** %87, align 8
  %91 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %59, i64 -6
  %92 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %60, i64 -6
  %93 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %92, i64 0, i32 0
  %94 = bitcast %class.scoped_refptr* %92 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = bitcast %class.scoped_refptr* %91 to i64*
  store i64 %95, i64* %96, align 8
  store %"class.device::UsbDevice"* null, %"class.device::UsbDevice"** %93, align 8
  %97 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %59, i64 -7
  %98 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %60, i64 -7
  %99 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %98, i64 0, i32 0
  %100 = bitcast %class.scoped_refptr* %98 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = bitcast %class.scoped_refptr* %97 to i64*
  store i64 %101, i64* %102, align 8
  store %"class.device::UsbDevice"* null, %"class.device::UsbDevice"** %99, align 8
  %103 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %59, i64 -8
  %104 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %60, i64 -8
  %105 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %104, i64 0, i32 0
  %106 = bitcast %class.scoped_refptr* %104 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %class.scoped_refptr* %103 to i64*
  store i64 %107, i64* %108, align 8
  store %"class.device::UsbDevice"* null, %"class.device::UsbDevice"** %105, align 8
  %109 = icmp eq %class.scoped_refptr* %104, %11
  br i1 %109, label %110, label %58

110:                                              ; preds = %58, %52
  %111 = phi %class.scoped_refptr* [ %53, %52 ], [ %103, %58 ]
  %112 = ptrtoint %class.scoped_refptr* %111 to i64
  %113 = load i64, i64* %6, align 8
  %114 = load %class.scoped_refptr*, %class.scoped_refptr** %13, align 8
  %115 = inttoptr i64 %113 to %class.scoped_refptr*
  store i64 %112, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %116 = icmp eq %class.scoped_refptr* %114, %115
  br i1 %116, label %137, label %117

117:                                              ; preds = %110, %135
  %118 = phi %class.scoped_refptr* [ %119, %135 ], [ %114, %110 ]
  %119 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %118, i64 -1
  %120 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %119, i64 0, i32 0
  %121 = load %"class.device::UsbDevice"*, %"class.device::UsbDevice"** %120, align 8
  %122 = icmp eq %"class.device::UsbDevice"* %121, null
  br i1 %122, label %135, label %123

123:                                              ; preds = %117
  %124 = getelementptr inbounds %"class.device::UsbDevice", %"class.device::UsbDevice"* %121, i64 0, i32 1
  %125 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %124, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = atomicrmw sub i32* %125, i32 1 acq_rel
  %127 = icmp eq i32 %126, 1
  br i1 %127, label %128, label %135

128:                                              ; preds = %123
  %129 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %124, i64 -2
  %130 = bitcast %"class.base::RefCountedThreadSafe"* %129 to %"class.device::UsbDevice"*
  %131 = bitcast %"class.base::RefCountedThreadSafe"* %129 to void (%"class.device::UsbDevice"*)***
  %132 = load void (%"class.device::UsbDevice"*)**, void (%"class.device::UsbDevice"*)*** %131, align 8
  %133 = getelementptr inbounds void (%"class.device::UsbDevice"*)*, void (%"class.device::UsbDevice"*)** %132, i64 5
  %134 = load void (%"class.device::UsbDevice"*)*, void (%"class.device::UsbDevice"*)** %133, align 8
  tail call void %134(%"class.device::UsbDevice"* nonnull %130) #13
  br label %135

135:                                              ; preds = %128, %123, %117
  %136 = icmp eq %class.scoped_refptr* %119, %115
  br i1 %136, label %137, label %117

137:                                              ; preds = %135, %57, %110
  %138 = phi i64 [ %7, %57 ], [ %113, %110 ], [ %113, %135 ]
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %142, label %140

140:                                              ; preds = %137
  %141 = inttoptr i64 %138 to i8*
  tail call void @_ZdlPv(i8* %141) #12
  br label %142

142:                                              ; preds = %140, %137, %2
  ret void
}

declare dereferenceable(8) %class.scoped_refptr.158* @_ZN4base25SequencedTaskRunnerHandle3GetEv() local_unnamed_addr #5

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback.207"*) local_unnamed_addr #5

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device10UsbService11AddObserverEPNS0_8ObserverE(%"class.device::UsbService"*, %"class.device::UsbService::Observer"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.device::UsbService", %"class.device::UsbService"* %0, i64 0, i32 3
  %4 = icmp eq %"class.device::UsbService::Observer"* %1, null
  br i1 %4, label %5, label %8

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.device::UsbService", %"class.device::UsbService"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %7 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %6, align 8
  br label %26

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %3, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %9, align 8
  %11 = getelementptr inbounds %"class.device::UsbService", %"class.device::UsbService"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %12 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %11, align 8
  %13 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %10, %12
  %14 = bitcast %"class.device::UsbService::Observer"* %1 to i8*
  br i1 %13, label %23, label %15

15:                                               ; preds = %8, %20
  %16 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %21, %20 ], [ %10, %8 ]
  %17 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %16, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, %14
  br i1 %19, label %23, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %16, i64 1
  %22 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %21, %12
  br i1 %22, label %26, label %15

23:                                               ; preds = %15, %8
  %24 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %10, %8 ], [ %16, %15 ]
  %25 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %24, %12
  br i1 %25, label %26, label %99

26:                                               ; preds = %20, %5, %23
  %27 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %7, %5 ], [ %12, %23 ], [ %12, %20 ]
  %28 = getelementptr inbounds %"class.device::UsbService", %"class.device::UsbService"* %0, i64 0, i32 3, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %28, align 8
  %31 = ptrtoint %"class.device::UsbService::Observer"* %1 to i64
  %32 = getelementptr inbounds %"class.device::UsbService", %"class.device::UsbService"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.device::UsbService", %"class.device::UsbService"* %0, i64 0, i32 3, i32 0, i32 0, i32 2, i32 0, i32 0
  %34 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %33, align 8
  %35 = icmp ult %"class.base::internal::UncheckedObserverAdapter"* %27, %34
  %36 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %34 to i64
  br i1 %35, label %37, label %42

37:                                               ; preds = %26
  %38 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %27 to i64*
  store i64 %31, i64* %38, align 8
  %39 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %27, i64 1
  %40 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %39 to i64
  %41 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %32 to i64*
  store i64 %40, i64* %41, align 8
  br label %99

42:                                               ; preds = %26
  %43 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %27 to i64
  %44 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %32 to i64*
  %45 = bitcast %"class.base::ObserverList.141"* %3 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %43, %46
  %48 = ashr exact i64 %47, 3
  %49 = add nsw i64 %48, 1
  %50 = icmp ugt i64 %49, 2305843009213693951
  br i1 %50, label %51, label %53

51:                                               ; preds = %42
  %52 = bitcast %"class.base::ObserverList.141"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %52) #14
  unreachable

53:                                               ; preds = %42
  %54 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %33 to i64*
  %55 = sub i64 %36, %46
  %56 = ashr exact i64 %55, 3
  %57 = icmp ult i64 %56, 1152921504606846975
  br i1 %57, label %58, label %66

58:                                               ; preds = %53
  %59 = ashr exact i64 %55, 2
  %60 = icmp ult i64 %59, %49
  %61 = select i1 %60, i64 %49, i64 %59
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %71, label %63

63:                                               ; preds = %58
  %64 = icmp ugt i64 %61, 2305843009213693951
  br i1 %64, label %65, label %66

65:                                               ; preds = %63
  tail call void @abort() #14
  unreachable

66:                                               ; preds = %63, %53
  %67 = phi i64 [ %61, %63 ], [ 2305843009213693951, %53 ]
  %68 = shl i64 %67, 3
  %69 = tail call i8* @_Znwm(i64 %68) #12
  %70 = bitcast i8* %69 to %"class.base::internal::UncheckedObserverAdapter"*
  br label %71

71:                                               ; preds = %66, %58
  %72 = phi i64 [ %67, %66 ], [ 0, %58 ]
  %73 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %70, %66 ], [ null, %58 ]
  %74 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 %48
  %75 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 %72
  %76 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %75 to i64
  %77 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %74 to i64*
  store i64 %31, i64* %77, align 8
  %78 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 1
  %79 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %78 to i64
  %80 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %3, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %80, align 8
  %82 = load i64, i64* %44, align 8
  %83 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %81 to i64
  %84 = sub i64 %82, %83
  %85 = ashr exact i64 %84, 3
  %86 = sub nsw i64 0, %85
  %87 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 %86
  %88 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %87 to i64
  %89 = icmp sgt i64 %84, 0
  br i1 %89, label %90, label %94

90:                                               ; preds = %71
  %91 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %87 to i8*
  %92 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %81 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %92, i64 %84, i1 false) #13
  %93 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %80, align 8
  br label %94

94:                                               ; preds = %90, %71
  %95 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %81, %71 ], [ %93, %90 ]
  store i64 %88, i64* %45, align 8
  store i64 %79, i64* %44, align 8
  store i64 %76, i64* %54, align 8
  %96 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %95, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %94
  %98 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %95 to i8*
  tail call void @_ZdlPv(i8* %98) #12
  br label %99

99:                                               ; preds = %97, %94, %37, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device10UsbService14RemoveObserverEPNS0_8ObserverE(%"class.device::UsbService"*, %"class.device::UsbService::Observer"* readnone) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.device::UsbService", %"class.device::UsbService"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %3, align 8
  %5 = getelementptr inbounds %"class.device::UsbService", %"class.device::UsbService"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %6 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  %7 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %4, %6
  %8 = bitcast %"class.device::UsbService::Observer"* %1 to i8*
  %9 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %6 to i64
  br i1 %7, label %18, label %10

10:                                               ; preds = %2, %15
  %11 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %16, %15 ], [ %4, %2 ]
  %12 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, %8
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 1
  %17 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %16, %6
  br i1 %17, label %47, label %10

18:                                               ; preds = %10, %2
  %19 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %4, %2 ], [ %11, %10 ]
  %20 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %19, %6
  br i1 %20, label %47, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.device::UsbService", %"class.device::UsbService"* %0, i64 0, i32 3, i32 2
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, -1
  store i64 %28, i64* %26, align 8
  br label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.device::UsbService", %"class.device::UsbService"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 1
  %31 = bitcast %"class.base::internal::LinkNodeBase"** %30 to %"class.base::LinkNode.143"**
  %32 = load %"class.base::LinkNode.143"*, %"class.base::LinkNode.143"** %31, align 8
  %33 = getelementptr inbounds %"class.device::UsbService", %"class.device::UsbService"* %0, i64 0, i32 3, i32 1, i32 0
  %34 = icmp eq %"class.base::LinkNode.143"* %32, %33
  br i1 %34, label %35, label %46

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 1
  %37 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %36 to i64
  %38 = sub i64 %9, %37
  %39 = ashr exact i64 %38, 3
  %40 = icmp eq i64 %38, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %35
  %42 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %19 to i8*
  %43 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %36 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 %38, i1 false) #13
  br label %44

44:                                               ; preds = %41, %35
  %45 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 %39
  store %"class.base::internal::UncheckedObserverAdapter"* %45, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  br label %47

46:                                               ; preds = %29
  store i8* null, i8** %22, align 8
  br label %47

47:                                               ; preds = %15, %18, %44, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device10UsbService19AddDeviceForTestingE13scoped_refptrINS_9UsbDeviceEE(%"class.device::UsbService"*, %"class.device::UsbDevice"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.std::__1::tuple.228", align 8
  %4 = alloca %"class.std::__1::tuple.231", align 1
  %5 = icmp eq %"class.device::UsbDevice"* %1, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.device::UsbDevice", %"class.device::UsbDevice"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 1 monotonic
  br label %9

9:                                                ; preds = %2, %6
  %10 = getelementptr inbounds %"class.device::UsbDevice", %"class.device::UsbDevice"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.device::mojom::UsbDeviceInfo"*, %"class.device::mojom::UsbDeviceInfo"** %10, align 8
  %12 = getelementptr inbounds %"class.device::mojom::UsbDeviceInfo", %"class.device::mojom::UsbDeviceInfo"* %11, i64 0, i32 0
  %13 = getelementptr inbounds %"class.device::UsbService", %"class.device::UsbService"* %0, i64 0, i32 1, i32 0
  %14 = bitcast %"class.std::__1::tuple.228"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #13
  %15 = getelementptr inbounds %"class.std::__1::tuple.228", %"class.std::__1::tuple.228"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::basic_string"* %12, %"class.std::__1::basic_string"** %15, align 8
  %16 = getelementptr inbounds %"class.std::__1::tuple.231", %"class.std::__1::tuple.231"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #13
  %17 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE13scoped_refptrIN6device9UsbDeviceEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSR_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %13, %"class.std::__1::basic_string"* dereferenceable(24) %12, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.228"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.231"* nonnull dereferenceable(1) %4) #13
  %18 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %17, 0
  %19 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %18, i64 5
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #13
  %20 = ptrtoint %"class.device::UsbDevice"* %1 to i64
  %21 = bitcast %"struct.std::__1::__hash_node_base"* %19 to i64*
  %22 = bitcast %"struct.std::__1::__hash_node_base"* %19 to %"class.device::UsbDevice"**
  %23 = load %"class.device::UsbDevice"*, %"class.device::UsbDevice"** %22, align 8
  store i64 %20, i64* %21, align 8
  %24 = icmp eq %"class.device::UsbDevice"* %23, null
  br i1 %24, label %37, label %25

25:                                               ; preds = %9
  %26 = getelementptr inbounds %"class.device::UsbDevice", %"class.device::UsbDevice"* %23, i64 0, i32 1
  %27 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = atomicrmw sub i32* %27, i32 1 acq_rel
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %37

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %26, i64 -2
  %32 = bitcast %"class.base::RefCountedThreadSafe"* %31 to %"class.device::UsbDevice"*
  %33 = bitcast %"class.base::RefCountedThreadSafe"* %31 to void (%"class.device::UsbDevice"*)***
  %34 = load void (%"class.device::UsbDevice"*)**, void (%"class.device::UsbDevice"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.device::UsbDevice"*)*, void (%"class.device::UsbDevice"*)** %34, i64 5
  %36 = load void (%"class.device::UsbDevice"*)*, void (%"class.device::UsbDevice"*)** %35, align 8
  call void %36(%"class.device::UsbDevice"* nonnull %32) #13
  br label %37

37:                                               ; preds = %9, %25, %30
  %38 = load %"class.device::mojom::UsbDeviceInfo"*, %"class.device::mojom::UsbDeviceInfo"** %10, align 8
  %39 = getelementptr inbounds %"class.device::mojom::UsbDeviceInfo", %"class.device::mojom::UsbDeviceInfo"* %38, i64 0, i32 0
  %40 = getelementptr inbounds %"class.device::UsbService", %"class.device::UsbService"* %0, i64 0, i32 2, i32 0
  %41 = call { %"struct.std::__1::__hash_node_base.124"*, i8 } @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.120"* %40, %"class.std::__1::basic_string"* dereferenceable(24) %39, %"class.std::__1::basic_string"* dereferenceable(24) %39) #13
  br i1 %5, label %42, label %43

42:                                               ; preds = %37
  call void @_ZN6device10UsbService17NotifyDeviceAddedE13scoped_refptrINS_9UsbDeviceEE(%"class.device::UsbService"* %0, %"class.device::UsbDevice"* null)
  br label %57

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.device::UsbDevice", %"class.device::UsbDevice"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw add i32* %44, i32 1 monotonic
  call void @_ZN6device10UsbService17NotifyDeviceAddedE13scoped_refptrINS_9UsbDeviceEE(%"class.device::UsbService"* %0, %"class.device::UsbDevice"* nonnull %1)
  %46 = getelementptr inbounds %"class.device::UsbDevice", %"class.device::UsbDevice"* %1, i64 0, i32 1
  %47 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw sub i32* %47, i32 1 acq_rel
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %57

50:                                               ; preds = %43
  %51 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %46, i64 -2
  %52 = bitcast %"class.base::RefCountedThreadSafe"* %51 to %"class.device::UsbDevice"*
  %53 = bitcast %"class.base::RefCountedThreadSafe"* %51 to void (%"class.device::UsbDevice"*)***
  %54 = load void (%"class.device::UsbDevice"*)**, void (%"class.device::UsbDevice"*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.device::UsbDevice"*)*, void (%"class.device::UsbDevice"*)** %54, i64 5
  %56 = load void (%"class.device::UsbDevice"*)*, void (%"class.device::UsbDevice"*)** %55, align 8
  call void %56(%"class.device::UsbDevice"* nonnull %52) #13
  br label %57

57:                                               ; preds = %42, %43, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device10UsbService17NotifyDeviceAddedE13scoped_refptrINS_9UsbDeviceEE(%"class.device::UsbService"*, %"class.device::UsbDevice"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = alloca %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %5 = getelementptr inbounds %"class.device::UsbService", %"class.device::UsbService"* %0, i64 0, i32 3
  %6 = bitcast %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %9 = getelementptr inbounds %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %10 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %5, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 40, i1 false)
  %12 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %10, align 8, !noalias !10
  %13 = getelementptr inbounds %"class.device::UsbService", %"class.device::UsbService"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %14 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %13, align 8, !noalias !10
  %15 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %12, %14
  %16 = getelementptr inbounds %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %16) #13
  br i1 %15, label %17, label %19

17:                                               ; preds = %2
  %18 = bitcast %"class.base::ObserverList.141"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #13, !alias.scope !10
  br label %59

19:                                               ; preds = %2
  store %"class.base::ObserverList.141"* %5, %"class.base::ObserverList.141"** %7, align 8, !alias.scope !10
  %20 = getelementptr inbounds %"class.device::UsbService", %"class.device::UsbService"* %0, i64 0, i32 3, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %16, %"class.base::internal::LinkNodeBase"* %20) #13
  store i64 0, i64* %8, align 8, !alias.scope !10
  %21 = getelementptr inbounds %"class.device::UsbService", %"class.device::UsbService"* %0, i64 0, i32 3, i32 3
  %22 = load i32, i32* %21, align 8, !noalias !10
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %31, label %24

24:                                               ; preds = %19
  %25 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %13 to i64*
  %26 = load i64, i64* %25, align 8, !noalias !10
  %27 = bitcast %"class.base::ObserverList.141"* %5 to i64*
  %28 = load i64, i64* %27, align 8, !noalias !10
  %29 = sub i64 %26, %28
  %30 = ashr exact i64 %29, 3
  br label %31

31:                                               ; preds = %24, %19
  %32 = phi i64 [ %30, %24 ], [ -1, %19 ]
  store i64 %32, i64* %9, align 8, !alias.scope !10
  %33 = load %"class.base::ObserverList.141"*, %"class.base::ObserverList.141"** %7, align 8, !alias.scope !10
  %34 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %33, i64 0, i32 0, i32 0, i32 1
  %35 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.base::ObserverList.141"* %33 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %36, %38
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, %32
  %42 = select i1 %41, i64 %40, i64 %32
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %59, label %44

44:                                               ; preds = %31
  %45 = inttoptr i64 %38 to %"class.base::internal::UncheckedObserverAdapter"*
  %46 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %33, i64 0, i32 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %45, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %50, label %59

50:                                               ; preds = %44, %54
  %51 = phi i64 [ %52, %54 ], [ 0, %44 ]
  %52 = add nuw i64 %51, 1
  store i64 %52, i64* %8, align 8, !alias.scope !10
  %53 = icmp ult i64 %52, %42
  br i1 %53, label %54, label %59

54:                                               ; preds = %50
  %55 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %46, align 8
  %56 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %55, i64 %52, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = icmp eq i8* %57, null
  br i1 %58, label %50, label %59

59:                                               ; preds = %50, %54, %17, %31, %44
  %60 = bitcast %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %60) #13
  %61 = getelementptr inbounds %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %62 = getelementptr inbounds %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %63 = getelementptr inbounds %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %64 = getelementptr inbounds %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %64) #13
  %66 = bitcast %"class.base::ObserverList.141"** %61 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 24, i1 false) #13, !alias.scope !13
  %67 = icmp eq %"class.device::UsbDevice"* %1, null
  %68 = getelementptr inbounds %"class.device::UsbDevice", %"class.device::UsbDevice"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load %"class.base::ObserverList.141"*, %"class.base::ObserverList.141"** %7, align 8
  br label %70

70:                                               ; preds = %326, %59
  %71 = phi %"class.base::ObserverList.141"* [ %69, %59 ], [ %324, %326 ]
  %72 = icmp eq %"class.base::ObserverList.141"* %71, null
  br i1 %72, label %88, label %73

73:                                               ; preds = %70
  %74 = load i64, i64* %8, align 8
  %75 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %71, i64 0, i32 0, i32 0, i32 1
  %76 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = bitcast %"class.base::ObserverList.141"* %71 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = sub i64 %77, %79
  %81 = ashr exact i64 %80, 3
  %82 = load i64, i64* %9, align 8
  %83 = icmp ult i64 %81, %82
  %84 = select i1 %83, i64 %81, i64 %82
  %85 = icmp eq i64 %74, %84
  br i1 %85, label %88, label %86

86:                                               ; preds = %73
  %87 = load %"class.base::ObserverList.141"*, %"class.base::ObserverList.141"** %61, align 8
  br label %104

88:                                               ; preds = %73, %70
  %89 = load %"class.base::ObserverList.141"*, %"class.base::ObserverList.141"** %61, align 8
  %90 = icmp eq %"class.base::ObserverList.141"* %89, null
  br i1 %90, label %204, label %91

91:                                               ; preds = %88
  %92 = load i64, i64* %62, align 8
  %93 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %89, i64 0, i32 0, i32 0, i32 1
  %94 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %93 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = bitcast %"class.base::ObserverList.141"* %89 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = sub i64 %95, %97
  %99 = ashr exact i64 %98, 3
  %100 = load i64, i64* %63, align 8
  %101 = icmp ult i64 %99, %100
  %102 = select i1 %101, i64 %99, i64 %100
  %103 = icmp eq i64 %92, %102
  br i1 %103, label %113, label %104

104:                                              ; preds = %91, %86
  %105 = phi %"class.base::ObserverList.141"* [ %87, %86 ], [ %89, %91 ]
  %106 = icmp eq %"class.base::ObserverList.141"* %71, %105
  %107 = load i64, i64* %8, align 8
  %108 = load i64, i64* %62, align 8
  %109 = icmp eq i64 %107, %108
  %110 = and i1 %106, %109
  br i1 %110, label %111, label %311

111:                                              ; preds = %104
  %112 = icmp eq %"class.base::ObserverList.141"* %71, null
  br i1 %112, label %204, label %113

113:                                              ; preds = %91, %111
  %114 = phi %"class.base::ObserverList.141"* [ %71, %111 ], [ %89, %91 ]
  %115 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %114, i64 0, i32 1
  %116 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %114, i64 0, i32 1, i32 0, i32 0, i32 1
  %117 = bitcast %"class.base::internal::LinkNodeBase"** %116 to %"class.base::LinkNode.143"**
  %118 = load %"class.base::LinkNode.143"*, %"class.base::LinkNode.143"** %117, align 8
  %119 = bitcast %"class.base::LinkedList.142"* %115 to %"class.base::LinkNode.143"**
  %120 = load %"class.base::LinkNode.143"*, %"class.base::LinkNode.143"** %119, align 8
  %121 = icmp eq %"class.base::LinkNode.143"* %118, %120
  br i1 %121, label %122, label %200

122:                                              ; preds = %113
  %123 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %114, i64 0, i32 0, i32 0, i32 0
  %124 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %123, align 8
  %125 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %114, i64 0, i32 0, i32 0, i32 1
  %126 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %125, align 8
  %127 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %124, %126
  br i1 %127, label %136, label %128

128:                                              ; preds = %122, %133
  %129 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %134, %133 ], [ %124, %122 ]
  %130 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %129, i64 0, i32 0
  %131 = load i8*, i8** %130, align 8
  %132 = icmp eq i8* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %128
  %134 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %129, i64 1
  %135 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %134, %126
  br i1 %135, label %200, label %128

136:                                              ; preds = %128, %122
  %137 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %124, %122 ], [ %129, %128 ]
  %138 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %137 to i64
  %139 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %137, %126
  br i1 %139, label %200, label %140

140:                                              ; preds = %136
  %141 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %137, i64 1
  %142 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %141, %126
  br i1 %142, label %195, label %143

143:                                              ; preds = %140
  %144 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %126, i64 -2, i32 0
  %145 = ptrtoint i8** %144 to i64
  %146 = sub i64 %145, %138
  %147 = lshr i64 %146, 3
  %148 = add nuw nsw i64 %147, 1
  %149 = and i64 %148, 3
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %169, label %151

151:                                              ; preds = %143, %164
  %152 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %166, %164 ], [ %141, %143 ]
  %153 = phi i64 [ %165, %164 ], [ %138, %143 ]
  %154 = phi i64 [ %167, %164 ], [ %149, %143 ]
  %155 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %152, i64 0, i32 0
  %156 = load i8*, i8** %155, align 8
  %157 = icmp eq i8* %156, null
  br i1 %157, label %164, label %158

158:                                              ; preds = %151
  %159 = ptrtoint i8* %156 to i64
  %160 = inttoptr i64 %153 to %"class.base::internal::UncheckedObserverAdapter"*
  %161 = inttoptr i64 %153 to i64*
  store i64 %159, i64* %161, align 8
  %162 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %160, i64 1
  %163 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %162 to i64
  br label %164

164:                                              ; preds = %158, %151
  %165 = phi i64 [ %153, %151 ], [ %163, %158 ]
  %166 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %152, i64 1
  %167 = add i64 %154, -1
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %169, label %151, !llvm.loop !16

169:                                              ; preds = %164, %143
  %170 = phi i64 [ undef, %143 ], [ %165, %164 ]
  %171 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %141, %143 ], [ %166, %164 ]
  %172 = phi i64 [ %138, %143 ], [ %165, %164 ]
  %173 = icmp ult i64 %146, 24
  br i1 %173, label %191, label %174

174:                                              ; preds = %169, %416
  %175 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %418, %416 ], [ %171, %169 ]
  %176 = phi i64 [ %417, %416 ], [ %172, %169 ]
  %177 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %175, i64 0, i32 0
  %178 = load i8*, i8** %177, align 8
  %179 = icmp eq i8* %178, null
  br i1 %179, label %186, label %180

180:                                              ; preds = %174
  %181 = ptrtoint i8* %178 to i64
  %182 = inttoptr i64 %176 to %"class.base::internal::UncheckedObserverAdapter"*
  %183 = inttoptr i64 %176 to i64*
  store i64 %181, i64* %183, align 8
  %184 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %182, i64 1
  %185 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %184 to i64
  br label %186

186:                                              ; preds = %180, %174
  %187 = phi i64 [ %176, %174 ], [ %185, %180 ]
  %188 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %175, i64 1, i32 0
  %189 = load i8*, i8** %188, align 8
  %190 = icmp eq i8* %189, null
  br i1 %190, label %394, label %388

191:                                              ; preds = %416, %169
  %192 = phi i64 [ %170, %169 ], [ %417, %416 ]
  %193 = inttoptr i64 %192 to %"class.base::internal::UncheckedObserverAdapter"*
  %194 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %125, align 8
  br label %195

195:                                              ; preds = %191, %140
  %196 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %126, %140 ], [ %194, %191 ]
  %197 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %137, %140 ], [ %193, %191 ]
  %198 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %197, %196
  br i1 %198, label %200, label %199

199:                                              ; preds = %195
  store %"class.base::internal::UncheckedObserverAdapter"* %197, %"class.base::internal::UncheckedObserverAdapter"** %125, align 8
  br label %200

200:                                              ; preds = %133, %199, %195, %136, %113
  %201 = load %"class.base::ObserverList.141"*, %"class.base::ObserverList.141"** %61, align 8
  %202 = icmp eq %"class.base::ObserverList.141"* %201, null
  br i1 %202, label %204, label %203

203:                                              ; preds = %200
  store %"class.base::ObserverList.141"* null, %"class.base::ObserverList.141"** %61, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %64) #13
  br label %204

204:                                              ; preds = %88, %111, %200, %203
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %60) #13
  %205 = load %"class.base::ObserverList.141"*, %"class.base::ObserverList.141"** %7, align 8
  %206 = icmp eq %"class.base::ObserverList.141"* %205, null
  br i1 %206, label %297, label %207

207:                                              ; preds = %204
  %208 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %205, i64 0, i32 1
  %209 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %205, i64 0, i32 1, i32 0, i32 0, i32 1
  %210 = bitcast %"class.base::internal::LinkNodeBase"** %209 to %"class.base::LinkNode.143"**
  %211 = load %"class.base::LinkNode.143"*, %"class.base::LinkNode.143"** %210, align 8
  %212 = bitcast %"class.base::LinkedList.142"* %208 to %"class.base::LinkNode.143"**
  %213 = load %"class.base::LinkNode.143"*, %"class.base::LinkNode.143"** %212, align 8
  %214 = icmp eq %"class.base::LinkNode.143"* %211, %213
  br i1 %214, label %215, label %293

215:                                              ; preds = %207
  %216 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %205, i64 0, i32 0, i32 0, i32 0
  %217 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %216, align 8
  %218 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %205, i64 0, i32 0, i32 0, i32 1
  %219 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %218, align 8
  %220 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %217, %219
  br i1 %220, label %229, label %221

221:                                              ; preds = %215, %226
  %222 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %227, %226 ], [ %217, %215 ]
  %223 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %222, i64 0, i32 0
  %224 = load i8*, i8** %223, align 8
  %225 = icmp eq i8* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %221
  %227 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %222, i64 1
  %228 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %227, %219
  br i1 %228, label %293, label %221

229:                                              ; preds = %221, %215
  %230 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %217, %215 ], [ %222, %221 ]
  %231 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %230 to i64
  %232 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %230, %219
  br i1 %232, label %293, label %233

233:                                              ; preds = %229
  %234 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %230, i64 1
  %235 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %234, %219
  br i1 %235, label %288, label %236

236:                                              ; preds = %233
  %237 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %219, i64 -2, i32 0
  %238 = ptrtoint i8** %237 to i64
  %239 = sub i64 %238, %231
  %240 = lshr i64 %239, 3
  %241 = add nuw nsw i64 %240, 1
  %242 = and i64 %241, 3
  %243 = icmp eq i64 %242, 0
  br i1 %243, label %262, label %244

244:                                              ; preds = %236, %257
  %245 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %259, %257 ], [ %234, %236 ]
  %246 = phi i64 [ %258, %257 ], [ %231, %236 ]
  %247 = phi i64 [ %260, %257 ], [ %242, %236 ]
  %248 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %245, i64 0, i32 0
  %249 = load i8*, i8** %248, align 8
  %250 = icmp eq i8* %249, null
  br i1 %250, label %257, label %251

251:                                              ; preds = %244
  %252 = ptrtoint i8* %249 to i64
  %253 = inttoptr i64 %246 to %"class.base::internal::UncheckedObserverAdapter"*
  %254 = inttoptr i64 %246 to i64*
  store i64 %252, i64* %254, align 8
  %255 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %253, i64 1
  %256 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %255 to i64
  br label %257

257:                                              ; preds = %251, %244
  %258 = phi i64 [ %246, %244 ], [ %256, %251 ]
  %259 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %245, i64 1
  %260 = add i64 %247, -1
  %261 = icmp eq i64 %260, 0
  br i1 %261, label %262, label %244, !llvm.loop !17

262:                                              ; preds = %257, %236
  %263 = phi i64 [ undef, %236 ], [ %258, %257 ]
  %264 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %234, %236 ], [ %259, %257 ]
  %265 = phi i64 [ %231, %236 ], [ %258, %257 ]
  %266 = icmp ult i64 %239, 24
  br i1 %266, label %284, label %267

267:                                              ; preds = %262, %384
  %268 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %386, %384 ], [ %264, %262 ]
  %269 = phi i64 [ %385, %384 ], [ %265, %262 ]
  %270 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %268, i64 0, i32 0
  %271 = load i8*, i8** %270, align 8
  %272 = icmp eq i8* %271, null
  br i1 %272, label %279, label %273

273:                                              ; preds = %267
  %274 = ptrtoint i8* %271 to i64
  %275 = inttoptr i64 %269 to %"class.base::internal::UncheckedObserverAdapter"*
  %276 = inttoptr i64 %269 to i64*
  store i64 %274, i64* %276, align 8
  %277 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %275, i64 1
  %278 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %277 to i64
  br label %279

279:                                              ; preds = %273, %267
  %280 = phi i64 [ %269, %267 ], [ %278, %273 ]
  %281 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %268, i64 1, i32 0
  %282 = load i8*, i8** %281, align 8
  %283 = icmp eq i8* %282, null
  br i1 %283, label %362, label %356

284:                                              ; preds = %384, %262
  %285 = phi i64 [ %263, %262 ], [ %385, %384 ]
  %286 = inttoptr i64 %285 to %"class.base::internal::UncheckedObserverAdapter"*
  %287 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %218, align 8
  br label %288

288:                                              ; preds = %284, %233
  %289 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %219, %233 ], [ %287, %284 ]
  %290 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %230, %233 ], [ %286, %284 ]
  %291 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %290, %289
  br i1 %291, label %293, label %292

292:                                              ; preds = %288
  store %"class.base::internal::UncheckedObserverAdapter"* %290, %"class.base::internal::UncheckedObserverAdapter"** %218, align 8
  br label %293

293:                                              ; preds = %226, %292, %288, %229, %207
  %294 = load %"class.base::ObserverList.141"*, %"class.base::ObserverList.141"** %7, align 8
  %295 = icmp eq %"class.base::ObserverList.141"* %294, null
  br i1 %295, label %297, label %296

296:                                              ; preds = %293
  store %"class.base::ObserverList.141"* null, %"class.base::ObserverList.141"** %7, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %16) #13
  br label %297

297:                                              ; preds = %204, %293, %296
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #13
  br i1 %67, label %310, label %298

298:                                              ; preds = %297
  %299 = getelementptr inbounds %"class.device::UsbDevice", %"class.device::UsbDevice"* %1, i64 0, i32 1
  %300 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %299, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %301 = atomicrmw sub i32* %300, i32 1 acq_rel
  %302 = icmp eq i32 %301, 1
  br i1 %302, label %303, label %310

303:                                              ; preds = %298
  %304 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %299, i64 -2
  %305 = bitcast %"class.base::RefCountedThreadSafe"* %304 to %"class.device::UsbDevice"*
  %306 = bitcast %"class.base::RefCountedThreadSafe"* %304 to void (%"class.device::UsbDevice"*)***
  %307 = load void (%"class.device::UsbDevice"*)**, void (%"class.device::UsbDevice"*)*** %306, align 8
  %308 = getelementptr inbounds void (%"class.device::UsbDevice"*)*, void (%"class.device::UsbDevice"*)** %307, i64 5
  %309 = load void (%"class.device::UsbDevice"*)*, void (%"class.device::UsbDevice"*)** %308, align 8
  call void %309(%"class.device::UsbDevice"* nonnull %305) #13
  br label %310

310:                                              ; preds = %297, %298, %303
  ret void

311:                                              ; preds = %104
  %312 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %71, i64 0, i32 0, i32 0, i32 0
  %313 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %312, align 8
  %314 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %313, i64 %107
  %315 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %314 to %"class.device::UsbService::Observer"**
  %316 = load %"class.device::UsbService::Observer"*, %"class.device::UsbService::Observer"** %315, align 8
  br i1 %67, label %319, label %317

317:                                              ; preds = %311
  %318 = atomicrmw add i32* %68, i32 1 monotonic
  br label %319

319:                                              ; preds = %311, %317
  %320 = bitcast %"class.device::UsbService::Observer"* %316 to void (%"class.device::UsbService::Observer"*, %"class.device::UsbDevice"*)***
  %321 = load void (%"class.device::UsbService::Observer"*, %"class.device::UsbDevice"*)**, void (%"class.device::UsbService::Observer"*, %"class.device::UsbDevice"*)*** %320, align 8
  %322 = getelementptr inbounds void (%"class.device::UsbService::Observer"*, %"class.device::UsbDevice"*)*, void (%"class.device::UsbService::Observer"*, %"class.device::UsbDevice"*)** %321, i64 2
  %323 = load void (%"class.device::UsbService::Observer"*, %"class.device::UsbDevice"*)*, void (%"class.device::UsbService::Observer"*, %"class.device::UsbDevice"*)** %322, align 8
  call void %323(%"class.device::UsbService::Observer"* %316, %"class.device::UsbDevice"* %1) #13
  %324 = load %"class.base::ObserverList.141"*, %"class.base::ObserverList.141"** %7, align 8
  %325 = icmp eq %"class.base::ObserverList.141"* %324, null
  br i1 %325, label %326, label %327

326:                                              ; preds = %351, %347, %319, %327, %341
  br label %70

327:                                              ; preds = %319
  %328 = load i64, i64* %8, align 8
  %329 = add i64 %328, 1
  store i64 %329, i64* %8, align 8
  %330 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %324, i64 0, i32 0, i32 0, i32 1
  %331 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %330 to i64*
  %332 = load i64, i64* %331, align 8
  %333 = bitcast %"class.base::ObserverList.141"* %324 to i64*
  %334 = load i64, i64* %333, align 8
  %335 = sub i64 %332, %334
  %336 = ashr exact i64 %335, 3
  %337 = load i64, i64* %9, align 8
  %338 = icmp ult i64 %336, %337
  %339 = select i1 %338, i64 %336, i64 %337
  %340 = icmp ult i64 %329, %339
  br i1 %340, label %341, label %326

341:                                              ; preds = %327
  %342 = inttoptr i64 %334 to %"class.base::internal::UncheckedObserverAdapter"*
  %343 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %324, i64 0, i32 0, i32 0, i32 0
  %344 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %342, i64 %329, i32 0
  %345 = load i8*, i8** %344, align 8
  %346 = icmp eq i8* %345, null
  br i1 %346, label %347, label %326

347:                                              ; preds = %341, %351
  %348 = phi i64 [ %349, %351 ], [ %329, %341 ]
  %349 = add nuw i64 %348, 1
  store i64 %349, i64* %8, align 8
  %350 = icmp ult i64 %349, %339
  br i1 %350, label %351, label %326

351:                                              ; preds = %347
  %352 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %343, align 8
  %353 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %352, i64 %349, i32 0
  %354 = load i8*, i8** %353, align 8
  %355 = icmp eq i8* %354, null
  br i1 %355, label %347, label %326

356:                                              ; preds = %279
  %357 = ptrtoint i8* %282 to i64
  %358 = inttoptr i64 %280 to %"class.base::internal::UncheckedObserverAdapter"*
  %359 = inttoptr i64 %280 to i64*
  store i64 %357, i64* %359, align 8
  %360 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %358, i64 1
  %361 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %360 to i64
  br label %362

362:                                              ; preds = %356, %279
  %363 = phi i64 [ %280, %279 ], [ %361, %356 ]
  %364 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %268, i64 2, i32 0
  %365 = load i8*, i8** %364, align 8
  %366 = icmp eq i8* %365, null
  br i1 %366, label %373, label %367

367:                                              ; preds = %362
  %368 = ptrtoint i8* %365 to i64
  %369 = inttoptr i64 %363 to %"class.base::internal::UncheckedObserverAdapter"*
  %370 = inttoptr i64 %363 to i64*
  store i64 %368, i64* %370, align 8
  %371 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %369, i64 1
  %372 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %371 to i64
  br label %373

373:                                              ; preds = %367, %362
  %374 = phi i64 [ %363, %362 ], [ %372, %367 ]
  %375 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %268, i64 3, i32 0
  %376 = load i8*, i8** %375, align 8
  %377 = icmp eq i8* %376, null
  br i1 %377, label %384, label %378

378:                                              ; preds = %373
  %379 = ptrtoint i8* %376 to i64
  %380 = inttoptr i64 %374 to %"class.base::internal::UncheckedObserverAdapter"*
  %381 = inttoptr i64 %374 to i64*
  store i64 %379, i64* %381, align 8
  %382 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %380, i64 1
  %383 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %382 to i64
  br label %384

384:                                              ; preds = %378, %373
  %385 = phi i64 [ %374, %373 ], [ %383, %378 ]
  %386 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %268, i64 4
  %387 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %386, %219
  br i1 %387, label %284, label %267

388:                                              ; preds = %186
  %389 = ptrtoint i8* %189 to i64
  %390 = inttoptr i64 %187 to %"class.base::internal::UncheckedObserverAdapter"*
  %391 = inttoptr i64 %187 to i64*
  store i64 %389, i64* %391, align 8
  %392 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %390, i64 1
  %393 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %392 to i64
  br label %394

394:                                              ; preds = %388, %186
  %395 = phi i64 [ %187, %186 ], [ %393, %388 ]
  %396 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %175, i64 2, i32 0
  %397 = load i8*, i8** %396, align 8
  %398 = icmp eq i8* %397, null
  br i1 %398, label %405, label %399

399:                                              ; preds = %394
  %400 = ptrtoint i8* %397 to i64
  %401 = inttoptr i64 %395 to %"class.base::internal::UncheckedObserverAdapter"*
  %402 = inttoptr i64 %395 to i64*
  store i64 %400, i64* %402, align 8
  %403 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %401, i64 1
  %404 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %403 to i64
  br label %405

405:                                              ; preds = %399, %394
  %406 = phi i64 [ %395, %394 ], [ %404, %399 ]
  %407 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %175, i64 3, i32 0
  %408 = load i8*, i8** %407, align 8
  %409 = icmp eq i8* %408, null
  br i1 %409, label %416, label %410

410:                                              ; preds = %405
  %411 = ptrtoint i8* %408 to i64
  %412 = inttoptr i64 %406 to %"class.base::internal::UncheckedObserverAdapter"*
  %413 = inttoptr i64 %406 to i64*
  store i64 %411, i64* %413, align 8
  %414 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %412, i64 1
  %415 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %414 to i64
  br label %416

416:                                              ; preds = %410, %405
  %417 = phi i64 [ %406, %405 ], [ %415, %410 ]
  %418 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %175, i64 4
  %419 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %418, %126
  br i1 %419, label %191, label %174
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device10UsbService22RemoveDeviceForTestingERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.device::UsbService"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.232", align 8
  %4 = alloca %"class.std::__1::unique_ptr.240", align 8
  %5 = getelementptr inbounds %"class.device::UsbService", %"class.device::UsbService"* %0, i64 0, i32 2, i32 0
  %6 = tail call %"struct.std::__1::__hash_node_base.124"* @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE4findIS6_EENS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEERKT_(%"class.std::__1::__hash_table.120"* %5, %"class.std::__1::basic_string"* dereferenceable(24) %1) #13
  %7 = icmp eq %"struct.std::__1::__hash_node_base.124"* %6, null
  br i1 %7, label %90, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.device::UsbService", %"class.device::UsbService"* %0, i64 0, i32 1, i32 0
  %10 = tail call %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE13scoped_refptrIN6device9UsbDeviceEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE4findIS7_EENS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEERKT_(%"class.std::__1::__hash_table"* %9, %"class.std::__1::basic_string"* dereferenceable(24) %1) #13
  %11 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %10, i64 5
  %12 = bitcast %"struct.std::__1::__hash_node_base"* %11 to %"class.device::UsbDevice"**
  %13 = load %"class.device::UsbDevice"*, %"class.device::UsbDevice"** %12, align 8
  %14 = icmp eq %"class.device::UsbDevice"* %13, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.device::UsbDevice", %"class.device::UsbDevice"* %13, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 1 monotonic
  br label %18

18:                                               ; preds = %8, %15
  %19 = bitcast %"class.std::__1::unique_ptr.232"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #13
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE13scoped_refptrIN6device9UsbDeviceEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeISC_PvEEEE(%"class.std::__1::unique_ptr.232"* nonnull sret %3, %"class.std::__1::__hash_table"* %9, %"struct.std::__1::__hash_node_base"* %10) #13
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.232", %"class.std::__1::unique_ptr.232"* %3, i64 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %20, align 8
  store %"struct.std::__1::__hash_node"* null, %"struct.std::__1::__hash_node"** %20, align 8
  %22 = icmp eq %"struct.std::__1::__hash_node"* %21, null
  br i1 %22, label %54, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.232", %"class.std::__1::unique_ptr.232"* %3, i64 0, i32 0, i32 1, i32 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !18
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %52, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %21, i64 0, i32 2, i32 0
  %29 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %21, i64 0, i32 2, i32 0, i32 1, i32 0
  %30 = load %"class.device::UsbDevice"*, %"class.device::UsbDevice"** %29, align 8
  %31 = icmp eq %"class.device::UsbDevice"* %30, null
  br i1 %31, label %44, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.device::UsbDevice", %"class.device::UsbDevice"* %30, i64 0, i32 1
  %34 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw sub i32* %34, i32 1 acq_rel
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %37, label %44

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %33, i64 -2
  %39 = bitcast %"class.base::RefCountedThreadSafe"* %38 to %"class.device::UsbDevice"*
  %40 = bitcast %"class.base::RefCountedThreadSafe"* %38 to void (%"class.device::UsbDevice"*)***
  %41 = load void (%"class.device::UsbDevice"*)**, void (%"class.device::UsbDevice"*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.device::UsbDevice"*)*, void (%"class.device::UsbDevice"*)** %41, i64 5
  %43 = load void (%"class.device::UsbDevice"*)*, void (%"class.device::UsbDevice"*)** %42, align 8
  call void %43(%"class.device::UsbDevice"* nonnull %39) #13
  br label %44

44:                                               ; preds = %37, %32, %27
  %45 = bitcast %"struct.std::__1::pair"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %49, label %52

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  call void @_ZdlPv(i8* %51) #12
  br label %52

52:                                               ; preds = %49, %44, %23
  %53 = bitcast %"struct.std::__1::__hash_node"* %21 to i8*
  call void @_ZdlPv(i8* %53) #12
  br label %54

54:                                               ; preds = %18, %52
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #13
  %55 = bitcast %"class.std::__1::unique_ptr.240"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #13
  call void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_PvEEEE(%"class.std::__1::unique_ptr.240"* nonnull sret %4, %"class.std::__1::__hash_table.120"* %5, %"struct.std::__1::__hash_node_base.124"* nonnull %6) #13
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr.240", %"class.std::__1::unique_ptr.240"* %4, i64 0, i32 0, i32 0, i32 0
  %57 = load %"struct.std::__1::__hash_node.209"*, %"struct.std::__1::__hash_node.209"** %56, align 8
  store %"struct.std::__1::__hash_node.209"* null, %"struct.std::__1::__hash_node.209"** %56, align 8
  %58 = icmp eq %"struct.std::__1::__hash_node.209"* %57, null
  br i1 %58, label %74, label %59

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr.240", %"class.std::__1::unique_ptr.240"* %4, i64 0, i32 0, i32 1, i32 0, i32 1
  %61 = load i8, i8* %60, align 8, !range !18
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %72, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node.209", %"struct.std::__1::__hash_node.209"* %57, i64 0, i32 2
  %65 = bitcast %"class.std::__1::basic_string"* %64 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %64, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  call void @_ZdlPv(i8* %71) #12
  br label %72

72:                                               ; preds = %69, %63, %59
  %73 = bitcast %"struct.std::__1::__hash_node.209"* %57 to i8*
  call void @_ZdlPv(i8* %73) #12
  br label %74

74:                                               ; preds = %54, %72
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #13
  br i1 %14, label %75, label %76

75:                                               ; preds = %74
  call void @_ZN6device10UsbService19NotifyDeviceRemovedE13scoped_refptrINS_9UsbDeviceEE(%"class.device::UsbService"* %0, %"class.device::UsbDevice"* null)
  br label %90

76:                                               ; preds = %74
  %77 = getelementptr inbounds %"class.device::UsbDevice", %"class.device::UsbDevice"* %13, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = atomicrmw add i32* %77, i32 1 monotonic
  call void @_ZN6device10UsbService19NotifyDeviceRemovedE13scoped_refptrINS_9UsbDeviceEE(%"class.device::UsbService"* %0, %"class.device::UsbDevice"* nonnull %13)
  %79 = getelementptr inbounds %"class.device::UsbDevice", %"class.device::UsbDevice"* %13, i64 0, i32 1
  %80 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %79, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = atomicrmw sub i32* %80, i32 1 acq_rel
  %82 = icmp eq i32 %81, 1
  br i1 %82, label %83, label %90

83:                                               ; preds = %76
  %84 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %79, i64 -2
  %85 = bitcast %"class.base::RefCountedThreadSafe"* %84 to %"class.device::UsbDevice"*
  %86 = bitcast %"class.base::RefCountedThreadSafe"* %84 to void (%"class.device::UsbDevice"*)***
  %87 = load void (%"class.device::UsbDevice"*)**, void (%"class.device::UsbDevice"*)*** %86, align 8
  %88 = getelementptr inbounds void (%"class.device::UsbDevice"*)*, void (%"class.device::UsbDevice"*)** %87, i64 5
  %89 = load void (%"class.device::UsbDevice"*)*, void (%"class.device::UsbDevice"*)** %88, align 8
  call void %89(%"class.device::UsbDevice"* nonnull %85) #13
  br label %90

90:                                               ; preds = %2, %83, %76, %75
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device10UsbService19NotifyDeviceRemovedE13scoped_refptrINS_9UsbDeviceEE(%"class.device::UsbService"*, %"class.device::UsbDevice"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = alloca %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %5 = alloca %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %6 = alloca %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %7 = getelementptr inbounds %"class.device::UsbService", %"class.device::UsbService"* %0, i64 0, i32 3
  %8 = bitcast %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %8) #13
  %9 = getelementptr inbounds %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %11 = getelementptr inbounds %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %12 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %7, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 40, i1 false)
  %14 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %12, align 8, !noalias !19
  %15 = getelementptr inbounds %"class.device::UsbService", %"class.device::UsbService"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %16 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %15, align 8, !noalias !19
  %17 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %14, %16
  %18 = getelementptr inbounds %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %18) #13
  br i1 %17, label %19, label %21

19:                                               ; preds = %2
  %20 = bitcast %"class.base::ObserverList.141"** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #13, !alias.scope !19
  br label %61

21:                                               ; preds = %2
  store %"class.base::ObserverList.141"* %7, %"class.base::ObserverList.141"** %9, align 8, !alias.scope !19
  %22 = getelementptr inbounds %"class.device::UsbService", %"class.device::UsbService"* %0, i64 0, i32 3, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %18, %"class.base::internal::LinkNodeBase"* %22) #13
  store i64 0, i64* %10, align 8, !alias.scope !19
  %23 = getelementptr inbounds %"class.device::UsbService", %"class.device::UsbService"* %0, i64 0, i32 3, i32 3
  %24 = load i32, i32* %23, align 8, !noalias !19
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %33, label %26

26:                                               ; preds = %21
  %27 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %15 to i64*
  %28 = load i64, i64* %27, align 8, !noalias !19
  %29 = bitcast %"class.base::ObserverList.141"* %7 to i64*
  %30 = load i64, i64* %29, align 8, !noalias !19
  %31 = sub i64 %28, %30
  %32 = ashr exact i64 %31, 3
  br label %33

33:                                               ; preds = %26, %21
  %34 = phi i64 [ %32, %26 ], [ -1, %21 ]
  store i64 %34, i64* %11, align 8, !alias.scope !19
  %35 = load %"class.base::ObserverList.141"*, %"class.base::ObserverList.141"** %9, align 8, !alias.scope !19
  %36 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %35, i64 0, i32 0, i32 0, i32 1
  %37 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.base::ObserverList.141"* %35 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %38, %40
  %42 = ashr exact i64 %41, 3
  %43 = icmp ult i64 %42, %34
  %44 = select i1 %43, i64 %42, i64 %34
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %61, label %46

46:                                               ; preds = %33
  %47 = inttoptr i64 %40 to %"class.base::internal::UncheckedObserverAdapter"*
  %48 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %35, i64 0, i32 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %47, i64 0, i32 0
  %50 = load i8*, i8** %49, align 8
  %51 = icmp eq i8* %50, null
  br i1 %51, label %52, label %61

52:                                               ; preds = %46, %56
  %53 = phi i64 [ %54, %56 ], [ 0, %46 ]
  %54 = add nuw i64 %53, 1
  store i64 %54, i64* %10, align 8, !alias.scope !19
  %55 = icmp ult i64 %54, %44
  br i1 %55, label %56, label %61

56:                                               ; preds = %52
  %57 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %48, align 8
  %58 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %57, i64 %54, i32 0
  %59 = load i8*, i8** %58, align 8
  %60 = icmp eq i8* %59, null
  br i1 %60, label %52, label %61

61:                                               ; preds = %52, %56, %19, %33, %46
  %62 = bitcast %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %62) #13
  %63 = getelementptr inbounds %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %64 = getelementptr inbounds %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %65 = getelementptr inbounds %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %66 = getelementptr inbounds %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  %67 = bitcast %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %66) #13
  %68 = bitcast %"class.base::ObserverList.141"** %63 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 24, i1 false) #13, !alias.scope !22
  %69 = icmp eq %"class.device::UsbDevice"* %1, null
  %70 = getelementptr inbounds %"class.device::UsbDevice", %"class.device::UsbDevice"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load %"class.base::ObserverList.141"*, %"class.base::ObserverList.141"** %9, align 8
  br label %72

72:                                               ; preds = %375, %61
  %73 = phi %"class.base::ObserverList.141"* [ %71, %61 ], [ %373, %375 ]
  %74 = icmp eq %"class.base::ObserverList.141"* %73, null
  br i1 %74, label %90, label %75

75:                                               ; preds = %72
  %76 = load i64, i64* %10, align 8
  %77 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %73, i64 0, i32 0, i32 0, i32 1
  %78 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %"class.base::ObserverList.141"* %73 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = sub i64 %79, %81
  %83 = ashr exact i64 %82, 3
  %84 = load i64, i64* %11, align 8
  %85 = icmp ult i64 %83, %84
  %86 = select i1 %85, i64 %83, i64 %84
  %87 = icmp eq i64 %76, %86
  br i1 %87, label %90, label %88

88:                                               ; preds = %75
  %89 = load %"class.base::ObserverList.141"*, %"class.base::ObserverList.141"** %63, align 8
  br label %106

90:                                               ; preds = %75, %72
  %91 = load %"class.base::ObserverList.141"*, %"class.base::ObserverList.141"** %63, align 8
  %92 = icmp eq %"class.base::ObserverList.141"* %91, null
  br i1 %92, label %206, label %93

93:                                               ; preds = %90
  %94 = load i64, i64* %64, align 8
  %95 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %91, i64 0, i32 0, i32 0, i32 1
  %96 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %"class.base::ObserverList.141"* %91 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = sub i64 %97, %99
  %101 = ashr exact i64 %100, 3
  %102 = load i64, i64* %65, align 8
  %103 = icmp ult i64 %101, %102
  %104 = select i1 %103, i64 %101, i64 %102
  %105 = icmp eq i64 %94, %104
  br i1 %105, label %115, label %106

106:                                              ; preds = %93, %88
  %107 = phi %"class.base::ObserverList.141"* [ %89, %88 ], [ %91, %93 ]
  %108 = icmp eq %"class.base::ObserverList.141"* %73, %107
  %109 = load i64, i64* %10, align 8
  %110 = load i64, i64* %64, align 8
  %111 = icmp eq i64 %109, %110
  %112 = and i1 %108, %111
  br i1 %112, label %113, label %360

113:                                              ; preds = %106
  %114 = icmp eq %"class.base::ObserverList.141"* %73, null
  br i1 %114, label %206, label %115

115:                                              ; preds = %93, %113
  %116 = phi %"class.base::ObserverList.141"* [ %73, %113 ], [ %91, %93 ]
  %117 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %116, i64 0, i32 1
  %118 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %116, i64 0, i32 1, i32 0, i32 0, i32 1
  %119 = bitcast %"class.base::internal::LinkNodeBase"** %118 to %"class.base::LinkNode.143"**
  %120 = load %"class.base::LinkNode.143"*, %"class.base::LinkNode.143"** %119, align 8
  %121 = bitcast %"class.base::LinkedList.142"* %117 to %"class.base::LinkNode.143"**
  %122 = load %"class.base::LinkNode.143"*, %"class.base::LinkNode.143"** %121, align 8
  %123 = icmp eq %"class.base::LinkNode.143"* %120, %122
  br i1 %123, label %124, label %202

124:                                              ; preds = %115
  %125 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %116, i64 0, i32 0, i32 0, i32 0
  %126 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %125, align 8
  %127 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %116, i64 0, i32 0, i32 0, i32 1
  %128 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %127, align 8
  %129 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %126, %128
  br i1 %129, label %138, label %130

130:                                              ; preds = %124, %135
  %131 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %136, %135 ], [ %126, %124 ]
  %132 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %131, i64 0, i32 0
  %133 = load i8*, i8** %132, align 8
  %134 = icmp eq i8* %133, null
  br i1 %134, label %138, label %135

135:                                              ; preds = %130
  %136 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %131, i64 1
  %137 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %136, %128
  br i1 %137, label %202, label %130

138:                                              ; preds = %130, %124
  %139 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %126, %124 ], [ %131, %130 ]
  %140 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %139 to i64
  %141 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %139, %128
  br i1 %141, label %202, label %142

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %139, i64 1
  %144 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %143, %128
  br i1 %144, label %197, label %145

145:                                              ; preds = %142
  %146 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %128, i64 -2, i32 0
  %147 = ptrtoint i8** %146 to i64
  %148 = sub i64 %147, %140
  %149 = lshr i64 %148, 3
  %150 = add nuw nsw i64 %149, 1
  %151 = and i64 %150, 3
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %171, label %153

153:                                              ; preds = %145, %166
  %154 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %168, %166 ], [ %143, %145 ]
  %155 = phi i64 [ %167, %166 ], [ %140, %145 ]
  %156 = phi i64 [ %169, %166 ], [ %151, %145 ]
  %157 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %154, i64 0, i32 0
  %158 = load i8*, i8** %157, align 8
  %159 = icmp eq i8* %158, null
  br i1 %159, label %166, label %160

160:                                              ; preds = %153
  %161 = ptrtoint i8* %158 to i64
  %162 = inttoptr i64 %155 to %"class.base::internal::UncheckedObserverAdapter"*
  %163 = inttoptr i64 %155 to i64*
  store i64 %161, i64* %163, align 8
  %164 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %162, i64 1
  %165 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %164 to i64
  br label %166

166:                                              ; preds = %160, %153
  %167 = phi i64 [ %155, %153 ], [ %165, %160 ]
  %168 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %154, i64 1
  %169 = add i64 %156, -1
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %171, label %153, !llvm.loop !25

171:                                              ; preds = %166, %145
  %172 = phi i64 [ undef, %145 ], [ %167, %166 ]
  %173 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %143, %145 ], [ %168, %166 ]
  %174 = phi i64 [ %140, %145 ], [ %167, %166 ]
  %175 = icmp ult i64 %148, 24
  br i1 %175, label %193, label %176

176:                                              ; preds = %171, %815
  %177 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %817, %815 ], [ %173, %171 ]
  %178 = phi i64 [ %816, %815 ], [ %174, %171 ]
  %179 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %177, i64 0, i32 0
  %180 = load i8*, i8** %179, align 8
  %181 = icmp eq i8* %180, null
  br i1 %181, label %188, label %182

182:                                              ; preds = %176
  %183 = ptrtoint i8* %180 to i64
  %184 = inttoptr i64 %178 to %"class.base::internal::UncheckedObserverAdapter"*
  %185 = inttoptr i64 %178 to i64*
  store i64 %183, i64* %185, align 8
  %186 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %184, i64 1
  %187 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %186 to i64
  br label %188

188:                                              ; preds = %182, %176
  %189 = phi i64 [ %178, %176 ], [ %187, %182 ]
  %190 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %177, i64 1, i32 0
  %191 = load i8*, i8** %190, align 8
  %192 = icmp eq i8* %191, null
  br i1 %192, label %793, label %787

193:                                              ; preds = %815, %171
  %194 = phi i64 [ %172, %171 ], [ %816, %815 ]
  %195 = inttoptr i64 %194 to %"class.base::internal::UncheckedObserverAdapter"*
  %196 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %127, align 8
  br label %197

197:                                              ; preds = %193, %142
  %198 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %128, %142 ], [ %196, %193 ]
  %199 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %139, %142 ], [ %195, %193 ]
  %200 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %199, %198
  br i1 %200, label %202, label %201

201:                                              ; preds = %197
  store %"class.base::internal::UncheckedObserverAdapter"* %199, %"class.base::internal::UncheckedObserverAdapter"** %127, align 8
  br label %202

202:                                              ; preds = %135, %201, %197, %138, %115
  %203 = load %"class.base::ObserverList.141"*, %"class.base::ObserverList.141"** %63, align 8
  %204 = icmp eq %"class.base::ObserverList.141"* %203, null
  br i1 %204, label %206, label %205

205:                                              ; preds = %202
  store %"class.base::ObserverList.141"* null, %"class.base::ObserverList.141"** %63, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %66) #13
  br label %206

206:                                              ; preds = %90, %113, %202, %205
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %62) #13
  %207 = load %"class.base::ObserverList.141"*, %"class.base::ObserverList.141"** %9, align 8
  %208 = icmp eq %"class.base::ObserverList.141"* %207, null
  br i1 %208, label %299, label %209

209:                                              ; preds = %206
  %210 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %207, i64 0, i32 1
  %211 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %207, i64 0, i32 1, i32 0, i32 0, i32 1
  %212 = bitcast %"class.base::internal::LinkNodeBase"** %211 to %"class.base::LinkNode.143"**
  %213 = load %"class.base::LinkNode.143"*, %"class.base::LinkNode.143"** %212, align 8
  %214 = bitcast %"class.base::LinkedList.142"* %210 to %"class.base::LinkNode.143"**
  %215 = load %"class.base::LinkNode.143"*, %"class.base::LinkNode.143"** %214, align 8
  %216 = icmp eq %"class.base::LinkNode.143"* %213, %215
  br i1 %216, label %217, label %295

217:                                              ; preds = %209
  %218 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %207, i64 0, i32 0, i32 0, i32 0
  %219 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %218, align 8
  %220 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %207, i64 0, i32 0, i32 0, i32 1
  %221 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %220, align 8
  %222 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %219, %221
  br i1 %222, label %231, label %223

223:                                              ; preds = %217, %228
  %224 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %229, %228 ], [ %219, %217 ]
  %225 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %224, i64 0, i32 0
  %226 = load i8*, i8** %225, align 8
  %227 = icmp eq i8* %226, null
  br i1 %227, label %231, label %228

228:                                              ; preds = %223
  %229 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %224, i64 1
  %230 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %229, %221
  br i1 %230, label %295, label %223

231:                                              ; preds = %223, %217
  %232 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %219, %217 ], [ %224, %223 ]
  %233 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %232 to i64
  %234 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %232, %221
  br i1 %234, label %295, label %235

235:                                              ; preds = %231
  %236 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %232, i64 1
  %237 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %236, %221
  br i1 %237, label %290, label %238

238:                                              ; preds = %235
  %239 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %221, i64 -2, i32 0
  %240 = ptrtoint i8** %239 to i64
  %241 = sub i64 %240, %233
  %242 = lshr i64 %241, 3
  %243 = add nuw nsw i64 %242, 1
  %244 = and i64 %243, 3
  %245 = icmp eq i64 %244, 0
  br i1 %245, label %264, label %246

246:                                              ; preds = %238, %259
  %247 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %261, %259 ], [ %236, %238 ]
  %248 = phi i64 [ %260, %259 ], [ %233, %238 ]
  %249 = phi i64 [ %262, %259 ], [ %244, %238 ]
  %250 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %247, i64 0, i32 0
  %251 = load i8*, i8** %250, align 8
  %252 = icmp eq i8* %251, null
  br i1 %252, label %259, label %253

253:                                              ; preds = %246
  %254 = ptrtoint i8* %251 to i64
  %255 = inttoptr i64 %248 to %"class.base::internal::UncheckedObserverAdapter"*
  %256 = inttoptr i64 %248 to i64*
  store i64 %254, i64* %256, align 8
  %257 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %255, i64 1
  %258 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %257 to i64
  br label %259

259:                                              ; preds = %253, %246
  %260 = phi i64 [ %248, %246 ], [ %258, %253 ]
  %261 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %247, i64 1
  %262 = add i64 %249, -1
  %263 = icmp eq i64 %262, 0
  br i1 %263, label %264, label %246, !llvm.loop !26

264:                                              ; preds = %259, %238
  %265 = phi i64 [ undef, %238 ], [ %260, %259 ]
  %266 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %236, %238 ], [ %261, %259 ]
  %267 = phi i64 [ %233, %238 ], [ %260, %259 ]
  %268 = icmp ult i64 %241, 24
  br i1 %268, label %286, label %269

269:                                              ; preds = %264, %783
  %270 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %785, %783 ], [ %266, %264 ]
  %271 = phi i64 [ %784, %783 ], [ %267, %264 ]
  %272 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %270, i64 0, i32 0
  %273 = load i8*, i8** %272, align 8
  %274 = icmp eq i8* %273, null
  br i1 %274, label %281, label %275

275:                                              ; preds = %269
  %276 = ptrtoint i8* %273 to i64
  %277 = inttoptr i64 %271 to %"class.base::internal::UncheckedObserverAdapter"*
  %278 = inttoptr i64 %271 to i64*
  store i64 %276, i64* %278, align 8
  %279 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %277, i64 1
  %280 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %279 to i64
  br label %281

281:                                              ; preds = %275, %269
  %282 = phi i64 [ %271, %269 ], [ %280, %275 ]
  %283 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %270, i64 1, i32 0
  %284 = load i8*, i8** %283, align 8
  %285 = icmp eq i8* %284, null
  br i1 %285, label %761, label %755

286:                                              ; preds = %783, %264
  %287 = phi i64 [ %265, %264 ], [ %784, %783 ]
  %288 = inttoptr i64 %287 to %"class.base::internal::UncheckedObserverAdapter"*
  %289 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %220, align 8
  br label %290

290:                                              ; preds = %286, %235
  %291 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %221, %235 ], [ %289, %286 ]
  %292 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %232, %235 ], [ %288, %286 ]
  %293 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %292, %291
  br i1 %293, label %295, label %294

294:                                              ; preds = %290
  store %"class.base::internal::UncheckedObserverAdapter"* %292, %"class.base::internal::UncheckedObserverAdapter"** %220, align 8
  br label %295

295:                                              ; preds = %228, %294, %290, %231, %209
  %296 = load %"class.base::ObserverList.141"*, %"class.base::ObserverList.141"** %9, align 8
  %297 = icmp eq %"class.base::ObserverList.141"* %296, null
  br i1 %297, label %299, label %298

298:                                              ; preds = %295
  store %"class.base::ObserverList.141"* null, %"class.base::ObserverList.141"** %9, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %18) #13
  br label %299

299:                                              ; preds = %206, %295, %298
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %8) #13
  call void @_ZN6device9UsbDevice19NotifyDeviceRemovedEv(%"class.device::UsbDevice"* %1) #13
  %300 = bitcast %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %300) #13
  %301 = getelementptr inbounds %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 1
  %302 = getelementptr inbounds %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 1
  %303 = getelementptr inbounds %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 2
  %304 = bitcast %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %304, i8 -86, i64 40, i1 false)
  %305 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %12, align 8, !noalias !27
  %306 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %15, align 8, !noalias !27
  %307 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %305, %306
  %308 = getelementptr inbounds %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %308) #13
  br i1 %307, label %309, label %311

309:                                              ; preds = %299
  %310 = bitcast %"class.base::ObserverList.141"** %301 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %310, i8 0, i64 24, i1 false) #13, !alias.scope !27
  br label %351

311:                                              ; preds = %299
  store %"class.base::ObserverList.141"* %7, %"class.base::ObserverList.141"** %301, align 8, !alias.scope !27
  %312 = getelementptr inbounds %"class.device::UsbService", %"class.device::UsbService"* %0, i64 0, i32 3, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %308, %"class.base::internal::LinkNodeBase"* %312) #13
  store i64 0, i64* %302, align 8, !alias.scope !27
  %313 = getelementptr inbounds %"class.device::UsbService", %"class.device::UsbService"* %0, i64 0, i32 3, i32 3
  %314 = load i32, i32* %313, align 8, !noalias !27
  %315 = icmp eq i32 %314, 0
  br i1 %315, label %323, label %316

316:                                              ; preds = %311
  %317 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %15 to i64*
  %318 = load i64, i64* %317, align 8, !noalias !27
  %319 = bitcast %"class.base::ObserverList.141"* %7 to i64*
  %320 = load i64, i64* %319, align 8, !noalias !27
  %321 = sub i64 %318, %320
  %322 = ashr exact i64 %321, 3
  br label %323

323:                                              ; preds = %316, %311
  %324 = phi i64 [ %322, %316 ], [ -1, %311 ]
  store i64 %324, i64* %303, align 8, !alias.scope !27
  %325 = load %"class.base::ObserverList.141"*, %"class.base::ObserverList.141"** %301, align 8, !alias.scope !27
  %326 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %325, i64 0, i32 0, i32 0, i32 1
  %327 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = bitcast %"class.base::ObserverList.141"* %325 to i64*
  %330 = load i64, i64* %329, align 8
  %331 = sub i64 %328, %330
  %332 = ashr exact i64 %331, 3
  %333 = icmp ult i64 %332, %324
  %334 = select i1 %333, i64 %332, i64 %324
  %335 = icmp eq i64 %334, 0
  br i1 %335, label %351, label %336

336:                                              ; preds = %323
  %337 = inttoptr i64 %330 to %"class.base::internal::UncheckedObserverAdapter"*
  %338 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %325, i64 0, i32 0, i32 0, i32 0
  %339 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %337, i64 0, i32 0
  %340 = load i8*, i8** %339, align 8
  %341 = icmp eq i8* %340, null
  br i1 %341, label %342, label %351

342:                                              ; preds = %336, %346
  %343 = phi i64 [ %344, %346 ], [ 0, %336 ]
  %344 = add nuw i64 %343, 1
  store i64 %344, i64* %302, align 8, !alias.scope !27
  %345 = icmp ult i64 %344, %334
  br i1 %345, label %346, label %351

346:                                              ; preds = %342
  %347 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %338, align 8
  %348 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %347, i64 %344, i32 0
  %349 = load i8*, i8** %348, align 8
  %350 = icmp eq i8* %349, null
  br i1 %350, label %342, label %351

351:                                              ; preds = %342, %346, %309, %323, %336
  %352 = bitcast %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %352) #13
  %353 = getelementptr inbounds %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 0, i32 1
  %354 = getelementptr inbounds %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 1
  %355 = getelementptr inbounds %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 2
  %356 = getelementptr inbounds %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 0, i32 0, i32 0
  %357 = bitcast %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %357, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %356) #13
  %358 = bitcast %"class.base::ObserverList.141"** %353 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %358, i8 0, i64 24, i1 false) #13, !alias.scope !30
  %359 = load %"class.base::ObserverList.141"*, %"class.base::ObserverList.141"** %301, align 8
  br label %405

360:                                              ; preds = %106
  %361 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %73, i64 0, i32 0, i32 0, i32 0
  %362 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %361, align 8
  %363 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %362, i64 %109
  %364 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %363 to %"class.device::UsbService::Observer"**
  %365 = load %"class.device::UsbService::Observer"*, %"class.device::UsbService::Observer"** %364, align 8
  br i1 %69, label %368, label %366

366:                                              ; preds = %360
  %367 = atomicrmw add i32* %70, i32 1 monotonic
  br label %368

368:                                              ; preds = %360, %366
  %369 = bitcast %"class.device::UsbService::Observer"* %365 to void (%"class.device::UsbService::Observer"*, %"class.device::UsbDevice"*)***
  %370 = load void (%"class.device::UsbService::Observer"*, %"class.device::UsbDevice"*)**, void (%"class.device::UsbService::Observer"*, %"class.device::UsbDevice"*)*** %369, align 8
  %371 = getelementptr inbounds void (%"class.device::UsbService::Observer"*, %"class.device::UsbDevice"*)*, void (%"class.device::UsbService::Observer"*, %"class.device::UsbDevice"*)** %370, i64 3
  %372 = load void (%"class.device::UsbService::Observer"*, %"class.device::UsbDevice"*)*, void (%"class.device::UsbService::Observer"*, %"class.device::UsbDevice"*)** %371, align 8
  call void %372(%"class.device::UsbService::Observer"* %365, %"class.device::UsbDevice"* %1) #13
  %373 = load %"class.base::ObserverList.141"*, %"class.base::ObserverList.141"** %9, align 8
  %374 = icmp eq %"class.base::ObserverList.141"* %373, null
  br i1 %374, label %375, label %376

375:                                              ; preds = %400, %396, %368, %376, %390
  br label %72

376:                                              ; preds = %368
  %377 = load i64, i64* %10, align 8
  %378 = add i64 %377, 1
  store i64 %378, i64* %10, align 8
  %379 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %373, i64 0, i32 0, i32 0, i32 1
  %380 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %379 to i64*
  %381 = load i64, i64* %380, align 8
  %382 = bitcast %"class.base::ObserverList.141"* %373 to i64*
  %383 = load i64, i64* %382, align 8
  %384 = sub i64 %381, %383
  %385 = ashr exact i64 %384, 3
  %386 = load i64, i64* %11, align 8
  %387 = icmp ult i64 %385, %386
  %388 = select i1 %387, i64 %385, i64 %386
  %389 = icmp ult i64 %378, %388
  br i1 %389, label %390, label %375

390:                                              ; preds = %376
  %391 = inttoptr i64 %383 to %"class.base::internal::UncheckedObserverAdapter"*
  %392 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %373, i64 0, i32 0, i32 0, i32 0
  %393 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %391, i64 %378, i32 0
  %394 = load i8*, i8** %393, align 8
  %395 = icmp eq i8* %394, null
  br i1 %395, label %396, label %375

396:                                              ; preds = %390, %400
  %397 = phi i64 [ %398, %400 ], [ %378, %390 ]
  %398 = add nuw i64 %397, 1
  store i64 %398, i64* %10, align 8
  %399 = icmp ult i64 %398, %388
  br i1 %399, label %400, label %375

400:                                              ; preds = %396
  %401 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %392, align 8
  %402 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %401, i64 %398, i32 0
  %403 = load i8*, i8** %402, align 8
  %404 = icmp eq i8* %403, null
  br i1 %404, label %396, label %375

405:                                              ; preds = %661, %351
  %406 = phi %"class.base::ObserverList.141"* [ %359, %351 ], [ %659, %661 ]
  %407 = icmp eq %"class.base::ObserverList.141"* %406, null
  br i1 %407, label %423, label %408

408:                                              ; preds = %405
  %409 = load i64, i64* %302, align 8
  %410 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %406, i64 0, i32 0, i32 0, i32 1
  %411 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %410 to i64*
  %412 = load i64, i64* %411, align 8
  %413 = bitcast %"class.base::ObserverList.141"* %406 to i64*
  %414 = load i64, i64* %413, align 8
  %415 = sub i64 %412, %414
  %416 = ashr exact i64 %415, 3
  %417 = load i64, i64* %303, align 8
  %418 = icmp ult i64 %416, %417
  %419 = select i1 %418, i64 %416, i64 %417
  %420 = icmp eq i64 %409, %419
  br i1 %420, label %423, label %421

421:                                              ; preds = %408
  %422 = load %"class.base::ObserverList.141"*, %"class.base::ObserverList.141"** %353, align 8
  br label %439

423:                                              ; preds = %408, %405
  %424 = load %"class.base::ObserverList.141"*, %"class.base::ObserverList.141"** %353, align 8
  %425 = icmp eq %"class.base::ObserverList.141"* %424, null
  br i1 %425, label %539, label %426

426:                                              ; preds = %423
  %427 = load i64, i64* %354, align 8
  %428 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %424, i64 0, i32 0, i32 0, i32 1
  %429 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %428 to i64*
  %430 = load i64, i64* %429, align 8
  %431 = bitcast %"class.base::ObserverList.141"* %424 to i64*
  %432 = load i64, i64* %431, align 8
  %433 = sub i64 %430, %432
  %434 = ashr exact i64 %433, 3
  %435 = load i64, i64* %355, align 8
  %436 = icmp ult i64 %434, %435
  %437 = select i1 %436, i64 %434, i64 %435
  %438 = icmp eq i64 %427, %437
  br i1 %438, label %448, label %439

439:                                              ; preds = %426, %421
  %440 = phi %"class.base::ObserverList.141"* [ %422, %421 ], [ %424, %426 ]
  %441 = icmp eq %"class.base::ObserverList.141"* %406, %440
  %442 = load i64, i64* %302, align 8
  %443 = load i64, i64* %354, align 8
  %444 = icmp eq i64 %442, %443
  %445 = and i1 %441, %444
  br i1 %445, label %446, label %646

446:                                              ; preds = %439
  %447 = icmp eq %"class.base::ObserverList.141"* %406, null
  br i1 %447, label %539, label %448

448:                                              ; preds = %426, %446
  %449 = phi %"class.base::ObserverList.141"* [ %406, %446 ], [ %424, %426 ]
  %450 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %449, i64 0, i32 1
  %451 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %449, i64 0, i32 1, i32 0, i32 0, i32 1
  %452 = bitcast %"class.base::internal::LinkNodeBase"** %451 to %"class.base::LinkNode.143"**
  %453 = load %"class.base::LinkNode.143"*, %"class.base::LinkNode.143"** %452, align 8
  %454 = bitcast %"class.base::LinkedList.142"* %450 to %"class.base::LinkNode.143"**
  %455 = load %"class.base::LinkNode.143"*, %"class.base::LinkNode.143"** %454, align 8
  %456 = icmp eq %"class.base::LinkNode.143"* %453, %455
  br i1 %456, label %457, label %535

457:                                              ; preds = %448
  %458 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %449, i64 0, i32 0, i32 0, i32 0
  %459 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %458, align 8
  %460 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %449, i64 0, i32 0, i32 0, i32 1
  %461 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %460, align 8
  %462 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %459, %461
  br i1 %462, label %471, label %463

463:                                              ; preds = %457, %468
  %464 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %469, %468 ], [ %459, %457 ]
  %465 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %464, i64 0, i32 0
  %466 = load i8*, i8** %465, align 8
  %467 = icmp eq i8* %466, null
  br i1 %467, label %471, label %468

468:                                              ; preds = %463
  %469 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %464, i64 1
  %470 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %469, %461
  br i1 %470, label %535, label %463

471:                                              ; preds = %463, %457
  %472 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %459, %457 ], [ %464, %463 ]
  %473 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %472 to i64
  %474 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %472, %461
  br i1 %474, label %535, label %475

475:                                              ; preds = %471
  %476 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %472, i64 1
  %477 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %476, %461
  br i1 %477, label %530, label %478

478:                                              ; preds = %475
  %479 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %461, i64 -2, i32 0
  %480 = ptrtoint i8** %479 to i64
  %481 = sub i64 %480, %473
  %482 = lshr i64 %481, 3
  %483 = add nuw nsw i64 %482, 1
  %484 = and i64 %483, 3
  %485 = icmp eq i64 %484, 0
  br i1 %485, label %504, label %486

486:                                              ; preds = %478, %499
  %487 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %501, %499 ], [ %476, %478 ]
  %488 = phi i64 [ %500, %499 ], [ %473, %478 ]
  %489 = phi i64 [ %502, %499 ], [ %484, %478 ]
  %490 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %487, i64 0, i32 0
  %491 = load i8*, i8** %490, align 8
  %492 = icmp eq i8* %491, null
  br i1 %492, label %499, label %493

493:                                              ; preds = %486
  %494 = ptrtoint i8* %491 to i64
  %495 = inttoptr i64 %488 to %"class.base::internal::UncheckedObserverAdapter"*
  %496 = inttoptr i64 %488 to i64*
  store i64 %494, i64* %496, align 8
  %497 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %495, i64 1
  %498 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %497 to i64
  br label %499

499:                                              ; preds = %493, %486
  %500 = phi i64 [ %488, %486 ], [ %498, %493 ]
  %501 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %487, i64 1
  %502 = add i64 %489, -1
  %503 = icmp eq i64 %502, 0
  br i1 %503, label %504, label %486, !llvm.loop !33

504:                                              ; preds = %499, %478
  %505 = phi i64 [ undef, %478 ], [ %500, %499 ]
  %506 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %476, %478 ], [ %501, %499 ]
  %507 = phi i64 [ %473, %478 ], [ %500, %499 ]
  %508 = icmp ult i64 %481, 24
  br i1 %508, label %526, label %509

509:                                              ; preds = %504, %751
  %510 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %753, %751 ], [ %506, %504 ]
  %511 = phi i64 [ %752, %751 ], [ %507, %504 ]
  %512 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %510, i64 0, i32 0
  %513 = load i8*, i8** %512, align 8
  %514 = icmp eq i8* %513, null
  br i1 %514, label %521, label %515

515:                                              ; preds = %509
  %516 = ptrtoint i8* %513 to i64
  %517 = inttoptr i64 %511 to %"class.base::internal::UncheckedObserverAdapter"*
  %518 = inttoptr i64 %511 to i64*
  store i64 %516, i64* %518, align 8
  %519 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %517, i64 1
  %520 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %519 to i64
  br label %521

521:                                              ; preds = %515, %509
  %522 = phi i64 [ %511, %509 ], [ %520, %515 ]
  %523 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %510, i64 1, i32 0
  %524 = load i8*, i8** %523, align 8
  %525 = icmp eq i8* %524, null
  br i1 %525, label %729, label %723

526:                                              ; preds = %751, %504
  %527 = phi i64 [ %505, %504 ], [ %752, %751 ]
  %528 = inttoptr i64 %527 to %"class.base::internal::UncheckedObserverAdapter"*
  %529 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %460, align 8
  br label %530

530:                                              ; preds = %526, %475
  %531 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %461, %475 ], [ %529, %526 ]
  %532 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %472, %475 ], [ %528, %526 ]
  %533 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %532, %531
  br i1 %533, label %535, label %534

534:                                              ; preds = %530
  store %"class.base::internal::UncheckedObserverAdapter"* %532, %"class.base::internal::UncheckedObserverAdapter"** %460, align 8
  br label %535

535:                                              ; preds = %468, %534, %530, %471, %448
  %536 = load %"class.base::ObserverList.141"*, %"class.base::ObserverList.141"** %353, align 8
  %537 = icmp eq %"class.base::ObserverList.141"* %536, null
  br i1 %537, label %539, label %538

538:                                              ; preds = %535
  store %"class.base::ObserverList.141"* null, %"class.base::ObserverList.141"** %353, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %356) #13
  br label %539

539:                                              ; preds = %423, %446, %535, %538
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %352) #13
  %540 = load %"class.base::ObserverList.141"*, %"class.base::ObserverList.141"** %301, align 8
  %541 = icmp eq %"class.base::ObserverList.141"* %540, null
  br i1 %541, label %632, label %542

542:                                              ; preds = %539
  %543 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %540, i64 0, i32 1
  %544 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %540, i64 0, i32 1, i32 0, i32 0, i32 1
  %545 = bitcast %"class.base::internal::LinkNodeBase"** %544 to %"class.base::LinkNode.143"**
  %546 = load %"class.base::LinkNode.143"*, %"class.base::LinkNode.143"** %545, align 8
  %547 = bitcast %"class.base::LinkedList.142"* %543 to %"class.base::LinkNode.143"**
  %548 = load %"class.base::LinkNode.143"*, %"class.base::LinkNode.143"** %547, align 8
  %549 = icmp eq %"class.base::LinkNode.143"* %546, %548
  br i1 %549, label %550, label %628

550:                                              ; preds = %542
  %551 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %540, i64 0, i32 0, i32 0, i32 0
  %552 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %551, align 8
  %553 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %540, i64 0, i32 0, i32 0, i32 1
  %554 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %553, align 8
  %555 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %552, %554
  br i1 %555, label %564, label %556

556:                                              ; preds = %550, %561
  %557 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %562, %561 ], [ %552, %550 ]
  %558 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %557, i64 0, i32 0
  %559 = load i8*, i8** %558, align 8
  %560 = icmp eq i8* %559, null
  br i1 %560, label %564, label %561

561:                                              ; preds = %556
  %562 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %557, i64 1
  %563 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %562, %554
  br i1 %563, label %628, label %556

564:                                              ; preds = %556, %550
  %565 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %552, %550 ], [ %557, %556 ]
  %566 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %565 to i64
  %567 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %565, %554
  br i1 %567, label %628, label %568

568:                                              ; preds = %564
  %569 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %565, i64 1
  %570 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %569, %554
  br i1 %570, label %623, label %571

571:                                              ; preds = %568
  %572 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %554, i64 -2, i32 0
  %573 = ptrtoint i8** %572 to i64
  %574 = sub i64 %573, %566
  %575 = lshr i64 %574, 3
  %576 = add nuw nsw i64 %575, 1
  %577 = and i64 %576, 3
  %578 = icmp eq i64 %577, 0
  br i1 %578, label %597, label %579

579:                                              ; preds = %571, %592
  %580 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %594, %592 ], [ %569, %571 ]
  %581 = phi i64 [ %593, %592 ], [ %566, %571 ]
  %582 = phi i64 [ %595, %592 ], [ %577, %571 ]
  %583 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %580, i64 0, i32 0
  %584 = load i8*, i8** %583, align 8
  %585 = icmp eq i8* %584, null
  br i1 %585, label %592, label %586

586:                                              ; preds = %579
  %587 = ptrtoint i8* %584 to i64
  %588 = inttoptr i64 %581 to %"class.base::internal::UncheckedObserverAdapter"*
  %589 = inttoptr i64 %581 to i64*
  store i64 %587, i64* %589, align 8
  %590 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %588, i64 1
  %591 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %590 to i64
  br label %592

592:                                              ; preds = %586, %579
  %593 = phi i64 [ %581, %579 ], [ %591, %586 ]
  %594 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %580, i64 1
  %595 = add i64 %582, -1
  %596 = icmp eq i64 %595, 0
  br i1 %596, label %597, label %579, !llvm.loop !34

597:                                              ; preds = %592, %571
  %598 = phi i64 [ undef, %571 ], [ %593, %592 ]
  %599 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %569, %571 ], [ %594, %592 ]
  %600 = phi i64 [ %566, %571 ], [ %593, %592 ]
  %601 = icmp ult i64 %574, 24
  br i1 %601, label %619, label %602

602:                                              ; preds = %597, %719
  %603 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %721, %719 ], [ %599, %597 ]
  %604 = phi i64 [ %720, %719 ], [ %600, %597 ]
  %605 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %603, i64 0, i32 0
  %606 = load i8*, i8** %605, align 8
  %607 = icmp eq i8* %606, null
  br i1 %607, label %614, label %608

608:                                              ; preds = %602
  %609 = ptrtoint i8* %606 to i64
  %610 = inttoptr i64 %604 to %"class.base::internal::UncheckedObserverAdapter"*
  %611 = inttoptr i64 %604 to i64*
  store i64 %609, i64* %611, align 8
  %612 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %610, i64 1
  %613 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %612 to i64
  br label %614

614:                                              ; preds = %608, %602
  %615 = phi i64 [ %604, %602 ], [ %613, %608 ]
  %616 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %603, i64 1, i32 0
  %617 = load i8*, i8** %616, align 8
  %618 = icmp eq i8* %617, null
  br i1 %618, label %697, label %691

619:                                              ; preds = %719, %597
  %620 = phi i64 [ %598, %597 ], [ %720, %719 ]
  %621 = inttoptr i64 %620 to %"class.base::internal::UncheckedObserverAdapter"*
  %622 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %553, align 8
  br label %623

623:                                              ; preds = %619, %568
  %624 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %554, %568 ], [ %622, %619 ]
  %625 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %565, %568 ], [ %621, %619 ]
  %626 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %625, %624
  br i1 %626, label %628, label %627

627:                                              ; preds = %623
  store %"class.base::internal::UncheckedObserverAdapter"* %625, %"class.base::internal::UncheckedObserverAdapter"** %553, align 8
  br label %628

628:                                              ; preds = %561, %627, %623, %564, %542
  %629 = load %"class.base::ObserverList.141"*, %"class.base::ObserverList.141"** %301, align 8
  %630 = icmp eq %"class.base::ObserverList.141"* %629, null
  br i1 %630, label %632, label %631

631:                                              ; preds = %628
  store %"class.base::ObserverList.141"* null, %"class.base::ObserverList.141"** %301, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %308) #13
  br label %632

632:                                              ; preds = %539, %628, %631
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %300) #13
  br i1 %69, label %645, label %633

633:                                              ; preds = %632
  %634 = getelementptr inbounds %"class.device::UsbDevice", %"class.device::UsbDevice"* %1, i64 0, i32 1
  %635 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %634, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %636 = atomicrmw sub i32* %635, i32 1 acq_rel
  %637 = icmp eq i32 %636, 1
  br i1 %637, label %638, label %645

638:                                              ; preds = %633
  %639 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %634, i64 -2
  %640 = bitcast %"class.base::RefCountedThreadSafe"* %639 to %"class.device::UsbDevice"*
  %641 = bitcast %"class.base::RefCountedThreadSafe"* %639 to void (%"class.device::UsbDevice"*)***
  %642 = load void (%"class.device::UsbDevice"*)**, void (%"class.device::UsbDevice"*)*** %641, align 8
  %643 = getelementptr inbounds void (%"class.device::UsbDevice"*)*, void (%"class.device::UsbDevice"*)** %642, i64 5
  %644 = load void (%"class.device::UsbDevice"*)*, void (%"class.device::UsbDevice"*)** %643, align 8
  call void %644(%"class.device::UsbDevice"* nonnull %640) #13
  br label %645

645:                                              ; preds = %632, %633, %638
  ret void

646:                                              ; preds = %439
  %647 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %406, i64 0, i32 0, i32 0, i32 0
  %648 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %647, align 8
  %649 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %648, i64 %442
  %650 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %649 to %"class.device::UsbService::Observer"**
  %651 = load %"class.device::UsbService::Observer"*, %"class.device::UsbService::Observer"** %650, align 8
  br i1 %69, label %654, label %652

652:                                              ; preds = %646
  %653 = atomicrmw add i32* %70, i32 1 monotonic
  br label %654

654:                                              ; preds = %646, %652
  %655 = bitcast %"class.device::UsbService::Observer"* %651 to void (%"class.device::UsbService::Observer"*, %"class.device::UsbDevice"*)***
  %656 = load void (%"class.device::UsbService::Observer"*, %"class.device::UsbDevice"*)**, void (%"class.device::UsbService::Observer"*, %"class.device::UsbDevice"*)*** %655, align 8
  %657 = getelementptr inbounds void (%"class.device::UsbService::Observer"*, %"class.device::UsbDevice"*)*, void (%"class.device::UsbService::Observer"*, %"class.device::UsbDevice"*)** %656, i64 4
  %658 = load void (%"class.device::UsbService::Observer"*, %"class.device::UsbDevice"*)*, void (%"class.device::UsbService::Observer"*, %"class.device::UsbDevice"*)** %657, align 8
  call void %658(%"class.device::UsbService::Observer"* %651, %"class.device::UsbDevice"* %1) #13
  %659 = load %"class.base::ObserverList.141"*, %"class.base::ObserverList.141"** %301, align 8
  %660 = icmp eq %"class.base::ObserverList.141"* %659, null
  br i1 %660, label %661, label %662

661:                                              ; preds = %686, %682, %654, %662, %676
  br label %405

662:                                              ; preds = %654
  %663 = load i64, i64* %302, align 8
  %664 = add i64 %663, 1
  store i64 %664, i64* %302, align 8
  %665 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %659, i64 0, i32 0, i32 0, i32 1
  %666 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %665 to i64*
  %667 = load i64, i64* %666, align 8
  %668 = bitcast %"class.base::ObserverList.141"* %659 to i64*
  %669 = load i64, i64* %668, align 8
  %670 = sub i64 %667, %669
  %671 = ashr exact i64 %670, 3
  %672 = load i64, i64* %303, align 8
  %673 = icmp ult i64 %671, %672
  %674 = select i1 %673, i64 %671, i64 %672
  %675 = icmp ult i64 %664, %674
  br i1 %675, label %676, label %661

676:                                              ; preds = %662
  %677 = inttoptr i64 %669 to %"class.base::internal::UncheckedObserverAdapter"*
  %678 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %659, i64 0, i32 0, i32 0, i32 0
  %679 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %677, i64 %664, i32 0
  %680 = load i8*, i8** %679, align 8
  %681 = icmp eq i8* %680, null
  br i1 %681, label %682, label %661

682:                                              ; preds = %676, %686
  %683 = phi i64 [ %684, %686 ], [ %664, %676 ]
  %684 = add nuw i64 %683, 1
  store i64 %684, i64* %302, align 8
  %685 = icmp ult i64 %684, %674
  br i1 %685, label %686, label %661

686:                                              ; preds = %682
  %687 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %678, align 8
  %688 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %687, i64 %684, i32 0
  %689 = load i8*, i8** %688, align 8
  %690 = icmp eq i8* %689, null
  br i1 %690, label %682, label %661

691:                                              ; preds = %614
  %692 = ptrtoint i8* %617 to i64
  %693 = inttoptr i64 %615 to %"class.base::internal::UncheckedObserverAdapter"*
  %694 = inttoptr i64 %615 to i64*
  store i64 %692, i64* %694, align 8
  %695 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %693, i64 1
  %696 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %695 to i64
  br label %697

697:                                              ; preds = %691, %614
  %698 = phi i64 [ %615, %614 ], [ %696, %691 ]
  %699 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %603, i64 2, i32 0
  %700 = load i8*, i8** %699, align 8
  %701 = icmp eq i8* %700, null
  br i1 %701, label %708, label %702

702:                                              ; preds = %697
  %703 = ptrtoint i8* %700 to i64
  %704 = inttoptr i64 %698 to %"class.base::internal::UncheckedObserverAdapter"*
  %705 = inttoptr i64 %698 to i64*
  store i64 %703, i64* %705, align 8
  %706 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %704, i64 1
  %707 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %706 to i64
  br label %708

708:                                              ; preds = %702, %697
  %709 = phi i64 [ %698, %697 ], [ %707, %702 ]
  %710 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %603, i64 3, i32 0
  %711 = load i8*, i8** %710, align 8
  %712 = icmp eq i8* %711, null
  br i1 %712, label %719, label %713

713:                                              ; preds = %708
  %714 = ptrtoint i8* %711 to i64
  %715 = inttoptr i64 %709 to %"class.base::internal::UncheckedObserverAdapter"*
  %716 = inttoptr i64 %709 to i64*
  store i64 %714, i64* %716, align 8
  %717 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %715, i64 1
  %718 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %717 to i64
  br label %719

719:                                              ; preds = %713, %708
  %720 = phi i64 [ %709, %708 ], [ %718, %713 ]
  %721 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %603, i64 4
  %722 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %721, %554
  br i1 %722, label %619, label %602

723:                                              ; preds = %521
  %724 = ptrtoint i8* %524 to i64
  %725 = inttoptr i64 %522 to %"class.base::internal::UncheckedObserverAdapter"*
  %726 = inttoptr i64 %522 to i64*
  store i64 %724, i64* %726, align 8
  %727 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %725, i64 1
  %728 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %727 to i64
  br label %729

729:                                              ; preds = %723, %521
  %730 = phi i64 [ %522, %521 ], [ %728, %723 ]
  %731 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %510, i64 2, i32 0
  %732 = load i8*, i8** %731, align 8
  %733 = icmp eq i8* %732, null
  br i1 %733, label %740, label %734

734:                                              ; preds = %729
  %735 = ptrtoint i8* %732 to i64
  %736 = inttoptr i64 %730 to %"class.base::internal::UncheckedObserverAdapter"*
  %737 = inttoptr i64 %730 to i64*
  store i64 %735, i64* %737, align 8
  %738 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %736, i64 1
  %739 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %738 to i64
  br label %740

740:                                              ; preds = %734, %729
  %741 = phi i64 [ %730, %729 ], [ %739, %734 ]
  %742 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %510, i64 3, i32 0
  %743 = load i8*, i8** %742, align 8
  %744 = icmp eq i8* %743, null
  br i1 %744, label %751, label %745

745:                                              ; preds = %740
  %746 = ptrtoint i8* %743 to i64
  %747 = inttoptr i64 %741 to %"class.base::internal::UncheckedObserverAdapter"*
  %748 = inttoptr i64 %741 to i64*
  store i64 %746, i64* %748, align 8
  %749 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %747, i64 1
  %750 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %749 to i64
  br label %751

751:                                              ; preds = %745, %740
  %752 = phi i64 [ %741, %740 ], [ %750, %745 ]
  %753 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %510, i64 4
  %754 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %753, %461
  br i1 %754, label %526, label %509

755:                                              ; preds = %281
  %756 = ptrtoint i8* %284 to i64
  %757 = inttoptr i64 %282 to %"class.base::internal::UncheckedObserverAdapter"*
  %758 = inttoptr i64 %282 to i64*
  store i64 %756, i64* %758, align 8
  %759 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %757, i64 1
  %760 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %759 to i64
  br label %761

761:                                              ; preds = %755, %281
  %762 = phi i64 [ %282, %281 ], [ %760, %755 ]
  %763 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %270, i64 2, i32 0
  %764 = load i8*, i8** %763, align 8
  %765 = icmp eq i8* %764, null
  br i1 %765, label %772, label %766

766:                                              ; preds = %761
  %767 = ptrtoint i8* %764 to i64
  %768 = inttoptr i64 %762 to %"class.base::internal::UncheckedObserverAdapter"*
  %769 = inttoptr i64 %762 to i64*
  store i64 %767, i64* %769, align 8
  %770 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %768, i64 1
  %771 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %770 to i64
  br label %772

772:                                              ; preds = %766, %761
  %773 = phi i64 [ %762, %761 ], [ %771, %766 ]
  %774 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %270, i64 3, i32 0
  %775 = load i8*, i8** %774, align 8
  %776 = icmp eq i8* %775, null
  br i1 %776, label %783, label %777

777:                                              ; preds = %772
  %778 = ptrtoint i8* %775 to i64
  %779 = inttoptr i64 %773 to %"class.base::internal::UncheckedObserverAdapter"*
  %780 = inttoptr i64 %773 to i64*
  store i64 %778, i64* %780, align 8
  %781 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %779, i64 1
  %782 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %781 to i64
  br label %783

783:                                              ; preds = %777, %772
  %784 = phi i64 [ %773, %772 ], [ %782, %777 ]
  %785 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %270, i64 4
  %786 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %785, %221
  br i1 %786, label %286, label %269

787:                                              ; preds = %188
  %788 = ptrtoint i8* %191 to i64
  %789 = inttoptr i64 %189 to %"class.base::internal::UncheckedObserverAdapter"*
  %790 = inttoptr i64 %189 to i64*
  store i64 %788, i64* %790, align 8
  %791 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %789, i64 1
  %792 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %791 to i64
  br label %793

793:                                              ; preds = %787, %188
  %794 = phi i64 [ %189, %188 ], [ %792, %787 ]
  %795 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %177, i64 2, i32 0
  %796 = load i8*, i8** %795, align 8
  %797 = icmp eq i8* %796, null
  br i1 %797, label %804, label %798

798:                                              ; preds = %793
  %799 = ptrtoint i8* %796 to i64
  %800 = inttoptr i64 %794 to %"class.base::internal::UncheckedObserverAdapter"*
  %801 = inttoptr i64 %794 to i64*
  store i64 %799, i64* %801, align 8
  %802 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %800, i64 1
  %803 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %802 to i64
  br label %804

804:                                              ; preds = %798, %793
  %805 = phi i64 [ %794, %793 ], [ %803, %798 ]
  %806 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %177, i64 3, i32 0
  %807 = load i8*, i8** %806, align 8
  %808 = icmp eq i8* %807, null
  br i1 %808, label %815, label %809

809:                                              ; preds = %804
  %810 = ptrtoint i8* %807 to i64
  %811 = inttoptr i64 %805 to %"class.base::internal::UncheckedObserverAdapter"*
  %812 = inttoptr i64 %805 to i64*
  store i64 %810, i64* %812, align 8
  %813 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %811, i64 1
  %814 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %813 to i64
  br label %815

815:                                              ; preds = %809, %804
  %816 = phi i64 [ %805, %804 ], [ %814, %809 ]
  %817 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %177, i64 4
  %818 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %817, %128
  br i1 %818, label %193, label %176
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device10UsbService14GetTestDevicesEPNSt3__16vectorI13scoped_refptrINS_9UsbDeviceEENS1_9allocatorIS5_EEEE(%"class.device::UsbService"*, %"class.std::__1::vector.200"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.200", %"class.std::__1::vector.200"* %1, i64 0, i32 0, i32 0
  %4 = load %class.scoped_refptr*, %class.scoped_refptr** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.200", %"class.std::__1::vector.200"* %1, i64 0, i32 0, i32 1
  %6 = load %class.scoped_refptr*, %class.scoped_refptr** %5, align 8
  %7 = icmp eq %class.scoped_refptr* %6, %4
  br i1 %7, label %28, label %8

8:                                                ; preds = %2, %26
  %9 = phi %class.scoped_refptr* [ %10, %26 ], [ %6, %2 ]
  %10 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %9, i64 -1
  %11 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %10, i64 0, i32 0
  %12 = load %"class.device::UsbDevice"*, %"class.device::UsbDevice"** %11, align 8
  %13 = icmp eq %"class.device::UsbDevice"* %12, null
  br i1 %13, label %26, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.device::UsbDevice", %"class.device::UsbDevice"* %12, i64 0, i32 1
  %16 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw sub i32* %16, i32 1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %26

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %15, i64 -2
  %21 = bitcast %"class.base::RefCountedThreadSafe"* %20 to %"class.device::UsbDevice"*
  %22 = bitcast %"class.base::RefCountedThreadSafe"* %20 to void (%"class.device::UsbDevice"*)***
  %23 = load void (%"class.device::UsbDevice"*)**, void (%"class.device::UsbDevice"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.device::UsbDevice"*)*, void (%"class.device::UsbDevice"*)** %23, i64 5
  %25 = load void (%"class.device::UsbDevice"*)*, void (%"class.device::UsbDevice"*)** %24, align 8
  tail call void %25(%"class.device::UsbDevice"* nonnull %21) #13
  br label %26

26:                                               ; preds = %19, %14, %8
  %27 = icmp eq %class.scoped_refptr* %10, %4
  br i1 %27, label %28, label %8

28:                                               ; preds = %26, %2
  store %class.scoped_refptr* %4, %class.scoped_refptr** %5, align 8
  %29 = getelementptr inbounds %"class.device::UsbService", %"class.device::UsbService"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %30 = load i64, i64* %29, align 8
  tail call void @_ZNSt3__16vectorI13scoped_refptrIN6device9UsbDeviceEENS_9allocatorIS4_EEE7reserveEm(%"class.std::__1::vector.200"* %1, i64 %30)
  %31 = getelementptr inbounds %"class.device::UsbService", %"class.device::UsbService"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %32 = bitcast %"struct.std::__1::__hash_node_base.124"** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.device::UsbService", %"class.device::UsbService"* %0, i64 0, i32 1, i32 0
  %37 = getelementptr inbounds %"class.std::__1::vector.200", %"class.std::__1::vector.200"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %38 = bitcast %class.scoped_refptr** %5 to i64*
  br label %40

39:                                               ; preds = %62, %28
  ret void

40:                                               ; preds = %35, %62
  %41 = phi i64 [ %33, %35 ], [ %64, %62 ]
  %42 = inttoptr i64 %41 to %"struct.std::__1::__hash_node.209"*
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node.209", %"struct.std::__1::__hash_node.209"* %42, i64 0, i32 2
  %44 = tail call %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE13scoped_refptrIN6device9UsbDeviceEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE4findIS7_EENS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEERKT_(%"class.std::__1::__hash_table"* %36, %"class.std::__1::basic_string"* dereferenceable(24) %43) #13
  %45 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %44, i64 5
  %46 = load %class.scoped_refptr*, %class.scoped_refptr** %5, align 8
  %47 = load %class.scoped_refptr*, %class.scoped_refptr** %37, align 8
  %48 = icmp eq %class.scoped_refptr* %46, %47
  br i1 %48, label %60, label %49

49:                                               ; preds = %40
  %50 = bitcast %"struct.std::__1::__hash_node_base"* %45 to %"class.device::UsbDevice"**
  %51 = load %"class.device::UsbDevice"*, %"class.device::UsbDevice"** %50, align 8
  %52 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %46, i64 0, i32 0
  store %"class.device::UsbDevice"* %51, %"class.device::UsbDevice"** %52, align 8
  %53 = icmp eq %"class.device::UsbDevice"* %51, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.device::UsbDevice", %"class.device::UsbDevice"* %51, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = atomicrmw add i32* %55, i32 1 monotonic
  br label %57

57:                                               ; preds = %54, %49
  %58 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %46, i64 1
  %59 = ptrtoint %class.scoped_refptr* %58 to i64
  store i64 %59, i64* %38, align 8
  br label %62

60:                                               ; preds = %40
  %61 = bitcast %"struct.std::__1::__hash_node_base"* %45 to %class.scoped_refptr*
  tail call void @_ZNSt3__16vectorI13scoped_refptrIN6device9UsbDeviceEENS_9allocatorIS4_EEE21__push_back_slow_pathIRKS4_EEvOT_(%"class.std::__1::vector.200"* %1, %class.scoped_refptr* dereferenceable(8) %61) #13
  br label %62

62:                                               ; preds = %57, %60
  %63 = inttoptr i64 %41 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %39, label %40
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN6device9UsbDevice19NotifyDeviceRemovedEv(%"class.device::UsbDevice"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device10UsbService27NotifyWillDestroyUsbServiceEv(%"class.device::UsbService"*) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %3 = alloca %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = getelementptr inbounds %"class.device::UsbService", %"class.device::UsbService"* %0, i64 0, i32 3
  %5 = bitcast %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 2
  %9 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %4, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 40, i1 false)
  %11 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %9, align 8, !noalias !35
  %12 = getelementptr inbounds %"class.device::UsbService", %"class.device::UsbService"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %13 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %12, align 8, !noalias !35
  %14 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %11, %13
  %15 = getelementptr inbounds %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %15) #13
  br i1 %14, label %16, label %18

16:                                               ; preds = %1
  %17 = bitcast %"class.base::ObserverList.141"** %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #13, !alias.scope !35
  br label %58

18:                                               ; preds = %1
  store %"class.base::ObserverList.141"* %4, %"class.base::ObserverList.141"** %6, align 8, !alias.scope !35
  %19 = getelementptr inbounds %"class.device::UsbService", %"class.device::UsbService"* %0, i64 0, i32 3, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %15, %"class.base::internal::LinkNodeBase"* %19) #13
  store i64 0, i64* %7, align 8, !alias.scope !35
  %20 = getelementptr inbounds %"class.device::UsbService", %"class.device::UsbService"* %0, i64 0, i32 3, i32 3
  %21 = load i32, i32* %20, align 8, !noalias !35
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %30, label %23

23:                                               ; preds = %18
  %24 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %12 to i64*
  %25 = load i64, i64* %24, align 8, !noalias !35
  %26 = bitcast %"class.base::ObserverList.141"* %4 to i64*
  %27 = load i64, i64* %26, align 8, !noalias !35
  %28 = sub i64 %25, %27
  %29 = ashr exact i64 %28, 3
  br label %30

30:                                               ; preds = %23, %18
  %31 = phi i64 [ %29, %23 ], [ -1, %18 ]
  store i64 %31, i64* %8, align 8, !alias.scope !35
  %32 = load %"class.base::ObserverList.141"*, %"class.base::ObserverList.141"** %6, align 8, !alias.scope !35
  %33 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %32, i64 0, i32 0, i32 0, i32 1
  %34 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.base::ObserverList.141"* %32 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = sub i64 %35, %37
  %39 = ashr exact i64 %38, 3
  %40 = icmp ult i64 %39, %31
  %41 = select i1 %40, i64 %39, i64 %31
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %58, label %43

43:                                               ; preds = %30
  %44 = inttoptr i64 %37 to %"class.base::internal::UncheckedObserverAdapter"*
  %45 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %32, i64 0, i32 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %44, i64 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = icmp eq i8* %47, null
  br i1 %48, label %49, label %58

49:                                               ; preds = %43, %53
  %50 = phi i64 [ %51, %53 ], [ 0, %43 ]
  %51 = add nuw i64 %50, 1
  store i64 %51, i64* %7, align 8, !alias.scope !35
  %52 = icmp ult i64 %51, %41
  br i1 %52, label %53, label %58

53:                                               ; preds = %49
  %54 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %45, align 8
  %55 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %54, i64 %51, i32 0
  %56 = load i8*, i8** %55, align 8
  %57 = icmp eq i8* %56, null
  br i1 %57, label %49, label %58

58:                                               ; preds = %49, %53, %16, %30, %43
  %59 = bitcast %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %59) #13
  %60 = getelementptr inbounds %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %61 = getelementptr inbounds %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %62 = getelementptr inbounds %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %63 = getelementptr inbounds %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  %64 = bitcast %"class.base::ObserverList<device::UsbService::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %63) #13
  %65 = bitcast %"class.base::ObserverList.141"** %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 24, i1 false) #13, !alias.scope !38
  %66 = load %"class.base::ObserverList.141"*, %"class.base::ObserverList.141"** %6, align 8
  br label %67

67:                                               ; preds = %307, %58
  %68 = phi %"class.base::ObserverList.141"* [ %66, %58 ], [ %305, %307 ]
  %69 = icmp eq %"class.base::ObserverList.141"* %68, null
  br i1 %69, label %85, label %70

70:                                               ; preds = %67
  %71 = load i64, i64* %7, align 8
  %72 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %68, i64 0, i32 0, i32 0, i32 1
  %73 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %"class.base::ObserverList.141"* %68 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = sub i64 %74, %76
  %78 = ashr exact i64 %77, 3
  %79 = load i64, i64* %8, align 8
  %80 = icmp ult i64 %78, %79
  %81 = select i1 %80, i64 %78, i64 %79
  %82 = icmp eq i64 %71, %81
  br i1 %82, label %85, label %83

83:                                               ; preds = %70
  %84 = load %"class.base::ObserverList.141"*, %"class.base::ObserverList.141"** %60, align 8
  br label %101

85:                                               ; preds = %70, %67
  %86 = load %"class.base::ObserverList.141"*, %"class.base::ObserverList.141"** %60, align 8
  %87 = icmp eq %"class.base::ObserverList.141"* %86, null
  br i1 %87, label %201, label %88

88:                                               ; preds = %85
  %89 = load i64, i64* %61, align 8
  %90 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %86, i64 0, i32 0, i32 0, i32 1
  %91 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = bitcast %"class.base::ObserverList.141"* %86 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = sub i64 %92, %94
  %96 = ashr exact i64 %95, 3
  %97 = load i64, i64* %62, align 8
  %98 = icmp ult i64 %96, %97
  %99 = select i1 %98, i64 %96, i64 %97
  %100 = icmp eq i64 %89, %99
  br i1 %100, label %110, label %101

101:                                              ; preds = %88, %83
  %102 = phi %"class.base::ObserverList.141"* [ %84, %83 ], [ %86, %88 ]
  %103 = icmp eq %"class.base::ObserverList.141"* %68, %102
  %104 = load i64, i64* %7, align 8
  %105 = load i64, i64* %61, align 8
  %106 = icmp eq i64 %104, %105
  %107 = and i1 %103, %106
  br i1 %107, label %108, label %295

108:                                              ; preds = %101
  %109 = icmp eq %"class.base::ObserverList.141"* %68, null
  br i1 %109, label %201, label %110

110:                                              ; preds = %88, %108
  %111 = phi %"class.base::ObserverList.141"* [ %68, %108 ], [ %86, %88 ]
  %112 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %111, i64 0, i32 1
  %113 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %111, i64 0, i32 1, i32 0, i32 0, i32 1
  %114 = bitcast %"class.base::internal::LinkNodeBase"** %113 to %"class.base::LinkNode.143"**
  %115 = load %"class.base::LinkNode.143"*, %"class.base::LinkNode.143"** %114, align 8
  %116 = bitcast %"class.base::LinkedList.142"* %112 to %"class.base::LinkNode.143"**
  %117 = load %"class.base::LinkNode.143"*, %"class.base::LinkNode.143"** %116, align 8
  %118 = icmp eq %"class.base::LinkNode.143"* %115, %117
  br i1 %118, label %119, label %197

119:                                              ; preds = %110
  %120 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %111, i64 0, i32 0, i32 0, i32 0
  %121 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %120, align 8
  %122 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %111, i64 0, i32 0, i32 0, i32 1
  %123 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %122, align 8
  %124 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %121, %123
  br i1 %124, label %133, label %125

125:                                              ; preds = %119, %130
  %126 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %131, %130 ], [ %121, %119 ]
  %127 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %126, i64 0, i32 0
  %128 = load i8*, i8** %127, align 8
  %129 = icmp eq i8* %128, null
  br i1 %129, label %133, label %130

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %126, i64 1
  %132 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %131, %123
  br i1 %132, label %197, label %125

133:                                              ; preds = %125, %119
  %134 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %121, %119 ], [ %126, %125 ]
  %135 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %134 to i64
  %136 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %134, %123
  br i1 %136, label %197, label %137

137:                                              ; preds = %133
  %138 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %134, i64 1
  %139 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %138, %123
  br i1 %139, label %192, label %140

140:                                              ; preds = %137
  %141 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %123, i64 -2, i32 0
  %142 = ptrtoint i8** %141 to i64
  %143 = sub i64 %142, %135
  %144 = lshr i64 %143, 3
  %145 = add nuw nsw i64 %144, 1
  %146 = and i64 %145, 3
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %166, label %148

148:                                              ; preds = %140, %161
  %149 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %163, %161 ], [ %138, %140 ]
  %150 = phi i64 [ %162, %161 ], [ %135, %140 ]
  %151 = phi i64 [ %164, %161 ], [ %146, %140 ]
  %152 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %149, i64 0, i32 0
  %153 = load i8*, i8** %152, align 8
  %154 = icmp eq i8* %153, null
  br i1 %154, label %161, label %155

155:                                              ; preds = %148
  %156 = ptrtoint i8* %153 to i64
  %157 = inttoptr i64 %150 to %"class.base::internal::UncheckedObserverAdapter"*
  %158 = inttoptr i64 %150 to i64*
  store i64 %156, i64* %158, align 8
  %159 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %157, i64 1
  %160 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %159 to i64
  br label %161

161:                                              ; preds = %155, %148
  %162 = phi i64 [ %150, %148 ], [ %160, %155 ]
  %163 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %149, i64 1
  %164 = add i64 %151, -1
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %166, label %148, !llvm.loop !41

166:                                              ; preds = %161, %140
  %167 = phi i64 [ undef, %140 ], [ %162, %161 ]
  %168 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %138, %140 ], [ %163, %161 ]
  %169 = phi i64 [ %135, %140 ], [ %162, %161 ]
  %170 = icmp ult i64 %143, 24
  br i1 %170, label %188, label %171

171:                                              ; preds = %166, %397
  %172 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %399, %397 ], [ %168, %166 ]
  %173 = phi i64 [ %398, %397 ], [ %169, %166 ]
  %174 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %172, i64 0, i32 0
  %175 = load i8*, i8** %174, align 8
  %176 = icmp eq i8* %175, null
  br i1 %176, label %183, label %177

177:                                              ; preds = %171
  %178 = ptrtoint i8* %175 to i64
  %179 = inttoptr i64 %173 to %"class.base::internal::UncheckedObserverAdapter"*
  %180 = inttoptr i64 %173 to i64*
  store i64 %178, i64* %180, align 8
  %181 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %179, i64 1
  %182 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %181 to i64
  br label %183

183:                                              ; preds = %177, %171
  %184 = phi i64 [ %173, %171 ], [ %182, %177 ]
  %185 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %172, i64 1, i32 0
  %186 = load i8*, i8** %185, align 8
  %187 = icmp eq i8* %186, null
  br i1 %187, label %375, label %369

188:                                              ; preds = %397, %166
  %189 = phi i64 [ %167, %166 ], [ %398, %397 ]
  %190 = inttoptr i64 %189 to %"class.base::internal::UncheckedObserverAdapter"*
  %191 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %122, align 8
  br label %192

192:                                              ; preds = %188, %137
  %193 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %123, %137 ], [ %191, %188 ]
  %194 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %134, %137 ], [ %190, %188 ]
  %195 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %194, %193
  br i1 %195, label %197, label %196

196:                                              ; preds = %192
  store %"class.base::internal::UncheckedObserverAdapter"* %194, %"class.base::internal::UncheckedObserverAdapter"** %122, align 8
  br label %197

197:                                              ; preds = %130, %196, %192, %133, %110
  %198 = load %"class.base::ObserverList.141"*, %"class.base::ObserverList.141"** %60, align 8
  %199 = icmp eq %"class.base::ObserverList.141"* %198, null
  br i1 %199, label %201, label %200

200:                                              ; preds = %197
  store %"class.base::ObserverList.141"* null, %"class.base::ObserverList.141"** %60, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %63) #13
  br label %201

201:                                              ; preds = %85, %108, %197, %200
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %59) #13
  %202 = load %"class.base::ObserverList.141"*, %"class.base::ObserverList.141"** %6, align 8
  %203 = icmp eq %"class.base::ObserverList.141"* %202, null
  br i1 %203, label %294, label %204

204:                                              ; preds = %201
  %205 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %202, i64 0, i32 1
  %206 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %202, i64 0, i32 1, i32 0, i32 0, i32 1
  %207 = bitcast %"class.base::internal::LinkNodeBase"** %206 to %"class.base::LinkNode.143"**
  %208 = load %"class.base::LinkNode.143"*, %"class.base::LinkNode.143"** %207, align 8
  %209 = bitcast %"class.base::LinkedList.142"* %205 to %"class.base::LinkNode.143"**
  %210 = load %"class.base::LinkNode.143"*, %"class.base::LinkNode.143"** %209, align 8
  %211 = icmp eq %"class.base::LinkNode.143"* %208, %210
  br i1 %211, label %212, label %290

212:                                              ; preds = %204
  %213 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %202, i64 0, i32 0, i32 0, i32 0
  %214 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %213, align 8
  %215 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %202, i64 0, i32 0, i32 0, i32 1
  %216 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %215, align 8
  %217 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %214, %216
  br i1 %217, label %226, label %218

218:                                              ; preds = %212, %223
  %219 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %224, %223 ], [ %214, %212 ]
  %220 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %219, i64 0, i32 0
  %221 = load i8*, i8** %220, align 8
  %222 = icmp eq i8* %221, null
  br i1 %222, label %226, label %223

223:                                              ; preds = %218
  %224 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %219, i64 1
  %225 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %224, %216
  br i1 %225, label %290, label %218

226:                                              ; preds = %218, %212
  %227 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %214, %212 ], [ %219, %218 ]
  %228 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %227 to i64
  %229 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %227, %216
  br i1 %229, label %290, label %230

230:                                              ; preds = %226
  %231 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %227, i64 1
  %232 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %231, %216
  br i1 %232, label %285, label %233

233:                                              ; preds = %230
  %234 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %216, i64 -2, i32 0
  %235 = ptrtoint i8** %234 to i64
  %236 = sub i64 %235, %228
  %237 = lshr i64 %236, 3
  %238 = add nuw nsw i64 %237, 1
  %239 = and i64 %238, 3
  %240 = icmp eq i64 %239, 0
  br i1 %240, label %259, label %241

241:                                              ; preds = %233, %254
  %242 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %256, %254 ], [ %231, %233 ]
  %243 = phi i64 [ %255, %254 ], [ %228, %233 ]
  %244 = phi i64 [ %257, %254 ], [ %239, %233 ]
  %245 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %242, i64 0, i32 0
  %246 = load i8*, i8** %245, align 8
  %247 = icmp eq i8* %246, null
  br i1 %247, label %254, label %248

248:                                              ; preds = %241
  %249 = ptrtoint i8* %246 to i64
  %250 = inttoptr i64 %243 to %"class.base::internal::UncheckedObserverAdapter"*
  %251 = inttoptr i64 %243 to i64*
  store i64 %249, i64* %251, align 8
  %252 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %250, i64 1
  %253 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %252 to i64
  br label %254

254:                                              ; preds = %248, %241
  %255 = phi i64 [ %243, %241 ], [ %253, %248 ]
  %256 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %242, i64 1
  %257 = add i64 %244, -1
  %258 = icmp eq i64 %257, 0
  br i1 %258, label %259, label %241, !llvm.loop !42

259:                                              ; preds = %254, %233
  %260 = phi i64 [ undef, %233 ], [ %255, %254 ]
  %261 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %231, %233 ], [ %256, %254 ]
  %262 = phi i64 [ %228, %233 ], [ %255, %254 ]
  %263 = icmp ult i64 %236, 24
  br i1 %263, label %281, label %264

264:                                              ; preds = %259, %365
  %265 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %367, %365 ], [ %261, %259 ]
  %266 = phi i64 [ %366, %365 ], [ %262, %259 ]
  %267 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %265, i64 0, i32 0
  %268 = load i8*, i8** %267, align 8
  %269 = icmp eq i8* %268, null
  br i1 %269, label %276, label %270

270:                                              ; preds = %264
  %271 = ptrtoint i8* %268 to i64
  %272 = inttoptr i64 %266 to %"class.base::internal::UncheckedObserverAdapter"*
  %273 = inttoptr i64 %266 to i64*
  store i64 %271, i64* %273, align 8
  %274 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %272, i64 1
  %275 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %274 to i64
  br label %276

276:                                              ; preds = %270, %264
  %277 = phi i64 [ %266, %264 ], [ %275, %270 ]
  %278 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %265, i64 1, i32 0
  %279 = load i8*, i8** %278, align 8
  %280 = icmp eq i8* %279, null
  br i1 %280, label %343, label %337

281:                                              ; preds = %365, %259
  %282 = phi i64 [ %260, %259 ], [ %366, %365 ]
  %283 = inttoptr i64 %282 to %"class.base::internal::UncheckedObserverAdapter"*
  %284 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %215, align 8
  br label %285

285:                                              ; preds = %281, %230
  %286 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %216, %230 ], [ %284, %281 ]
  %287 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %227, %230 ], [ %283, %281 ]
  %288 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %287, %286
  br i1 %288, label %290, label %289

289:                                              ; preds = %285
  store %"class.base::internal::UncheckedObserverAdapter"* %287, %"class.base::internal::UncheckedObserverAdapter"** %215, align 8
  br label %290

290:                                              ; preds = %223, %289, %285, %226, %204
  %291 = load %"class.base::ObserverList.141"*, %"class.base::ObserverList.141"** %6, align 8
  %292 = icmp eq %"class.base::ObserverList.141"* %291, null
  br i1 %292, label %294, label %293

293:                                              ; preds = %290
  store %"class.base::ObserverList.141"* null, %"class.base::ObserverList.141"** %6, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %15) #13
  br label %294

294:                                              ; preds = %201, %290, %293
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #13
  ret void

295:                                              ; preds = %101
  %296 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %68, i64 0, i32 0, i32 0, i32 0
  %297 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %296, align 8
  %298 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %297, i64 %104
  %299 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %298 to %"class.device::UsbService::Observer"**
  %300 = load %"class.device::UsbService::Observer"*, %"class.device::UsbService::Observer"** %299, align 8
  %301 = bitcast %"class.device::UsbService::Observer"* %300 to void (%"class.device::UsbService::Observer"*)***
  %302 = load void (%"class.device::UsbService::Observer"*)**, void (%"class.device::UsbService::Observer"*)*** %301, align 8
  %303 = getelementptr inbounds void (%"class.device::UsbService::Observer"*)*, void (%"class.device::UsbService::Observer"*)** %302, i64 5
  %304 = load void (%"class.device::UsbService::Observer"*)*, void (%"class.device::UsbService::Observer"*)** %303, align 8
  call void %304(%"class.device::UsbService::Observer"* %300) #13
  %305 = load %"class.base::ObserverList.141"*, %"class.base::ObserverList.141"** %6, align 8
  %306 = icmp eq %"class.base::ObserverList.141"* %305, null
  br i1 %306, label %307, label %308

307:                                              ; preds = %332, %328, %295, %308, %322
  br label %67

308:                                              ; preds = %295
  %309 = load i64, i64* %7, align 8
  %310 = add i64 %309, 1
  store i64 %310, i64* %7, align 8
  %311 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %305, i64 0, i32 0, i32 0, i32 1
  %312 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %311 to i64*
  %313 = load i64, i64* %312, align 8
  %314 = bitcast %"class.base::ObserverList.141"* %305 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = sub i64 %313, %315
  %317 = ashr exact i64 %316, 3
  %318 = load i64, i64* %8, align 8
  %319 = icmp ult i64 %317, %318
  %320 = select i1 %319, i64 %317, i64 %318
  %321 = icmp ult i64 %310, %320
  br i1 %321, label %322, label %307

322:                                              ; preds = %308
  %323 = inttoptr i64 %315 to %"class.base::internal::UncheckedObserverAdapter"*
  %324 = getelementptr inbounds %"class.base::ObserverList.141", %"class.base::ObserverList.141"* %305, i64 0, i32 0, i32 0, i32 0
  %325 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %323, i64 %310, i32 0
  %326 = load i8*, i8** %325, align 8
  %327 = icmp eq i8* %326, null
  br i1 %327, label %328, label %307

328:                                              ; preds = %322, %332
  %329 = phi i64 [ %330, %332 ], [ %310, %322 ]
  %330 = add nuw i64 %329, 1
  store i64 %330, i64* %7, align 8
  %331 = icmp ult i64 %330, %320
  br i1 %331, label %332, label %307

332:                                              ; preds = %328
  %333 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %324, align 8
  %334 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %333, i64 %330, i32 0
  %335 = load i8*, i8** %334, align 8
  %336 = icmp eq i8* %335, null
  br i1 %336, label %328, label %307

337:                                              ; preds = %276
  %338 = ptrtoint i8* %279 to i64
  %339 = inttoptr i64 %277 to %"class.base::internal::UncheckedObserverAdapter"*
  %340 = inttoptr i64 %277 to i64*
  store i64 %338, i64* %340, align 8
  %341 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %339, i64 1
  %342 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %341 to i64
  br label %343

343:                                              ; preds = %337, %276
  %344 = phi i64 [ %277, %276 ], [ %342, %337 ]
  %345 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %265, i64 2, i32 0
  %346 = load i8*, i8** %345, align 8
  %347 = icmp eq i8* %346, null
  br i1 %347, label %354, label %348

348:                                              ; preds = %343
  %349 = ptrtoint i8* %346 to i64
  %350 = inttoptr i64 %344 to %"class.base::internal::UncheckedObserverAdapter"*
  %351 = inttoptr i64 %344 to i64*
  store i64 %349, i64* %351, align 8
  %352 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %350, i64 1
  %353 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %352 to i64
  br label %354

354:                                              ; preds = %348, %343
  %355 = phi i64 [ %344, %343 ], [ %353, %348 ]
  %356 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %265, i64 3, i32 0
  %357 = load i8*, i8** %356, align 8
  %358 = icmp eq i8* %357, null
  br i1 %358, label %365, label %359

359:                                              ; preds = %354
  %360 = ptrtoint i8* %357 to i64
  %361 = inttoptr i64 %355 to %"class.base::internal::UncheckedObserverAdapter"*
  %362 = inttoptr i64 %355 to i64*
  store i64 %360, i64* %362, align 8
  %363 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %361, i64 1
  %364 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %363 to i64
  br label %365

365:                                              ; preds = %359, %354
  %366 = phi i64 [ %355, %354 ], [ %364, %359 ]
  %367 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %265, i64 4
  %368 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %367, %216
  br i1 %368, label %281, label %264

369:                                              ; preds = %183
  %370 = ptrtoint i8* %186 to i64
  %371 = inttoptr i64 %184 to %"class.base::internal::UncheckedObserverAdapter"*
  %372 = inttoptr i64 %184 to i64*
  store i64 %370, i64* %372, align 8
  %373 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %371, i64 1
  %374 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %373 to i64
  br label %375

375:                                              ; preds = %369, %183
  %376 = phi i64 [ %184, %183 ], [ %374, %369 ]
  %377 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %172, i64 2, i32 0
  %378 = load i8*, i8** %377, align 8
  %379 = icmp eq i8* %378, null
  br i1 %379, label %386, label %380

380:                                              ; preds = %375
  %381 = ptrtoint i8* %378 to i64
  %382 = inttoptr i64 %376 to %"class.base::internal::UncheckedObserverAdapter"*
  %383 = inttoptr i64 %376 to i64*
  store i64 %381, i64* %383, align 8
  %384 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %382, i64 1
  %385 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %384 to i64
  br label %386

386:                                              ; preds = %380, %375
  %387 = phi i64 [ %376, %375 ], [ %385, %380 ]
  %388 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %172, i64 3, i32 0
  %389 = load i8*, i8** %388, align 8
  %390 = icmp eq i8* %389, null
  br i1 %390, label %397, label %391

391:                                              ; preds = %386
  %392 = ptrtoint i8* %389 to i64
  %393 = inttoptr i64 %387 to %"class.base::internal::UncheckedObserverAdapter"*
  %394 = inttoptr i64 %387 to i64*
  store i64 %392, i64* %394, align 8
  %395 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %393, i64 1
  %396 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %395 to i64
  br label %397

397:                                              ; preds = %391, %386
  %398 = phi i64 [ %387, %386 ], [ %396, %391 ]
  %399 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %172, i64 4
  %400 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %399, %123
  br i1 %400, label %188, label %171
}

declare void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE13scoped_refptrIN6device9UsbDeviceEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE4findIS7_EENS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEERKT_(%"class.std::__1::__hash_table"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %4 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %13 = zext i8 %6 to i64
  %14 = select i1 %7, i8* %9, i8* %12
  %15 = select i1 %7, i64 %11, i64 %13
  %16 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #13
  %17 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %3, i8* %14, i64 %15) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #13
  %18 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %111, label %21

21:                                               ; preds = %2
  %22 = call i64 @llvm.ctpop.i64(i64 %19) #13, !range !43
  %23 = icmp ugt i64 %22, 1
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = add i64 %19, -1
  %26 = and i64 %25, %17
  br label %31

27:                                               ; preds = %21
  %28 = icmp ult i64 %17, %19
  br i1 %28, label %31, label %29

29:                                               ; preds = %27
  %30 = urem i64 %17, %19
  br label %31

31:                                               ; preds = %24, %27, %29
  %32 = phi i64 [ %26, %24 ], [ %30, %29 ], [ %17, %27 ]
  %33 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %33, align 8
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %34, i64 %32
  %36 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base"* %36, null
  br i1 %37, label %111, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %40 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base"* %40, null
  br i1 %41, label %111, label %42

42:                                               ; preds = %38
  %43 = add i64 %19, -1
  %44 = load i8, i8* %5, align 1
  %45 = icmp slt i8 %44, 0
  %46 = load i64, i64* %10, align 8
  %47 = zext i8 %44 to i64
  %48 = select i1 %45, i64 %46, i64 %47
  %49 = load i8*, i8** %8, align 8
  %50 = select i1 %45, i8* %49, i8* %12
  %51 = icmp eq i64 %48, 0
  br label %52

52:                                               ; preds = %42, %107
  %53 = phi %"struct.std::__1::__hash_node_base"* [ %40, %42 ], [ %109, %107 ]
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 1
  %55 = bitcast %"struct.std::__1::__hash_node_base"* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = icmp eq i64 %56, %17
  br i1 %57, label %68, label %58

58:                                               ; preds = %52
  br i1 %23, label %61, label %59

59:                                               ; preds = %58
  %60 = and i64 %56, %43
  br label %65

61:                                               ; preds = %58
  %62 = icmp ult i64 %56, %19
  br i1 %62, label %65, label %63

63:                                               ; preds = %61
  %64 = urem i64 %56, %19
  br label %65

65:                                               ; preds = %59, %61, %63
  %66 = phi i64 [ %60, %59 ], [ %64, %63 ], [ %56, %61 ]
  %67 = icmp eq i64 %66, %32
  br i1 %67, label %107, label %111

68:                                               ; preds = %52
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 2
  %70 = bitcast %"struct.std::__1::__hash_node_base"* %69 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 3
  %75 = bitcast %"struct.std::__1::__hash_node_base"* %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = zext i8 %72 to i64
  %78 = select i1 %73, i64 %76, i64 %77
  %79 = icmp eq i64 %78, %48
  br i1 %79, label %80, label %107

80:                                               ; preds = %68
  %81 = bitcast %"struct.std::__1::__hash_node_base"* %69 to i8**
  %82 = load i8*, i8** %81, align 8
  %83 = bitcast %"struct.std::__1::__hash_node_base"* %69 to i8*
  %84 = select i1 %73, i8* %82, i8* %83
  br i1 %73, label %91, label %85

85:                                               ; preds = %80
  br i1 %51, label %111, label %86

86:                                               ; preds = %85
  %87 = ptrtoint i8* %82 to i64
  %88 = trunc i64 %87 to i8
  %89 = load i8, i8* %50, align 1
  %90 = icmp eq i8 %89, %88
  br i1 %90, label %92, label %107

91:                                               ; preds = %80
  br i1 %51, label %111, label %104

92:                                               ; preds = %86, %99
  %93 = phi i64 [ %96, %99 ], [ %77, %86 ]
  %94 = phi i8* [ %97, %99 ], [ %83, %86 ]
  %95 = phi i8* [ %100, %99 ], [ %50, %86 ]
  %96 = add i64 %93, -1
  %97 = getelementptr inbounds i8, i8* %94, i64 1
  %98 = icmp eq i64 %96, 0
  br i1 %98, label %111, label %99

99:                                               ; preds = %92
  %100 = getelementptr inbounds i8, i8* %95, i64 1
  %101 = load i8, i8* %97, align 1
  %102 = load i8, i8* %100, align 1
  %103 = icmp eq i8 %101, %102
  br i1 %103, label %92, label %107

104:                                              ; preds = %91
  %105 = call i32 @bcmp(i8* %84, i8* %50, i64 %48) #13
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %111, label %107

107:                                              ; preds = %99, %86, %68, %65, %104
  %108 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 0, i32 0
  %109 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %108, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base"* %109, null
  br i1 %110, label %111, label %52

111:                                              ; preds = %104, %107, %65, %91, %85, %92, %38, %2, %31
  %112 = phi %"struct.std::__1::__hash_node_base"* [ null, %31 ], [ null, %2 ], [ null, %38 ], [ %53, %92 ], [ %53, %104 ], [ null, %107 ], [ null, %65 ], [ %53, %91 ], [ %53, %85 ]
  ret %"struct.std::__1::__hash_node_base"* %112
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"*, i8*, i64) local_unnamed_addr #7 comdat align 2 {
  %4 = icmp ult i64 %2, 33
  br i1 %4, label %5, label %50

5:                                                ; preds = %3
  %6 = icmp ult i64 %2, 17
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = tail call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8* %1, i64 %2)
  br label %329

9:                                                ; preds = %5
  %10 = bitcast i8* %1 to i64*
  %11 = load i64, i64* %10, align 1
  %12 = mul i64 %11, -5435081209227447693
  %13 = getelementptr inbounds i8, i8* %1, i64 8
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 1
  %16 = getelementptr inbounds i8, i8* %1, i64 %2
  %17 = getelementptr inbounds i8, i8* %16, i64 -8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = mul i64 %19, -7286425919675154353
  %21 = getelementptr inbounds i8, i8* %16, i64 -16
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 1
  %24 = mul i64 %23, -4348849565147123417
  %25 = sub i64 %12, %15
  %26 = lshr i64 %25, 43
  %27 = shl i64 %25, 21
  %28 = or i64 %27, %26
  %29 = lshr i64 %20, 30
  %30 = mul i64 %19, -4737503975807385600
  %31 = or i64 %29, %30
  %32 = add i64 %24, %28
  %33 = add i64 %32, %31
  %34 = xor i64 %15, -3942382747735136937
  %35 = lshr i64 %34, 20
  %36 = shl i64 %34, 44
  %37 = or i64 %36, %35
  %38 = add i64 %12, %2
  %39 = sub i64 %38, %20
  %40 = add i64 %39, %37
  %41 = xor i64 %33, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %329

50:                                               ; preds = %3
  %51 = icmp ult i64 %2, 65
  br i1 %51, label %52, label %132

52:                                               ; preds = %50
  %53 = getelementptr inbounds i8, i8* %1, i64 24
  %54 = bitcast i8* %53 to i64*
  %55 = load i64, i64* %54, align 1
  %56 = bitcast i8* %1 to i64*
  %57 = load i64, i64* %56, align 1
  %58 = getelementptr inbounds i8, i8* %1, i64 %2
  %59 = getelementptr inbounds i8, i8* %58, i64 -16
  %60 = bitcast i8* %59 to i64*
  %61 = load i64, i64* %60, align 1
  %62 = add i64 %61, %2
  %63 = mul i64 %62, -4348849565147123417
  %64 = add i64 %63, %57
  %65 = add i64 %64, %55
  %66 = lshr i64 %65, 52
  %67 = shl i64 %65, 12
  %68 = or i64 %67, %66
  %69 = lshr i64 %64, 37
  %70 = shl i64 %64, 27
  %71 = or i64 %70, %69
  %72 = getelementptr inbounds i8, i8* %1, i64 8
  %73 = bitcast i8* %72 to i64*
  %74 = load i64, i64* %73, align 1
  %75 = add i64 %64, %74
  %76 = lshr i64 %75, 7
  %77 = shl i64 %75, 57
  %78 = or i64 %77, %76
  %79 = getelementptr inbounds i8, i8* %1, i64 16
  %80 = bitcast i8* %79 to i64*
  %81 = load i64, i64* %80, align 1
  %82 = add i64 %75, %81
  %83 = lshr i64 %82, 31
  %84 = shl i64 %82, 33
  %85 = or i64 %84, %83
  %86 = add i64 %78, %71
  %87 = add i64 %86, %68
  %88 = add i64 %87, %85
  %89 = getelementptr inbounds i8, i8* %58, i64 -32
  %90 = bitcast i8* %89 to i64*
  %91 = load i64, i64* %90, align 1
  %92 = add i64 %91, %81
  %93 = getelementptr inbounds i8, i8* %58, i64 -8
  %94 = bitcast i8* %93 to i64*
  %95 = load i64, i64* %94, align 1
  %96 = add i64 %95, %55
  %97 = add i64 %96, %92
  %98 = lshr i64 %97, 52
  %99 = shl i64 %97, 12
  %100 = or i64 %99, %98
  %101 = lshr i64 %92, 37
  %102 = shl i64 %92, 27
  %103 = or i64 %102, %101
  %104 = getelementptr inbounds i8, i8* %58, i64 -24
  %105 = bitcast i8* %104 to i64*
  %106 = load i64, i64* %105, align 1
  %107 = add i64 %106, %92
  %108 = lshr i64 %107, 7
  %109 = shl i64 %107, 57
  %110 = or i64 %109, %108
  %111 = add i64 %107, %61
  %112 = add i64 %111, %96
  %113 = lshr i64 %111, 31
  %114 = shl i64 %111, 33
  %115 = or i64 %114, %113
  %116 = add i64 %82, %55
  %117 = add i64 %116, %103
  %118 = add i64 %117, %110
  %119 = add i64 %118, %100
  %120 = add i64 %119, %115
  %121 = mul i64 %120, -7286425919675154353
  %122 = add i64 %112, %88
  %123 = mul i64 %122, -4348849565147123417
  %124 = add i64 %121, %123
  %125 = lshr i64 %124, 47
  %126 = xor i64 %125, %124
  %127 = mul i64 %126, -4348849565147123417
  %128 = add i64 %127, %88
  %129 = lshr i64 %128, 47
  %130 = xor i64 %129, %128
  %131 = mul i64 %130, -7286425919675154353
  br label %329

132:                                              ; preds = %50
  %133 = getelementptr inbounds i8, i8* %1, i64 %2
  %134 = getelementptr inbounds i8, i8* %133, i64 -40
  %135 = bitcast i8* %134 to i64*
  %136 = load i64, i64* %135, align 1
  %137 = getelementptr inbounds i8, i8* %133, i64 -16
  %138 = bitcast i8* %137 to i64*
  %139 = load i64, i64* %138, align 1
  %140 = getelementptr inbounds i8, i8* %133, i64 -56
  %141 = bitcast i8* %140 to i64*
  %142 = load i64, i64* %141, align 1
  %143 = add i64 %142, %139
  %144 = getelementptr inbounds i8, i8* %133, i64 -48
  %145 = bitcast i8* %144 to i64*
  %146 = load i64, i64* %145, align 1
  %147 = add i64 %146, %2
  %148 = getelementptr inbounds i8, i8* %133, i64 -24
  %149 = bitcast i8* %148 to i64*
  %150 = load i64, i64* %149, align 1
  %151 = xor i64 %150, %147
  %152 = mul i64 %151, -7070675565921424023
  %153 = lshr i64 %152, 47
  %154 = xor i64 %152, %150
  %155 = xor i64 %154, %153
  %156 = mul i64 %155, -7070675565921424023
  %157 = lshr i64 %156, 47
  %158 = xor i64 %157, %156
  %159 = mul i64 %158, -7070675565921424023
  %160 = getelementptr inbounds i8, i8* %133, i64 -64
  %161 = bitcast i8* %160 to i64*
  %162 = load i64, i64* %161, align 1
  %163 = add i64 %162, %2
  %164 = add i64 %136, %163
  %165 = add i64 %164, %159
  %166 = lshr i64 %165, 21
  %167 = shl i64 %165, 43
  %168 = or i64 %167, %166
  %169 = add i64 %163, %142
  %170 = add i64 %169, %146
  %171 = lshr i64 %170, 44
  %172 = shl i64 %170, 20
  %173 = or i64 %172, %171
  %174 = add i64 %170, %136
  %175 = add i64 %173, %163
  %176 = add i64 %175, %168
  %177 = getelementptr inbounds i8, i8* %133, i64 -32
  %178 = add i64 %143, -5435081209227447693
  %179 = bitcast i8* %177 to i64*
  %180 = load i64, i64* %179, align 1
  %181 = getelementptr inbounds i8, i8* %177, i64 24
  %182 = bitcast i8* %181 to i64*
  %183 = load i64, i64* %182, align 1
  %184 = add i64 %178, %180
  %185 = add i64 %184, %136
  %186 = add i64 %185, %183
  %187 = lshr i64 %186, 21
  %188 = shl i64 %186, 43
  %189 = or i64 %188, %187
  %190 = add i64 %184, %150
  %191 = add i64 %190, %139
  %192 = lshr i64 %191, 44
  %193 = shl i64 %191, 20
  %194 = or i64 %193, %192
  %195 = add i64 %191, %183
  %196 = add i64 %194, %184
  %197 = add i64 %196, %189
  %198 = mul i64 %136, -5435081209227447693
  %199 = bitcast i8* %1 to i64*
  %200 = load i64, i64* %199, align 1
  %201 = add i64 %200, %198
  %202 = add i64 %2, -1
  %203 = and i64 %202, -64
  br label %204

204:                                              ; preds = %292, %132
  %205 = phi i64 [ %200, %132 ], [ %294, %292 ]
  %206 = phi i64 [ %197, %132 ], [ %288, %292 ]
  %207 = phi i64 [ %195, %132 ], [ %286, %292 ]
  %208 = phi i64 [ %174, %132 ], [ %264, %292 ]
  %209 = phi i64 [ %176, %132 ], [ %266, %292 ]
  %210 = phi i64 [ %159, %132 ], [ %234, %292 ]
  %211 = phi i64 [ %201, %132 ], [ %244, %292 ]
  %212 = phi i64 [ %203, %132 ], [ %290, %292 ]
  %213 = phi i8* [ %1, %132 ], [ %289, %292 ]
  %214 = phi i64 [ %143, %132 ], [ %239, %292 ]
  %215 = getelementptr inbounds i8, i8* %213, i64 8
  %216 = bitcast i8* %215 to i64*
  %217 = load i64, i64* %216, align 1
  %218 = add i64 %211, %208
  %219 = add i64 %218, %214
  %220 = add i64 %219, %217
  %221 = lshr i64 %220, 37
  %222 = shl i64 %220, 27
  %223 = or i64 %222, %221
  %224 = mul i64 %223, -5435081209227447693
  %225 = add i64 %214, %209
  %226 = getelementptr inbounds i8, i8* %213, i64 48
  %227 = bitcast i8* %226 to i64*
  %228 = load i64, i64* %227, align 1
  %229 = add i64 %225, %228
  %230 = lshr i64 %229, 42
  %231 = shl i64 %229, 22
  %232 = or i64 %231, %230
  %233 = mul i64 %232, -5435081209227447693
  %234 = xor i64 %224, %206
  %235 = getelementptr inbounds i8, i8* %213, i64 40
  %236 = bitcast i8* %235 to i64*
  %237 = load i64, i64* %236, align 1
  %238 = add i64 %237, %208
  %239 = add i64 %238, %233
  %240 = add i64 %210, %207
  %241 = lshr i64 %240, 33
  %242 = shl i64 %240, 31
  %243 = or i64 %242, %241
  %244 = mul i64 %243, -5435081209227447693
  %245 = mul i64 %209, -5435081209227447693
  %246 = getelementptr inbounds i8, i8* %213, i64 16
  %247 = bitcast i8* %246 to i64*
  %248 = load i64, i64* %247, align 1
  %249 = getelementptr inbounds i8, i8* %213, i64 24
  %250 = bitcast i8* %249 to i64*
  %251 = load i64, i64* %250, align 1
  %252 = add i64 %205, %245
  %253 = add i64 %252, %207
  %254 = add i64 %253, %251
  %255 = add i64 %254, %234
  %256 = lshr i64 %255, 21
  %257 = shl i64 %255, 43
  %258 = or i64 %257, %256
  %259 = add i64 %252, %217
  %260 = add i64 %259, %248
  %261 = lshr i64 %260, 44
  %262 = shl i64 %260, 20
  %263 = or i64 %262, %261
  %264 = add i64 %260, %251
  %265 = add i64 %263, %252
  %266 = add i64 %265, %258
  %267 = getelementptr inbounds i8, i8* %213, i64 32
  %268 = add i64 %244, %206
  %269 = add i64 %239, %248
  %270 = bitcast i8* %267 to i64*
  %271 = load i64, i64* %270, align 1
  %272 = getelementptr inbounds i8, i8* %213, i64 56
  %273 = bitcast i8* %272 to i64*
  %274 = load i64, i64* %273, align 1
  %275 = add i64 %268, %271
  %276 = add i64 %269, %275
  %277 = add i64 %276, %274
  %278 = lshr i64 %277, 21
  %279 = shl i64 %277, 43
  %280 = or i64 %279, %278
  %281 = add i64 %275, %237
  %282 = add i64 %281, %228
  %283 = lshr i64 %282, 44
  %284 = shl i64 %282, 20
  %285 = or i64 %284, %283
  %286 = add i64 %282, %274
  %287 = add i64 %285, %275
  %288 = add i64 %287, %280
  %289 = getelementptr inbounds i8, i8* %213, i64 64
  %290 = add i64 %212, -64
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %295, label %292

292:                                              ; preds = %204
  %293 = bitcast i8* %289 to i64*
  %294 = load i64, i64* %293, align 1
  br label %204

295:                                              ; preds = %204
  %296 = xor i64 %286, %264
  %297 = mul i64 %296, -7070675565921424023
  %298 = lshr i64 %297, 47
  %299 = xor i64 %297, %286
  %300 = xor i64 %299, %298
  %301 = mul i64 %300, -7070675565921424023
  %302 = lshr i64 %301, 47
  %303 = xor i64 %302, %301
  %304 = mul i64 %303, -7070675565921424023
  %305 = lshr i64 %239, 47
  %306 = xor i64 %305, %239
  %307 = mul i64 %306, -5435081209227447693
  %308 = add i64 %307, %234
  %309 = add i64 %308, %304
  %310 = xor i64 %288, %266
  %311 = mul i64 %310, -7070675565921424023
  %312 = lshr i64 %311, 47
  %313 = xor i64 %311, %288
  %314 = xor i64 %313, %312
  %315 = mul i64 %314, -7070675565921424023
  %316 = lshr i64 %315, 47
  %317 = xor i64 %316, %315
  %318 = mul i64 %317, -7070675565921424023
  %319 = add i64 %318, %244
  %320 = xor i64 %319, %309
  %321 = mul i64 %320, -7070675565921424023
  %322 = lshr i64 %321, 47
  %323 = xor i64 %321, %319
  %324 = xor i64 %323, %322
  %325 = mul i64 %324, -7070675565921424023
  %326 = lshr i64 %325, 47
  %327 = xor i64 %326, %325
  %328 = mul i64 %327, -7070675565921424023
  br label %329

329:                                              ; preds = %295, %52, %9, %7
  %330 = phi i64 [ %8, %7 ], [ %49, %9 ], [ %131, %52 ], [ %328, %295 ]
  ret i64 %330
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp ugt i64 %1, 8
  br i1 %3, label %4, label %28

4:                                                ; preds = %2
  %5 = bitcast i8* %0 to i64*
  %6 = load i64, i64* %5, align 1
  %7 = getelementptr inbounds i8, i8* %0, i64 %1
  %8 = getelementptr inbounds i8, i8* %7, i64 -8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = add i64 %10, %1
  %12 = and i64 %1, 4294967295
  %13 = lshr i64 %11, %12
  %14 = sub i64 64, %1
  %15 = and i64 %14, 4294967295
  %16 = shl i64 %11, %15
  %17 = or i64 %16, %13
  %18 = xor i64 %17, %6
  %19 = mul i64 %18, -7070675565921424023
  %20 = lshr i64 %19, 47
  %21 = xor i64 %19, %17
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, -7070675565921424023
  %24 = lshr i64 %23, 47
  %25 = xor i64 %24, %23
  %26 = mul i64 %25, -7070675565921424023
  %27 = xor i64 %26, %10
  br label %74

28:                                               ; preds = %2
  %29 = icmp ugt i64 %1, 3
  br i1 %29, label %30, label %50

30:                                               ; preds = %28
  %31 = bitcast i8* %0 to i32*
  %32 = load i32, i32* %31, align 1
  %33 = getelementptr inbounds i8, i8* %0, i64 %1
  %34 = getelementptr inbounds i8, i8* %33, i64 -4
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = shl i32 %32, 3
  %38 = zext i32 %37 to i64
  %39 = add nuw nsw i64 %38, %1
  %40 = zext i32 %36 to i64
  %41 = xor i64 %39, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %74

50:                                               ; preds = %28
  %51 = icmp eq i64 %1, 0
  br i1 %51, label %74, label %52

52:                                               ; preds = %50
  %53 = load i8, i8* %0, align 1
  %54 = lshr i64 %1, 1
  %55 = getelementptr inbounds i8, i8* %0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = add nsw i64 %1, -1
  %58 = getelementptr inbounds i8, i8* %0, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %53 to i64
  %61 = zext i8 %56 to i64
  %62 = shl nuw nsw i64 %61, 8
  %63 = or i64 %62, %60
  %64 = zext i8 %59 to i64
  %65 = shl nuw nsw i64 %64, 2
  %66 = add nuw nsw i64 %65, %1
  %67 = mul i64 %63, -7286425919675154353
  %68 = and i64 %66, 4294967295
  %69 = mul i64 %68, -3942382747735136937
  %70 = xor i64 %69, %67
  %71 = lshr i64 %70, 47
  %72 = xor i64 %71, %70
  %73 = mul i64 %72, -7286425919675154353
  br label %74

74:                                               ; preds = %50, %52, %30, %4
  %75 = phi i64 [ %27, %4 ], [ %49, %30 ], [ %73, %52 ], [ -7286425919675154353, %50 ]
  ret i64 %75
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI13scoped_refptrIN6device9UsbDeviceEENS_9allocatorIS4_EEE21__push_back_slow_pathIRKS4_EEvOT_(%"class.std::__1::vector.200"*, %class.scoped_refptr* dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.200", %"class.std::__1::vector.200"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %class.scoped_refptr** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.200"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.200"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.200", %"class.std::__1::vector.200"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %class.scoped_refptr** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #14
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to %class.scoped_refptr*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %class.scoped_refptr* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %36, i64 %9
  %38 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %36, i64 %35
  %39 = ptrtoint %class.scoped_refptr* %38 to i64
  %40 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %1, i64 0, i32 0
  %41 = load %"class.device::UsbDevice"*, %"class.device::UsbDevice"** %40, align 8
  %42 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %37, i64 0, i32 0
  store %"class.device::UsbDevice"* %41, %"class.device::UsbDevice"** %42, align 8
  %43 = icmp eq %"class.device::UsbDevice"* %41, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.device::UsbDevice", %"class.device::UsbDevice"* %41, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw add i32* %45, i32 1 monotonic
  br label %47

47:                                               ; preds = %34, %44
  %48 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %37, i64 1
  %49 = ptrtoint %class.scoped_refptr* %48 to i64
  %50 = getelementptr inbounds %"class.std::__1::vector.200", %"class.std::__1::vector.200"* %0, i64 0, i32 0, i32 0
  %51 = load %class.scoped_refptr*, %class.scoped_refptr** %50, align 8
  %52 = ptrtoint %class.scoped_refptr* %51 to i64
  %53 = load %class.scoped_refptr*, %class.scoped_refptr** %3, align 8
  %54 = icmp eq %class.scoped_refptr* %53, %51
  br i1 %54, label %136, label %55

55:                                               ; preds = %47
  %56 = getelementptr %class.scoped_refptr, %class.scoped_refptr* %53, i64 -1, i32 0
  %57 = ptrtoint %"class.device::UsbDevice"** %56 to i64
  %58 = sub i64 %57, %52
  %59 = lshr i64 %58, 3
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 7
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %75, label %63

63:                                               ; preds = %55, %63
  %64 = phi %class.scoped_refptr* [ %67, %63 ], [ %37, %55 ]
  %65 = phi %class.scoped_refptr* [ %68, %63 ], [ %53, %55 ]
  %66 = phi i64 [ %73, %63 ], [ %61, %55 ]
  %67 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %64, i64 -1
  %68 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %65, i64 -1
  %69 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %68, i64 0, i32 0
  %70 = bitcast %class.scoped_refptr* %68 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = bitcast %class.scoped_refptr* %67 to i64*
  store i64 %71, i64* %72, align 8
  store %"class.device::UsbDevice"* null, %"class.device::UsbDevice"** %69, align 8
  %73 = add i64 %66, -1
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %75, label %63, !llvm.loop !44

75:                                               ; preds = %63, %55
  %76 = phi %class.scoped_refptr* [ undef, %55 ], [ %67, %63 ]
  %77 = phi %class.scoped_refptr* [ %37, %55 ], [ %67, %63 ]
  %78 = phi %class.scoped_refptr* [ %53, %55 ], [ %68, %63 ]
  %79 = icmp ult i64 %58, 56
  br i1 %79, label %132, label %80

80:                                               ; preds = %75, %80
  %81 = phi %class.scoped_refptr* [ %125, %80 ], [ %77, %75 ]
  %82 = phi %class.scoped_refptr* [ %126, %80 ], [ %78, %75 ]
  %83 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %81, i64 -1
  %84 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %82, i64 -1
  %85 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %84, i64 0, i32 0
  %86 = bitcast %class.scoped_refptr* %84 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = bitcast %class.scoped_refptr* %83 to i64*
  store i64 %87, i64* %88, align 8
  store %"class.device::UsbDevice"* null, %"class.device::UsbDevice"** %85, align 8
  %89 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %81, i64 -2
  %90 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %82, i64 -2
  %91 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %90, i64 0, i32 0
  %92 = bitcast %class.scoped_refptr* %90 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %class.scoped_refptr* %89 to i64*
  store i64 %93, i64* %94, align 8
  store %"class.device::UsbDevice"* null, %"class.device::UsbDevice"** %91, align 8
  %95 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %81, i64 -3
  %96 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %82, i64 -3
  %97 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %96, i64 0, i32 0
  %98 = bitcast %class.scoped_refptr* %96 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %class.scoped_refptr* %95 to i64*
  store i64 %99, i64* %100, align 8
  store %"class.device::UsbDevice"* null, %"class.device::UsbDevice"** %97, align 8
  %101 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %81, i64 -4
  %102 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %82, i64 -4
  %103 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %102, i64 0, i32 0
  %104 = bitcast %class.scoped_refptr* %102 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = bitcast %class.scoped_refptr* %101 to i64*
  store i64 %105, i64* %106, align 8
  store %"class.device::UsbDevice"* null, %"class.device::UsbDevice"** %103, align 8
  %107 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %81, i64 -5
  %108 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %82, i64 -5
  %109 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %108, i64 0, i32 0
  %110 = bitcast %class.scoped_refptr* %108 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = bitcast %class.scoped_refptr* %107 to i64*
  store i64 %111, i64* %112, align 8
  store %"class.device::UsbDevice"* null, %"class.device::UsbDevice"** %109, align 8
  %113 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %81, i64 -6
  %114 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %82, i64 -6
  %115 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %114, i64 0, i32 0
  %116 = bitcast %class.scoped_refptr* %114 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = bitcast %class.scoped_refptr* %113 to i64*
  store i64 %117, i64* %118, align 8
  store %"class.device::UsbDevice"* null, %"class.device::UsbDevice"** %115, align 8
  %119 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %81, i64 -7
  %120 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %82, i64 -7
  %121 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %120, i64 0, i32 0
  %122 = bitcast %class.scoped_refptr* %120 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %class.scoped_refptr* %119 to i64*
  store i64 %123, i64* %124, align 8
  store %"class.device::UsbDevice"* null, %"class.device::UsbDevice"** %121, align 8
  %125 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %81, i64 -8
  %126 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %82, i64 -8
  %127 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %126, i64 0, i32 0
  %128 = bitcast %class.scoped_refptr* %126 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %class.scoped_refptr* %125 to i64*
  store i64 %129, i64* %130, align 8
  store %"class.device::UsbDevice"* null, %"class.device::UsbDevice"** %127, align 8
  %131 = icmp eq %class.scoped_refptr* %126, %51
  br i1 %131, label %132, label %80

132:                                              ; preds = %80, %75
  %133 = phi %class.scoped_refptr* [ %76, %75 ], [ %125, %80 ]
  %134 = load i64, i64* %6, align 8
  %135 = load %class.scoped_refptr*, %class.scoped_refptr** %3, align 8
  br label %136

136:                                              ; preds = %47, %132
  %137 = phi %class.scoped_refptr* [ %135, %132 ], [ %51, %47 ]
  %138 = phi %class.scoped_refptr* [ %133, %132 ], [ %37, %47 ]
  %139 = phi i64 [ %134, %132 ], [ %52, %47 ]
  %140 = ptrtoint %class.scoped_refptr* %138 to i64
  store i64 %140, i64* %6, align 8
  store i64 %49, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %141 = inttoptr i64 %139 to %class.scoped_refptr*
  %142 = icmp eq %class.scoped_refptr* %137, %141
  br i1 %142, label %163, label %143

143:                                              ; preds = %136, %161
  %144 = phi %class.scoped_refptr* [ %145, %161 ], [ %137, %136 ]
  %145 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %144, i64 -1
  %146 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %145, i64 0, i32 0
  %147 = load %"class.device::UsbDevice"*, %"class.device::UsbDevice"** %146, align 8
  %148 = icmp eq %"class.device::UsbDevice"* %147, null
  br i1 %148, label %161, label %149

149:                                              ; preds = %143
  %150 = getelementptr inbounds %"class.device::UsbDevice", %"class.device::UsbDevice"* %147, i64 0, i32 1
  %151 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %150, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = atomicrmw sub i32* %151, i32 1 acq_rel
  %153 = icmp eq i32 %152, 1
  br i1 %153, label %154, label %161

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %150, i64 -2
  %156 = bitcast %"class.base::RefCountedThreadSafe"* %155 to %"class.device::UsbDevice"*
  %157 = bitcast %"class.base::RefCountedThreadSafe"* %155 to void (%"class.device::UsbDevice"*)***
  %158 = load void (%"class.device::UsbDevice"*)**, void (%"class.device::UsbDevice"*)*** %157, align 8
  %159 = getelementptr inbounds void (%"class.device::UsbDevice"*)*, void (%"class.device::UsbDevice"*)** %158, i64 5
  %160 = load void (%"class.device::UsbDevice"*)*, void (%"class.device::UsbDevice"*)** %159, align 8
  tail call void %160(%"class.device::UsbDevice"* nonnull %156) #13
  br label %161

161:                                              ; preds = %154, %149, %143
  %162 = icmp eq %class.scoped_refptr* %145, %141
  br i1 %162, label %163, label %143

163:                                              ; preds = %161, %136
  %164 = icmp eq i64 %139, 0
  br i1 %164, label %167, label %165

165:                                              ; preds = %163
  %166 = inttoptr i64 %139 to i8*
  tail call void @_ZdlPv(i8* %166) #12
  br label %167

167:                                              ; preds = %163, %165
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateINS_12OnceCallbackIFvRKNSt3__16vectorI13scoped_refptrIN6device9UsbDeviceEENS4_9allocatorIS9_EEEEEEEJSC_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #1 comdat align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.std::__1::vector.200"*
  %6 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = bitcast %"class.base::internal::BindStateBase"* %3 to %"class.base::internal::BindStateBase"**
  %8 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %9, i64* %10, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %7, align 8
  %11 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %12 = inttoptr i64 %9 to %"class.base::internal::BindStateBase"*
  %13 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %12, i64 0, i32 1
  %14 = bitcast void ()** %13 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector.200"*)**
  %15 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector.200"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector.200"*)** %14, align 8
  tail call void %15(%"class.base::internal::BindStateBase"* %12, %"class.std::__1::vector.200"* dereferenceable(24) %5) #13
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateINS_12OnceCallbackIFvRKNSt3__16vectorI13scoped_refptrIN6device9UsbDeviceEENS3_9allocatorIS8_EEEEEEEJSB_EEC2ISF_JRSB_EEENS3_17integral_constantIbLb1EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState"*, void ()*, %"class.base::OnceCallback"* dereferenceable(8), %"class.std::__1::vector.200"* dereferenceable(24)) unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 0
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* %6, void ()* %1, void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateINS_12OnceCallbackIFvRKNSt3__16vectorI13scoped_refptrIN6device9UsbDeviceEENS3_9allocatorIS8_EEEEEEEJSB_EE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS_12OnceCallbackIFvRKNSt3__16vectorI13scoped_refptrIN6device9UsbDeviceEENS4_9allocatorIS9_EEEEEEEJSC_EEEEEbPKNS0_13BindStateBaseENSI_21CancellationQueryModeE) #13
  %7 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.base::OnceCallback"* %7 to i64*
  store i64 %10, i64* %11, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %12 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2
  %13 = bitcast %"class.std::__1::tuple"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #13
  %14 = getelementptr inbounds %"class.std::__1::vector.200", %"class.std::__1::vector.200"* %3, i64 0, i32 0, i32 1
  %15 = bitcast %class.scoped_refptr** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector.200"* %3 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = icmp eq i64 %19, 0
  br i1 %21, label %90, label %22

22:                                               ; preds = %4
  %23 = icmp ugt i64 %20, 2305843009213693951
  br i1 %23, label %24, label %26

24:                                               ; preds = %22
  %25 = bitcast %"class.std::__1::tuple"* %12 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %25) #14
  unreachable

26:                                               ; preds = %22
  %27 = tail call i8* @_Znwm(i64 %19) #12
  %28 = bitcast i8* %27 to %class.scoped_refptr*
  %29 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = bitcast %class.scoped_refptr** %29 to i8**
  store i8* %27, i8** %30, align 8
  %31 = bitcast %"class.std::__1::tuple"* %12 to i8**
  store i8* %27, i8** %31, align 8
  %32 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %28, i64 %20
  %33 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %class.scoped_refptr* %32, %class.scoped_refptr** %33, align 8
  %34 = getelementptr inbounds %"class.std::__1::vector.200", %"class.std::__1::vector.200"* %3, i64 0, i32 0, i32 0
  %35 = load %class.scoped_refptr*, %class.scoped_refptr** %34, align 8
  %36 = load %class.scoped_refptr*, %class.scoped_refptr** %14, align 8
  %37 = bitcast %class.scoped_refptr** %29 to i64*
  %38 = ptrtoint i8* %27 to i64
  %39 = icmp eq %class.scoped_refptr* %35, %36
  br i1 %39, label %88, label %40

40:                                               ; preds = %26
  %41 = ptrtoint %class.scoped_refptr* %35 to i64
  %42 = getelementptr %class.scoped_refptr, %class.scoped_refptr* %36, i64 -1, i32 0
  %43 = ptrtoint %"class.device::UsbDevice"** %42 to i64
  %44 = sub i64 %43, %41
  %45 = lshr i64 %44, 3
  %46 = add nuw nsw i64 %45, 1
  %47 = and i64 %46, 3
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %65, label %49

49:                                               ; preds = %40, %60
  %50 = phi %class.scoped_refptr* [ %62, %60 ], [ %28, %40 ]
  %51 = phi %class.scoped_refptr* [ %61, %60 ], [ %35, %40 ]
  %52 = phi i64 [ %63, %60 ], [ %47, %40 ]
  %53 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %51, i64 0, i32 0
  %54 = load %"class.device::UsbDevice"*, %"class.device::UsbDevice"** %53, align 8
  %55 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %50, i64 0, i32 0
  store %"class.device::UsbDevice"* %54, %"class.device::UsbDevice"** %55, align 8
  %56 = icmp eq %"class.device::UsbDevice"* %54, null
  br i1 %56, label %60, label %57

57:                                               ; preds = %49
  %58 = getelementptr inbounds %"class.device::UsbDevice", %"class.device::UsbDevice"* %54, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = atomicrmw add i32* %58, i32 1 monotonic
  br label %60

60:                                               ; preds = %57, %49
  %61 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %51, i64 1
  %62 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %50, i64 1
  %63 = add i64 %52, -1
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %49, !llvm.loop !45

65:                                               ; preds = %60, %40
  %66 = phi %class.scoped_refptr* [ undef, %40 ], [ %62, %60 ]
  %67 = phi %class.scoped_refptr* [ %28, %40 ], [ %62, %60 ]
  %68 = phi %class.scoped_refptr* [ %35, %40 ], [ %61, %60 ]
  %69 = icmp ult i64 %44, 24
  br i1 %69, label %85, label %70

70:                                               ; preds = %65, %117
  %71 = phi %class.scoped_refptr* [ %119, %117 ], [ %67, %65 ]
  %72 = phi %class.scoped_refptr* [ %118, %117 ], [ %68, %65 ]
  %73 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %72, i64 0, i32 0
  %74 = load %"class.device::UsbDevice"*, %"class.device::UsbDevice"** %73, align 8
  %75 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %71, i64 0, i32 0
  store %"class.device::UsbDevice"* %74, %"class.device::UsbDevice"** %75, align 8
  %76 = icmp eq %"class.device::UsbDevice"* %74, null
  br i1 %76, label %80, label %77

77:                                               ; preds = %70
  %78 = getelementptr inbounds %"class.device::UsbDevice", %"class.device::UsbDevice"* %74, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = atomicrmw add i32* %78, i32 1 monotonic
  br label %80

80:                                               ; preds = %77, %70
  %81 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %72, i64 1, i32 0
  %82 = load %"class.device::UsbDevice"*, %"class.device::UsbDevice"** %81, align 8
  %83 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %71, i64 1, i32 0
  store %"class.device::UsbDevice"* %82, %"class.device::UsbDevice"** %83, align 8
  %84 = icmp eq %"class.device::UsbDevice"* %82, null
  br i1 %84, label %101, label %98

85:                                               ; preds = %117, %65
  %86 = phi %class.scoped_refptr* [ %66, %65 ], [ %119, %117 ]
  %87 = ptrtoint %class.scoped_refptr* %86 to i64
  br label %88

88:                                               ; preds = %85, %26
  %89 = phi i64 [ %38, %26 ], [ %87, %85 ]
  store i64 %89, i64* %37, align 8
  br label %90

90:                                               ; preds = %4, %88
  %91 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0, i32 0, i32 0
  %92 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %91, align 8
  %93 = icmp eq %"class.base::internal::BindStateBase"* %92, null
  br i1 %93, label %94, label %97

94:                                               ; preds = %90
  %95 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0), i32 896, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0)) #13
  %96 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #13
  br label %97

97:                                               ; preds = %90, %94
  ret void

98:                                               ; preds = %80
  %99 = getelementptr inbounds %"class.device::UsbDevice", %"class.device::UsbDevice"* %82, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = atomicrmw add i32* %99, i32 1 monotonic
  br label %101

101:                                              ; preds = %98, %80
  %102 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %72, i64 2, i32 0
  %103 = load %"class.device::UsbDevice"*, %"class.device::UsbDevice"** %102, align 8
  %104 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %71, i64 2, i32 0
  store %"class.device::UsbDevice"* %103, %"class.device::UsbDevice"** %104, align 8
  %105 = icmp eq %"class.device::UsbDevice"* %103, null
  br i1 %105, label %109, label %106

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"class.device::UsbDevice", %"class.device::UsbDevice"* %103, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = atomicrmw add i32* %107, i32 1 monotonic
  br label %109

109:                                              ; preds = %106, %101
  %110 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %72, i64 3, i32 0
  %111 = load %"class.device::UsbDevice"*, %"class.device::UsbDevice"** %110, align 8
  %112 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %71, i64 3, i32 0
  store %"class.device::UsbDevice"* %111, %"class.device::UsbDevice"** %112, align 8
  %113 = icmp eq %"class.device::UsbDevice"* %111, null
  br i1 %113, label %117, label %114

114:                                              ; preds = %109
  %115 = getelementptr inbounds %"class.device::UsbDevice", %"class.device::UsbDevice"* %111, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = atomicrmw add i32* %115, i32 1 monotonic
  br label %117

117:                                              ; preds = %114, %109
  %118 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %72, i64 4
  %119 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %71, i64 4
  %120 = icmp eq %class.scoped_refptr* %118, %36
  br i1 %120, label %85, label %70
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateINS_12OnceCallbackIFvRKNSt3__16vectorI13scoped_refptrIN6device9UsbDeviceEENS3_9allocatorIS8_EEEEEEEJSB_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #1 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %43, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %class.scoped_refptr**
  %6 = load %class.scoped_refptr*, %class.scoped_refptr** %5, align 8
  %7 = icmp eq %class.scoped_refptr* %6, null
  br i1 %7, label %39, label %8

8:                                                ; preds = %3
  %9 = bitcast %class.scoped_refptr* %6 to i8*
  %10 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %11 = bitcast void (%"class.base::internal::BindStateBase"*)** %10 to %class.scoped_refptr**
  %12 = load %class.scoped_refptr*, %class.scoped_refptr** %11, align 8
  %13 = icmp eq %class.scoped_refptr* %12, %6
  br i1 %13, label %37, label %14

14:                                               ; preds = %8, %32
  %15 = phi %class.scoped_refptr* [ %16, %32 ], [ %12, %8 ]
  %16 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %15, i64 -1
  %17 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %16, i64 0, i32 0
  %18 = load %"class.device::UsbDevice"*, %"class.device::UsbDevice"** %17, align 8
  %19 = icmp eq %"class.device::UsbDevice"* %18, null
  br i1 %19, label %32, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.device::UsbDevice", %"class.device::UsbDevice"* %18, i64 0, i32 1
  %22 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw sub i32* %22, i32 1 acq_rel
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %32

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %21, i64 -2
  %27 = bitcast %"class.base::RefCountedThreadSafe"* %26 to %"class.device::UsbDevice"*
  %28 = bitcast %"class.base::RefCountedThreadSafe"* %26 to void (%"class.device::UsbDevice"*)***
  %29 = load void (%"class.device::UsbDevice"*)**, void (%"class.device::UsbDevice"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.device::UsbDevice"*)*, void (%"class.device::UsbDevice"*)** %29, i64 5
  %31 = load void (%"class.device::UsbDevice"*)*, void (%"class.device::UsbDevice"*)** %30, align 8
  tail call void %31(%"class.device::UsbDevice"* nonnull %27) #13
  br label %32

32:                                               ; preds = %25, %20, %14
  %33 = icmp eq %class.scoped_refptr* %16, %6
  br i1 %33, label %34, label %14

34:                                               ; preds = %32
  %35 = bitcast void ()** %4 to i8**
  %36 = load i8*, i8** %35, align 8
  br label %37

37:                                               ; preds = %34, %8
  %38 = phi i8* [ %36, %34 ], [ %9, %8 ]
  store %class.scoped_refptr* %6, %class.scoped_refptr** %11, align 8
  tail call void @_ZdlPv(i8* %38) #12
  br label %39

39:                                               ; preds = %3, %37
  %40 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %41 = bitcast %"class.base::internal::BindStateBase"* %40 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %41) #13
  %42 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %42) #12
  br label %43

43:                                               ; preds = %39, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS_12OnceCallbackIFvRKNSt3__16vectorI13scoped_refptrIN6device9UsbDeviceEENS4_9allocatorIS9_EEEEEEEJSC_EEEEEbPKNS0_13BindStateBaseENSI_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #1 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  switch i32 %1, label %10 [
    i32 0, label %4
    i32 1, label %7
  ]

4:                                                ; preds = %2
  %5 = bitcast %"class.base::internal::BindStateBase"* %3 to %"class.base::internal::CallbackBase"*
  %6 = tail call zeroext i1 @_ZNK4base8internal12CallbackBase11IsCancelledEv(%"class.base::internal::CallbackBase"* %5) #13
  br label %10

7:                                                ; preds = %2
  %8 = bitcast %"class.base::internal::BindStateBase"* %3 to %"class.base::internal::CallbackBase"*
  %9 = tail call zeroext i1 @_ZNK4base8internal12CallbackBase10MaybeValidEv(%"class.base::internal::CallbackBase"* %8) #13
  br label %10

10:                                               ; preds = %2, %4, %7
  %11 = phi i1 [ %9, %7 ], [ %6, %4 ], [ false, %2 ]
  ret i1 %11
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #5

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #5

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare zeroext i1 @_ZNK4base8internal12CallbackBase11IsCancelledEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #5

declare zeroext i1 @_ZNK4base8internal12CallbackBase10MaybeValidEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE13scoped_refptrIN6device9UsbDeviceEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSR_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %"class.std::__1::basic_string"* dereferenceable(24), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.228"* dereferenceable(8), %"class.std::__1::tuple.231"* dereferenceable(1)) local_unnamed_addr #1 comdat align 2 {
  %6 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %7 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %16 = zext i8 %9 to i64
  %17 = select i1 %10, i8* %12, i8* %15
  %18 = select i1 %10, i64 %14, i64 %16
  %19 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %19) #13
  %20 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %6, i8* %17, i64 %18) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %19) #13
  %21 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %114, label %24

24:                                               ; preds = %5
  %25 = call i64 @llvm.ctpop.i64(i64 %22) #13, !range !43
  %26 = icmp ugt i64 %25, 1
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  %28 = add i64 %22, -1
  %29 = and i64 %28, %20
  br label %34

30:                                               ; preds = %24
  %31 = icmp ult i64 %20, %22
  br i1 %31, label %34, label %32

32:                                               ; preds = %30
  %33 = urem i64 %20, %22
  br label %34

34:                                               ; preds = %27, %30, %32
  %35 = phi i64 [ %29, %27 ], [ %33, %32 ], [ %20, %30 ]
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %36, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, i64 %35
  %39 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base"* %39, null
  br i1 %40, label %114, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 0, i32 0
  %43 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %42, align 8
  %44 = icmp eq %"struct.std::__1::__hash_node_base"* %43, null
  br i1 %44, label %114, label %45

45:                                               ; preds = %41
  %46 = add i64 %22, -1
  %47 = load i8, i8* %8, align 1
  %48 = icmp slt i8 %47, 0
  %49 = load i64, i64* %13, align 8
  %50 = zext i8 %47 to i64
  %51 = select i1 %48, i64 %49, i64 %50
  %52 = load i8*, i8** %11, align 8
  %53 = select i1 %48, i8* %52, i8* %15
  %54 = icmp eq i64 %51, 0
  br label %55

55:                                               ; preds = %45, %98
  %56 = phi %"struct.std::__1::__hash_node_base"* [ %43, %45 ], [ %100, %98 ]
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %56, i64 1
  %58 = bitcast %"struct.std::__1::__hash_node_base"* %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = icmp eq i64 %59, %20
  br i1 %60, label %71, label %61

61:                                               ; preds = %55
  br i1 %26, label %64, label %62

62:                                               ; preds = %61
  %63 = and i64 %59, %46
  br label %68

64:                                               ; preds = %61
  %65 = icmp ult i64 %59, %22
  br i1 %65, label %68, label %66

66:                                               ; preds = %64
  %67 = urem i64 %59, %22
  br label %68

68:                                               ; preds = %62, %64, %66
  %69 = phi i64 [ %63, %62 ], [ %67, %66 ], [ %59, %64 ]
  %70 = icmp eq i64 %69, %35
  br i1 %70, label %71, label %114

71:                                               ; preds = %55, %68
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %56, i64 2
  %73 = bitcast %"struct.std::__1::__hash_node_base"* %72 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  %75 = load i8, i8* %74, align 1
  %76 = icmp slt i8 %75, 0
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %56, i64 3
  %78 = bitcast %"struct.std::__1::__hash_node_base"* %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = zext i8 %75 to i64
  %81 = select i1 %76, i64 %79, i64 %80
  %82 = icmp eq i64 %81, %51
  br i1 %82, label %83, label %98

83:                                               ; preds = %71
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %72 to i8**
  %85 = load i8*, i8** %84, align 8
  %86 = bitcast %"struct.std::__1::__hash_node_base"* %72 to i8*
  %87 = select i1 %76, i8* %85, i8* %86
  br i1 %76, label %94, label %88

88:                                               ; preds = %83
  br i1 %54, label %216, label %89

89:                                               ; preds = %88
  %90 = ptrtoint i8* %85 to i64
  %91 = trunc i64 %90 to i8
  %92 = load i8, i8* %53, align 1
  %93 = icmp eq i8 %92, %91
  br i1 %93, label %102, label %98

94:                                               ; preds = %83
  br i1 %54, label %216, label %95

95:                                               ; preds = %94
  %96 = call i32 @bcmp(i8* %87, i8* %53, i64 %51) #13
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %216, label %98

98:                                               ; preds = %109, %89, %71, %95
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %56, i64 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %99, align 8
  %101 = icmp eq %"struct.std::__1::__hash_node_base"* %100, null
  br i1 %101, label %114, label %55

102:                                              ; preds = %89, %109
  %103 = phi i64 [ %106, %109 ], [ %80, %89 ]
  %104 = phi i8* [ %107, %109 ], [ %86, %89 ]
  %105 = phi i8* [ %110, %109 ], [ %53, %89 ]
  %106 = add i64 %103, -1
  %107 = getelementptr inbounds i8, i8* %104, i64 1
  %108 = icmp eq i64 %106, 0
  br i1 %108, label %216, label %109

109:                                              ; preds = %102
  %110 = getelementptr inbounds i8, i8* %105, i64 1
  %111 = load i8, i8* %107, align 1
  %112 = load i8, i8* %110, align 1
  %113 = icmp eq i8 %111, %112
  br i1 %113, label %102, label %98

114:                                              ; preds = %68, %98, %41, %34, %5
  %115 = phi i64 [ %35, %34 ], [ -6148914691236517206, %5 ], [ %35, %41 ], [ %35, %98 ], [ %35, %68 ]
  %116 = call i8* @_Znwm(i64 48) #12, !noalias !46
  %117 = getelementptr inbounds i8, i8* %116, i64 16
  %118 = getelementptr inbounds %"class.std::__1::tuple.228", %"class.std::__1::tuple.228"* %3, i64 0, i32 0, i32 0, i32 0
  %119 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %118, align 8, !noalias !46
  %120 = bitcast %"class.std::__1::basic_string"* %119 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  %122 = load i8, i8* %121, align 1, !noalias !46
  %123 = icmp slt i8 %122, 0
  br i1 %123, label %126, label %124

124:                                              ; preds = %114
  %125 = bitcast %"class.std::__1::basic_string"* %119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %117, i8* align 8 %125, i64 24, i1 false) #13, !noalias !46
  br label %132

126:                                              ; preds = %114
  %127 = bitcast i8* %117 to %"class.std::__1::basic_string"*
  %128 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %119, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = load i8*, i8** %128, align 8, !noalias !46
  %130 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %119, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %131 = load i64, i64* %130, align 8, !noalias !46
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %127, i8* %129, i64 %131) #13, !noalias !46
  br label %132

132:                                              ; preds = %124, %126
  %133 = getelementptr inbounds i8, i8* %116, i64 40
  %134 = bitcast i8* %133 to %"class.device::UsbDevice"**
  store %"class.device::UsbDevice"* null, %"class.device::UsbDevice"** %134, align 8, !noalias !46
  %135 = getelementptr inbounds i8, i8* %116, i64 8
  %136 = bitcast i8* %135 to i64*
  store i64 %20, i64* %136, align 8, !noalias !46
  %137 = bitcast i8* %116 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %137, align 8, !noalias !46
  %138 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %139 = load i64, i64* %138, align 8
  %140 = add i64 %139, 1
  %141 = uitofp i64 %140 to float
  %142 = uitofp i64 %22 to float
  %143 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %144 = load float, float* %143, align 4
  %145 = fmul float %144, %142
  %146 = fcmp olt float %145, %141
  %147 = or i1 %23, %146
  br i1 %147, label %148, label %171

148:                                              ; preds = %132
  %149 = shl i64 %22, 1
  %150 = icmp ult i64 %22, 3
  %151 = call i64 @llvm.ctpop.i64(i64 %22) #13, !range !43
  %152 = icmp ugt i64 %151, 1
  %153 = or i1 %150, %152
  %154 = zext i1 %153 to i64
  %155 = or i64 %149, %154
  %156 = fdiv float %141, %144
  %157 = call float @llvm.ceil.f32(float %156) #13
  %158 = fptoui float %157 to i64
  %159 = icmp ult i64 %155, %158
  %160 = select i1 %159, i64 %158, i64 %155
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE13scoped_refptrIN6device9UsbDeviceEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %160)
  %161 = load i64, i64* %21, align 8
  %162 = call i64 @llvm.ctpop.i64(i64 %161) #13, !range !43
  %163 = icmp ugt i64 %162, 1
  br i1 %163, label %167, label %164

164:                                              ; preds = %148
  %165 = add i64 %161, -1
  %166 = and i64 %165, %20
  br label %171

167:                                              ; preds = %148
  %168 = icmp ult i64 %20, %161
  br i1 %168, label %171, label %169

169:                                              ; preds = %167
  %170 = urem i64 %20, %161
  br label %171

171:                                              ; preds = %169, %167, %164, %132
  %172 = phi i64 [ %22, %132 ], [ %161, %164 ], [ %161, %167 ], [ %161, %169 ]
  %173 = phi i64 [ %115, %132 ], [ %166, %164 ], [ %20, %167 ], [ %170, %169 ]
  %174 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %175 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %174, align 8
  %176 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %175, i64 %173
  %177 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %176, align 8
  %178 = icmp eq %"struct.std::__1::__hash_node_base"* %177, null
  br i1 %178, label %179, label %205

179:                                              ; preds = %171
  %180 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %181 = bitcast %"struct.std::__1::__hash_node_base"* %180 to i64*
  %182 = load i64, i64* %181, align 8
  %183 = bitcast i8* %116 to i64*
  store i64 %182, i64* %183, align 8
  %184 = bitcast %"struct.std::__1::__hash_node_base"* %180 to i8**
  store i8* %116, i8** %184, align 8
  store %"struct.std::__1::__hash_node_base"* %180, %"struct.std::__1::__hash_node_base"** %176, align 8
  %185 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %137, align 8
  %186 = icmp eq %"struct.std::__1::__hash_node_base"* %185, null
  br i1 %186, label %212, label %187

187:                                              ; preds = %179
  %188 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %185, i64 1
  %189 = bitcast %"struct.std::__1::__hash_node_base"* %188 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = call i64 @llvm.ctpop.i64(i64 %172) #13, !range !43
  %192 = icmp ugt i64 %191, 1
  br i1 %192, label %196, label %193

193:                                              ; preds = %187
  %194 = add i64 %172, -1
  %195 = and i64 %190, %194
  br label %200

196:                                              ; preds = %187
  %197 = icmp ult i64 %190, %172
  br i1 %197, label %200, label %198

198:                                              ; preds = %196
  %199 = urem i64 %190, %172
  br label %200

200:                                              ; preds = %193, %196, %198
  %201 = phi i64 [ %195, %193 ], [ %199, %198 ], [ %190, %196 ]
  %202 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %174, align 8
  %203 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %202, i64 %201
  %204 = bitcast %"struct.std::__1::__hash_node_base"** %203 to i8**
  br label %210

205:                                              ; preds = %171
  %206 = bitcast %"struct.std::__1::__hash_node_base"* %177 to i64*
  %207 = load i64, i64* %206, align 8
  %208 = bitcast i8* %116 to i64*
  store i64 %207, i64* %208, align 8
  %209 = bitcast %"struct.std::__1::__hash_node_base"* %177 to i8**
  br label %210

210:                                              ; preds = %200, %205
  %211 = phi i8** [ %209, %205 ], [ %204, %200 ]
  store i8* %116, i8** %211, align 8
  br label %212

212:                                              ; preds = %210, %179
  %213 = bitcast i8* %116 to %"struct.std::__1::__hash_node_base"*
  %214 = load i64, i64* %138, align 8
  %215 = add i64 %214, 1
  store i64 %215, i64* %138, align 8
  br label %216

216:                                              ; preds = %88, %94, %95, %102, %212
  %217 = phi i8 [ 1, %212 ], [ 0, %102 ], [ 0, %95 ], [ 0, %94 ], [ 0, %88 ]
  %218 = phi %"struct.std::__1::__hash_node_base"* [ %213, %212 ], [ %56, %102 ], [ %56, %95 ], [ %56, %94 ], [ %56, %88 ]
  %219 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %218, 0
  %220 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %219, i8 %217, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %220
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE13scoped_refptrIN6device9UsbDeviceEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !43
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #13
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE13scoped_refptrIN6device9UsbDeviceEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #13, !range !43
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #13
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #13, !range !43
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #13
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE13scoped_refptrIN6device9UsbDeviceEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #5

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE13scoped_refptrIN6device9UsbDeviceEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %186, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !49

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %194, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #13, !range !43
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %194, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %180
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %184, %180 ]
  %81 = phi i64 [ %71, %77 ], [ %182, %180 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %181, %180 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %180, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %118, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 0, i32 0
  %102 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base"* %102, null
  br i1 %103, label %166, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %106 = bitcast %"struct.std::__1::__hash_node_base"* %105 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %106, i64 0, i32 1, i32 0
  %108 = load i8, i8* %107, align 1
  %109 = icmp slt i8 %108, 0
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 3
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = zext i8 %108 to i64
  %114 = select i1 %109, i64 %112, i64 %113
  %115 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i8**
  %116 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i8*
  %117 = icmp eq i64 %114, 0
  br label %119

118:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %180

119:                                              ; preds = %104, %162
  %120 = phi %"struct.std::__1::__hash_node_base"* [ %102, %104 ], [ %164, %162 ]
  %121 = phi %"struct.std::__1::__hash_node_base"* [ %80, %104 ], [ %120, %162 ]
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %120, i64 2
  %123 = bitcast %"struct.std::__1::__hash_node_base"* %122 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %124 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %123, i64 0, i32 1, i32 0
  %125 = load i8, i8* %124, align 1
  %126 = icmp slt i8 %125, 0
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %120, i64 3
  %128 = bitcast %"struct.std::__1::__hash_node_base"* %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = zext i8 %125 to i64
  %131 = select i1 %126, i64 %129, i64 %130
  %132 = icmp eq i64 %114, %131
  br i1 %132, label %133, label %166

133:                                              ; preds = %119
  %134 = load i8*, i8** %115, align 8
  %135 = select i1 %109, i8* %134, i8* %116
  %136 = bitcast %"struct.std::__1::__hash_node_base"* %122 to i8**
  %137 = load i8*, i8** %136, align 8
  %138 = bitcast %"struct.std::__1::__hash_node_base"* %122 to i8*
  %139 = select i1 %126, i8* %137, i8* %138
  br i1 %109, label %146, label %140

140:                                              ; preds = %133
  br i1 %117, label %162, label %141

141:                                              ; preds = %140
  %142 = ptrtoint i8* %134 to i64
  %143 = trunc i64 %142 to i8
  %144 = load i8, i8* %139, align 1
  %145 = icmp eq i8 %144, %143
  br i1 %145, label %147, label %166

146:                                              ; preds = %133
  br i1 %117, label %162, label %159

147:                                              ; preds = %141, %154
  %148 = phi i64 [ %151, %154 ], [ %113, %141 ]
  %149 = phi i8* [ %152, %154 ], [ %116, %141 ]
  %150 = phi i8* [ %155, %154 ], [ %139, %141 ]
  %151 = add i64 %148, -1
  %152 = getelementptr inbounds i8, i8* %149, i64 1
  %153 = icmp eq i64 %151, 0
  br i1 %153, label %162, label %154

154:                                              ; preds = %147
  %155 = getelementptr inbounds i8, i8* %150, i64 1
  %156 = load i8, i8* %152, align 1
  %157 = load i8, i8* %155, align 1
  %158 = icmp eq i8 %156, %157
  br i1 %158, label %147, label %166

159:                                              ; preds = %146
  %160 = tail call i32 @bcmp(i8* %135, i8* %139, i64 %114) #13
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %166

162:                                              ; preds = %147, %140, %146, %159
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %120, i64 0, i32 0
  %164 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %163, align 8
  %165 = icmp eq %"struct.std::__1::__hash_node_base"* %164, null
  br i1 %165, label %166, label %119

166:                                              ; preds = %159, %162, %119, %141, %154, %100
  %167 = phi %"struct.std::__1::__hash_node_base"* [ %80, %100 ], [ %121, %154 ], [ %121, %159 ], [ %120, %162 ], [ %121, %119 ], [ %121, %141 ]
  %168 = bitcast %"struct.std::__1::__hash_node_base"* %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %169, i64* %170, align 8
  %171 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %171, i64 %93
  %173 = bitcast %"struct.std::__1::__hash_node_base"** %172 to i64**
  %174 = load i64*, i64** %173, align 8
  %175 = load i64, i64* %174, align 8
  store i64 %175, i64* %168, align 8
  %176 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %177 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %176, i64 %93
  %178 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %177, align 8
  %179 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %178, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %179, align 8
  br label %180

180:                                              ; preds = %92, %166, %118
  %181 = phi %"struct.std::__1::__hash_node_base"* [ %80, %118 ], [ %82, %166 ], [ %80, %92 ]
  %182 = phi i64 [ %93, %118 ], [ %81, %166 ], [ %81, %92 ]
  %183 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %181, i64 0, i32 0
  %184 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %183, align 8
  %185 = icmp eq %"struct.std::__1::__hash_node_base"* %184, null
  br i1 %185, label %194, label %79

186:                                              ; preds = %2
  %187 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %188 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %187, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %187, align 8
  %189 = icmp eq %"struct.std::__1::__hash_node_base"** %188, null
  br i1 %189, label %192, label %190

190:                                              ; preds = %186
  %191 = bitcast %"struct.std::__1::__hash_node_base"** %188 to i8*
  tail call void @_ZdlPv(i8* %191) #12
  br label %192

192:                                              ; preds = %186, %190
  %193 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %193, align 8
  br label %194

194:                                              ; preds = %180, %70, %35, %192
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #10

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.124"*, i8 } @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.120"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1 comdat align 2 {
  %4 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %5 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %14 = zext i8 %7 to i64
  %15 = select i1 %8, i8* %10, i8* %13
  %16 = select i1 %8, i64 %12, i64 %14
  %17 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #13
  %18 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %4, i8* %15, i64 %16) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #13
  %19 = getelementptr inbounds %"class.std::__1::__hash_table.120", %"class.std::__1::__hash_table.120"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %112, label %22

22:                                               ; preds = %3
  %23 = call i64 @llvm.ctpop.i64(i64 %20) #13, !range !43
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %26, %18
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table.120", %"class.std::__1::__hash_table.120"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.124"**, %"struct.std::__1::__hash_node_base.124"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.124"*, %"struct.std::__1::__hash_node_base.124"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base.124"*, %"struct.std::__1::__hash_node_base.124"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.124"* %37, null
  br i1 %38, label %112, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base.124", %"struct.std::__1::__hash_node_base.124"* %37, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base.124"*, %"struct.std::__1::__hash_node_base.124"** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base.124"* %41, null
  br i1 %42, label %112, label %43

43:                                               ; preds = %39
  %44 = add i64 %20, -1
  %45 = load i8, i8* %6, align 1
  %46 = icmp slt i8 %45, 0
  %47 = load i64, i64* %11, align 8
  %48 = zext i8 %45 to i64
  %49 = select i1 %46, i64 %47, i64 %48
  %50 = load i8*, i8** %9, align 8
  %51 = select i1 %46, i8* %50, i8* %13
  %52 = icmp eq i64 %49, 0
  br label %53

53:                                               ; preds = %43, %96
  %54 = phi %"struct.std::__1::__hash_node_base.124"* [ %41, %43 ], [ %98, %96 ]
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.124", %"struct.std::__1::__hash_node_base.124"* %54, i64 1
  %56 = bitcast %"struct.std::__1::__hash_node_base.124"* %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = icmp eq i64 %57, %18
  br i1 %58, label %69, label %59

59:                                               ; preds = %53
  br i1 %24, label %62, label %60

60:                                               ; preds = %59
  %61 = and i64 %57, %44
  br label %66

62:                                               ; preds = %59
  %63 = icmp ult i64 %57, %20
  br i1 %63, label %66, label %64

64:                                               ; preds = %62
  %65 = urem i64 %57, %20
  br label %66

66:                                               ; preds = %60, %62, %64
  %67 = phi i64 [ %61, %60 ], [ %65, %64 ], [ %57, %62 ]
  %68 = icmp eq i64 %67, %33
  br i1 %68, label %69, label %112

69:                                               ; preds = %53, %66
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base.124", %"struct.std::__1::__hash_node_base.124"* %54, i64 2
  %71 = bitcast %"struct.std::__1::__hash_node_base.124"* %70 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  %73 = load i8, i8* %72, align 1
  %74 = icmp slt i8 %73, 0
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node_base.124", %"struct.std::__1::__hash_node_base.124"* %54, i64 3
  %76 = bitcast %"struct.std::__1::__hash_node_base.124"* %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = zext i8 %73 to i64
  %79 = select i1 %74, i64 %77, i64 %78
  %80 = icmp eq i64 %79, %49
  br i1 %80, label %81, label %96

81:                                               ; preds = %69
  %82 = bitcast %"struct.std::__1::__hash_node_base.124"* %70 to i8**
  %83 = load i8*, i8** %82, align 8
  %84 = bitcast %"struct.std::__1::__hash_node_base.124"* %70 to i8*
  %85 = select i1 %74, i8* %83, i8* %84
  br i1 %74, label %92, label %86

86:                                               ; preds = %81
  br i1 %52, label %210, label %87

87:                                               ; preds = %86
  %88 = ptrtoint i8* %83 to i64
  %89 = trunc i64 %88 to i8
  %90 = load i8, i8* %51, align 1
  %91 = icmp eq i8 %90, %89
  br i1 %91, label %100, label %96

92:                                               ; preds = %81
  br i1 %52, label %210, label %93

93:                                               ; preds = %92
  %94 = call i32 @bcmp(i8* %85, i8* %51, i64 %49) #13
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %210, label %96

96:                                               ; preds = %107, %69, %87, %93
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.124", %"struct.std::__1::__hash_node_base.124"* %54, i64 0, i32 0
  %98 = load %"struct.std::__1::__hash_node_base.124"*, %"struct.std::__1::__hash_node_base.124"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.124"* %98, null
  br i1 %99, label %112, label %53

100:                                              ; preds = %87, %107
  %101 = phi i64 [ %104, %107 ], [ %78, %87 ]
  %102 = phi i8* [ %105, %107 ], [ %84, %87 ]
  %103 = phi i8* [ %108, %107 ], [ %51, %87 ]
  %104 = add i64 %101, -1
  %105 = getelementptr inbounds i8, i8* %102, i64 1
  %106 = icmp eq i64 %104, 0
  br i1 %106, label %210, label %107

107:                                              ; preds = %100
  %108 = getelementptr inbounds i8, i8* %103, i64 1
  %109 = load i8, i8* %105, align 1
  %110 = load i8, i8* %108, align 1
  %111 = icmp eq i8 %109, %110
  br i1 %111, label %100, label %96

112:                                              ; preds = %66, %96, %39, %32, %3
  %113 = phi i64 [ %33, %32 ], [ -6148914691236517206, %3 ], [ %33, %39 ], [ %33, %96 ], [ %33, %66 ]
  %114 = call i8* @_Znwm(i64 40) #12, !noalias !50
  %115 = getelementptr inbounds i8, i8* %114, i64 16
  %116 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %117 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %116, i64 0, i32 1, i32 0
  %118 = load i8, i8* %117, align 1, !noalias !50
  %119 = icmp slt i8 %118, 0
  br i1 %119, label %122, label %120

120:                                              ; preds = %112
  %121 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %115, i8* align 8 %121, i64 24, i1 false) #13, !noalias !50
  br label %128

122:                                              ; preds = %112
  %123 = bitcast i8* %115 to %"class.std::__1::basic_string"*
  %124 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load i8*, i8** %124, align 8, !noalias !50
  %126 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %127 = load i64, i64* %126, align 8, !noalias !50
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %123, i8* %125, i64 %127) #13, !noalias !50
  br label %128

128:                                              ; preds = %120, %122
  %129 = getelementptr inbounds i8, i8* %114, i64 8
  %130 = bitcast i8* %129 to i64*
  store i64 %18, i64* %130, align 8, !noalias !50
  %131 = bitcast i8* %114 to %"struct.std::__1::__hash_node_base.124"**
  store %"struct.std::__1::__hash_node_base.124"* null, %"struct.std::__1::__hash_node_base.124"** %131, align 8, !noalias !50
  %132 = getelementptr inbounds %"class.std::__1::__hash_table.120", %"class.std::__1::__hash_table.120"* %0, i64 0, i32 2, i32 0, i32 0
  %133 = load i64, i64* %132, align 8
  %134 = add i64 %133, 1
  %135 = uitofp i64 %134 to float
  %136 = uitofp i64 %20 to float
  %137 = getelementptr inbounds %"class.std::__1::__hash_table.120", %"class.std::__1::__hash_table.120"* %0, i64 0, i32 3, i32 0, i32 0
  %138 = load float, float* %137, align 4
  %139 = fmul float %138, %136
  %140 = fcmp olt float %139, %135
  %141 = or i1 %21, %140
  br i1 %141, label %142, label %165

142:                                              ; preds = %128
  %143 = shl i64 %20, 1
  %144 = icmp ult i64 %20, 3
  %145 = call i64 @llvm.ctpop.i64(i64 %20) #13, !range !43
  %146 = icmp ugt i64 %145, 1
  %147 = or i1 %144, %146
  %148 = zext i1 %147 to i64
  %149 = or i64 %143, %148
  %150 = fdiv float %135, %138
  %151 = call float @llvm.ceil.f32(float %150) #13
  %152 = fptoui float %151 to i64
  %153 = icmp ult i64 %149, %152
  %154 = select i1 %153, i64 %152, i64 %149
  call void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE6rehashEm(%"class.std::__1::__hash_table.120"* %0, i64 %154)
  %155 = load i64, i64* %19, align 8
  %156 = call i64 @llvm.ctpop.i64(i64 %155) #13, !range !43
  %157 = icmp ugt i64 %156, 1
  br i1 %157, label %161, label %158

158:                                              ; preds = %142
  %159 = add i64 %155, -1
  %160 = and i64 %159, %18
  br label %165

161:                                              ; preds = %142
  %162 = icmp ult i64 %18, %155
  br i1 %162, label %165, label %163

163:                                              ; preds = %161
  %164 = urem i64 %18, %155
  br label %165

165:                                              ; preds = %163, %161, %158, %128
  %166 = phi i64 [ %20, %128 ], [ %155, %158 ], [ %155, %161 ], [ %155, %163 ]
  %167 = phi i64 [ %113, %128 ], [ %160, %158 ], [ %18, %161 ], [ %164, %163 ]
  %168 = getelementptr inbounds %"class.std::__1::__hash_table.120", %"class.std::__1::__hash_table.120"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %169 = load %"struct.std::__1::__hash_node_base.124"**, %"struct.std::__1::__hash_node_base.124"*** %168, align 8
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node_base.124"*, %"struct.std::__1::__hash_node_base.124"** %169, i64 %167
  %171 = load %"struct.std::__1::__hash_node_base.124"*, %"struct.std::__1::__hash_node_base.124"** %170, align 8
  %172 = icmp eq %"struct.std::__1::__hash_node_base.124"* %171, null
  br i1 %172, label %173, label %199

173:                                              ; preds = %165
  %174 = getelementptr inbounds %"class.std::__1::__hash_table.120", %"class.std::__1::__hash_table.120"* %0, i64 0, i32 1, i32 0, i32 0
  %175 = bitcast %"struct.std::__1::__hash_node_base.124"* %174 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = bitcast i8* %114 to i64*
  store i64 %176, i64* %177, align 8
  %178 = bitcast %"struct.std::__1::__hash_node_base.124"* %174 to i8**
  store i8* %114, i8** %178, align 8
  store %"struct.std::__1::__hash_node_base.124"* %174, %"struct.std::__1::__hash_node_base.124"** %170, align 8
  %179 = load %"struct.std::__1::__hash_node_base.124"*, %"struct.std::__1::__hash_node_base.124"** %131, align 8
  %180 = icmp eq %"struct.std::__1::__hash_node_base.124"* %179, null
  br i1 %180, label %206, label %181

181:                                              ; preds = %173
  %182 = getelementptr inbounds %"struct.std::__1::__hash_node_base.124", %"struct.std::__1::__hash_node_base.124"* %179, i64 1
  %183 = bitcast %"struct.std::__1::__hash_node_base.124"* %182 to i64*
  %184 = load i64, i64* %183, align 8
  %185 = call i64 @llvm.ctpop.i64(i64 %166) #13, !range !43
  %186 = icmp ugt i64 %185, 1
  br i1 %186, label %190, label %187

187:                                              ; preds = %181
  %188 = add i64 %166, -1
  %189 = and i64 %184, %188
  br label %194

190:                                              ; preds = %181
  %191 = icmp ult i64 %184, %166
  br i1 %191, label %194, label %192

192:                                              ; preds = %190
  %193 = urem i64 %184, %166
  br label %194

194:                                              ; preds = %187, %190, %192
  %195 = phi i64 [ %189, %187 ], [ %193, %192 ], [ %184, %190 ]
  %196 = load %"struct.std::__1::__hash_node_base.124"**, %"struct.std::__1::__hash_node_base.124"*** %168, align 8
  %197 = getelementptr inbounds %"struct.std::__1::__hash_node_base.124"*, %"struct.std::__1::__hash_node_base.124"** %196, i64 %195
  %198 = bitcast %"struct.std::__1::__hash_node_base.124"** %197 to i8**
  br label %204

199:                                              ; preds = %165
  %200 = bitcast %"struct.std::__1::__hash_node_base.124"* %171 to i64*
  %201 = load i64, i64* %200, align 8
  %202 = bitcast i8* %114 to i64*
  store i64 %201, i64* %202, align 8
  %203 = bitcast %"struct.std::__1::__hash_node_base.124"* %171 to i8**
  br label %204

204:                                              ; preds = %194, %199
  %205 = phi i8** [ %203, %199 ], [ %198, %194 ]
  store i8* %114, i8** %205, align 8
  br label %206

206:                                              ; preds = %204, %173
  %207 = bitcast i8* %114 to %"struct.std::__1::__hash_node_base.124"*
  %208 = load i64, i64* %132, align 8
  %209 = add i64 %208, 1
  store i64 %209, i64* %132, align 8
  br label %210

210:                                              ; preds = %86, %92, %93, %100, %206
  %211 = phi i8 [ 1, %206 ], [ 0, %100 ], [ 0, %93 ], [ 0, %92 ], [ 0, %86 ]
  %212 = phi %"struct.std::__1::__hash_node_base.124"* [ %207, %206 ], [ %54, %100 ], [ %54, %93 ], [ %54, %92 ], [ %54, %86 ]
  %213 = insertvalue { %"struct.std::__1::__hash_node_base.124"*, i8 } undef, %"struct.std::__1::__hash_node_base.124"* %212, 0
  %214 = insertvalue { %"struct.std::__1::__hash_node_base.124"*, i8 } %213, i8 %211, 1
  ret { %"struct.std::__1::__hash_node_base.124"*, i8 } %214
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE6rehashEm(%"class.std::__1::__hash_table.120"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !43
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #13
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.120", %"class.std::__1::__hash_table.120"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE8__rehashEm(%"class.std::__1::__hash_table.120"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #13, !range !43
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.120", %"class.std::__1::__hash_table.120"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.120", %"class.std::__1::__hash_table.120"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #13
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #13, !range !43
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #13
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE8__rehashEm(%"class.std::__1::__hash_table.120"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE8__rehashEm(%"class.std::__1::__hash_table.120"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.120", %"class.std::__1::__hash_table.120"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %186, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.120", %"class.std::__1::__hash_table.120"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.124"**, %"struct.std::__1::__hash_node_base.124"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.120"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.124"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.124"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.126", %"class.std::__1::__bucket_list_deallocator.126"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.124"**, %"struct.std::__1::__hash_node_base.124"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.124"*, %"struct.std::__1::__hash_node_base.124"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.124"* null, %"struct.std::__1::__hash_node_base.124"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !53

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.120", %"class.std::__1::__hash_table.120"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.124", %"struct.std::__1::__hash_node_base.124"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.124"*, %"struct.std::__1::__hash_node_base.124"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.124"* %38, null
  br i1 %39, label %194, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.124"**, %"struct.std::__1::__hash_node_base.124"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.124"*, %"struct.std::__1::__hash_node_base.124"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.124"* null, %"struct.std::__1::__hash_node_base.124"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.124"**, %"struct.std::__1::__hash_node_base.124"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.124"*, %"struct.std::__1::__hash_node_base.124"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.124"* null, %"struct.std::__1::__hash_node_base.124"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.124"**, %"struct.std::__1::__hash_node_base.124"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.124"*, %"struct.std::__1::__hash_node_base.124"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.124"* null, %"struct.std::__1::__hash_node_base.124"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.124"**, %"struct.std::__1::__hash_node_base.124"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.124"*, %"struct.std::__1::__hash_node_base.124"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.124"* null, %"struct.std::__1::__hash_node_base.124"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.124", %"struct.std::__1::__hash_node_base.124"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.124"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #13, !range !43
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.124"**, %"struct.std::__1::__hash_node_base.124"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.124"*, %"struct.std::__1::__hash_node_base.124"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.124"* %36, %"struct.std::__1::__hash_node_base.124"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.124", %"struct.std::__1::__hash_node_base.124"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.124"*, %"struct.std::__1::__hash_node_base.124"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.124"* %75, null
  br i1 %76, label %194, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %180
  %80 = phi %"struct.std::__1::__hash_node_base.124"* [ %75, %77 ], [ %184, %180 ]
  %81 = phi i64 [ %71, %77 ], [ %182, %180 ]
  %82 = phi %"struct.std::__1::__hash_node_base.124"* [ %38, %77 ], [ %181, %180 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.124", %"struct.std::__1::__hash_node_base.124"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.124"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %180, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.124"**, %"struct.std::__1::__hash_node_base.124"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.124"*, %"struct.std::__1::__hash_node_base.124"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.124"*, %"struct.std::__1::__hash_node_base.124"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.124"* %98, null
  br i1 %99, label %118, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.124", %"struct.std::__1::__hash_node_base.124"* %80, i64 0, i32 0
  %102 = load %"struct.std::__1::__hash_node_base.124"*, %"struct.std::__1::__hash_node_base.124"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base.124"* %102, null
  br i1 %103, label %166, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base.124", %"struct.std::__1::__hash_node_base.124"* %80, i64 2
  %106 = bitcast %"struct.std::__1::__hash_node_base.124"* %105 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %106, i64 0, i32 1, i32 0
  %108 = load i8, i8* %107, align 1
  %109 = icmp slt i8 %108, 0
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.124", %"struct.std::__1::__hash_node_base.124"* %80, i64 3
  %111 = bitcast %"struct.std::__1::__hash_node_base.124"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = zext i8 %108 to i64
  %114 = select i1 %109, i64 %112, i64 %113
  %115 = bitcast %"struct.std::__1::__hash_node_base.124"* %105 to i8**
  %116 = bitcast %"struct.std::__1::__hash_node_base.124"* %105 to i8*
  %117 = icmp eq i64 %114, 0
  br label %119

118:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.124"* %82, %"struct.std::__1::__hash_node_base.124"** %97, align 8
  br label %180

119:                                              ; preds = %104, %162
  %120 = phi %"struct.std::__1::__hash_node_base.124"* [ %102, %104 ], [ %164, %162 ]
  %121 = phi %"struct.std::__1::__hash_node_base.124"* [ %80, %104 ], [ %120, %162 ]
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base.124", %"struct.std::__1::__hash_node_base.124"* %120, i64 2
  %123 = bitcast %"struct.std::__1::__hash_node_base.124"* %122 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %124 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %123, i64 0, i32 1, i32 0
  %125 = load i8, i8* %124, align 1
  %126 = icmp slt i8 %125, 0
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.124", %"struct.std::__1::__hash_node_base.124"* %120, i64 3
  %128 = bitcast %"struct.std::__1::__hash_node_base.124"* %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = zext i8 %125 to i64
  %131 = select i1 %126, i64 %129, i64 %130
  %132 = icmp eq i64 %114, %131
  br i1 %132, label %133, label %166

133:                                              ; preds = %119
  %134 = load i8*, i8** %115, align 8
  %135 = select i1 %109, i8* %134, i8* %116
  %136 = bitcast %"struct.std::__1::__hash_node_base.124"* %122 to i8**
  %137 = load i8*, i8** %136, align 8
  %138 = bitcast %"struct.std::__1::__hash_node_base.124"* %122 to i8*
  %139 = select i1 %126, i8* %137, i8* %138
  br i1 %109, label %146, label %140

140:                                              ; preds = %133
  br i1 %117, label %162, label %141

141:                                              ; preds = %140
  %142 = ptrtoint i8* %134 to i64
  %143 = trunc i64 %142 to i8
  %144 = load i8, i8* %139, align 1
  %145 = icmp eq i8 %144, %143
  br i1 %145, label %147, label %166

146:                                              ; preds = %133
  br i1 %117, label %162, label %159

147:                                              ; preds = %141, %154
  %148 = phi i64 [ %151, %154 ], [ %113, %141 ]
  %149 = phi i8* [ %152, %154 ], [ %116, %141 ]
  %150 = phi i8* [ %155, %154 ], [ %139, %141 ]
  %151 = add i64 %148, -1
  %152 = getelementptr inbounds i8, i8* %149, i64 1
  %153 = icmp eq i64 %151, 0
  br i1 %153, label %162, label %154

154:                                              ; preds = %147
  %155 = getelementptr inbounds i8, i8* %150, i64 1
  %156 = load i8, i8* %152, align 1
  %157 = load i8, i8* %155, align 1
  %158 = icmp eq i8 %156, %157
  br i1 %158, label %147, label %166

159:                                              ; preds = %146
  %160 = tail call i32 @bcmp(i8* %135, i8* %139, i64 %114) #13
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %166

162:                                              ; preds = %147, %140, %146, %159
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base.124", %"struct.std::__1::__hash_node_base.124"* %120, i64 0, i32 0
  %164 = load %"struct.std::__1::__hash_node_base.124"*, %"struct.std::__1::__hash_node_base.124"** %163, align 8
  %165 = icmp eq %"struct.std::__1::__hash_node_base.124"* %164, null
  br i1 %165, label %166, label %119

166:                                              ; preds = %159, %162, %119, %141, %154, %100
  %167 = phi %"struct.std::__1::__hash_node_base.124"* [ %80, %100 ], [ %121, %154 ], [ %121, %141 ], [ %121, %159 ], [ %120, %162 ], [ %121, %119 ]
  %168 = bitcast %"struct.std::__1::__hash_node_base.124"* %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = bitcast %"struct.std::__1::__hash_node_base.124"* %82 to i64*
  store i64 %169, i64* %170, align 8
  %171 = load %"struct.std::__1::__hash_node_base.124"**, %"struct.std::__1::__hash_node_base.124"*** %11, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base.124"*, %"struct.std::__1::__hash_node_base.124"** %171, i64 %93
  %173 = bitcast %"struct.std::__1::__hash_node_base.124"** %172 to i64**
  %174 = load i64*, i64** %173, align 8
  %175 = load i64, i64* %174, align 8
  store i64 %175, i64* %168, align 8
  %176 = load %"struct.std::__1::__hash_node_base.124"**, %"struct.std::__1::__hash_node_base.124"*** %11, align 8
  %177 = getelementptr inbounds %"struct.std::__1::__hash_node_base.124"*, %"struct.std::__1::__hash_node_base.124"** %176, i64 %93
  %178 = load %"struct.std::__1::__hash_node_base.124"*, %"struct.std::__1::__hash_node_base.124"** %177, align 8
  %179 = getelementptr inbounds %"struct.std::__1::__hash_node_base.124", %"struct.std::__1::__hash_node_base.124"* %178, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.124"* %80, %"struct.std::__1::__hash_node_base.124"** %179, align 8
  br label %180

180:                                              ; preds = %92, %166, %118
  %181 = phi %"struct.std::__1::__hash_node_base.124"* [ %80, %118 ], [ %82, %166 ], [ %80, %92 ]
  %182 = phi i64 [ %93, %118 ], [ %81, %166 ], [ %81, %92 ]
  %183 = getelementptr inbounds %"struct.std::__1::__hash_node_base.124", %"struct.std::__1::__hash_node_base.124"* %181, i64 0, i32 0
  %184 = load %"struct.std::__1::__hash_node_base.124"*, %"struct.std::__1::__hash_node_base.124"** %183, align 8
  %185 = icmp eq %"struct.std::__1::__hash_node_base.124"* %184, null
  br i1 %185, label %194, label %79

186:                                              ; preds = %2
  %187 = getelementptr inbounds %"class.std::__1::__hash_table.120", %"class.std::__1::__hash_table.120"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %188 = load %"struct.std::__1::__hash_node_base.124"**, %"struct.std::__1::__hash_node_base.124"*** %187, align 8
  store %"struct.std::__1::__hash_node_base.124"** null, %"struct.std::__1::__hash_node_base.124"*** %187, align 8
  %189 = icmp eq %"struct.std::__1::__hash_node_base.124"** %188, null
  br i1 %189, label %192, label %190

190:                                              ; preds = %186
  %191 = bitcast %"struct.std::__1::__hash_node_base.124"** %188 to i8*
  tail call void @_ZdlPv(i8* %191) #12
  br label %192

192:                                              ; preds = %186, %190
  %193 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.126", %"class.std::__1::__bucket_list_deallocator.126"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %193, align 8
  br label %194

194:                                              ; preds = %180, %70, %35, %192
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.124"* @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE4findIS6_EENS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEERKT_(%"class.std::__1::__hash_table.120"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %4 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %13 = zext i8 %6 to i64
  %14 = select i1 %7, i8* %9, i8* %12
  %15 = select i1 %7, i64 %11, i64 %13
  %16 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #13
  %17 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %3, i8* %14, i64 %15) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #13
  %18 = getelementptr inbounds %"class.std::__1::__hash_table.120", %"class.std::__1::__hash_table.120"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %111, label %21

21:                                               ; preds = %2
  %22 = call i64 @llvm.ctpop.i64(i64 %19) #13, !range !43
  %23 = icmp ugt i64 %22, 1
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = add i64 %19, -1
  %26 = and i64 %25, %17
  br label %31

27:                                               ; preds = %21
  %28 = icmp ult i64 %17, %19
  br i1 %28, label %31, label %29

29:                                               ; preds = %27
  %30 = urem i64 %17, %19
  br label %31

31:                                               ; preds = %24, %27, %29
  %32 = phi i64 [ %26, %24 ], [ %30, %29 ], [ %17, %27 ]
  %33 = getelementptr inbounds %"class.std::__1::__hash_table.120", %"class.std::__1::__hash_table.120"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base.124"**, %"struct.std::__1::__hash_node_base.124"*** %33, align 8
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.124"*, %"struct.std::__1::__hash_node_base.124"** %34, i64 %32
  %36 = load %"struct.std::__1::__hash_node_base.124"*, %"struct.std::__1::__hash_node_base.124"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base.124"* %36, null
  br i1 %37, label %111, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.124", %"struct.std::__1::__hash_node_base.124"* %36, i64 0, i32 0
  %40 = load %"struct.std::__1::__hash_node_base.124"*, %"struct.std::__1::__hash_node_base.124"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.124"* %40, null
  br i1 %41, label %111, label %42

42:                                               ; preds = %38
  %43 = add i64 %19, -1
  %44 = load i8, i8* %5, align 1
  %45 = icmp slt i8 %44, 0
  %46 = load i64, i64* %10, align 8
  %47 = zext i8 %44 to i64
  %48 = select i1 %45, i64 %46, i64 %47
  %49 = load i8*, i8** %8, align 8
  %50 = select i1 %45, i8* %49, i8* %12
  %51 = icmp eq i64 %48, 0
  br label %52

52:                                               ; preds = %42, %107
  %53 = phi %"struct.std::__1::__hash_node_base.124"* [ %40, %42 ], [ %109, %107 ]
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.124", %"struct.std::__1::__hash_node_base.124"* %53, i64 1
  %55 = bitcast %"struct.std::__1::__hash_node_base.124"* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = icmp eq i64 %56, %17
  br i1 %57, label %68, label %58

58:                                               ; preds = %52
  br i1 %23, label %61, label %59

59:                                               ; preds = %58
  %60 = and i64 %56, %43
  br label %65

61:                                               ; preds = %58
  %62 = icmp ult i64 %56, %19
  br i1 %62, label %65, label %63

63:                                               ; preds = %61
  %64 = urem i64 %56, %19
  br label %65

65:                                               ; preds = %59, %61, %63
  %66 = phi i64 [ %60, %59 ], [ %64, %63 ], [ %56, %61 ]
  %67 = icmp eq i64 %66, %32
  br i1 %67, label %107, label %111

68:                                               ; preds = %52
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.124", %"struct.std::__1::__hash_node_base.124"* %53, i64 2
  %70 = bitcast %"struct.std::__1::__hash_node_base.124"* %69 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.124", %"struct.std::__1::__hash_node_base.124"* %53, i64 3
  %75 = bitcast %"struct.std::__1::__hash_node_base.124"* %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = zext i8 %72 to i64
  %78 = select i1 %73, i64 %76, i64 %77
  %79 = icmp eq i64 %78, %48
  br i1 %79, label %80, label %107

80:                                               ; preds = %68
  %81 = bitcast %"struct.std::__1::__hash_node_base.124"* %69 to i8**
  %82 = load i8*, i8** %81, align 8
  %83 = bitcast %"struct.std::__1::__hash_node_base.124"* %69 to i8*
  %84 = select i1 %73, i8* %82, i8* %83
  br i1 %73, label %91, label %85

85:                                               ; preds = %80
  br i1 %51, label %111, label %86

86:                                               ; preds = %85
  %87 = ptrtoint i8* %82 to i64
  %88 = trunc i64 %87 to i8
  %89 = load i8, i8* %50, align 1
  %90 = icmp eq i8 %89, %88
  br i1 %90, label %92, label %107

91:                                               ; preds = %80
  br i1 %51, label %111, label %104

92:                                               ; preds = %86, %99
  %93 = phi i64 [ %96, %99 ], [ %77, %86 ]
  %94 = phi i8* [ %97, %99 ], [ %83, %86 ]
  %95 = phi i8* [ %100, %99 ], [ %50, %86 ]
  %96 = add i64 %93, -1
  %97 = getelementptr inbounds i8, i8* %94, i64 1
  %98 = icmp eq i64 %96, 0
  br i1 %98, label %111, label %99

99:                                               ; preds = %92
  %100 = getelementptr inbounds i8, i8* %95, i64 1
  %101 = load i8, i8* %97, align 1
  %102 = load i8, i8* %100, align 1
  %103 = icmp eq i8 %101, %102
  br i1 %103, label %92, label %107

104:                                              ; preds = %91
  %105 = call i32 @bcmp(i8* %84, i8* %50, i64 %48) #13
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %111, label %107

107:                                              ; preds = %99, %86, %68, %65, %104
  %108 = getelementptr inbounds %"struct.std::__1::__hash_node_base.124", %"struct.std::__1::__hash_node_base.124"* %53, i64 0, i32 0
  %109 = load %"struct.std::__1::__hash_node_base.124"*, %"struct.std::__1::__hash_node_base.124"** %108, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base.124"* %109, null
  br i1 %110, label %111, label %52

111:                                              ; preds = %104, %107, %65, %91, %85, %92, %38, %2, %31
  %112 = phi %"struct.std::__1::__hash_node_base.124"* [ null, %31 ], [ null, %2 ], [ null, %38 ], [ %53, %92 ], [ %53, %104 ], [ null, %107 ], [ null, %65 ], [ %53, %91 ], [ %53, %85 ]
  ret %"struct.std::__1::__hash_node_base.124"* %112
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE13scoped_refptrIN6device9UsbDeviceEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeISC_PvEEEE(%"class.std::__1::unique_ptr.232"* noalias sret, %"class.std::__1::__hash_table"*, %"struct.std::__1::__hash_node_base"*) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #13, !range !43
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.110", %"class.std::__1::__compressed_pair.110"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base"* %25, %"struct.std::__1::__hash_node_base"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.232"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.232", %"class.std::__1::unique_ptr.232"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::allocator.113"** %98 to %"class.std::__1::__compressed_pair.110"**
  store %"class.std::__1::__compressed_pair.110"* %30, %"class.std::__1::__compressed_pair.110"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.232", %"class.std::__1::unique_ptr.232"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_PvEEEE(%"class.std::__1::unique_ptr.240"* noalias sret, %"class.std::__1::__hash_table.120"*, %"struct.std::__1::__hash_node_base.124"*) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table.120", %"class.std::__1::__hash_table.120"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base.124", %"struct.std::__1::__hash_node_base.124"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base.124"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #13, !range !43
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table.120", %"class.std::__1::__hash_table.120"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base.124"**, %"struct.std::__1::__hash_node_base.124"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.124"*, %"struct.std::__1::__hash_node_base.124"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base.124"*, %"struct.std::__1::__hash_node_base.124"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base.124"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.124", %"struct.std::__1::__hash_node_base.124"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base.124"*, %"struct.std::__1::__hash_node_base.124"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base.124"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table.120", %"class.std::__1::__hash_table.120"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.131", %"class.std::__1::__compressed_pair.131"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base.124"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.124", %"struct.std::__1::__hash_node_base.124"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.124"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.124", %"struct.std::__1::__hash_node_base.124"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base.124"*, %"struct.std::__1::__hash_node_base.124"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base.124"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.124", %"struct.std::__1::__hash_node_base.124"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base.124"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base.124"* null, %"struct.std::__1::__hash_node_base.124"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.124", %"struct.std::__1::__hash_node_base.124"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.124"*, %"struct.std::__1::__hash_node_base.124"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base.124"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base.124"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.124", %"struct.std::__1::__hash_node_base.124"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base.124"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base.124"**, %"struct.std::__1::__hash_node_base.124"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base.124"*, %"struct.std::__1::__hash_node_base.124"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base.124"* %25, %"struct.std::__1::__hash_node_base.124"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base.124"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base.124"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base.124"* null, %"struct.std::__1::__hash_node_base.124"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table.120", %"class.std::__1::__hash_table.120"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base.124"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.240"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.240", %"class.std::__1::unique_ptr.240"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::allocator.134"** %98 to %"class.std::__1::__compressed_pair.131"**
  store %"class.std::__1::__compressed_pair.131"* %30, %"class.std::__1::__compressed_pair.131"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.240", %"class.std::__1::unique_ptr.240"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

declare void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"*) unnamed_addr #5

declare void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #10

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #11

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { nofree nounwind readonly }
attributes #12 = { builtin nounwind }
attributes #13 = { nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = !{!5, !7}
!5 = distinct !{!5, !6, !"_ZN4base8internal8BindImplINS_12OnceCallbackENS2_IFvRKNSt3__16vectorI13scoped_refptrIN6device9UsbDeviceEENS3_9allocatorIS8_EEEEEEEJRSB_EEEDcOT0_DpOT1_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8internal8BindImplINS_12OnceCallbackENS2_IFvRKNSt3__16vectorI13scoped_refptrIN6device9UsbDeviceEENS3_9allocatorIS8_EEEEEEEJRSB_EEEDcOT0_DpOT1_"}
!7 = distinct !{!7, !8, !"_ZN4base8BindOnceINS_12OnceCallbackIFvRKNSt3__16vectorI13scoped_refptrIN6device9UsbDeviceEENS2_9allocatorIS7_EEEEEEEJRSA_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_: argument 0"}
!8 = distinct !{!8, !"_ZN4base8BindOnceINS_12OnceCallbackIFvRKNSt3__16vectorI13scoped_refptrIN6device9UsbDeviceEENS2_9allocatorIS7_EEEEEEEJRSA_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_"}
!9 = distinct !{!9, !3}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNK4base12ObserverListIN6device10UsbService8ObserverELb1ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!12 = distinct !{!12, !"_ZNK4base12ObserverListIN6device10UsbService8ObserverELb1ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNK4base12ObserverListIN6device10UsbService8ObserverELb1ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!15 = distinct !{!15, !"_ZNK4base12ObserverListIN6device10UsbService8ObserverELb1ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!16 = distinct !{!16, !3}
!17 = distinct !{!17, !3}
!18 = !{i8 0, i8 2}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZNK4base12ObserverListIN6device10UsbService8ObserverELb1ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!21 = distinct !{!21, !"_ZNK4base12ObserverListIN6device10UsbService8ObserverELb1ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZNK4base12ObserverListIN6device10UsbService8ObserverELb1ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!24 = distinct !{!24, !"_ZNK4base12ObserverListIN6device10UsbService8ObserverELb1ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!25 = distinct !{!25, !3}
!26 = distinct !{!26, !3}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZNK4base12ObserverListIN6device10UsbService8ObserverELb1ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!29 = distinct !{!29, !"_ZNK4base12ObserverListIN6device10UsbService8ObserverELb1ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZNK4base12ObserverListIN6device10UsbService8ObserverELb1ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!32 = distinct !{!32, !"_ZNK4base12ObserverListIN6device10UsbService8ObserverELb1ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!33 = distinct !{!33, !3}
!34 = distinct !{!34, !3}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZNK4base12ObserverListIN6device10UsbService8ObserverELb1ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!37 = distinct !{!37, !"_ZNK4base12ObserverListIN6device10UsbService8ObserverELb1ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZNK4base12ObserverListIN6device10UsbService8ObserverELb1ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!40 = distinct !{!40, !"_ZNK4base12ObserverListIN6device10UsbService8ObserverELb1ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!41 = distinct !{!41, !3}
!42 = distinct !{!42, !3}
!43 = !{i64 0, i64 65}
!44 = distinct !{!44, !3}
!45 = distinct !{!45, !3}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE13scoped_refptrIN6device9UsbDeviceEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS7_EEENSR_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISC_PvEENS_22__hash_node_destructorINS5_ISZ_EEEEEEmOT_DpOT0_: argument 0"}
!48 = distinct !{!48, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE13scoped_refptrIN6device9UsbDeviceEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS7_EEENSR_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISC_PvEENS_22__hash_node_destructorINS5_ISZ_EEEEEEmOT_DpOT0_"}
!49 = distinct !{!49, !3}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE21__construct_node_hashIRKS6_JEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINS4_ISJ_EEEEEEmOT_DpOT0_: argument 0"}
!52 = distinct !{!52, !"_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE21__construct_node_hashIRKS6_JEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINS4_ISJ_EEEEEEmOT_DpOT0_"}
!53 = distinct !{!53, !3}
