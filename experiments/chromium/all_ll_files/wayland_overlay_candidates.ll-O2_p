; ModuleID = '../../ui/ozone/platform/wayland/gpu/wayland_overlay_candidates.cc'
source_filename = "../../ui/ozone/platform/wayland/gpu/wayland_overlay_candidates.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ui::WaylandOverlayCandidates" = type <{ %"class.ui::OverlayCandidatesOzone", %"class.ui::WaylandOverlayManager"*, i32, [4 x i8] }>
%"class.ui::OverlayCandidatesOzone" = type { i32 (...)** }
%"class.ui::WaylandOverlayManager" = type { %"class.ui::OverlayManagerOzone.base", [7 x i8] }
%"class.ui::OverlayManagerOzone.base" = type <{ i32 (...)**, i8 }>
%"class.std::__1::vector" = type opaque

@_ZTVN2ui24WaylandOverlayCandidatesE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ui::WaylandOverlayCandidates"*, %"class.std::__1::vector"*)* @_ZN2ui24WaylandOverlayCandidates19CheckOverlaySupportEPNSt3__16vectorINS_23OverlaySurfaceCandidateENS1_9allocatorIS3_EEEE to i8*), i8* bitcast (void (%"class.ui::WaylandOverlayCandidates"*)* @_ZN2ui24WaylandOverlayCandidatesD2Ev to i8*), i8* bitcast (void (%"class.ui::WaylandOverlayCandidates"*)* @_ZN2ui24WaylandOverlayCandidatesD0Ev to i8*)] }, align 8

@_ZN2ui24WaylandOverlayCandidatesC1EPNS_21WaylandOverlayManagerEj = hidden unnamed_addr alias void (%"class.ui::WaylandOverlayCandidates"*, %"class.ui::WaylandOverlayManager"*, i32), void (%"class.ui::WaylandOverlayCandidates"*, %"class.ui::WaylandOverlayManager"*, i32)* @_ZN2ui24WaylandOverlayCandidatesC2EPNS_21WaylandOverlayManagerEj
@_ZN2ui24WaylandOverlayCandidatesD1Ev = hidden unnamed_addr alias void (%"class.ui::WaylandOverlayCandidates"*), void (%"class.ui::WaylandOverlayCandidates"*)* @_ZN2ui24WaylandOverlayCandidatesD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2ui24WaylandOverlayCandidatesC2EPNS_21WaylandOverlayManagerEj(%"class.ui::WaylandOverlayCandidates"* nocapture, %"class.ui::WaylandOverlayManager"*, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.ui::WaylandOverlayCandidates", %"class.ui::WaylandOverlayCandidates"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui24WaylandOverlayCandidatesE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.ui::WaylandOverlayCandidates", %"class.ui::WaylandOverlayCandidates"* %0, i64 0, i32 1
  store %"class.ui::WaylandOverlayManager"* %1, %"class.ui::WaylandOverlayManager"** %5, align 8
  %6 = getelementptr inbounds %"class.ui::WaylandOverlayCandidates", %"class.ui::WaylandOverlayCandidates"* %0, i64 0, i32 2
  store i32 %2, i32* %6, align 8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2ui22OverlayCandidatesOzoneD2Ev(%"class.ui::OverlayCandidatesOzone"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui24WaylandOverlayCandidatesD2Ev(%"class.ui::WaylandOverlayCandidates"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.ui::WaylandOverlayCandidates", %"class.ui::WaylandOverlayCandidates"* %0, i64 0, i32 0
  tail call void @_ZN2ui22OverlayCandidatesOzoneD2Ev(%"class.ui::OverlayCandidatesOzone"* %2) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui24WaylandOverlayCandidatesD0Ev(%"class.ui::WaylandOverlayCandidates"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.ui::WaylandOverlayCandidates", %"class.ui::WaylandOverlayCandidates"* %0, i64 0, i32 0
  tail call void @_ZN2ui22OverlayCandidatesOzoneD2Ev(%"class.ui::OverlayCandidatesOzone"* %2) #5
  %3 = bitcast %"class.ui::WaylandOverlayCandidates"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui24WaylandOverlayCandidates19CheckOverlaySupportEPNSt3__16vectorINS_23OverlaySurfaceCandidateENS1_9allocatorIS3_EEEE(%"class.ui::WaylandOverlayCandidates"* nocapture readonly, %"class.std::__1::vector"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.ui::WaylandOverlayCandidates", %"class.ui::WaylandOverlayCandidates"* %0, i64 0, i32 1
  %4 = load %"class.ui::WaylandOverlayManager"*, %"class.ui::WaylandOverlayManager"** %3, align 8
  %5 = getelementptr inbounds %"class.ui::WaylandOverlayCandidates", %"class.ui::WaylandOverlayCandidates"* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  tail call void @_ZN2ui21WaylandOverlayManager19CheckOverlaySupportEPNSt3__16vectorINS_23OverlaySurfaceCandidateENS1_9allocatorIS3_EEEEj(%"class.ui::WaylandOverlayManager"* %4, %"class.std::__1::vector"* %1, i32 %6) #5
  ret void
}

declare void @_ZN2ui21WaylandOverlayManager19CheckOverlaySupportEPNSt3__16vectorINS_23OverlaySurfaceCandidateENS1_9allocatorIS3_EEEEj(%"class.ui::WaylandOverlayManager"*, %"class.std::__1::vector"*, i32) local_unnamed_addr #4

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
