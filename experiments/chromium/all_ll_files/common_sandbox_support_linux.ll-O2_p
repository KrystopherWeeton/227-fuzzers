; ModuleID = '../../content/common/common_sandbox_support_linux.cc'
source_filename = "../../content/common/common_sandbox_support_linux.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content12GetFontTableEijlPhPm(i32, i32, i64, i8*, i64* nocapture) local_unnamed_addr #0 {
  %6 = alloca %struct.stat, align 8
  %7 = alloca i16, align 2
  %8 = icmp slt i64 %2, 0
  br i1 %8, label %109, label %9

9:                                                ; preds = %5
  %10 = icmp eq i32 %1, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %9
  %12 = bitcast %struct.stat* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %12) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 144, i1 false)
  %13 = bitcast %struct.stat* %6 to %struct.stat64*
  %14 = call i32 @__fxstat64(i32 1, i32 %0, %struct.stat64* nonnull %13) #9
  %15 = icmp slt i32 %14, 0
  br i1 %15, label %22, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.stat, %struct.stat* %6, i64 0, i32 8
  %18 = load i64, i64* %17, align 8
  %19 = icmp sgt i64 %18, -1
  br i1 %19, label %21, label %20, !prof !2

20:                                               ; preds = %16
  call void @llvm.trap() #9
  unreachable

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %12) #9
  br label %77

22:                                               ; preds = %11
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %12) #9
  br label %109

23:                                               ; preds = %9
  %24 = bitcast i16* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %24) #9
  store i16 -21846, i16* %7, align 2
  br label %25

25:                                               ; preds = %27, %23
  %26 = call i64 @pread64(i32 %0, i8* nonnull %24, i64 2, i64 4) #9
  switch i64 %26, label %72 [
    i64 -1, label %27
    i64 2, label %31
  ]

27:                                               ; preds = %25
  %28 = tail call i32* @__errno_location() #10
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 4
  br i1 %30, label %25, label %72

31:                                               ; preds = %25
  %32 = load i16, i16* %7, align 2
  %33 = call i16 @llvm.bswap.i16(i16 %32) #9
  store i16 %33, i16* %7, align 2
  %34 = zext i16 %33 to i64
  %35 = shl nuw nsw i64 %34, 4
  %36 = call i8* @_Znam(i64 %35) #11
  br label %37

37:                                               ; preds = %40, %31
  %38 = call i64 @pread64(i32 %0, i8* nonnull %36, i64 %35, i64 12) #9
  %39 = icmp eq i64 %38, -1
  br i1 %39, label %40, label %44

40:                                               ; preds = %37
  %41 = tail call i32* @__errno_location() #10
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 4
  br i1 %43, label %37, label %76

44:                                               ; preds = %37
  %45 = icmp eq i64 %38, %35
  br i1 %45, label %46, label %76

46:                                               ; preds = %44
  %47 = load i16, i16* %7, align 2
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %73, label %49

49:                                               ; preds = %46
  %50 = zext i16 %47 to i64
  br label %53

51:                                               ; preds = %53
  %52 = icmp ult i64 %60, %50
  br i1 %52, label %53, label %73

53:                                               ; preds = %49, %51
  %54 = phi i64 [ 0, %49 ], [ %60, %51 ]
  %55 = shl nuw nsw i64 %54, 4
  %56 = getelementptr inbounds i8, i8* %36, i64 %55
  %57 = bitcast i8* %56 to i32*
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, %1
  %60 = add nuw nsw i64 %54, 1
  br i1 %59, label %61, label %51

61:                                               ; preds = %53
  %62 = getelementptr inbounds i8, i8* %56, i64 8
  %63 = bitcast i8* %62 to i32*
  %64 = load i32, i32* %63, align 4
  %65 = call i32 @llvm.bswap.i32(i32 %64) #9
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds i8, i8* %56, i64 12
  %68 = bitcast i8* %67 to i32*
  %69 = load i32, i32* %68, align 4
  %70 = call i32 @llvm.bswap.i32(i32 %69) #9
  %71 = zext i32 %70 to i64
  br label %73

72:                                               ; preds = %25, %27
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %24) #9
  br label %109

73:                                               ; preds = %51, %61, %46
  %74 = phi i64 [ 0, %46 ], [ %71, %61 ], [ 0, %51 ]
  %75 = phi i64 [ 0, %46 ], [ %66, %61 ], [ 0, %51 ]
  call void @_ZdaPv(i8* nonnull %36) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %24) #9
  br label %77

76:                                               ; preds = %40, %44
  call void @_ZdaPv(i8* nonnull %36) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %24) #9
  br label %109

77:                                               ; preds = %73, %21
  %78 = phi i64 [ %18, %21 ], [ %74, %73 ]
  %79 = phi i64 [ 0, %21 ], [ %75, %73 ]
  %80 = icmp eq i64 %78, 0
  br i1 %80, label %109, label %81

81:                                               ; preds = %77
  %82 = icmp slt i64 %78, %2
  %83 = select i1 %82, i64 %78, i64 %2
  %84 = icmp sgt i64 %83, 1073741823
  %85 = icmp sgt i64 %79, 1073741823
  %86 = or i1 %85, %84
  br i1 %86, label %109, label %87

87:                                               ; preds = %81
  %88 = add nsw i64 %83, %79
  %89 = sub i64 %78, %83
  %90 = icmp eq i8* %3, null
  br i1 %90, label %107, label %91

91:                                               ; preds = %87
  %92 = load i64, i64* %4, align 8
  %93 = icmp ult i64 %92, %89
  %94 = select i1 %93, i64 %92, i64 %89
  br label %95

95:                                               ; preds = %98, %91
  %96 = call i64 @pread64(i32 %0, i8* nonnull %3, i64 %94, i64 %88) #9
  %97 = icmp eq i64 %96, -1
  br i1 %97, label %98, label %102

98:                                               ; preds = %95
  %99 = tail call i32* @__errno_location() #10
  %100 = load i32, i32* %99, align 4
  %101 = icmp eq i32 %100, 4
  br i1 %101, label %95, label %102

102:                                              ; preds = %95, %98
  %103 = icmp sgt i64 %94, -1
  br i1 %103, label %105, label %104, !prof !2

104:                                              ; preds = %102
  call void @llvm.trap() #9
  unreachable

105:                                              ; preds = %102
  %106 = icmp eq i64 %96, %94
  br i1 %106, label %107, label %109

107:                                              ; preds = %87, %105
  %108 = phi i64 [ %89, %87 ], [ %94, %105 ]
  store i64 %108, i64* %4, align 8
  br label %109

109:                                              ; preds = %76, %107, %105, %22, %77, %81, %72, %5
  %110 = phi i1 [ false, %5 ], [ true, %107 ], [ false, %105 ], [ false, %22 ], [ false, %76 ], [ false, %77 ], [ false, %81 ], [ false, %72 ]
  ret i1 %110
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare i64 @pread64(i32, i8*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #4

; Function Attrs: nounwind
declare i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: nounwind readnone speculatable
declare i16 @llvm.bswap.i16(i16) #7

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.bswap.i32(i32) #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { nounwind readnone }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
