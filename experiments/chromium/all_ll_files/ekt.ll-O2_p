; ModuleID = '../../third_party/libsrtp/srtp/ekt.c'
source_filename = "../../third_party/libsrtp/srtp/ekt.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.srtp_debug_module_t = type { i32, i8* }
%struct.srtp_ekt_stream_ctx_t = type { %struct.srtp_ekt_data_t*, i16, [64 x i8] }
%struct.srtp_ekt_data_t = type { i16, i8, %struct.srtp_aes_expanded_key_t, %struct.srtp_aes_expanded_key_t, %struct.ekt_data_t* }
%struct.srtp_aes_expanded_key_t = type { [15 x %union.v128_t], i32 }
%union.v128_t = type { [2 x i64] }
%struct.ekt_data_t = type opaque
%struct.srtp_ekt_policy_ctx_t = type { i16, i8, i8*, %struct.srtp_ekt_policy_ctx_t* }
%struct.srtp_stream_ctx_t_ = type { i32, %struct.srtp_session_keys_t*, i32, %struct.srtp_rdbx_t, i32, %struct.srtp_rdb_t, i32, i32, i32, %struct.srtp_ekt_stream_ctx_t*, i32*, i32, i32, %struct.srtp_stream_ctx_t_* }
%struct.srtp_session_keys_t = type { %struct.srtp_cipher_t*, %struct.srtp_cipher_t*, %struct.srtp_auth_t*, %struct.srtp_cipher_t*, %struct.srtp_auth_t*, [12 x i8], [12 x i8], i8*, i32, %struct.srtp_key_limit_ctx_t* }
%struct.srtp_cipher_t = type { %struct.srtp_cipher_type_t*, i8*, i32, i32 }
%struct.srtp_cipher_type_t = type { i32 (%struct.srtp_cipher_t**, i32, i32)*, i32 (%struct.srtp_cipher_t*)*, i32 (i8*, i8*)*, i32 (i8*, i8*, i32)*, i32 (i8*, i8*, i32*)*, i32 (i8*, i8*, i32*)*, i32 (i8*, i8*, i32)*, i32 (i8*, i8*, i32*)*, i8*, %struct.srtp_cipher_test_case_t*, i32 }
%struct.srtp_cipher_test_case_t = type { i32, i8*, i8*, i32, i8*, i32, i8*, i32, i8*, i32, %struct.srtp_cipher_test_case_t* }
%struct.srtp_auth_t = type { %struct.srtp_auth_type_t*, i8*, i32, i32, i32 }
%struct.srtp_auth_type_t = type { i32 (%struct.srtp_auth_t**, i32, i32)*, i32 (%struct.srtp_auth_t*)*, i32 (i8*, i8*, i32)*, i32 (i8*, i8*, i32, i32, i8*)*, i32 (i8*, i8*, i32)*, i32 (i8*)*, i8*, %struct.srtp_auth_test_case_t*, i32 }
%struct.srtp_auth_test_case_t = type { i32, i8*, i32, i8*, i32, i8*, %struct.srtp_auth_test_case_t* }
%struct.srtp_key_limit_ctx_t = type { i64, i32 }
%struct.srtp_rdbx_t = type { i64, %struct.bitvector_t }
%struct.bitvector_t = type { i32, i32* }
%struct.srtp_rdb_t = type { i32, %union.v128_t }
%struct.srtp_policy_t = type { %struct.srtp_ssrc_t, %struct.srtp_crypto_policy_t, %struct.srtp_crypto_policy_t, i8*, %struct.srtp_master_key_t**, i64, %struct.srtp_ekt_policy_ctx_t*, i64, i32, i32*, i32, %struct.srtp_policy_t* }
%struct.srtp_ssrc_t = type { i32, i32 }
%struct.srtp_crypto_policy_t = type { i32, i32, i32, i32, i32, i32 }
%struct.srtp_master_key_t = type { i8*, i8*, i32 }

@mod_srtp = external local_unnamed_addr global %struct.srtp_debug_module_t, align 8
@.str = private unnamed_addr constant [20 x i8] c"%s: EKT not in use\0A\00", align 1
@.str.1 = private unnamed_addr constant [26 x i8] c"%s: writing EKT EMK: %s,\0A\00", align 1
@.str.2 = private unnamed_addr constant [26 x i8] c"%s: writing EKT ROC: %s,\0A\00", align 1
@.str.3 = private unnamed_addr constant [26 x i8] c"%s: writing EKT ISN: %s,\0A\00", align 1
@.str.4 = private unnamed_addr constant [26 x i8] c"%s: writing EKT SPI: %s,\0A\00", align 1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @srtp_ekt_octets_after_base_tag(%struct.srtp_ekt_stream_ctx_t* readonly) local_unnamed_addr #0 {
  %2 = icmp eq %struct.srtp_ekt_stream_ctx_t* %0, null
  br i1 %2, label %10, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.srtp_ekt_stream_ctx_t, %struct.srtp_ekt_stream_ctx_t* %0, i64 0, i32 0
  %5 = load %struct.srtp_ekt_data_t*, %struct.srtp_ekt_data_t** %4, align 8
  %6 = getelementptr inbounds %struct.srtp_ekt_data_t, %struct.srtp_ekt_data_t* %5, i64 0, i32 1
  %7 = load i8, i8* %6, align 2
  %8 = icmp eq i8 %7, 1
  %9 = select i1 %8, i32 24, i32 0
  br label %10

10:                                               ; preds = %3, %1
  %11 = phi i32 [ 0, %1 ], [ %9, %3 ]
  ret i32 %11
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i32 @srtp_ekt_alloc(%struct.srtp_ekt_stream_ctx_t** nocapture, %struct.srtp_ekt_policy_ctx_t* nocapture readnone) local_unnamed_addr #1 {
  store %struct.srtp_ekt_stream_ctx_t* null, %struct.srtp_ekt_stream_ctx_t** %0, align 8
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @srtp_ekt_stream_init_from_policy(%struct.srtp_ekt_stream_ctx_t* nocapture readnone, %struct.srtp_ekt_policy_ctx_t* nocapture readnone) local_unnamed_addr #2 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @aes_decrypt_with_raw_key(i8* nocapture, i8* nocapture, i32) local_unnamed_addr #2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @srtp_stream_init_from_ekt(%struct.srtp_stream_ctx_t_*, i8* nocapture readonly, i32) local_unnamed_addr #3 {
  %4 = alloca %struct.srtp_policy_t, align 8
  %5 = bitcast %struct.srtp_policy_t* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %5) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 128, i1 false)
  %6 = getelementptr inbounds %struct.srtp_stream_ctx_t_, %struct.srtp_stream_ctx_t_* %0, i64 0, i32 9
  %7 = load %struct.srtp_ekt_stream_ctx_t*, %struct.srtp_ekt_stream_ctx_t** %6, align 8
  %8 = getelementptr inbounds %struct.srtp_ekt_stream_ctx_t, %struct.srtp_ekt_stream_ctx_t* %7, i64 0, i32 0
  %9 = load %struct.srtp_ekt_data_t*, %struct.srtp_ekt_data_t** %8, align 8
  %10 = getelementptr inbounds %struct.srtp_ekt_data_t, %struct.srtp_ekt_data_t* %9, i64 0, i32 0
  %11 = load i16, i16* %10, align 8
  %12 = add i32 %2, -2
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds i8, i8* %1, i64 %13
  %15 = bitcast i8* %14 to i16*
  %16 = load i16, i16* %15, align 2
  %17 = icmp eq i16 %11, %16
  br i1 %17, label %18, label %33

18:                                               ; preds = %3
  %19 = getelementptr inbounds %struct.srtp_ekt_data_t, %struct.srtp_ekt_data_t* %9, i64 0, i32 1
  %20 = load i8, i8* %19, align 2
  %21 = icmp eq i8 %20, 1
  br i1 %21, label %22, label %33

22:                                               ; preds = %18
  %23 = add i32 %2, -4
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds i8, i8* %1, i64 %24
  %26 = bitcast i8* %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %struct.srtp_stream_ctx_t_, %struct.srtp_stream_ctx_t_* %0, i64 0, i32 3
  %29 = tail call i32 @srtp_rdbx_set_roc(%struct.srtp_rdbx_t* %28, i32 %27) #7
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %33

31:                                               ; preds = %22
  %32 = call i32 @srtp_stream_init(%struct.srtp_stream_ctx_t_* %0, %struct.srtp_policy_t* nonnull %4) #7
  br label %33

33:                                               ; preds = %31, %22, %18, %3
  %34 = phi i32 [ 13, %3 ], [ 2, %18 ], [ %29, %22 ], [ %32, %31 ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %5) #7
  ret i32 %34
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare i32 @srtp_rdbx_set_roc(%struct.srtp_rdbx_t*, i32) local_unnamed_addr #5

declare i32 @srtp_stream_init(%struct.srtp_stream_ctx_t_*, %struct.srtp_policy_t*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @srtp_ekt_write_data(%struct.srtp_ekt_stream_ctx_t* readonly, i8*, i32, i32* nocapture, i64) local_unnamed_addr #3 {
  %6 = icmp eq %struct.srtp_ekt_stream_ctx_t* %0, null
  br i1 %6, label %7, label %12

7:                                                ; preds = %5
  %8 = load i32, i32* getelementptr inbounds (%struct.srtp_debug_module_t, %struct.srtp_debug_module_t* @mod_srtp, i64 0, i32 0), align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %65, label %10

10:                                               ; preds = %7
  %11 = load i8*, i8** getelementptr inbounds (%struct.srtp_debug_module_t, %struct.srtp_debug_module_t* @mod_srtp, i64 0, i32 1), align 8
  tail call void (i32, i8*, ...) @srtp_err_report(i32 3, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* %11) #7
  br label %65

12:                                               ; preds = %5
  %13 = zext i32 %2 to i64
  tail call void @octet_string_set_to_zero(i8* %1, i64 %13) #7
  %14 = getelementptr inbounds i8, i8* %1, i64 %13
  %15 = getelementptr inbounds %struct.srtp_ekt_stream_ctx_t, %struct.srtp_ekt_stream_ctx_t* %0, i64 0, i32 0
  %16 = load %struct.srtp_ekt_data_t*, %struct.srtp_ekt_data_t** %15, align 8
  %17 = getelementptr inbounds %struct.srtp_ekt_data_t, %struct.srtp_ekt_data_t* %16, i64 0, i32 1
  %18 = load i8, i8* %17, align 2
  %19 = icmp eq i8 %18, 1
  %20 = select i1 %19, i32 24, i32 0
  %21 = getelementptr inbounds %struct.srtp_ekt_stream_ctx_t, %struct.srtp_ekt_stream_ctx_t* %0, i64 0, i32 2, i64 0
  %22 = zext i32 %20 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %14, i8* align 2 %21, i64 %22, i1 false)
  %23 = load i32, i32* getelementptr inbounds (%struct.srtp_debug_module_t, %struct.srtp_debug_module_t* @mod_srtp, i64 0, i32 0), align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %12
  %26 = load i8*, i8** getelementptr inbounds (%struct.srtp_debug_module_t, %struct.srtp_debug_module_t* @mod_srtp, i64 0, i32 1), align 8
  %27 = tail call i8* @srtp_octet_string_hex_string(i8* %14, i32 %20) #7
  tail call void (i32, i8*, ...) @srtp_err_report(i32 3, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0), i8* %26, i8* %27) #7
  br label %28

28:                                               ; preds = %12, %25
  %29 = getelementptr inbounds i8, i8* %14, i64 %22
  %30 = lshr i64 %4, 16
  %31 = trunc i64 %30 to i32
  %32 = tail call i32 @llvm.bswap.i32(i32 %31) #7
  %33 = bitcast i8* %29 to i32*
  store i32 %32, i32* %33, align 4
  %34 = load i32, i32* getelementptr inbounds (%struct.srtp_debug_module_t, %struct.srtp_debug_module_t* @mod_srtp, i64 0, i32 0), align 8
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %28
  %37 = load i8*, i8** getelementptr inbounds (%struct.srtp_debug_module_t, %struct.srtp_debug_module_t* @mod_srtp, i64 0, i32 1), align 8
  %38 = tail call i8* @srtp_octet_string_hex_string(i8* %29, i32 4) #7
  tail call void (i32, i8*, ...) @srtp_err_report(i32 3, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i64 0, i64 0), i8* %37, i8* %38) #7
  br label %39

39:                                               ; preds = %28, %36
  %40 = getelementptr inbounds i8, i8* %29, i64 4
  %41 = trunc i64 %4 to i16
  %42 = tail call i16 @llvm.bswap.i16(i16 %41) #7
  %43 = bitcast i8* %40 to i16*
  store i16 %42, i16* %43, align 2
  %44 = load i32, i32* getelementptr inbounds (%struct.srtp_debug_module_t, %struct.srtp_debug_module_t* @mod_srtp, i64 0, i32 0), align 8
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %39
  %47 = load i8*, i8** getelementptr inbounds (%struct.srtp_debug_module_t, %struct.srtp_debug_module_t* @mod_srtp, i64 0, i32 1), align 8
  %48 = tail call i8* @srtp_octet_string_hex_string(i8* %40, i32 2) #7
  tail call void (i32, i8*, ...) @srtp_err_report(i32 3, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i8* %47, i8* %48) #7
  br label %49

49:                                               ; preds = %39, %46
  %50 = getelementptr inbounds i8, i8* %40, i64 2
  %51 = load %struct.srtp_ekt_data_t*, %struct.srtp_ekt_data_t** %15, align 8
  %52 = getelementptr inbounds %struct.srtp_ekt_data_t, %struct.srtp_ekt_data_t* %51, i64 0, i32 0
  %53 = load i16, i16* %52, align 8
  %54 = tail call i16 @llvm.bswap.i16(i16 %53) #7
  %55 = bitcast i8* %50 to i16*
  store i16 %54, i16* %55, align 2
  %56 = load i32, i32* getelementptr inbounds (%struct.srtp_debug_module_t, %struct.srtp_debug_module_t* @mod_srtp, i64 0, i32 0), align 8
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %61, label %58

58:                                               ; preds = %49
  %59 = load i8*, i8** getelementptr inbounds (%struct.srtp_debug_module_t, %struct.srtp_debug_module_t* @mod_srtp, i64 0, i32 1), align 8
  %60 = tail call i8* @srtp_octet_string_hex_string(i8* %50, i32 2) #7
  tail call void (i32, i8*, ...) @srtp_err_report(i32 3, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), i8* %59, i8* %60) #7
  br label %61

61:                                               ; preds = %49, %58
  %62 = add nuw nsw i32 %20, 8
  %63 = load i32, i32* %3, align 4
  %64 = add i32 %62, %63
  store i32 %64, i32* %3, align 4
  br label %65

65:                                               ; preds = %10, %7, %61
  ret void
}

declare void @srtp_err_report(i32, i8*, ...) local_unnamed_addr #5

declare void @octet_string_set_to_zero(i8*, i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare i8* @srtp_octet_string_hex_string(i8*, i32) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @srtcp_ekt_trailer(%struct.srtp_ekt_stream_ctx_t* nocapture, i32* nocapture, i8** nocapture, i8* nocapture) local_unnamed_addr #2 {
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.bswap.i32(i32) #6

; Function Attrs: nounwind readnone speculatable
declare i16 @llvm.bswap.i16(i16) #6

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
