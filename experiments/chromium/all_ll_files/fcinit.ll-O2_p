; ModuleID = '../../third_party/fontconfig/src/src/fcinit.c'
source_filename = "../../third_party/fontconfig/src/src/fcinit.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct._FcConfig = type { %struct._FcStrSet*, %struct._FcStrSet*, %struct._FcStrSet*, %struct._FcStrSet*, %struct._FcStrSet*, [3 x %struct._FcPtrList*], i32, %struct._FcStrSet*, %struct._FcStrSet*, %struct._FcFontSet*, %struct._FcFontSet*, [2 x %struct._FcFontSet*], i64, i32, %struct._FcRef, %struct._FcExprPage*, i8*, %struct._FcStrSet*, %struct._FcPtrList* }
%struct._FcFontSet = type { i32, i32, %struct._FcPattern** }
%struct._FcPattern = type { i32, i32, i64, %struct._FcRef }
%struct._FcRef = type { i32 }
%struct._FcExprPage = type { %struct._FcExprPage*, %struct._FcExpr*, [340 x %struct._FcExpr], [0 x %struct._FcExpr] }
%struct._FcExpr = type { i32, %union.anon }
%union.anon = type { %struct.anon }
%struct.anon = type { %struct._FcExpr*, %struct._FcExpr* }
%struct._FcStrSet = type { %struct._FcRef, i32, i32, i8**, i32 }
%struct._FcPtrList = type opaque

@.str = private unnamed_addr constant [33 x i8] c"/usr/share/fontconfig/conf.avail\00", align 1
@.str.1 = private unnamed_addr constant [16 x i8] c"FONTCONFIG_FILE\00", align 1
@.str.2 = private unnamed_addr constant [16 x i8] c"FONTCONFIG_PATH\00", align 1
@stderr = external local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.3 = private unnamed_addr constant [72 x i8] c"Fontconfig warning: no <cachedir> elements found. Check configuration.\0A\00", align 1
@.str.4 = private unnamed_addr constant [52 x i8] c"Fontconfig warning: adding <cachedir>%s</cachedir>\0A\00", align 1
@.str.5 = private unnamed_addr constant [22 x i8] c"/var/cache/fontconfig\00", align 1
@.str.6 = private unnamed_addr constant [12 x i8] c"/fontconfig\00", align 1
@.str.7 = private unnamed_addr constant [73 x i8] c"Fontconfig warning: adding <cachedir prefix=\22xdg\22>fontconfig</cachedir>\0A\00", align 1
@.str.8 = private unnamed_addr constant [32 x i8] c"Fontconfig error: out of memory\00", align 1
@.str.9 = private unnamed_addr constant [324 x i8] c"<fontconfig>  <dir>/usr/share/fonts</dir>  <dir prefix=\22xdg\22>fonts</dir>  <cachedir>/var/cache/fontconfig</cachedir>  <cachedir prefix=\22xdg\22>fontconfig</cachedir>  <include ignore_missing=\22yes\22 prefix=\22xdg\22>fontconfig/conf.d</include>  <include ignore_missing=\22yes\22 prefix=\22xdg\22>fontconfig/fonts.conf</include></fontconfig>\00", align 1

@FcInitLoadConfig = hidden alias %struct._FcConfig* (), %struct._FcConfig* ()* @IA__FcInitLoadConfig
@FcInitLoadConfigAndFonts = hidden alias %struct._FcConfig* (), %struct._FcConfig* ()* @IA__FcInitLoadConfigAndFonts
@FcInit = hidden alias i32 (), i32 ()* @IA__FcInit
@FcFini = hidden alias void (), void ()* @IA__FcFini
@FcGetVersion = hidden alias i32 (), i32 ()* @IA__FcGetVersion
@FcInitReinitialize = hidden alias i32 (), i32 ()* @IA__FcInitReinitialize
@FcInitBringUptoDate = hidden alias i32 (), i32 ()* @IA__FcInitBringUptoDate

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @IA__FcGetVersion() #0 {
  ret i32 21391
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._FcConfig* @FcInitLoadOwnConfig(%struct._FcConfig*) local_unnamed_addr #1 {
  %2 = icmp eq %struct._FcConfig* %0, null
  br i1 %2, label %3, label %6

3:                                                ; preds = %1
  %4 = tail call %struct._FcConfig* @IA__FcConfigCreate() #9
  %5 = icmp eq %struct._FcConfig* %4, null
  br i1 %5, label %85, label %6

6:                                                ; preds = %3, %1
  %7 = phi %struct._FcConfig* [ %0, %1 ], [ %4, %3 ]
  tail call void @FcInitDebug() #9
  %8 = tail call i32 @IA__FcConfigParseAndLoad(%struct._FcConfig* nonnull %7, i8* null, i32 1) #9
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %20

10:                                               ; preds = %6
  %11 = tail call i8* @IA__FcConfigGetSysRoot(%struct._FcConfig* nonnull %7) #9
  %12 = tail call %struct._FcConfig* @IA__FcConfigCreate() #9
  %13 = icmp eq %struct._FcConfig* %12, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %10
  tail call void @IA__FcConfigSetSysRoot(%struct._FcConfig* nonnull %12, i8* %11) #9
  %15 = tail call i32 @IA__FcConfigParseAndLoadFromMemory(%struct._FcConfig* nonnull %12, i8* getelementptr inbounds ([324 x i8], [324 x i8]* @.str.9, i64 0, i64 0), i32 0) #9
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @IA__FcConfigDestroy(%struct._FcConfig* nonnull %12) #9
  br label %18

18:                                               ; preds = %10, %14, %17
  %19 = phi %struct._FcConfig* [ %12, %14 ], [ null, %10 ], [ null, %17 ]
  tail call void @IA__FcConfigDestroy(%struct._FcConfig* nonnull %7) #9
  br label %85

20:                                               ; preds = %6
  %21 = tail call i32 @FcConfigParseOnly(%struct._FcConfig* nonnull %7, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i32 0) #9
  %22 = getelementptr inbounds %struct._FcConfig, %struct._FcConfig* %7, i64 0, i32 3
  %23 = load %struct._FcStrSet*, %struct._FcStrSet** %22, align 8
  %24 = icmp eq %struct._FcStrSet* %23, null
  br i1 %24, label %85, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %struct._FcStrSet, %struct._FcStrSet* %23, i64 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %85

29:                                               ; preds = %25
  %30 = tail call i8* @getenv(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0)) #9
  %31 = tail call i8* @getenv(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0)) #9
  %32 = icmp eq i8* %30, null
  br i1 %32, label %36, label %33

33:                                               ; preds = %29
  %34 = load i8, i8* %30, align 1
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %36, label %46

36:                                               ; preds = %33, %29
  %37 = icmp eq i8* %31, null
  br i1 %37, label %41, label %38

38:                                               ; preds = %36
  %39 = load i8, i8* %31, align 1
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %46

41:                                               ; preds = %38, %36
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %43 = tail call i64 @fwrite(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.3, i64 0, i64 0), i64 71, i64 1, %struct._IO_FILE* %42) #10
  %44 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %45 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %44, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i64 0, i64 0)) #10
  br label %46

46:                                               ; preds = %33, %38, %41
  %47 = phi i1 [ false, %41 ], [ true, %38 ], [ true, %33 ]
  %48 = tail call i8* @FcConfigXdgCacheHome() #9
  %49 = icmp eq i8* %48, null
  br i1 %49, label %68, label %50

50:                                               ; preds = %46
  %51 = tail call i64 @strlen(i8* nonnull %48) #11
  %52 = add i64 %51, 12
  %53 = tail call i8* @realloc(i8* nonnull %48, i64 %52) #9
  %54 = icmp eq i8* %53, null
  br i1 %54, label %68, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds i8, i8* %53, i64 %51
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %56, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i64 11, i1 false)
  %57 = add i64 %51, 11
  %58 = getelementptr inbounds i8, i8* %53, i64 %57
  store i8 0, i8* %58, align 1
  br i1 %47, label %62, label %59

59:                                               ; preds = %55
  %60 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %61 = tail call i64 @fwrite(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.7, i64 0, i64 0), i64 72, i64 1, %struct._IO_FILE* %60) #10
  br label %62

62:                                               ; preds = %59, %55
  %63 = tail call i32 @FcConfigAddCacheDir(%struct._FcConfig* nonnull %7, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i64 0, i64 0)) #9
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %68, label %65

65:                                               ; preds = %62
  %66 = tail call i32 @FcConfigAddCacheDir(%struct._FcConfig* nonnull %7, i8* nonnull %53) #9
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %82

68:                                               ; preds = %62, %65, %50, %46
  %69 = phi i8* [ %48, %50 ], [ null, %46 ], [ %53, %65 ], [ %53, %62 ]
  %70 = tail call i8* @IA__FcConfigGetSysRoot(%struct._FcConfig* nonnull %7) #9
  %71 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %72 = tail call i64 @fwrite(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.8, i64 0, i64 0), i64 31, i64 1, %struct._IO_FILE* %71) #10
  %73 = icmp eq i8* %69, null
  br i1 %73, label %75, label %74

74:                                               ; preds = %68
  tail call void @IA__FcStrFree(i8* nonnull %69) #9
  br label %75

75:                                               ; preds = %68, %74
  %76 = tail call %struct._FcConfig* @IA__FcConfigCreate() #9
  %77 = icmp eq %struct._FcConfig* %76, null
  br i1 %77, label %83, label %78

78:                                               ; preds = %75
  tail call void @IA__FcConfigSetSysRoot(%struct._FcConfig* nonnull %76, i8* %70) #9
  %79 = tail call i32 @IA__FcConfigParseAndLoadFromMemory(%struct._FcConfig* nonnull %76, i8* getelementptr inbounds ([324 x i8], [324 x i8]* @.str.9, i64 0, i64 0), i32 0) #9
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %83

81:                                               ; preds = %78
  tail call void @IA__FcConfigDestroy(%struct._FcConfig* nonnull %76) #9
  br label %83

82:                                               ; preds = %65
  tail call void @IA__FcStrFree(i8* nonnull %53) #9
  br label %85

83:                                               ; preds = %81, %78, %75
  %84 = phi %struct._FcConfig* [ %76, %78 ], [ null, %75 ], [ null, %81 ]
  tail call void @IA__FcConfigDestroy(%struct._FcConfig* nonnull %7) #9
  br label %85

85:                                               ; preds = %25, %20, %82, %83, %3, %18
  %86 = phi %struct._FcConfig* [ %84, %83 ], [ %19, %18 ], [ null, %3 ], [ %7, %82 ], [ %7, %20 ], [ %7, %25 ]
  ret %struct._FcConfig* %86
}

declare hidden %struct._FcConfig* @IA__FcConfigCreate() local_unnamed_addr #2

declare hidden void @FcInitDebug() local_unnamed_addr #2

declare hidden i32 @IA__FcConfigParseAndLoad(%struct._FcConfig*, i8*, i32) local_unnamed_addr #2

declare hidden i8* @IA__FcConfigGetSysRoot(%struct._FcConfig*) local_unnamed_addr #2

declare hidden void @IA__FcConfigDestroy(%struct._FcConfig*) local_unnamed_addr #2

declare hidden i32 @FcConfigParseOnly(%struct._FcConfig*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i8* @getenv(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare i32 @fprintf(%struct._IO_FILE* nocapture, i8* nocapture readonly, ...) local_unnamed_addr #4

declare hidden i8* @FcConfigXdgCacheHome() local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

; Function Attrs: nounwind
declare noalias i8* @realloc(i8* nocapture, i64) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #7

declare hidden i32 @FcConfigAddCacheDir(%struct._FcConfig*, i8*) local_unnamed_addr #2

declare hidden void @IA__FcStrFree(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct._FcConfig* @IA__FcInitLoadConfig() #1 {
  %1 = tail call %struct._FcConfig* @FcInitLoadOwnConfig(%struct._FcConfig* null)
  ret %struct._FcConfig* %1
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._FcConfig* @FcInitLoadOwnConfigAndFonts(%struct._FcConfig*) local_unnamed_addr #1 {
  %2 = tail call %struct._FcConfig* @FcInitLoadOwnConfig(%struct._FcConfig* %0)
  %3 = icmp eq %struct._FcConfig* %2, null
  br i1 %3, label %8, label %4

4:                                                ; preds = %1
  %5 = tail call i32 @IA__FcConfigBuildFonts(%struct._FcConfig* nonnull %2) #9
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %8

7:                                                ; preds = %4
  tail call void @IA__FcConfigDestroy(%struct._FcConfig* nonnull %2) #9
  br label %8

8:                                                ; preds = %4, %1, %7
  %9 = phi %struct._FcConfig* [ null, %7 ], [ null, %1 ], [ %2, %4 ]
  ret %struct._FcConfig* %9
}

declare hidden i32 @IA__FcConfigBuildFonts(%struct._FcConfig*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct._FcConfig* @IA__FcInitLoadConfigAndFonts() #1 {
  %1 = tail call %struct._FcConfig* @FcInitLoadOwnConfig(%struct._FcConfig* null) #9
  %2 = icmp eq %struct._FcConfig* %1, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %0
  %4 = tail call i32 @IA__FcConfigBuildFonts(%struct._FcConfig* nonnull %1) #9
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %3
  tail call void @IA__FcConfigDestroy(%struct._FcConfig* nonnull %1) #9
  br label %7

7:                                                ; preds = %0, %3, %6
  %8 = phi %struct._FcConfig* [ null, %6 ], [ null, %0 ], [ %1, %3 ]
  ret %struct._FcConfig* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @IA__FcInit() #1 {
  %1 = tail call i32 @FcConfigInit() #9
  ret i32 %1
}

declare hidden i32 @FcConfigInit() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @IA__FcFini() #1 {
  tail call void @FcConfigFini() #9
  tail call void @FcCacheFini() #9
  tail call void @FcDefaultFini() #9
  tail call void @FcObjectFini() #9
  tail call void @FcConfigPathFini() #9
  ret void
}

declare hidden void @FcConfigFini() local_unnamed_addr #2

declare hidden void @FcCacheFini() local_unnamed_addr #2

declare hidden void @FcDefaultFini() local_unnamed_addr #2

declare hidden void @FcObjectFini() local_unnamed_addr #2

declare hidden void @FcConfigPathFini() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @IA__FcInitReinitialize() #1 {
  %1 = tail call %struct._FcConfig* @FcInitLoadOwnConfig(%struct._FcConfig* null) #9
  %2 = icmp eq %struct._FcConfig* %1, null
  br i1 %2, label %10, label %3

3:                                                ; preds = %0
  %4 = tail call i32 @IA__FcConfigBuildFonts(%struct._FcConfig* nonnull %1) #9
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %3
  %7 = tail call i32 @IA__FcConfigSetCurrent(%struct._FcConfig* nonnull %1) #9
  br label %8

8:                                                ; preds = %3, %6
  %9 = phi i32 [ %7, %6 ], [ 0, %3 ]
  tail call void @IA__FcConfigDestroy(%struct._FcConfig* nonnull %1) #9
  br label %10

10:                                               ; preds = %8, %0
  %11 = phi i32 [ 0, %0 ], [ %9, %8 ]
  ret i32 %11
}

declare hidden i32 @IA__FcConfigSetCurrent(%struct._FcConfig*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @IA__FcInitBringUptoDate() #1 {
  %1 = tail call %struct._FcConfig* @IA__FcConfigReference(%struct._FcConfig* null) #9
  %2 = icmp eq %struct._FcConfig* %1, null
  br i1 %2, label %29, label %3

3:                                                ; preds = %0
  %4 = getelementptr inbounds %struct._FcConfig, %struct._FcConfig* %1, i64 0, i32 13
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %27, label %7

7:                                                ; preds = %3
  %8 = tail call i64 @time(i64* null) #9
  %9 = getelementptr inbounds %struct._FcConfig, %struct._FcConfig* %1, i64 0, i32 12
  %10 = load i64, i64* %9, align 8
  %11 = load i32, i32* %4, align 8
  %12 = sext i32 %11 to i64
  %13 = add nsw i64 %10, %12
  %14 = icmp sgt i64 %13, %8
  br i1 %14, label %27, label %15

15:                                               ; preds = %7
  %16 = tail call i32 @IA__FcConfigUptoDate(%struct._FcConfig* null) #9
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %27

18:                                               ; preds = %15
  %19 = tail call %struct._FcConfig* @FcInitLoadOwnConfig(%struct._FcConfig* null) #9
  %20 = icmp eq %struct._FcConfig* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %18
  %22 = tail call i32 @IA__FcConfigBuildFonts(%struct._FcConfig* nonnull %19) #9
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  tail call void @IA__FcConfigDestroy(%struct._FcConfig* nonnull %19) #9
  br label %27

25:                                               ; preds = %21
  %26 = tail call i32 @IA__FcConfigSetCurrent(%struct._FcConfig* nonnull %19) #9
  tail call void @IA__FcConfigDestroy(%struct._FcConfig* nonnull %19) #9
  br label %27

27:                                               ; preds = %25, %24, %18, %15, %7, %3
  %28 = phi i32 [ 1, %3 ], [ 1, %7 ], [ 1, %15 ], [ %26, %25 ], [ 0, %24 ], [ 0, %18 ]
  tail call void @IA__FcConfigDestroy(%struct._FcConfig* nonnull %1) #9
  br label %29

29:                                               ; preds = %0, %27
  %30 = phi i32 [ %28, %27 ], [ 0, %0 ]
  ret i32 %30
}

declare hidden %struct._FcConfig* @IA__FcConfigReference(%struct._FcConfig*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i64 @time(i64*) local_unnamed_addr #6

declare hidden i32 @IA__FcConfigUptoDate(%struct._FcConfig*) local_unnamed_addr #2

declare hidden void @IA__FcConfigSetSysRoot(%struct._FcConfig*, i8*) local_unnamed_addr #2

declare hidden i32 @IA__FcConfigParseAndLoadFromMemory(%struct._FcConfig*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) local_unnamed_addr #8

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nounwind }
attributes #8 = { nofree nounwind }
attributes #9 = { nounwind }
attributes #10 = { cold }
attributes #11 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
