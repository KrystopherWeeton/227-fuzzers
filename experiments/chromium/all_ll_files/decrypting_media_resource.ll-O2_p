; ModuleID = '../../media/filters/decrypting_media_resource.cc'
source_filename = "../../media/filters/decrypting_media_resource.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.media::DecryptingMediaResource" = type { %"class.media::MediaResource", %"class.media::MediaResource"*, %"class.media::CdmContext"*, %"class.media::MediaLog"*, %class.scoped_refptr.1, i32, %"class.std::__1::vector", %"class.std::__1::vector.4", %"class.base::OnceCallback.39", %"class.base::WeakPtrFactory.40" }
%"class.media::MediaResource" = type { i32 (...)** }
%class.scoped_refptr.1 = type { %"class.base::SequencedTaskRunner"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.media::DemuxerStream"**, %"class.media::DemuxerStream"**, %"class.std::__1::__compressed_pair" }
%"class.media::DemuxerStream" = type { i32 (...)** }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.media::DemuxerStream"** }
%"class.std::__1::vector.4" = type { %"class.std::__1::__vector_base.5" }
%"class.std::__1::__vector_base.5" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.media::DecryptingDemuxerStream"* }
%"class.media::DecryptingDemuxerStream" = type { %"class.media::DemuxerStream", %class.scoped_refptr.1, %"class.media::MediaLog"*, %"class.base::RepeatingCallback", i32, %"class.base::OnceCallback", %"class.base::OnceCallback.10", %"class.base::OnceCallback.11", %"class.media::DemuxerStream"*, %"class.media::AudioDecoderConfig", %"class.media::VideoDecoderConfig", %"class.media::Decryptor"*, %class.scoped_refptr.19, i8, %"class.std::__1::unique_ptr.20", %"class.base::WeakPtrFactory" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.8 }
%class.scoped_refptr.8 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.9", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.9" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.10" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.11" = type { %"class.base::internal::CallbackBase" }
%"class.media::AudioDecoderConfig" = type <{ i32, i32, i32, i32, i32, i32, %"class.std::__1::vector.12", i32, i32, i32, i32, %"class.base::TimeDelta", i32, i8, [3 x i8] }>
%"class.std::__1::vector.12" = type { %"class.std::__1::__vector_base.13" }
%"class.std::__1::__vector_base.13" = type { i8*, i8*, %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.media::VideoDecoderConfig" = type <{ i32, i32, i32, i32, %"struct.media::VideoTransformation", %"class.gfx::Size", %"class.gfx::Rect", %"class.gfx::Size", %"class.std::__1::vector.12", i32, %"class.media::VideoColorSpace", %"class.absl::optional", i8, [3 x i8] }>
%"struct.media::VideoTransformation" = type <{ i32, i8, [3 x i8] }>
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.media::VideoColorSpace" = type { i8, i8, i8, i8 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"struct.gfx::HDRMetadata" }
%"struct.gfx::HDRMetadata" = type { %"struct.gfx::MasteringMetadata", i32, i32 }
%"struct.gfx::MasteringMetadata" = type { %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", float, float }
%"class.gfx::PointF" = type { float, float }
%"class.media::Decryptor" = type { i32 (...)** }
%class.scoped_refptr.19 = type { %"class.media::DecoderBuffer"* }
%"class.media::DecoderBuffer" = type opaque
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.media::CallbackRegistration"* }
%"class.media::CallbackRegistration" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.24 }
%class.scoped_refptr.24 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.25", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.25" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.26" }
%"struct.std::__1::atomic.26" = type { %"struct.std::__1::__atomic_base.27" }
%"struct.std::__1::__atomic_base.27" = type { %"struct.std::__1::__atomic_base.28" }
%"struct.std::__1::__atomic_base.28" = type { %"struct.std::__1::__cxx_atomic_impl.29" }
%"struct.std::__1::__cxx_atomic_impl.29" = type { %"struct.std::__1::__cxx_atomic_base_impl.30" }
%"struct.std::__1::__cxx_atomic_base_impl.30" = type { i8 }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.std::__1::unique_ptr"* }
%"class.base::OnceCallback.39" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.40" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.media::CdmContext" = type { i32 (...)** }
%"class.media::MediaLog" = type { i32 (...)**, %class.scoped_refptr }
%class.scoped_refptr = type { %"struct.media::MediaLog::ParentLogRecord"* }
%"struct.media::MediaLog::ParentLogRecord" = type { i32 (...)**, %"class.base::RefCountedThreadSafe", i32, %"class.base::Lock", %"class.media::MediaLog"* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2" }>
%"class.base::RefCountedThreadSafe.2" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2", [4 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.41 }
%class.scoped_refptr.41 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"struct.media::MediaUrlParams" = type <{ %class.GURL, %class.GURL, %"class.url::Origin", i8, i8, [6 x i8] }>
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.48" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.44 }
%union.anon.44 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %class.GURL* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.54" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.54" = type { %"class.absl::optional_internal::optional_data.55" }
%"class.absl::optional_internal::optional_data.55" = type { %"class.absl::optional_internal::optional_data_base.56" }
%"class.absl::optional_internal::optional_data_base.56" = type { %"class.absl::optional_internal::optional_data_dtor_base.57" }
%"class.absl::optional_internal::optional_data_dtor_base.57" = type { i8, %union.anon.58 }
%union.anon.58 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN4base8internal7InvokerINS0_9BindStateIMN5media23DecryptingMediaResourceEFvNS3_14PipelineStatusEEJNS_7WeakPtrIS4_EEEEEFvS5_EE7RunOnceEPNS0_13BindStateBaseES5_ = comdat any

$_ZN4base8internal9BindStateIMN5media23DecryptingMediaResourceEFvNS2_14PipelineStatusEEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5media23DecryptingMediaResourceEFvNS3_14PipelineStatusEEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSB_21CancellationQueryModeE = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN5media23DecryptingDemuxerStreamENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

@_ZTVN5media23DecryptingMediaResourceE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.media::DecryptingMediaResource"*)* @_ZN5media23DecryptingMediaResourceD2Ev to i8*), i8* bitcast (void (%"class.media::DecryptingMediaResource"*)* @_ZN5media23DecryptingMediaResourceD0Ev to i8*), i8* bitcast (i32 (%"class.media::DecryptingMediaResource"*)* @_ZNK5media23DecryptingMediaResource7GetTypeEv to i8*), i8* bitcast (void (%"class.std::__1::vector"*, %"class.media::DecryptingMediaResource"*)* @_ZN5media23DecryptingMediaResource13GetAllStreamsEv to i8*), i8* bitcast (%"struct.media::MediaUrlParams"* (%"class.media::MediaResource"*)* @_ZNK5media13MediaResource17GetMediaUrlParamsEv to i8*), i8* bitcast (void (%"class.media::MediaResource"*, i64)* @_ZN5media13MediaResource34ForwardDurationChangeToDemuxerHostEN4base9TimeDeltaE to i8*), i8* bitcast (i32 (%"class.media::DecryptingMediaResource"*)* @_ZNK5media23DecryptingMediaResource38DecryptingDemuxerStreamCountForTestingEv to i8*)] }, align 8
@.str.1 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1

@_ZN5media23DecryptingMediaResourceC1EPNS_13MediaResourceEPNS_10CdmContextEPNS_8MediaLogE13scoped_refptrIN4base19SequencedTaskRunnerEE = hidden unnamed_addr alias void (%"class.media::DecryptingMediaResource"*, %"class.media::MediaResource"*, %"class.media::CdmContext"*, %"class.media::MediaLog"*, %"class.base::SequencedTaskRunner"*), void (%"class.media::DecryptingMediaResource"*, %"class.media::MediaResource"*, %"class.media::CdmContext"*, %"class.media::MediaLog"*, %"class.base::SequencedTaskRunner"*)* @_ZN5media23DecryptingMediaResourceC2EPNS_13MediaResourceEPNS_10CdmContextEPNS_8MediaLogE13scoped_refptrIN4base19SequencedTaskRunnerEE
@_ZN5media23DecryptingMediaResourceD1Ev = hidden unnamed_addr alias void (%"class.media::DecryptingMediaResource"*), void (%"class.media::DecryptingMediaResource"*)* @_ZN5media23DecryptingMediaResourceD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media23DecryptingMediaResourceC2EPNS_13MediaResourceEPNS_10CdmContextEPNS_8MediaLogE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.media::DecryptingMediaResource"*, %"class.media::MediaResource"*, %"class.media::CdmContext"*, %"class.media::MediaLog"*, %"class.base::SequencedTaskRunner"*) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.media::DecryptingMediaResource", %"class.media::DecryptingMediaResource"* %0, i64 0, i32 0
  tail call void @_ZN5media13MediaResourceC2Ev(%"class.media::MediaResource"* %6) #11
  %7 = getelementptr inbounds %"class.media::DecryptingMediaResource", %"class.media::DecryptingMediaResource"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5media23DecryptingMediaResourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.media::DecryptingMediaResource", %"class.media::DecryptingMediaResource"* %0, i64 0, i32 1
  store %"class.media::MediaResource"* %1, %"class.media::MediaResource"** %8, align 8
  %9 = getelementptr inbounds %"class.media::DecryptingMediaResource", %"class.media::DecryptingMediaResource"* %0, i64 0, i32 2
  store %"class.media::CdmContext"* %2, %"class.media::CdmContext"** %9, align 8
  %10 = getelementptr inbounds %"class.media::DecryptingMediaResource", %"class.media::DecryptingMediaResource"* %0, i64 0, i32 3
  store %"class.media::MediaLog"* %3, %"class.media::MediaLog"** %10, align 8
  %11 = getelementptr inbounds %"class.media::DecryptingMediaResource", %"class.media::DecryptingMediaResource"* %0, i64 0, i32 4, i32 0
  store %"class.base::SequencedTaskRunner"* %4, %"class.base::SequencedTaskRunner"** %11, align 8
  %12 = icmp eq %"class.base::SequencedTaskRunner"* %4, null
  br i1 %12, label %28, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %4, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw add i32* %14, i32 1 monotonic
  %16 = getelementptr inbounds %"class.media::DecryptingMediaResource", %"class.media::DecryptingMediaResource"* %0, i64 0, i32 5
  store i32 0, i32* %16, align 8
  %17 = getelementptr inbounds %"class.media::DecryptingMediaResource", %"class.media::DecryptingMediaResource"* %0, i64 0, i32 6
  %18 = getelementptr inbounds %"class.media::DecryptingMediaResource", %"class.media::DecryptingMediaResource"* %0, i64 0, i32 9, i32 0
  %19 = ptrtoint %"class.media::DecryptingMediaResource"* %0 to i64
  %20 = bitcast %"class.std::__1::vector"* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 56, i1 false)
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %18, i64 %19) #11
  %21 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %4, i64 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw sub i32* %22, i32 1 acq_rel
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %34

25:                                               ; preds = %13
  %26 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %21, i64 -2
  %27 = bitcast %"class.base::RefCountedThreadSafe.2"* %26 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %27) #11
  br label %34

28:                                               ; preds = %5
  %29 = getelementptr inbounds %"class.media::DecryptingMediaResource", %"class.media::DecryptingMediaResource"* %0, i64 0, i32 5
  store i32 0, i32* %29, align 8
  %30 = getelementptr inbounds %"class.media::DecryptingMediaResource", %"class.media::DecryptingMediaResource"* %0, i64 0, i32 6
  %31 = getelementptr inbounds %"class.media::DecryptingMediaResource", %"class.media::DecryptingMediaResource"* %0, i64 0, i32 9, i32 0
  %32 = ptrtoint %"class.media::DecryptingMediaResource"* %0 to i64
  %33 = bitcast %"class.std::__1::vector"* %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 56, i1 false)
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %31, i64 %32) #11
  br label %34

34:                                               ; preds = %28, %13, %25
  ret void
}

declare void @_ZN5media13MediaResourceC2Ev(%"class.media::MediaResource"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media23DecryptingMediaResourceD2Ev(%"class.media::DecryptingMediaResource"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::DecryptingMediaResource", %"class.media::DecryptingMediaResource"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5media23DecryptingMediaResourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.media::DecryptingMediaResource", %"class.media::DecryptingMediaResource"* %0, i64 0, i32 9, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %3) #11
  %4 = getelementptr inbounds %"class.media::DecryptingMediaResource", %"class.media::DecryptingMediaResource"* %0, i64 0, i32 8, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %4) #11
  %5 = getelementptr inbounds %"class.media::DecryptingMediaResource", %"class.media::DecryptingMediaResource"* %0, i64 0, i32 7
  %6 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %5, i64 0, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  %8 = icmp eq %"class.std::__1::unique_ptr"* %7, null
  br i1 %8, label %32, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.std::__1::unique_ptr"* %7 to i8*
  %11 = getelementptr inbounds %"class.media::DecryptingMediaResource", %"class.media::DecryptingMediaResource"* %0, i64 0, i32 7, i32 0, i32 1
  %12 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %11, align 8
  %13 = icmp eq %"class.std::__1::unique_ptr"* %12, %7
  br i1 %13, label %30, label %14

14:                                               ; preds = %9, %25
  %15 = phi %"class.std::__1::unique_ptr"* [ %16, %25 ], [ %12, %9 ]
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %15, i64 -1
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.media::DecryptingDemuxerStream"*, %"class.media::DecryptingDemuxerStream"** %17, align 8
  store %"class.media::DecryptingDemuxerStream"* null, %"class.media::DecryptingDemuxerStream"** %17, align 8
  %19 = icmp eq %"class.media::DecryptingDemuxerStream"* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.media::DecryptingDemuxerStream"* %18 to void (%"class.media::DecryptingDemuxerStream"*)***
  %22 = load void (%"class.media::DecryptingDemuxerStream"*)**, void (%"class.media::DecryptingDemuxerStream"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.media::DecryptingDemuxerStream"*)*, void (%"class.media::DecryptingDemuxerStream"*)** %22, i64 8
  %24 = load void (%"class.media::DecryptingDemuxerStream"*)*, void (%"class.media::DecryptingDemuxerStream"*)** %23, align 8
  tail call void %24(%"class.media::DecryptingDemuxerStream"* nonnull %18) #11
  br label %25

25:                                               ; preds = %20, %14
  %26 = icmp eq %"class.std::__1::unique_ptr"* %16, %7
  br i1 %26, label %27, label %14

27:                                               ; preds = %25
  %28 = bitcast %"class.std::__1::vector.4"* %5 to i8**
  %29 = load i8*, i8** %28, align 8
  br label %30

30:                                               ; preds = %27, %9
  %31 = phi i8* [ %29, %27 ], [ %10, %9 ]
  store %"class.std::__1::unique_ptr"* %7, %"class.std::__1::unique_ptr"** %11, align 8
  tail call void @_ZdlPv(i8* %31) #12
  br label %32

32:                                               ; preds = %1, %30
  %33 = getelementptr inbounds %"class.media::DecryptingMediaResource", %"class.media::DecryptingMediaResource"* %0, i64 0, i32 6, i32 0, i32 0
  %34 = load %"class.media::DemuxerStream"**, %"class.media::DemuxerStream"*** %33, align 8
  %35 = icmp eq %"class.media::DemuxerStream"** %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %32
  %37 = ptrtoint %"class.media::DemuxerStream"** %34 to i64
  %38 = getelementptr inbounds %"class.media::DecryptingMediaResource", %"class.media::DecryptingMediaResource"* %0, i64 0, i32 6, i32 0, i32 1
  %39 = bitcast %"class.media::DemuxerStream"*** %38 to i64*
  store i64 %37, i64* %39, align 8
  %40 = bitcast %"class.media::DemuxerStream"** %34 to i8*
  tail call void @_ZdlPv(i8* %40) #12
  br label %41

41:                                               ; preds = %32, %36
  %42 = getelementptr inbounds %"class.media::DecryptingMediaResource", %"class.media::DecryptingMediaResource"* %0, i64 0, i32 4, i32 0
  %43 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %42, align 8
  %44 = icmp eq %"class.base::SequencedTaskRunner"* %43, null
  br i1 %44, label %53, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %43, i64 0, i32 0, i32 1
  %47 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw sub i32* %47, i32 1 acq_rel
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %53

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %46, i64 -2
  %52 = bitcast %"class.base::RefCountedThreadSafe.2"* %51 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %52) #11
  br label %53

53:                                               ; preds = %41, %45, %50
  %54 = getelementptr inbounds %"class.media::DecryptingMediaResource", %"class.media::DecryptingMediaResource"* %0, i64 0, i32 0
  tail call void @_ZN5media13MediaResourceD2Ev(%"class.media::MediaResource"* %54) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5media13MediaResourceD2Ev(%"class.media::MediaResource"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media23DecryptingMediaResourceD0Ev(%"class.media::DecryptingMediaResource"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5media23DecryptingMediaResourceD2Ev(%"class.media::DecryptingMediaResource"* %0) #11
  %2 = bitcast %"class.media::DecryptingMediaResource"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK5media23DecryptingMediaResource7GetTypeEv(%"class.media::DecryptingMediaResource"* nocapture readnone) unnamed_addr #4 align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media23DecryptingMediaResource13GetAllStreamsEv(%"class.std::__1::vector"* noalias sret, %"class.media::DecryptingMediaResource"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.media::DecryptingMediaResource", %"class.media::DecryptingMediaResource"* %1, i64 0, i32 6
  %4 = getelementptr inbounds %"class.media::DecryptingMediaResource", %"class.media::DecryptingMediaResource"* %1, i64 0, i32 6, i32 0, i32 1
  %5 = bitcast %"class.media::DemuxerStream"*** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %35, label %12

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #11
  %14 = icmp ugt i64 %10, 2305843009213693951
  br i1 %14, label %15, label %17

15:                                               ; preds = %12
  %16 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %16) #13
  unreachable

17:                                               ; preds = %12
  %18 = tail call i8* @_Znwm(i64 %9) #12
  %19 = bitcast i8* %18 to %"class.media::DemuxerStream"**
  %20 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %21 = bitcast %"class.media::DemuxerStream"*** %20 to i8**
  store i8* %18, i8** %21, align 8
  %22 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %18, i8** %22, align 8
  %23 = getelementptr inbounds %"class.media::DemuxerStream"*, %"class.media::DemuxerStream"** %19, i64 %10
  %24 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.media::DemuxerStream"** %23, %"class.media::DemuxerStream"*** %24, align 8
  %25 = bitcast %"class.media::DemuxerStream"*** %20 to i64*
  %26 = ptrtoint i8* %18 to i64
  %27 = icmp sgt i64 %9, 0
  br i1 %27, label %28, label %33

28:                                               ; preds = %17
  %29 = lshr exact i64 %9, 3
  %30 = inttoptr i64 %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* align 8 %30, i64 %9, i1 false) #11
  %31 = getelementptr inbounds %"class.media::DemuxerStream"*, %"class.media::DemuxerStream"** %19, i64 %29
  %32 = ptrtoint %"class.media::DemuxerStream"** %31 to i64
  br label %33

33:                                               ; preds = %28, %17
  %34 = phi i64 [ %32, %28 ], [ %26, %17 ]
  store i64 %34, i64* %25, align 8
  br label %42

35:                                               ; preds = %2
  %36 = getelementptr inbounds %"class.media::DecryptingMediaResource", %"class.media::DecryptingMediaResource"* %1, i64 0, i32 1
  %37 = load %"class.media::MediaResource"*, %"class.media::MediaResource"** %36, align 8
  %38 = bitcast %"class.media::MediaResource"* %37 to void (%"class.std::__1::vector"*, %"class.media::MediaResource"*)***
  %39 = load void (%"class.std::__1::vector"*, %"class.media::MediaResource"*)**, void (%"class.std::__1::vector"*, %"class.media::MediaResource"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.std::__1::vector"*, %"class.media::MediaResource"*)*, void (%"class.std::__1::vector"*, %"class.media::MediaResource"*)** %39, i64 3
  %41 = load void (%"class.std::__1::vector"*, %"class.media::MediaResource"*)*, void (%"class.std::__1::vector"*, %"class.media::MediaResource"*)** %40, align 8
  tail call void %41(%"class.std::__1::vector"* sret %0, %"class.media::MediaResource"* %37) #11
  br label %42

42:                                               ; preds = %33, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media23DecryptingMediaResource10InitializeEN4base12OnceCallbackIFvbEEENS1_17RepeatingCallbackIFvNS_13WaitingReasonEEEE(%"class.media::DecryptingMediaResource"*, %"class.base::OnceCallback.39"*, %"class.base::RepeatingCallback"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::internal::WeakReference", align 8
  %5 = alloca %"class.std::__1::vector", align 8
  %6 = alloca %"class.std::__1::unique_ptr", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = alloca %"class.base::WeakPtr", align 8
  %9 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.media::DecryptingMediaResource", %"class.media::DecryptingMediaResource"* %0, i64 0, i32 1
  %13 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 24, i1 false)
  %14 = load %"class.media::MediaResource"*, %"class.media::MediaResource"** %12, align 8
  %15 = bitcast %"class.media::MediaResource"* %14 to void (%"class.std::__1::vector"*, %"class.media::MediaResource"*)***
  %16 = load void (%"class.std::__1::vector"*, %"class.media::MediaResource"*)**, void (%"class.std::__1::vector"*, %"class.media::MediaResource"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.std::__1::vector"*, %"class.media::MediaResource"*)*, void (%"class.std::__1::vector"*, %"class.media::MediaResource"*)** %16, i64 3
  %18 = load void (%"class.std::__1::vector"*, %"class.media::MediaResource"*)*, void (%"class.std::__1::vector"*, %"class.media::MediaResource"*)** %17, align 8
  call void %18(%"class.std::__1::vector"* nonnull sret %5, %"class.media::MediaResource"* %14) #11
  %19 = getelementptr inbounds %"class.media::DecryptingMediaResource", %"class.media::DecryptingMediaResource"* %0, i64 0, i32 8, i32 0
  %20 = getelementptr inbounds %"class.base::OnceCallback.39", %"class.base::OnceCallback.39"* %1, i64 0, i32 0
  %21 = call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %19, %"class.base::internal::CallbackBase"* dereferenceable(8) %20) #11
  %22 = bitcast %"class.media::DemuxerStream"*** %11 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.std::__1::vector"* %5 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %23, %25
  %27 = lshr exact i64 %26, 3
  %28 = trunc i64 %27 to i32
  %29 = getelementptr inbounds %"class.media::DecryptingMediaResource", %"class.media::DecryptingMediaResource"* %0, i64 0, i32 5
  store i32 %28, i32* %29, align 8
  %30 = inttoptr i64 %25 to %"class.media::DemuxerStream"**
  %31 = inttoptr i64 %23 to %"class.media::DemuxerStream"**
  %32 = icmp eq %"class.media::DemuxerStream"** %31, %30
  br i1 %32, label %63, label %33

33:                                               ; preds = %3
  %34 = bitcast %"class.std::__1::unique_ptr"* %6 to i8*
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 0, i32 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.media::DecryptingMediaResource", %"class.media::DecryptingMediaResource"* %0, i64 0, i32 4
  %37 = getelementptr inbounds %"class.media::DecryptingMediaResource", %"class.media::DecryptingMediaResource"* %0, i64 0, i32 3
  %38 = bitcast %"class.std::__1::unique_ptr"* %6 to i8**
  %39 = getelementptr inbounds %"class.media::DecryptingMediaResource", %"class.media::DecryptingMediaResource"* %0, i64 0, i32 2
  %40 = bitcast %"class.base::WeakPtr"* %8 to i8*
  %41 = bitcast %"class.base::internal::WeakReference"* %4 to i8*
  %42 = getelementptr inbounds %"class.media::DecryptingMediaResource", %"class.media::DecryptingMediaResource"* %0, i64 0, i32 9, i32 0, i32 0
  %43 = getelementptr inbounds %"class.media::DecryptingMediaResource", %"class.media::DecryptingMediaResource"* %0, i64 0, i32 9, i32 0, i32 1
  %44 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %8, i64 0, i32 0
  %45 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %8, i64 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %8, i64 0, i32 0, i32 1
  %47 = bitcast %"class.base::OnceCallback"* %7 to i8**
  %48 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  %49 = getelementptr inbounds %"class.media::DecryptingMediaResource", %"class.media::DecryptingMediaResource"* %0, i64 0, i32 6
  %50 = bitcast %"class.std::__1::unique_ptr"* %6 to i64*
  %51 = getelementptr inbounds %"class.media::DecryptingMediaResource", %"class.media::DecryptingMediaResource"* %0, i64 0, i32 6, i32 0, i32 1
  %52 = getelementptr inbounds %"class.media::DecryptingMediaResource", %"class.media::DecryptingMediaResource"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %53 = bitcast %"class.media::DemuxerStream"*** %51 to i64*
  %54 = bitcast %"class.std::__1::vector"* %49 to i64*
  %55 = bitcast %"class.media::DemuxerStream"*** %52 to i64*
  %56 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %49, i64 0, i32 0, i32 0
  %57 = getelementptr inbounds %"class.media::DecryptingMediaResource", %"class.media::DecryptingMediaResource"* %0, i64 0, i32 7, i32 0, i32 1
  %58 = getelementptr inbounds %"class.media::DecryptingMediaResource", %"class.media::DecryptingMediaResource"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %59 = getelementptr inbounds %"class.media::DecryptingMediaResource", %"class.media::DecryptingMediaResource"* %0, i64 0, i32 7
  %60 = bitcast %"class.std::__1::unique_ptr"** %57 to i64*
  br label %70

61:                                               ; preds = %167
  %62 = load %"class.media::DemuxerStream"**, %"class.media::DemuxerStream"*** %10, align 8
  br label %63

63:                                               ; preds = %61, %3
  %64 = phi %"class.media::DemuxerStream"** [ %62, %61 ], [ %30, %3 ]
  %65 = icmp eq %"class.media::DemuxerStream"** %64, null
  br i1 %65, label %69, label %66

66:                                               ; preds = %63
  %67 = ptrtoint %"class.media::DemuxerStream"** %64 to i64
  store i64 %67, i64* %22, align 8
  %68 = bitcast %"class.media::DemuxerStream"** %64 to i8*
  call void @_ZdlPv(i8* %68) #12
  br label %69

69:                                               ; preds = %63, %66
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #11
  ret void

70:                                               ; preds = %33, %167
  %71 = phi %"class.media::DemuxerStream"** [ %30, %33 ], [ %168, %167 ]
  %72 = load %"class.media::DemuxerStream"*, %"class.media::DemuxerStream"** %71, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #11
  store %"class.media::DecryptingDemuxerStream"* inttoptr (i64 -6148914691236517206 to %"class.media::DecryptingDemuxerStream"*), %"class.media::DecryptingDemuxerStream"** %35, align 8
  %73 = call i8* @_Znwm(i64 344) #12
  %74 = bitcast i8* %73 to %"class.media::DecryptingDemuxerStream"*
  %75 = load %"class.media::MediaLog"*, %"class.media::MediaLog"** %37, align 8
  call void @_ZN5media23DecryptingDemuxerStreamC1ERK13scoped_refptrIN4base19SequencedTaskRunnerEEPNS_8MediaLogERKNS2_17RepeatingCallbackIFvNS_13WaitingReasonEEEE(%"class.media::DecryptingDemuxerStream"* nonnull %74, %class.scoped_refptr.1* dereferenceable(8) %36, %"class.media::MediaLog"* %75, %"class.base::RepeatingCallback"* dereferenceable(8) %2) #11
  store i8* %73, i8** %38, align 8
  %76 = load %"class.media::CdmContext"*, %"class.media::CdmContext"** %39, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #11
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #11, !noalias !2
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %4, %"class.base::internal::WeakReferenceOwner"* %42) #11, !noalias !2
  %77 = load i64, i64* %43, align 8, !noalias !2
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %44, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %4, i64 %77) #11
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #11, !noalias !2
  %78 = call i8* @_Znwm(i64 64) #12, !noalias !5
  %79 = bitcast i8* %78 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %79, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5media23DecryptingMediaResourceEFvNS3_14PipelineStatusEEJNS_7WeakPtrIS4_EEEEEFvS5_EE7RunOnceEPNS0_13BindStateBaseES5_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5media23DecryptingMediaResourceEFvNS2_14PipelineStatusEEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5media23DecryptingMediaResourceEFvNS3_14PipelineStatusEEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSB_21CancellationQueryModeE) #11, !noalias !5
  %80 = getelementptr inbounds i8, i8* %78, i64 32
  %81 = bitcast i8* %80 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.media::DecryptingMediaResource"*, i32)* @_ZN5media23DecryptingMediaResource30OnDecryptingDemuxerInitializedENS_14PipelineStatusE to i64), i64 0>, <2 x i64>* %81, align 8, !noalias !5
  %82 = getelementptr inbounds i8, i8* %78, i64 48
  %83 = bitcast i8* %82 to %"class.base::internal::WeakReference"*
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %83, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %45) #11, !noalias !5
  %84 = getelementptr inbounds i8, i8* %78, i64 56
  %85 = bitcast i8* %84 to i64*
  %86 = load i64, i64* %46, align 8, !noalias !5
  store i64 %86, i64* %85, align 8, !noalias !5
  store i8* %78, i8** %47, align 8, !alias.scope !5
  call void @_ZN5media23DecryptingDemuxerStream10InitializeEPNS_13DemuxerStreamEPNS_10CdmContextEN4base12OnceCallbackIFvNS_14PipelineStatusEEEE(%"class.media::DecryptingDemuxerStream"* nonnull %74, %"class.media::DemuxerStream"* %72, %"class.media::CdmContext"* %76, %"class.base::OnceCallback"* nonnull %7) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %48) #11
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %44) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #11
  %87 = load i64, i64* %50, align 8
  %88 = load %"class.media::DemuxerStream"**, %"class.media::DemuxerStream"*** %51, align 8
  %89 = load %"class.media::DemuxerStream"**, %"class.media::DemuxerStream"*** %52, align 8
  %90 = icmp ult %"class.media::DemuxerStream"** %88, %89
  %91 = ptrtoint %"class.media::DemuxerStream"** %89 to i64
  br i1 %90, label %92, label %96

92:                                               ; preds = %70
  %93 = bitcast %"class.media::DemuxerStream"** %88 to i64*
  store i64 %87, i64* %93, align 8
  %94 = getelementptr inbounds %"class.media::DemuxerStream"*, %"class.media::DemuxerStream"** %88, i64 1
  %95 = ptrtoint %"class.media::DemuxerStream"** %94 to i64
  store i64 %95, i64* %53, align 8
  br label %149

96:                                               ; preds = %70
  %97 = ptrtoint %"class.media::DemuxerStream"** %88 to i64
  %98 = load i64, i64* %54, align 8
  %99 = sub i64 %97, %98
  %100 = ashr exact i64 %99, 3
  %101 = add nsw i64 %100, 1
  %102 = icmp ugt i64 %101, 2305843009213693951
  br i1 %102, label %103, label %105

103:                                              ; preds = %96
  %104 = bitcast %"class.std::__1::vector"* %49 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %104) #13
  unreachable

105:                                              ; preds = %96
  %106 = sub i64 %91, %98
  %107 = ashr exact i64 %106, 3
  %108 = icmp ult i64 %107, 1152921504606846975
  br i1 %108, label %109, label %117

109:                                              ; preds = %105
  %110 = ashr exact i64 %106, 2
  %111 = icmp ult i64 %110, %101
  %112 = select i1 %111, i64 %101, i64 %110
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %122, label %114

114:                                              ; preds = %109
  %115 = icmp ugt i64 %112, 2305843009213693951
  br i1 %115, label %116, label %117

116:                                              ; preds = %114
  call void @abort() #13
  unreachable

117:                                              ; preds = %114, %105
  %118 = phi i64 [ %112, %114 ], [ 2305843009213693951, %105 ]
  %119 = shl i64 %118, 3
  %120 = call i8* @_Znwm(i64 %119) #12
  %121 = bitcast i8* %120 to %"class.media::DemuxerStream"**
  br label %122

122:                                              ; preds = %117, %109
  %123 = phi i64 [ %118, %117 ], [ 0, %109 ]
  %124 = phi %"class.media::DemuxerStream"** [ %121, %117 ], [ null, %109 ]
  %125 = getelementptr inbounds %"class.media::DemuxerStream"*, %"class.media::DemuxerStream"** %124, i64 %100
  %126 = getelementptr inbounds %"class.media::DemuxerStream"*, %"class.media::DemuxerStream"** %124, i64 %123
  %127 = ptrtoint %"class.media::DemuxerStream"** %126 to i64
  %128 = bitcast %"class.media::DemuxerStream"** %125 to i64*
  store i64 %87, i64* %128, align 8
  %129 = getelementptr inbounds %"class.media::DemuxerStream"*, %"class.media::DemuxerStream"** %125, i64 1
  %130 = ptrtoint %"class.media::DemuxerStream"** %129 to i64
  %131 = load %"class.media::DemuxerStream"**, %"class.media::DemuxerStream"*** %56, align 8
  %132 = load i64, i64* %53, align 8
  %133 = ptrtoint %"class.media::DemuxerStream"** %131 to i64
  %134 = sub i64 %132, %133
  %135 = ashr exact i64 %134, 3
  %136 = sub nsw i64 0, %135
  %137 = getelementptr inbounds %"class.media::DemuxerStream"*, %"class.media::DemuxerStream"** %125, i64 %136
  %138 = ptrtoint %"class.media::DemuxerStream"** %137 to i64
  %139 = icmp sgt i64 %134, 0
  br i1 %139, label %140, label %144

140:                                              ; preds = %122
  %141 = bitcast %"class.media::DemuxerStream"** %137 to i8*
  %142 = bitcast %"class.media::DemuxerStream"** %131 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %141, i8* align 8 %142, i64 %134, i1 false) #11
  %143 = load %"class.media::DemuxerStream"**, %"class.media::DemuxerStream"*** %56, align 8
  br label %144

144:                                              ; preds = %140, %122
  %145 = phi %"class.media::DemuxerStream"** [ %131, %122 ], [ %143, %140 ]
  store i64 %138, i64* %54, align 8
  store i64 %130, i64* %53, align 8
  store i64 %127, i64* %55, align 8
  %146 = icmp eq %"class.media::DemuxerStream"** %145, null
  br i1 %146, label %149, label %147

147:                                              ; preds = %144
  %148 = bitcast %"class.media::DemuxerStream"** %145 to i8*
  call void @_ZdlPv(i8* %148) #12
  br label %149

149:                                              ; preds = %92, %144, %147
  %150 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %57, align 8
  %151 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %58, align 8
  %152 = icmp ult %"class.std::__1::unique_ptr"* %150, %151
  br i1 %152, label %153, label %158

153:                                              ; preds = %149
  %154 = load i64, i64* %50, align 8
  store %"class.media::DecryptingDemuxerStream"* null, %"class.media::DecryptingDemuxerStream"** %35, align 8
  %155 = bitcast %"class.std::__1::unique_ptr"* %150 to i64*
  store i64 %154, i64* %155, align 8
  %156 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %150, i64 1
  %157 = ptrtoint %"class.std::__1::unique_ptr"* %156 to i64
  store i64 %157, i64* %60, align 8
  br label %159

158:                                              ; preds = %149
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5media23DecryptingDemuxerStreamENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.4"* %59, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %6) #11
  br label %159

159:                                              ; preds = %153, %158
  %160 = load %"class.media::DecryptingDemuxerStream"*, %"class.media::DecryptingDemuxerStream"** %35, align 8
  store %"class.media::DecryptingDemuxerStream"* null, %"class.media::DecryptingDemuxerStream"** %35, align 8
  %161 = icmp eq %"class.media::DecryptingDemuxerStream"* %160, null
  br i1 %161, label %167, label %162

162:                                              ; preds = %159
  %163 = bitcast %"class.media::DecryptingDemuxerStream"* %160 to void (%"class.media::DecryptingDemuxerStream"*)***
  %164 = load void (%"class.media::DecryptingDemuxerStream"*)**, void (%"class.media::DecryptingDemuxerStream"*)*** %163, align 8
  %165 = getelementptr inbounds void (%"class.media::DecryptingDemuxerStream"*)*, void (%"class.media::DecryptingDemuxerStream"*)** %164, i64 8
  %166 = load void (%"class.media::DecryptingDemuxerStream"*)*, void (%"class.media::DecryptingDemuxerStream"*)** %165, align 8
  call void %166(%"class.media::DecryptingDemuxerStream"* nonnull %160) #11
  br label %167

167:                                              ; preds = %159, %162
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #11
  %168 = getelementptr inbounds %"class.media::DemuxerStream"*, %"class.media::DemuxerStream"** %71, i64 1
  %169 = icmp eq %"class.media::DemuxerStream"** %168, %31
  br i1 %169, label %61, label %70
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

declare void @_ZN5media23DecryptingDemuxerStream10InitializeEPNS_13DemuxerStreamEPNS_10CdmContextEN4base12OnceCallbackIFvNS_14PipelineStatusEEEE(%"class.media::DecryptingDemuxerStream"*, %"class.media::DemuxerStream"*, %"class.media::CdmContext"*, %"class.base::OnceCallback"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media23DecryptingMediaResource30OnDecryptingDemuxerInitializedENS_14PipelineStatusE(%"class.media::DecryptingMediaResource"* nocapture, i32) #0 align 2 {
  %3 = alloca %"class.base::OnceCallback.39", align 8
  %4 = alloca %"class.base::OnceCallback.39", align 8
  %5 = getelementptr inbounds %"class.media::DecryptingMediaResource", %"class.media::DecryptingMediaResource"* %0, i64 0, i32 5
  %6 = load i32, i32* %5, align 8
  %7 = add nsw i32 %6, -1
  store i32 %7, i32* %5, align 8
  %8 = getelementptr inbounds %"class.media::DecryptingMediaResource", %"class.media::DecryptingMediaResource"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %9 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %8, align 8
  %10 = icmp eq %"class.base::internal::BindStateBase"* %9, null
  %11 = ptrtoint %"class.base::internal::BindStateBase"* %9 to i64
  br i1 %10, label %30, label %12

12:                                               ; preds = %2
  %13 = icmp eq i32 %1, 0
  br i1 %13, label %21, label %14

14:                                               ; preds = %12
  %15 = bitcast %"class.base::OnceCallback.39"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #11
  %16 = bitcast %"class.base::OnceCallback.39"* %3 to i64*
  store i64 %11, i64* %16, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %17 = getelementptr inbounds %"class.base::OnceCallback.39", %"class.base::OnceCallback.39"* %3, i64 0, i32 0
  %18 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %9, i64 0, i32 1
  %19 = bitcast void ()** %18 to void (%"class.base::internal::BindStateBase"*, i1)**
  %20 = load void (%"class.base::internal::BindStateBase"*, i1)*, void (%"class.base::internal::BindStateBase"*, i1)** %19, align 8
  tail call void %20(%"class.base::internal::BindStateBase"* nonnull %9, i1 zeroext false) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #11
  br label %30

21:                                               ; preds = %12
  %22 = icmp eq i32 %7, 0
  br i1 %22, label %23, label %30

23:                                               ; preds = %21
  %24 = bitcast %"class.base::OnceCallback.39"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #11
  %25 = bitcast %"class.base::OnceCallback.39"* %4 to i64*
  store i64 %11, i64* %25, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %26 = getelementptr inbounds %"class.base::OnceCallback.39", %"class.base::OnceCallback.39"* %4, i64 0, i32 0
  %27 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %9, i64 0, i32 1
  %28 = bitcast void ()** %27 to void (%"class.base::internal::BindStateBase"*, i1)**
  %29 = load void (%"class.base::internal::BindStateBase"*, i1)*, void (%"class.base::internal::BindStateBase"*, i1)** %28, align 8
  tail call void %29(%"class.base::internal::BindStateBase"* nonnull %9, i1 zeroext true) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %26) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #11
  br label %30

30:                                               ; preds = %2, %21, %23, %14
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5media23DecryptingMediaResource38DecryptingDemuxerStreamCountForTestingEv(%"class.media::DecryptingMediaResource"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.media::DecryptingMediaResource", %"class.media::DecryptingMediaResource"* %0, i64 0, i32 7
  %3 = getelementptr inbounds %"class.media::DecryptingMediaResource", %"class.media::DecryptingMediaResource"* %0, i64 0, i32 7, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.4"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = lshr exact i64 %8, 3
  %10 = trunc i64 %9 to i32
  ret i32 %10
}

declare dereferenceable(328) %"struct.media::MediaUrlParams"* @_ZNK5media13MediaResource17GetMediaUrlParamsEv(%"class.media::MediaResource"*) unnamed_addr #1

declare void @_ZN5media13MediaResource34ForwardDurationChangeToDemuxerHostEN4base9TimeDeltaE(%"class.media::MediaResource"*, i64) unnamed_addr #1

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBase"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #1

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

declare void @_ZN5media23DecryptingDemuxerStreamC1ERK13scoped_refptrIN4base19SequencedTaskRunnerEEPNS_8MediaLogERKNS2_17RepeatingCallbackIFvNS_13WaitingReasonEEEE(%"class.media::DecryptingDemuxerStream"*, %class.scoped_refptr.1* dereferenceable(8), %"class.media::MediaLog"*, %"class.base::RepeatingCallback"* dereferenceable(8)) unnamed_addr #1

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #2

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5media23DecryptingMediaResourceEFvNS3_14PipelineStatusEEJNS_7WeakPtrIS4_EEEEEFvS5_EE7RunOnceEPNS0_13BindStateBaseES5_(%"class.base::internal::BindStateBase"*, i32) #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to %"class.base::internal::WeakReference"*
  %7 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #11
  br i1 %7, label %8, label %43

8:                                                ; preds = %2
  %9 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, i64 1
  %10 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to %"class.media::DecryptingMediaResource"**
  %11 = load %"class.media::DecryptingMediaResource"*, %"class.media::DecryptingMediaResource"** %10, align 8
  %12 = icmp eq %"class.media::DecryptingMediaResource"* %11, null
  br i1 %12, label %43, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.base::internal::BindStateBase"* %4 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %17 = bitcast void ()** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #11
  br i1 %19, label %23, label %20

20:                                               ; preds = %13
  %21 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0)) #11
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #11
  br label %23

23:                                               ; preds = %20, %13
  %24 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #11
  %25 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = select i1 %24, i8* %26, i8* null
  %28 = getelementptr inbounds i8, i8* %27, i64 %18
  %29 = bitcast i8* %28 to %"class.media::DecryptingMediaResource"*
  %30 = and i64 %15, 1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %39, label %32

32:                                               ; preds = %23
  %33 = bitcast i8* %28 to i8**
  %34 = load i8*, i8** %33, align 8
  %35 = add i64 %15, -1
  %36 = getelementptr i8, i8* %34, i64 %35
  %37 = bitcast i8* %36 to void (%"class.media::DecryptingMediaResource"*, i32)**
  %38 = load void (%"class.media::DecryptingMediaResource"*, i32)*, void (%"class.media::DecryptingMediaResource"*, i32)** %37, align 8
  br label %41

39:                                               ; preds = %23
  %40 = inttoptr i64 %15 to void (%"class.media::DecryptingMediaResource"*, i32)*
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi void (%"class.media::DecryptingMediaResource"*, i32)* [ %38, %32 ], [ %40, %39 ]
  call void %42(%"class.media::DecryptingMediaResource"* %29, i32 %1) #11
  br label %43

43:                                               ; preds = %2, %8, %41
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5media23DecryptingMediaResourceEFvNS2_14PipelineStatusEEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #11
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #12
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5media23DecryptingMediaResourceEFvNS3_14PipelineStatusEEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSB_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #11
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.media::DecryptingMediaResource"**
  %9 = load %"class.media::DecryptingMediaResource"*, %"class.media::DecryptingMediaResource"** %8, align 8
  %10 = icmp ne %"class.media::DecryptingMediaResource"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #11
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #1

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN5media23DecryptingDemuxerStreamENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.4"*, %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.4"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.4"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #13
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.media::DecryptingDemuxerStream"* null, %"class.media::DecryptingDemuxerStream"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.media::DecryptingDemuxerStream"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.media::DecryptingDemuxerStream"* null, %"class.media::DecryptingDemuxerStream"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !10

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.media::DecryptingDemuxerStream"* null, %"class.media::DecryptingDemuxerStream"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.media::DecryptingDemuxerStream"* null, %"class.media::DecryptingDemuxerStream"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.media::DecryptingDemuxerStream"* null, %"class.media::DecryptingDemuxerStream"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.media::DecryptingDemuxerStream"* null, %"class.media::DecryptingDemuxerStream"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.media::DecryptingDemuxerStream"* null, %"class.media::DecryptingDemuxerStream"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.media::DecryptingDemuxerStream"* null, %"class.media::DecryptingDemuxerStream"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.media::DecryptingDemuxerStream"* null, %"class.media::DecryptingDemuxerStream"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.media::DecryptingDemuxerStream"* null, %"class.media::DecryptingDemuxerStream"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr"*
  %138 = icmp eq %"class.std::__1::unique_ptr"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.media::DecryptingDemuxerStream"*, %"class.media::DecryptingDemuxerStream"** %142, align 8
  store %"class.media::DecryptingDemuxerStream"* null, %"class.media::DecryptingDemuxerStream"** %142, align 8
  %144 = icmp eq %"class.media::DecryptingDemuxerStream"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.media::DecryptingDemuxerStream"* %143 to void (%"class.media::DecryptingDemuxerStream"*)***
  %147 = load void (%"class.media::DecryptingDemuxerStream"*)**, void (%"class.media::DecryptingDemuxerStream"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.media::DecryptingDemuxerStream"*)*, void (%"class.media::DecryptingDemuxerStream"*)** %147, i64 8
  %149 = load void (%"class.media::DecryptingDemuxerStream"*)*, void (%"class.media::DecryptingDemuxerStream"*)** %148, align 8
  tail call void %149(%"class.media::DecryptingDemuxerStream"* nonnull %143) #11
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #12
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK4base14WeakPtrFactoryIN5media23DecryptingMediaResourceEE10GetWeakPtrEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4base14WeakPtrFactoryIN5media23DecryptingMediaResourceEE10GetWeakPtrEv"}
!5 = !{!6, !8}
!6 = distinct !{!6, !7, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5media23DecryptingMediaResourceEFvNS3_14PipelineStatusEEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!7 = distinct !{!7, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5media23DecryptingMediaResourceEFvNS3_14PipelineStatusEEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_"}
!8 = distinct !{!8, !9, !"_ZN4base8BindOnceIMN5media23DecryptingMediaResourceEFvNS1_14PipelineStatusEEJNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!9 = distinct !{!9, !"_ZN4base8BindOnceIMN5media23DecryptingMediaResourceEFvNS1_14PipelineStatusEEJNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
