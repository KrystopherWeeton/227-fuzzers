; ModuleID = '../../third_party/libaom/source/libaom/av1/av1_cx_iface.c'
source_filename = "../../third_party/libaom/source/libaom/av1/av1_cx_iface.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.aom_codec_ctrl_fn_map = type { i32, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* }
%struct.aom_codec_alg_priv = type { %struct.aom_codec_priv, %struct.aom_codec_enc_cfg, %struct.av1_extracfg, %struct.aom_rational64, i64, i8, %struct.AV1EncoderConfig, %struct.AV1_PRIMARY*, i8*, i64, i64, %struct.aom_image, i64, %union.anon.17, i32, %struct.BufferPool*, %struct.BufferPool*, %struct.FIRSTPASS_STATS*, i32, %struct.STATS_BUFFER_CTX }
%struct.aom_codec_priv = type { i8*, i64, %struct.anon }
%struct.anon = type { %struct.aom_fixed_buf, i32, i32, %struct.aom_codec_cx_pkt }
%struct.aom_fixed_buf = type { i8*, i64 }
%struct.aom_codec_cx_pkt = type { i32, %union.anon }
%union.anon = type { %struct.aom_psnr_pkt }
%struct.aom_psnr_pkt = type { [4 x i32], [4 x i64], [4 x double], [4 x i32], [4 x i64], [4 x double] }
%struct.aom_codec_enc_cfg = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.aom_rational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.aom_fixed_buf, %struct.aom_fixed_buf, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [64 x i32], [64 x i32], i32, [5 x i32], %struct.cfg_options }
%struct.aom_rational = type { i32, i32 }
%struct.cfg_options = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.av1_extracfg = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [32 x i8], i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.aom_rational64 = type { i64, i32 }
%struct.AV1EncoderConfig = type { %struct.InputCfg, %struct.FrameDimensionCfg, %struct.AlgoCfg, %struct.KeyFrameCfg, %struct.RateControlCfg, %struct.QuantizationCfg, %struct.ResizeCfg, %struct.SuperResCfg, %struct.aom_fixed_buf, %struct.ToolCfg, %struct.GFConfig, %struct.TileConfig, %struct.TuneCfg, %struct.ColorCfg, %struct.DecoderModelCfg, %struct.RefFrameCfg, %struct.UnitTestCfg, %struct.MotionModeCfg, %struct.IntraModeCfg, %struct.TxfmSizeTypeCfg, %struct.CompoundTypeCfg, %struct.PartitionCfg, %struct.CostUpdateFreq, float, i32, i32, i32, i32, i32, i32, i32, [32 x i8], i8, i32, i8, i8, i8, i8, i8* }
%struct.InputCfg = type { double, i32, i32, i32, i32 }
%struct.FrameDimensionCfg = type { i32, i32, i32, i32, i32, i32 }
%struct.AlgoCfg = type { i32, i32, i32, i32, i8, i8, i8 }
%struct.KeyFrameCfg = type { i32, i32, i32, i32, i32, i8, i8, i8, i8 }
%struct.RateControlCfg = type { i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.QuantizationCfg = type { [5 x double], i32, i32, i32, i32, i8, i8, i8, i8 }
%struct.ResizeCfg = type { i8, i8, i8 }
%struct.SuperResCfg = type { i32, i32, i8, i8, i32, i8 }
%struct.ToolCfg = type { i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.GFConfig = type { i32, i32, i32, i32, i32, i8, i8 }
%struct.TileConfig = type { i32, i32, i32, i32, i32, i32, [64 x i32], [64 x i32], i8, i8, i8 }
%struct.TuneCfg = type { i8*, i8*, i32, i32, i32 }
%struct.ColorCfg = type { i32, i32, i32, i32, i32 }
%struct.DecoderModelCfg = type { %struct.aom_timing, i32, i8, i8, i8 }
%struct.aom_timing = type { i32, i32, i32, i32 }
%struct.RefFrameCfg = type { i32, i8, i8 }
%struct.UnitTestCfg = type { i32, i32 }
%struct.MotionModeCfg = type { i8, i8, i8 }
%struct.IntraModeCfg = type { i8, i8, i8, i8, i8, i8, i8 }
%struct.TxfmSizeTypeCfg = type { i8, i8, i8, i8, i8, i8, i8 }
%struct.CompoundTypeCfg = type { i8, i8, i8, i8, i8, i8 }
%struct.PartitionCfg = type { i8, i8, i8, i8, i8 }
%struct.CostUpdateFreq = type { i32, i32, i32, i32 }
%struct.AV1_PRIMARY = type { %struct.AV1_COMP*, %struct.AV1_COMP*, %struct.lookahead_ctx*, i32, %struct.aom_codec_pkt_list*, i32, %struct.GF_GROUP, %struct.GF_STATE, i32, %struct.AV1LevelParams, i32, i32, %struct.TWO_PASS, %struct.PRIMARY_RATE_CONTROL, %struct.yv12_buffer_config, %struct.SequenceHeader, i32, i8, i32, i32, %struct.aom_internal_error_info, [22 x %struct.aom_variance_vtable], double*, double*, %struct.TplParams }
%struct.AV1_COMP = type { %struct.AV1_PRIMARY*, [8 x i8], %struct.EncQuantDequantParams, %struct.ThreadData, %struct.FRAME_COUNTS, %struct.MBMIExtFrameBufferInfo, %struct.CB_COEFF_BUFFER*, %struct.CoeffBufferPool, %struct.AV1Common, %struct.AV1EncoderConfig, i32, [8 x i8], %struct.yv12_buffer_config*, %struct.yv12_buffer_config*, %struct.yv12_buffer_config*, %struct.yv12_buffer_config, %struct.yv12_buffer_config*, %struct.yv12_buffer_config, %struct.yv12_buffer_config*, i32, %struct.TemporalFilterCtx, i32, %struct.ForceIntegerMVInfo, [7 x %struct.RefCntBuffer*], %struct.RefCntBuffer*, %struct.RefreshFrameFlagsInfo, [8 x i32], %struct.ExternalFlags, %struct.yv12_buffer_config, %struct.yv12_buffer_config, i64, %struct.RD_OPT, %struct.CODING_CONTEXT, %struct.GlobalMotionInfo, %struct.WinnerModeParams, %struct.TimeStamps, %struct.RATE_CONTROL, double, i32, i32, %struct.SPEED_FEATURES, %struct.MotionVectorSearchParams, i32, %struct.EncSegmentationInfo, %struct.CYCLIC_REFRESH*, %struct.ActiveMap, i8, %struct.RefBufferStack, i32, i32, %struct.FRAME_INFO, %struct.FRAME_INDEX_SET, %struct.InitialDimensions, i32, %struct.ResizePendingParams, %struct.TileDataEnc*, i32, %struct.TokenInfo, i32, %struct.VarBasedPartitionInfo, %struct.FrameProbInfo, %struct.MultiThreadInfo, i32, i32, i32, %struct.AV1LrStruct, %struct.aom_film_grain_table_t*, %struct.aom_denoise_and_model_t*, %struct.InterpSearchFlags, i32, i32, i32, i32, %struct.RefFrameDistanceInfo, double*, %struct.SVC, i8, %struct.MV_STATS, i8, i32, i32, %struct.FirstPassData, %struct.noise_estimate, %struct.av1_denoiser, i8*, i8, i32, i64, [8 x i8] }
%struct.EncQuantDequantParams = type { %struct.QUANTS, %struct.Dequants }
%struct.QUANTS = type { [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]] }
%struct.Dequants = type { [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]] }
%struct.ThreadData = type { %struct.macroblock, %struct.RD_COUNTS, %struct.FRAME_COUNTS*, %struct.PC_TREE_SHARED_BUFFERS, %struct.SIMPLE_MOTION_DATA_TREE*, %struct.SIMPLE_MOTION_DATA_TREE*, %struct.inter_modes_info*, [2 x [2 x i32*]], %struct.OBMCBuffer, %struct.PALETTE_BUFFER*, %struct.CompoundTypeRdBuffers, i16*, [2 x i8*], i32, i32, i32, i32, [4 x i32], %struct.frame_contexts*, %struct.VP64x64*, i32, %struct.PICK_MODE_CONTEXT*, %struct.TemporalFilterData, %struct.TplTxfmStats, %struct.PixelLevelGradientInfo*, [8 x i8] }
%struct.macroblock = type { [3 x %struct.macroblock_plane], [8 x i8], %struct.macroblockd, %struct.MB_MODE_INFO_EXT, %struct.MB_MODE_INFO_EXT_FRAME*, %struct.frame_contexts*, %struct.frame_contexts*, %struct.CB_COEFF_BUFFER*, [2 x i16], %struct.OBMCBuffer, %struct.PALETTE_BUFFER*, %struct.CompoundTypeRdBuffers, i16*, %struct.aom_internal_error_info*, [2 x i8*], i32, i32, i32, i32, i32, %struct.ModeCosts, %struct.MvCosts*, %struct.IntraBCMVCosts*, %struct.CoeffCosts, i32, i32, i32, i32, i32, i32, %struct.SuperBlockEnc, %struct.CONTENT_STATE_SB, [8 x i32], i32, [8 x i8], [8 x %struct.WARP_SAMPLE_INFO], [1024 x i32], i32, %struct.PartitionSearchInfo, i32, i32, [22 x [169 x i32]], %struct.WinnerModeStats*, i32, i8, %struct.inter_modes_info*, i8, [64 x %struct.COMP_RD_STATS], i32, i32, %struct.intrabc_hash_info, i32, %struct.MB_MODE_INFO*, %struct.PixelLevelGradientInfo*, [2 x i8], [8 x i32], %struct.FullMvLimits, %struct.TxfmSearchParams, %struct.TxfmSearchInfo, [2 x i8], i32, [8 x i32] }
%struct.macroblock_plane = type { i16*, i32*, i32*, i32*, i16*, i8*, %struct.buf_2d, i16*, i16*, i16*, i16*, i16*, i16*, i16* }
%struct.buf_2d = type { i8*, i8*, i32, i32, i32 }
%struct.macroblockd = type { i32, i32, i32, i8, [3 x %struct.macroblockd_plane], %struct.TileInfo, %struct.MB_MODE_INFO**, i8, i8, i8, i8, %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO*, i8*, i32, i32, i32, i32, i32, [2 x %struct.scale_factors*], %struct.yv12_buffer_config*, [3 x i8*], [3 x [32 x i8]], i8*, [32 x i8], i8*, i8*, [32 x i8], [3 x %struct.WienerInfo], [3 x %struct.SgrprojInfo], i8, i8, [29 x [8 x %struct.candidate_mv]], [29 x [8 x i16]], i8, i8, [8 x i8], %struct.frame_contexts*, i32, [8 x i32], [8 x i32], i32, i32, %struct.aom_internal_error_info*, %struct.WarpedMotionParams*, i8, [4 x i8], [4 x i8], i8*, %struct.cfl_ctx, [2 x i16], i16*, [2 x i8*], [8 x i8] }
%struct.macroblockd_plane = type { i8, i32, i32, %struct.buf_2d, [2 x %struct.buf_2d], i8*, i8*, [8 x [2 x i16]], i8*, i8, i8, [8 x [19 x i8*]], [8 x [19 x i8*]] }
%struct.TileInfo = type { i32, i32, i32, i32, i32, i32 }
%struct.scale_factors = type { i32, i32, i32, i32, i32 (i32, %struct.scale_factors*)*, i32 (i32, %struct.scale_factors*)* }
%struct.WienerInfo = type { [8 x i16], [8 x i16] }
%struct.SgrprojInfo = type { i32, [2 x i32] }
%struct.candidate_mv = type { %union.int_mv, %union.int_mv }
%union.int_mv = type { i32 }
%struct.WarpedMotionParams = type { [8 x i32], i16, i16, i16, i16, i8, i8 }
%struct.cfl_ctx = type { [1024 x i16], [1024 x i16], [2 x i32], i32, [2 x [32 x i16]], i32, i32, i32, i32, i32, i32 }
%struct.MB_MODE_INFO_EXT = type { [29 x [4 x %struct.candidate_mv]], [29 x [4 x i16]], [29 x i8], [8 x %union.int_mv], [29 x i16] }
%struct.MB_MODE_INFO_EXT_FRAME = type { [4 x %struct.candidate_mv], [4 x i16], i8, [8 x %union.int_mv], i16, [2 x i16] }
%struct.ModeCosts = type { [20 x [10 x i32]], [4 x [13 x i32]], [13 x [13 x [13 x i32]]], [2 x [13 x [14 x i32]]], [22 x [2 x i32]], [5 x i32], [8 x [7 x i32]], [8 x [2 x [16 x i32]]], [2 x i32], [7 x [7 x i32]], [7 x [7 x i32]], [7 x [5 x [8 x i32]]], [7 x [5 x [8 x i32]]], [7 x [3 x [2 x i32]]], [2 x [2 x i32]], [3 x [2 x i32]], [6 x [2 x i32]], [2 x [2 x i32]], [6 x [2 x i32]], [3 x [2 x i32]], [3 x [6 x [2 x i32]]], [5 x [2 x i32]], [5 x [3 x i32]], [3 x [3 x [3 x i32]]], [3 x [3 x [2 x i32]]], [3 x [2 x [2 x i32]]], [4 x [2 x i32]], [8 x [8 x i32]], [22 x [2 x i32]], [22 x [16 x i32]], [4 x [2 x i32]], [22 x [2 x i32]], [4 x [4 x i32]], [6 x [2 x i32]], [6 x [2 x i32]], [22 x [3 x i32]], [22 x [2 x i32]], [16 x [3 x i32]], [3 x [2 x i32]], [4 x [3 x [5 x i32]]], [21 x [2 x i32]], [4 x [4 x [16 x i32]]], [3 x [4 x [13 x [16 x i32]]]], [3 x i32], [2 x i32], [2 x i32] }
%struct.MvCosts = type { [4 x i32], [2 x [32767 x i32]], [2 x [32767 x i32]], [2 x i32*], [2 x i32*], i32** }
%struct.IntraBCMVCosts = type { [4 x i32], [2 x [32767 x i32]], [2 x i32*] }
%struct.CoeffCosts = type { [5 x [2 x %struct.LV_MAP_COEFF_COST]], [7 x [2 x %struct.LV_MAP_EOB_COST]] }
%struct.LV_MAP_COEFF_COST = type { [13 x [2 x i32]], [4 x [3 x i32]], [42 x [8 x i32]], [9 x [2 x i32]], [3 x [2 x i32]], [21 x [26 x i32]] }
%struct.LV_MAP_EOB_COST = type { [2 x [11 x i32]] }
%struct.SuperBlockEnc = type { i8, i8, i32, [64 x i64], [64 x i64], [64 x [7 x %union.int_mv]], i32 }
%struct.CONTENT_STATE_SB = type { i32, i32, i32 }
%struct.WARP_SAMPLE_INFO = type { i32, [16 x i32], [16 x i32] }
%struct.PartitionSearchInfo = type { [105 x i8] }
%struct.WinnerModeStats = type { %struct.MB_MODE_INFO, %struct.RD_STATS, i64, i32, i32, [16384 x i8], i8 }
%struct.MB_MODE_INFO = type <{ i8, i8, i8, i8, i32, [2 x %union.int_mv], [2 x i8], [2 x i8], %union.int_interpfilters, i8, i8, i8, i8, %struct.WarpedMotionParams, i8, i8, [6 x i8], %struct.INTERINTER_COMPOUND_DATA, [2 x i8], %struct.FILTER_INTRA_MODE_INFO, i8, i8, %struct.PALETTE_MODE_INFO, i8, i8, [16 x i8], i8, [4 x i8], i16, [7 x i8] }>
%union.int_interpfilters = type { i32 }
%struct.INTERINTER_COMPOUND_DATA = type { i8*, i8, i8, i8, i8 }
%struct.FILTER_INTRA_MODE_INFO = type { i8, i8 }
%struct.PALETTE_MODE_INFO = type { [24 x i16], [2 x i8] }
%struct.RD_STATS = type { i32, i64, i64, i64, i32, i32 }
%struct.COMP_RD_STATS = type { [4 x i32], [4 x i64], [4 x i32], [4 x i64], [4 x i32], [2 x %union.int_mv], [2 x i8], i8, %union.int_interpfilters, i32, [2 x i32], %struct.INTERINTER_COMPOUND_DATA }
%struct.intrabc_hash_info = type { [2 x [2 x i32*]], %struct._hash_table, %struct._crc_calculator, %struct._crc_calculator, i32 }
%struct._hash_table = type { %struct.Vector** }
%struct.Vector = type { i64, i64, i64, i8* }
%struct._crc_calculator = type { i32, i32, i32, [256 x i32], i32 }
%struct.FullMvLimits = type { i32, i32, i32, i32 }
%struct.TxfmSearchParams = type { i32, i32, i32, [2 x i32], i32, i8, i32, i32, i8, i32 }
%struct.TxfmSearchInfo = type { i32, [1024 x i8], [1024 x i8], %struct.TxbRdRecords*, i32 }
%struct.TxbRdRecords = type { %struct.MB_RD_RECORD, [256 x %struct.TXB_RD_RECORD], [64 x %struct.TXB_RD_RECORD], [16 x %struct.TXB_RD_RECORD], [4 x %struct.TXB_RD_RECORD], %struct.TXB_RD_RECORD }
%struct.MB_RD_RECORD = type { [8 x %struct.MB_RD_INFO], i32, i32, %struct._CRC32C }
%struct.MB_RD_INFO = type { i8, [16 x i8], [1024 x i8], [1024 x i8], %struct.RD_STATS, i32 }
%struct._CRC32C = type { [8 x [256 x i32]] }
%struct.TXB_RD_RECORD = type { [256 x i32], [256 x %struct.TXB_RD_INFO], i32, i32 }
%struct.TXB_RD_INFO = type { i64, i64, i32, i16, i8, i16, i8, i8, i8, i8 }
%struct.RD_COUNTS = type { [3 x i64], i32, i32, [19 x [16 x i32]], [22 x [2 x i32]], [2 x i32] }
%struct.PC_TREE_SHARED_BUFFERS = type { [3 x i32*], [3 x i32*], [3 x i32*] }
%struct.SIMPLE_MOTION_DATA_TREE = type { i8, i8, [4 x %struct.SIMPLE_MOTION_DATA_TREE*], [8 x %struct.fullpel_mv], [2 x i32], [8 x i32], i32, i32 }
%struct.fullpel_mv = type { i16, i16 }
%struct.inter_modes_info = type { i32, [4 x i8], [1024 x %struct.MB_MODE_INFO], [1024 x i32], [1024 x i64], [1024 x i64], [1024 x %struct.RdIdxPair], [1024 x %struct.RD_STATS], [1024 x %struct.RD_STATS], [1024 x %struct.RD_STATS] }
%struct.RdIdxPair = type { i32, i64 }
%struct.OBMCBuffer = type { i32*, i32*, i8*, i8* }
%struct.PALETTE_BUFFER = type { [4096 x i8], [8192 x i32] }
%struct.CompoundTypeRdBuffers = type { i8*, i8*, i16*, i16*, i8* }
%struct.frame_contexts = type { [5 x [13 x [3 x i16]]], [5 x [2 x [9 x [3 x i16]]]], [2 x [3 x [3 x i16]]], [2 x [2 x [6 x i16]]], [2 x [2 x [7 x i16]]], [2 x [2 x [8 x i16]]], [2 x [2 x [9 x i16]]], [2 x [2 x [10 x i16]]], [2 x [2 x [11 x i16]]], [2 x [2 x [12 x i16]]], [5 x [2 x [4 x [4 x i16]]]], [5 x [2 x [42 x [5 x i16]]]], [5 x [2 x [21 x [5 x i16]]]], [6 x [3 x i16]], [2 x [3 x i16]], [6 x [3 x i16]], [3 x [3 x i16]], [8 x [9 x i16]], [22 x [3 x i16]], [22 x [17 x i16]], [4 x [3 x i16]], [22 x [3 x i16]], [4 x [5 x i16]], [22 x [4 x i16]], [22 x [3 x i16]], [7 x [8 x i16]], [7 x [8 x i16]], [7 x [5 x [9 x i16]]], [7 x [5 x [9 x i16]]], [7 x [3 x [3 x i16]]], [2 x [3 x i16]], [5 x [3 x i16]], [3 x [6 x [3 x i16]]], [5 x [3 x i16]], [3 x [3 x [3 x i16]]], [3 x [3 x [3 x i16]]], [3 x [2 x [3 x i16]]], [21 x [3 x i16]], [6 x [3 x i16]], [6 x [3 x i16]], [3 x [3 x i16]], [3 x [3 x i16]], [4 x [3 x i16]], %struct.nmv_context, %struct.nmv_context, [3 x i16], %struct.segmentation_probs, [22 x [3 x i16]], [6 x i16], [4 x i16], [3 x i16], [3 x i16], [4 x [14 x i16]], [2 x [13 x [15 x i16]]], [20 x [11 x i16]], [16 x [4 x i16]], [5 x [5 x [14 x i16]]], [8 x [8 x i16]], [4 x [3 x [4 x i16]]], [5 x i16], [4 x [5 x i16]], [5 x i16], [3 x [4 x [13 x [17 x i16]]]], [4 x [4 x [17 x i16]]], [9 x i16], [6 x [17 x i16]], i32 }
%struct.nmv_context = type { [5 x i16], [2 x %struct.nmv_component] }
%struct.nmv_component = type { [12 x i16], [2 x [5 x i16]], [5 x i16], [3 x i16], [3 x i16], [3 x i16], [3 x i16], [10 x [3 x i16]] }
%struct.segmentation_probs = type { [9 x i16], [3 x [3 x i16]], [3 x [9 x i16]] }
%struct.VP64x64 = type { %struct.VPVariance, [4 x %struct.VP32x32] }
%struct.VPVariance = type { %struct.VPartVar, [2 x %struct.VPartVar], [2 x %struct.VPartVar] }
%struct.VPartVar = type { i32, i32, i32, i32 }
%struct.VP32x32 = type { %struct.VPVariance, [4 x %struct.VP16x16] }
%struct.VP16x16 = type { %struct.VPVariance, [4 x %struct.VP8x8] }
%struct.VP8x8 = type { %struct.VPVariance, [4 x %struct.VP4x4] }
%struct.VP4x4 = type { %struct.VPVariance, [4 x %struct.VPartVar] }
%struct.PICK_MODE_CONTEXT = type { %struct.MB_MODE_INFO, %struct.MB_MODE_INFO_EXT_FRAME, [2 x i8*], i8*, [3 x i32*], [3 x i32*], [3 x i32*], [3 x i16*], [3 x i8*], i8*, i32, i32, i32, i32, i32, %struct.RD_STATS, i32, i64, i64, i64, i8, %union.int_mv, i8, i8, i32 }
%struct.TemporalFilterData = type { %struct.FRAME_DIFF, %struct.MB_MODE_INFO*, i32*, i16*, i8* }
%struct.FRAME_DIFF = type { i64, i64 }
%struct.TplTxfmStats = type { [256 x double], i32 }
%struct.PixelLevelGradientInfo = type { i16, i8, i8 }
%struct.FRAME_COUNTS = type { [16 x [3 x i32]] }
%struct.MBMIExtFrameBufferInfo = type { %struct.MB_MODE_INFO_EXT_FRAME*, i32, i32 }
%struct.CB_COEFF_BUFFER = type { [3 x i32*], [3 x i16*], [3 x i8*] }
%struct.CoeffBufferPool = type { i32*, i16*, i8* }
%struct.AV1Common = type { %struct.CurrentFrame, %struct.aom_internal_error_info*, i32, i32, i32, i32, i32, i32, i8, [33 x i32], i32, %struct.RefCntBuffer*, %struct.RefCntBuffer*, [8 x i32], %struct.scale_factors, [8 x %struct.scale_factors], [8 x %struct.RefCntBuffer*], i32, i32, i32, %struct.FeatureFlags, %struct.CommonModeInfoParams, %struct.CommonQuantParams, %struct.segmentation, i8*, %struct.loop_filter_info_n, %struct.loopfilter, [3 x %struct.RestorationInfo], i32*, %struct.RestorationLineBuffers*, %struct.yv12_buffer_config, %struct.CdefInfo, %struct.aom_film_grain_t, %struct.DeltaQInfo, [8 x %struct.WarpedMotionParams], %struct.SequenceHeader*, %struct.frame_contexts*, %struct.frame_contexts*, %struct.CommonTileParams, %struct.BufferPool*, %struct.CommonContexts, i32, [8 x i32], %struct.TPL_MV_REF*, i32, [8 x i32], [8 x i8], i32, i32 }
%struct.CurrentFrame = type { i8, i8, i32, i32, i32, %struct.SkipModeInfo, i32, i32 }
%struct.SkipModeInfo = type { i32, i32, i32, i32 }
%struct.FeatureFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i8 }
%struct.CommonModeInfoParams = type { i32, i32, i32, i32, i32, %struct.MB_MODE_INFO*, i32, i32, i8, %struct.MB_MODE_INFO**, i32, i32, i8*, void (%struct.CommonModeInfoParams*)*, void (%struct.CommonModeInfoParams*)*, void (%struct.CommonModeInfoParams*, i32, i32)* }
%struct.CommonQuantParams = type { i32, i32, i32, i32, i32, i32, [8 x [2 x i16]], [8 x [2 x i16]], [8 x [2 x i16]], [16 x [3 x [19 x i8*]]], [16 x [3 x [19 x i8*]]], [8 x [19 x i8*]], [8 x [19 x i8*]], [8 x [19 x i8*]], i8, i32, i32, i32 }
%struct.segmentation = type { i8, i8, i8, i8, [8 x [8 x i16]], [8 x i32], i32, i8 }
%struct.loop_filter_info_n = type { [64 x %struct.loop_filter_thresh], [3 x [8 x [2 x [8 x [2 x i8]]]]] }
%struct.loop_filter_thresh = type { [16 x i8], [16 x i8], [16 x i8] }
%struct.loopfilter = type { [2 x i32], i32, i32, i32, i8, i8, [8 x i8], [2 x i8], i32 }
%struct.RestorationInfo = type { i32, i32, i32, i32, i32, %struct.RestorationUnitInfo*, %struct.RestorationStripeBoundaries, i32 }
%struct.RestorationUnitInfo = type { i32, [12 x i8], %struct.WienerInfo, %struct.SgrprojInfo, [4 x i8] }
%struct.RestorationStripeBoundaries = type { i8*, i8*, i32, i32 }
%struct.RestorationLineBuffers = type { [3 x [392 x i16]], [3 x [392 x i16]] }
%struct.CdefInfo = type { [3 x i16*], [3 x i16*], i16*, [3 x i64], [3 x i64], i64, i32, i32, [16 x i32], [16 x i32], i32, i32, i32 }
%struct.aom_film_grain_t = type { i32, i32, [14 x [2 x i32]], i32, [10 x [2 x i32]], i32, [10 x [2 x i32]], i32, i32, i32, [24 x i32], [25 x i32], [25 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16 }
%struct.DeltaQInfo = type { i32, i32, i32, i32, i32 }
%struct.CommonTileParams = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [65 x i32], [65 x i32], i32, i32 }
%struct.CommonContexts = type { i8**, [3 x i8**], i8**, i32, i32, i32 }
%struct.TPL_MV_REF = type { %union.int_mv, i8 }
%struct.TemporalFilterCtx = type { [35 x %struct.yv12_buffer_config*], i32, i32, i32, %struct.scale_factors, [3 x double], i32, i32, i32, i32, i32 }
%struct.ForceIntegerMVInfo = type { [32 x double], i32, i32 }
%struct.RefCntBuffer = type { i32, i32, [7 x i32], i32, [7 x i32], %struct.MV_REF*, i8*, %struct.segmentation, i32, i32, i32, i32, [8 x %struct.WarpedMotionParams], i32, i8, %struct.aom_film_grain_t, %struct.aom_codec_frame_buffer, %struct.yv12_buffer_config, i8, [4 x i32], [8 x i8], [2 x i8], %struct.frame_contexts }
%struct.MV_REF = type { %union.int_mv, i8 }
%struct.aom_codec_frame_buffer = type { i8*, i64, i8* }
%struct.RefreshFrameFlagsInfo = type { i8, i8, i8 }
%struct.ExternalFlags = type { i32, %struct.ExtRefreshFrameFlagsInfo, i8, i8, i8, i8, i8, i8 }
%struct.ExtRefreshFrameFlagsInfo = type { i8, i8, i8, i8, i8, i8 }
%struct.RD_OPT = type { [169 x i32], [8 x [22 x [169 x i32]]], i32, double }
%struct.CODING_CONTEXT = type { %struct.loopfilter, %struct.CdefInfo, %struct.yv12_buffer_config, %struct.RATE_CONTROL, %struct.MV_STATS }
%struct.GlobalMotionInfo = type { i8, [8 x %struct.yv12_buffer_config*], i8*, [2 x i32], [2 x [7 x %struct.FrameDistPair]], i32, i32, i32, [8192 x i32] }
%struct.FrameDistPair = type { i32, i8 }
%struct.WinnerModeParams = type { [3 x [2 x i32]], [3 x i8], [3 x i32], [3 x i32], [3 x i32], [3 x i32] }
%struct.TimeStamps = type { i64, i64, i64 }
%struct.RATE_CONTROL = type { i32, i32, i32, i32, i32, [4 x i32], i32, [4 x double], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, [4 x i32], double, double, i64, i64, i64, i64, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, [7 x i32], i32, i32, i32, i32, i32 }
%struct.SPEED_FEATURES = type { %struct.HIGH_LEVEL_SPEED_FEATURES, %struct.FIRST_PASS_SPEED_FEATURES, %struct.TPL_SPEED_FEATURES, %struct.GLOBAL_MOTION_SPEED_FEATURES, %struct.PARTITION_SPEED_FEATURES, %struct.MV_SPEED_FEATURES, %struct.INTER_MODE_SPEED_FEATURES, %struct.INTERP_FILTER_SPEED_FEATURES, %struct.INTRA_MODE_SPEED_FEATURES, %struct.TX_SPEED_FEATURES, %struct.RD_CALC_SPEED_FEATURES, %struct.WINNER_MODE_SPEED_FEATURES, %struct.LOOP_FILTER_SPEED_FEATURES, %struct.REAL_TIME_SPEED_FEATURES }
%struct.HIGH_LEVEL_SPEED_FEATURES = type { i32, i8, i32, i8, i32, i8, i32, i32 }
%struct.FIRST_PASS_SPEED_FEATURES = type { i32, i32 }
%struct.TPL_SPEED_FEATURES = type { i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32 }
%struct.GLOBAL_MOTION_SPEED_FEATURES = type { i8, i32, i32 }
%struct.PARTITION_SPEED_FEATURES = type { i8, i8, i32, i32, i32, i32, i32, i8, i8, i8, i8, i32, i64, i32, [5 x i32], i32, i32, i32, i32, i32, i32, i8, i32, i8, i32, i32, i32, i32, i32, i32, i32 }
%struct.MV_SPEED_FEATURES = type { i8, i32, i32, i8, i32, i8, i8, i8, i32, [4 x %struct.MESH_PATTERN], [4 x %struct.MESH_PATTERN], i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.MESH_PATTERN = type { i32, i32 }
%struct.INTER_MODE_SPEED_FEATURES = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.INTERP_FILTER_SPEED_FEATURES = type { i32, i32, i32, i32, i32, i32 }
%struct.INTRA_MODE_SPEED_FEATURES = type { [5 x i32], [5 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.TX_SPEED_FEATURES = type { i32, i32, i32, i32, i32, %struct.TX_TYPE_SEARCH, i32, i32, i32, i32, i32, i32, i32 }
%struct.TX_TYPE_SEARCH = type { i8, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.RD_CALC_SPEED_FEATURES = type { i32, i32, i32, i8, i32, i32 }
%struct.WINNER_MODE_SPEED_FEATURES = type { i32, i32, i32, i32, i8, i32, i32 }
%struct.LOOP_FILTER_SPEED_FEATURES = type { i8, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.REAL_TIME_SPEED_FEATURES = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, [16 x i32], i32 }
%struct.MotionVectorSearchParams = type { i32, i32, i32 (%struct.macroblockd*, %struct.AV1Common*, %struct.SUBPEL_MOTION_SEARCH_PARAMS*, i32, %struct.mv*, i32*, i32*, %union.int_mv*)*, [3 x [7 x %struct.search_site_config]] }
%struct.SUBPEL_MOTION_SEARCH_PARAMS = type { i32, i32*, i8, i32, %struct.SubpelMvLimits, %struct.MV_COST_PARAMS, %struct.SUBPEL_SEARCH_VAR_PARAMS }
%struct.SubpelMvLimits = type { i32, i32, i32, i32 }
%struct.MV_COST_PARAMS = type { %struct.mv*, %struct.fullpel_mv, i8, i32*, [2 x i32*], i32, i32 }
%struct.SUBPEL_SEARCH_VAR_PARAMS = type { %struct.aom_variance_vtable*, i8, %struct.MSBuffers, i32, i32 }
%struct.aom_variance_vtable = type { i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32, i8*)*, i32 (i8*, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, void (i8*, i32, i8**, i32, i32*)*, void (i8*, i32, i8**, i32, i32*)*, i32 (i8*, i32, i8*, i32, i8*, i8*, i32, i32)*, i32 (i8*, i32, i32, i32, i8*, i32, i8*, i8*, i32, i32, i32*)*, i32 (i8*, i32, i32*, i32*)*, i32 (i8*, i32, i32*, i32*, i32*)*, i32 (i8*, i32, i32, i32, i32*, i32*, i32*)*, i32 (i8*, i32, i8*, i32, i8*, %struct.dist_wtd_comp_params*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*, %struct.dist_wtd_comp_params*)* }
%struct.dist_wtd_comp_params = type { i32, i32, i32 }
%struct.MSBuffers = type { %struct.buf_2d*, %struct.buf_2d*, i8*, i8*, i32, i32, i32*, i32* }
%struct.mv = type { i16, i16 }
%struct.search_site_config = type { [22 x [17 x %struct.search_site]], i32, [22 x i32], [22 x i32], i32 }
%struct.search_site = type { %struct.fullpel_mv, i32 }
%struct.EncSegmentationInfo = type { i8*, i8 }
%struct.CYCLIC_REFRESH = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i64, i16, double, i32, [3 x i32], double, i32 }
%struct.ActiveMap = type { i32, i32, i8* }
%struct.RefBufferStack = type { [16 x i32], i32, [16 x i32], i32, [16 x i32], i32 }
%struct.FRAME_INFO = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.FRAME_INDEX_SET = type { i32 }
%struct.InitialDimensions = type { i32, i32 }
%struct.ResizePendingParams = type { i32, i32 }
%struct.TileDataEnc = type { %struct.TileInfo, [8 x i8], %struct.frame_contexts, %struct.frame_contexts*, i8, [22 x %struct.InterModeRdModel], %struct.AV1EncRowMultiThreadSync, %struct.mv }
%struct.InterModeRdModel = type { i32, double, double, double, double, double, double, double, i32, double, double, double, double, double }
%struct.AV1EncRowMultiThreadSync = type { %union.pthread_mutex_t*, %union.pthread_cond_t*, i32*, i32, i32, i32, i32 }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.13, %union.anon.15, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.13 = type { i64 }
%union.anon.15 = type { i64 }
%struct.TokenInfo = type { [64 x [64 x %struct.TokenExtra*]], [64 x [64 x %struct.TokenList*]] }
%struct.TokenExtra = type { i8 }
%struct.TokenList = type { %struct.TokenExtra*, i32 }
%struct.VarBasedPartitionInfo = type { [5 x i64], i64 }
%struct.FrameProbInfo = type { [7 x [22 x i32]], [7 x i32], [7 x [19 x [16 x i32]]], [7 x [16 x [3 x i32]]] }
%struct.MultiThreadInfo = type { i32, [10 x i32], i32, i32, %struct.AVxWorker*, %struct.EncWorkerData*, i8, %struct.AV1EncRowMultiThreadInfo, %struct.AV1TplRowMultiThreadInfo, %struct.AV1LfSyncData, %struct.AV1LrSyncData, %struct.AV1EncPackBSSync, %struct.AV1GlobalMotionSync, %struct.AV1TemporalFilterSync, %struct.AV1CdefSyncData, %struct.AV1CdefWorker* }
%struct.AVxWorker = type { %struct.AVxWorkerImpl*, i32, i8*, i32 (i8*, i8*)*, i8*, i8*, i32 }
%struct.AVxWorkerImpl = type opaque
%struct.EncWorkerData = type { %struct.AV1_COMP*, %struct.ThreadData*, i32, i32 }
%struct.AV1EncRowMultiThreadInfo = type { i32, i32, i32, i32, [64 x i32], %union.pthread_mutex_t*, void (%struct.AV1EncRowMultiThreadSync*, i32, i32)*, void (%struct.AV1EncRowMultiThreadSync*, i32, i32, i32)* }
%struct.AV1TplRowMultiThreadInfo = type { void (%struct.AV1TplRowMultiThreadSync*, i32, i32)*, void (%struct.AV1TplRowMultiThreadSync*, i32, i32, i32)* }
%struct.AV1TplRowMultiThreadSync = type { %union.pthread_mutex_t*, %union.pthread_cond_t*, i32*, i32, i32, i32 }
%struct.AV1LfSyncData = type { [3 x %union.pthread_mutex_t*], [3 x %union.pthread_cond_t*], [3 x i32*], i32, i32, %struct.LoopFilterWorkerData*, i32, %union.pthread_mutex_t*, %struct.AV1LfMTInfo*, i32, i32 }
%struct.LoopFilterWorkerData = type { %struct.yv12_buffer_config*, %struct.AV1Common*, [3 x %struct.macroblockd_plane], %struct.macroblockd* }
%struct.AV1LfMTInfo = type { i32, i32, i32 }
%struct.AV1LrSyncData = type { [3 x %union.pthread_mutex_t*], [3 x %union.pthread_cond_t*], [3 x i32*], i32, i32, i32, i32, %union.pthread_mutex_t*, %struct.LoopRestorationWorkerData*, %struct.AV1LrMTInfo*, i32, i32 }
%struct.LoopRestorationWorkerData = type { i32*, i8*, i8* }
%struct.AV1LrMTInfo = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.AV1EncPackBSSync = type { %union.pthread_mutex_t*, [512 x %struct.PackBSTileOrder], i32 }
%struct.PackBSTileOrder = type { i16, i32 }
%struct.AV1GlobalMotionSync = type { %struct.JobInfo, %struct.GlobalMotionThreadData*, %union.pthread_mutex_t*, i32, i32, i8 }
%struct.JobInfo = type { [64 x i8], [2 x i8], [2 x i8] }
%struct.GlobalMotionThreadData = type { [1 x %struct.MotionModel], i8* }
%struct.MotionModel = type { [8 x double], i32*, i32 }
%struct.AV1TemporalFilterSync = type { %union.pthread_mutex_t*, i32 }
%struct.AV1CdefSyncData = type { %union.pthread_mutex_t*, %struct.AV1CdefRowSync*, i32, i32, i32 }
%struct.AV1CdefRowSync = type { %union.pthread_mutex_t*, %union.pthread_cond_t*, i32 }
%struct.AV1CdefWorker = type { %struct.AV1Common*, %struct.macroblockd*, [3 x i16*], i16*, [3 x i16*], void (%struct.AV1Common*, %struct.macroblockd*, %struct.CdefBlockInfo*, i16**, i16*, %struct.AV1CdefSyncData*, i32)* }
%struct.CdefBlockInfo = type { i16*, [3 x i16*], [3 x i16*], i8*, [256 x %struct.cdef_list], i32, i32, i32, i32, [4 x i32], i32, i32, i32, i32, i32, i32, [16 x [16 x i32]], [16 x [16 x i32]], i32, i32, i32 }
%struct.cdef_list = type { i8, i8 }
%struct.AV1LrStruct = type { void (%struct.RestorationTileLimits*, %struct.AV1PixelRect*, i32, i8*, i32*, %struct.RestorationLineBuffers*)*, [3 x %struct.FilterFrameCtxt], %struct.yv12_buffer_config*, %struct.yv12_buffer_config* }
%struct.RestorationTileLimits = type { i32, i32, i32, i32 }
%struct.AV1PixelRect = type { i32, i32, i32, i32 }
%struct.FilterFrameCtxt = type { %struct.RestorationInfo*, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, %struct.AV1PixelRect }
%struct.aom_film_grain_table_t = type { %struct.aom_film_grain_table_entry_t*, %struct.aom_film_grain_table_entry_t* }
%struct.aom_film_grain_table_entry_t = type { %struct.aom_film_grain_t, i64, i64, %struct.aom_film_grain_table_entry_t* }
%struct.aom_denoise_and_model_t = type opaque
%struct.InterpSearchFlags = type { i32, i16 }
%struct.RefFrameDistanceInfo = type { [7 x i32], i8, i8 }
%struct.SVC = type { i32, i32, i32, i32, i32, i32, i32, i32, [7 x i32], [7 x i32], [8 x i32], double, i32, [8 x i32], [8 x i8], i32, i32, [8 x i32], [8 x i32], i32, i32, [32 x %struct.LAYER_CONTEXT], [4 x i8], [4 x i32], i32 }
%struct.LAYER_CONTEXT = type { %struct.RATE_CONTROL, %struct.PRIMARY_RATE_CONTROL, i32, i64, i32, i32, i64, i64, double, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i8, i8, i32, i32 }
%struct.MV_STATS = type { i32, i32, i32, i32, i32, i32, [4 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.FirstPassData = type { %struct.FRAME_STATS*, i32* }
%struct.FRAME_STATS = type { i64, i64, i64, i64, i64, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, double, double }
%struct.noise_estimate = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.av1_denoiser = type { %struct.yv12_buffer_config*, %struct.yv12_buffer_config*, %struct.yv12_buffer_config, i32, i32, i32, i32, i32, i32, i32 }
%struct.lookahead_ctx = type { i32, i32, [2 x %struct.read_ctx], %struct.lookahead_entry*, i32, i8 }
%struct.read_ctx = type { i32, i32, i32, i32 }
%struct.lookahead_entry = type { %struct.yv12_buffer_config, i64, i64, i32, i64 }
%struct.aom_codec_pkt_list = type { i32, i32, [1 x %struct.aom_codec_cx_pkt] }
%struct.GF_GROUP = type { [250 x i8], [250 x i8], [250 x i8], [250 x i32], [250 x i32], i32, i32, [250 x i8], [250 x i32], [250 x i8], [250 x i8], i32, i32 }
%struct.GF_STATE = type { i32 }
%struct.AV1LevelParams = type { [32 x i8], i32, [32 x %struct.AV1LevelInfo*] }
%struct.AV1LevelInfo = type { %struct.AV1LevelStats, %struct.AV1LevelSpec, %struct.FrameWindowBuffer, [24 x %struct.DECODER_MODEL] }
%struct.AV1LevelStats = type { i32, i32, i32, i32, i32, i32, i32, i32, double, double, double }
%struct.AV1LevelSpec = type { i8, i32, i32, i32, i32, i32, i32, i32, i64, i64, double, double, double, double }
%struct.FrameWindowBuffer = type { [256 x %struct.FrameRecord], i32, i32 }
%struct.FrameRecord = type { i64, i64, i64, i32, i32, i32, i32, i32 }
%struct.DECODER_MODEL = type { i8, i8, i8, i8, i32, i32, i32, i32, i64, double, double, double, double, i32, i32, i32, [8 x i32], [10 x %struct.FRAME_BUFFER], %struct.DFG_INTERVAL_QUEUE, double, double, i64, double, double, i32, i32, double, double }
%struct.FRAME_BUFFER = type { i32, i32, i32, i8, double }
%struct.DFG_INTERVAL_QUEUE = type { i32, i32, double, [64 x %struct.DFG_INTERVAL] }
%struct.DFG_INTERVAL = type { double, double, double }
%struct.TWO_PASS = type { i32, [36 x %struct.FIRSTPASS_STATS*], i32, %struct.FIRSTPASS_STATS*, %struct.STATS_BUFFER_CTX*, i32, i64, double, double, double, double, double, i8, i64, i64, double, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.PRIMARY_RATE_CONTROL = type { i64, i32, i32, [15 x i32], i32, i32, [150 x %struct.regions], i32, i32, i32, i32, i32, i32, i64, i64, i64, i32, float, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.regions = type { i32, i32, double, double, double, double, double, i32 }
%struct.yv12_buffer_config = type { %union.anon.1, %union.anon.3, %union.anon.5, %union.anon.7, %union.anon.9, %union.anon.11, i32, [3 x i8*], i8*, i32, i8*, i64, i32, i64, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, %struct.aom_metadata_array* }
%union.anon.1 = type { %struct.anon.2 }
%struct.anon.2 = type { i32, i32 }
%union.anon.3 = type { %struct.anon.4 }
%struct.anon.4 = type { i32, i32 }
%union.anon.5 = type { %struct.anon.6 }
%struct.anon.6 = type { i32, i32 }
%union.anon.7 = type { %struct.anon.8 }
%struct.anon.8 = type { i32, i32 }
%union.anon.9 = type { %struct.anon.10 }
%struct.anon.10 = type { i32, i32 }
%union.anon.11 = type { %struct.anon.12 }
%struct.anon.12 = type { i8*, i8*, i8* }
%struct.aom_metadata_array = type { i64, %struct.aom_metadata** }
%struct.aom_metadata = type { i32, i8*, i64, i32 }
%struct.SequenceHeader = type { i32, i32, i32, i32, i8, i32, i32, i8, i32, i32, %struct.OrderHintInfo, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, i32, [32 x i32], i32, %struct.aom_timing, i8, %struct.aom_dec_model_info, i8, [32 x i8], [32 x i8], [33 x %struct.aom_dec_model_op_parameters] }
%struct.OrderHintInfo = type { i32, i32, i32, i32 }
%struct.aom_dec_model_info = type { i32, i32, i32, i32 }
%struct.aom_dec_model_op_parameters = type { i32, i64, i64, i32, i32, i32, i32, i32 }
%struct.aom_internal_error_info = type { i32, i32, [200 x i8], i32, [1 x %struct.__jmp_buf_tag] }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%struct.TplParams = type { i8, i8, [79 x %struct.TplDepFrame], [35 x %struct.TplDepStats*], [35 x %struct.yv12_buffer_config], %struct.TplDepFrame*, %struct.scale_factors, i32, [7 x %struct.yv12_buffer_config*], [7 x %struct.yv12_buffer_config*], %struct.AV1TplRowMultiThreadSync, i32 }
%struct.TplDepFrame = type { i8, %struct.TplDepStats*, %struct.yv12_buffer_config*, %struct.yv12_buffer_config*, [8 x i32], i32, i32, i32, i32, i32, i32, i32, [256 x double], [256 x double], i32, i32 }
%struct.TplDepStats = type { i64, i64, i64, i64, [2 x i64], i64, i64, [2 x i64], i64, i64, [7 x %union.int_mv], [2 x i32], [7 x i64] }
%struct.aom_image = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i8*], [3 x i32], i64, i32, i32, i32, i8*, i8*, i32, i32, %struct.aom_metadata_array*, i8* }
%union.anon.17 = type { %struct.anon.18 }
%struct.anon.18 = type { %struct.aom_codec_pkt_list, [256 x %struct.aom_codec_cx_pkt] }
%struct.BufferPool = type { %union.pthread_mutex_t, i8*, i32 (i8*, i64, %struct.aom_codec_frame_buffer*)*, i32 (i8*, %struct.aom_codec_frame_buffer*)*, [16 x %struct.RefCntBuffer], %struct.InternalFrameBufferList }
%struct.InternalFrameBufferList = type { i32, %struct.InternalFrameBuffer* }
%struct.InternalFrameBuffer = type { i8*, i64, i32 }
%struct.FIRSTPASS_STATS = type { double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, i64, double, double }
%struct.STATS_BUFFER_CTX = type { %struct.FIRSTPASS_STATS*, %struct.FIRSTPASS_STATS*, %struct.FIRSTPASS_STATS*, %struct.FIRSTPASS_STATS*, %struct.FIRSTPASS_STATS* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.aom_codec_ctx = type { i8*, %struct.aom_codec_iface*, i32, i8*, i64, %union.anon.19, %struct.aom_codec_priv* }
%struct.aom_codec_iface = type { i8*, i32, i64, {}*, i32 (%struct.aom_codec_alg_priv*)*, %struct.aom_codec_ctrl_fn_map*, %struct.aom_codec_dec_iface, %struct.aom_codec_enc_iface, i32 (%struct.aom_codec_alg_priv*, i8*, i8*)* }
%union.anon.19 = type { %struct.aom_codec_dec_cfg* }
%struct.aom_codec_dec_cfg = type { i32, i32, i32, i32 }
%struct.aom_codec_dec_iface = type { i32 (i8*, i64, %struct.aom_codec_stream_info*)*, i32 (%struct.aom_codec_alg_priv*, %struct.aom_codec_stream_info*)*, i32 (%struct.aom_codec_alg_priv*, i8*, i64, i8*)*, %struct.aom_image* (%struct.aom_codec_alg_priv*, i8**)*, i32 (%struct.aom_codec_alg_priv*, i32 (i8*, i64, %struct.aom_codec_frame_buffer*)*, i32 (i8*, %struct.aom_codec_frame_buffer*)*, i8*)* }
%struct.aom_codec_stream_info = type { i32, i32, i32, i32, i32, i32 }
%struct.aom_codec_enc_iface = type { i32, %struct.aom_codec_enc_cfg*, i32 (%struct.aom_codec_alg_priv*, %struct.aom_image*, i64, i64, i64)*, %struct.aom_codec_cx_pkt* (%struct.aom_codec_alg_priv*, i8**)*, i32 (%struct.aom_codec_alg_priv*, %struct.aom_codec_enc_cfg*)*, %struct.aom_fixed_buf* (%struct.aom_codec_alg_priv*)*, %struct.aom_image* (%struct.aom_codec_alg_priv*)* }
%struct.av1_codec_arg_definitions = type { %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def }
%struct.arg_def = type { i8*, i8*, i32, i8*, %struct.arg_enum_list* }
%struct.arg_enum_list = type { i8*, i32 }
%union.pthread_mutexattr_t = type { i32 }
%struct.anon.0 = type { i8*, i64, i64, i64, i32, i32, i64 }
%struct.arg = type { i8**, i8*, i8*, i32, %struct.arg_def* }
%struct.av1_ref_frame = type { i32, i32, %struct.aom_image }
%struct.aom_active_map = type { i8*, i32, i32 }
%struct.aom_scaling_mode = type { i32, i32 }
%struct.aom_svc_layer_id = type { i32, i32 }
%struct.aom_svc_params = type { i32, i32, [32 x i32], [32 x i32], [4 x i32], [4 x i32], [32 x i32], [8 x i32] }
%struct.aom_svc_ref_frame_config = type { [7 x i32], [7 x i32], [8 x i32] }

@.str = private unnamed_addr constant [49 x i8] c"AOMedia Project AV1 Encoder 3.0.0-375-g4d1ace0ad\00", align 1
@encoder_ctrl_maps = internal constant [136 x %struct.aom_codec_ctrl_fn_map] [%struct.aom_codec_ctrl_fn_map { i32 232, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_copy_reference }, %struct.aom_codec_ctrl_fn_map { i32 7, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_use_reference }, %struct.aom_codec_ctrl_fn_map { i32 231, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_reference }, %struct.aom_codec_ctrl_fn_map { i32 8, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_roi_map }, %struct.aom_codec_ctrl_fn_map { i32 9, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_active_map }, %struct.aom_codec_ctrl_fn_map { i32 11, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_scale_mode }, %struct.aom_codec_ctrl_fn_map { i32 12, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_spatial_layer_id }, %struct.aom_codec_ctrl_fn_map { i32 13, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_cpuused }, %struct.aom_codec_ctrl_fn_map { i32 14, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_enable_auto_alt_ref }, %struct.aom_codec_ctrl_fn_map { i32 57, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_enable_auto_bwd_ref }, %struct.aom_codec_ctrl_fn_map { i32 16, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_sharpness }, %struct.aom_codec_ctrl_fn_map { i32 17, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_static_thresh }, %struct.aom_codec_ctrl_fn_map { i32 32, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_row_mt }, %struct.aom_codec_ctrl_fn_map { i32 33, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_tile_columns }, %struct.aom_codec_ctrl_fn_map { i32 34, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_tile_rows }, %struct.aom_codec_ctrl_fn_map { i32 35, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_enable_tpl_model }, %struct.aom_codec_ctrl_fn_map { i32 36, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_enable_keyframe_filtering }, %struct.aom_codec_ctrl_fn_map { i32 21, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_arnr_max_frames }, %struct.aom_codec_ctrl_fn_map { i32 22, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_arnr_strength }, %struct.aom_codec_ctrl_fn_map { i32 24, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_tuning }, %struct.aom_codec_ctrl_fn_map { i32 25, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_cq_level }, %struct.aom_codec_ctrl_fn_map { i32 26, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_rc_max_intra_bitrate_pct }, %struct.aom_codec_ctrl_fn_map { i32 27, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_number_spatial_layers }, %struct.aom_codec_ctrl_fn_map { i32 28, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_rc_max_inter_bitrate_pct }, %struct.aom_codec_ctrl_fn_map { i32 29, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_rc_gf_cbr_boost_pct }, %struct.aom_codec_ctrl_fn_map { i32 31, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_lossless }, %struct.aom_codec_ctrl_fn_map { i32 58, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_enable_cdef }, %struct.aom_codec_ctrl_fn_map { i32 59, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_enable_restoration }, %struct.aom_codec_ctrl_fn_map { i32 60, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_force_video_mode }, %struct.aom_codec_ctrl_fn_map { i32 61, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_enable_obmc }, %struct.aom_codec_ctrl_fn_map { i32 62, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_disable_trellis_quant }, %struct.aom_codec_ctrl_fn_map { i32 63, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_enable_qm }, %struct.aom_codec_ctrl_fn_map { i32 66, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_qm_y }, %struct.aom_codec_ctrl_fn_map { i32 67, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_qm_u }, %struct.aom_codec_ctrl_fn_map { i32 68, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_qm_v }, %struct.aom_codec_ctrl_fn_map { i32 64, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_qm_min }, %struct.aom_codec_ctrl_fn_map { i32 65, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_qm_max }, %struct.aom_codec_ctrl_fn_map { i32 70, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_num_tg }, %struct.aom_codec_ctrl_fn_map { i32 71, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_mtu }, %struct.aom_codec_ctrl_fn_map { i32 111, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_timing_info_type }, %struct.aom_codec_ctrl_fn_map { i32 37, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_frame_parallel_decoding_mode }, %struct.aom_codec_ctrl_fn_map { i32 38, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_error_resilient_mode }, %struct.aom_codec_ctrl_fn_map { i32 39, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_s_frame_mode }, %struct.aom_codec_ctrl_fn_map { i32 73, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_enable_rect_partitions }, %struct.aom_codec_ctrl_fn_map { i32 74, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_enable_ab_partitions }, %struct.aom_codec_ctrl_fn_map { i32 75, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_enable_1to4_partitions }, %struct.aom_codec_ctrl_fn_map { i32 76, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_min_partition_size }, %struct.aom_codec_ctrl_fn_map { i32 77, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_max_partition_size }, %struct.aom_codec_ctrl_fn_map { i32 86, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_enable_dual_filter }, %struct.aom_codec_ctrl_fn_map { i32 87, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_enable_chroma_deltaq }, %struct.aom_codec_ctrl_fn_map { i32 78, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_enable_intra_edge_filter }, %struct.aom_codec_ctrl_fn_map { i32 79, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_enable_order_hint }, %struct.aom_codec_ctrl_fn_map { i32 80, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_enable_tx64 }, %struct.aom_codec_ctrl_fn_map { i32 81, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_enable_flip_idtx }, %struct.aom_codec_ctrl_fn_map { i32 82, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_enable_rect_tx }, %struct.aom_codec_ctrl_fn_map { i32 83, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_enable_dist_wtd_comp }, %struct.aom_codec_ctrl_fn_map { i32 124, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_max_reference_frames }, %struct.aom_codec_ctrl_fn_map { i32 125, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_enable_reduced_reference_set }, %struct.aom_codec_ctrl_fn_map { i32 84, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_enable_ref_frame_mvs }, %struct.aom_codec_ctrl_fn_map { i32 85, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_allow_ref_frame_mvs }, %struct.aom_codec_ctrl_fn_map { i32 88, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_enable_masked_comp }, %struct.aom_codec_ctrl_fn_map { i32 89, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_enable_onesided_comp }, %struct.aom_codec_ctrl_fn_map { i32 90, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_enable_interintra_comp }, %struct.aom_codec_ctrl_fn_map { i32 91, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_enable_smooth_interintra }, %struct.aom_codec_ctrl_fn_map { i32 92, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_enable_diff_wtd_comp }, %struct.aom_codec_ctrl_fn_map { i32 93, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_enable_interinter_wedge }, %struct.aom_codec_ctrl_fn_map { i32 94, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_enable_interintra_wedge }, %struct.aom_codec_ctrl_fn_map { i32 95, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_enable_global_motion }, %struct.aom_codec_ctrl_fn_map { i32 96, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_enable_warped_motion }, %struct.aom_codec_ctrl_fn_map { i32 97, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_allow_warped_motion }, %struct.aom_codec_ctrl_fn_map { i32 98, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_enable_filter_intra }, %struct.aom_codec_ctrl_fn_map { i32 99, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_enable_smooth_intra }, %struct.aom_codec_ctrl_fn_map { i32 100, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_enable_paeth_intra }, %struct.aom_codec_ctrl_fn_map { i32 101, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_enable_cfl_intra }, %struct.aom_codec_ctrl_fn_map { i32 141, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_enable_diagonal_intra }, %struct.aom_codec_ctrl_fn_map { i32 102, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_enable_superres }, %struct.aom_codec_ctrl_fn_map { i32 103, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_enable_overlay }, %struct.aom_codec_ctrl_fn_map { i32 104, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_enable_palette }, %struct.aom_codec_ctrl_fn_map { i32 105, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_enable_intrabc }, %struct.aom_codec_ctrl_fn_map { i32 106, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_enable_angle_delta }, %struct.aom_codec_ctrl_fn_map { i32 40, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_aq_mode }, %struct.aom_codec_ctrl_fn_map { i32 118, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_reduced_tx_type_set }, %struct.aom_codec_ctrl_fn_map { i32 119, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_intra_dct_only }, %struct.aom_codec_ctrl_fn_map { i32 120, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_inter_dct_only }, %struct.aom_codec_ctrl_fn_map { i32 121, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_intra_default_tx_only }, %struct.aom_codec_ctrl_fn_map { i32 122, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_quant_b_adapt }, %struct.aom_codec_ctrl_fn_map { i32 126, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_coeff_cost_upd_freq }, %struct.aom_codec_ctrl_fn_map { i32 127, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_mode_cost_upd_freq }, %struct.aom_codec_ctrl_fn_map { i32 128, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_mv_cost_upd_freq }, %struct.aom_codec_ctrl_fn_map { i32 107, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_deltaq_mode }, %struct.aom_codec_ctrl_fn_map { i32 108, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_deltalf_mode }, %struct.aom_codec_ctrl_fn_map { i32 41, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_frame_periodic_boost }, %struct.aom_codec_ctrl_fn_map { i32 43, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_tune_content }, %struct.aom_codec_ctrl_fn_map { i32 44, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_cdf_update_mode }, %struct.aom_codec_ctrl_fn_map { i32 45, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_color_primaries }, %struct.aom_codec_ctrl_fn_map { i32 46, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_transfer_characteristics }, %struct.aom_codec_ctrl_fn_map { i32 47, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_matrix_coefficients }, %struct.aom_codec_ctrl_fn_map { i32 48, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_chroma_sample_position }, %struct.aom_codec_ctrl_fn_map { i32 52, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_color_range }, %struct.aom_codec_ctrl_fn_map { i32 42, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_noise_sensitivity }, %struct.aom_codec_ctrl_fn_map { i32 49, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_min_gf_interval }, %struct.aom_codec_ctrl_fn_map { i32 50, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_max_gf_interval }, %struct.aom_codec_ctrl_fn_map { i32 137, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_gf_min_pyr_height }, %struct.aom_codec_ctrl_fn_map { i32 123, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_gf_max_pyr_height }, %struct.aom_codec_ctrl_fn_map { i32 53, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_render_size }, %struct.aom_codec_ctrl_fn_map { i32 56, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_superblock_size }, %struct.aom_codec_ctrl_fn_map { i32 109, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_single_tile_decoding }, %struct.aom_codec_ctrl_fn_map { i32 134, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_vmaf_model_path }, %struct.aom_codec_ctrl_fn_map { i32 143, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_partition_info_path }, %struct.aom_codec_ctrl_fn_map { i32 112, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_film_grain_test_vector }, %struct.aom_codec_ctrl_fn_map { i32 113, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_film_grain_table }, %struct.aom_codec_ctrl_fn_map { i32 114, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_denoise_noise_level }, %struct.aom_codec_ctrl_fn_map { i32 115, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_denoise_block_size }, %struct.aom_codec_ctrl_fn_map { i32 140, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_enable_dnl_denoising }, %struct.aom_codec_ctrl_fn_map { i32 110, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_enable_motion_vector_unit_test }, %struct.aom_codec_ctrl_fn_map { i32 135, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_enable_ext_tile_debug }, %struct.aom_codec_ctrl_fn_map { i32 54, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_target_seq_level_idx }, %struct.aom_codec_ctrl_fn_map { i32 129, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_tier_mask }, %struct.aom_codec_ctrl_fn_map { i32 130, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_min_cr }, %struct.aom_codec_ctrl_fn_map { i32 131, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_layer_id }, %struct.aom_codec_ctrl_fn_map { i32 132, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_svc_params }, %struct.aom_codec_ctrl_fn_map { i32 133, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_svc_ref_frame_config }, %struct.aom_codec_ctrl_fn_map { i32 138, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_vbr_corpus_complexity_lap }, %struct.aom_codec_ctrl_fn_map { i32 136, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_enable_sb_multipass_unit_test }, %struct.aom_codec_ctrl_fn_map { i32 142, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_dv_cost_upd_freq }, %struct.aom_codec_ctrl_fn_map { i32 19, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_get_quantizer }, %struct.aom_codec_ctrl_fn_map { i32 20, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_get_quantizer64 }, %struct.aom_codec_ctrl_fn_map { i32 230, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_get_reference }, %struct.aom_codec_ctrl_fn_map { i32 51, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_get_active_map }, %struct.aom_codec_ctrl_fn_map { i32 233, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_get_new_frame_image }, %struct.aom_codec_ctrl_fn_map { i32 234, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_copy_new_frame_image }, %struct.aom_codec_ctrl_fn_map { i32 116, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_chroma_subsampling_x }, %struct.aom_codec_ctrl_fn_map { i32 117, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_chroma_subsampling_y }, %struct.aom_codec_ctrl_fn_map { i32 55, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_get_seq_level_idx }, %struct.aom_codec_ctrl_fn_map { i32 139, i32 (%struct.aom_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_get_baseline_gf_interval }, %struct.aom_codec_ctrl_fn_map zeroinitializer], align 16
@encoder_usage_cfg = internal constant [1 x %struct.aom_codec_enc_cfg] [%struct.aom_codec_enc_cfg { i32 1, i32 0, i32 0, i32 320, i32 240, i32 0, i32 0, i32 0, i32 8, i32 8, %struct.aom_rational { i32 1, i32 30 }, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, i32 8, i32 0, i32 8, i32 8, i32 63, i32 32, i32 1, %struct.aom_fixed_buf zeroinitializer, %struct.aom_fixed_buf zeroinitializer, i32 256, i32 0, i32 63, i32 25, i32 25, i32 6000, i32 4000, i32 5000, i32 50, i32 0, i32 2000, i32 0, i32 1, i32 0, i32 9999, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, [64 x i32] zeroinitializer, [64 x i32] zeroinitializer, i32 0, [5 x i32] [i32 -1, i32 -1, i32 -1, i32 -1, i32 -1], %struct.cfg_options { i32 0, i32 128, i32 128, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0 } }], align 16
@aom_codec_av1_cx_algo = hidden constant { i8*, i32, i64, i32 (%struct.aom_codec_ctx*)*, i32 (%struct.aom_codec_alg_priv*)*, %struct.aom_codec_ctrl_fn_map*, %struct.aom_codec_dec_iface, %struct.aom_codec_enc_iface, i32 (%struct.aom_codec_alg_priv*, i8*, i8*)* } { i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 7, i64 327682, i32 (%struct.aom_codec_ctx*)* @encoder_init, i32 (%struct.aom_codec_alg_priv*)* @encoder_destroy, %struct.aom_codec_ctrl_fn_map* getelementptr inbounds ([136 x %struct.aom_codec_ctrl_fn_map], [136 x %struct.aom_codec_ctrl_fn_map]* @encoder_ctrl_maps, i32 0, i32 0), %struct.aom_codec_dec_iface zeroinitializer, %struct.aom_codec_enc_iface { i32 1, %struct.aom_codec_enc_cfg* getelementptr inbounds ([1 x %struct.aom_codec_enc_cfg], [1 x %struct.aom_codec_enc_cfg]* @encoder_usage_cfg, i32 0, i32 0), i32 (%struct.aom_codec_alg_priv*, %struct.aom_image*, i64, i64, i64)* @encoder_encode, %struct.aom_codec_cx_pkt* (%struct.aom_codec_alg_priv*, i8**)* @encoder_get_cxdata, i32 (%struct.aom_codec_alg_priv*, %struct.aom_codec_enc_cfg*)* @encoder_set_config, %struct.aom_fixed_buf* (%struct.aom_codec_alg_priv*)* @encoder_get_global_headers, %struct.aom_image* (%struct.aom_codec_alg_priv*)* @encoder_get_preview }, i32 (%struct.aom_codec_alg_priv*, i8*, i8*)* @encoder_set_option }, align 8
@default_extra_cfg = internal unnamed_addr constant %struct.av1_extracfg { i32 7, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 7, i32 5, i32 0, i32 0, i32 0, i32 5, i32 0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0), i32 10, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 0, i32 10, i32 11, i32 12, i32 5, i32 9, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i8 0, i8 0, i32 0, i32 0, i32 8, i32 0, i32 2, i32 2, i32 2, i32 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0, i32 0, i8* null, i32 0, i32 1, i32 1, i32 1, i32 1, i32 4, i32 128, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 7, i32 0, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, float 0.000000e+00, i32 32, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, [32 x i8] c"\1F\1F\1F\1F\1F\1F\1F\1F\1F\1F\1F\1F\1F\1F\1F\1F\1F\1F\1F\1F\1F\1F\1F\1F\1F\1F\1F\1F\1F\1F\1F\1F", i32 0, i32 0, i32 3, i32 3, i32 3, i32 3, i32 0, i32 0 }, align 8
@.str.1 = private unnamed_addr constant [40 x i8] c"/usr/local/share/model/vmaf_v0.6.1.json\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c".\00", align 1
@aom_once.lock = internal global i32 0, align 4
@.str.3 = private unnamed_addr constant [28 x i8] c"g_w out of range [1..65535]\00", align 1
@.str.4 = private unnamed_addr constant [28 x i8] c"g_h out of range [1..65535]\00", align 1
@.str.5 = private unnamed_addr constant [44 x i8] c"g_timebase.den out of range [1..1000000000]\00", align 1
@.str.6 = private unnamed_addr constant [53 x i8] c"g_timebase.num out of range [1..cfg->g_timebase.den]\00", align 1
@.str.7 = private unnamed_addr constant [44 x i8] c"g_profile out of range [..MAX_PROFILES - 1]\00", align 1
@.str.8 = private unnamed_addr constant [37 x i8] c"rc_max_quantizer out of range [..63]\00", align 1
@.str.9 = private unnamed_addr constant [56 x i8] c"rc_min_quantizer out of range [..cfg->rc_max_quantizer]\00", align 1
@.str.10 = private unnamed_addr constant [26 x i8] c"lossless expected boolean\00", align 1
@.str.11 = private unnamed_addr constant [43 x i8] c"aq_mode out of range [..AQ_MODE_COUNT - 1]\00", align 1
@.str.12 = private unnamed_addr constant [52 x i8] c"deltaq_mode out of range [..DELTA_Q_MODE_COUNT - 1]\00", align 1
@.str.13 = private unnamed_addr constant [32 x i8] c"deltalf_mode out of range [..1]\00", align 1
@.str.14 = private unnamed_addr constant [40 x i8] c"frame_periodic_boost out of range [..1]\00", align 1
@.str.15 = private unnamed_addr constant [62 x i8] c"g_usage out of range [AOM_USAGE_REALTIME..AOM_USAGE_REALTIME]\00", align 1
@.str.16 = private unnamed_addr constant [43 x i8] c"g_threads out of range [..MAX_NUM_THREADS]\00", align 1
@.str.17 = private unnamed_addr constant [43 x i8] c"rc_end_usage out of range [AOM_VBR..AOM_Q]\00", align 1
@.str.18 = private unnamed_addr constant [39 x i8] c"rc_undershoot_pct out of range [..100]\00", align 1
@.str.19 = private unnamed_addr constant [38 x i8] c"rc_overshoot_pct out of range [..100]\00", align 1
@.str.20 = private unnamed_addr constant [43 x i8] c"rc_2pass_vbr_bias_pct out of range [..100]\00", align 1
@.str.21 = private unnamed_addr constant [52 x i8] c"kf_mode out of range [AOM_KF_DISABLED..AOM_KF_AUTO]\00", align 1
@.str.22 = private unnamed_addr constant [41 x i8] c"rc_dropframe_thresh out of range [..100]\00", align 1
@.str.23 = private unnamed_addr constant [56 x i8] c"g_pass out of range [AOM_RC_ONE_PASS..AOM_RC_LAST_PASS]\00", align 1
@.str.24 = private unnamed_addr constant [51 x i8] c"g_lag_in_frames out of range [..MAX_TOTAL_BUFFERS]\00", align 1
@.str.25 = private unnamed_addr constant [49 x i8] c"g_lag_in_frames out of range [..MAX_LAG_BUFFERS]\00", align 1
@.str.28 = private unnamed_addr constant [53 x i8] c"min_gf_interval out of range [..MAX_LAG_BUFFERS - 1]\00", align 1
@.str.29 = private unnamed_addr constant [53 x i8] c"max_gf_interval out of range [..MAX_LAG_BUFFERS - 1]\00", align 1
@.str.30 = private unnamed_addr constant [92 x i8] c"max_gf_interval out of range [AOMMAX(2, extra_cfg->min_gf_interval)..(MAX_LAG_BUFFERS - 1)]\00", align 1
@.str.31 = private unnamed_addr constant [37 x i8] c"gf_min_pyr_height out of range [..5]\00", align 1
@.str.32 = private unnamed_addr constant [37 x i8] c"gf_max_pyr_height out of range [..5]\00", align 1
@.str.33 = private unnamed_addr constant [70 x i8] c"gf_min_pyr_height must be less than or equal to gf_max_pyramid_height\00", align 1
@.str.34 = private unnamed_addr constant [49 x i8] c"rc_resize_mode out of range [..RESIZE_MODES - 1]\00", align 1
@.str.35 = private unnamed_addr constant [75 x i8] c"rc_resize_denominator out of range [SCALE_NUMERATOR..SCALE_NUMERATOR << 1]\00", align 1
@.str.36 = private unnamed_addr constant [78 x i8] c"rc_resize_kf_denominator out of range [SCALE_NUMERATOR..SCALE_NUMERATOR << 1]\00", align 1
@.str.37 = private unnamed_addr constant [52 x i8] c"rc_superres_mode out of range [..AOM_SUPERRES_AUTO]\00", align 1
@.str.38 = private unnamed_addr constant [77 x i8] c"rc_superres_denominator out of range [SCALE_NUMERATOR..SCALE_NUMERATOR << 1]\00", align 1
@.str.39 = private unnamed_addr constant [80 x i8] c"rc_superres_kf_denominator out of range [SCALE_NUMERATOR..SCALE_NUMERATOR << 1]\00", align 1
@.str.40 = private unnamed_addr constant [41 x i8] c"rc_superres_qthresh out of range [1..63]\00", align 1
@.str.41 = private unnamed_addr constant [44 x i8] c"rc_superres_kf_qthresh out of range [1..63]\00", align 1
@.str.42 = private unnamed_addr constant [35 x i8] c"cdf_update_mode out of range [..2]\00", align 1
@.str.43 = private unnamed_addr constant [43 x i8] c"motion_vector_unit_test out of range [..2]\00", align 1
@.str.44 = private unnamed_addr constant [42 x i8] c"sb_multipass_unit_test out of range [..1]\00", align 1
@.str.45 = private unnamed_addr constant [34 x i8] c"ext_tile_debug out of range [..1]\00", align 1
@.str.46 = private unnamed_addr constant [39 x i8] c"enable_auto_alt_ref out of range [..1]\00", align 1
@.str.47 = private unnamed_addr constant [39 x i8] c"enable_auto_bwd_ref out of range [..2]\00", align 1
@.str.48 = private unnamed_addr constant [29 x i8] c"cpu_used out of range [0..9]\00", align 1
@.str.49 = private unnamed_addr constant [37 x i8] c"noise_sensitivity out of range [..6]\00", align 1
@.str.50 = private unnamed_addr constant [86 x i8] c"superblock_size out of range [AOM_SUPERBLOCK_SIZE_64X64..AOM_SUPERBLOCK_SIZE_DYNAMIC]\00", align 1
@.str.51 = private unnamed_addr constant [36 x i8] c"large_scale_tile out of range [..1]\00", align 1
@.str.52 = private unnamed_addr constant [40 x i8] c"single_tile_decoding out of range [..1]\00", align 1
@.str.53 = private unnamed_addr constant [26 x i8] c"row_mt out of range [..1]\00", align 1
@.str.54 = private unnamed_addr constant [32 x i8] c"tile_columns out of range [..6]\00", align 1
@.str.55 = private unnamed_addr constant [29 x i8] c"tile_rows out of range [..6]\00", align 1
@.str.56 = private unnamed_addr constant [30 x i8] c"monochrome out of range [..1]\00", align 1
@.str.57 = private unnamed_addr constant [68 x i8] c"Adaptive quantization are not supported in large scale tile coding.\00", align 1
@.str.58 = private unnamed_addr constant [29 x i8] c"sharpness out of range [..7]\00", align 1
@.str.59 = private unnamed_addr constant [36 x i8] c"arnr_max_frames out of range [..15]\00", align 1
@.str.60 = private unnamed_addr constant [33 x i8] c"arnr_strength out of range [..6]\00", align 1
@.str.61 = private unnamed_addr constant [29 x i8] c"cq_level out of range [..63]\00", align 1
@.str.62 = private unnamed_addr constant [51 x i8] c"g_bit_depth out of range [AOM_BITS_8..AOM_BITS_12]\00", align 1
@.str.63 = private unnamed_addr constant [39 x i8] c"g_input_bit_depth out of range [8..12]\00", align 1
@.str.64 = private unnamed_addr constant [68 x i8] c"content out of range [AOM_CONTENT_DEFAULT..AOM_CONTENT_INVALID - 1]\00", align 1
@.str.65 = private unnamed_addr constant [33 x i8] c"rc_twopass_stats_in.buf not set.\00", align 1
@.str.66 = private unnamed_addr constant [51 x i8] c"rc_twopass_stats_in.sz indicates truncated packet.\00", align 1
@.str.67 = private unnamed_addr constant [51 x i8] c"rc_twopass_stats_in requires at least two packets.\00", align 1
@.str.68 = private unnamed_addr constant [45 x i8] c"rc_twopass_stats_in missing EOS stats packet\00", align 1
@.str.69 = private unnamed_addr constant [48 x i8] c"Codec bit-depth 12 not supported in profile < 2\00", align 1
@.str.70 = private unnamed_addr constant [49 x i8] c"Source bit-depth 12 not supported in profile < 2\00", align 1
@.str.71 = private unnamed_addr constant [40 x i8] c"use_fixed_qp_offsets out of range [..1]\00", align 1
@.str.72 = private unnamed_addr constant [40 x i8] c"fixed_qp_offsets[i] out of range [..63]\00", align 1
@.str.73 = private unnamed_addr constant [59 x i8] c"--use_fixed_qp_offsets can only be used with --end-usage=q\00", align 1
@.str.74 = private unnamed_addr constant [55 x i8] c"--fixed_qp_offsets can only be used with --end-usage=q\00", align 1
@.str.75 = private unnamed_addr constant [72 x i8] c"color_primaries out of range [AOM_CICP_CP_BT_709..AOM_CICP_CP_EBU_3213]\00", align 1
@.str.76 = private unnamed_addr constant [76 x i8] c"transfer_characteristics out of range [AOM_CICP_TC_BT_709..AOM_CICP_TC_HLG]\00", align 1
@.str.77 = private unnamed_addr constant [75 x i8] c"matrix_coefficients out of range [AOM_CICP_MC_IDENTITY..AOM_CICP_MC_ICTCP]\00", align 1
@.str.78 = private unnamed_addr constant [32 x i8] c"color_range out of range [0..1]\00", align 1
@.str.79 = private unnamed_addr constant [69 x i8] c"vbr_corpus_complexity_lap out of range [..MAX_VBR_CORPUS_COMPLEXITY]\00", align 1
@.str.80 = private unnamed_addr constant [77 x i8] c"VBR corpus complexity is supported only in the case of single pass VBR mode.\00", align 1
@.str.81 = private unnamed_addr constant [127 x i8] c"This error may be related to the wrong configuration options: try to set -DCONFIG_TUNE_BUTTERAUGLI=1 at the time CMake is run.\00", align 1
@.str.82 = private unnamed_addr constant [120 x i8] c"This error may be related to the wrong configuration options: try to set -DCONFIG_TUNE_VMAF=1 at the time CMake is run.\00", align 1
@.str.83 = private unnamed_addr constant [58 x i8] c"tuning out of range [AOM_TUNE_PSNR..AOM_TUNE_BUTTERAUGLI]\00", align 1
@.str.84 = private unnamed_addr constant [77 x i8] c"timing_info_type out of range [AOM_TIMING_UNSPECIFIED..AOM_TIMING_DEC_MODEL]\00", align 1
@.str.85 = private unnamed_addr constant [44 x i8] c"film_grain_test_vector out of range [0..16]\00", align 1
@.str.86 = private unnamed_addr constant [48 x i8] c"Only --aq_mode=0 can be used with --lossless=1.\00", align 1
@.str.87 = private unnamed_addr constant [61 x i8] c"Only --enable_chroma_deltaq=0 can be used with --lossless=1.\00", align 1
@.str.88 = private unnamed_addr constant [41 x i8] c"max_reference_frames out of range [3..7]\00", align 1
@.str.89 = private unnamed_addr constant [49 x i8] c"enable_reduced_reference_set out of range [0..1]\00", align 1
@.str.90 = private unnamed_addr constant [40 x i8] c"chroma_subsampling_x out of range [..1]\00", align 1
@.str.91 = private unnamed_addr constant [40 x i8] c"chroma_subsampling_y out of range [..1]\00", align 1
@.str.92 = private unnamed_addr constant [41 x i8] c"disable_trellis_quant out of range [..3]\00", align 1
@.str.93 = private unnamed_addr constant [40 x i8] c"coeff_cost_upd_freq out of range [0..3]\00", align 1
@.str.94 = private unnamed_addr constant [39 x i8] c"mode_cost_upd_freq out of range [0..3]\00", align 1
@.str.95 = private unnamed_addr constant [37 x i8] c"mv_cost_upd_freq out of range [0..3]\00", align 1
@.str.96 = private unnamed_addr constant [37 x i8] c"dv_cost_upd_freq out of range [0..3]\00", align 1
@.str.97 = private unnamed_addr constant [41 x i8] c"min_partition_size out of range [4..128]\00", align 1
@.str.98 = private unnamed_addr constant [41 x i8] c"max_partition_size out of range [4..128]\00", align 1
@.str.99 = private unnamed_addr constant [66 x i8] c"min_partition_size out of range [..extra_cfg->max_partition_size]\00", align 1
@.str.100 = private unnamed_addr constant [39 x i8] c"Target sequence level index is invalid\00", align 1
@get_modeled_qp_offset.percents = internal unnamed_addr constant [5 x i32] [i32 76, i32 60, i32 30, i32 15, i32 8], align 16
@.str.101 = private unnamed_addr constant [53 x i8] c"TPL model can't be turned on in realtime only build.\00", align 1
@.str.102 = private unnamed_addr constant [55 x i8] c"Restoration can't be turned on in realtime only build.\00", align 1
@.str.103 = private unnamed_addr constant [46 x i8] c"OBMC can't be enabled in realtime only build.\00", align 1
@.str.104 = private unnamed_addr constant [55 x i8] c"Global motion can't be enabled in realtime only build.\00", align 1
@.str.105 = private unnamed_addr constant [55 x i8] c"Warped motion can't be enabled in realtime only build.\00", align 1
@.str.106 = private unnamed_addr constant [54 x i8] c"Delta Q mode can't be enabled in realtime only build.\00", align 1
@.str.107 = private unnamed_addr constant [31 x i8] c"Failed to allocate lag buffers\00", align 1
@.str.108 = private unnamed_addr constant [33 x i8] c"Compressed data buffer too small\00", align 1
@__const.encoder_encode.pkt = private unnamed_addr constant { i32, [4 x i8], %union.anon } { i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %union.anon { %struct.aom_psnr_pkt { [4 x i32] [i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766], [4 x i64] [i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206], [4 x double] [double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF], [4 x i32] [i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766], [4 x i64] [i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206], [4 x double] [double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF] } } }, align 8
@.str.109 = private unnamed_addr constant [60 x i8] c"Invalid image format. I444 images not supported in profile.\00", align 1
@.str.110 = private unnamed_addr constant [60 x i8] c"Invalid image format. I422 images not supported in profile.\00", align 1
@.str.111 = private unnamed_addr constant [72 x i8] c"Invalid image format. Only YV12, I420, I422, I444 images are supported.\00", align 1
@.str.112 = private unnamed_addr constant [54 x i8] c"Image size must match encoder init configuration size\00", align 1
@.str.113 = private unnamed_addr constant [51 x i8] c"Cannot change width or height after initialization\00", align 1
@.str.114 = private unnamed_addr constant [30 x i8] c"Cannot increase lag_in_frames\00", align 1
@.str.115 = private unnamed_addr constant [46 x i8] c"Cannot change lag_in_frames if LAP is enabled\00", align 1
@.str.116 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@__const.encoder_set_option.argv = private unnamed_addr constant [2 x i8*] [i8* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.116, i32 0, i32 0)], align 16
@.str.117 = private unnamed_addr constant [8 x i8] c"--%s=%s\00", align 1
@g_av1_codec_arg_defs = external constant %struct.av1_codec_arg_definitions, align 8
@.str.118 = private unnamed_addr constant [26 x i8] c"Cannot find aom option %s\00", align 1

; Function Attrs: nounwind ssp uwtable
define internal i32 @encoder_init(%struct.aom_codec_ctx* nocapture) #0 {
  %2 = getelementptr inbounds %struct.aom_codec_ctx, %struct.aom_codec_ctx* %0, i64 0, i32 6
  %3 = load %struct.aom_codec_priv*, %struct.aom_codec_priv** %2, align 8
  %4 = icmp eq %struct.aom_codec_priv* %3, null
  br i1 %4, label %5, label %144

5:                                                ; preds = %1
  %6 = tail call i8* @aom_calloc(i64 1, i64 46240) #9
  %7 = icmp eq i8* %6, null
  br i1 %7, label %144, label %8

8:                                                ; preds = %5
  %9 = bitcast i8* %6 to %struct.aom_codec_alg_priv*
  %10 = bitcast %struct.aom_codec_priv** %2 to i8**
  store i8* %6, i8** %10, align 8
  %11 = getelementptr inbounds %struct.aom_codec_ctx, %struct.aom_codec_ctx* %0, i64 0, i32 4
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds i8, i8* %6, i64 8
  %14 = bitcast i8* %13 to i64*
  store i64 %12, i64* %14, align 8
  %15 = getelementptr inbounds i8, i8* %6, i64 208
  %16 = bitcast i8* %15 to %struct.aom_codec_enc_cfg*
  %17 = getelementptr inbounds %struct.aom_codec_ctx, %struct.aom_codec_ctx* %0, i64 0, i32 5
  %18 = bitcast %union.anon.19* %17 to i8**
  %19 = load i8*, i8** %18, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %19, i64 904, i1 false)
  store i8* %15, i8** %18, align 8
  %20 = getelementptr inbounds i8, i8* %6, i64 1112
  %21 = bitcast i8* %20 to %struct.av1_extracfg*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 bitcast (%struct.av1_extracfg* @default_extra_cfg to i8*), i64 512, i1 false)
  %22 = tail call i32 @pthread_once(i32* nonnull @aom_once.lock, void ()* nonnull @av1_initialize_enc) #9
  %23 = tail call fastcc i32 @validate_config(%struct.aom_codec_alg_priv* nonnull %9, %struct.aom_codec_enc_cfg* %16, %struct.av1_extracfg* %21)
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %144

25:                                               ; preds = %8
  %26 = getelementptr inbounds i8, i8* %6, i64 46192
  %27 = bitcast i8* %26 to i32*
  store i32 0, i32* %27, align 4
  %28 = getelementptr inbounds i8, i8* %6, i64 248
  %29 = getelementptr inbounds i8, i8* %6, i64 252
  %30 = bitcast i8* %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds i8, i8* %6, i64 1624
  %33 = getelementptr inbounds i8, i8* %6, i64 1632
  %34 = bitcast i8* %33 to i32*
  store i32 %31, i32* %34, align 8
  %35 = bitcast i8* %28 to i32*
  %36 = load i32, i32* %35, align 8
  %37 = sext i32 %36 to i64
  %38 = mul nsw i64 %37, 10000000
  %39 = bitcast i8* %32 to i64*
  store i64 %38, i64* %39, align 8
  %40 = icmp sgt i32 %31, 0
  br i1 %40, label %41, label %48

41:                                               ; preds = %25, %41
  %42 = phi i32 [ %46, %41 ], [ %31, %25 ]
  %43 = phi i64 [ %44, %41 ], [ %38, %25 ]
  %44 = sext i32 %42 to i64
  %45 = srem i64 %43, %44
  %46 = trunc i64 %45 to i32
  %47 = icmp sgt i32 %46, 0
  br i1 %47, label %41, label %48

48:                                               ; preds = %41, %25
  %49 = phi i64 [ %38, %25 ], [ %44, %41 ]
  %50 = trunc i64 %49 to i32
  %51 = shl i64 %49, 32
  %52 = ashr exact i64 %51, 32
  %53 = sdiv i64 %38, %52
  store i64 %53, i64* %39, align 8
  %54 = sdiv i32 %31, %50
  store i32 %54, i32* %34, align 8
  %55 = getelementptr inbounds i8, i8* %6, i64 1656
  %56 = bitcast i8* %55 to %struct.AV1EncoderConfig*
  tail call fastcc void @set_encoder_config(%struct.AV1EncoderConfig* %56, %struct.aom_codec_enc_cfg* %16, %struct.av1_extracfg* %21)
  %57 = getelementptr inbounds i8, i8* %6, i64 1828
  %58 = bitcast i8* %57 to i32*
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, 1
  br i1 %60, label %85, label %61

61:                                               ; preds = %48
  %62 = getelementptr inbounds i8, i8* %6, i64 2748
  %63 = bitcast i8* %62 to i32*
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %85

66:                                               ; preds = %61
  %67 = getelementptr inbounds i8, i8* %6, i64 2752
  %68 = load i8, i8* %67, align 8
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %70, label %85

70:                                               ; preds = %66
  %71 = getelementptr inbounds i8, i8* %6, i64 264
  %72 = bitcast i8* %71 to i32*
  %73 = load i32, i32* %72, align 8
  %74 = getelementptr inbounds i8, i8* %6, i64 1728
  %75 = bitcast i8* %74 to i32*
  %76 = load i32, i32* %75, align 4
  %77 = icmp slt i32 %76, 19
  %78 = select i1 %77, i32 %76, i32 19
  %79 = add nsw i32 %78, 16
  %80 = icmp slt i32 %73, %79
  %81 = select i1 %80, i32 %73, i32 %79
  store i32 %81, i32* %27, align 4
  %82 = sub nsw i32 %73, %81
  %83 = icmp sgt i32 %82, 16
  %84 = select i1 %83, i32 17, i32 0
  br label %85

85:                                               ; preds = %70, %48, %66, %61
  %86 = phi i32 [ 0, %66 ], [ 0, %61 ], [ 0, %48 ], [ %84, %70 ]
  %87 = load i64, i64* %11, align 8
  %88 = getelementptr inbounds i8, i8* %6, i64 2754
  %89 = lshr i64 %87, 18
  %90 = trunc i64 %89 to i8
  %91 = and i8 %90, 1
  store i8 %91, i8* %88, align 2
  %92 = getelementptr inbounds i8, i8* %6, i64 2976
  %93 = bitcast i8* %92 to %struct.aom_codec_pkt_list*
  %94 = load i32, i32* %27, align 4
  %95 = tail call %struct.AV1_PRIMARY* @av1_create_primary_compressor(%struct.aom_codec_pkt_list* %93, i32 %94, %struct.AV1EncoderConfig* %56) #9
  %96 = getelementptr inbounds i8, i8* %6, i64 2768
  %97 = bitcast i8* %96 to %struct.AV1_PRIMARY**
  store %struct.AV1_PRIMARY* %95, %struct.AV1_PRIMARY** %97, align 8
  %98 = icmp eq %struct.AV1_PRIMARY* %95, null
  br i1 %98, label %144, label %99

99:                                               ; preds = %85
  %100 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %95, i64 0, i32 0
  %101 = getelementptr inbounds i8, i8* %6, i64 46168
  %102 = bitcast i8* %101 to %struct.BufferPool**
  %103 = load %struct.BufferPool*, %struct.BufferPool** %102, align 8
  %104 = icmp eq %struct.BufferPool* %103, null
  br i1 %104, label %105, label %115

105:                                              ; preds = %99
  %106 = tail call i8* @aom_calloc(i64 1, i64 365136) #9
  %107 = bitcast i8* %101 to i8**
  store i8* %106, i8** %107, align 8
  %108 = icmp eq i8* %106, null
  br i1 %108, label %144, label %109

109:                                              ; preds = %105
  %110 = bitcast i8* %106 to %union.pthread_mutex_t*
  %111 = tail call i32 @pthread_mutex_init(%union.pthread_mutex_t* nonnull %110, %union.pthread_mutexattr_t* null) #9
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %144

113:                                              ; preds = %109
  %114 = load %struct.BufferPool*, %struct.BufferPool** %102, align 8
  br label %115

115:                                              ; preds = %113, %99
  %116 = phi %struct.BufferPool* [ %114, %113 ], [ %103, %99 ]
  %117 = tail call %struct.AV1_COMP* @av1_create_compressor(%struct.AV1_PRIMARY* nonnull %95, %struct.AV1EncoderConfig* %56, %struct.BufferPool* %116, i8 zeroext 0, i32 -1) #9
  store %struct.AV1_COMP* %117, %struct.AV1_COMP** %100, align 8
  %118 = icmp eq %struct.AV1_COMP* %117, null
  br i1 %118, label %144, label %119

119:                                              ; preds = %115
  %120 = load i32, i32* %27, align 4
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %144, label %122

122:                                              ; preds = %119
  %123 = load %struct.AV1_PRIMARY*, %struct.AV1_PRIMARY** %97, align 8
  %124 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %123, i64 0, i32 1
  %125 = getelementptr inbounds i8, i8* %6, i64 46176
  %126 = bitcast i8* %125 to %struct.BufferPool**
  %127 = load %struct.BufferPool*, %struct.BufferPool** %126, align 8
  %128 = icmp eq %struct.BufferPool* %127, null
  br i1 %128, label %129, label %139

129:                                              ; preds = %122
  %130 = tail call i8* @aom_calloc(i64 1, i64 365136) #9
  %131 = bitcast i8* %125 to i8**
  store i8* %130, i8** %131, align 8
  %132 = icmp eq i8* %130, null
  br i1 %132, label %144, label %133

133:                                              ; preds = %129
  %134 = bitcast i8* %130 to %union.pthread_mutex_t*
  %135 = tail call i32 @pthread_mutex_init(%union.pthread_mutex_t* nonnull %134, %union.pthread_mutexattr_t* null) #9
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %144

137:                                              ; preds = %133
  %138 = load %struct.BufferPool*, %struct.BufferPool** %126, align 8
  br label %139

139:                                              ; preds = %137, %122
  %140 = phi %struct.BufferPool* [ %138, %137 ], [ %127, %122 ]
  %141 = tail call %struct.AV1_COMP* @av1_create_compressor(%struct.AV1_PRIMARY* %123, %struct.AV1EncoderConfig* %56, %struct.BufferPool* %140, i8 zeroext 1, i32 %86) #9
  store %struct.AV1_COMP* %141, %struct.AV1_COMP** %124, align 8
  %142 = icmp eq %struct.AV1_COMP* %141, null
  %143 = select i1 %142, i32 2, i32 0
  br label %144

144:                                              ; preds = %115, %109, %105, %139, %133, %129, %119, %8, %1, %5, %85
  %145 = phi i32 [ 2, %85 ], [ 2, %5 ], [ 0, %1 ], [ %23, %8 ], [ 2, %133 ], [ 2, %129 ], [ %143, %139 ], [ 0, %119 ], [ 2, %105 ], [ 2, %109 ], [ 2, %115 ]
  ret i32 %145
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @encoder_destroy(%struct.aom_codec_alg_priv*) #0 {
  %2 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 8
  %3 = load i8*, i8** %2, align 8
  tail call void @free(i8* %3) #9
  %4 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 7
  %5 = load %struct.AV1_PRIMARY*, %struct.AV1_PRIMARY** %4, align 8
  %6 = icmp eq %struct.AV1_PRIMARY* %5, null
  br i1 %6, label %34, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %5, i64 0, i32 0
  %9 = load %struct.AV1_COMP*, %struct.AV1_COMP** %8, align 8
  %10 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 15
  tail call void @av1_remove_compressor(%struct.AV1_COMP* %9) #9
  %11 = load %struct.BufferPool*, %struct.BufferPool** %10, align 8
  %12 = icmp eq %struct.BufferPool* %11, null
  br i1 %12, label %19, label %13

13:                                               ; preds = %7
  tail call void @av1_free_ref_frame_buffers(%struct.BufferPool* nonnull %11) #9
  %14 = load %struct.BufferPool*, %struct.BufferPool** %10, align 8
  %15 = getelementptr inbounds %struct.BufferPool, %struct.BufferPool* %14, i64 0, i32 0
  %16 = tail call i32 @pthread_mutex_destroy(%union.pthread_mutex_t* %15) #9
  %17 = bitcast %struct.BufferPool** %10 to i8**
  %18 = load i8*, i8** %17, align 8
  tail call void @aom_free(i8* %18) #9
  store %struct.BufferPool* null, %struct.BufferPool** %10, align 8
  br label %19

19:                                               ; preds = %7, %13
  %20 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %5, i64 0, i32 1
  %21 = load %struct.AV1_COMP*, %struct.AV1_COMP** %20, align 8
  %22 = icmp eq %struct.AV1_COMP* %21, null
  br i1 %22, label %33, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 16
  tail call void @av1_remove_compressor(%struct.AV1_COMP* nonnull %21) #9
  %25 = load %struct.BufferPool*, %struct.BufferPool** %24, align 8
  %26 = icmp eq %struct.BufferPool* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %23
  tail call void @av1_free_ref_frame_buffers(%struct.BufferPool* nonnull %25) #9
  %28 = load %struct.BufferPool*, %struct.BufferPool** %24, align 8
  %29 = getelementptr inbounds %struct.BufferPool, %struct.BufferPool* %28, i64 0, i32 0
  %30 = tail call i32 @pthread_mutex_destroy(%union.pthread_mutex_t* %29) #9
  %31 = bitcast %struct.BufferPool** %24 to i8**
  %32 = load i8*, i8** %31, align 8
  tail call void @aom_free(i8* %32) #9
  store %struct.BufferPool* null, %struct.BufferPool** %24, align 8
  br label %33

33:                                               ; preds = %27, %23, %19
  tail call void @av1_remove_primary_compressor(%struct.AV1_PRIMARY* nonnull %5) #9
  br label %34

34:                                               ; preds = %1, %33
  %35 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 17
  %36 = bitcast %struct.FIRSTPASS_STATS** %35 to i8**
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 19, i32 4
  %39 = bitcast %struct.FIRSTPASS_STATS** %38 to i8**
  %40 = load i8*, i8** %39, align 8
  tail call void @aom_free(i8* %40) #9
  %41 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 19, i32 3
  %42 = bitcast %struct.FIRSTPASS_STATS** %41 to i8**
  %43 = load i8*, i8** %42, align 8
  tail call void @aom_free(i8* %43) #9
  tail call void @aom_free(i8* %37) #9
  %44 = bitcast %struct.aom_codec_alg_priv* %0 to i8*
  tail call void @aom_free(i8* %44) #9
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @encoder_encode(%struct.aom_codec_alg_priv*, %struct.aom_image* readonly, i64, i64, i64) #0 {
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca %struct.yv12_buffer_config, align 8
  %10 = alloca i64, align 8
  %11 = alloca i32, align 4
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = alloca %struct.aom_codec_cx_pkt, align 8
  %18 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18)
  store volatile i32 -1431655766, i32* %6, align 4
  store volatile i32 0, i32* %6, align 4
  %19 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 7
  %20 = load %struct.AV1_PRIMARY*, %struct.AV1_PRIMARY** %19, align 8
  %21 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %20, i64 0, i32 0
  %22 = load %struct.AV1_COMP*, %struct.AV1_COMP** %21, align 8
  %23 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 3
  %24 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  store volatile i64 -6148914691236517206, i64* %7, align 8
  store volatile i64 %2, i64* %7, align 8
  %25 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %20, i64 0, i32 1
  %26 = load %struct.AV1_COMP*, %struct.AV1_COMP** %25, align 8
  %27 = icmp eq %struct.AV1_COMP* %22, null
  br i1 %27, label %656, label %28

28:                                               ; preds = %5
  %29 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %22, i64 0, i32 0
  %30 = load %struct.AV1_PRIMARY*, %struct.AV1_PRIMARY** %29, align 16
  %31 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %30, i64 0, i32 8
  %32 = load i32, i32* %31, align 8
  %33 = icmp ne i32 %32, 0
  %34 = icmp eq %struct.AV1_COMP* %26, null
  %35 = and i1 %34, %33
  br i1 %35, label %36, label %40

36:                                               ; preds = %28
  %37 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %22, i64 0, i32 9, i32 33
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %656, label %40

40:                                               ; preds = %36, %28
  %41 = icmp ne %struct.aom_image* %1, null
  br i1 %41, label %42, label %124

42:                                               ; preds = %40
  %43 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %1, i64 0, i32 0
  %44 = load i32, i32* %43, align 8
  switch i32 %44, label %69 [
    i32 769, label %57
    i32 258, label %57
    i32 2817, label %57
    i32 2306, label %57
    i32 262, label %45
    i32 2310, label %45
    i32 261, label %53
    i32 2309, label %53
  ]

45:                                               ; preds = %42, %42
  %46 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 1, i32 2
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %57

49:                                               ; preds = %45
  %50 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 1, i32 44
  %51 = load i32, i32* %50, align 8
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %69, label %57

53:                                               ; preds = %42, %42
  %54 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 1, i32 2
  %55 = load i32, i32* %54, align 8
  %56 = icmp eq i32 %55, 2
  br i1 %56, label %57, label %69

57:                                               ; preds = %53, %49, %45, %42, %42, %42, %42
  %58 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %1, i64 0, i32 10
  %59 = load i32, i32* %58, align 8
  %60 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 1, i32 3
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %59, %61
  br i1 %62, label %63, label %69

63:                                               ; preds = %57
  %64 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %1, i64 0, i32 11
  %65 = load i32, i32* %64, align 4
  %66 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 1, i32 4
  %67 = load i32, i32* %66, align 8
  %68 = icmp eq i32 %65, %67
  br i1 %68, label %72, label %69

69:                                               ; preds = %57, %63, %42, %53, %49
  %70 = phi i8* [ getelementptr inbounds ([60 x i8], [60 x i8]* @.str.109, i64 0, i64 0), %49 ], [ getelementptr inbounds ([60 x i8], [60 x i8]* @.str.110, i64 0, i64 0), %53 ], [ getelementptr inbounds ([72 x i8], [72 x i8]* @.str.111, i64 0, i64 0), %42 ], [ getelementptr inbounds ([54 x i8], [54 x i8]* @.str.112, i64 0, i64 0), %63 ], [ getelementptr inbounds ([54 x i8], [54 x i8]* @.str.112, i64 0, i64 0), %57 ]
  %71 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 0, i32 0
  store i8* %70, i8** %71, align 8
  br label %72

72:                                               ; preds = %69, %63
  %73 = phi i32 [ 0, %63 ], [ 8, %69 ]
  store volatile i32 %73, i32* %6, align 4
  %74 = load volatile i32, i32* %6, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %124

76:                                               ; preds = %72
  %77 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 1, i32 3
  %78 = load i32, i32* %77, align 4
  %79 = add i32 %78, 31
  %80 = and i32 %79, -32
  %81 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 1, i32 4
  %82 = load i32, i32* %81, align 8
  %83 = add i32 %82, 31
  %84 = and i32 %83, -32
  %85 = mul i32 %84, %80
  %86 = load i32, i32* %43, align 8
  switch i32 %86, label %92 [
    i32 769, label %93
    i32 258, label %93
    i32 261, label %87
    i32 262, label %88
    i32 2817, label %89
    i32 2306, label %89
    i32 2309, label %90
    i32 2310, label %91
  ]

87:                                               ; preds = %76
  br label %93

88:                                               ; preds = %76
  br label %93

89:                                               ; preds = %76, %76
  br label %93

90:                                               ; preds = %76
  br label %93

91:                                               ; preds = %76
  br label %93

92:                                               ; preds = %76
  br label %93

93:                                               ; preds = %76, %76, %87, %88, %89, %90, %91, %92
  %94 = phi i32 [ 0, %92 ], [ 48, %91 ], [ 32, %90 ], [ 24, %89 ], [ 24, %88 ], [ 16, %87 ], [ 12, %76 ], [ 12, %76 ]
  %95 = mul i32 %85, %94
  %96 = lshr exact i32 %95, 3
  %97 = zext i32 %96 to i64
  %98 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %22, i64 0, i32 9, i32 3, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %106

101:                                              ; preds = %93
  %102 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %22, i64 0, i32 9, i32 3, i32 6
  %103 = load i8, i8* %102, align 1, !range !2
  %104 = icmp eq i8 %103, 0
  %105 = select i1 %104, i64 2, i64 8
  br label %106

106:                                              ; preds = %101, %93
  %107 = phi i64 [ 8, %93 ], [ %105, %101 ]
  %108 = mul nuw nsw i64 %107, %97
  %109 = icmp ugt i64 %108, 8192
  %110 = select i1 %109, i64 %108, i64 8192
  %111 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 8
  %112 = load i8*, i8** %111, align 8
  %113 = icmp eq i8* %112, null
  br i1 %113, label %118, label %114

114:                                              ; preds = %106
  %115 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 9
  %116 = load i64, i64* %115, align 8
  %117 = icmp ult i64 %116, %110
  br i1 %117, label %118, label %124

118:                                              ; preds = %114, %106
  %119 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 9
  store i64 %110, i64* %119, align 8
  call void @free(i8* %112) #9
  %120 = load i64, i64* %119, align 8
  %121 = call noalias i8* @malloc(i64 %120) #9
  store i8* %121, i8** %111, align 8
  %122 = icmp eq i8* %121, null
  br i1 %122, label %123, label %124

123:                                              ; preds = %118
  store i64 0, i64* %119, align 8
  br label %656

124:                                              ; preds = %118, %114, %72, %40
  %125 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 13
  %126 = getelementptr inbounds %union.anon.17, %union.anon.17* %125, i64 0, i32 0, i32 0, i32 0
  store i32 0, i32* %126, align 8
  %127 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 13, i32 0, i32 0, i32 1
  store i32 256, i32* %127, align 4
  %128 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %128)
  store volatile i64 -6148914691236517206, i64* %8, align 8
  store volatile i64 %4, i64* %8, align 8
  %129 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %20, i64 0, i32 20
  %130 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %20, i64 0, i32 20, i32 4, i64 0
  %131 = call i32 @_setjmp(%struct.__jmp_buf_tag* %130) #10
  %132 = icmp eq i32 %131, 0
  %133 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %20, i64 0, i32 20, i32 3
  br i1 %132, label %146, label %134

134:                                              ; preds = %124
  store i32 0, i32* %133, align 8
  %135 = getelementptr inbounds %struct.aom_internal_error_info, %struct.aom_internal_error_info* %129, i64 0, i32 0
  %136 = load i32, i32* %135, align 8
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %145, label %138

138:                                              ; preds = %134
  %139 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %20, i64 0, i32 20, i32 1
  %140 = load i32, i32* %139, align 4
  %141 = icmp eq i32 %140, 0
  %142 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %20, i64 0, i32 20, i32 2, i64 0
  %143 = select i1 %141, i8* null, i8* %142
  %144 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 0, i32 0
  store i8* %143, i8** %144, align 8
  br label %145

145:                                              ; preds = %134, %138
  store volatile i32 %136, i32* %6, align 4
  br label %654

146:                                              ; preds = %124
  store i32 1, i32* %133, align 8
  %147 = load %struct.AV1_PRIMARY*, %struct.AV1_PRIMARY** %29, align 16
  %148 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %147, i64 0, i32 16
  %149 = load i32, i32* %148, align 8
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %159, label %151

151:                                              ; preds = %146
  %152 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %22, i64 0, i32 75, i32 6
  %153 = load i32, i32* %152, align 8
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %159

155:                                              ; preds = %151
  %156 = load volatile i64, i64* %8, align 8
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %158, label %159

158:                                              ; preds = %155
  call void @av1_set_svc_fixed_mode(%struct.AV1_COMP* nonnull %22) #9
  br label %159

159:                                              ; preds = %146, %158, %155, %151
  %160 = load volatile i64, i64* %8, align 8
  call void @av1_apply_encoding_flags(%struct.AV1_COMP* nonnull %22, i64 %160) #9
  %161 = icmp ne %struct.AV1_COMP* %26, null
  br i1 %161, label %162, label %164

162:                                              ; preds = %159
  %163 = load volatile i64, i64* %8, align 8
  call void @av1_apply_encoding_flags(%struct.AV1_COMP* nonnull %26, i64 %163) #9
  br label %164

164:                                              ; preds = %162, %159
  %165 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %22, i64 0, i32 9, i32 33
  %166 = load i32, i32* %165, align 4
  %167 = icmp eq i32 %166, 1
  br i1 %167, label %172, label %168

168:                                              ; preds = %164
  %169 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %22, i64 0, i32 76
  %170 = load i8, i8* %169, align 8
  %171 = icmp eq i8 %170, 1
  br i1 %171, label %172, label %194

172:                                              ; preds = %168, %164
  %173 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 1, i32 38
  %174 = load i32, i32* %173, align 8
  %175 = icmp eq i32 %174, 1
  br i1 %175, label %176, label %194

176:                                              ; preds = %172
  %177 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 1, i32 39
  %178 = load i32, i32* %177, align 4
  %179 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 1, i32 40
  %180 = load i32, i32* %179, align 8
  %181 = icmp eq i32 %178, %180
  br i1 %181, label %182, label %194

182:                                              ; preds = %176
  %183 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %22, i64 0, i32 8, i32 48
  %184 = load i32, i32* %183, align 8
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %194

186:                                              ; preds = %182
  %187 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 14
  %188 = load i32, i32* %187, align 8
  %189 = add i32 %188, 1
  store i32 %189, i32* %187, align 8
  %190 = icmp ugt i32 %189, %178
  br i1 %190, label %191, label %194

191:                                              ; preds = %186
  %192 = load volatile i64, i64* %8, align 8
  %193 = or i64 %192, 1
  store volatile i64 %193, i64* %8, align 8
  store i32 1, i32* %187, align 8
  br label %194

194:                                              ; preds = %168, %172, %176, %191, %186, %182
  %195 = load volatile i32, i32* %6, align 4
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %197, label %653

197:                                              ; preds = %194
  %198 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 0, i32 1
  %199 = load i64, i64* %198, align 8
  %200 = and i64 %199, 65536
  %201 = icmp eq i64 %200, 0
  br i1 %201, label %205, label %202

202:                                              ; preds = %197
  %203 = load %struct.AV1_PRIMARY*, %struct.AV1_PRIMARY** %29, align 16
  %204 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %203, i64 0, i32 10
  store i32 1, i32* %204, align 8
  br label %205

205:                                              ; preds = %197, %202
  br i1 %41, label %206, label %392

206:                                              ; preds = %205
  %207 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 5
  %208 = load i8, i8* %207, align 8
  %209 = icmp eq i8 %208, 0
  br i1 %209, label %213, label %210

210:                                              ; preds = %206
  %211 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 4
  %212 = load i64, i64* %211, align 8
  br label %216

213:                                              ; preds = %206
  %214 = load volatile i64, i64* %7, align 8
  %215 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 4
  store i64 %214, i64* %215, align 8
  store i8 1, i8* %207, align 8
  br label %216

216:                                              ; preds = %210, %213
  %217 = phi i64 [ %212, %210 ], [ %214, %213 ]
  %218 = load volatile i64, i64* %7, align 8
  %219 = sub nsw i64 %218, %217
  store volatile i64 %219, i64* %7, align 8
  %220 = load volatile i64, i64* %7, align 8
  %221 = getelementptr inbounds %struct.aom_rational64, %struct.aom_rational64* %23, i64 0, i32 0
  %222 = load i64, i64* %221, align 8
  %223 = mul nsw i64 %222, %220
  %224 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 3, i32 1
  %225 = load i32, i32* %224, align 8
  %226 = sext i32 %225 to i64
  %227 = sdiv i64 %223, %226
  %228 = load volatile i64, i64* %7, align 8
  %229 = add i64 %228, %3
  %230 = mul nsw i64 %229, %222
  %231 = sdiv i64 %230, %226
  %232 = bitcast %struct.yv12_buffer_config* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %232) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %232, i8 -86, i64 208, i1 false)
  %233 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %1, i64 0, i32 16
  %234 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %9, i64 0, i32 5
  %235 = bitcast [3 x i8*]* %233 to <2 x i64>*
  %236 = load <2 x i64>, <2 x i64>* %235, align 8
  %237 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %9, i64 0, i32 5, i32 0, i32 1
  %238 = bitcast %union.anon.11* %234 to <2 x i64>*
  store <2 x i64> %236, <2 x i64>* %238, align 8
  %239 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %1, i64 0, i32 16, i64 2
  %240 = bitcast i8** %239 to i64*
  %241 = load i64, i64* %240, align 8
  %242 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %9, i64 0, i32 5, i32 0, i32 2
  %243 = bitcast i8** %242 to i64*
  store i64 %241, i64* %243, align 8
  %244 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %1, i64 0, i32 10
  %245 = load i32, i32* %244, align 8
  %246 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %9, i64 0, i32 2, i32 0, i32 0
  store i32 %245, i32* %246, align 8
  %247 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %1, i64 0, i32 11
  %248 = load i32, i32* %247, align 4
  %249 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %9, i64 0, i32 3, i32 0, i32 0
  store i32 %248, i32* %249, align 8
  %250 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %1, i64 0, i32 12
  %251 = load i32, i32* %250, align 8
  %252 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %9, i64 0, i32 23
  store i32 %251, i32* %252, align 4
  %253 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %1, i64 0, i32 13
  %254 = load i32, i32* %253, align 4
  %255 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %9, i64 0, i32 24
  store i32 %254, i32* %255, align 8
  %256 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %1, i64 0, i32 7
  %257 = load i32, i32* %256, align 4
  %258 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %9, i64 0, i32 0, i32 0, i32 0
  store i32 %257, i32* %258, align 8
  %259 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %1, i64 0, i32 8
  %260 = load i32, i32* %259, align 8
  %261 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %9, i64 0, i32 1, i32 0, i32 0
  store i32 %260, i32* %261, align 8
  %262 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %1, i64 0, i32 14
  %263 = load i32, i32* %262, align 8
  %264 = icmp eq i32 %263, 1
  br i1 %264, label %265, label %268

265:                                              ; preds = %216
  %266 = add nsw i32 %257, 1
  %267 = sdiv i32 %266, 2
  br label %268

268:                                              ; preds = %265, %216
  %269 = phi i32 [ %267, %265 ], [ %257, %216 ]
  %270 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %9, i64 0, i32 0, i32 0, i32 1
  store i32 %269, i32* %270, align 4
  %271 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %1, i64 0, i32 15
  %272 = load i32, i32* %271, align 4
  %273 = icmp eq i32 %272, 1
  br i1 %273, label %274, label %277

274:                                              ; preds = %268
  %275 = add nsw i32 %260, 1
  %276 = sdiv i32 %275, 2
  br label %277

277:                                              ; preds = %274, %268
  %278 = phi i32 [ %276, %274 ], [ %260, %268 ]
  %279 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %9, i64 0, i32 1, i32 0, i32 1
  store i32 %278, i32* %279, align 4
  %280 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %9, i64 0, i32 2, i32 0, i32 1
  store i32 %269, i32* %280, align 4
  %281 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %9, i64 0, i32 3, i32 0, i32 1
  store i32 %278, i32* %281, align 4
  %282 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %1, i64 0, i32 17, i64 0
  %283 = load i32, i32* %282, align 8
  %284 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %9, i64 0, i32 4, i32 0, i32 0
  store i32 %283, i32* %284, align 8
  %285 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %1, i64 0, i32 17, i64 1
  %286 = load i32, i32* %285, align 4
  %287 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %9, i64 0, i32 4, i32 0, i32 1
  store i32 %286, i32* %287, align 4
  %288 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %1, i64 0, i32 1
  %289 = load i32, i32* %288, align 4
  %290 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %9, i64 0, i32 17
  store i32 %289, i32* %290, align 4
  %291 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %1, i64 0, i32 2
  %292 = load i32, i32* %291, align 8
  %293 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %9, i64 0, i32 18
  store i32 %292, i32* %293, align 8
  %294 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %1, i64 0, i32 3
  %295 = load i32, i32* %294, align 4
  %296 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %9, i64 0, i32 19
  store i32 %295, i32* %296, align 4
  %297 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %1, i64 0, i32 4
  %298 = load i32, i32* %297, align 8
  %299 = trunc i32 %298 to i8
  %300 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %9, i64 0, i32 20
  store i8 %299, i8* %300, align 8
  %301 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %1, i64 0, i32 5
  %302 = load i32, i32* %301, align 4
  %303 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %9, i64 0, i32 21
  store i32 %302, i32* %303, align 4
  %304 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %1, i64 0, i32 6
  %305 = load i32, i32* %304, align 8
  %306 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %9, i64 0, i32 22
  store i32 %305, i32* %306, align 8
  %307 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %1, i64 0, i32 0
  %308 = load i32, i32* %307, align 8
  %309 = and i32 %308, 2048
  %310 = icmp eq i32 %309, 0
  br i1 %310, label %319, label %311

311:                                              ; preds = %277
  %312 = lshr <2 x i64> %236, <i64 1, i64 1>
  %313 = inttoptr <2 x i64> %312 to <2 x i8*>
  %314 = bitcast %union.anon.11* %234 to <2 x i8*>*
  store <2 x i8*> %313, <2 x i8*>* %314, align 8
  %315 = lshr i64 %241, 1
  %316 = inttoptr i64 %315 to i8*
  store i8* %316, i8** %242, align 8
  %317 = ashr i32 %283, 1
  store i32 %317, i32* %284, align 8
  %318 = ashr i32 %286, 1
  store i32 %318, i32* %287, align 4
  br label %319

319:                                              ; preds = %277, %311
  %320 = phi i32 [ %317, %311 ], [ %283, %277 ]
  %321 = phi i32 [ 8, %311 ], [ 0, %277 ]
  %322 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %9, i64 0, i32 26
  store i32 %321, i32* %322, align 8
  %323 = add i32 %257, 31
  %324 = and i32 %323, -32
  %325 = sub nsw i32 %320, %324
  %326 = sdiv i32 %325, 2
  %327 = icmp sgt i32 %326, 0
  %328 = select i1 %327, i32 %326, i32 0
  %329 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %9, i64 0, i32 12
  store i32 %328, i32* %329, align 8
  %330 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %9, i64 0, i32 14
  store i32 %263, i32* %330, align 8
  %331 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %9, i64 0, i32 15
  store i32 %272, i32* %331, align 4
  %332 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %1, i64 0, i32 26
  %333 = bitcast %struct.aom_metadata_array** %332 to i64*
  %334 = load i64, i64* %333, align 8
  %335 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %9, i64 0, i32 27
  %336 = bitcast %struct.aom_metadata_array** %335 to i64*
  store i64 %334, i64* %336, align 8
  store volatile i32 0, i32* %6, align 4
  %337 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 1, i32 44
  %338 = load i32, i32* %337, align 8
  %339 = icmp eq i32 %338, 0
  br i1 %339, label %342, label %340

340:                                              ; preds = %319
  store i32 0, i32* %287, align 4
  %341 = bitcast i8** %237 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %341, i8 0, i64 16, i1 false)
  store i8 1, i8* %300, align 8
  br label %342

342:                                              ; preds = %319, %340
  %343 = lshr exact i32 %321, 3
  %344 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %20, i64 0, i32 2
  %345 = load %struct.lookahead_ctx*, %struct.lookahead_ctx** %344, align 8
  %346 = icmp eq %struct.lookahead_ctx* %345, null
  br i1 %346, label %347, label %370

347:                                              ; preds = %342
  %348 = select i1 %161, %struct.AV1_COMP* %26, %struct.AV1_COMP* %22
  %349 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %348, i64 0, i32 9, i32 10, i32 0
  %350 = load i32, i32* %349, align 16
  %351 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %22, i64 0, i32 9, i32 1, i32 0
  %352 = load i32, i32* %351, align 8
  %353 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %22, i64 0, i32 9, i32 1, i32 1
  %354 = load i32, i32* %353, align 4
  %355 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %22, i64 0, i32 9, i32 28
  %356 = load i32, i32* %355, align 4
  %357 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %22, i64 0, i32 8, i32 20, i32 15
  %358 = load i32, i32* %357, align 4
  %359 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 18
  %360 = load i32, i32* %359, align 8
  %361 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %22, i64 0, i32 9, i32 3, i32 1
  %362 = load i32, i32* %361, align 4
  %363 = icmp eq i32 %362, 0
  %364 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %22, i64 0, i32 9, i32 9, i32 15
  %365 = load i8, i8* %364, align 1, !range !2
  %366 = zext i8 %365 to i32
  %367 = call %struct.lookahead_ctx* @av1_lookahead_init(i32 %352, i32 %354, i32 %263, i32 %272, i32 %343, i32 %350, i32 %356, i32 %358, i32 %360, i1 zeroext %363, i32 %366) #9
  store %struct.lookahead_ctx* %367, %struct.lookahead_ctx** %344, align 8
  %368 = icmp eq %struct.lookahead_ctx* %367, null
  br i1 %368, label %369, label %370

369:                                              ; preds = %347
  call void (%struct.aom_internal_error_info*, i32, i8*, ...) @aom_internal_error(%struct.aom_internal_error_info* %129, i32 2, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.107, i64 0, i64 0)) #9
  br label %370

370:                                              ; preds = %342, %347, %369
  call void @av1_check_initial_width(%struct.AV1_COMP* nonnull %22, i32 %343, i32 %263, i32 %272) #9
  br i1 %161, label %371, label %372

371:                                              ; preds = %370
  call void @av1_check_initial_width(%struct.AV1_COMP* nonnull %26, i32 %343, i32 %263, i32 %272) #9
  br label %372

372:                                              ; preds = %371, %370
  %373 = load volatile i64, i64* %8, align 8
  %374 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 12
  %375 = load i64, i64* %374, align 8
  %376 = or i64 %375, %373
  %377 = call i32 @av1_receive_raw_frame(%struct.AV1_COMP* nonnull %22, i64 %376, %struct.yv12_buffer_config* nonnull %9, i64 %227, i64 %231) #9
  %378 = icmp eq i32 %377, 0
  br i1 %378, label %391, label %379

379:                                              ; preds = %372
  %380 = getelementptr inbounds %struct.aom_internal_error_info, %struct.aom_internal_error_info* %129, i64 0, i32 0
  %381 = load i32, i32* %380, align 8
  %382 = icmp eq i32 %381, 0
  br i1 %382, label %390, label %383

383:                                              ; preds = %379
  %384 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %20, i64 0, i32 20, i32 1
  %385 = load i32, i32* %384, align 4
  %386 = icmp eq i32 %385, 0
  %387 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %20, i64 0, i32 20, i32 2, i64 0
  %388 = select i1 %386, i8* null, i8* %387
  %389 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 0, i32 0
  store i8* %388, i8** %389, align 8
  br label %390

390:                                              ; preds = %379, %383
  store volatile i32 %381, i32* %6, align 4
  br label %391

391:                                              ; preds = %372, %390
  store i64 0, i64* %374, align 8
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %232) #9
  br label %392

392:                                              ; preds = %391, %205
  %393 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 8
  %394 = load i8*, i8** %393, align 8
  %395 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 9
  %396 = load i64, i64* %395, align 8
  %397 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 10
  %398 = load i64, i64* %397, align 8
  %399 = icmp eq i64 %398, 0
  br i1 %399, label %406, label %400

400:                                              ; preds = %392
  %401 = getelementptr inbounds i8, i8* %394, i64 %398
  %402 = sub i64 %396, %398
  %403 = lshr i64 %396, 1
  %404 = icmp ult i64 %402, %403
  br i1 %404, label %405, label %406

405:                                              ; preds = %400
  call void (%struct.aom_internal_error_info*, i32, i8*, ...) @aom_internal_error(%struct.aom_internal_error_info* %129, i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.108, i64 0, i64 0)) #9
  br label %406

406:                                              ; preds = %392, %400, %405
  %407 = phi i8* [ %401, %405 ], [ %401, %400 ], [ %394, %392 ]
  %408 = phi i64 [ %402, %405 ], [ %402, %400 ], [ %396, %392 ]
  %409 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %409) #9
  store i64 0, i64* %10, align 8
  %410 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %410) #9
  store i32 0, i32* %11, align 4
  %411 = load i32, i32* %165, align 4
  %412 = icmp eq i32 %411, 1
  br i1 %412, label %424, label %413

413:                                              ; preds = %406
  call void @av1_compute_num_workers_for_mt(%struct.AV1_COMP* nonnull %22) #9
  %414 = call i32 @av1_get_max_num_workers(%struct.AV1_COMP* nonnull %22) #9
  %415 = icmp sgt i32 %414, 1
  br i1 %415, label %416, label %424

416:                                              ; preds = %413
  %417 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %22, i64 0, i32 61, i32 0
  %418 = load i32, i32* %417, align 8
  %419 = icmp eq i32 %418, 0
  br i1 %419, label %420, label %424

420:                                              ; preds = %416
  call void @av1_create_workers(%struct.AV1_COMP* nonnull %22, i32 %414) #9
  %421 = load i32, i32* %165, align 4
  %422 = icmp eq i32 %421, 1
  br i1 %422, label %424, label %423

423:                                              ; preds = %420
  call void @av1_create_second_pass_workers(%struct.AV1_COMP* nonnull %22, i32 %414) #9
  br label %424

424:                                              ; preds = %406, %420, %423, %416, %413
  br i1 %161, label %425, label %452

425:                                              ; preds = %424
  %426 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %426) #9
  store i64 -6148914691236517206, i64* %12, align 8
  %427 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %427) #9
  store i64 -6148914691236517206, i64* %13, align 8
  %428 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %26, i64 0, i32 61, i32 4
  %429 = load %struct.AVxWorker*, %struct.AVxWorker** %428, align 8
  %430 = icmp eq %struct.AVxWorker* %429, null
  br i1 %430, label %431, label %441

431:                                              ; preds = %425
  %432 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %22, i64 0, i32 61, i32 4
  %433 = bitcast %struct.AVxWorker** %432 to i64*
  %434 = load i64, i64* %433, align 8
  %435 = bitcast %struct.AVxWorker** %428 to i64*
  store i64 %434, i64* %435, align 8
  %436 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %22, i64 0, i32 61, i32 5
  %437 = bitcast %struct.EncWorkerData** %436 to i64*
  %438 = load i64, i64* %437, align 8
  %439 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %26, i64 0, i32 61, i32 5
  %440 = bitcast %struct.EncWorkerData** %439 to i64*
  store i64 %438, i64* %440, align 8
  br label %441

441:                                              ; preds = %431, %425
  %442 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %22, i64 0, i32 61, i32 0
  %443 = load i32, i32* %442, align 8
  %444 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %26, i64 0, i32 61, i32 0
  store i32 %443, i32* %444, align 8
  %445 = xor i1 %41, true
  %446 = zext i1 %445 to i32
  %447 = call i32 @av1_get_compressed_data(%struct.AV1_COMP* nonnull %26, i32* nonnull %11, i64* nonnull %10, i64 %408, i8* null, i64* nonnull %12, i64* nonnull %13, i32 %446, %struct.aom_rational64* %23) #9
  %448 = add i32 %447, 1
  %449 = icmp ugt i32 %448, 1
  br i1 %449, label %450, label %451

450:                                              ; preds = %441
  call void (%struct.aom_internal_error_info*, i32, i8*, ...) @aom_internal_error(%struct.aom_internal_error_info* %129, i32 1, i8* null) #9
  br label %451

451:                                              ; preds = %450, %441
  store i32 0, i32* %11, align 4
  store i64 0, i64* %10, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %427) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %426) #9
  br label %452

452:                                              ; preds = %451, %424
  %453 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %453) #9
  store i64 -6148914691236517206, i64* %14, align 8
  %454 = bitcast i64* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %454) #9
  store i64 -6148914691236517206, i64* %15, align 8
  %455 = load i64, i64* %395, align 8
  %456 = lshr i64 %455, 1
  %457 = icmp ult i64 %408, %456
  br i1 %457, label %652, label %458

458:                                              ; preds = %452
  %459 = xor i1 %41, true
  %460 = zext i1 %459 to i32
  %461 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %22, i64 0, i32 8, i32 48
  %462 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %22, i64 0, i32 71
  %463 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 6, i32 37
  %464 = bitcast i64* %16 to i8*
  %465 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %22, i64 0, i32 8, i32 17
  %466 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %22, i64 0, i32 8, i32 0, i32 0
  br label %467

467:                                              ; preds = %458, %539
  %468 = phi i32 [ 0, %458 ], [ %543, %539 ]
  %469 = phi i64 [ %408, %458 ], [ %541, %539 ]
  %470 = phi i8* [ %407, %458 ], [ %540, %539 ]
  %471 = call i32 @av1_get_compressed_data(%struct.AV1_COMP* %22, i32* nonnull %11, i64* nonnull %10, i64 %469, i8* %470, i64* nonnull %14, i64* nonnull %15, i32 %460, %struct.aom_rational64* %23) #9
  switch i32 %471, label %472 [
    i32 -1, label %652
    i32 0, label %473
  ]

472:                                              ; preds = %467
  call void (%struct.aom_internal_error_info*, i32, i8*, ...) @aom_internal_error(%struct.aom_internal_error_info* %129, i32 1, i8* null) #9
  br label %473

473:                                              ; preds = %467, %472
  %474 = load %struct.AV1_PRIMARY*, %struct.AV1_PRIMARY** %29, align 16
  %475 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %474, i64 0, i32 3
  store i32 1, i32* %475, align 8
  %476 = load i64, i64* %10, align 8
  %477 = icmp eq i64 %476, 0
  br i1 %477, label %539, label %478

478:                                              ; preds = %473
  %479 = load i32, i32* %461, align 8
  %480 = icmp eq i32 %479, 0
  br i1 %480, label %481, label %503

481:                                              ; preds = %478
  %482 = load i64, i64* %397, align 8
  %483 = icmp eq i64 %482, 0
  br i1 %483, label %484, label %503

484:                                              ; preds = %481
  %485 = call i64 @aom_uleb_size_in_bytes(i64 0) #9
  %486 = add i64 %485, 1
  %487 = load i8*, i8** %393, align 8
  %488 = getelementptr inbounds i8, i8* %487, i64 %486
  %489 = load i64, i64* %10, align 8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %488, i8* align 1 %487, i64 %489, i1 false)
  %490 = load %struct.AV1_PRIMARY*, %struct.AV1_PRIMARY** %29, align 16
  %491 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %490, i64 0, i32 9
  %492 = load i8*, i8** %393, align 8
  %493 = call i32 @av1_write_obu_header(%struct.AV1LevelParams* %491, i32* %462, i8 zeroext 2, i32 0, i8* %492) #9
  %494 = zext i32 %493 to i64
  %495 = load i8*, i8** %393, align 8
  %496 = call i32 @av1_write_uleb_obu_size(i64 %494, i64 0, i8* %495) #9
  %497 = icmp eq i32 %496, 0
  br i1 %497, label %499, label %498

498:                                              ; preds = %484
  call void (%struct.aom_internal_error_info*, i32, i8*, ...) @aom_internal_error(%struct.aom_internal_error_info* %129, i32 1, i8* null) #9
  br label %499

499:                                              ; preds = %484, %498
  %500 = add i64 %485, %494
  %501 = load i64, i64* %10, align 8
  %502 = add i64 %500, %501
  store i64 %502, i64* %10, align 8
  br label %503

503:                                              ; preds = %478, %499, %481
  %504 = phi i64 [ %476, %478 ], [ %502, %499 ], [ %476, %481 ]
  %505 = load i8, i8* %463, align 1, !range !2
  %506 = icmp eq i8 %505, 0
  br i1 %506, label %524, label %507

507:                                              ; preds = %503
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %464) #9
  store i64 %504, i64* %16, align 8
  %508 = call i32 @av1_convert_sect5obus_to_annexb(i8* %470, i64* nonnull %16) #9
  %509 = icmp eq i32 %508, 0
  br i1 %509, label %511, label %510

510:                                              ; preds = %507
  call void (%struct.aom_internal_error_info*, i32, i8*, ...) @aom_internal_error(%struct.aom_internal_error_info* %129, i32 1, i8* null) #9
  br label %511

511:                                              ; preds = %507, %510
  %512 = load i64, i64* %16, align 8
  store i64 %512, i64* %10, align 8
  %513 = call i64 @aom_uleb_size_in_bytes(i64 %512) #9
  %514 = getelementptr inbounds i8, i8* %470, i64 %513
  %515 = load i64, i64* %10, align 8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %514, i8* align 1 %470, i64 %515, i1 false)
  %516 = load i64, i64* %10, align 8
  %517 = and i64 %516, 4294967295
  %518 = call i32 @av1_write_uleb_obu_size(i64 0, i64 %517, i8* %470) #9
  %519 = icmp eq i32 %518, 0
  br i1 %519, label %521, label %520

520:                                              ; preds = %511
  call void (%struct.aom_internal_error_info*, i32, i8*, ...) @aom_internal_error(%struct.aom_internal_error_info* %129, i32 1, i8* null) #9
  br label %521

521:                                              ; preds = %511, %520
  %522 = load i64, i64* %10, align 8
  %523 = add i64 %522, %513
  store i64 %523, i64* %10, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %464) #9
  br label %524

524:                                              ; preds = %503, %521
  %525 = phi i64 [ %504, %503 ], [ %523, %521 ]
  %526 = load i64, i64* %397, align 8
  %527 = add i64 %526, %525
  store i64 %527, i64* %397, align 8
  %528 = getelementptr inbounds i8, i8* %470, i64 %525
  %529 = sub i64 %469, %525
  %530 = load i32, i32* %465, align 8
  %531 = icmp eq i32 %530, 0
  br i1 %531, label %532, label %535

532:                                              ; preds = %524
  %533 = load i8, i8* %466, align 16
  %534 = icmp eq i8 %533, 0
  br label %535

535:                                              ; preds = %524, %532
  %536 = phi i1 [ false, %524 ], [ %534, %532 ]
  %537 = zext i1 %536 to i32
  %538 = or i32 %468, %537
  br label %539

539:                                              ; preds = %473, %535
  %540 = phi i8* [ %528, %535 ], [ %470, %473 ]
  %541 = phi i64 [ %529, %535 ], [ %469, %473 ]
  %542 = phi i32 [ %530, %535 ], [ 0, %473 ]
  %543 = phi i32 [ %538, %535 ], [ %468, %473 ]
  %544 = load i64, i64* %395, align 8
  %545 = lshr i64 %544, 1
  %546 = icmp uge i64 %541, %545
  %547 = icmp eq i32 %542, 0
  %548 = and i1 %547, %546
  br i1 %548, label %467, label %549

549:                                              ; preds = %539
  %550 = icmp eq i32 %542, 0
  br i1 %550, label %652, label %551

551:                                              ; preds = %549
  %552 = bitcast %struct.aom_codec_cx_pkt* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %552) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %552, i8* align 8 bitcast ({ i32, [4 x i8], %union.anon }* @__const.encoder_encode.pkt to i8*), i64 168, i1 false)
  %553 = load %struct.AV1_PRIMARY*, %struct.AV1_PRIMARY** %29, align 16
  %554 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %553, i64 0, i32 11
  %555 = load i32, i32* %554, align 4
  %556 = icmp slt i32 %555, 1
  %557 = add nsw i32 %555, -1
  %558 = select i1 %556, i32 0, i32 %557
  store i32 %558, i32* %554, align 4
  %559 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 6, i32 37
  %560 = load i8, i8* %559, align 1, !range !2
  %561 = icmp eq i8 %560, 0
  %562 = load i64, i64* %397, align 8
  br i1 %561, label %575, label %563

563:                                              ; preds = %551
  %564 = call i64 @aom_uleb_size_in_bytes(i64 %562) #9
  %565 = load i8*, i8** %393, align 8
  %566 = getelementptr inbounds i8, i8* %565, i64 %564
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %566, i8* align 1 %565, i64 %562, i1 false)
  %567 = and i64 %562, 4294967295
  %568 = load i8*, i8** %393, align 8
  %569 = call i32 @av1_write_uleb_obu_size(i64 0, i64 %567, i8* %568) #9
  %570 = icmp eq i32 %569, 0
  br i1 %570, label %572, label %571

571:                                              ; preds = %563
  call void (%struct.aom_internal_error_info*, i32, i8*, ...) @aom_internal_error(%struct.aom_internal_error_info* %129, i32 1, i8* null) #9
  br label %572

572:                                              ; preds = %563, %571
  %573 = load i64, i64* %397, align 8
  %574 = add i64 %573, %564
  store i64 %574, i64* %397, align 8
  br label %575

575:                                              ; preds = %551, %572
  %576 = phi i64 [ %574, %572 ], [ %562, %551 ]
  %577 = getelementptr inbounds %struct.aom_codec_cx_pkt, %struct.aom_codec_cx_pkt* %17, i64 0, i32 0
  store i32 0, i32* %577, align 8
  %578 = bitcast i8** %393 to i64*
  %579 = load i64, i64* %578, align 8
  %580 = getelementptr inbounds %struct.aom_codec_cx_pkt, %struct.aom_codec_cx_pkt* %17, i64 0, i32 1
  %581 = bitcast %union.anon* %580 to %struct.anon.0*
  %582 = bitcast %union.anon* %580 to i64*
  store i64 %579, i64* %582, align 8
  %583 = getelementptr inbounds %struct.aom_codec_cx_pkt, %struct.aom_codec_cx_pkt* %17, i64 0, i32 1, i32 0, i32 0, i64 2
  %584 = bitcast i32* %583 to i64*
  store i64 %576, i64* %584, align 8
  %585 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %581, i64 0, i32 5
  store i32 -1, i32* %585, align 4
  %586 = load i64, i64* %10, align 8
  %587 = getelementptr inbounds %struct.aom_codec_cx_pkt, %struct.aom_codec_cx_pkt* %17, i64 0, i32 1, i32 0, i32 1, i64 3
  store i64 %586, i64* %587, align 8
  %588 = load i64, i64* %14, align 8
  %589 = getelementptr inbounds %struct.aom_rational64, %struct.aom_rational64* %23, i64 0, i32 0
  %590 = load i64, i64* %589, align 8
  %591 = sdiv i64 %590, 2
  %592 = icmp sgt i64 %590, 1
  %593 = zext i1 %592 to i64
  %594 = sub nsw i64 %591, %593
  %595 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 3, i32 1
  %596 = load i32, i32* %595, align 8
  %597 = sext i32 %596 to i64
  %598 = mul nsw i64 %588, %597
  %599 = add nsw i64 %594, %598
  %600 = sdiv i64 %599, %590
  %601 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 4
  %602 = load i64, i64* %601, align 8
  %603 = add nsw i64 %602, %600
  %604 = getelementptr inbounds %struct.aom_codec_cx_pkt, %struct.aom_codec_cx_pkt* %17, i64 0, i32 1, i32 0, i32 1, i64 0
  store i64 %603, i64* %604, align 8
  %605 = load i32, i32* %11, align 4
  %606 = shl i32 %605, 16
  %607 = and i32 %605, 1
  %608 = icmp eq i32 %607, 0
  br i1 %608, label %609, label %627

609:                                              ; preds = %575
  %610 = load %struct.AV1_PRIMARY*, %struct.AV1_PRIMARY** %29, align 16
  %611 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %610, i64 0, i32 16
  %612 = load i32, i32* %611, align 8
  %613 = icmp eq i32 %612, 0
  br i1 %613, label %629, label %614

614:                                              ; preds = %609
  %615 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %22, i64 0, i32 75, i32 0
  %616 = load i32, i32* %615, align 8
  %617 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %22, i64 0, i32 75, i32 3
  %618 = load i32, i32* %617, align 4
  %619 = mul nsw i32 %618, %616
  %620 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %22, i64 0, i32 75, i32 1
  %621 = load i32, i32* %620, align 4
  %622 = add nsw i32 %619, %621
  %623 = sext i32 %622 to i64
  %624 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %22, i64 0, i32 75, i32 21, i64 %623, i32 21
  %625 = load i32, i32* %624, align 8
  %626 = icmp eq i32 %625, 0
  br i1 %626, label %629, label %627

627:                                              ; preds = %614, %575
  %628 = or i32 %606, 1
  br label %629

629:                                              ; preds = %609, %614, %627
  %630 = phi i32 [ %628, %627 ], [ %606, %614 ], [ %606, %609 ]
  %631 = and i32 %605, 112
  %632 = or i32 %630, %631
  %633 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %22, i64 0, i32 49
  %634 = load i32, i32* %633, align 4
  %635 = icmp eq i32 %634, 0
  %636 = or i32 %632, 2
  %637 = select i1 %635, i32 %632, i32 %636
  %638 = getelementptr inbounds %struct.aom_codec_cx_pkt, %struct.aom_codec_cx_pkt* %17, i64 0, i32 1, i32 0, i32 1, i64 2
  %639 = bitcast i64* %638 to i32*
  %640 = icmp eq i32 %543, 0
  %641 = or i32 %637, 128
  %642 = select i1 %640, i32 %637, i32 %641
  store i32 %642, i32* %639, align 8
  %643 = load i64, i64* %15, align 8
  %644 = sub nsw i64 %643, %588
  %645 = mul nsw i64 %644, %597
  %646 = add nsw i64 %645, %594
  %647 = sdiv i64 %646, %590
  %648 = and i64 %647, 4294967295
  %649 = getelementptr inbounds %struct.aom_codec_cx_pkt, %struct.aom_codec_cx_pkt* %17, i64 0, i32 1, i32 0, i32 1, i64 1
  store i64 %648, i64* %649, align 8
  %650 = getelementptr inbounds %union.anon.17, %union.anon.17* %125, i64 0, i32 0, i32 0
  %651 = call i32 @aom_codec_pkt_list_add(%struct.aom_codec_pkt_list* %650, %struct.aom_codec_cx_pkt* nonnull %17) #9
  store i64 0, i64* %397, align 8
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %552) #9
  br label %652

652:                                              ; preds = %467, %452, %549, %629
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %454) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %453) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %410) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %409) #9
  br label %653

653:                                              ; preds = %652, %194
  store i32 0, i32* %133, align 8
  br label %654

654:                                              ; preds = %653, %145
  %655 = load volatile i32, i32* %6, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %128)
  br label %656

656:                                              ; preds = %123, %36, %5, %654
  %657 = phi i32 [ %655, %654 ], [ 8, %5 ], [ 8, %36 ], [ 2, %123 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18)
  ret i32 %657
}

; Function Attrs: nounwind ssp uwtable
define internal %struct.aom_codec_cx_pkt* @encoder_get_cxdata(%struct.aom_codec_alg_priv*, i8**) #0 {
  %3 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 13, i32 0, i32 0
  %4 = tail call %struct.aom_codec_cx_pkt* @aom_codec_pkt_list_get(%struct.aom_codec_pkt_list* %3, i8** %1) #9
  ret %struct.aom_codec_cx_pkt* %4
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @encoder_set_config(%struct.aom_codec_alg_priv*, %struct.aom_codec_enc_cfg* readonly) #0 {
  %3 = alloca i8, align 1
  %4 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 7
  %5 = load %struct.AV1_PRIMARY*, %struct.AV1_PRIMARY** %4, align 8
  %6 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %5, i64 0, i32 0
  %7 = load %struct.AV1_COMP*, %struct.AV1_COMP** %6, align 8
  %8 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 3
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 1
  %11 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 1, i32 3
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %9, %12
  br i1 %13, label %14, label %23

14:                                               ; preds = %2
  %15 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 4
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 1, i32 4
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %16, %18
  br i1 %19, label %20, label %23

20:                                               ; preds = %14
  %21 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 13
  %22 = load i32, i32* %21, align 8
  br label %62

23:                                               ; preds = %14, %2
  %24 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 13
  %25 = load i32, i32* %24, align 8
  %26 = icmp ugt i32 %25, 1
  br i1 %26, label %31, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 12
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %27, %23
  %32 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.113, i64 0, i64 0), i8** %32, align 8
  br label %114

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 1, i32 4
  %35 = load i32, i32* %34, align 8
  %36 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 4
  %37 = load i32, i32* %36, align 8
  %38 = shl nsw i32 %9, 1
  %39 = icmp slt i32 %38, %12
  %40 = shl nsw i32 %37, 1
  %41 = icmp slt i32 %40, %35
  %42 = or i1 %39, %41
  %43 = shl nsw i32 %12, 4
  %44 = icmp slt i32 %43, %9
  %45 = or i1 %44, %42
  %46 = shl nsw i32 %35, 4
  %47 = icmp slt i32 %46, %37
  %48 = or i1 %47, %45
  br i1 %48, label %61, label %49

49:                                               ; preds = %33
  %50 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %7, i64 0, i32 52, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = icmp ne i32 %51, 0
  %53 = icmp sgt i32 %9, %51
  %54 = and i1 %52, %53
  br i1 %54, label %61, label %55

55:                                               ; preds = %49
  %56 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %7, i64 0, i32 52, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = icmp ne i32 %57, 0
  %59 = icmp sgt i32 %37, %57
  %60 = and i1 %58, %59
  br i1 %60, label %61, label %62

61:                                               ; preds = %55, %49, %33
  br label %62

62:                                               ; preds = %20, %55, %61
  %63 = phi i32 [ %25, %61 ], [ %25, %55 ], [ %22, %20 ]
  %64 = phi i32 [ 1, %61 ], [ 0, %55 ], [ 0, %20 ]
  %65 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 1, i32 13
  %66 = load i32, i32* %65, align 8
  %67 = icmp ugt i32 %63, %66
  br i1 %67, label %68, label %70

68:                                               ; preds = %62
  %69 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.114, i64 0, i64 0), i8** %69, align 8
  br label %114

70:                                               ; preds = %62
  %71 = icmp eq i32 %63, %66
  br i1 %71, label %78, label %72

72:                                               ; preds = %70
  %73 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 18
  %74 = load i32, i32* %73, align 8
  %75 = icmp sgt i32 %74, 0
  br i1 %75, label %76, label %78

76:                                               ; preds = %72
  %77 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.115, i64 0, i64 0), i8** %77, align 8
  br label %114

78:                                               ; preds = %70, %72
  %79 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %80 = tail call fastcc i32 @validate_config(%struct.aom_codec_alg_priv* %0, %struct.aom_codec_enc_cfg* %1, %struct.av1_extracfg* %79)
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %107

82:                                               ; preds = %78
  %83 = bitcast %struct.aom_codec_enc_cfg* %10 to i8*
  %84 = bitcast %struct.aom_codec_enc_cfg* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %83, i8* align 8 %84, i64 904, i1 false)
  %85 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 6
  tail call fastcc void @set_encoder_config(%struct.AV1EncoderConfig* %85, %struct.aom_codec_enc_cfg* %10, %struct.av1_extracfg* %79)
  %86 = load %struct.AV1_PRIMARY*, %struct.AV1_PRIMARY** %4, align 8
  %87 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %86, i64 0, i32 15, i32 24
  %88 = load i8, i8* %87, align 1
  %89 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 6, i32 32
  %90 = load i8, i8* %89, align 8
  %91 = icmp ne i8 %88, %90
  %92 = zext i1 %91 to i32
  %93 = or i32 %64, %92
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #9
  store i8 0, i8* %3, align 1
  call void @av1_change_config_seq(%struct.AV1_PRIMARY* %86, %struct.AV1EncoderConfig* %85, i8* nonnull %3) #9
  %94 = load %struct.AV1_PRIMARY*, %struct.AV1_PRIMARY** %4, align 8
  %95 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %94, i64 0, i32 0
  %96 = load %struct.AV1_COMP*, %struct.AV1_COMP** %95, align 8
  %97 = load i8, i8* %3, align 1, !range !2
  %98 = icmp ne i8 %97, 0
  call void @av1_change_config(%struct.AV1_COMP* %96, %struct.AV1EncoderConfig* %85, i1 zeroext %98) #9
  %99 = load %struct.AV1_PRIMARY*, %struct.AV1_PRIMARY** %4, align 8
  %100 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %99, i64 0, i32 1
  %101 = load %struct.AV1_COMP*, %struct.AV1_COMP** %100, align 8
  %102 = icmp eq %struct.AV1_COMP* %101, null
  br i1 %102, label %106, label %103

103:                                              ; preds = %82
  %104 = load i8, i8* %3, align 1, !range !2
  %105 = icmp ne i8 %104, 0
  call void @av1_change_config(%struct.AV1_COMP* nonnull %101, %struct.AV1EncoderConfig* %85, i1 zeroext %105) #9
  br label %106

106:                                              ; preds = %82, %103
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #9
  br label %107

107:                                              ; preds = %106, %78
  %108 = phi i32 [ %93, %106 ], [ %64, %78 ]
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %114, label %110

110:                                              ; preds = %107
  %111 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 12
  %112 = load i64, i64* %111, align 8
  %113 = or i64 %112, 1
  store i64 %113, i64* %111, align 8
  br label %114

114:                                              ; preds = %110, %107, %76, %68, %31
  %115 = phi i32 [ 8, %31 ], [ 8, %68 ], [ 8, %76 ], [ %80, %107 ], [ %80, %110 ]
  ret i32 %115
}

; Function Attrs: nounwind ssp uwtable
define internal %struct.aom_fixed_buf* @encoder_get_global_headers(%struct.aom_codec_alg_priv* nocapture readonly) #0 {
  %2 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 7
  %3 = load %struct.AV1_PRIMARY*, %struct.AV1_PRIMARY** %2, align 8
  %4 = tail call %struct.aom_fixed_buf* @av1_get_global_headers(%struct.AV1_PRIMARY* %3) #9
  ret %struct.aom_fixed_buf* %4
}

; Function Attrs: nounwind ssp uwtable
define internal %struct.aom_image* @encoder_get_preview(%struct.aom_codec_alg_priv*) #0 {
  %2 = alloca %struct.yv12_buffer_config, align 8
  %3 = bitcast %struct.yv12_buffer_config* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %3) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 -86, i64 208, i1 false)
  %4 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 7
  %5 = load %struct.AV1_PRIMARY*, %struct.AV1_PRIMARY** %4, align 8
  %6 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %5, i64 0, i32 0
  %7 = load %struct.AV1_COMP*, %struct.AV1_COMP** %6, align 8
  %8 = call i32 @av1_get_preview_raw_frame(%struct.AV1_COMP* %7, %struct.yv12_buffer_config* nonnull %2) #9
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 11
  call fastcc void @yuvconfig2image(%struct.aom_image* %11, %struct.yv12_buffer_config* nonnull %2)
  br label %12

12:                                               ; preds = %1, %10
  %13 = phi %struct.aom_image* [ %11, %10 ], [ null, %1 ]
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %3) #9
  ret %struct.aom_image* %13
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @encoder_set_option(%struct.aom_codec_alg_priv*, i8*, i8*) #0 {
  %4 = alloca %struct.av1_extracfg, align 8
  %5 = alloca [2 x i8*], align 16
  %6 = alloca %struct.arg, align 8
  %7 = icmp eq %struct.aom_codec_alg_priv* %0, null
  %8 = icmp eq i8* %1, null
  %9 = or i1 %7, %8
  %10 = icmp eq i8* %2, null
  %11 = or i1 %9, %10
  br i1 %11, label %663, label %12

12:                                               ; preds = %3
  %13 = bitcast %struct.av1_extracfg* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %13) #9
  %14 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %15 = bitcast %struct.av1_extracfg* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 8 %15, i64 512, i1 false)
  %16 = bitcast [2 x i8*]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %16, i8* align 16 bitcast ([2 x i8*]* @__const.encoder_set_option.argv to i8*), i64 16, i1 false)
  %17 = tail call i64 @strlen(i8* nonnull %1) #11
  %18 = tail call i64 @strlen(i8* nonnull %2) #11
  %19 = add i64 %17, 4
  %20 = add i64 %19, %18
  %21 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 7
  %22 = load %struct.AV1_PRIMARY*, %struct.AV1_PRIMARY** %21, align 8
  %23 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %22, i64 0, i32 20, i32 2, i64 0
  %24 = tail call i8* @aom_malloc(i64 %20) #9
  %25 = getelementptr inbounds [2 x i8*], [2 x i8*]* %5, i64 0, i64 0
  store i8* %24, i8** %25, align 16
  %26 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* %24, i64 %20, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.117, i64 0, i64 0), i8* nonnull %1, i8* nonnull %2) #9
  %27 = bitcast %struct.arg* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %27) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 40, i1 false)
  %28 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 90), i8** nonnull %25, i8* %23) #9
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %12
  %31 = call i32 @arg_parse_uint_helper(%struct.arg* nonnull %6, i8* %23) #9
  %32 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 10
  store i32 %31, i32* %32, align 8
  br label %650

33:                                               ; preds = %12
  %34 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 160), i8** nonnull %25, i8* %23) #9
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %33
  %37 = call i32 @arg_parse_uint_helper(%struct.arg* nonnull %6, i8* %23) #9
  %38 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 13
  store i32 %37, i32* %38, align 4
  br label %650

39:                                               ; preds = %33
  %40 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 161), i8** nonnull %25, i8* %23) #9
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %45, label %42

42:                                               ; preds = %39
  %43 = call i32 @arg_parse_uint_helper(%struct.arg* nonnull %6, i8* %23) #9
  %44 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 14
  store i32 %43, i32* %44, align 8
  br label %650

45:                                               ; preds = %39
  %46 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 162), i8** nonnull %25, i8* %23) #9
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %51, label %48

48:                                               ; preds = %45
  %49 = call i32 @arg_parse_uint_helper(%struct.arg* nonnull %6, i8* %23) #9
  %50 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 15
  store i32 %49, i32* %50, align 4
  br label %650

51:                                               ; preds = %45
  %52 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 163), i8** nonnull %25, i8* %23) #9
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %57, label %54

54:                                               ; preds = %51
  %55 = call i32 @arg_parse_uint_helper(%struct.arg* nonnull %6, i8* %23) #9
  %56 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 16
  store i32 %55, i32* %56, align 8
  br label %650

57:                                               ; preds = %51
  %58 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 85), i8** nonnull %25, i8* %23) #9
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %63, label %60

60:                                               ; preds = %57
  %61 = call i32 @arg_parse_uint_helper(%struct.arg* nonnull %6, i8* %23) #9
  %62 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 0
  store i32 %61, i32* %62, align 8
  br label %650

63:                                               ; preds = %57
  %64 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 79), i8** nonnull %25, i8* %23) #9
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %69, label %66

66:                                               ; preds = %63
  %67 = call i32 @arg_parse_uint_helper(%struct.arg* nonnull %6, i8* %23) #9
  %68 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 1
  store i32 %67, i32* %68, align 4
  br label %650

69:                                               ; preds = %63
  %70 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 76), i8** nonnull %25, i8* %23) #9
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %75, label %72

72:                                               ; preds = %69
  %73 = call i32 @arg_parse_uint_helper(%struct.arg* nonnull %6, i8* %23) #9
  %74 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 3
  store i32 %73, i32* %74, align 4
  br label %650

75:                                               ; preds = %69
  %76 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 77), i8** nonnull %25, i8* %23) #9
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %81, label %78

78:                                               ; preds = %75
  %79 = call i32 @arg_parse_uint_helper(%struct.arg* nonnull %6, i8* %23) #9
  %80 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 4
  store i32 %79, i32* %80, align 8
  br label %650

81:                                               ; preds = %75
  %82 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 78), i8** nonnull %25, i8* %23) #9
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %87, label %84

84:                                               ; preds = %81
  %85 = call i32 @arg_parse_uint_helper(%struct.arg* nonnull %6, i8* %23) #9
  %86 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 5
  store i32 %85, i32* %86, align 4
  br label %650

87:                                               ; preds = %81
  %88 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 86), i8** nonnull %25, i8* %23) #9
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %93, label %90

90:                                               ; preds = %87
  %91 = call i32 @arg_parse_uint_helper(%struct.arg* nonnull %6, i8* %23) #9
  %92 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 6
  store i32 %91, i32* %92, align 8
  br label %650

93:                                               ; preds = %87
  %94 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 87), i8** nonnull %25, i8* %23) #9
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %99, label %96

96:                                               ; preds = %93
  %97 = call i32 @arg_parse_uint_helper(%struct.arg* nonnull %6, i8* %23) #9
  %98 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 7
  store i32 %97, i32* %98, align 4
  br label %650

99:                                               ; preds = %93
  %100 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 88), i8** nonnull %25, i8* %23) #9
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %105, label %102

102:                                              ; preds = %99
  %103 = call i32 @arg_parse_uint_helper(%struct.arg* nonnull %6, i8* %23) #9
  %104 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 8
  store i32 %103, i32* %104, align 8
  br label %650

105:                                              ; preds = %99
  %106 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 89), i8** nonnull %25, i8* %23) #9
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %111, label %108

108:                                              ; preds = %105
  %109 = call i32 @arg_parse_uint_helper(%struct.arg* nonnull %6, i8* %23) #9
  %110 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 9
  store i32 %109, i32* %110, align 4
  br label %650

111:                                              ; preds = %105
  %112 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 80), i8** nonnull %25, i8* %23) #9
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %117, label %114

114:                                              ; preds = %111
  %115 = call i32 @arg_parse_uint_helper(%struct.arg* nonnull %6, i8* %23) #9
  %116 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 11
  store i32 %115, i32* %116, align 4
  br label %650

117:                                              ; preds = %111
  %118 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 81), i8** nonnull %25, i8* %23) #9
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %123, label %120

120:                                              ; preds = %117
  %121 = call i32 @arg_parse_uint_helper(%struct.arg* nonnull %6, i8* %23) #9
  %122 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 12
  store i32 %121, i32* %122, align 8
  br label %650

123:                                              ; preds = %117
  %124 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 82), i8** nonnull %25, i8* %23) #9
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %129, label %126

126:                                              ; preds = %123
  %127 = call i32 @arg_parse_enum_helper(%struct.arg* nonnull %6, i8* %23) #9
  %128 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 17
  store i32 %127, i32* %128, align 4
  br label %650

129:                                              ; preds = %123
  %130 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 145), i8** nonnull %25, i8* %23) #9
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %134, label %132

132:                                              ; preds = %129
  %133 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 19
  store i8* %2, i8** %133, align 8
  br label %650

134:                                              ; preds = %129
  %135 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 83), i8** nonnull %25, i8* %23) #9
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %140, label %137

137:                                              ; preds = %134
  %138 = call i32 @arg_parse_uint_helper(%struct.arg* nonnull %6, i8* %23) #9
  %139 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 20
  store i32 %138, i32* %139, align 8
  br label %650

140:                                              ; preds = %134
  %141 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 84), i8** nonnull %25, i8* %23) #9
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %146, label %143

143:                                              ; preds = %140
  %144 = call i32 @arg_parse_uint_helper(%struct.arg* nonnull %6, i8* %23) #9
  %145 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 21
  store i32 %144, i32* %145, align 4
  br label %650

146:                                              ; preds = %140
  %147 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 159), i8** nonnull %25, i8* %23) #9
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %152, label %149

149:                                              ; preds = %146
  %150 = call i32 @arg_parse_uint_helper(%struct.arg* nonnull %6, i8* %23) #9
  %151 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 22
  store i32 %150, i32* %151, align 8
  br label %650

152:                                              ; preds = %146
  %153 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 158), i8** nonnull %25, i8* %23) #9
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %158, label %155

155:                                              ; preds = %152
  %156 = call i32 @arg_parse_uint_helper(%struct.arg* nonnull %6, i8* %23) #9
  %157 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 23
  store i32 %156, i32* %157, align 4
  br label %650

158:                                              ; preds = %152
  %159 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 93), i8** nonnull %25, i8* %23) #9
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %164, label %161

161:                                              ; preds = %158
  %162 = call i32 @arg_parse_uint_helper(%struct.arg* nonnull %6, i8* %23) #9
  %163 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 24
  store i32 %162, i32* %163, align 8
  br label %650

164:                                              ; preds = %158
  %165 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 94), i8** nonnull %25, i8* %23) #9
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %170, label %167

167:                                              ; preds = %164
  %168 = call i32 @arg_parse_uint_helper(%struct.arg* nonnull %6, i8* %23) #9
  %169 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 25
  store i32 %168, i32* %169, align 4
  br label %650

170:                                              ; preds = %164
  %171 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 95), i8** nonnull %25, i8* %23) #9
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %176, label %173

173:                                              ; preds = %170
  %174 = call i32 @arg_parse_uint_helper(%struct.arg* nonnull %6, i8* %23) #9
  %175 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 26
  store i32 %174, i32* %175, align 8
  br label %650

176:                                              ; preds = %170
  %177 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 123), i8** nonnull %25, i8* %23) #9
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %182, label %179

179:                                              ; preds = %176
  %180 = call i32 @arg_parse_uint_helper(%struct.arg* nonnull %6, i8* %23) #9
  %181 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 27
  store i32 %180, i32* %181, align 4
  br label %650

182:                                              ; preds = %176
  %183 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 124), i8** nonnull %25, i8* %23) #9
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %188, label %185

185:                                              ; preds = %182
  %186 = call i32 @arg_parse_uint_helper(%struct.arg* nonnull %6, i8* %23) #9
  %187 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 28
  store i32 %186, i32* %187, align 8
  br label %650

188:                                              ; preds = %182
  %189 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 129), i8** nonnull %25, i8* %23) #9
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %194, label %191

191:                                              ; preds = %188
  %192 = call i32 @arg_parse_uint_helper(%struct.arg* nonnull %6, i8* %23) #9
  %193 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 29
  store i32 %192, i32* %193, align 4
  br label %650

194:                                              ; preds = %188
  %195 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 130), i8** nonnull %25, i8* %23) #9
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %200, label %197

197:                                              ; preds = %194
  %198 = call i32 @arg_parse_uint_helper(%struct.arg* nonnull %6, i8* %23) #9
  %199 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 30
  store i32 %198, i32* %199, align 8
  br label %650

200:                                              ; preds = %194
  %201 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 132), i8** nonnull %25, i8* %23) #9
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %206, label %203

203:                                              ; preds = %200
  %204 = call i32 @arg_parse_uint_helper(%struct.arg* nonnull %6, i8* %23) #9
  %205 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 35
  store i32 %204, i32* %205, align 4
  br label %650

206:                                              ; preds = %200
  %207 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 131), i8** nonnull %25, i8* %23) #9
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %212, label %209

209:                                              ; preds = %206
  %210 = call i32 @arg_parse_uint_helper(%struct.arg* nonnull %6, i8* %23) #9
  %211 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 34
  store i32 %210, i32* %211, align 8
  br label %650

212:                                              ; preds = %206
  %213 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 142), i8** nonnull %25, i8* %23) #9
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %218, label %215

215:                                              ; preds = %212
  %216 = call i32 @arg_parse_uint_helper(%struct.arg* nonnull %6, i8* %23) #9
  %217 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 36
  store i32 %216, i32* %217, align 8
  br label %650

218:                                              ; preds = %212
  %219 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 143), i8** nonnull %25, i8* %23) #9
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %224, label %221

221:                                              ; preds = %218
  %222 = call i32 @arg_parse_uint_helper(%struct.arg* nonnull %6, i8* %23) #9
  %223 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 37
  store i32 %222, i32* %223, align 4
  br label %650

224:                                              ; preds = %218
  %225 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 144), i8** nonnull %25, i8* %23) #9
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %230, label %227

227:                                              ; preds = %224
  %228 = call i32 @arg_parse_enum_helper(%struct.arg* nonnull %6, i8* %23) #9
  %229 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 38
  store i32 %228, i32* %229, align 8
  br label %650

230:                                              ; preds = %224
  %231 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 152), i8** nonnull %25, i8* %23) #9
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %236, label %233

233:                                              ; preds = %230
  %234 = call i32 @arg_parse_uint_helper(%struct.arg* nonnull %6, i8* %23) #9
  %235 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 39
  store i32 %234, i32* %235, align 4
  br label %650

236:                                              ; preds = %230
  %237 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 101), i8** nonnull %25, i8* %23) #9
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %242, label %239

239:                                              ; preds = %236
  %240 = call i32 @arg_parse_uint_helper(%struct.arg* nonnull %6, i8* %23) #9
  %241 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 40
  store i32 %240, i32* %241, align 8
  br label %650

242:                                              ; preds = %236
  %243 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 102), i8** nonnull %25, i8* %23) #9
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %248, label %245

245:                                              ; preds = %242
  %246 = call i32 @arg_parse_uint_helper(%struct.arg* nonnull %6, i8* %23) #9
  %247 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 41
  store i32 %246, i32* %247, align 4
  br label %650

248:                                              ; preds = %242
  %249 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 154), i8** nonnull %25, i8* %23) #9
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %255, label %251

251:                                              ; preds = %248
  %252 = call i32 @arg_parse_uint_helper(%struct.arg* nonnull %6, i8* %23) #9
  %253 = trunc i32 %252 to i8
  %254 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 42
  store i8 %253, i8* %254, align 8
  br label %650

255:                                              ; preds = %248
  %256 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 155), i8** nonnull %25, i8* %23) #9
  %257 = icmp eq i32 %256, 0
  br i1 %257, label %262, label %258

258:                                              ; preds = %255
  %259 = call i32 @arg_parse_uint_helper(%struct.arg* nonnull %6, i8* %23) #9
  %260 = trunc i32 %259 to i8
  %261 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 43
  store i8 %260, i8* %261, align 1
  br label %650

262:                                              ; preds = %255
  %263 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 156), i8** nonnull %25, i8* %23) #9
  %264 = icmp eq i32 %263, 0
  br i1 %264, label %268, label %265

265:                                              ; preds = %262
  %266 = call i32 @arg_parse_uint_helper(%struct.arg* nonnull %6, i8* %23) #9
  %267 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 44
  store i32 %266, i32* %267, align 4
  br label %650

268:                                              ; preds = %262
  %269 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 157), i8** nonnull %25, i8* %23) #9
  %270 = icmp eq i32 %269, 0
  br i1 %270, label %274, label %271

271:                                              ; preds = %268
  %272 = call i32 @arg_parse_uint_helper(%struct.arg* nonnull %6, i8* %23) #9
  %273 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 45
  store i32 %272, i32* %273, align 8
  br label %650

274:                                              ; preds = %268
  %275 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 172), i8** nonnull %25, i8* %23) #9
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %280, label %277

277:                                              ; preds = %274
  %278 = call i32 @arg_parse_enum_helper(%struct.arg* nonnull %6, i8* %23) #9
  %279 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 47
  store i32 %278, i32* %279, align 8
  br label %650

280:                                              ; preds = %274
  %281 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 168), i8** nonnull %25, i8* %23) #9
  %282 = icmp eq i32 %281, 0
  br i1 %282, label %286, label %283

283:                                              ; preds = %280
  %284 = call i32 @arg_parse_enum_helper(%struct.arg* nonnull %6, i8* %23) #9
  %285 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 48
  store i32 %284, i32* %285, align 4
  br label %650

286:                                              ; preds = %280
  %287 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 169), i8** nonnull %25, i8* %23) #9
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %292, label %289

289:                                              ; preds = %286
  %290 = call i32 @arg_parse_enum_helper(%struct.arg* nonnull %6, i8* %23) #9
  %291 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 49
  store i32 %290, i32* %291, align 8
  br label %650

292:                                              ; preds = %286
  %293 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 170), i8** nonnull %25, i8* %23) #9
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %298, label %295

295:                                              ; preds = %292
  %296 = call i32 @arg_parse_enum_helper(%struct.arg* nonnull %6, i8* %23) #9
  %297 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 50
  store i32 %296, i32* %297, align 4
  br label %650

298:                                              ; preds = %292
  %299 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 171), i8** nonnull %25, i8* %23) #9
  %300 = icmp eq i32 %299, 0
  br i1 %300, label %304, label %301

301:                                              ; preds = %298
  %302 = call i32 @arg_parse_enum_helper(%struct.arg* nonnull %6, i8* %23) #9
  %303 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 51
  store i32 %302, i32* %303, align 8
  br label %650

304:                                              ; preds = %298
  %305 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 174), i8** nonnull %25, i8* %23) #9
  %306 = icmp eq i32 %305, 0
  br i1 %306, label %310, label %307

307:                                              ; preds = %304
  %308 = call i32 @arg_parse_enum_helper(%struct.arg* nonnull %6, i8* %23) #9
  %309 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 55
  store i32 %308, i32* %309, align 8
  br label %650

310:                                              ; preds = %304
  %311 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 153), i8** nonnull %25, i8* %23) #9
  %312 = icmp eq i32 %311, 0
  br i1 %312, label %316, label %313

313:                                              ; preds = %310
  %314 = call i32 @arg_parse_int_helper(%struct.arg* nonnull %6, i8* %23) #9
  %315 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 57
  store i32 %314, i32* %315, align 8
  br label %650

316:                                              ; preds = %310
  %317 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 74), i8** nonnull %25, i8* %23) #9
  %318 = icmp eq i32 %317, 0
  br i1 %318, label %322, label %319

319:                                              ; preds = %316
  %320 = call i32 @arg_parse_int_helper(%struct.arg* nonnull %6, i8* %23) #9
  %321 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 58
  store i32 %320, i32* %321, align 4
  br label %650

322:                                              ; preds = %316
  %323 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 146), i8** nonnull %25, i8* %23) #9
  %324 = icmp eq i32 %323, 0
  br i1 %324, label %328, label %325

325:                                              ; preds = %322
  %326 = call i32 @arg_parse_int_helper(%struct.arg* nonnull %6, i8* %23) #9
  %327 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 59
  store i32 %326, i32* %327, align 8
  br label %650

328:                                              ; preds = %322
  %329 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 147), i8** nonnull %25, i8* %23) #9
  %330 = icmp eq i32 %329, 0
  br i1 %330, label %333, label %331

331:                                              ; preds = %328
  %332 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 60
  store i8* %2, i8** %332, align 8
  br label %650

333:                                              ; preds = %328
  %334 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 173), i8** nonnull %25, i8* %23) #9
  %335 = icmp eq i32 %334, 0
  br i1 %335, label %339, label %336

336:                                              ; preds = %333
  %337 = call i32 @arg_parse_int_helper(%struct.arg* nonnull %6, i8* %23) #9
  %338 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 62
  store i32 %337, i32* %338, align 4
  br label %650

339:                                              ; preds = %333
  %340 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 96), i8** nonnull %25, i8* %23) #9
  %341 = icmp eq i32 %340, 0
  br i1 %341, label %345, label %342

342:                                              ; preds = %339
  %343 = call i32 @arg_parse_int_helper(%struct.arg* nonnull %6, i8* %23) #9
  %344 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 63
  store i32 %343, i32* %344, align 8
  br label %650

345:                                              ; preds = %339
  %346 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 97), i8** nonnull %25, i8* %23) #9
  %347 = icmp eq i32 %346, 0
  br i1 %347, label %351, label %348

348:                                              ; preds = %345
  %349 = call i32 @arg_parse_int_helper(%struct.arg* nonnull %6, i8* %23) #9
  %350 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 64
  store i32 %349, i32* %350, align 4
  br label %650

351:                                              ; preds = %345
  %352 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 98), i8** nonnull %25, i8* %23) #9
  %353 = icmp eq i32 %352, 0
  br i1 %353, label %357, label %354

354:                                              ; preds = %351
  %355 = call i32 @arg_parse_int_helper(%struct.arg* nonnull %6, i8* %23) #9
  %356 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 65
  store i32 %355, i32* %356, align 8
  br label %650

357:                                              ; preds = %351
  %358 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 99), i8** nonnull %25, i8* %23) #9
  %359 = icmp eq i32 %358, 0
  br i1 %359, label %363, label %360

360:                                              ; preds = %357
  %361 = call i32 @arg_parse_int_helper(%struct.arg* nonnull %6, i8* %23) #9
  %362 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 66
  store i32 %361, i32* %362, align 4
  br label %650

363:                                              ; preds = %357
  %364 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 100), i8** nonnull %25, i8* %23) #9
  %365 = icmp eq i32 %364, 0
  br i1 %365, label %369, label %366

366:                                              ; preds = %363
  %367 = call i32 @arg_parse_int_helper(%struct.arg* nonnull %6, i8* %23) #9
  %368 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 67
  store i32 %367, i32* %368, align 8
  br label %650

369:                                              ; preds = %363
  %370 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 103), i8** nonnull %25, i8* %23) #9
  %371 = icmp eq i32 %370, 0
  br i1 %371, label %375, label %372

372:                                              ; preds = %369
  %373 = call i32 @arg_parse_uint_helper(%struct.arg* nonnull %6, i8* %23) #9
  %374 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 68
  store i32 %373, i32* %374, align 4
  br label %650

375:                                              ; preds = %369
  %376 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 104), i8** nonnull %25, i8* %23) #9
  %377 = icmp eq i32 %376, 0
  br i1 %377, label %381, label %378

378:                                              ; preds = %375
  %379 = call i32 @arg_parse_int_helper(%struct.arg* nonnull %6, i8* %23) #9
  %380 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 69
  store i32 %379, i32* %380, align 8
  br label %650

381:                                              ; preds = %375
  %382 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 105), i8** nonnull %25, i8* %23) #9
  %383 = icmp eq i32 %382, 0
  br i1 %383, label %387, label %384

384:                                              ; preds = %381
  %385 = call i32 @arg_parse_int_helper(%struct.arg* nonnull %6, i8* %23) #9
  %386 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 70
  store i32 %385, i32* %386, align 4
  br label %650

387:                                              ; preds = %381
  %388 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 106), i8** nonnull %25, i8* %23) #9
  %389 = icmp eq i32 %388, 0
  br i1 %389, label %393, label %390

390:                                              ; preds = %387
  %391 = call i32 @arg_parse_int_helper(%struct.arg* nonnull %6, i8* %23) #9
  %392 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 71
  store i32 %391, i32* %392, align 8
  br label %650

393:                                              ; preds = %387
  %394 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 107), i8** nonnull %25, i8* %23) #9
  %395 = icmp eq i32 %394, 0
  br i1 %395, label %399, label %396

396:                                              ; preds = %393
  %397 = call i32 @arg_parse_int_helper(%struct.arg* nonnull %6, i8* %23) #9
  %398 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 72
  store i32 %397, i32* %398, align 4
  br label %650

399:                                              ; preds = %393
  %400 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 108), i8** nonnull %25, i8* %23) #9
  %401 = icmp eq i32 %400, 0
  br i1 %401, label %405, label %402

402:                                              ; preds = %399
  %403 = call i32 @arg_parse_int_helper(%struct.arg* nonnull %6, i8* %23) #9
  %404 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 73
  store i32 %403, i32* %404, align 8
  br label %650

405:                                              ; preds = %399
  %406 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 164), i8** nonnull %25, i8* %23) #9
  %407 = icmp eq i32 %406, 0
  br i1 %407, label %411, label %408

408:                                              ; preds = %405
  %409 = call i32 @arg_parse_int_helper(%struct.arg* nonnull %6, i8* %23) #9
  %410 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 74
  store i32 %409, i32* %410, align 4
  br label %650

411:                                              ; preds = %405
  %412 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 165), i8** nonnull %25, i8* %23) #9
  %413 = icmp eq i32 %412, 0
  br i1 %413, label %417, label %414

414:                                              ; preds = %411
  %415 = call i32 @arg_parse_int_helper(%struct.arg* nonnull %6, i8* %23) #9
  %416 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 75
  store i32 %415, i32* %416, align 8
  br label %650

417:                                              ; preds = %411
  %418 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 151), i8** nonnull %25, i8* %23) #9
  %419 = icmp eq i32 %418, 0
  br i1 %419, label %423, label %420

420:                                              ; preds = %417
  %421 = call i32 @arg_parse_int_helper(%struct.arg* nonnull %6, i8* %23) #9
  %422 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 76
  store i32 %421, i32* %422, align 4
  br label %650

423:                                              ; preds = %417
  %424 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 109), i8** nonnull %25, i8* %23) #9
  %425 = icmp eq i32 %424, 0
  br i1 %425, label %429, label %426

426:                                              ; preds = %423
  %427 = call i32 @arg_parse_int_helper(%struct.arg* nonnull %6, i8* %23) #9
  %428 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 78
  store i32 %427, i32* %428, align 4
  br label %650

429:                                              ; preds = %423
  %430 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 110), i8** nonnull %25, i8* %23) #9
  %431 = icmp eq i32 %430, 0
  br i1 %431, label %435, label %432

432:                                              ; preds = %429
  %433 = call i32 @arg_parse_int_helper(%struct.arg* nonnull %6, i8* %23) #9
  %434 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 79
  store i32 %433, i32* %434, align 8
  br label %650

435:                                              ; preds = %429
  %436 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 111), i8** nonnull %25, i8* %23) #9
  %437 = icmp eq i32 %436, 0
  br i1 %437, label %441, label %438

438:                                              ; preds = %435
  %439 = call i32 @arg_parse_int_helper(%struct.arg* nonnull %6, i8* %23) #9
  %440 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 80
  store i32 %439, i32* %440, align 4
  br label %650

441:                                              ; preds = %435
  %442 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 112), i8** nonnull %25, i8* %23) #9
  %443 = icmp eq i32 %442, 0
  br i1 %443, label %447, label %444

444:                                              ; preds = %441
  %445 = call i32 @arg_parse_int_helper(%struct.arg* nonnull %6, i8* %23) #9
  %446 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 81
  store i32 %445, i32* %446, align 8
  br label %650

447:                                              ; preds = %441
  %448 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 113), i8** nonnull %25, i8* %23) #9
  %449 = icmp eq i32 %448, 0
  br i1 %449, label %453, label %450

450:                                              ; preds = %447
  %451 = call i32 @arg_parse_int_helper(%struct.arg* nonnull %6, i8* %23) #9
  %452 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 82
  store i32 %451, i32* %452, align 4
  br label %650

453:                                              ; preds = %447
  %454 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 114), i8** nonnull %25, i8* %23) #9
  %455 = icmp eq i32 %454, 0
  br i1 %455, label %459, label %456

456:                                              ; preds = %453
  %457 = call i32 @arg_parse_int_helper(%struct.arg* nonnull %6, i8* %23) #9
  %458 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 83
  store i32 %457, i32* %458, align 8
  br label %650

459:                                              ; preds = %453
  %460 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 115), i8** nonnull %25, i8* %23) #9
  %461 = icmp eq i32 %460, 0
  br i1 %461, label %465, label %462

462:                                              ; preds = %459
  %463 = call i32 @arg_parse_int_helper(%struct.arg* nonnull %6, i8* %23) #9
  %464 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 84
  store i32 %463, i32* %464, align 4
  br label %650

465:                                              ; preds = %459
  %466 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 116), i8** nonnull %25, i8* %23) #9
  %467 = icmp eq i32 %466, 0
  br i1 %467, label %471, label %468

468:                                              ; preds = %465
  %469 = call i32 @arg_parse_int_helper(%struct.arg* nonnull %6, i8* %23) #9
  %470 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 85
  store i32 %469, i32* %470, align 8
  br label %650

471:                                              ; preds = %465
  %472 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 117), i8** nonnull %25, i8* %23) #9
  %473 = icmp eq i32 %472, 0
  br i1 %473, label %477, label %474

474:                                              ; preds = %471
  %475 = call i32 @arg_parse_int_helper(%struct.arg* nonnull %6, i8* %23) #9
  %476 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 86
  store i32 %475, i32* %476, align 4
  br label %650

477:                                              ; preds = %471
  %478 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 118), i8** nonnull %25, i8* %23) #9
  %479 = icmp eq i32 %478, 0
  br i1 %479, label %483, label %480

480:                                              ; preds = %477
  %481 = call i32 @arg_parse_int_helper(%struct.arg* nonnull %6, i8* %23) #9
  %482 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 88
  store i32 %481, i32* %482, align 4
  br label %650

483:                                              ; preds = %477
  %484 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 119), i8** nonnull %25, i8* %23) #9
  %485 = icmp eq i32 %484, 0
  br i1 %485, label %489, label %486

486:                                              ; preds = %483
  %487 = call i32 @arg_parse_int_helper(%struct.arg* nonnull %6, i8* %23) #9
  %488 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 89
  store i32 %487, i32* %488, align 8
  br label %650

489:                                              ; preds = %483
  %490 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 120), i8** nonnull %25, i8* %23) #9
  %491 = icmp eq i32 %490, 0
  br i1 %491, label %495, label %492

492:                                              ; preds = %489
  %493 = call i32 @arg_parse_int_helper(%struct.arg* nonnull %6, i8* %23) #9
  %494 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 90
  store i32 %493, i32* %494, align 4
  br label %650

495:                                              ; preds = %489
  %496 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 121), i8** nonnull %25, i8* %23) #9
  %497 = icmp eq i32 %496, 0
  br i1 %497, label %501, label %498

498:                                              ; preds = %495
  %499 = call i32 @arg_parse_int_helper(%struct.arg* nonnull %6, i8* %23) #9
  %500 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 91
  store i32 %499, i32* %500, align 8
  br label %650

501:                                              ; preds = %495
  %502 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 122), i8** nonnull %25, i8* %23) #9
  %503 = icmp eq i32 %502, 0
  br i1 %503, label %507, label %504

504:                                              ; preds = %501
  %505 = call i32 @arg_parse_int_helper(%struct.arg* nonnull %6, i8* %23) #9
  %506 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 92
  store i32 %505, i32* %506, align 4
  br label %650

507:                                              ; preds = %501
  %508 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 125), i8** nonnull %25, i8* %23) #9
  %509 = icmp eq i32 %508, 0
  br i1 %509, label %513, label %510

510:                                              ; preds = %507
  %511 = call i32 @arg_parse_int_helper(%struct.arg* nonnull %6, i8* %23) #9
  %512 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 94
  store i32 %511, i32* %512, align 4
  br label %650

513:                                              ; preds = %507
  %514 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 126), i8** nonnull %25, i8* %23) #9
  %515 = icmp eq i32 %514, 0
  br i1 %515, label %519, label %516

516:                                              ; preds = %513
  %517 = call i32 @arg_parse_int_helper(%struct.arg* nonnull %6, i8* %23) #9
  %518 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 95
  store i32 %517, i32* %518, align 8
  br label %650

519:                                              ; preds = %513
  %520 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 127), i8** nonnull %25, i8* %23) #9
  %521 = icmp eq i32 %520, 0
  br i1 %521, label %525, label %522

522:                                              ; preds = %519
  %523 = call i32 @arg_parse_int_helper(%struct.arg* nonnull %6, i8* %23) #9
  %524 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 96
  store i32 %523, i32* %524, align 4
  br label %650

525:                                              ; preds = %519
  %526 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 128), i8** nonnull %25, i8* %23) #9
  %527 = icmp eq i32 %526, 0
  br i1 %527, label %531, label %528

528:                                              ; preds = %525
  %529 = call i32 @arg_parse_int_helper(%struct.arg* nonnull %6, i8* %23) #9
  %530 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 97
  store i32 %529, i32* %530, align 8
  br label %650

531:                                              ; preds = %525
  %532 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 133), i8** nonnull %25, i8* %23) #9
  %533 = icmp eq i32 %532, 0
  br i1 %533, label %537, label %534

534:                                              ; preds = %531
  %535 = call i32 @arg_parse_int_helper(%struct.arg* nonnull %6, i8* %23) #9
  %536 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 103
  store i32 %535, i32* %536, align 8
  br label %650

537:                                              ; preds = %531
  %538 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 134), i8** nonnull %25, i8* %23) #9
  %539 = icmp eq i32 %538, 0
  br i1 %539, label %543, label %540

540:                                              ; preds = %537
  %541 = call i32 @arg_parse_int_helper(%struct.arg* nonnull %6, i8* %23) #9
  %542 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 104
  store i32 %541, i32* %542, align 4
  br label %650

543:                                              ; preds = %537
  %544 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 135), i8** nonnull %25, i8* %23) #9
  %545 = icmp eq i32 %544, 0
  br i1 %545, label %549, label %546

546:                                              ; preds = %543
  %547 = call i32 @arg_parse_int_helper(%struct.arg* nonnull %6, i8* %23) #9
  %548 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 105
  store i32 %547, i32* %548, align 8
  br label %650

549:                                              ; preds = %543
  %550 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 136), i8** nonnull %25, i8* %23) #9
  %551 = icmp eq i32 %550, 0
  br i1 %551, label %555, label %552

552:                                              ; preds = %549
  %553 = call i32 @arg_parse_int_helper(%struct.arg* nonnull %6, i8* %23) #9
  %554 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 106
  store i32 %553, i32* %554, align 4
  br label %650

555:                                              ; preds = %549
  %556 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 137), i8** nonnull %25, i8* %23) #9
  %557 = icmp eq i32 %556, 0
  br i1 %557, label %561, label %558

558:                                              ; preds = %555
  %559 = call i32 @arg_parse_int_helper(%struct.arg* nonnull %6, i8* %23) #9
  %560 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 107
  store i32 %559, i32* %560, align 8
  br label %650

561:                                              ; preds = %555
  %562 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 178), i8** nonnull %25, i8* %23) #9
  %563 = icmp eq i32 %562, 0
  br i1 %563, label %567, label %564

564:                                              ; preds = %561
  %565 = call i32 @arg_parse_uint_helper(%struct.arg* nonnull %6, i8* %23) #9
  %566 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 108
  store i32 %565, i32* %566, align 4
  br label %650

567:                                              ; preds = %561
  %568 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 175), i8** nonnull %25, i8* %23) #9
  %569 = icmp eq i32 %568, 0
  br i1 %569, label %573, label %570

570:                                              ; preds = %567
  %571 = call i32 @arg_parse_uint_helper(%struct.arg* nonnull %6, i8* %23) #9
  %572 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 110
  store i32 %571, i32* %572, align 8
  br label %650

573:                                              ; preds = %567
  %574 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 167), i8** nonnull %25, i8* %23) #9
  %575 = icmp eq i32 %574, 0
  br i1 %575, label %579, label %576

576:                                              ; preds = %573
  %577 = call i32 @arg_parse_uint_helper(%struct.arg* nonnull %6, i8* %23) #9
  %578 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 111
  store i32 %577, i32* %578, align 4
  br label %650

579:                                              ; preds = %573
  %580 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 138), i8** nonnull %25, i8* %23) #9
  %581 = icmp eq i32 %580, 0
  br i1 %581, label %585, label %582

582:                                              ; preds = %579
  %583 = call i32 @arg_parse_uint_helper(%struct.arg* nonnull %6, i8* %23) #9
  %584 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 112
  store i32 %583, i32* %584, align 8
  br label %650

585:                                              ; preds = %579
  %586 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 139), i8** nonnull %25, i8* %23) #9
  %587 = icmp eq i32 %586, 0
  br i1 %587, label %591, label %588

588:                                              ; preds = %585
  %589 = call i32 @arg_parse_uint_helper(%struct.arg* nonnull %6, i8* %23) #9
  %590 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 113
  store i32 %589, i32* %590, align 4
  br label %650

591:                                              ; preds = %585
  %592 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 140), i8** nonnull %25, i8* %23) #9
  %593 = icmp eq i32 %592, 0
  br i1 %593, label %597, label %594

594:                                              ; preds = %591
  %595 = call i32 @arg_parse_uint_helper(%struct.arg* nonnull %6, i8* %23) #9
  %596 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 114
  store i32 %595, i32* %596, align 8
  br label %650

597:                                              ; preds = %591
  %598 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 141), i8** nonnull %25, i8* %23) #9
  %599 = icmp eq i32 %598, 0
  br i1 %599, label %603, label %600

600:                                              ; preds = %597
  %601 = call i32 @arg_parse_uint_helper(%struct.arg* nonnull %6, i8* %23) #9
  %602 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 115
  store i32 %601, i32* %602, align 4
  br label %650

603:                                              ; preds = %597
  %604 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 148), i8** nonnull %25, i8* %23) #9
  %605 = icmp eq i32 %604, 0
  br i1 %605, label %611, label %606

606:                                              ; preds = %603
  %607 = call i32 @arg_parse_int_helper(%struct.arg* nonnull %6, i8* %23) #9
  %608 = sitofp i32 %607 to float
  %609 = fdiv float %608, 1.000000e+01
  %610 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 98
  store float %609, float* %610, align 4
  br label %650

611:                                              ; preds = %603
  %612 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 149), i8** nonnull %25, i8* %23) #9
  %613 = icmp eq i32 %612, 0
  br i1 %613, label %617, label %614

614:                                              ; preds = %611
  %615 = call i32 @arg_parse_uint_helper(%struct.arg* nonnull %6, i8* %23) #9
  %616 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 99
  store i32 %615, i32* %616, align 8
  br label %650

617:                                              ; preds = %611
  %618 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 150), i8** nonnull %25, i8* %23) #9
  %619 = icmp eq i32 %618, 0
  br i1 %619, label %623, label %620

620:                                              ; preds = %617
  %621 = call i32 @arg_parse_uint_helper(%struct.arg* nonnull %6, i8* %23) #9
  %622 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 100
  store i32 %621, i32* %622, align 4
  br label %650

623:                                              ; preds = %617
  %624 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 166), i8** nonnull %25, i8* %23) #9
  %625 = icmp eq i32 %624, 0
  br i1 %625, label %636, label %626

626:                                              ; preds = %623
  %627 = call i32 @arg_parse_int_helper(%struct.arg* nonnull %6, i8* %23) #9
  %628 = add i32 %627, 99
  %629 = icmp ult i32 %628, 3299
  br i1 %629, label %630, label %650

630:                                              ; preds = %626
  %631 = sdiv i32 %627, 100
  %632 = srem i32 %627, 100
  %633 = trunc i32 %632 to i8
  %634 = sext i32 %631 to i64
  %635 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 109, i64 %634
  store i8 %633, i8* %635, align 1
  br label %650

636:                                              ; preds = %623
  %637 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 31), i8** nonnull %25, i8* %23) #9
  %638 = icmp eq i32 %637, 0
  br i1 %638, label %642, label %639

639:                                              ; preds = %636
  %640 = call i32 @arg_parse_uint_helper(%struct.arg* nonnull %6, i8* %23) #9
  %641 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 101
  store i32 %640, i32* %641, align 8
  br label %650

642:                                              ; preds = %636
  %643 = call i32 @arg_match_helper(%struct.arg* nonnull %6, %struct.arg_def* getelementptr inbounds (%struct.av1_codec_arg_definitions, %struct.av1_codec_arg_definitions* @g_av1_codec_arg_defs, i64 0, i32 32), i8** nonnull %25, i8* %23) #9
  %644 = icmp eq i32 %643, 0
  br i1 %644, label %648, label %645

645:                                              ; preds = %642
  %646 = call i32 @arg_parse_uint_helper(%struct.arg* nonnull %6, i8* %23) #9
  %647 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %4, i64 0, i32 102
  store i32 %646, i32* %647, align 4
  br label %650

648:                                              ; preds = %642
  %649 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %23, i64 200, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.118, i64 0, i64 0), i8* nonnull %1) #9
  br label %650

650:                                              ; preds = %626, %630, %36, %48, %60, %72, %84, %96, %108, %120, %132, %143, %155, %167, %179, %191, %203, %215, %227, %239, %251, %265, %277, %289, %301, %313, %325, %336, %348, %360, %372, %384, %396, %408, %420, %432, %444, %456, %468, %480, %492, %504, %516, %528, %540, %552, %564, %576, %588, %600, %614, %645, %648, %639, %620, %606, %594, %582, %570, %558, %546, %534, %522, %510, %498, %486, %474, %462, %450, %438, %426, %414, %402, %390, %378, %366, %354, %342, %331, %319, %307, %295, %283, %271, %258, %245, %233, %221, %209, %197, %185, %173, %161, %149, %137, %126, %114, %102, %90, %78, %66, %54, %42, %30
  %651 = phi i32 [ 1, %30 ], [ 1, %36 ], [ 1, %42 ], [ 1, %48 ], [ 1, %54 ], [ 1, %60 ], [ 1, %66 ], [ 1, %72 ], [ 1, %78 ], [ 1, %84 ], [ 1, %90 ], [ 1, %96 ], [ 1, %102 ], [ 1, %108 ], [ 1, %114 ], [ 1, %120 ], [ 1, %126 ], [ 1, %132 ], [ 1, %137 ], [ 1, %143 ], [ 1, %149 ], [ 1, %155 ], [ 1, %161 ], [ 1, %167 ], [ 1, %173 ], [ 1, %179 ], [ 1, %185 ], [ 1, %191 ], [ 1, %197 ], [ 1, %203 ], [ 1, %209 ], [ 1, %215 ], [ 1, %221 ], [ 1, %227 ], [ 1, %233 ], [ 1, %239 ], [ 1, %245 ], [ 1, %251 ], [ 1, %258 ], [ 1, %265 ], [ 1, %271 ], [ 1, %277 ], [ 1, %283 ], [ 1, %289 ], [ 1, %295 ], [ 1, %301 ], [ 1, %307 ], [ 1, %313 ], [ 1, %319 ], [ 1, %325 ], [ 1, %331 ], [ 1, %336 ], [ 1, %342 ], [ 1, %348 ], [ 1, %354 ], [ 1, %360 ], [ 1, %366 ], [ 1, %372 ], [ 1, %378 ], [ 1, %384 ], [ 1, %390 ], [ 1, %396 ], [ 1, %402 ], [ 1, %408 ], [ 1, %414 ], [ 1, %420 ], [ 1, %426 ], [ 1, %432 ], [ 1, %438 ], [ 1, %444 ], [ 1, %450 ], [ 1, %456 ], [ 1, %462 ], [ 1, %468 ], [ 1, %474 ], [ 1, %480 ], [ 1, %486 ], [ 1, %492 ], [ 1, %498 ], [ 1, %504 ], [ 1, %510 ], [ 1, %516 ], [ 1, %522 ], [ 1, %528 ], [ 1, %534 ], [ 1, %540 ], [ 1, %546 ], [ 1, %552 ], [ 1, %558 ], [ 1, %564 ], [ 1, %570 ], [ 1, %576 ], [ 1, %582 ], [ 1, %588 ], [ 1, %594 ], [ 1, %600 ], [ 1, %606 ], [ 1, %614 ], [ 1, %620 ], [ 1, %639 ], [ 1, %645 ], [ 0, %648 ], [ 1, %630 ], [ 1, %626 ]
  %652 = load i8*, i8** %25, align 16
  call void @aom_free(i8* %652) #9
  %653 = call i64 @strlen(i8* %23) #11
  %654 = icmp eq i64 %653, 0
  %655 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 0, i32 0
  br i1 %654, label %657, label %656

656:                                              ; preds = %650
  store i8* %23, i8** %655, align 8
  br label %661

657:                                              ; preds = %650
  store i8* null, i8** %655, align 8
  %658 = icmp eq i32 %651, 0
  br i1 %658, label %661, label %659

659:                                              ; preds = %657
  %660 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* nonnull %0, %struct.av1_extracfg* nonnull %4)
  br label %661

661:                                              ; preds = %657, %659, %656
  %662 = phi i32 [ 8, %656 ], [ %660, %659 ], [ 8, %657 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %27) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #9
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %13) #9
  br label %663

663:                                              ; preds = %3, %661
  %664 = phi i32 [ %662, %661 ], [ 8, %3 ]
  ret i32 %664
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.aom_codec_iface* @aom_codec_av1_cx() local_unnamed_addr #1 {
  ret %struct.aom_codec_iface* bitcast ({ i8*, i32, i64, i32 (%struct.aom_codec_ctx*)*, i32 (%struct.aom_codec_alg_priv*)*, %struct.aom_codec_ctrl_fn_map*, %struct.aom_codec_dec_iface, %struct.aom_codec_enc_iface, i32 (%struct.aom_codec_alg_priv*, i8*, i8*)* }* @aom_codec_av1_cx_algo to %struct.aom_codec_iface*)
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare i8* @aom_calloc(i64, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @av1_initialize_enc() #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc i32 @validate_config(%struct.aom_codec_alg_priv*, %struct.aom_codec_enc_cfg* readonly, %struct.av1_extracfg* readonly) unnamed_addr #4 {
  %4 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = add i32 %5, -1
  %7 = icmp ult i32 %6, 65535
  br i1 %7, label %8, label %441

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 4
  %10 = load i32, i32* %9, align 8
  %11 = add i32 %10, -1
  %12 = icmp ult i32 %11, 65535
  br i1 %12, label %13, label %441

13:                                               ; preds = %8
  %14 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 10, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = add i32 %15, -1
  %17 = icmp ult i32 %16, 1000000000
  br i1 %17, label %18, label %441

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 10, i32 0
  %20 = load i32, i32* %19, align 8
  %21 = icmp slt i32 %20, 1
  %22 = icmp sgt i32 %20, %15
  %23 = or i1 %21, %22
  br i1 %23, label %441, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 2
  %26 = load i32, i32* %25, align 8
  %27 = icmp ult i32 %26, 3
  br i1 %27, label %28, label %441

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 28
  %30 = load i32, i32* %29, align 8
  %31 = icmp ult i32 %30, 64
  br i1 %31, label %32, label %441

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 27
  %34 = load i32, i32* %33, align 4
  %35 = icmp ugt i32 %34, %30
  br i1 %35, label %441, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 24
  %38 = load i32, i32* %37, align 8
  %39 = icmp ne i32 %38, 0
  %40 = zext i1 %39 to i32
  %41 = icmp eq i32 %38, %40
  br i1 %41, label %42, label %441

42:                                               ; preds = %36
  %43 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 42
  %44 = load i8, i8* %43, align 8
  %45 = icmp ult i8 %44, 4
  br i1 %45, label %46, label %441

46:                                               ; preds = %42
  %47 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 43
  %48 = load i8, i8* %47, align 1
  %49 = icmp ult i8 %48, 3
  br i1 %49, label %50, label %441

50:                                               ; preds = %46
  %51 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 44
  %52 = load i32, i32* %51, align 4
  %53 = icmp slt i32 %52, 2
  br i1 %53, label %54, label %441

54:                                               ; preds = %50
  %55 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 45
  %56 = load i32, i32* %55, align 8
  %57 = icmp ult i32 %56, 2
  br i1 %57, label %58, label %441

58:                                               ; preds = %54
  %59 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 0
  %60 = load i32, i32* %59, align 8
  %61 = icmp eq i32 %60, 1
  br i1 %61, label %62, label %441

62:                                               ; preds = %58
  %63 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = icmp ult i32 %64, 65
  br i1 %65, label %66, label %441

66:                                               ; preds = %62
  %67 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 23
  %68 = load i32, i32* %67, align 8
  %69 = icmp ult i32 %68, 4
  br i1 %69, label %70, label %441

70:                                               ; preds = %66
  %71 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 29
  %72 = load i32, i32* %71, align 4
  %73 = icmp ult i32 %72, 101
  br i1 %73, label %74, label %441

74:                                               ; preds = %70
  %75 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 30
  %76 = load i32, i32* %75, align 8
  %77 = icmp ult i32 %76, 101
  br i1 %77, label %78, label %441

78:                                               ; preds = %74
  %79 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 34
  %80 = load i32, i32* %79, align 8
  %81 = icmp ult i32 %80, 101
  br i1 %81, label %82, label %441

82:                                               ; preds = %78
  %83 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 38
  %84 = load i32, i32* %83, align 8
  %85 = icmp ult i32 %84, 2
  br i1 %85, label %86, label %441

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 14
  %88 = load i32, i32* %87, align 4
  %89 = icmp ult i32 %88, 101
  br i1 %89, label %90, label %441

90:                                               ; preds = %86
  %91 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 12
  %92 = load i32, i32* %91, align 4
  %93 = icmp ult i32 %92, 3
  br i1 %93, label %94, label %441

94:                                               ; preds = %90
  %95 = icmp eq i32 %92, 0
  %96 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 13
  %97 = load i32, i32* %96, align 8
  br i1 %95, label %98, label %100

98:                                               ; preds = %94
  %99 = icmp ult i32 %97, 71
  br i1 %99, label %102, label %441

100:                                              ; preds = %94
  %101 = icmp ult i32 %97, 36
  br i1 %101, label %102, label %441

102:                                              ; preds = %98, %100
  %103 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 13
  %104 = load i32, i32* %103, align 4
  %105 = icmp ult i32 %104, 35
  br i1 %105, label %106, label %441

106:                                              ; preds = %102
  %107 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 14
  %108 = load i32, i32* %107, align 8
  %109 = icmp ult i32 %108, 35
  br i1 %109, label %110, label %441

110:                                              ; preds = %106
  %111 = icmp eq i32 %108, 0
  br i1 %111, label %116, label %112

112:                                              ; preds = %110
  %113 = icmp ugt i32 %104, 2
  %114 = select i1 %113, i32 %104, i32 2
  %115 = icmp ult i32 %108, %114
  br i1 %115, label %441, label %116

116:                                              ; preds = %112, %110
  %117 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 15
  %118 = load i32, i32* %117, align 4
  %119 = icmp ult i32 %118, 6
  br i1 %119, label %120, label %441

120:                                              ; preds = %116
  %121 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 16
  %122 = load i32, i32* %121, align 8
  %123 = icmp ult i32 %122, 6
  br i1 %123, label %124, label %441

124:                                              ; preds = %120
  %125 = icmp ugt i32 %118, %122
  br i1 %125, label %441, label %126

126:                                              ; preds = %124
  %127 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 15
  %128 = load i32, i32* %127, align 8
  %129 = icmp ult i32 %128, 4
  br i1 %129, label %130, label %441

130:                                              ; preds = %126
  %131 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 16
  %132 = load i32, i32* %131, align 4
  %133 = add i32 %132, -8
  %134 = icmp ult i32 %133, 9
  br i1 %134, label %135, label %441

135:                                              ; preds = %130
  %136 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 17
  %137 = load i32, i32* %136, align 8
  %138 = add i32 %137, -8
  %139 = icmp ult i32 %138, 9
  br i1 %139, label %140, label %441

140:                                              ; preds = %135
  %141 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 18
  %142 = load i32, i32* %141, align 4
  %143 = icmp ult i32 %142, 5
  br i1 %143, label %144, label %441

144:                                              ; preds = %140
  %145 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 19
  %146 = load i32, i32* %145, align 8
  %147 = add i32 %146, -8
  %148 = icmp ult i32 %147, 9
  br i1 %148, label %149, label %441

149:                                              ; preds = %144
  %150 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 20
  %151 = load i32, i32* %150, align 4
  %152 = add i32 %151, -8
  %153 = icmp ult i32 %152, 9
  br i1 %153, label %154, label %441

154:                                              ; preds = %149
  %155 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 21
  %156 = load i32, i32* %155, align 8
  %157 = add i32 %156, -1
  %158 = icmp ult i32 %157, 63
  br i1 %158, label %159, label %441

159:                                              ; preds = %154
  %160 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 22
  %161 = load i32, i32* %160, align 4
  %162 = add i32 %161, -1
  %163 = icmp ult i32 %162, 63
  br i1 %163, label %164, label %441

164:                                              ; preds = %159
  %165 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 62
  %166 = load i32, i32* %165, align 4
  %167 = icmp ult i32 %166, 3
  br i1 %167, label %168, label %441

168:                                              ; preds = %164
  %169 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 61
  %170 = load i32, i32* %169, align 8
  %171 = icmp ult i32 %170, 3
  br i1 %171, label %172, label %441

172:                                              ; preds = %168
  %173 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 117
  %174 = load i32, i32* %173, align 4
  %175 = icmp ult i32 %174, 2
  br i1 %175, label %176, label %441

176:                                              ; preds = %172
  %177 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 116
  %178 = load i32, i32* %177, align 8
  %179 = icmp ult i32 %178, 2
  br i1 %179, label %180, label %441

180:                                              ; preds = %176
  %181 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 1
  %182 = load i32, i32* %181, align 4
  %183 = icmp ult i32 %182, 2
  br i1 %183, label %184, label %441

184:                                              ; preds = %180
  %185 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 2
  %186 = load i32, i32* %185, align 8
  %187 = icmp ult i32 %186, 3
  br i1 %187, label %188, label %441

188:                                              ; preds = %184
  %189 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 0
  %190 = load i32, i32* %189, align 8
  %191 = icmp ult i32 %190, 10
  br i1 %191, label %192, label %441

192:                                              ; preds = %188
  %193 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 3
  %194 = load i32, i32* %193, align 4
  %195 = icmp ult i32 %194, 7
  br i1 %195, label %196, label %441

196:                                              ; preds = %192
  %197 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 55
  %198 = load i32, i32* %197, align 8
  %199 = icmp ult i32 %198, 3
  br i1 %199, label %200, label %441

200:                                              ; preds = %196
  %201 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 43
  %202 = load i32, i32* %201, align 4
  %203 = icmp ult i32 %202, 2
  br i1 %203, label %204, label %441

204:                                              ; preds = %200
  %205 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 56
  %206 = load i32, i32* %205, align 4
  %207 = icmp ult i32 %206, 2
  br i1 %207, label %208, label %441

208:                                              ; preds = %204
  %209 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 6
  %210 = load i32, i32* %209, align 8
  %211 = icmp ult i32 %210, 2
  br i1 %211, label %212, label %441

212:                                              ; preds = %208
  %213 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 7
  %214 = load i32, i32* %213, align 4
  %215 = icmp ult i32 %214, 7
  br i1 %215, label %216, label %441

216:                                              ; preds = %212
  %217 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 8
  %218 = load i32, i32* %217, align 8
  %219 = icmp ult i32 %218, 7
  br i1 %219, label %220, label %441

220:                                              ; preds = %216
  %221 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 44
  %222 = load i32, i32* %221, align 8
  %223 = icmp ult i32 %222, 2
  br i1 %223, label %224, label %441

224:                                              ; preds = %220
  %225 = icmp eq i32 %202, 0
  %226 = icmp eq i8 %44, 0
  %227 = or i1 %226, %225
  br i1 %227, label %228, label %441

228:                                              ; preds = %224
  %229 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 4
  %230 = load i32, i32* %229, align 8
  %231 = icmp ult i32 %230, 8
  br i1 %231, label %232, label %441

232:                                              ; preds = %228
  %233 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 11
  %234 = load i32, i32* %233, align 4
  %235 = icmp ult i32 %234, 16
  br i1 %235, label %236, label %441

236:                                              ; preds = %232
  %237 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 12
  %238 = load i32, i32* %237, align 8
  %239 = icmp ult i32 %238, 7
  br i1 %239, label %240, label %441

240:                                              ; preds = %236
  %241 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 20
  %242 = load i32, i32* %241, align 8
  %243 = icmp ult i32 %242, 64
  br i1 %243, label %244, label %441

244:                                              ; preds = %240
  %245 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 8
  %246 = load i32, i32* %245, align 8
  %247 = add i32 %246, -8
  %248 = icmp ult i32 %247, 5
  br i1 %248, label %249, label %441

249:                                              ; preds = %244
  %250 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 9
  %251 = load i32, i32* %250, align 4
  %252 = add i32 %251, -8
  %253 = icmp ult i32 %252, 5
  br i1 %253, label %254, label %441

254:                                              ; preds = %249
  %255 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 47
  %256 = load i32, i32* %255, align 8
  %257 = icmp ult i32 %256, 3
  br i1 %257, label %258, label %441

258:                                              ; preds = %254
  %259 = icmp eq i32 %92, 2
  br i1 %259, label %260, label %285

260:                                              ; preds = %258
  %261 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 24, i32 1
  %262 = load i64, i64* %261, align 8
  %263 = udiv i64 %262, 232
  %264 = urem i64 %262, 232
  %265 = trunc i64 %263 to i32
  %266 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 24, i32 0
  %267 = load i8*, i8** %266, align 8
  %268 = icmp eq i8* %267, null
  br i1 %268, label %441, label %269

269:                                              ; preds = %260
  %270 = icmp eq i64 %264, 0
  br i1 %270, label %271, label %441

271:                                              ; preds = %269
  %272 = icmp ult i64 %262, 464
  br i1 %272, label %441, label %273

273:                                              ; preds = %271
  %274 = bitcast i8* %267 to %struct.FIRSTPASS_STATS*
  %275 = shl i64 %263, 32
  %276 = ashr exact i64 %275, 32
  %277 = getelementptr inbounds %struct.FIRSTPASS_STATS, %struct.FIRSTPASS_STATS* %274, i64 %276
  %278 = getelementptr inbounds %struct.FIRSTPASS_STATS, %struct.FIRSTPASS_STATS* %277, i64 -1
  %279 = getelementptr inbounds %struct.FIRSTPASS_STATS, %struct.FIRSTPASS_STATS* %278, i64 0, i32 24
  %280 = load double, double* %279, align 8
  %281 = fadd double %280, 5.000000e-01
  %282 = fptosi double %281 to i32
  %283 = add nsw i32 %265, -1
  %284 = icmp eq i32 %283, %282
  br i1 %284, label %285, label %441

285:                                              ; preds = %273, %258
  %286 = icmp ult i32 %26, 2
  br i1 %286, label %287, label %291

287:                                              ; preds = %285
  %288 = icmp ugt i32 %246, 10
  br i1 %288, label %441, label %289

289:                                              ; preds = %287
  %290 = icmp ugt i32 %251, 10
  br i1 %290, label %441, label %291

291:                                              ; preds = %285, %289
  %292 = icmp eq i32 %68, 3
  %293 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 51
  %294 = load i32, i32* %293, align 4
  br i1 %292, label %295, label %305

295:                                              ; preds = %291
  %296 = icmp ult i32 %294, 2
  br i1 %296, label %297, label %441

297:                                              ; preds = %295
  %298 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 52, i64 0
  %299 = load i32, i32* %298, align 4
  %300 = icmp slt i32 %299, 64
  br i1 %300, label %301, label %441

301:                                              ; preds = %297
  %302 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 52, i64 1
  %303 = load i32, i32* %302, align 4
  %304 = icmp slt i32 %303, 64
  br i1 %304, label %446, label %441

305:                                              ; preds = %291
  %306 = icmp eq i32 %294, 0
  br i1 %306, label %307, label %441

307:                                              ; preds = %305
  %308 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 52, i64 0
  %309 = load i32, i32* %308, align 4
  %310 = icmp sgt i32 %309, -1
  br i1 %310, label %441, label %311

311:                                              ; preds = %307
  %312 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 52, i64 1
  %313 = load i32, i32* %312, align 4
  %314 = icmp sgt i32 %313, -1
  br i1 %314, label %441, label %458

315:                                              ; preds = %466, %454
  %316 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 48
  %317 = load i32, i32* %316, align 4
  %318 = add i32 %317, -1
  %319 = icmp ult i32 %318, 22
  br i1 %319, label %320, label %441

320:                                              ; preds = %315
  %321 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 49
  %322 = load i32, i32* %321, align 8
  %323 = add i32 %322, -1
  %324 = icmp ult i32 %323, 18
  br i1 %324, label %325, label %441

325:                                              ; preds = %320
  %326 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 50
  %327 = load i32, i32* %326, align 4
  %328 = icmp ult i32 %327, 15
  br i1 %328, label %329, label %441

329:                                              ; preds = %325
  %330 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 52
  %331 = load i32, i32* %330, align 4
  %332 = icmp ult i32 %331, 2
  br i1 %332, label %333, label %441

333:                                              ; preds = %329
  %334 = or i32 %92, %68
  %335 = icmp eq i32 %334, 0
  %336 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 108
  %337 = load i32, i32* %336, align 4
  br i1 %335, label %338, label %340

338:                                              ; preds = %333
  %339 = icmp ult i32 %337, 10001
  br i1 %339, label %342, label %441

340:                                              ; preds = %333
  %341 = icmp eq i32 %337, 0
  br i1 %341, label %342, label %441

342:                                              ; preds = %340, %338
  %343 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 17
  %344 = load i32, i32* %343, align 4
  %345 = icmp eq i32 %344, 8
  br i1 %345, label %441, label %346

346:                                              ; preds = %342
  %347 = and i32 %344, -4
  %348 = icmp eq i32 %347, 4
  br i1 %348, label %441, label %349

349:                                              ; preds = %346
  %350 = icmp ult i32 %344, 9
  br i1 %350, label %351, label %441

351:                                              ; preds = %349
  %352 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 38
  %353 = load i32, i32* %352, align 8
  %354 = icmp ult i32 %353, 3
  br i1 %354, label %355, label %441

355:                                              ; preds = %351
  %356 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 59
  %357 = load i32, i32* %356, align 8
  %358 = icmp ult i32 %357, 17
  br i1 %358, label %359, label %441

359:                                              ; preds = %355
  %360 = icmp eq i32 %38, 0
  br i1 %360, label %366, label %361

361:                                              ; preds = %359
  br i1 %226, label %362, label %441

362:                                              ; preds = %361
  %363 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 41
  %364 = load i32, i32* %363, align 4
  %365 = icmp eq i32 %364, 0
  br i1 %365, label %366, label %441

366:                                              ; preds = %362, %359
  %367 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 74
  %368 = load i32, i32* %367, align 4
  %369 = add i32 %368, -3
  %370 = icmp ult i32 %369, 5
  br i1 %370, label %371, label %441

371:                                              ; preds = %366
  %372 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 75
  %373 = load i32, i32* %372, align 8
  %374 = icmp ult i32 %373, 2
  br i1 %374, label %375, label %441

375:                                              ; preds = %371
  %376 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 101
  %377 = load i32, i32* %376, align 8
  %378 = icmp ult i32 %377, 2
  br i1 %378, label %379, label %441

379:                                              ; preds = %375
  %380 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 102
  %381 = load i32, i32* %380, align 4
  %382 = icmp ult i32 %381, 2
  br i1 %382, label %383, label %441

383:                                              ; preds = %379
  %384 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 29
  %385 = load i32, i32* %384, align 4
  %386 = icmp ult i32 %385, 4
  br i1 %386, label %387, label %441

387:                                              ; preds = %383
  %388 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 112
  %389 = load i32, i32* %388, align 8
  %390 = icmp ult i32 %389, 4
  br i1 %390, label %391, label %441

391:                                              ; preds = %387
  %392 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 113
  %393 = load i32, i32* %392, align 4
  %394 = icmp ult i32 %393, 4
  br i1 %394, label %395, label %441

395:                                              ; preds = %391
  %396 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 114
  %397 = load i32, i32* %396, align 8
  %398 = icmp ult i32 %397, 4
  br i1 %398, label %399, label %441

399:                                              ; preds = %395
  %400 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 115
  %401 = load i32, i32* %400, align 4
  %402 = icmp ult i32 %401, 4
  br i1 %402, label %403, label %441

403:                                              ; preds = %399
  %404 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 66
  %405 = load i32, i32* %404, align 4
  %406 = add i32 %405, -4
  %407 = icmp ult i32 %406, 125
  br i1 %407, label %408, label %441

408:                                              ; preds = %403
  %409 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 67
  %410 = load i32, i32* %409, align 8
  %411 = add i32 %410, -4
  %412 = icmp ult i32 %411, 125
  br i1 %412, label %413, label %441

413:                                              ; preds = %408
  %414 = icmp sgt i32 %405, %410
  br i1 %414, label %441, label %415

415:                                              ; preds = %413, %438
  %416 = phi i64 [ %439, %438 ], [ 0, %413 ]
  %417 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 109, i64 %416
  %418 = load i8, i8* %417, align 1
  %419 = icmp eq i8 %418, 31
  br i1 %419, label %438, label %420

420:                                              ; preds = %415
  %421 = icmp ugt i8 %418, 23
  br i1 %421, label %433, label %422

422:                                              ; preds = %420
  %423 = add i8 %418, -2
  %424 = icmp ult i8 %423, 21
  br i1 %424, label %428, label %425

425:                                              ; preds = %428, %422
  %426 = icmp ne i8 %418, 23
  %427 = zext i1 %426 to i32
  br label %433

428:                                              ; preds = %422
  %429 = zext i8 %423 to i32
  %430 = lshr i32 1835827, %429
  %431 = and i32 %430, 1
  %432 = icmp eq i32 %431, 0
  br i1 %432, label %425, label %433

433:                                              ; preds = %428, %420, %425
  %434 = phi i32 [ %427, %425 ], [ 0, %420 ], [ 0, %428 ]
  %435 = icmp eq i32 %434, 0
  %436 = icmp ne i8 %418, 24
  %437 = and i1 %436, %435
  br i1 %437, label %441, label %438

438:                                              ; preds = %415, %433
  %439 = add nuw nsw i64 %416, 1
  %440 = icmp eq i64 %439, 32
  br i1 %440, label %444, label %415

441:                                              ; preds = %433, %413, %408, %403, %399, %395, %391, %387, %383, %379, %375, %371, %366, %362, %361, %355, %351, %349, %346, %342, %340, %338, %329, %325, %320, %315, %307, %311, %458, %462, %466, %305, %297, %301, %446, %450, %454, %295, %289, %287, %273, %271, %269, %260, %254, %249, %244, %240, %236, %232, %228, %224, %220, %216, %212, %208, %204, %200, %196, %192, %188, %184, %180, %176, %172, %168, %164, %159, %154, %149, %144, %140, %135, %130, %126, %124, %120, %116, %112, %106, %102, %100, %98, %90, %86, %82, %78, %74, %70, %66, %62, %58, %54, %50, %46, %42, %36, %32, %28, %24, %18, %13, %8, %3
  %442 = phi i8* [ getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3, i64 0, i64 0), %3 ], [ getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i64 0, i64 0), %8 ], [ getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i64 0, i64 0), %13 ], [ getelementptr inbounds ([53 x i8], [53 x i8]* @.str.6, i64 0, i64 0), %18 ], [ getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), %24 ], [ getelementptr inbounds ([37 x i8], [37 x i8]* @.str.8, i64 0, i64 0), %28 ], [ getelementptr inbounds ([56 x i8], [56 x i8]* @.str.9, i64 0, i64 0), %32 ], [ getelementptr inbounds ([26 x i8], [26 x i8]* @.str.10, i64 0, i64 0), %36 ], [ getelementptr inbounds ([43 x i8], [43 x i8]* @.str.11, i64 0, i64 0), %42 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12, i64 0, i64 0), %46 ], [ getelementptr inbounds ([32 x i8], [32 x i8]* @.str.13, i64 0, i64 0), %50 ], [ getelementptr inbounds ([40 x i8], [40 x i8]* @.str.14, i64 0, i64 0), %54 ], [ getelementptr inbounds ([62 x i8], [62 x i8]* @.str.15, i64 0, i64 0), %58 ], [ getelementptr inbounds ([43 x i8], [43 x i8]* @.str.16, i64 0, i64 0), %62 ], [ getelementptr inbounds ([43 x i8], [43 x i8]* @.str.17, i64 0, i64 0), %66 ], [ getelementptr inbounds ([39 x i8], [39 x i8]* @.str.18, i64 0, i64 0), %70 ], [ getelementptr inbounds ([38 x i8], [38 x i8]* @.str.19, i64 0, i64 0), %74 ], [ getelementptr inbounds ([43 x i8], [43 x i8]* @.str.20, i64 0, i64 0), %78 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21, i64 0, i64 0), %82 ], [ getelementptr inbounds ([41 x i8], [41 x i8]* @.str.22, i64 0, i64 0), %86 ], [ getelementptr inbounds ([56 x i8], [56 x i8]* @.str.23, i64 0, i64 0), %90 ], [ getelementptr inbounds ([51 x i8], [51 x i8]* @.str.24, i64 0, i64 0), %98 ], [ getelementptr inbounds ([49 x i8], [49 x i8]* @.str.25, i64 0, i64 0), %100 ], [ getelementptr inbounds ([53 x i8], [53 x i8]* @.str.28, i64 0, i64 0), %102 ], [ getelementptr inbounds ([53 x i8], [53 x i8]* @.str.29, i64 0, i64 0), %106 ], [ getelementptr inbounds ([92 x i8], [92 x i8]* @.str.30, i64 0, i64 0), %112 ], [ getelementptr inbounds ([37 x i8], [37 x i8]* @.str.31, i64 0, i64 0), %116 ], [ getelementptr inbounds ([37 x i8], [37 x i8]* @.str.32, i64 0, i64 0), %120 ], [ getelementptr inbounds ([70 x i8], [70 x i8]* @.str.33, i64 0, i64 0), %124 ], [ getelementptr inbounds ([49 x i8], [49 x i8]* @.str.34, i64 0, i64 0), %126 ], [ getelementptr inbounds ([75 x i8], [75 x i8]* @.str.35, i64 0, i64 0), %130 ], [ getelementptr inbounds ([78 x i8], [78 x i8]* @.str.36, i64 0, i64 0), %135 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.37, i64 0, i64 0), %140 ], [ getelementptr inbounds ([77 x i8], [77 x i8]* @.str.38, i64 0, i64 0), %144 ], [ getelementptr inbounds ([80 x i8], [80 x i8]* @.str.39, i64 0, i64 0), %149 ], [ getelementptr inbounds ([41 x i8], [41 x i8]* @.str.40, i64 0, i64 0), %154 ], [ getelementptr inbounds ([44 x i8], [44 x i8]* @.str.41, i64 0, i64 0), %159 ], [ getelementptr inbounds ([35 x i8], [35 x i8]* @.str.42, i64 0, i64 0), %164 ], [ getelementptr inbounds ([43 x i8], [43 x i8]* @.str.43, i64 0, i64 0), %168 ], [ getelementptr inbounds ([42 x i8], [42 x i8]* @.str.44, i64 0, i64 0), %172 ], [ getelementptr inbounds ([34 x i8], [34 x i8]* @.str.45, i64 0, i64 0), %176 ], [ getelementptr inbounds ([39 x i8], [39 x i8]* @.str.46, i64 0, i64 0), %180 ], [ getelementptr inbounds ([39 x i8], [39 x i8]* @.str.47, i64 0, i64 0), %184 ], [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.48, i64 0, i64 0), %188 ], [ getelementptr inbounds ([37 x i8], [37 x i8]* @.str.49, i64 0, i64 0), %192 ], [ getelementptr inbounds ([86 x i8], [86 x i8]* @.str.50, i64 0, i64 0), %196 ], [ getelementptr inbounds ([36 x i8], [36 x i8]* @.str.51, i64 0, i64 0), %200 ], [ getelementptr inbounds ([40 x i8], [40 x i8]* @.str.52, i64 0, i64 0), %204 ], [ getelementptr inbounds ([26 x i8], [26 x i8]* @.str.53, i64 0, i64 0), %208 ], [ getelementptr inbounds ([32 x i8], [32 x i8]* @.str.54, i64 0, i64 0), %212 ], [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.55, i64 0, i64 0), %216 ], [ getelementptr inbounds ([30 x i8], [30 x i8]* @.str.56, i64 0, i64 0), %220 ], [ getelementptr inbounds ([68 x i8], [68 x i8]* @.str.57, i64 0, i64 0), %224 ], [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.58, i64 0, i64 0), %228 ], [ getelementptr inbounds ([36 x i8], [36 x i8]* @.str.59, i64 0, i64 0), %232 ], [ getelementptr inbounds ([33 x i8], [33 x i8]* @.str.60, i64 0, i64 0), %236 ], [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.61, i64 0, i64 0), %240 ], [ getelementptr inbounds ([51 x i8], [51 x i8]* @.str.62, i64 0, i64 0), %244 ], [ getelementptr inbounds ([39 x i8], [39 x i8]* @.str.63, i64 0, i64 0), %249 ], [ getelementptr inbounds ([68 x i8], [68 x i8]* @.str.64, i64 0, i64 0), %254 ], [ getelementptr inbounds ([33 x i8], [33 x i8]* @.str.65, i64 0, i64 0), %260 ], [ getelementptr inbounds ([51 x i8], [51 x i8]* @.str.66, i64 0, i64 0), %269 ], [ getelementptr inbounds ([51 x i8], [51 x i8]* @.str.67, i64 0, i64 0), %271 ], [ getelementptr inbounds ([45 x i8], [45 x i8]* @.str.68, i64 0, i64 0), %273 ], [ getelementptr inbounds ([48 x i8], [48 x i8]* @.str.69, i64 0, i64 0), %287 ], [ getelementptr inbounds ([49 x i8], [49 x i8]* @.str.70, i64 0, i64 0), %289 ], [ getelementptr inbounds ([40 x i8], [40 x i8]* @.str.71, i64 0, i64 0), %295 ], [ getelementptr inbounds ([40 x i8], [40 x i8]* @.str.72, i64 0, i64 0), %454 ], [ getelementptr inbounds ([40 x i8], [40 x i8]* @.str.72, i64 0, i64 0), %450 ], [ getelementptr inbounds ([40 x i8], [40 x i8]* @.str.72, i64 0, i64 0), %446 ], [ getelementptr inbounds ([40 x i8], [40 x i8]* @.str.72, i64 0, i64 0), %301 ], [ getelementptr inbounds ([40 x i8], [40 x i8]* @.str.72, i64 0, i64 0), %297 ], [ getelementptr inbounds ([59 x i8], [59 x i8]* @.str.73, i64 0, i64 0), %305 ], [ getelementptr inbounds ([55 x i8], [55 x i8]* @.str.74, i64 0, i64 0), %466 ], [ getelementptr inbounds ([55 x i8], [55 x i8]* @.str.74, i64 0, i64 0), %462 ], [ getelementptr inbounds ([55 x i8], [55 x i8]* @.str.74, i64 0, i64 0), %458 ], [ getelementptr inbounds ([55 x i8], [55 x i8]* @.str.74, i64 0, i64 0), %311 ], [ getelementptr inbounds ([55 x i8], [55 x i8]* @.str.74, i64 0, i64 0), %307 ], [ getelementptr inbounds ([72 x i8], [72 x i8]* @.str.75, i64 0, i64 0), %315 ], [ getelementptr inbounds ([76 x i8], [76 x i8]* @.str.76, i64 0, i64 0), %320 ], [ getelementptr inbounds ([75 x i8], [75 x i8]* @.str.77, i64 0, i64 0), %325 ], [ getelementptr inbounds ([32 x i8], [32 x i8]* @.str.78, i64 0, i64 0), %329 ], [ getelementptr inbounds ([69 x i8], [69 x i8]* @.str.79, i64 0, i64 0), %338 ], [ getelementptr inbounds ([77 x i8], [77 x i8]* @.str.80, i64 0, i64 0), %340 ], [ getelementptr inbounds ([127 x i8], [127 x i8]* @.str.81, i64 0, i64 0), %342 ], [ getelementptr inbounds ([120 x i8], [120 x i8]* @.str.82, i64 0, i64 0), %346 ], [ getelementptr inbounds ([58 x i8], [58 x i8]* @.str.83, i64 0, i64 0), %349 ], [ getelementptr inbounds ([77 x i8], [77 x i8]* @.str.84, i64 0, i64 0), %351 ], [ getelementptr inbounds ([44 x i8], [44 x i8]* @.str.85, i64 0, i64 0), %355 ], [ getelementptr inbounds ([48 x i8], [48 x i8]* @.str.86, i64 0, i64 0), %361 ], [ getelementptr inbounds ([61 x i8], [61 x i8]* @.str.87, i64 0, i64 0), %362 ], [ getelementptr inbounds ([41 x i8], [41 x i8]* @.str.88, i64 0, i64 0), %366 ], [ getelementptr inbounds ([49 x i8], [49 x i8]* @.str.89, i64 0, i64 0), %371 ], [ getelementptr inbounds ([40 x i8], [40 x i8]* @.str.90, i64 0, i64 0), %375 ], [ getelementptr inbounds ([40 x i8], [40 x i8]* @.str.91, i64 0, i64 0), %379 ], [ getelementptr inbounds ([41 x i8], [41 x i8]* @.str.92, i64 0, i64 0), %383 ], [ getelementptr inbounds ([40 x i8], [40 x i8]* @.str.93, i64 0, i64 0), %387 ], [ getelementptr inbounds ([39 x i8], [39 x i8]* @.str.94, i64 0, i64 0), %391 ], [ getelementptr inbounds ([37 x i8], [37 x i8]* @.str.95, i64 0, i64 0), %395 ], [ getelementptr inbounds ([37 x i8], [37 x i8]* @.str.96, i64 0, i64 0), %399 ], [ getelementptr inbounds ([41 x i8], [41 x i8]* @.str.97, i64 0, i64 0), %403 ], [ getelementptr inbounds ([41 x i8], [41 x i8]* @.str.98, i64 0, i64 0), %408 ], [ getelementptr inbounds ([66 x i8], [66 x i8]* @.str.99, i64 0, i64 0), %413 ], [ getelementptr inbounds ([39 x i8], [39 x i8]* @.str.100, i64 0, i64 0), %433 ]
  %443 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 0, i32 0
  store i8* %442, i8** %443, align 8
  br label %444

444:                                              ; preds = %438, %441
  %445 = phi i32 [ 8, %441 ], [ 0, %438 ]
  ret i32 %445

446:                                              ; preds = %301
  %447 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 52, i64 2
  %448 = load i32, i32* %447, align 4
  %449 = icmp slt i32 %448, 64
  br i1 %449, label %450, label %441

450:                                              ; preds = %446
  %451 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 52, i64 3
  %452 = load i32, i32* %451, align 4
  %453 = icmp slt i32 %452, 64
  br i1 %453, label %454, label %441

454:                                              ; preds = %450
  %455 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 52, i64 4
  %456 = load i32, i32* %455, align 4
  %457 = icmp slt i32 %456, 64
  br i1 %457, label %315, label %441

458:                                              ; preds = %311
  %459 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 52, i64 2
  %460 = load i32, i32* %459, align 4
  %461 = icmp sgt i32 %460, -1
  br i1 %461, label %441, label %462

462:                                              ; preds = %458
  %463 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 52, i64 3
  %464 = load i32, i32* %463, align 4
  %465 = icmp sgt i32 %464, -1
  br i1 %465, label %441, label %466

466:                                              ; preds = %462
  %467 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 52, i64 4
  %468 = load i32, i32* %467, align 4
  %469 = icmp sgt i32 %468, -1
  br i1 %469, label %441, label %315
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @set_encoder_config(%struct.AV1EncoderConfig*, %struct.aom_codec_enc_cfg* readonly, %struct.av1_extracfg*) unnamed_addr #0 {
  %4 = bitcast %struct.AV1EncoderConfig* %0 to i8*
  %5 = bitcast %struct.aom_codec_enc_cfg* %1 to i8*
  %6 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 53, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %176, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 53, i32 8
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  %13 = zext i1 %12 to i32
  %14 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 25
  store i32 %13, i32* %14, align 4
  %15 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 53, i32 9
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  %18 = zext i1 %17 to i32
  %19 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 26
  store i32 %18, i32* %19, align 8
  %20 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 53, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 64
  %23 = icmp eq i32 %21, 128
  %24 = select i1 %23, i32 1, i32 2
  %25 = select i1 %22, i32 0, i32 %24
  %26 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 55
  store i32 %25, i32* %26, align 8
  %27 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 53, i32 11
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  %30 = zext i1 %29 to i32
  %31 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 86
  store i32 %30, i32* %31, align 4
  %32 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 53, i32 13
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  %35 = zext i1 %34 to i32
  %36 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 73
  store i32 %35, i32* %36, align 8
  %37 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 53, i32 14
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  %40 = zext i1 %39 to i32
  %41 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 82
  store i32 %40, i32* %41, align 4
  %42 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 53, i32 23
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  %45 = zext i1 %44 to i32
  %46 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 40
  store i32 %45, i32* %46, align 8
  %47 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 53, i32 24
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, 0
  %50 = zext i1 %49 to i32
  %51 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 97
  store i32 %50, i32* %51, align 8
  %52 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 53, i32 5
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  %55 = zext i1 %54 to i32
  %56 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 63
  store i32 %55, i32* %56, align 8
  %57 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 53, i32 4
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, 0
  %60 = zext i1 %59 to i32
  %61 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 64
  store i32 %60, i32* %61, align 4
  %62 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 53, i32 6
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  %65 = zext i1 %64 to i32
  %66 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 65
  store i32 %65, i32* %66, align 8
  %67 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 53, i32 2
  %68 = load i32, i32* %67, align 4
  %69 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 67
  store i32 %68, i32* %69, align 8
  %70 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 53, i32 3
  %71 = load i32, i32* %70, align 4
  %72 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 66
  store i32 %71, i32* %72, align 4
  %73 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 53, i32 25
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %74, 0
  %76 = zext i1 %75 to i32
  %77 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 68
  store i32 %76, i32* %77, align 4
  %78 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 53, i32 26
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 0
  %81 = zext i1 %80 to i32
  %82 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 70
  store i32 %81, i32* %82, align 4
  %83 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 53, i32 7
  %84 = load i32, i32* %83, align 4
  %85 = icmp eq i32 %84, 0
  %86 = zext i1 %85 to i32
  %87 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 71
  store i32 %86, i32* %87, align 8
  %88 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 53, i32 16
  %89 = load i32, i32* %88, align 4
  %90 = icmp eq i32 %89, 0
  %91 = zext i1 %90 to i32
  %92 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 78
  store i32 %91, i32* %92, align 4
  %93 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 53, i32 15
  %94 = load i32, i32* %93, align 4
  %95 = icmp eq i32 %94, 0
  %96 = zext i1 %95 to i32
  %97 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 80
  store i32 %96, i32* %97, align 4
  %98 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 53, i32 27
  %99 = load i32, i32* %98, align 4
  %100 = icmp eq i32 %99, 0
  %101 = zext i1 %100 to i32
  %102 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 81
  store i32 %101, i32* %102, align 8
  %103 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 53, i32 28
  %104 = load i32, i32* %103, align 4
  %105 = icmp eq i32 %104, 0
  %106 = zext i1 %105 to i32
  %107 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 83
  store i32 %106, i32* %107, align 8
  %108 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 53, i32 29
  %109 = load i32, i32* %108, align 4
  %110 = icmp eq i32 %109, 0
  %111 = zext i1 %110 to i32
  %112 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 84
  store i32 %111, i32* %112, align 4
  %113 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 53, i32 12
  %114 = load i32, i32* %113, align 4
  %115 = icmp eq i32 %114, 0
  %116 = zext i1 %115 to i32
  %117 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 85
  store i32 %116, i32* %117, align 8
  %118 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 53, i32 22
  %119 = load i32, i32* %118, align 4
  %120 = icmp eq i32 %119, 0
  %121 = zext i1 %120 to i32
  %122 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 88
  store i32 %121, i32* %122, align 4
  %123 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 53, i32 21
  %124 = load i32, i32* %123, align 4
  %125 = icmp eq i32 %124, 0
  %126 = zext i1 %125 to i32
  %127 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 89
  store i32 %126, i32* %127, align 8
  %128 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 53, i32 30
  %129 = load i32, i32* %128, align 4
  %130 = icmp eq i32 %129, 0
  %131 = zext i1 %130 to i32
  %132 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 90
  store i32 %131, i32* %132, align 4
  %133 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 53, i32 20
  %134 = load i32, i32* %133, align 4
  %135 = icmp eq i32 %134, 0
  %136 = zext i1 %135 to i32
  %137 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 91
  store i32 %136, i32* %137, align 8
  %138 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 53, i32 10
  %139 = load i32, i32* %138, align 4
  %140 = icmp eq i32 %139, 0
  %141 = zext i1 %140 to i32
  %142 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 28
  store i32 %141, i32* %142, align 8
  %143 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 53, i32 18
  %144 = load i32, i32* %143, align 4
  %145 = icmp eq i32 %144, 0
  %146 = zext i1 %145 to i32
  %147 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 95
  store i32 %146, i32* %147, align 8
  %148 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 53, i32 19
  %149 = load i32, i32* %148, align 4
  %150 = icmp eq i32 %149, 0
  %151 = zext i1 %150 to i32
  %152 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 96
  store i32 %151, i32* %152, align 4
  %153 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 53, i32 31
  %154 = load i32, i32* %153, align 4
  %155 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 29
  store i32 %154, i32* %155, align 4
  %156 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 53, i32 32
  %157 = load i32, i32* %156, align 4
  %158 = icmp eq i32 %157, 0
  %159 = zext i1 %158 to i32
  %160 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 77
  store i32 %159, i32* %160, align 8
  %161 = load i32, i32* %156, align 4
  %162 = icmp eq i32 %161, 0
  %163 = zext i1 %162 to i32
  %164 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 76
  store i32 %163, i32* %164, align 4
  %165 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 53, i32 17
  %166 = load i32, i32* %165, align 4
  %167 = icmp eq i32 %166, 0
  %168 = zext i1 %167 to i32
  %169 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 79
  store i32 %168, i32* %169, align 8
  %170 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 53, i32 33
  %171 = load i32, i32* %170, align 4
  %172 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 75
  store i32 %171, i32* %172, align 8
  %173 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 53, i32 34
  %174 = load i32, i32* %173, align 4
  %175 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 103
  store i32 %174, i32* %175, align 8
  br label %176

176:                                              ; preds = %3, %9
  %177 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 12
  %178 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 7
  %179 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 23
  %180 = load i32, i32* %179, align 8
  %181 = icmp eq i32 %180, 0
  %182 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 2
  %183 = load i32, i32* %182, align 8
  %184 = trunc i32 %183 to i8
  %185 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 32
  store i8 %184, i8* %185, align 8
  %186 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 1
  %187 = load i32, i32* %186, align 4
  %188 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 29
  store i32 %187, i32* %188, align 8
  %189 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 0
  %190 = load i32, i32* %189, align 8
  %191 = icmp eq i32 %190, 2
  %192 = select i1 %191, i8 2, i8 0
  %193 = icmp eq i32 %190, 1
  %194 = select i1 %193, i8 1, i8 %192
  %195 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 34
  store i8 %194, i8* %195, align 8
  %196 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 3
  %197 = load i32, i32* %196, align 4
  %198 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 1, i32 0
  store i32 %197, i32* %198, align 4
  %199 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 4
  %200 = load i32, i32* %199, align 8
  %201 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 1, i32 1
  store i32 %200, i32* %201, align 4
  %202 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 6
  %203 = load i32, i32* %202, align 8
  %204 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 1, i32 2
  store i32 %203, i32* %204, align 4
  %205 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 7
  %206 = load i32, i32* %205, align 4
  %207 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 1, i32 3
  store i32 %206, i32* %207, align 4
  %208 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 53
  %209 = load i32, i32* %208, align 8
  %210 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 1, i32 4
  store i32 %209, i32* %210, align 4
  %211 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 54
  %212 = load i32, i32* %211, align 4
  %213 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 1, i32 5
  store i32 %212, i32* %213, align 4
  %214 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 9
  %215 = load i32, i32* %214, align 4
  %216 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 0, i32 1
  store i32 %215, i32* %216, align 8
  %217 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 10, i32 1
  %218 = load i32, i32* %217, align 4
  %219 = sitofp i32 %218 to double
  %220 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 10, i32 0
  %221 = load i32, i32* %220, align 8
  %222 = sitofp i32 %221 to double
  %223 = fdiv double %219, %222
  %224 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 0, i32 0
  store double %223, double* %224, align 8
  %225 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 12
  %226 = load i32, i32* %225, align 4
  %227 = icmp eq i32 %226, 2
  br i1 %227, label %228, label %234

228:                                              ; preds = %176
  %229 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 24, i32 1
  %230 = load i64, i64* %229, align 8
  %231 = udiv i64 %230, 232
  %232 = trunc i64 %231 to i32
  %233 = add nsw i32 %232, -1
  br label %237

234:                                              ; preds = %176
  %235 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 5
  %236 = load i32, i32* %235, align 4
  br label %237

237:                                              ; preds = %234, %228
  %238 = phi i32 [ %236, %234 ], [ %233, %228 ]
  %239 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 0, i32 2
  store i32 %238, i32* %239, align 4
  %240 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 101
  %241 = load i32, i32* %240, align 8
  %242 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 0, i32 3
  store i32 %241, i32* %242, align 8
  %243 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 102
  %244 = load i32, i32* %243, align 4
  %245 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 0, i32 4
  store i32 %244, i32* %245, align 4
  %246 = fcmp ogt double %223, 1.800000e+02
  br i1 %246, label %247, label %249

247:                                              ; preds = %237
  store double 3.000000e+01, double* %224, align 8
  %248 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 14, i32 4
  store i8 0, i8* %248, align 2
  br label %249

249:                                              ; preds = %247, %237
  %250 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 38
  %251 = load i32, i32* %250, align 8
  %252 = add i32 %251, -1
  %253 = icmp ult i32 %252, 2
  %254 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 14, i32 4
  br i1 %253, label %255, label %261

255:                                              ; preds = %249
  store i8 1, i8* %254, align 2
  %256 = load i32, i32* %220, align 8
  %257 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 14, i32 0, i32 0
  store i32 %256, i32* %257, align 4
  %258 = load i32, i32* %217, align 4
  %259 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 14, i32 0, i32 1
  store i32 %258, i32* %259, align 4
  %260 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 14, i32 0, i32 3
  store i32 1, i32* %260, align 4
  br label %262

261:                                              ; preds = %249
  store i8 0, i8* %254, align 2
  br label %262

262:                                              ; preds = %261, %255
  %263 = load i32, i32* %250, align 8
  switch i32 %263, label %273 [
    i32 1, label %267
    i32 2, label %264
  ]

264:                                              ; preds = %262
  %265 = load i32, i32* %220, align 8
  %266 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 14, i32 1
  store i32 %265, i32* %266, align 4
  br label %267

267:                                              ; preds = %262, %264
  %268 = phi i32 [ 0, %264 ], [ %263, %262 ]
  %269 = phi i8 [ 1, %264 ], [ 0, %262 ]
  %270 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 14, i32 0, i32 2
  store i32 %268, i32* %270, align 4
  %271 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 14, i32 2
  store i8 %269, i8* %271, align 4
  %272 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 14, i32 3
  store i8 1, i8* %272, align 1
  br label %273

273:                                              ; preds = %267, %262
  %274 = load i32, i32* %225, align 4
  %275 = icmp ult i32 %274, 3
  br i1 %275, label %276, label %278

276:                                              ; preds = %273
  %277 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 33
  store i32 %274, i32* %277, align 4
  br label %278

278:                                              ; preds = %273, %276
  %279 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 21
  %280 = load i32, i32* %279, align 4
  %281 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 4, i32 5
  store i32 %280, i32* %281, align 4
  %282 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 22
  %283 = load i32, i32* %282, align 8
  %284 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 4, i32 6
  store i32 %283, i32* %284, align 8
  %285 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 23
  %286 = load i32, i32* %285, align 4
  %287 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 4, i32 7
  store i32 %286, i32* %287, align 4
  %288 = load i32, i32* %179, align 8
  %289 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 4, i32 15
  store i32 %288, i32* %289, align 4
  %290 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 111
  %291 = load i32, i32* %290, align 4
  %292 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 4, i32 8
  store i32 %291, i32* %292, align 8
  %293 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 24
  %294 = load i32, i32* %293, align 8
  %295 = icmp eq i32 %294, 0
  br i1 %295, label %296, label %300

296:                                              ; preds = %278
  %297 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 27
  %298 = load i32, i32* %297, align 4
  %299 = tail call i32 @av1_quantizer_to_qindex(i32 %298) #9
  br label %300

300:                                              ; preds = %278, %296
  %301 = phi i32 [ %299, %296 ], [ 0, %278 ]
  %302 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 4, i32 13
  store i32 %301, i32* %302, align 4
  %303 = load i32, i32* %293, align 8
  %304 = icmp eq i32 %303, 0
  br i1 %304, label %305, label %309

305:                                              ; preds = %300
  %306 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 28
  %307 = load i32, i32* %306, align 8
  %308 = tail call i32 @av1_quantizer_to_qindex(i32 %307) #9
  br label %309

309:                                              ; preds = %300, %305
  %310 = phi i32 [ %308, %305 ], [ 0, %300 ]
  %311 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 4, i32 12
  store i32 %310, i32* %311, align 8
  %312 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 20
  %313 = load i32, i32* %312, align 8
  %314 = tail call i32 @av1_quantizer_to_qindex(i32 %313) #9
  %315 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 4, i32 14
  store i32 %314, i32* %315, align 8
  %316 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 29
  %317 = load i32, i32* %316, align 4
  %318 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 4, i32 10
  store i32 %317, i32* %318, align 8
  %319 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 30
  %320 = load i32, i32* %319, align 8
  %321 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 4, i32 11
  store i32 %320, i32* %321, align 4
  br i1 %181, label %322, label %325

322:                                              ; preds = %309
  %323 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 4, i32 2
  store i64 240000, i64* %323, align 8
  %324 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 4, i32 0
  store i64 60000, i64* %324, align 8
  br label %336

325:                                              ; preds = %309
  %326 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 31
  %327 = load i32, i32* %326, align 4
  %328 = zext i32 %327 to i64
  %329 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 4, i32 2
  store i64 %328, i64* %329, align 8
  %330 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 32
  %331 = load i32, i32* %330, align 8
  %332 = zext i32 %331 to i64
  %333 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 4, i32 0
  store i64 %332, i64* %333, align 8
  %334 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 33
  %335 = load i32, i32* %334, align 4
  br label %336

336:                                              ; preds = %322, %325
  %337 = phi i32 [ %335, %325 ], [ 60000, %322 ]
  %338 = zext i32 %337 to i64
  %339 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 4, i32 1
  store i64 %338, i64* %339, align 8
  %340 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 26
  %341 = load i32, i32* %340, align 8
  %342 = mul i32 %341, 1000
  %343 = zext i32 %342 to i64
  %344 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 4, i32 3
  store i64 %343, i64* %344, align 8
  %345 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 14
  %346 = load i32, i32* %345, align 4
  %347 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 4, i32 9
  store i32 %346, i32* %347, align 4
  %348 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 108
  %349 = load i32, i32* %348, align 4
  %350 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 4, i32 4
  store i32 %349, i32* %350, align 8
  %351 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 34
  %352 = load i32, i32* %351, align 8
  %353 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 4, i32 16
  store i32 %352, i32* %353, align 8
  %354 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 35
  %355 = load i32, i32* %354, align 4
  %356 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 4, i32 17
  store i32 %355, i32* %356, align 4
  %357 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 36
  %358 = load i32, i32* %357, align 8
  %359 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 4, i32 18
  store i32 %358, i32* %359, align 8
  %360 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 8
  %361 = load i32, i32* %360, align 8
  %362 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 9, i32 0
  store i32 %361, i32* %362, align 4
  %363 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 25
  %364 = load i32, i32* %363, align 4
  %365 = icmp ne i32 %364, 0
  %366 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 9, i32 3
  %367 = zext i1 %365 to i8
  store i8 %367, i8* %366, align 1
  %368 = load i32, i32* %189, align 8
  %369 = icmp eq i32 %368, 1
  br i1 %369, label %373, label %370

370:                                              ; preds = %336
  %371 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 26
  %372 = load i32, i32* %371, align 8
  br label %373

373:                                              ; preds = %336, %370
  %374 = phi i32 [ %372, %370 ], [ 0, %336 ]
  %375 = icmp ne i32 %374, 0
  %376 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 9, i32 4
  %377 = zext i1 %375 to i8
  store i8 %377, i8* %376, align 2
  %378 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 27
  %379 = load i32, i32* %378, align 4
  %380 = icmp ne i32 %379, 0
  %381 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 9, i32 5
  %382 = zext i1 %380 to i8
  store i8 %382, i8* %381, align 1
  %383 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 95
  %384 = load i32, i32* %383, align 8
  %385 = icmp ne i32 %384, 0
  %386 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 9, i32 16
  %387 = zext i1 %385 to i8
  store i8 %387, i8* %386, align 2
  %388 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 77
  %389 = load i32, i32* %388, align 8
  %390 = icmp eq i32 %389, 0
  br i1 %390, label %395, label %391

391:                                              ; preds = %373
  %392 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 43
  %393 = load i32, i32* %392, align 4
  %394 = icmp eq i32 %393, 0
  br label %395

395:                                              ; preds = %373, %391
  %396 = phi i1 [ false, %373 ], [ %394, %391 ]
  %397 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 9, i32 13
  %398 = zext i1 %396 to i8
  store i8 %398, i8* %397, align 1
  %399 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 55
  %400 = load i32, i32* %399, align 8
  %401 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 9, i32 1
  store i32 %400, i32* %401, align 4
  %402 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 44
  %403 = load i32, i32* %402, align 8
  %404 = icmp ne i32 %403, 0
  %405 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 9, i32 8
  %406 = zext i1 %404 to i8
  store i8 %406, i8* %405, align 2
  %407 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 45
  %408 = load i32, i32* %407, align 4
  %409 = icmp ne i32 %408, 0
  %410 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 9, i32 9
  %411 = zext i1 %409 to i8
  store i8 %411, i8* %410, align 1
  %412 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 40
  %413 = load i32, i32* %412, align 8
  %414 = icmp ne i32 %413, 0
  %415 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 9, i32 10
  %416 = zext i1 %414 to i8
  store i8 %416, i8* %415, align 4
  %417 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 69
  %418 = load i32, i32* %417, align 8
  %419 = icmp ne i32 %418, 0
  %420 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 9, i32 11
  %421 = zext i1 %419 to i8
  store i8 %421, i8* %420, align 1
  %422 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 80
  %423 = load i32, i32* %422, align 4
  %424 = icmp ne i32 %423, 0
  %425 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 9, i32 14
  %426 = zext i1 %424 to i8
  store i8 %426, i8* %425, align 4
  %427 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 76
  %428 = load i32, i32* %427, align 4
  %429 = load i32, i32* %417, align 8
  %430 = and i32 %429, %428
  %431 = icmp ne i32 %430, 0
  %432 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 9, i32 12
  %433 = zext i1 %431 to i8
  store i8 %433, i8* %432, align 2
  %434 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 85
  %435 = load i32, i32* %434, align 8
  %436 = icmp ne i32 %435, 0
  %437 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 9, i32 15
  %438 = zext i1 %436 to i8
  store i8 %438, i8* %437, align 1
  %439 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 11
  %440 = load i32, i32* %439, align 8
  %441 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 57
  %442 = load i32, i32* %441, align 8
  %443 = or i32 %442, %440
  %444 = icmp ne i32 %443, 0
  %445 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 9, i32 6
  %446 = zext i1 %444 to i8
  store i8 %446, i8* %445, align 4
  %447 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 39
  %448 = load i32, i32* %447, align 4
  %449 = icmp ne i32 %448, 0
  %450 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 9, i32 7
  %451 = zext i1 %449 to i8
  store i8 %451, i8* %450, align 1
  %452 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 30
  %453 = load i32, i32* %452, align 8
  %454 = icmp ne i32 %453, 0
  %455 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 5, i32 8
  %456 = zext i1 %454 to i8
  store i8 %456, i8* %455, align 1
  %457 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 34
  %458 = load i32, i32* %457, align 8
  %459 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 5, i32 2
  store i32 %458, i32* %459, align 4
  %460 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 35
  %461 = load i32, i32* %460, align 4
  %462 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 5, i32 3
  store i32 %461, i32* %462, align 8
  %463 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 107
  %464 = load i32, i32* %463, align 8
  %465 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 5, i32 4
  store i32 %464, i32* %465, align 4
  %466 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 41
  %467 = load i32, i32* %466, align 4
  %468 = icmp ne i32 %467, 0
  %469 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 5, i32 7
  %470 = zext i1 %468 to i8
  store i8 %470, i8* %469, align 2
  %471 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 42
  %472 = load i8, i8* %471, align 8
  %473 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 5, i32 5
  store i8 %472, i8* %473, align 8
  %474 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 43
  %475 = load i8, i8* %474, align 1
  %476 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 5, i32 6
  store i8 %475, i8* %476, align 1
  %477 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 51
  %478 = load i32, i32* %477, align 4
  %479 = icmp eq i32 %478, 0
  br i1 %479, label %483, label %480

480:                                              ; preds = %395
  %481 = load i32, i32* %289, align 4
  %482 = icmp eq i32 %481, 3
  br label %483

483:                                              ; preds = %395, %480
  %484 = phi i1 [ false, %395 ], [ %482, %480 ]
  %485 = zext i1 %484 to i32
  %486 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 5, i32 1
  store i32 %485, i32* %486, align 8
  br label %490

487:                                              ; preds = %514
  %488 = load i8, i8* %476, align 1
  %489 = icmp eq i8 %488, 0
  br i1 %489, label %525, label %521

490:                                              ; preds = %519, %483
  %491 = phi i32 [ %485, %483 ], [ %520, %519 ]
  %492 = phi i64 [ 0, %483 ], [ %517, %519 ]
  %493 = icmp eq i32 %491, 0
  br i1 %493, label %514, label %494

494:                                              ; preds = %490
  %495 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 52, i64 %492
  %496 = load i32, i32* %495, align 4
  %497 = icmp sgt i32 %496, -1
  %498 = load i32, i32* %315, align 8
  %499 = load i32, i32* %362, align 4
  %500 = tail call double @av1_convert_qindex_to_q(i32 %498, i32 %499) #9
  br i1 %497, label %501, label %508

501:                                              ; preds = %494
  %502 = tail call i32 @av1_quantizer_to_qindex(i32 %496) #9
  %503 = sub nsw i32 %498, %502
  %504 = icmp sgt i32 %503, 0
  %505 = select i1 %504, i32 %503, i32 0
  %506 = tail call double @av1_convert_qindex_to_q(i32 %505, i32 %499) #9
  %507 = fsub double %500, %506
  br label %514

508:                                              ; preds = %494
  %509 = getelementptr inbounds [5 x i32], [5 x i32]* @get_modeled_qp_offset.percents, i64 0, i64 %492
  %510 = load i32, i32* %509, align 4
  %511 = sitofp i32 %510 to double
  %512 = fmul double %500, %511
  %513 = fdiv double %512, 1.000000e+02
  br label %514

514:                                              ; preds = %490, %508, %501
  %515 = phi double [ %513, %508 ], [ %507, %501 ], [ -1.000000e+00, %490 ]
  %516 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 5, i32 0, i64 %492
  store double %515, double* %516, align 8
  %517 = add nuw nsw i64 %492, 1
  %518 = icmp eq i64 %517, 5
  br i1 %518, label %487, label %519

519:                                              ; preds = %514
  %520 = load i32, i32* %486, align 8
  br label %490

521:                                              ; preds = %487
  %522 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 44
  %523 = load i32, i32* %522, align 4
  %524 = icmp ne i32 %523, 0
  br label %525

525:                                              ; preds = %487, %521
  %526 = phi i1 [ false, %487 ], [ %524, %521 ]
  %527 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 9, i32 2
  %528 = zext i1 %526 to i8
  store i8 %528, i8* %527, align 4
  %529 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 112
  %530 = load i32, i32* %529, align 8
  %531 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 22, i32 0
  store i32 %530, i32* %531, align 8
  %532 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 113
  %533 = load i32, i32* %532, align 4
  %534 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 22, i32 1
  store i32 %533, i32* %534, align 4
  %535 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 114
  %536 = load i32, i32* %535, align 8
  %537 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 22, i32 2
  store i32 %536, i32* %537, align 8
  %538 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 115
  %539 = load i32, i32* %538, align 4
  %540 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 22, i32 3
  store i32 %539, i32* %540, align 4
  %541 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 15
  %542 = load i32, i32* %541, align 8
  %543 = trunc i32 %542 to i8
  %544 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 6, i32 0
  store i8 %543, i8* %544, align 1
  %545 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 16
  %546 = load i32, i32* %545, align 4
  %547 = trunc i32 %546 to i8
  %548 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 6, i32 1
  store i8 %547, i8* %548, align 1
  %549 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 17
  %550 = load i32, i32* %549, align 8
  %551 = trunc i32 %550 to i8
  %552 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 6, i32 2
  store i8 %551, i8* %552, align 1
  %553 = icmp eq i8 %543, 1
  br i1 %553, label %554, label %560

554:                                              ; preds = %525
  %555 = icmp eq i8 %547, 8
  %556 = and i32 %550, 255
  %557 = icmp eq i32 %556, 8
  %558 = and i1 %555, %557
  br i1 %558, label %559, label %560

559:                                              ; preds = %554
  store i8 0, i8* %544, align 1
  br label %560

560:                                              ; preds = %559, %554, %525
  %561 = phi i8 [ 0, %559 ], [ 1, %554 ], [ %543, %525 ]
  %562 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 94
  %563 = load i32, i32* %562, align 4
  %564 = icmp ne i32 %563, 0
  %565 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 2, i32 6
  %566 = zext i1 %564 to i8
  store i8 %566, i8* %565, align 2
  %567 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 29
  %568 = load i32, i32* %567, align 4
  %569 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 2, i32 1
  store i32 %568, i32* %569, align 4
  %570 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 4
  %571 = load i32, i32* %570, align 8
  %572 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 2, i32 0
  store i32 %571, i32* %572, align 4
  %573 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 11
  %574 = load i32, i32* %573, align 4
  %575 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 2, i32 2
  store i32 %574, i32* %575, align 4
  %576 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 12
  %577 = load i32, i32* %576, align 8
  %578 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 2, i32 3
  store i32 %577, i32* %578, align 4
  %579 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 62
  %580 = load i32, i32* %579, align 4
  %581 = trunc i32 %580 to i8
  %582 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 2, i32 4
  store i8 %581, i8* %582, align 4
  %583 = icmp eq i8 %561, 0
  br i1 %583, label %584, label %587

584:                                              ; preds = %560
  %585 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 9
  %586 = load i32, i32* %585, align 4
  br label %587

587:                                              ; preds = %560, %584
  %588 = phi i32 [ %586, %584 ], [ 0, %560 ]
  %589 = icmp ne i32 %588, 0
  %590 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 2, i32 5
  %591 = zext i1 %589 to i8
  store i8 %591, i8* %590, align 1
  %592 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 8
  %593 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 24
  %594 = bitcast %struct.aom_fixed_buf* %592 to i8*
  %595 = bitcast %struct.aom_fixed_buf* %593 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %594, i8* align 8 %595, i64 16, i1 false)
  %596 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 37
  %597 = load i32, i32* %596, align 4
  %598 = icmp ne i32 %597, 0
  %599 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 3, i32 6
  %600 = zext i1 %598 to i8
  store i8 %600, i8* %599, align 1
  %601 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 38
  %602 = load i32, i32* %601, align 8
  %603 = icmp eq i32 %602, 1
  br i1 %603, label %604, label %610

604:                                              ; preds = %587
  %605 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 39
  %606 = load i32, i32* %605, align 4
  %607 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 40
  %608 = load i32, i32* %607, align 8
  %609 = icmp ne i32 %606, %608
  br label %610

610:                                              ; preds = %604, %587
  %611 = phi i1 [ false, %587 ], [ %609, %604 ]
  %612 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 3, i32 5
  %613 = zext i1 %611 to i8
  store i8 %613, i8* %612, align 4
  %614 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 39
  %615 = load i32, i32* %614, align 4
  %616 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 3, i32 0
  store i32 %615, i32* %616, align 4
  %617 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 40
  %618 = load i32, i32* %617, align 8
  %619 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 3, i32 1
  store i32 %618, i32* %619, align 4
  %620 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 41
  %621 = load i32, i32* %620, align 4
  %622 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 3, i32 3
  store i32 %621, i32* %622, align 4
  %623 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 42
  %624 = load i32, i32* %623, align 8
  %625 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 3, i32 4
  store i32 %624, i32* %625, align 4
  %626 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 58
  %627 = load i32, i32* %626, align 4
  %628 = icmp ne i32 %627, 0
  %629 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 3, i32 7
  %630 = zext i1 %628 to i8
  store i8 %630, i8* %629, align 2
  %631 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 10
  %632 = load i32, i32* %631, align 8
  %633 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 3, i32 2
  store i32 %632, i32* %633, align 4
  %634 = load i32, i32* %617, align 8
  %635 = icmp eq i32 %634, 0
  %636 = select i1 %635, i32 0, i32 %632
  store i32 %636, i32* %633, align 4
  %637 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 96
  %638 = load i32, i32* %637, align 4
  %639 = icmp ne i32 %638, 0
  %640 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 3, i32 8
  %641 = zext i1 %639 to i8
  store i8 %641, i8* %640, align 1
  %642 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 0
  %643 = load i32, i32* %642, align 8
  %644 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 30
  store i32 %643, i32* %644, align 4
  %645 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 48
  %646 = load i32, i32* %645, align 4
  %647 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 13, i32 0
  store i32 %646, i32* %647, align 4
  %648 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 49
  %649 = load i32, i32* %648, align 8
  %650 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 13, i32 1
  store i32 %649, i32* %650, align 4
  %651 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 50
  %652 = load i32, i32* %651, align 4
  %653 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 13, i32 2
  store i32 %652, i32* %653, align 4
  %654 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 52
  %655 = load i32, i32* %654, align 4
  %656 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 13, i32 4
  store i32 %655, i32* %656, align 4
  %657 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 51
  %658 = load i32, i32* %657, align 8
  %659 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 13, i32 3
  store i32 %658, i32* %659, align 4
  %660 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 13
  %661 = load i32, i32* %660, align 8
  %662 = icmp slt i32 %661, 35
  %663 = select i1 %662, i32 %661, i32 35
  %664 = icmp sgt i32 %663, 0
  %665 = select i1 %664, i32 %663, i32 0
  %666 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 10, i32 0
  store i32 %665, i32* %666, align 4
  %667 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 1
  %668 = load i32, i32* %667, align 4
  %669 = icmp ne i32 %668, 0
  %670 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 10, i32 5
  %671 = zext i1 %669 to i8
  store i8 %671, i8* %670, align 4
  %672 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 2
  %673 = load i32, i32* %672, align 8
  %674 = icmp ne i32 %673, 0
  %675 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 10, i32 6
  %676 = zext i1 %674 to i8
  store i8 %676, i8* %675, align 1
  %677 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 13
  %678 = load i32, i32* %677, align 4
  %679 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 10, i32 1
  store i32 %678, i32* %679, align 4
  %680 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 14
  %681 = load i32, i32* %680, align 8
  %682 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 10, i32 2
  store i32 %681, i32* %682, align 4
  %683 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 15
  %684 = load i32, i32* %683, align 4
  %685 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 10, i32 3
  store i32 %684, i32* %685, align 4
  %686 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 16
  %687 = load i32, i32* %686, align 8
  %688 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 10, i32 4
  store i32 %687, i32* %688, align 4
  %689 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 17
  %690 = load i32, i32* %689, align 4
  %691 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 12, i32 2
  store i32 %690, i32* %691, align 8
  %692 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 18
  %693 = bitcast i8** %692 to i64*
  %694 = load i64, i64* %693, align 8
  %695 = bitcast %struct.TuneCfg* %177 to i64*
  store i64 %694, i64* %695, align 8
  %696 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 47
  %697 = load i32, i32* %696, align 8
  %698 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 12, i32 3
  store i32 %697, i32* %698, align 4
  %699 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 43
  %700 = load i32, i32* %699, align 4
  %701 = icmp eq i32 %700, 0
  br i1 %701, label %705, label %702

702:                                              ; preds = %610
  %703 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 12, i32 4
  store i32 0, i32* %703, align 8
  %704 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 12, i32 1
  store i8* null, i8** %704, align 8
  br label %714

705:                                              ; preds = %610
  %706 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 59
  %707 = load i32, i32* %706, align 8
  %708 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 12, i32 4
  store i32 %707, i32* %708, align 8
  %709 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 60
  %710 = bitcast i8** %709 to i64*
  %711 = load i64, i64* %710, align 8
  %712 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 12, i32 1
  %713 = bitcast i8** %712 to i64*
  store i64 %711, i64* %713, align 8
  br label %714

714:                                              ; preds = %705, %702
  %715 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 98
  %716 = bitcast float* %715 to i32*
  %717 = load i32, i32* %716, align 4
  %718 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 23
  %719 = bitcast float* %718 to i32*
  store i32 %717, i32* %719, align 8
  %720 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 99
  %721 = load i32, i32* %720, align 8
  %722 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 24
  store i32 %721, i32* %722, align 4
  %723 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 100
  %724 = load i32, i32* %723, align 4
  %725 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 25
  store i32 %724, i32* %725, align 8
  %726 = load i32, i32* %360, align 8
  %727 = icmp eq i32 %726, 8
  %728 = icmp sgt i32 %643, 7
  %729 = and i1 %728, %727
  br i1 %729, label %730, label %733

730:                                              ; preds = %714
  %731 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 3
  %732 = load i32, i32* %731, align 4
  br label %733

733:                                              ; preds = %714, %730
  %734 = phi i32 [ %732, %730 ], [ 0, %714 ]
  %735 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 26
  store i32 %734, i32* %735, align 4
  %736 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 36
  %737 = load i32, i32* %736, align 8
  %738 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 11, i32 0
  store i32 %737, i32* %738, align 4
  %739 = load i32, i32* %699, align 4
  %740 = icmp eq i32 %739, 0
  %741 = select i1 %740, i32 %737, i32 1
  store i32 %741, i32* %738, align 4
  %742 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 37
  %743 = load i32, i32* %742, align 4
  %744 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 11, i32 1
  store i32 %743, i32* %744, align 4
  %745 = load i32, i32* %699, align 4
  %746 = icmp ne i32 %745, 0
  %747 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 11, i32 8
  %748 = zext i1 %746 to i8
  store i8 %748, i8* %747, align 4
  br i1 %746, label %749, label %754

749:                                              ; preds = %733
  %750 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 56
  %751 = load i32, i32* %750, align 4
  %752 = icmp ne i32 %751, 0
  %753 = zext i1 %752 to i8
  br label %754

754:                                              ; preds = %733, %749
  %755 = phi i8 [ %753, %749 ], [ 0, %733 ]
  %756 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 11, i32 9
  store i8 %755, i8* %756, align 1
  %757 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 7
  %758 = load i32, i32* %757, align 4
  %759 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 11, i32 2
  store i32 %758, i32* %759, align 4
  %760 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 8
  %761 = load i32, i32* %760, align 8
  %762 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 11, i32 3
  store i32 %761, i32* %762, align 4
  %763 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 47
  %764 = load i32, i32* %763, align 4
  %765 = icmp slt i32 %764, 64
  %766 = select i1 %765, i32 %764, i32 64
  %767 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 11, i32 4
  store i32 %766, i32* %767, align 4
  %768 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 48
  %769 = load i32, i32* %768, align 8
  %770 = icmp slt i32 %769, 64
  %771 = select i1 %770, i32 %769, i32 64
  %772 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 11, i32 5
  store i32 %771, i32* %772, align 4
  %773 = icmp sgt i32 %764, 0
  br i1 %773, label %774, label %860

774:                                              ; preds = %754
  %775 = sext i32 %766 to i64
  %776 = icmp sgt i64 %775, 1
  %777 = select i1 %776, i64 %775, i64 1
  %778 = icmp ult i64 %777, 8
  br i1 %778, label %779, label %781

779:                                              ; preds = %858, %781, %774
  %780 = phi i64 [ 0, %781 ], [ 0, %774 ], [ %797, %858 ]
  br label %948

781:                                              ; preds = %774
  %782 = getelementptr %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 11, i32 6, i64 0
  %783 = bitcast i32* %782 to i8*
  %784 = icmp sgt i64 %775, 1
  %785 = select i1 %784, i64 %775, i64 1
  %786 = shl nuw nsw i64 %785, 2
  %787 = add nuw nsw i64 %786, 368
  %788 = getelementptr i8, i8* %4, i64 %787
  %789 = getelementptr %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 49, i64 0
  %790 = bitcast i32* %789 to i8*
  %791 = add nuw nsw i64 %786, 228
  %792 = getelementptr i8, i8* %5, i64 %791
  %793 = icmp ugt i8* %792, %783
  %794 = icmp ugt i8* %788, %790
  %795 = and i1 %793, %794
  br i1 %795, label %779, label %796

796:                                              ; preds = %781
  %797 = and i64 %777, 9223372036854775800
  %798 = add nsw i64 %797, -8
  %799 = lshr exact i64 %798, 3
  %800 = add nuw nsw i64 %799, 1
  %801 = and i64 %800, 1
  %802 = icmp eq i64 %798, 0
  br i1 %802, label %840, label %803

803:                                              ; preds = %796
  %804 = sub nuw nsw i64 %800, %801
  br label %805

805:                                              ; preds = %805, %803
  %806 = phi i64 [ 0, %803 ], [ %837, %805 ]
  %807 = phi i64 [ %804, %803 ], [ %838, %805 ]
  %808 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 49, i64 %806
  %809 = bitcast i32* %808 to <4 x i32>*
  %810 = load <4 x i32>, <4 x i32>* %809, align 4, !alias.scope !3
  %811 = getelementptr inbounds i32, i32* %808, i64 4
  %812 = bitcast i32* %811 to <4 x i32>*
  %813 = load <4 x i32>, <4 x i32>* %812, align 4, !alias.scope !3
  %814 = icmp sgt <4 x i32> %810, <i32 1, i32 1, i32 1, i32 1>
  %815 = icmp sgt <4 x i32> %813, <i32 1, i32 1, i32 1, i32 1>
  %816 = select <4 x i1> %814, <4 x i32> %810, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  %817 = select <4 x i1> %815, <4 x i32> %813, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  %818 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 11, i32 6, i64 %806
  %819 = bitcast i32* %818 to <4 x i32>*
  store <4 x i32> %816, <4 x i32>* %819, align 4, !alias.scope !6, !noalias !3
  %820 = getelementptr inbounds i32, i32* %818, i64 4
  %821 = bitcast i32* %820 to <4 x i32>*
  store <4 x i32> %817, <4 x i32>* %821, align 4, !alias.scope !6, !noalias !3
  %822 = or i64 %806, 8
  %823 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 49, i64 %822
  %824 = bitcast i32* %823 to <4 x i32>*
  %825 = load <4 x i32>, <4 x i32>* %824, align 4, !alias.scope !3
  %826 = getelementptr inbounds i32, i32* %823, i64 4
  %827 = bitcast i32* %826 to <4 x i32>*
  %828 = load <4 x i32>, <4 x i32>* %827, align 4, !alias.scope !3
  %829 = icmp sgt <4 x i32> %825, <i32 1, i32 1, i32 1, i32 1>
  %830 = icmp sgt <4 x i32> %828, <i32 1, i32 1, i32 1, i32 1>
  %831 = select <4 x i1> %829, <4 x i32> %825, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  %832 = select <4 x i1> %830, <4 x i32> %828, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  %833 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 11, i32 6, i64 %822
  %834 = bitcast i32* %833 to <4 x i32>*
  store <4 x i32> %831, <4 x i32>* %834, align 4, !alias.scope !6, !noalias !3
  %835 = getelementptr inbounds i32, i32* %833, i64 4
  %836 = bitcast i32* %835 to <4 x i32>*
  store <4 x i32> %832, <4 x i32>* %836, align 4, !alias.scope !6, !noalias !3
  %837 = add i64 %806, 16
  %838 = add i64 %807, -2
  %839 = icmp eq i64 %838, 0
  br i1 %839, label %840, label %805, !llvm.loop !8

840:                                              ; preds = %805, %796
  %841 = phi i64 [ 0, %796 ], [ %837, %805 ]
  %842 = icmp eq i64 %801, 0
  br i1 %842, label %858, label %843

843:                                              ; preds = %840
  %844 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 49, i64 %841
  %845 = bitcast i32* %844 to <4 x i32>*
  %846 = load <4 x i32>, <4 x i32>* %845, align 4, !alias.scope !3
  %847 = getelementptr inbounds i32, i32* %844, i64 4
  %848 = bitcast i32* %847 to <4 x i32>*
  %849 = load <4 x i32>, <4 x i32>* %848, align 4, !alias.scope !3
  %850 = icmp sgt <4 x i32> %846, <i32 1, i32 1, i32 1, i32 1>
  %851 = icmp sgt <4 x i32> %849, <i32 1, i32 1, i32 1, i32 1>
  %852 = select <4 x i1> %850, <4 x i32> %846, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  %853 = select <4 x i1> %851, <4 x i32> %849, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  %854 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 11, i32 6, i64 %841
  %855 = bitcast i32* %854 to <4 x i32>*
  store <4 x i32> %852, <4 x i32>* %855, align 4, !alias.scope !6, !noalias !3
  %856 = getelementptr inbounds i32, i32* %854, i64 4
  %857 = bitcast i32* %856 to <4 x i32>*
  store <4 x i32> %853, <4 x i32>* %857, align 4, !alias.scope !6, !noalias !3
  br label %858

858:                                              ; preds = %840, %843
  %859 = icmp eq i64 %777, %797
  br i1 %859, label %860, label %779

860:                                              ; preds = %948, %858, %754
  %861 = icmp sgt i32 %769, 0
  br i1 %861, label %862, label %957

862:                                              ; preds = %860
  %863 = sext i32 %771 to i64
  %864 = icmp sgt i64 %863, 1
  %865 = select i1 %864, i64 %863, i64 1
  %866 = icmp ult i64 %865, 8
  br i1 %866, label %867, label %869

867:                                              ; preds = %946, %869, %862
  %868 = phi i64 [ 0, %869 ], [ 0, %862 ], [ %885, %946 ]
  br label %965

869:                                              ; preds = %862
  %870 = getelementptr %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 11, i32 7, i64 0
  %871 = bitcast i32* %870 to i8*
  %872 = icmp sgt i64 %863, 1
  %873 = select i1 %872, i64 %863, i64 1
  %874 = shl nuw nsw i64 %873, 2
  %875 = add nuw nsw i64 %874, 624
  %876 = getelementptr i8, i8* %4, i64 %875
  %877 = getelementptr %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 50, i64 0
  %878 = bitcast i32* %877 to i8*
  %879 = add nuw nsw i64 %874, 484
  %880 = getelementptr i8, i8* %5, i64 %879
  %881 = icmp ugt i8* %880, %871
  %882 = icmp ugt i8* %876, %878
  %883 = and i1 %881, %882
  br i1 %883, label %867, label %884

884:                                              ; preds = %869
  %885 = and i64 %865, 9223372036854775800
  %886 = add nsw i64 %885, -8
  %887 = lshr exact i64 %886, 3
  %888 = add nuw nsw i64 %887, 1
  %889 = and i64 %888, 1
  %890 = icmp eq i64 %886, 0
  br i1 %890, label %928, label %891

891:                                              ; preds = %884
  %892 = sub nuw nsw i64 %888, %889
  br label %893

893:                                              ; preds = %893, %891
  %894 = phi i64 [ 0, %891 ], [ %925, %893 ]
  %895 = phi i64 [ %892, %891 ], [ %926, %893 ]
  %896 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 50, i64 %894
  %897 = bitcast i32* %896 to <4 x i32>*
  %898 = load <4 x i32>, <4 x i32>* %897, align 4, !alias.scope !10
  %899 = getelementptr inbounds i32, i32* %896, i64 4
  %900 = bitcast i32* %899 to <4 x i32>*
  %901 = load <4 x i32>, <4 x i32>* %900, align 4, !alias.scope !10
  %902 = icmp sgt <4 x i32> %898, <i32 1, i32 1, i32 1, i32 1>
  %903 = icmp sgt <4 x i32> %901, <i32 1, i32 1, i32 1, i32 1>
  %904 = select <4 x i1> %902, <4 x i32> %898, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  %905 = select <4 x i1> %903, <4 x i32> %901, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  %906 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 11, i32 7, i64 %894
  %907 = bitcast i32* %906 to <4 x i32>*
  store <4 x i32> %904, <4 x i32>* %907, align 4, !alias.scope !13, !noalias !10
  %908 = getelementptr inbounds i32, i32* %906, i64 4
  %909 = bitcast i32* %908 to <4 x i32>*
  store <4 x i32> %905, <4 x i32>* %909, align 4, !alias.scope !13, !noalias !10
  %910 = or i64 %894, 8
  %911 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 50, i64 %910
  %912 = bitcast i32* %911 to <4 x i32>*
  %913 = load <4 x i32>, <4 x i32>* %912, align 4, !alias.scope !10
  %914 = getelementptr inbounds i32, i32* %911, i64 4
  %915 = bitcast i32* %914 to <4 x i32>*
  %916 = load <4 x i32>, <4 x i32>* %915, align 4, !alias.scope !10
  %917 = icmp sgt <4 x i32> %913, <i32 1, i32 1, i32 1, i32 1>
  %918 = icmp sgt <4 x i32> %916, <i32 1, i32 1, i32 1, i32 1>
  %919 = select <4 x i1> %917, <4 x i32> %913, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  %920 = select <4 x i1> %918, <4 x i32> %916, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  %921 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 11, i32 7, i64 %910
  %922 = bitcast i32* %921 to <4 x i32>*
  store <4 x i32> %919, <4 x i32>* %922, align 4, !alias.scope !13, !noalias !10
  %923 = getelementptr inbounds i32, i32* %921, i64 4
  %924 = bitcast i32* %923 to <4 x i32>*
  store <4 x i32> %920, <4 x i32>* %924, align 4, !alias.scope !13, !noalias !10
  %925 = add i64 %894, 16
  %926 = add i64 %895, -2
  %927 = icmp eq i64 %926, 0
  br i1 %927, label %928, label %893, !llvm.loop !15

928:                                              ; preds = %893, %884
  %929 = phi i64 [ 0, %884 ], [ %925, %893 ]
  %930 = icmp eq i64 %889, 0
  br i1 %930, label %946, label %931

931:                                              ; preds = %928
  %932 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 50, i64 %929
  %933 = bitcast i32* %932 to <4 x i32>*
  %934 = load <4 x i32>, <4 x i32>* %933, align 4, !alias.scope !10
  %935 = getelementptr inbounds i32, i32* %932, i64 4
  %936 = bitcast i32* %935 to <4 x i32>*
  %937 = load <4 x i32>, <4 x i32>* %936, align 4, !alias.scope !10
  %938 = icmp sgt <4 x i32> %934, <i32 1, i32 1, i32 1, i32 1>
  %939 = icmp sgt <4 x i32> %937, <i32 1, i32 1, i32 1, i32 1>
  %940 = select <4 x i1> %938, <4 x i32> %934, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  %941 = select <4 x i1> %939, <4 x i32> %937, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  %942 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 11, i32 7, i64 %929
  %943 = bitcast i32* %942 to <4 x i32>*
  store <4 x i32> %940, <4 x i32>* %943, align 4, !alias.scope !13, !noalias !10
  %944 = getelementptr inbounds i32, i32* %942, i64 4
  %945 = bitcast i32* %944 to <4 x i32>*
  store <4 x i32> %941, <4 x i32>* %945, align 4, !alias.scope !13, !noalias !10
  br label %946

946:                                              ; preds = %928, %931
  %947 = icmp eq i64 %865, %885
  br i1 %947, label %957, label %867

948:                                              ; preds = %779, %948
  %949 = phi i64 [ %955, %948 ], [ %780, %779 ]
  %950 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 49, i64 %949
  %951 = load i32, i32* %950, align 4
  %952 = icmp sgt i32 %951, 1
  %953 = select i1 %952, i32 %951, i32 1
  %954 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 11, i32 6, i64 %949
  store i32 %953, i32* %954, align 4
  %955 = add nuw nsw i64 %949, 1
  %956 = icmp slt i64 %955, %775
  br i1 %956, label %948, label %860, !llvm.loop !16

957:                                              ; preds = %965, %946, %860
  %958 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 116
  %959 = load i32, i32* %958, align 8
  %960 = icmp ne i32 %959, 0
  %961 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 11, i32 10
  %962 = zext i1 %960 to i8
  store i8 %962, i8* %961, align 2
  %963 = load i8, i8* %747, align 4, !range !2
  %964 = icmp eq i8 %963, 0
  br i1 %964, label %978, label %974

965:                                              ; preds = %867, %965
  %966 = phi i64 [ %972, %965 ], [ %868, %867 ]
  %967 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 50, i64 %966
  %968 = load i32, i32* %967, align 4
  %969 = icmp sgt i32 %968, 1
  %970 = select i1 %969, i32 %968, i32 1
  %971 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 11, i32 7, i64 %966
  store i32 %970, i32* %971, align 4
  %972 = add nuw nsw i64 %966, 1
  %973 = icmp slt i64 %972, %863
  br i1 %973, label %965, label %957, !llvm.loop !17

974:                                              ; preds = %957
  %975 = load i32, i32* %399, align 8
  %976 = icmp ult i32 %975, 2
  br i1 %976, label %978, label %977

977:                                              ; preds = %974
  store i32 0, i32* %401, align 4
  br label %978

978:                                              ; preds = %974, %957, %977
  %979 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 74
  %980 = load i32, i32* %979, align 4
  %981 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 15, i32 0
  store i32 %980, i32* %981, align 4
  %982 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 75
  %983 = load i32, i32* %982, align 8
  %984 = icmp ne i32 %983, 0
  %985 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 15, i32 1
  %986 = zext i1 %984 to i8
  store i8 %986, i8* %985, align 4
  %987 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 79
  %988 = load i32, i32* %987, align 8
  %989 = icmp ne i32 %988, 0
  %990 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 15, i32 2
  %991 = zext i1 %989 to i8
  store i8 %991, i8* %990, align 1
  %992 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 6
  %993 = load i32, i32* %992, align 8
  %994 = icmp ne i32 %993, 0
  %995 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 35
  %996 = zext i1 %994 to i8
  store i8 %996, i8* %995, align 1
  %997 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 28
  %998 = load i32, i32* %997, align 8
  %999 = icmp ne i32 %998, 0
  %1000 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 17, i32 2
  %1001 = zext i1 %999 to i8
  store i8 %1001, i8* %1000, align 2
  %1002 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 86
  %1003 = load i32, i32* %1002, align 4
  %1004 = icmp ne i32 %1003, 0
  %1005 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 17, i32 0
  %1006 = zext i1 %1004 to i8
  store i8 %1006, i8* %1005, align 4
  %1007 = load i32, i32* %189, align 8
  %1008 = icmp eq i32 %1007, 1
  br i1 %1008, label %1016, label %1009

1009:                                             ; preds = %978
  %1010 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 87
  %1011 = load i32, i32* %1010, align 8
  %1012 = load i32, i32* %1002, align 4
  %1013 = and i32 %1012, %1011
  %1014 = icmp ne i32 %1013, 0
  %1015 = zext i1 %1014 to i8
  br label %1016

1016:                                             ; preds = %978, %1009
  %1017 = phi i8 [ %1015, %1009 ], [ 0, %978 ]
  %1018 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 17, i32 1
  store i8 %1017, i8* %1018, align 1
  %1019 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 63
  %1020 = load i32, i32* %1019, align 8
  %1021 = icmp ne i32 %1020, 0
  %1022 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 21, i32 0
  %1023 = zext i1 %1021 to i8
  store i8 %1023, i8* %1022, align 1
  %1024 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 64
  %1025 = load i32, i32* %1024, align 4
  %1026 = icmp ne i32 %1025, 0
  %1027 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 21, i32 1
  %1028 = zext i1 %1026 to i8
  store i8 %1028, i8* %1027, align 1
  %1029 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 65
  %1030 = load i32, i32* %1029, align 8
  %1031 = icmp ne i32 %1030, 0
  %1032 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 21, i32 2
  %1033 = zext i1 %1031 to i8
  store i8 %1033, i8* %1032, align 1
  %1034 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 66
  %1035 = load i32, i32* %1034, align 4
  %1036 = trunc i32 %1035 to i8
  %1037 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 21, i32 3
  store i8 %1036, i8* %1037, align 1
  %1038 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 67
  %1039 = load i32, i32* %1038, align 8
  %1040 = trunc i32 %1039 to i8
  %1041 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 21, i32 4
  store i8 %1040, i8* %1041, align 1
  %1042 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 97
  %1043 = load i32, i32* %1042, align 8
  %1044 = icmp ne i32 %1043, 0
  %1045 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 18, i32 6
  %1046 = zext i1 %1044 to i8
  store i8 %1046, i8* %1045, align 1
  %1047 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 68
  %1048 = load i32, i32* %1047, align 4
  %1049 = icmp ne i32 %1048, 0
  %1050 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 18, i32 0
  %1051 = zext i1 %1049 to i8
  store i8 %1051, i8* %1050, align 1
  %1052 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 88
  %1053 = load i32, i32* %1052, align 4
  %1054 = icmp ne i32 %1053, 0
  %1055 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 18, i32 1
  %1056 = zext i1 %1054 to i8
  store i8 %1056, i8* %1055, align 1
  %1057 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 89
  %1058 = load i32, i32* %1057, align 8
  %1059 = icmp ne i32 %1058, 0
  %1060 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 18, i32 2
  %1061 = zext i1 %1059 to i8
  store i8 %1061, i8* %1060, align 1
  %1062 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 90
  %1063 = load i32, i32* %1062, align 4
  %1064 = icmp ne i32 %1063, 0
  %1065 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 18, i32 3
  %1066 = zext i1 %1064 to i8
  store i8 %1066, i8* %1065, align 1
  %1067 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 91
  %1068 = load i32, i32* %1067, align 8
  %1069 = icmp ne i32 %1068, 0
  %1070 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 18, i32 4
  %1071 = zext i1 %1069 to i8
  store i8 %1071, i8* %1070, align 1
  %1072 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 92
  %1073 = load i32, i32* %1072, align 4
  %1074 = icmp ne i32 %1073, 0
  %1075 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 18, i32 5
  %1076 = zext i1 %1074 to i8
  store i8 %1076, i8* %1075, align 1
  %1077 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 70
  %1078 = load i32, i32* %1077, align 4
  %1079 = icmp ne i32 %1078, 0
  %1080 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 19, i32 0
  %1081 = zext i1 %1079 to i8
  store i8 %1081, i8* %1080, align 1
  %1082 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 71
  %1083 = load i32, i32* %1082, align 8
  %1084 = icmp ne i32 %1083, 0
  %1085 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 19, i32 1
  %1086 = zext i1 %1084 to i8
  store i8 %1086, i8* %1085, align 1
  %1087 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 72
  %1088 = load i32, i32* %1087, align 4
  %1089 = icmp ne i32 %1088, 0
  %1090 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 19, i32 2
  %1091 = zext i1 %1089 to i8
  store i8 %1091, i8* %1090, align 1
  %1092 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 103
  %1093 = load i32, i32* %1092, align 8
  %1094 = icmp ne i32 %1093, 0
  %1095 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 19, i32 3
  %1096 = zext i1 %1094 to i8
  store i8 %1096, i8* %1095, align 1
  %1097 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 104
  %1098 = load i32, i32* %1097, align 4
  %1099 = icmp ne i32 %1098, 0
  %1100 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 19, i32 4
  %1101 = zext i1 %1099 to i8
  store i8 %1101, i8* %1100, align 1
  %1102 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 105
  %1103 = load i32, i32* %1102, align 8
  %1104 = icmp ne i32 %1103, 0
  %1105 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 19, i32 5
  %1106 = zext i1 %1104 to i8
  store i8 %1106, i8* %1105, align 1
  %1107 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 106
  %1108 = load i32, i32* %1107, align 4
  %1109 = icmp ne i32 %1108, 0
  %1110 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 19, i32 6
  %1111 = zext i1 %1109 to i8
  store i8 %1111, i8* %1110, align 1
  %1112 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 73
  %1113 = load i32, i32* %1112, align 8
  %1114 = load i32, i32* %417, align 8
  %1115 = and i32 %1114, %1113
  %1116 = icmp ne i32 %1115, 0
  %1117 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 20, i32 0
  %1118 = zext i1 %1116 to i8
  store i8 %1118, i8* %1117, align 1
  %1119 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 78
  %1120 = load i32, i32* %1119, align 4
  %1121 = icmp ne i32 %1120, 0
  %1122 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 20, i32 1
  %1123 = zext i1 %1121 to i8
  store i8 %1123, i8* %1122, align 1
  %1124 = load i32, i32* %1119, align 4
  %1125 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 82
  %1126 = load i32, i32* %1125, align 4
  %1127 = and i32 %1126, %1124
  %1128 = icmp ne i32 %1127, 0
  %1129 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 20, i32 3
  %1130 = zext i1 %1128 to i8
  store i8 %1130, i8* %1129, align 1
  %1131 = load i32, i32* %1119, align 4
  %1132 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 83
  %1133 = load i32, i32* %1132, align 8
  %1134 = and i32 %1133, %1131
  %1135 = icmp ne i32 %1134, 0
  %1136 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 20, i32 4
  %1137 = zext i1 %1135 to i8
  store i8 %1137, i8* %1136, align 1
  %1138 = load i32, i32* %422, align 4
  %1139 = icmp eq i32 %1138, 0
  br i1 %1139, label %1145, label %1140

1140:                                             ; preds = %1016
  %1141 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 81
  %1142 = load i32, i32* %1141, align 8
  %1143 = icmp ne i32 %1142, 0
  %1144 = zext i1 %1143 to i8
  br label %1145

1145:                                             ; preds = %1016, %1140
  %1146 = phi i8 [ 0, %1016 ], [ %1144, %1140 ]
  %1147 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 20, i32 2
  store i8 %1146, i8* %1147, align 1
  %1148 = load i32, i32* %422, align 4
  %1149 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 84
  %1150 = load i32, i32* %1149, align 4
  %1151 = and i32 %1150, %1148
  %1152 = icmp ne i32 %1151, 0
  %1153 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 20, i32 5
  %1154 = zext i1 %1152 to i8
  store i8 %1154, i8* %1153, align 1
  %1155 = load i32, i32* %293, align 8
  %1156 = icmp eq i32 %1155, 0
  br i1 %1156, label %1157, label %1160

1157:                                             ; preds = %1145
  %1158 = load i32, i32* %699, align 4
  %1159 = icmp eq i32 %1158, 0
  br i1 %1159, label %1166, label %1160

1160:                                             ; preds = %1157, %1145
  %1161 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 7, i32 4
  store i32 0, i32* %1161, align 4
  %1162 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 7, i32 2
  store i8 8, i8* %1162, align 4
  %1163 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 7, i32 3
  store i8 8, i8* %1163, align 1
  %1164 = getelementptr inbounds %struct.SuperResCfg, %struct.SuperResCfg* %178, i64 0, i32 0
  store i32 255, i32* %1164, align 4
  %1165 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 7, i32 1
  br label %1208

1166:                                             ; preds = %1157
  %1167 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 18
  %1168 = load i32, i32* %1167, align 4
  %1169 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 7, i32 4
  store i32 %1168, i32* %1169, align 4
  %1170 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 19
  %1171 = load i32, i32* %1170, align 8
  %1172 = trunc i32 %1171 to i8
  %1173 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 7, i32 2
  store i8 %1172, i8* %1173, align 4
  %1174 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 20
  %1175 = load i32, i32* %1174, align 4
  %1176 = trunc i32 %1175 to i8
  %1177 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 7, i32 3
  store i8 %1176, i8* %1177, align 1
  %1178 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 21
  %1179 = load i32, i32* %1178, align 8
  %1180 = tail call i32 @av1_quantizer_to_qindex(i32 %1179) #9
  %1181 = getelementptr inbounds %struct.SuperResCfg, %struct.SuperResCfg* %178, i64 0, i32 0
  store i32 %1180, i32* %1181, align 4
  %1182 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 22
  %1183 = load i32, i32* %1182, align 4
  %1184 = tail call i32 @av1_quantizer_to_qindex(i32 %1183) #9
  %1185 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 7, i32 1
  store i32 %1184, i32* %1185, align 4
  %1186 = load i32, i32* %1169, align 4
  switch i32 %1186, label %1205 [
    i32 1, label %1187
    i32 3, label %1196
  ]

1187:                                             ; preds = %1166
  %1188 = load i8, i8* %1173, align 4
  %1189 = icmp eq i8 %1188, 8
  br i1 %1189, label %1190, label %1202

1190:                                             ; preds = %1187
  %1191 = load i8, i8* %1177, align 1
  %1192 = icmp eq i8 %1191, 8
  br i1 %1192, label %1195, label %1193

1193:                                             ; preds = %1190
  %1194 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 7, i32 4
  br label %1214

1195:                                             ; preds = %1190
  store i32 0, i32* %1169, align 4
  store i8 8, i8* %1173, align 4
  store i8 8, i8* %1177, align 1
  store i32 255, i32* %1181, align 4
  br label %1208

1196:                                             ; preds = %1166
  %1197 = load i32, i32* %1181, align 4
  %1198 = icmp eq i32 %1197, 255
  %1199 = icmp eq i32 %1184, 255
  %1200 = and i1 %1198, %1199
  br i1 %1200, label %1201, label %1202

1201:                                             ; preds = %1196
  store i32 0, i32* %1169, align 4
  store i8 8, i8* %1173, align 4
  store i8 8, i8* %1177, align 1
  store i32 255, i32* %1181, align 4
  br label %1208

1202:                                             ; preds = %1187, %1196
  %1203 = phi i32 [ 3, %1196 ], [ 1, %1187 ]
  %1204 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 7, i32 4
  br label %1214

1205:                                             ; preds = %1166
  %1206 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 7, i32 4
  %1207 = icmp eq i32 %1186, 0
  br i1 %1207, label %1211, label %1214

1208:                                             ; preds = %1160, %1201, %1195
  %1209 = phi i32* [ %1185, %1195 ], [ %1185, %1201 ], [ %1165, %1160 ]
  store i32 255, i32* %1209, align 4
  %1210 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 7, i32 4
  br label %1211

1211:                                             ; preds = %1208, %1205
  %1212 = phi i32* [ %1206, %1205 ], [ %1210, %1208 ]
  %1213 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 7, i32 5
  store i8 0, i8* %1213, align 4
  br label %1222

1214:                                             ; preds = %1193, %1202, %1205
  %1215 = phi i32* [ %1204, %1202 ], [ %1206, %1205 ], [ %1194, %1193 ]
  %1216 = phi i32 [ %1203, %1202 ], [ %1186, %1205 ], [ 1, %1193 ]
  %1217 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 93
  %1218 = load i32, i32* %1217, align 8
  %1219 = icmp ne i32 %1218, 0
  %1220 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 7, i32 5
  %1221 = zext i1 %1219 to i8
  store i8 %1221, i8* %1220, align 4
  br i1 %1219, label %1228, label %1222

1222:                                             ; preds = %1211, %1214
  %1223 = phi i32* [ %1212, %1211 ], [ %1215, %1214 ]
  store i32 0, i32* %1223, align 4
  %1224 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 7, i32 2
  store i8 8, i8* %1224, align 4
  %1225 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 7, i32 3
  store i8 8, i8* %1225, align 1
  %1226 = getelementptr inbounds %struct.SuperResCfg, %struct.SuperResCfg* %178, i64 0, i32 0
  store i32 255, i32* %1226, align 4
  %1227 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 7, i32 1
  store i32 255, i32* %1227, align 4
  br label %1228

1228:                                             ; preds = %1222, %1214
  %1229 = phi i32 [ 0, %1222 ], [ %1216, %1214 ]
  %1230 = load i32, i32* %239, align 4
  %1231 = icmp eq i32 %1230, 1
  br i1 %1231, label %1232, label %1234

1232:                                             ; preds = %1228
  %1233 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 14, i32 3
  store i8 0, i8* %1233, align 1
  store i8 0, i8* %254, align 2
  br label %1234

1234:                                             ; preds = %1232, %1228
  %1235 = getelementptr inbounds %struct.aom_codec_enc_cfg, %struct.aom_codec_enc_cfg* %1, i64 0, i32 46
  %1236 = load i32, i32* %1235, align 8
  %1237 = icmp ne i32 %1236, 0
  %1238 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 37
  %1239 = zext i1 %1237 to i8
  store i8 %1239, i8* %1238, align 1
  %1240 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 61
  %1241 = load i32, i32* %1240, align 8
  %1242 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 16, i32 0
  store i32 %1241, i32* %1242, align 4
  %1243 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 117
  %1244 = load i32, i32* %1243, align 4
  %1245 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 16, i32 1
  store i32 %1244, i32* %1245, align 4
  %1246 = load i8, i8* %544, align 1
  %1247 = icmp eq i8 %1246, 0
  %1248 = icmp eq i32 %1229, 0
  %1249 = and i1 %1247, %1248
  %1250 = select i1 %1249, i32 160, i32 288
  %1251 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 28
  store i32 %1250, i32* %1251, align 4
  %1252 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 31, i64 0
  %1253 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 109, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1252, i8* align 8 %1253, i64 32, i1 false)
  %1254 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 110
  %1255 = load i32, i32* %1254, align 8
  %1256 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 27
  store i32 %1255, i32* %1256, align 8
  %1257 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %2, i64 0, i32 19
  %1258 = bitcast i8** %1257 to i64*
  %1259 = load i64, i64* %1258, align 8
  %1260 = getelementptr inbounds %struct.AV1EncoderConfig, %struct.AV1EncoderConfig* %0, i64 0, i32 38
  %1261 = bitcast i8** %1260 to i64*
  store i64 %1259, i64* %1261, align 8
  ret void
}

declare %struct.AV1_PRIMARY* @av1_create_primary_compressor(%struct.aom_codec_pkt_list*, i32, %struct.AV1EncoderConfig*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare i32 @pthread_once(i32*, void ()*) local_unnamed_addr #3

declare i32 @av1_quantizer_to_qindex(i32) local_unnamed_addr #3

declare double @av1_convert_qindex_to_q(i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @pthread_mutex_init(%union.pthread_mutex_t*, %union.pthread_mutexattr_t*) local_unnamed_addr #5

declare %struct.AV1_COMP* @av1_create_compressor(%struct.AV1_PRIMARY*, %struct.AV1EncoderConfig*, %struct.BufferPool*, i8 zeroext, i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

declare void @av1_remove_primary_compressor(%struct.AV1_PRIMARY*) local_unnamed_addr #3

declare void @aom_free(i8*) local_unnamed_addr #3

declare void @av1_remove_compressor(%struct.AV1_COMP*) local_unnamed_addr #3

declare void @av1_free_ref_frame_buffers(%struct.BufferPool*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @pthread_mutex_destroy(%union.pthread_mutex_t*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_copy_reference(%struct.aom_codec_alg_priv* nocapture readonly, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.yv12_buffer_config, align 8
  %4 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, 41
  br i1 %6, label %7, label %13

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %9 = load i8*, i8** %8, align 8
  %10 = sext i32 %5 to i64
  %11 = getelementptr i8, i8* %9, i64 %10
  %12 = add nuw nsw i32 %5, 8
  store i32 %12, i32* %4, align 8
  br label %17

13:                                               ; preds = %2
  %14 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr i8, i8* %15, i64 8
  store i8* %16, i8** %14, align 8
  br label %17

17:                                               ; preds = %13, %7
  %18 = phi i8* [ %11, %7 ], [ %15, %13 ]
  %19 = bitcast i8* %18 to %struct.av1_ref_frame**
  %20 = load %struct.av1_ref_frame*, %struct.av1_ref_frame** %19, align 8
  %21 = icmp eq %struct.av1_ref_frame* %20, null
  br i1 %21, label %137, label %22

22:                                               ; preds = %17
  %23 = bitcast %struct.yv12_buffer_config* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %23) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 208, i1 false)
  %24 = getelementptr inbounds %struct.av1_ref_frame, %struct.av1_ref_frame* %20, i64 0, i32 2, i32 16
  %25 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %3, i64 0, i32 5
  %26 = bitcast [3 x i8*]* %24 to <2 x i64>*
  %27 = load <2 x i64>, <2 x i64>* %26, align 8
  %28 = bitcast %union.anon.11* %25 to <2 x i64>*
  store <2 x i64> %27, <2 x i64>* %28, align 8
  %29 = getelementptr inbounds %struct.av1_ref_frame, %struct.av1_ref_frame* %20, i64 0, i32 2, i32 16, i64 2
  %30 = bitcast i8** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %3, i64 0, i32 5, i32 0, i32 2
  %33 = bitcast i8** %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = getelementptr inbounds %struct.av1_ref_frame, %struct.av1_ref_frame* %20, i64 0, i32 2, i32 10
  %35 = load i32, i32* %34, align 8
  %36 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %3, i64 0, i32 2, i32 0, i32 0
  store i32 %35, i32* %36, align 8
  %37 = getelementptr inbounds %struct.av1_ref_frame, %struct.av1_ref_frame* %20, i64 0, i32 2, i32 11
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %3, i64 0, i32 3, i32 0, i32 0
  store i32 %38, i32* %39, align 8
  %40 = getelementptr inbounds %struct.av1_ref_frame, %struct.av1_ref_frame* %20, i64 0, i32 2, i32 12
  %41 = load i32, i32* %40, align 8
  %42 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %3, i64 0, i32 23
  store i32 %41, i32* %42, align 4
  %43 = getelementptr inbounds %struct.av1_ref_frame, %struct.av1_ref_frame* %20, i64 0, i32 2, i32 13
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %3, i64 0, i32 24
  store i32 %44, i32* %45, align 8
  %46 = getelementptr inbounds %struct.av1_ref_frame, %struct.av1_ref_frame* %20, i64 0, i32 2, i32 7
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %3, i64 0, i32 0, i32 0, i32 0
  store i32 %47, i32* %48, align 8
  %49 = getelementptr inbounds %struct.av1_ref_frame, %struct.av1_ref_frame* %20, i64 0, i32 2, i32 8
  %50 = load i32, i32* %49, align 8
  %51 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %3, i64 0, i32 1, i32 0, i32 0
  store i32 %50, i32* %51, align 8
  %52 = getelementptr inbounds %struct.av1_ref_frame, %struct.av1_ref_frame* %20, i64 0, i32 2, i32 14
  %53 = load i32, i32* %52, align 8
  %54 = icmp eq i32 %53, 1
  br i1 %54, label %55, label %58

55:                                               ; preds = %22
  %56 = add nsw i32 %47, 1
  %57 = sdiv i32 %56, 2
  br label %58

58:                                               ; preds = %55, %22
  %59 = phi i32 [ %57, %55 ], [ %47, %22 ]
  %60 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %3, i64 0, i32 0, i32 0, i32 1
  store i32 %59, i32* %60, align 4
  %61 = getelementptr inbounds %struct.av1_ref_frame, %struct.av1_ref_frame* %20, i64 0, i32 2, i32 15
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %67

64:                                               ; preds = %58
  %65 = add nsw i32 %50, 1
  %66 = sdiv i32 %65, 2
  br label %67

67:                                               ; preds = %64, %58
  %68 = phi i32 [ %66, %64 ], [ %50, %58 ]
  %69 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %3, i64 0, i32 1, i32 0, i32 1
  store i32 %68, i32* %69, align 4
  %70 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %3, i64 0, i32 2, i32 0, i32 1
  store i32 %59, i32* %70, align 4
  %71 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %3, i64 0, i32 3, i32 0, i32 1
  store i32 %68, i32* %71, align 4
  %72 = getelementptr inbounds %struct.av1_ref_frame, %struct.av1_ref_frame* %20, i64 0, i32 2, i32 17, i64 0
  %73 = load i32, i32* %72, align 8
  %74 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %3, i64 0, i32 4, i32 0, i32 0
  store i32 %73, i32* %74, align 8
  %75 = getelementptr inbounds %struct.av1_ref_frame, %struct.av1_ref_frame* %20, i64 0, i32 2, i32 17, i64 1
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %3, i64 0, i32 4, i32 0, i32 1
  store i32 %76, i32* %77, align 4
  %78 = getelementptr inbounds %struct.av1_ref_frame, %struct.av1_ref_frame* %20, i64 0, i32 2, i32 1
  %79 = load i32, i32* %78, align 4
  %80 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %3, i64 0, i32 17
  store i32 %79, i32* %80, align 4
  %81 = getelementptr inbounds %struct.av1_ref_frame, %struct.av1_ref_frame* %20, i64 0, i32 2, i32 2
  %82 = load i32, i32* %81, align 8
  %83 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %3, i64 0, i32 18
  store i32 %82, i32* %83, align 8
  %84 = getelementptr inbounds %struct.av1_ref_frame, %struct.av1_ref_frame* %20, i64 0, i32 2, i32 3
  %85 = load i32, i32* %84, align 4
  %86 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %3, i64 0, i32 19
  store i32 %85, i32* %86, align 4
  %87 = getelementptr inbounds %struct.av1_ref_frame, %struct.av1_ref_frame* %20, i64 0, i32 2, i32 4
  %88 = load i32, i32* %87, align 8
  %89 = trunc i32 %88 to i8
  %90 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %3, i64 0, i32 20
  store i8 %89, i8* %90, align 8
  %91 = getelementptr inbounds %struct.av1_ref_frame, %struct.av1_ref_frame* %20, i64 0, i32 2, i32 5
  %92 = load i32, i32* %91, align 4
  %93 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %3, i64 0, i32 21
  store i32 %92, i32* %93, align 4
  %94 = getelementptr inbounds %struct.av1_ref_frame, %struct.av1_ref_frame* %20, i64 0, i32 2, i32 6
  %95 = load i32, i32* %94, align 8
  %96 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %3, i64 0, i32 22
  store i32 %95, i32* %96, align 8
  %97 = getelementptr inbounds %struct.av1_ref_frame, %struct.av1_ref_frame* %20, i64 0, i32 2, i32 0
  %98 = load i32, i32* %97, align 8
  %99 = and i32 %98, 2048
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %109, label %101

101:                                              ; preds = %67
  %102 = lshr <2 x i64> %27, <i64 1, i64 1>
  %103 = inttoptr <2 x i64> %102 to <2 x i8*>
  %104 = bitcast %union.anon.11* %25 to <2 x i8*>*
  store <2 x i8*> %103, <2 x i8*>* %104, align 8
  %105 = lshr i64 %31, 1
  %106 = inttoptr i64 %105 to i8*
  store i8* %106, i8** %32, align 8
  %107 = ashr i32 %73, 1
  store i32 %107, i32* %74, align 8
  %108 = ashr i32 %76, 1
  store i32 %108, i32* %77, align 4
  br label %109

109:                                              ; preds = %67, %101
  %110 = phi i32 [ %107, %101 ], [ %73, %67 ]
  %111 = phi i32 [ 8, %101 ], [ 0, %67 ]
  %112 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %3, i64 0, i32 26
  store i32 %111, i32* %112, align 8
  %113 = load i32, i32* %46, align 4
  %114 = add i32 %113, 31
  %115 = and i32 %114, -32
  %116 = sub nsw i32 %110, %115
  %117 = sdiv i32 %116, 2
  %118 = icmp sgt i32 %117, 0
  %119 = select i1 %118, i32 %117, i32 0
  %120 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %3, i64 0, i32 12
  store i32 %119, i32* %120, align 8
  %121 = load i32, i32* %52, align 8
  %122 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %3, i64 0, i32 14
  store i32 %121, i32* %122, align 8
  %123 = load i32, i32* %61, align 4
  %124 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %3, i64 0, i32 15
  store i32 %123, i32* %124, align 4
  %125 = getelementptr inbounds %struct.av1_ref_frame, %struct.av1_ref_frame* %20, i64 0, i32 2, i32 26
  %126 = bitcast %struct.aom_metadata_array** %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %3, i64 0, i32 27
  %129 = bitcast %struct.aom_metadata_array** %128 to i64*
  store i64 %127, i64* %129, align 8
  %130 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 7
  %131 = load %struct.AV1_PRIMARY*, %struct.AV1_PRIMARY** %130, align 8
  %132 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %131, i64 0, i32 0
  %133 = load %struct.AV1_COMP*, %struct.AV1_COMP** %132, align 8
  %134 = getelementptr inbounds %struct.av1_ref_frame, %struct.av1_ref_frame* %20, i64 0, i32 0
  %135 = load i32, i32* %134, align 8
  %136 = call i32 @av1_copy_reference_enc(%struct.AV1_COMP* %133, i32 %135, %struct.yv12_buffer_config* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %23) #9
  br label %137

137:                                              ; preds = %17, %109
  %138 = phi i32 [ 0, %109 ], [ 8, %17 ]
  ret i32 %138
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_use_reference(%struct.aom_codec_alg_priv* nocapture readonly, %struct.__va_list_tag* nocapture) #0 {
  %3 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp ult i32 %4, 41
  br i1 %5, label %6, label %12

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %8 = load i8*, i8** %7, align 8
  %9 = sext i32 %4 to i64
  %10 = getelementptr i8, i8* %8, i64 %9
  %11 = add nuw nsw i32 %4, 8
  store i32 %11, i32* %3, align 8
  br label %16

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr i8, i8* %14, i64 8
  store i8* %15, i8** %13, align 8
  br label %16

16:                                               ; preds = %12, %6
  %17 = phi i8* [ %10, %6 ], [ %14, %12 ]
  %18 = bitcast i8* %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 7
  %21 = load %struct.AV1_PRIMARY*, %struct.AV1_PRIMARY** %20, align 8
  %22 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %21, i64 0, i32 0
  %23 = load %struct.AV1_COMP*, %struct.AV1_COMP** %22, align 8
  %24 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %23, i64 0, i32 27, i32 0
  %25 = tail call i32 @av1_use_as_reference(i32* %24, i32 %19) #9
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_reference(%struct.aom_codec_alg_priv* nocapture readonly, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.yv12_buffer_config, align 8
  %4 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, 41
  br i1 %6, label %7, label %13

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %9 = load i8*, i8** %8, align 8
  %10 = sext i32 %5 to i64
  %11 = getelementptr i8, i8* %9, i64 %10
  %12 = add nuw nsw i32 %5, 8
  store i32 %12, i32* %4, align 8
  br label %17

13:                                               ; preds = %2
  %14 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr i8, i8* %15, i64 8
  store i8* %16, i8** %14, align 8
  br label %17

17:                                               ; preds = %13, %7
  %18 = phi i8* [ %11, %7 ], [ %15, %13 ]
  %19 = bitcast i8* %18 to %struct.av1_ref_frame**
  %20 = load %struct.av1_ref_frame*, %struct.av1_ref_frame** %19, align 8
  %21 = icmp eq %struct.av1_ref_frame* %20, null
  br i1 %21, label %137, label %22

22:                                               ; preds = %17
  %23 = bitcast %struct.yv12_buffer_config* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %23) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 208, i1 false)
  %24 = getelementptr inbounds %struct.av1_ref_frame, %struct.av1_ref_frame* %20, i64 0, i32 2, i32 16
  %25 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %3, i64 0, i32 5
  %26 = bitcast [3 x i8*]* %24 to <2 x i64>*
  %27 = load <2 x i64>, <2 x i64>* %26, align 8
  %28 = bitcast %union.anon.11* %25 to <2 x i64>*
  store <2 x i64> %27, <2 x i64>* %28, align 8
  %29 = getelementptr inbounds %struct.av1_ref_frame, %struct.av1_ref_frame* %20, i64 0, i32 2, i32 16, i64 2
  %30 = bitcast i8** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %3, i64 0, i32 5, i32 0, i32 2
  %33 = bitcast i8** %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = getelementptr inbounds %struct.av1_ref_frame, %struct.av1_ref_frame* %20, i64 0, i32 2, i32 10
  %35 = load i32, i32* %34, align 8
  %36 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %3, i64 0, i32 2, i32 0, i32 0
  store i32 %35, i32* %36, align 8
  %37 = getelementptr inbounds %struct.av1_ref_frame, %struct.av1_ref_frame* %20, i64 0, i32 2, i32 11
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %3, i64 0, i32 3, i32 0, i32 0
  store i32 %38, i32* %39, align 8
  %40 = getelementptr inbounds %struct.av1_ref_frame, %struct.av1_ref_frame* %20, i64 0, i32 2, i32 12
  %41 = load i32, i32* %40, align 8
  %42 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %3, i64 0, i32 23
  store i32 %41, i32* %42, align 4
  %43 = getelementptr inbounds %struct.av1_ref_frame, %struct.av1_ref_frame* %20, i64 0, i32 2, i32 13
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %3, i64 0, i32 24
  store i32 %44, i32* %45, align 8
  %46 = getelementptr inbounds %struct.av1_ref_frame, %struct.av1_ref_frame* %20, i64 0, i32 2, i32 7
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %3, i64 0, i32 0, i32 0, i32 0
  store i32 %47, i32* %48, align 8
  %49 = getelementptr inbounds %struct.av1_ref_frame, %struct.av1_ref_frame* %20, i64 0, i32 2, i32 8
  %50 = load i32, i32* %49, align 8
  %51 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %3, i64 0, i32 1, i32 0, i32 0
  store i32 %50, i32* %51, align 8
  %52 = getelementptr inbounds %struct.av1_ref_frame, %struct.av1_ref_frame* %20, i64 0, i32 2, i32 14
  %53 = load i32, i32* %52, align 8
  %54 = icmp eq i32 %53, 1
  br i1 %54, label %55, label %58

55:                                               ; preds = %22
  %56 = add nsw i32 %47, 1
  %57 = sdiv i32 %56, 2
  br label %58

58:                                               ; preds = %55, %22
  %59 = phi i32 [ %57, %55 ], [ %47, %22 ]
  %60 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %3, i64 0, i32 0, i32 0, i32 1
  store i32 %59, i32* %60, align 4
  %61 = getelementptr inbounds %struct.av1_ref_frame, %struct.av1_ref_frame* %20, i64 0, i32 2, i32 15
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %67

64:                                               ; preds = %58
  %65 = add nsw i32 %50, 1
  %66 = sdiv i32 %65, 2
  br label %67

67:                                               ; preds = %64, %58
  %68 = phi i32 [ %66, %64 ], [ %50, %58 ]
  %69 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %3, i64 0, i32 1, i32 0, i32 1
  store i32 %68, i32* %69, align 4
  %70 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %3, i64 0, i32 2, i32 0, i32 1
  store i32 %59, i32* %70, align 4
  %71 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %3, i64 0, i32 3, i32 0, i32 1
  store i32 %68, i32* %71, align 4
  %72 = getelementptr inbounds %struct.av1_ref_frame, %struct.av1_ref_frame* %20, i64 0, i32 2, i32 17, i64 0
  %73 = load i32, i32* %72, align 8
  %74 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %3, i64 0, i32 4, i32 0, i32 0
  store i32 %73, i32* %74, align 8
  %75 = getelementptr inbounds %struct.av1_ref_frame, %struct.av1_ref_frame* %20, i64 0, i32 2, i32 17, i64 1
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %3, i64 0, i32 4, i32 0, i32 1
  store i32 %76, i32* %77, align 4
  %78 = getelementptr inbounds %struct.av1_ref_frame, %struct.av1_ref_frame* %20, i64 0, i32 2, i32 1
  %79 = load i32, i32* %78, align 4
  %80 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %3, i64 0, i32 17
  store i32 %79, i32* %80, align 4
  %81 = getelementptr inbounds %struct.av1_ref_frame, %struct.av1_ref_frame* %20, i64 0, i32 2, i32 2
  %82 = load i32, i32* %81, align 8
  %83 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %3, i64 0, i32 18
  store i32 %82, i32* %83, align 8
  %84 = getelementptr inbounds %struct.av1_ref_frame, %struct.av1_ref_frame* %20, i64 0, i32 2, i32 3
  %85 = load i32, i32* %84, align 4
  %86 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %3, i64 0, i32 19
  store i32 %85, i32* %86, align 4
  %87 = getelementptr inbounds %struct.av1_ref_frame, %struct.av1_ref_frame* %20, i64 0, i32 2, i32 4
  %88 = load i32, i32* %87, align 8
  %89 = trunc i32 %88 to i8
  %90 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %3, i64 0, i32 20
  store i8 %89, i8* %90, align 8
  %91 = getelementptr inbounds %struct.av1_ref_frame, %struct.av1_ref_frame* %20, i64 0, i32 2, i32 5
  %92 = load i32, i32* %91, align 4
  %93 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %3, i64 0, i32 21
  store i32 %92, i32* %93, align 4
  %94 = getelementptr inbounds %struct.av1_ref_frame, %struct.av1_ref_frame* %20, i64 0, i32 2, i32 6
  %95 = load i32, i32* %94, align 8
  %96 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %3, i64 0, i32 22
  store i32 %95, i32* %96, align 8
  %97 = getelementptr inbounds %struct.av1_ref_frame, %struct.av1_ref_frame* %20, i64 0, i32 2, i32 0
  %98 = load i32, i32* %97, align 8
  %99 = and i32 %98, 2048
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %109, label %101

101:                                              ; preds = %67
  %102 = lshr <2 x i64> %27, <i64 1, i64 1>
  %103 = inttoptr <2 x i64> %102 to <2 x i8*>
  %104 = bitcast %union.anon.11* %25 to <2 x i8*>*
  store <2 x i8*> %103, <2 x i8*>* %104, align 8
  %105 = lshr i64 %31, 1
  %106 = inttoptr i64 %105 to i8*
  store i8* %106, i8** %32, align 8
  %107 = ashr i32 %73, 1
  store i32 %107, i32* %74, align 8
  %108 = ashr i32 %76, 1
  store i32 %108, i32* %77, align 4
  br label %109

109:                                              ; preds = %67, %101
  %110 = phi i32 [ %107, %101 ], [ %73, %67 ]
  %111 = phi i32 [ 8, %101 ], [ 0, %67 ]
  %112 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %3, i64 0, i32 26
  store i32 %111, i32* %112, align 8
  %113 = load i32, i32* %46, align 4
  %114 = add i32 %113, 31
  %115 = and i32 %114, -32
  %116 = sub nsw i32 %110, %115
  %117 = sdiv i32 %116, 2
  %118 = icmp sgt i32 %117, 0
  %119 = select i1 %118, i32 %117, i32 0
  %120 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %3, i64 0, i32 12
  store i32 %119, i32* %120, align 8
  %121 = load i32, i32* %52, align 8
  %122 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %3, i64 0, i32 14
  store i32 %121, i32* %122, align 8
  %123 = load i32, i32* %61, align 4
  %124 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %3, i64 0, i32 15
  store i32 %123, i32* %124, align 4
  %125 = getelementptr inbounds %struct.av1_ref_frame, %struct.av1_ref_frame* %20, i64 0, i32 2, i32 26
  %126 = bitcast %struct.aom_metadata_array** %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %3, i64 0, i32 27
  %129 = bitcast %struct.aom_metadata_array** %128 to i64*
  store i64 %127, i64* %129, align 8
  %130 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 7
  %131 = load %struct.AV1_PRIMARY*, %struct.AV1_PRIMARY** %130, align 8
  %132 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %131, i64 0, i32 0
  %133 = load %struct.AV1_COMP*, %struct.AV1_COMP** %132, align 8
  %134 = getelementptr inbounds %struct.av1_ref_frame, %struct.av1_ref_frame* %20, i64 0, i32 0
  %135 = load i32, i32* %134, align 8
  %136 = call i32 @av1_set_reference_enc(%struct.AV1_COMP* %133, i32 %135, %struct.yv12_buffer_config* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %23) #9
  br label %137

137:                                              ; preds = %17, %109
  %138 = phi i32 [ 0, %109 ], [ 8, %17 ]
  ret i32 %138
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @ctrl_set_roi_map(%struct.aom_codec_alg_priv* nocapture readnone, %struct.__va_list_tag* nocapture readnone) #1 {
  ret i32 8
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_active_map(%struct.aom_codec_alg_priv* nocapture readonly, %struct.__va_list_tag* nocapture) #0 {
  %3 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp ult i32 %4, 41
  br i1 %5, label %6, label %12

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %8 = load i8*, i8** %7, align 8
  %9 = sext i32 %4 to i64
  %10 = getelementptr i8, i8* %8, i64 %9
  %11 = add nuw nsw i32 %4, 8
  store i32 %11, i32* %3, align 8
  br label %16

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr i8, i8* %14, i64 8
  store i8* %15, i8** %13, align 8
  br label %16

16:                                               ; preds = %12, %6
  %17 = phi i8* [ %10, %6 ], [ %14, %12 ]
  %18 = bitcast i8* %17 to %struct.aom_active_map**
  %19 = load %struct.aom_active_map*, %struct.aom_active_map** %18, align 8
  %20 = icmp eq %struct.aom_active_map* %19, null
  br i1 %20, label %35, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 7
  %23 = load %struct.AV1_PRIMARY*, %struct.AV1_PRIMARY** %22, align 8
  %24 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %23, i64 0, i32 0
  %25 = load %struct.AV1_COMP*, %struct.AV1_COMP** %24, align 8
  %26 = getelementptr inbounds %struct.aom_active_map, %struct.aom_active_map* %19, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %struct.aom_active_map, %struct.aom_active_map* %19, i64 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = getelementptr inbounds %struct.aom_active_map, %struct.aom_active_map* %19, i64 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = tail call i32 @av1_set_active_map(%struct.AV1_COMP* %25, i8* %27, i32 %29, i32 %31) #9
  %33 = icmp eq i32 %32, 0
  %34 = select i1 %33, i32 0, i32 8
  br label %35

35:                                               ; preds = %16, %21
  %36 = phi i32 [ %34, %21 ], [ 8, %16 ]
  ret i32 %36
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_scale_mode(%struct.aom_codec_alg_priv* nocapture readonly, %struct.__va_list_tag* nocapture) #0 {
  %3 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp ult i32 %4, 41
  br i1 %5, label %6, label %12

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %8 = load i8*, i8** %7, align 8
  %9 = sext i32 %4 to i64
  %10 = getelementptr i8, i8* %8, i64 %9
  %11 = add nuw nsw i32 %4, 8
  store i32 %11, i32* %3, align 8
  br label %16

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr i8, i8* %14, i64 8
  store i8* %15, i8** %13, align 8
  br label %16

16:                                               ; preds = %12, %6
  %17 = phi i8* [ %10, %6 ], [ %14, %12 ]
  %18 = bitcast i8* %17 to %struct.aom_scaling_mode**
  %19 = load %struct.aom_scaling_mode*, %struct.aom_scaling_mode** %18, align 8
  %20 = icmp eq %struct.aom_scaling_mode* %19, null
  br i1 %20, label %37, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 7
  %23 = load %struct.AV1_PRIMARY*, %struct.AV1_PRIMARY** %22, align 8
  %24 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %23, i64 0, i32 0
  %25 = load %struct.AV1_COMP*, %struct.AV1_COMP** %24, align 8
  %26 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %25, i64 0, i32 9
  %27 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %25, i64 0, i32 54
  %28 = getelementptr inbounds %struct.aom_scaling_mode, %struct.aom_scaling_mode* %19, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = trunc i32 %29 to i8
  %31 = getelementptr inbounds %struct.aom_scaling_mode, %struct.aom_scaling_mode* %19, i64 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = trunc i32 %32 to i8
  %34 = tail call i32 @av1_set_internal_size(%struct.AV1EncoderConfig* %26, %struct.ResizePendingParams* %27, i8 zeroext %30, i8 zeroext %33) #9
  %35 = icmp eq i32 %34, 0
  %36 = select i1 %35, i32 0, i32 8
  br label %37

37:                                               ; preds = %16, %21
  %38 = phi i32 [ %36, %21 ], [ 8, %16 ]
  ret i32 %38
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @ctrl_set_spatial_layer_id(%struct.aom_codec_alg_priv* nocapture readonly, %struct.__va_list_tag* nocapture) #4 {
  %3 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp ult i32 %4, 41
  br i1 %5, label %6, label %12

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %8 = load i8*, i8** %7, align 8
  %9 = sext i32 %4 to i64
  %10 = getelementptr i8, i8* %8, i64 %9
  %11 = add nuw nsw i32 %4, 8
  store i32 %11, i32* %3, align 8
  br label %16

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr i8, i8* %14, i64 8
  store i8* %15, i8** %13, align 8
  br label %16

16:                                               ; preds = %12, %6
  %17 = phi i8* [ %10, %6 ], [ %14, %12 ]
  %18 = bitcast i8* %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = icmp sgt i32 %19, 3
  br i1 %20, label %27, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 7
  %23 = load %struct.AV1_PRIMARY*, %struct.AV1_PRIMARY** %22, align 8
  %24 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %23, i64 0, i32 0
  %25 = load %struct.AV1_COMP*, %struct.AV1_COMP** %24, align 8
  %26 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %25, i64 0, i32 8, i32 48
  store i32 %19, i32* %26, align 8
  br label %27

27:                                               ; preds = %16, %21
  %28 = phi i32 [ 0, %21 ], [ 8, %16 ]
  ret i32 %28
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_cpuused(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 0
  store i32 %23, i32* %24, align 8
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_enable_auto_alt_ref(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 1
  store i32 %23, i32* %24, align 4
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_enable_auto_bwd_ref(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 2
  store i32 %23, i32* %24, align 8
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_sharpness(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 4
  store i32 %23, i32* %24, align 8
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_static_thresh(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 5
  store i32 %23, i32* %24, align 4
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_row_mt(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 6
  store i32 %23, i32* %24, align 8
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_tile_columns(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 7
  store i32 %23, i32* %24, align 4
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_tile_rows(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 8
  store i32 %23, i32* %24, align 8
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_enable_tpl_model(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.101, i64 0, i64 0), i8** %26, align 8
  br label %30

27:                                               ; preds = %20
  %28 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 9
  store i32 0, i32* %28, align 4
  %29 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  br label %30

30:                                               ; preds = %27, %25
  %31 = phi i32 [ 8, %25 ], [ %29, %27 ]
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %31
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_enable_keyframe_filtering(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 10
  store i32 %23, i32* %24, align 8
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_arnr_max_frames(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 11
  store i32 %23, i32* %24, align 4
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_arnr_strength(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 12
  store i32 %23, i32* %24, align 8
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_tuning(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 17
  store i32 %23, i32* %24, align 4
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_cq_level(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 20
  store i32 %23, i32* %24, align 8
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_rc_max_intra_bitrate_pct(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 21
  store i32 %23, i32* %24, align 4
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @ctrl_set_number_spatial_layers(%struct.aom_codec_alg_priv* nocapture readonly, %struct.__va_list_tag* nocapture) #4 {
  %3 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp ult i32 %4, 41
  br i1 %5, label %6, label %12

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %8 = load i8*, i8** %7, align 8
  %9 = sext i32 %4 to i64
  %10 = getelementptr i8, i8* %8, i64 %9
  %11 = add nuw nsw i32 %4, 8
  store i32 %11, i32* %3, align 8
  br label %16

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr i8, i8* %14, i64 8
  store i8* %15, i8** %13, align 8
  br label %16

16:                                               ; preds = %12, %6
  %17 = phi i8* [ %10, %6 ], [ %14, %12 ]
  %18 = bitcast i8* %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = icmp sgt i32 %19, 4
  br i1 %20, label %25, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 7
  %23 = load %struct.AV1_PRIMARY*, %struct.AV1_PRIMARY** %22, align 8
  %24 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %23, i64 0, i32 19
  store i32 %19, i32* %24, align 4
  br label %25

25:                                               ; preds = %16, %21
  %26 = phi i32 [ 0, %21 ], [ 8, %16 ]
  ret i32 %26
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_rc_max_inter_bitrate_pct(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 22
  store i32 %23, i32* %24, align 8
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_rc_gf_cbr_boost_pct(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 23
  store i32 %23, i32* %24, align 4
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_lossless(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 24
  store i32 %23, i32* %24, align 8
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_enable_cdef(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 25
  store i32 %23, i32* %24, align 4
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_enable_restoration(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.102, i64 0, i64 0), i8** %26, align 8
  br label %30

27:                                               ; preds = %20
  %28 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 26
  store i32 0, i32* %28, align 8
  %29 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  br label %30

30:                                               ; preds = %27, %25
  %31 = phi i32 [ 8, %25 ], [ %29, %27 ]
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %31
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_force_video_mode(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 27
  store i32 %23, i32* %24, align 4
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_enable_obmc(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.103, i64 0, i64 0), i8** %26, align 8
  br label %30

27:                                               ; preds = %20
  %28 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 28
  store i32 0, i32* %28, align 8
  %29 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  br label %30

30:                                               ; preds = %27, %25
  %31 = phi i32 [ 8, %25 ], [ %29, %27 ]
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %31
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_disable_trellis_quant(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 29
  store i32 %23, i32* %24, align 4
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_enable_qm(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 30
  store i32 %23, i32* %24, align 8
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_qm_y(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 31
  store i32 %23, i32* %24, align 4
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_qm_u(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 32
  store i32 %23, i32* %24, align 8
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_qm_v(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 33
  store i32 %23, i32* %24, align 4
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_qm_min(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 34
  store i32 %23, i32* %24, align 8
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_qm_max(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 35
  store i32 %23, i32* %24, align 4
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_num_tg(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 36
  store i32 %23, i32* %24, align 8
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_mtu(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 37
  store i32 %23, i32* %24, align 4
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_timing_info_type(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 38
  store i32 %23, i32* %24, align 8
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_frame_parallel_decoding_mode(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 39
  store i32 %23, i32* %24, align 4
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_error_resilient_mode(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 57
  store i32 %23, i32* %24, align 8
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_s_frame_mode(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 58
  store i32 %23, i32* %24, align 4
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_enable_rect_partitions(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 63
  store i32 %23, i32* %24, align 8
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_enable_ab_partitions(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 64
  store i32 %23, i32* %24, align 4
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_enable_1to4_partitions(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 65
  store i32 %23, i32* %24, align 8
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_min_partition_size(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 66
  store i32 %23, i32* %24, align 4
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_max_partition_size(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 67
  store i32 %23, i32* %24, align 8
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_enable_dual_filter(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 40
  store i32 %23, i32* %24, align 8
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_enable_chroma_deltaq(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 41
  store i32 %23, i32* %24, align 4
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_enable_intra_edge_filter(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 68
  store i32 %23, i32* %24, align 4
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_enable_order_hint(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 69
  store i32 %23, i32* %24, align 8
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_enable_tx64(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 70
  store i32 %23, i32* %24, align 4
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_enable_flip_idtx(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 71
  store i32 %23, i32* %24, align 8
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_enable_rect_tx(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 72
  store i32 %23, i32* %24, align 4
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_enable_dist_wtd_comp(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 73
  store i32 %23, i32* %24, align 8
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_max_reference_frames(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 74
  store i32 %23, i32* %24, align 4
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_enable_reduced_reference_set(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 75
  store i32 %23, i32* %24, align 8
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_enable_ref_frame_mvs(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 76
  store i32 %23, i32* %24, align 4
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_allow_ref_frame_mvs(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 77
  store i32 %23, i32* %24, align 8
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_enable_masked_comp(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 78
  store i32 %23, i32* %24, align 4
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_enable_onesided_comp(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 79
  store i32 %23, i32* %24, align 8
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_enable_interintra_comp(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 80
  store i32 %23, i32* %24, align 4
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_enable_smooth_interintra(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 81
  store i32 %23, i32* %24, align 8
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_enable_diff_wtd_comp(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 82
  store i32 %23, i32* %24, align 4
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_enable_interinter_wedge(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 83
  store i32 %23, i32* %24, align 8
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_enable_interintra_wedge(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 84
  store i32 %23, i32* %24, align 4
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_enable_global_motion(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.104, i64 0, i64 0), i8** %26, align 8
  br label %30

27:                                               ; preds = %20
  %28 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 85
  store i32 0, i32* %28, align 8
  %29 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  br label %30

30:                                               ; preds = %27, %25
  %31 = phi i32 [ 8, %25 ], [ %29, %27 ]
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %31
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_enable_warped_motion(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.105, i64 0, i64 0), i8** %26, align 8
  br label %30

27:                                               ; preds = %20
  %28 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 86
  store i32 0, i32* %28, align 4
  %29 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  br label %30

30:                                               ; preds = %27, %25
  %31 = phi i32 [ 8, %25 ], [ %29, %27 ]
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %31
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_allow_warped_motion(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 87
  store i32 %23, i32* %24, align 8
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_enable_filter_intra(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 88
  store i32 %23, i32* %24, align 4
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_enable_smooth_intra(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 89
  store i32 %23, i32* %24, align 8
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_enable_paeth_intra(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 90
  store i32 %23, i32* %24, align 4
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_enable_cfl_intra(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 91
  store i32 %23, i32* %24, align 8
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_enable_diagonal_intra(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 92
  store i32 %23, i32* %24, align 4
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_enable_superres(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 93
  store i32 %23, i32* %24, align 8
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_enable_overlay(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 94
  store i32 %23, i32* %24, align 4
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_enable_palette(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 95
  store i32 %23, i32* %24, align 8
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_enable_intrabc(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 96
  store i32 %23, i32* %24, align 4
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_enable_angle_delta(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 97
  store i32 %23, i32* %24, align 8
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_aq_mode(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = trunc i32 %23 to i8
  %25 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 42
  store i8 %24, i8* %25, align 8
  %26 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %26
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_reduced_tx_type_set(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 103
  store i32 %23, i32* %24, align 8
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_intra_dct_only(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 104
  store i32 %23, i32* %24, align 4
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_inter_dct_only(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 105
  store i32 %23, i32* %24, align 8
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_intra_default_tx_only(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 106
  store i32 %23, i32* %24, align 4
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_quant_b_adapt(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 107
  store i32 %23, i32* %24, align 8
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_coeff_cost_upd_freq(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 112
  store i32 %23, i32* %24, align 8
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_mode_cost_upd_freq(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 113
  store i32 %23, i32* %24, align 4
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_mv_cost_upd_freq(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 114
  store i32 %23, i32* %24, align 8
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_deltaq_mode(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = and i32 %23, 255
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %28, label %26

26:                                               ; preds = %20
  %27 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.106, i64 0, i64 0), i8** %27, align 8
  br label %32

28:                                               ; preds = %20
  %29 = trunc i32 %23 to i8
  %30 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 43
  store i8 %29, i8* %30, align 1
  %31 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  br label %32

32:                                               ; preds = %28, %26
  %33 = phi i32 [ 8, %26 ], [ %31, %28 ]
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %33
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_deltalf_mode(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 44
  store i32 %23, i32* %24, align 4
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_frame_periodic_boost(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 45
  store i32 %23, i32* %24, align 8
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_tune_content(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 47
  store i32 %23, i32* %24, align 8
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_cdf_update_mode(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 62
  store i32 %23, i32* %24, align 4
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_color_primaries(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 48
  store i32 %23, i32* %24, align 4
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_transfer_characteristics(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 49
  store i32 %23, i32* %24, align 8
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_matrix_coefficients(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 50
  store i32 %23, i32* %24, align 4
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_chroma_sample_position(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 51
  store i32 %23, i32* %24, align 8
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_color_range(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 52
  store i32 %23, i32* %24, align 4
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_noise_sensitivity(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 3
  store i32 %23, i32* %24, align 4
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_min_gf_interval(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 13
  store i32 %23, i32* %24, align 4
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_max_gf_interval(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 14
  store i32 %23, i32* %24, align 8
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_gf_min_pyr_height(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 15
  store i32 %23, i32* %24, align 4
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_gf_max_pyr_height(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 16
  store i32 %23, i32* %24, align 8
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_render_size(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32**
  %23 = load i32*, i32** %22, align 8
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 53
  store i32 %24, i32* %25, align 8
  %26 = getelementptr inbounds i32, i32* %23, i64 1
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 54
  store i32 %27, i32* %28, align 4
  %29 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %29
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_superblock_size(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 55
  store i32 %23, i32* %24, align 8
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_single_tile_decoding(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 56
  store i32 %23, i32* %24, align 4
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_vmaf_model_path(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 18
  %25 = bitcast i8** %24 to i64*
  store i64 %23, i64* %25, align 8
  %26 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %26
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_partition_info_path(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 19
  %25 = bitcast i8** %24 to i64*
  store i64 %23, i64* %25, align 8
  %26 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %26
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_film_grain_test_vector(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 59
  store i32 %23, i32* %24, align 8
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_film_grain_table(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 60
  %25 = bitcast i8** %24 to i64*
  store i64 %23, i64* %25, align 8
  %26 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %26
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_denoise_noise_level(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = sitofp i32 %23 to float
  %25 = fdiv float %24, 1.000000e+01
  %26 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 98
  store float %25, float* %26, align 4
  %27 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %27
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_denoise_block_size(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 99
  store i32 %23, i32* %24, align 8
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_enable_dnl_denoising(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 100
  store i32 %23, i32* %24, align 4
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_enable_motion_vector_unit_test(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 61
  store i32 %23, i32* %24, align 8
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_enable_ext_tile_debug(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 116
  store i32 %23, i32* %24, align 8
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_target_seq_level_idx(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = add i32 %23, 99
  %25 = icmp ult i32 %24, 3299
  br i1 %25, label %26, label %32

26:                                               ; preds = %20
  %27 = sdiv i32 %23, 100
  %28 = srem i32 %23, 100
  %29 = trunc i32 %28 to i8
  %30 = sext i32 %27 to i64
  %31 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 109, i64 %30
  store i8 %29, i8* %31, align 1
  br label %32

32:                                               ; preds = %26, %20
  %33 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %33
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_tier_mask(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 110
  store i32 %23, i32* %24, align 8
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_min_cr(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 111
  store i32 %23, i32* %24, align 4
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @ctrl_set_layer_id(%struct.aom_codec_alg_priv* nocapture readonly, %struct.__va_list_tag* nocapture) #4 {
  %3 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp ult i32 %4, 41
  br i1 %5, label %6, label %12

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %8 = load i8*, i8** %7, align 8
  %9 = sext i32 %4 to i64
  %10 = getelementptr i8, i8* %8, i64 %9
  %11 = add nuw nsw i32 %4, 8
  store i32 %11, i32* %3, align 8
  br label %16

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr i8, i8* %14, i64 8
  store i8* %15, i8** %13, align 8
  br label %16

16:                                               ; preds = %12, %6
  %17 = phi i8* [ %10, %6 ], [ %14, %12 ]
  %18 = bitcast i8* %17 to %struct.aom_svc_layer_id**
  %19 = load %struct.aom_svc_layer_id*, %struct.aom_svc_layer_id** %18, align 8
  %20 = getelementptr inbounds %struct.aom_svc_layer_id, %struct.aom_svc_layer_id* %19, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 7
  %23 = load %struct.AV1_PRIMARY*, %struct.AV1_PRIMARY** %22, align 8
  %24 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %23, i64 0, i32 0
  %25 = load %struct.AV1_COMP*, %struct.AV1_COMP** %24, align 8
  %26 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %25, i64 0, i32 8, i32 48
  store i32 %21, i32* %26, align 8
  %27 = getelementptr inbounds %struct.aom_svc_layer_id, %struct.aom_svc_layer_id* %19, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = load %struct.AV1_PRIMARY*, %struct.AV1_PRIMARY** %22, align 8
  %30 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %29, i64 0, i32 0
  %31 = load %struct.AV1_COMP*, %struct.AV1_COMP** %30, align 8
  %32 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %31, i64 0, i32 8, i32 47
  store i32 %28, i32* %32, align 4
  %33 = load i32, i32* %20, align 4
  %34 = load %struct.AV1_PRIMARY*, %struct.AV1_PRIMARY** %22, align 8
  %35 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %34, i64 0, i32 0
  %36 = load %struct.AV1_COMP*, %struct.AV1_COMP** %35, align 8
  %37 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %36, i64 0, i32 75, i32 0
  store i32 %33, i32* %37, align 16
  %38 = load i32, i32* %27, align 4
  %39 = load %struct.AV1_PRIMARY*, %struct.AV1_PRIMARY** %22, align 8
  %40 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %39, i64 0, i32 0
  %41 = load %struct.AV1_COMP*, %struct.AV1_COMP** %40, align 8
  %42 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %41, i64 0, i32 75, i32 1
  store i32 %38, i32* %42, align 4
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_svc_params(%struct.aom_codec_alg_priv* nocapture readonly, %struct.__va_list_tag* nocapture) #0 {
  %3 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 7
  %4 = load %struct.AV1_PRIMARY*, %struct.AV1_PRIMARY** %3, align 8
  %5 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %4, i64 0, i32 0
  %6 = load %struct.AV1_COMP*, %struct.AV1_COMP** %5, align 8
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to %struct.aom_svc_params**
  %23 = load %struct.aom_svc_params*, %struct.aom_svc_params** %22, align 8
  %24 = getelementptr inbounds %struct.aom_svc_params, %struct.aom_svc_params* %23, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %4, i64 0, i32 19
  store i32 %25, i32* %26, align 4
  %27 = getelementptr inbounds %struct.aom_svc_params, %struct.aom_svc_params* %23, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %4, i64 0, i32 18
  store i32 %28, i32* %29, align 8
  %30 = load i32, i32* %24, align 4
  %31 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %6, i64 0, i32 75, i32 2
  store i32 %30, i32* %31, align 8
  %32 = load i32, i32* %27, align 4
  %33 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %6, i64 0, i32 75, i32 3
  store i32 %32, i32* %33, align 4
  %34 = load i32, i32* %26, align 4
  %35 = icmp ugt i32 %34, 1
  br i1 %35, label %39, label %36

36:                                               ; preds = %20
  %37 = load i32, i32* %29, align 8
  %38 = icmp ugt i32 %37, 1
  br i1 %38, label %39, label %113

39:                                               ; preds = %36, %20
  %40 = load %struct.AV1_PRIMARY*, %struct.AV1_PRIMARY** %3, align 8
  %41 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %40, i64 0, i32 16
  store i32 1, i32* %41, align 8
  %42 = load i32, i32* %26, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %92, label %44

44:                                               ; preds = %39
  %45 = load i32, i32* %29, align 8
  br label %46

46:                                               ; preds = %44, %86
  %47 = phi i32 [ %42, %44 ], [ %87, %86 ]
  %48 = phi i32 [ %45, %44 ], [ %88, %86 ]
  %49 = phi i64 [ 0, %44 ], [ %89, %86 ]
  %50 = icmp eq i32 %48, 0
  br i1 %50, label %86, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %struct.aom_svc_params, %struct.aom_svc_params* %23, i64 0, i32 4, i64 %49
  %53 = getelementptr inbounds %struct.aom_svc_params, %struct.aom_svc_params* %23, i64 0, i32 5, i64 %49
  %54 = trunc i64 %49 to i32
  br label %55

55:                                               ; preds = %51, %55
  %56 = phi i64 [ 0, %51 ], [ %80, %55 ]
  %57 = phi i32 [ %48, %51 ], [ %81, %55 ]
  %58 = mul i32 %57, %54
  %59 = trunc i64 %56 to i32
  %60 = add i32 %58, %59
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds %struct.aom_svc_params, %struct.aom_svc_params* %23, i64 0, i32 2, i64 %61
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %6, i64 0, i32 75, i32 21, i64 %61, i32 10
  store i32 %63, i32* %64, align 4
  %65 = getelementptr inbounds %struct.aom_svc_params, %struct.aom_svc_params* %23, i64 0, i32 3, i64 %61
  %66 = load i32, i32* %65, align 4
  %67 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %6, i64 0, i32 75, i32 21, i64 %61, i32 11
  store i32 %66, i32* %67, align 8
  %68 = load i32, i32* %52, align 4
  %69 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %6, i64 0, i32 75, i32 21, i64 %61, i32 4
  store i32 %68, i32* %69, align 8
  %70 = load i32, i32* %53, align 4
  %71 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %6, i64 0, i32 75, i32 21, i64 %61, i32 5
  store i32 %70, i32* %71, align 4
  %72 = getelementptr inbounds %struct.aom_svc_params, %struct.aom_svc_params* %23, i64 0, i32 6, i64 %61
  %73 = load i32, i32* %72, align 4
  %74 = mul nsw i32 %73, 1000
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %6, i64 0, i32 75, i32 21, i64 %61, i32 3
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %struct.aom_svc_params, %struct.aom_svc_params* %23, i64 0, i32 7, i64 %56
  %78 = load i32, i32* %77, align 4
  %79 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %6, i64 0, i32 75, i32 21, i64 %61, i32 2
  store i32 %78, i32* %79, align 8
  %80 = add nuw nsw i64 %56, 1
  %81 = load i32, i32* %29, align 8
  %82 = zext i32 %81 to i64
  %83 = icmp ult i64 %80, %82
  br i1 %83, label %55, label %84

84:                                               ; preds = %55
  %85 = load i32, i32* %26, align 4
  br label %86

86:                                               ; preds = %84, %46
  %87 = phi i32 [ %85, %84 ], [ %47, %46 ]
  %88 = phi i32 [ %81, %84 ], [ 0, %46 ]
  %89 = add nuw nsw i64 %49, 1
  %90 = zext i32 %87 to i64
  %91 = icmp ult i64 %89, %90
  br i1 %91, label %46, label %92

92:                                               ; preds = %86, %39
  %93 = phi i32 [ 0, %39 ], [ %87, %86 ]
  %94 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %6, i64 0, i32 8, i32 0, i32 4
  %95 = load i32, i32* %94, align 4
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %110

97:                                               ; preds = %92
  %98 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %6, i64 0, i32 0
  %99 = load %struct.AV1_PRIMARY*, %struct.AV1_PRIMARY** %98, align 16
  %100 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %99, i64 0, i32 3
  %101 = load i32, i32* %100, align 8
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %109

103:                                              ; preds = %97
  %104 = load i32, i32* %29, align 8
  %105 = mul i32 %104, %93
  %106 = add i32 %105, -1
  %107 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %4, i64 0, i32 15, i32 37
  store i32 %106, i32* %107, align 8
  %108 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %6, i64 0, i32 9
  tail call void @av1_init_seq_coding_tools(%struct.AV1_PRIMARY* %4, %struct.AV1EncoderConfig* %108, i32 1) #9
  br label %109

109:                                              ; preds = %97, %103
  tail call void @av1_init_layer_context(%struct.AV1_COMP* %6) #9
  br label %110

110:                                              ; preds = %109, %92
  %111 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %6, i64 0, i32 9, i32 4, i32 3
  %112 = load i64, i64* %111, align 8
  tail call void @av1_update_layer_context_change_config(%struct.AV1_COMP* %6, i64 %112) #9
  br label %113

113:                                              ; preds = %110, %36
  ret i32 0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @ctrl_set_svc_ref_frame_config(%struct.aom_codec_alg_priv* nocapture readonly, %struct.__va_list_tag* nocapture) #4 {
  %3 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 7
  %4 = load %struct.AV1_PRIMARY*, %struct.AV1_PRIMARY** %3, align 8
  %5 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %4, i64 0, i32 0
  %6 = load %struct.AV1_COMP*, %struct.AV1_COMP** %5, align 8
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to %struct.aom_svc_ref_frame_config**
  %23 = load %struct.aom_svc_ref_frame_config*, %struct.aom_svc_ref_frame_config** %22, align 8
  %24 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %6, i64 0, i32 75, i32 4
  store i32 1, i32* %24, align 16
  %25 = getelementptr inbounds %struct.aom_svc_ref_frame_config, %struct.aom_svc_ref_frame_config* %23, i64 0, i32 0, i64 0
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %6, i64 0, i32 75, i32 8, i64 0
  store i32 %26, i32* %27, align 4
  %28 = getelementptr inbounds %struct.aom_svc_ref_frame_config, %struct.aom_svc_ref_frame_config* %23, i64 0, i32 1, i64 0
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %6, i64 0, i32 75, i32 9, i64 0
  store i32 %29, i32* %30, align 4
  %31 = getelementptr inbounds %struct.aom_svc_ref_frame_config, %struct.aom_svc_ref_frame_config* %23, i64 0, i32 0, i64 1
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %6, i64 0, i32 75, i32 8, i64 1
  store i32 %32, i32* %33, align 4
  %34 = getelementptr inbounds %struct.aom_svc_ref_frame_config, %struct.aom_svc_ref_frame_config* %23, i64 0, i32 1, i64 1
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %6, i64 0, i32 75, i32 9, i64 1
  store i32 %35, i32* %36, align 4
  %37 = getelementptr inbounds %struct.aom_svc_ref_frame_config, %struct.aom_svc_ref_frame_config* %23, i64 0, i32 0, i64 2
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %6, i64 0, i32 75, i32 8, i64 2
  store i32 %38, i32* %39, align 4
  %40 = getelementptr inbounds %struct.aom_svc_ref_frame_config, %struct.aom_svc_ref_frame_config* %23, i64 0, i32 1, i64 2
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %6, i64 0, i32 75, i32 9, i64 2
  store i32 %41, i32* %42, align 4
  %43 = getelementptr inbounds %struct.aom_svc_ref_frame_config, %struct.aom_svc_ref_frame_config* %23, i64 0, i32 0, i64 3
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %6, i64 0, i32 75, i32 8, i64 3
  store i32 %44, i32* %45, align 4
  %46 = getelementptr inbounds %struct.aom_svc_ref_frame_config, %struct.aom_svc_ref_frame_config* %23, i64 0, i32 1, i64 3
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %6, i64 0, i32 75, i32 9, i64 3
  store i32 %47, i32* %48, align 4
  %49 = getelementptr inbounds %struct.aom_svc_ref_frame_config, %struct.aom_svc_ref_frame_config* %23, i64 0, i32 0, i64 4
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %6, i64 0, i32 75, i32 8, i64 4
  store i32 %50, i32* %51, align 4
  %52 = getelementptr inbounds %struct.aom_svc_ref_frame_config, %struct.aom_svc_ref_frame_config* %23, i64 0, i32 1, i64 4
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %6, i64 0, i32 75, i32 9, i64 4
  store i32 %53, i32* %54, align 4
  %55 = getelementptr inbounds %struct.aom_svc_ref_frame_config, %struct.aom_svc_ref_frame_config* %23, i64 0, i32 0, i64 5
  %56 = load i32, i32* %55, align 4
  %57 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %6, i64 0, i32 75, i32 8, i64 5
  store i32 %56, i32* %57, align 4
  %58 = getelementptr inbounds %struct.aom_svc_ref_frame_config, %struct.aom_svc_ref_frame_config* %23, i64 0, i32 1, i64 5
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %6, i64 0, i32 75, i32 9, i64 5
  store i32 %59, i32* %60, align 4
  %61 = getelementptr inbounds %struct.aom_svc_ref_frame_config, %struct.aom_svc_ref_frame_config* %23, i64 0, i32 0, i64 6
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %6, i64 0, i32 75, i32 8, i64 6
  store i32 %62, i32* %63, align 4
  %64 = getelementptr inbounds %struct.aom_svc_ref_frame_config, %struct.aom_svc_ref_frame_config* %23, i64 0, i32 1, i64 6
  %65 = load i32, i32* %64, align 4
  %66 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %6, i64 0, i32 75, i32 9, i64 6
  store i32 %65, i32* %66, align 4
  %67 = getelementptr inbounds %struct.aom_svc_ref_frame_config, %struct.aom_svc_ref_frame_config* %23, i64 0, i32 2, i64 0
  %68 = load i32, i32* %67, align 4
  %69 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %6, i64 0, i32 75, i32 10, i64 0
  store i32 %68, i32* %69, align 4
  %70 = getelementptr inbounds %struct.aom_svc_ref_frame_config, %struct.aom_svc_ref_frame_config* %23, i64 0, i32 2, i64 1
  %71 = load i32, i32* %70, align 4
  %72 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %6, i64 0, i32 75, i32 10, i64 1
  store i32 %71, i32* %72, align 4
  %73 = getelementptr inbounds %struct.aom_svc_ref_frame_config, %struct.aom_svc_ref_frame_config* %23, i64 0, i32 2, i64 2
  %74 = load i32, i32* %73, align 4
  %75 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %6, i64 0, i32 75, i32 10, i64 2
  store i32 %74, i32* %75, align 4
  %76 = getelementptr inbounds %struct.aom_svc_ref_frame_config, %struct.aom_svc_ref_frame_config* %23, i64 0, i32 2, i64 3
  %77 = load i32, i32* %76, align 4
  %78 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %6, i64 0, i32 75, i32 10, i64 3
  store i32 %77, i32* %78, align 4
  %79 = getelementptr inbounds %struct.aom_svc_ref_frame_config, %struct.aom_svc_ref_frame_config* %23, i64 0, i32 2, i64 4
  %80 = load i32, i32* %79, align 4
  %81 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %6, i64 0, i32 75, i32 10, i64 4
  store i32 %80, i32* %81, align 4
  %82 = getelementptr inbounds %struct.aom_svc_ref_frame_config, %struct.aom_svc_ref_frame_config* %23, i64 0, i32 2, i64 5
  %83 = load i32, i32* %82, align 4
  %84 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %6, i64 0, i32 75, i32 10, i64 5
  store i32 %83, i32* %84, align 4
  %85 = getelementptr inbounds %struct.aom_svc_ref_frame_config, %struct.aom_svc_ref_frame_config* %23, i64 0, i32 2, i64 6
  %86 = load i32, i32* %85, align 4
  %87 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %6, i64 0, i32 75, i32 10, i64 6
  store i32 %86, i32* %87, align 4
  %88 = getelementptr inbounds %struct.aom_svc_ref_frame_config, %struct.aom_svc_ref_frame_config* %23, i64 0, i32 2, i64 7
  %89 = load i32, i32* %88, align 4
  %90 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %6, i64 0, i32 75, i32 10, i64 7
  store i32 %89, i32* %90, align 4
  %91 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %6, i64 0, i32 75, i32 6
  store i32 1, i32* %91, align 8
  %92 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %6, i64 0, i32 75, i32 7
  store i32 0, i32* %92, align 4
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_vbr_corpus_complexity_lap(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 108
  store i32 %23, i32* %24, align 4
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_enable_sb_multipass_unit_test(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 117
  store i32 %23, i32* %24, align 4
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_dv_cost_upd_freq(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 115
  store i32 %23, i32* %24, align 4
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_get_quantizer(%struct.aom_codec_alg_priv* nocapture readonly, %struct.__va_list_tag* nocapture) #0 {
  %3 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp ult i32 %4, 41
  br i1 %5, label %6, label %12

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %8 = load i8*, i8** %7, align 8
  %9 = sext i32 %4 to i64
  %10 = getelementptr i8, i8* %8, i64 %9
  %11 = add nuw nsw i32 %4, 8
  store i32 %11, i32* %3, align 8
  br label %16

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr i8, i8* %14, i64 8
  store i8* %15, i8** %13, align 8
  br label %16

16:                                               ; preds = %12, %6
  %17 = phi i8* [ %10, %6 ], [ %14, %12 ]
  %18 = bitcast i8* %17 to i32**
  %19 = load i32*, i32** %18, align 8
  %20 = icmp eq i32* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 7
  %23 = load %struct.AV1_PRIMARY*, %struct.AV1_PRIMARY** %22, align 8
  %24 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %23, i64 0, i32 0
  %25 = load %struct.AV1_COMP*, %struct.AV1_COMP** %24, align 8
  %26 = tail call i32 @av1_get_quantizer(%struct.AV1_COMP* %25) #9
  store i32 %26, i32* %19, align 4
  br label %27

27:                                               ; preds = %16, %21
  %28 = phi i32 [ 0, %21 ], [ 8, %16 ]
  ret i32 %28
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_get_quantizer64(%struct.aom_codec_alg_priv* nocapture readonly, %struct.__va_list_tag* nocapture) #0 {
  %3 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp ult i32 %4, 41
  br i1 %5, label %6, label %12

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %8 = load i8*, i8** %7, align 8
  %9 = sext i32 %4 to i64
  %10 = getelementptr i8, i8* %8, i64 %9
  %11 = add nuw nsw i32 %4, 8
  store i32 %11, i32* %3, align 8
  br label %16

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr i8, i8* %14, i64 8
  store i8* %15, i8** %13, align 8
  br label %16

16:                                               ; preds = %12, %6
  %17 = phi i8* [ %10, %6 ], [ %14, %12 ]
  %18 = bitcast i8* %17 to i32**
  %19 = load i32*, i32** %18, align 8
  %20 = icmp eq i32* %19, null
  br i1 %20, label %28, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 7
  %23 = load %struct.AV1_PRIMARY*, %struct.AV1_PRIMARY** %22, align 8
  %24 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %23, i64 0, i32 0
  %25 = load %struct.AV1_COMP*, %struct.AV1_COMP** %24, align 8
  %26 = tail call i32 @av1_get_quantizer(%struct.AV1_COMP* %25) #9
  %27 = tail call i32 @av1_qindex_to_quantizer(i32 %26) #9
  store i32 %27, i32* %19, align 4
  br label %28

28:                                               ; preds = %16, %21
  %29 = phi i32 [ 0, %21 ], [ 8, %16 ]
  ret i32 %29
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @ctrl_get_reference(%struct.aom_codec_alg_priv* nocapture readonly, %struct.__va_list_tag* nocapture) #4 {
  %3 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp ult i32 %4, 41
  br i1 %5, label %6, label %12

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %8 = load i8*, i8** %7, align 8
  %9 = sext i32 %4 to i64
  %10 = getelementptr i8, i8* %8, i64 %9
  %11 = add nuw nsw i32 %4, 8
  store i32 %11, i32* %3, align 8
  br label %16

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr i8, i8* %14, i64 8
  store i8* %15, i8** %13, align 8
  br label %16

16:                                               ; preds = %12, %6
  %17 = phi i8* [ %10, %6 ], [ %14, %12 ]
  %18 = bitcast i8* %17 to %struct.av1_ref_frame**
  %19 = load %struct.av1_ref_frame*, %struct.av1_ref_frame** %18, align 8
  %20 = icmp eq %struct.av1_ref_frame* %19, null
  br i1 %20, label %39, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.av1_ref_frame, %struct.av1_ref_frame* %19, i64 0, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = icmp ugt i32 %23, 7
  br i1 %24, label %39, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 7
  %27 = load %struct.AV1_PRIMARY*, %struct.AV1_PRIMARY** %26, align 8
  %28 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %27, i64 0, i32 0
  %29 = load %struct.AV1_COMP*, %struct.AV1_COMP** %28, align 8
  %30 = sext i32 %23 to i64
  %31 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %29, i64 0, i32 8, i32 16, i64 %30
  %32 = load %struct.RefCntBuffer*, %struct.RefCntBuffer** %31, align 8
  %33 = icmp eq %struct.RefCntBuffer* %32, null
  %34 = getelementptr inbounds %struct.RefCntBuffer, %struct.RefCntBuffer* %32, i64 0, i32 17
  %35 = icmp eq %struct.yv12_buffer_config* %34, null
  %36 = or i1 %33, %35
  br i1 %36, label %39, label %37

37:                                               ; preds = %25
  %38 = getelementptr inbounds %struct.av1_ref_frame, %struct.av1_ref_frame* %19, i64 0, i32 2
  tail call fastcc void @yuvconfig2image(%struct.aom_image* %38, %struct.yv12_buffer_config* nonnull %34)
  br label %39

39:                                               ; preds = %25, %21, %16, %37
  %40 = phi i32 [ 0, %37 ], [ 8, %16 ], [ 1, %21 ], [ 1, %25 ]
  ret i32 %40
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_get_active_map(%struct.aom_codec_alg_priv* nocapture readonly, %struct.__va_list_tag* nocapture) #0 {
  %3 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp ult i32 %4, 41
  br i1 %5, label %6, label %12

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %8 = load i8*, i8** %7, align 8
  %9 = sext i32 %4 to i64
  %10 = getelementptr i8, i8* %8, i64 %9
  %11 = add nuw nsw i32 %4, 8
  store i32 %11, i32* %3, align 8
  br label %16

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr i8, i8* %14, i64 8
  store i8* %15, i8** %13, align 8
  br label %16

16:                                               ; preds = %12, %6
  %17 = phi i8* [ %10, %6 ], [ %14, %12 ]
  %18 = bitcast i8* %17 to %struct.aom_active_map**
  %19 = load %struct.aom_active_map*, %struct.aom_active_map** %18, align 8
  %20 = icmp eq %struct.aom_active_map* %19, null
  br i1 %20, label %35, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 7
  %23 = load %struct.AV1_PRIMARY*, %struct.AV1_PRIMARY** %22, align 8
  %24 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %23, i64 0, i32 0
  %25 = load %struct.AV1_COMP*, %struct.AV1_COMP** %24, align 8
  %26 = getelementptr inbounds %struct.aom_active_map, %struct.aom_active_map* %19, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %struct.aom_active_map, %struct.aom_active_map* %19, i64 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = getelementptr inbounds %struct.aom_active_map, %struct.aom_active_map* %19, i64 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = tail call i32 @av1_get_active_map(%struct.AV1_COMP* %25, i8* %27, i32 %29, i32 %31) #9
  %33 = icmp eq i32 %32, 0
  %34 = select i1 %33, i32 0, i32 8
  br label %35

35:                                               ; preds = %16, %21
  %36 = phi i32 [ %34, %21 ], [ 8, %16 ]
  ret i32 %36
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_get_new_frame_image(%struct.aom_codec_alg_priv* nocapture readonly, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.yv12_buffer_config, align 8
  %4 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, 41
  br i1 %6, label %7, label %13

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %9 = load i8*, i8** %8, align 8
  %10 = sext i32 %5 to i64
  %11 = getelementptr i8, i8* %9, i64 %10
  %12 = add nuw nsw i32 %5, 8
  store i32 %12, i32* %4, align 8
  br label %17

13:                                               ; preds = %2
  %14 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr i8, i8* %15, i64 8
  store i8* %16, i8** %14, align 8
  br label %17

17:                                               ; preds = %13, %7
  %18 = phi i8* [ %11, %7 ], [ %15, %13 ]
  %19 = bitcast i8* %18 to %struct.aom_image**
  %20 = load %struct.aom_image*, %struct.aom_image** %19, align 8
  %21 = icmp eq %struct.aom_image* %20, null
  br i1 %21, label %33, label %22

22:                                               ; preds = %17
  %23 = bitcast %struct.yv12_buffer_config* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %23) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 208, i1 false)
  %24 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 7
  %25 = load %struct.AV1_PRIMARY*, %struct.AV1_PRIMARY** %24, align 8
  %26 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %25, i64 0, i32 0
  %27 = load %struct.AV1_COMP*, %struct.AV1_COMP** %26, align 8
  %28 = call i32 @av1_get_last_show_frame(%struct.AV1_COMP* %27, %struct.yv12_buffer_config* nonnull %3) #9
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %22
  call fastcc void @yuvconfig2image(%struct.aom_image* nonnull %20, %struct.yv12_buffer_config* nonnull %3)
  br label %31

31:                                               ; preds = %22, %30
  %32 = phi i32 [ 0, %30 ], [ 1, %22 ]
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %23) #9
  br label %33

33:                                               ; preds = %17, %31
  %34 = phi i32 [ %32, %31 ], [ 8, %17 ]
  ret i32 %34
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_copy_new_frame_image(%struct.aom_codec_alg_priv* nocapture readonly, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.yv12_buffer_config, align 8
  %4 = alloca %struct.yv12_buffer_config, align 8
  %5 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp ult i32 %6, 41
  br i1 %7, label %8, label %14

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %10 = load i8*, i8** %9, align 8
  %11 = sext i32 %6 to i64
  %12 = getelementptr i8, i8* %10, i64 %11
  %13 = add nuw nsw i32 %6, 8
  store i32 %13, i32* %5, align 8
  br label %18

14:                                               ; preds = %2
  %15 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr i8, i8* %16, i64 8
  store i8* %17, i8** %15, align 8
  br label %18

18:                                               ; preds = %14, %8
  %19 = phi i8* [ %12, %8 ], [ %16, %14 ]
  %20 = bitcast i8* %19 to %struct.aom_image**
  %21 = load %struct.aom_image*, %struct.aom_image** %20, align 8
  %22 = icmp eq %struct.aom_image* %21, null
  br i1 %22, label %146, label %23

23:                                               ; preds = %18
  %24 = bitcast %struct.yv12_buffer_config* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %24) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 208, i1 false)
  %25 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 7
  %26 = load %struct.AV1_PRIMARY*, %struct.AV1_PRIMARY** %25, align 8
  %27 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %26, i64 0, i32 0
  %28 = load %struct.AV1_COMP*, %struct.AV1_COMP** %27, align 8
  %29 = call i32 @av1_get_last_show_frame(%struct.AV1_COMP* %28, %struct.yv12_buffer_config* nonnull %3) #9
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %144

31:                                               ; preds = %23
  %32 = bitcast %struct.yv12_buffer_config* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %32) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 208, i1 false)
  %33 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %21, i64 0, i32 16
  %34 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %4, i64 0, i32 5
  %35 = bitcast [3 x i8*]* %33 to <2 x i64>*
  %36 = load <2 x i64>, <2 x i64>* %35, align 8
  %37 = bitcast %union.anon.11* %34 to <2 x i64>*
  store <2 x i64> %36, <2 x i64>* %37, align 8
  %38 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %21, i64 0, i32 16, i64 2
  %39 = bitcast i8** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %4, i64 0, i32 5, i32 0, i32 2
  %42 = bitcast i8** %41 to i64*
  store i64 %40, i64* %42, align 8
  %43 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %21, i64 0, i32 10
  %44 = load i32, i32* %43, align 8
  %45 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %4, i64 0, i32 2, i32 0, i32 0
  store i32 %44, i32* %45, align 8
  %46 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %21, i64 0, i32 11
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %4, i64 0, i32 3, i32 0, i32 0
  store i32 %47, i32* %48, align 8
  %49 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %21, i64 0, i32 12
  %50 = load i32, i32* %49, align 8
  %51 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %4, i64 0, i32 23
  store i32 %50, i32* %51, align 4
  %52 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %21, i64 0, i32 13
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %4, i64 0, i32 24
  store i32 %53, i32* %54, align 8
  %55 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %21, i64 0, i32 7
  %56 = load i32, i32* %55, align 4
  %57 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %4, i64 0, i32 0, i32 0, i32 0
  store i32 %56, i32* %57, align 8
  %58 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %21, i64 0, i32 8
  %59 = load i32, i32* %58, align 8
  %60 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %4, i64 0, i32 1, i32 0, i32 0
  store i32 %59, i32* %60, align 8
  %61 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %21, i64 0, i32 14
  %62 = load i32, i32* %61, align 8
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %67

64:                                               ; preds = %31
  %65 = add nsw i32 %56, 1
  %66 = sdiv i32 %65, 2
  br label %67

67:                                               ; preds = %64, %31
  %68 = phi i32 [ %66, %64 ], [ %56, %31 ]
  %69 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %4, i64 0, i32 0, i32 0, i32 1
  store i32 %68, i32* %69, align 4
  %70 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %21, i64 0, i32 15
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, 1
  br i1 %72, label %73, label %76

73:                                               ; preds = %67
  %74 = add nsw i32 %59, 1
  %75 = sdiv i32 %74, 2
  br label %76

76:                                               ; preds = %73, %67
  %77 = phi i32 [ %75, %73 ], [ %59, %67 ]
  %78 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %4, i64 0, i32 1, i32 0, i32 1
  store i32 %77, i32* %78, align 4
  %79 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %4, i64 0, i32 2, i32 0, i32 1
  store i32 %68, i32* %79, align 4
  %80 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %4, i64 0, i32 3, i32 0, i32 1
  store i32 %77, i32* %80, align 4
  %81 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %21, i64 0, i32 17, i64 0
  %82 = load i32, i32* %81, align 8
  %83 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %4, i64 0, i32 4, i32 0, i32 0
  store i32 %82, i32* %83, align 8
  %84 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %21, i64 0, i32 17, i64 1
  %85 = load i32, i32* %84, align 4
  %86 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %4, i64 0, i32 4, i32 0, i32 1
  store i32 %85, i32* %86, align 4
  %87 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %21, i64 0, i32 1
  %88 = load i32, i32* %87, align 4
  %89 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %4, i64 0, i32 17
  store i32 %88, i32* %89, align 4
  %90 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %21, i64 0, i32 2
  %91 = load i32, i32* %90, align 8
  %92 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %4, i64 0, i32 18
  store i32 %91, i32* %92, align 8
  %93 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %21, i64 0, i32 3
  %94 = load i32, i32* %93, align 4
  %95 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %4, i64 0, i32 19
  store i32 %94, i32* %95, align 4
  %96 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %21, i64 0, i32 4
  %97 = load i32, i32* %96, align 8
  %98 = trunc i32 %97 to i8
  %99 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %4, i64 0, i32 20
  store i8 %98, i8* %99, align 8
  %100 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %21, i64 0, i32 5
  %101 = load i32, i32* %100, align 4
  %102 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %4, i64 0, i32 21
  store i32 %101, i32* %102, align 4
  %103 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %21, i64 0, i32 6
  %104 = load i32, i32* %103, align 8
  %105 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %4, i64 0, i32 22
  store i32 %104, i32* %105, align 8
  %106 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %21, i64 0, i32 0
  %107 = load i32, i32* %106, align 8
  %108 = and i32 %107, 2048
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %118, label %110

110:                                              ; preds = %76
  %111 = lshr <2 x i64> %36, <i64 1, i64 1>
  %112 = inttoptr <2 x i64> %111 to <2 x i8*>
  %113 = bitcast %union.anon.11* %34 to <2 x i8*>*
  store <2 x i8*> %112, <2 x i8*>* %113, align 8
  %114 = lshr i64 %40, 1
  %115 = inttoptr i64 %114 to i8*
  store i8* %115, i8** %41, align 8
  %116 = ashr i32 %82, 1
  store i32 %116, i32* %83, align 8
  %117 = ashr i32 %85, 1
  store i32 %117, i32* %86, align 4
  br label %118

118:                                              ; preds = %76, %110
  %119 = phi i32 [ %116, %110 ], [ %82, %76 ]
  %120 = phi i32 [ 8, %110 ], [ 0, %76 ]
  %121 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %4, i64 0, i32 26
  store i32 %120, i32* %121, align 8
  %122 = load i32, i32* %55, align 4
  %123 = add i32 %122, 31
  %124 = and i32 %123, -32
  %125 = sub nsw i32 %119, %124
  %126 = sdiv i32 %125, 2
  %127 = icmp sgt i32 %126, 0
  %128 = select i1 %127, i32 %126, i32 0
  %129 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %4, i64 0, i32 12
  store i32 %128, i32* %129, align 8
  %130 = load i32, i32* %61, align 8
  %131 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %4, i64 0, i32 14
  store i32 %130, i32* %131, align 8
  %132 = load i32, i32* %70, align 4
  %133 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %4, i64 0, i32 15
  store i32 %132, i32* %133, align 4
  %134 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %21, i64 0, i32 26
  %135 = bitcast %struct.aom_metadata_array** %134 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %4, i64 0, i32 27
  %138 = bitcast %struct.aom_metadata_array** %137 to i64*
  store i64 %136, i64* %138, align 8
  %139 = load %struct.AV1_PRIMARY*, %struct.AV1_PRIMARY** %25, align 8
  %140 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %139, i64 0, i32 0
  %141 = load %struct.AV1_COMP*, %struct.AV1_COMP** %140, align 8
  %142 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %141, i64 0, i32 8
  %143 = call i32 @av1_copy_new_frame_enc(%struct.AV1Common* %142, %struct.yv12_buffer_config* nonnull %3, %struct.yv12_buffer_config* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %32) #9
  br label %144

144:                                              ; preds = %23, %118
  %145 = phi i32 [ %143, %118 ], [ 1, %23 ]
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %24) #9
  br label %146

146:                                              ; preds = %18, %144
  %147 = phi i32 [ %145, %144 ], [ 8, %18 ]
  ret i32 %147
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_chroma_subsampling_x(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 101
  store i32 %23, i32* %24, align 8
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_chroma_subsampling_y(%struct.aom_codec_alg_priv*, %struct.__va_list_tag* nocapture) #0 {
  %3 = alloca %struct.av1_extracfg, align 8
  %4 = bitcast %struct.av1_extracfg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #9
  %5 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.av1_extracfg* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %6, i64 512, i1 false)
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 41
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr i8, i8* %12, i64 %13
  %15 = add nuw nsw i32 %8, 8
  store i32 %15, i32* %7, align 8
  br label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr i8, i8* %18, i64 8
  store i8* %19, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.av1_extracfg, %struct.av1_extracfg* %3, i64 0, i32 102
  store i32 %23, i32* %24, align 4
  %25 = call fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv* %0, %struct.av1_extracfg* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #9
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_get_seq_level_idx(%struct.aom_codec_alg_priv* nocapture readonly, %struct.__va_list_tag* nocapture) #0 {
  %3 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp ult i32 %4, 41
  br i1 %5, label %6, label %12

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %8 = load i8*, i8** %7, align 8
  %9 = sext i32 %4 to i64
  %10 = getelementptr i8, i8* %8, i64 %9
  %11 = add nuw nsw i32 %4, 8
  store i32 %11, i32* %3, align 8
  br label %16

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr i8, i8* %14, i64 8
  store i8* %15, i8** %13, align 8
  br label %16

16:                                               ; preds = %12, %6
  %17 = phi i8* [ %10, %6 ], [ %14, %12 ]
  %18 = bitcast i8* %17 to i32**
  %19 = load i32*, i32** %18, align 8
  %20 = icmp eq i32* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 7
  %23 = load %struct.AV1_PRIMARY*, %struct.AV1_PRIMARY** %22, align 8
  %24 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %23, i64 0, i32 15
  %25 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %23, i64 0, i32 9
  %26 = tail call i32 @av1_get_seq_level_idx(%struct.SequenceHeader* %24, %struct.AV1LevelParams* %25, i32* nonnull %19) #9
  br label %27

27:                                               ; preds = %16, %21
  %28 = phi i32 [ %26, %21 ], [ 8, %16 ]
  ret i32 %28
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @ctrl_get_baseline_gf_interval(%struct.aom_codec_alg_priv* nocapture readonly, %struct.__va_list_tag* nocapture) #4 {
  %3 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp ult i32 %4, 41
  br i1 %5, label %6, label %12

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %8 = load i8*, i8** %7, align 8
  %9 = sext i32 %4 to i64
  %10 = getelementptr i8, i8* %8, i64 %9
  %11 = add nuw nsw i32 %4, 8
  store i32 %11, i32* %3, align 8
  br label %16

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr i8, i8* %14, i64 8
  store i8* %15, i8** %13, align 8
  br label %16

16:                                               ; preds = %12, %6
  %17 = phi i8* [ %10, %6 ], [ %14, %12 ]
  %18 = bitcast i8* %17 to i32**
  %19 = load i32*, i32** %18, align 8
  %20 = icmp eq i32* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 7
  %23 = load %struct.AV1_PRIMARY*, %struct.AV1_PRIMARY** %22, align 8
  %24 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %23, i64 0, i32 13, i32 9
  %25 = load i32, i32* %24, align 8
  store i32 %25, i32* %19, align 4
  br label %26

26:                                               ; preds = %16, %21
  %27 = phi i32 [ 0, %21 ], [ 8, %16 ]
  ret i32 %27
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare i32 @av1_copy_reference_enc(%struct.AV1_COMP*, i32, %struct.yv12_buffer_config*) local_unnamed_addr #3

declare i32 @av1_use_as_reference(i32*, i32) local_unnamed_addr #3

declare i32 @av1_set_reference_enc(%struct.AV1_COMP*, i32, %struct.yv12_buffer_config*) local_unnamed_addr #3

declare i32 @av1_set_active_map(%struct.AV1_COMP*, i8*, i32, i32) local_unnamed_addr #3

declare i32 @av1_set_internal_size(%struct.AV1EncoderConfig*, %struct.ResizePendingParams*, i8 zeroext, i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @update_extra_cfg(%struct.aom_codec_alg_priv*, %struct.av1_extracfg* readonly) unnamed_addr #0 {
  %3 = alloca i8, align 1
  %4 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 1
  %5 = tail call fastcc i32 @validate_config(%struct.aom_codec_alg_priv* %0, %struct.aom_codec_enc_cfg* %4, %struct.av1_extracfg* %1)
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %27

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 2
  %9 = bitcast %struct.av1_extracfg* %8 to i8*
  %10 = bitcast %struct.av1_extracfg* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 512, i1 false)
  %11 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 6
  tail call fastcc void @set_encoder_config(%struct.AV1EncoderConfig* %11, %struct.aom_codec_enc_cfg* %4, %struct.av1_extracfg* %8)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #9
  store i8 0, i8* %3, align 1
  %12 = getelementptr inbounds %struct.aom_codec_alg_priv, %struct.aom_codec_alg_priv* %0, i64 0, i32 7
  %13 = load %struct.AV1_PRIMARY*, %struct.AV1_PRIMARY** %12, align 8
  call void @av1_change_config_seq(%struct.AV1_PRIMARY* %13, %struct.AV1EncoderConfig* %11, i8* nonnull %3) #9
  %14 = load %struct.AV1_PRIMARY*, %struct.AV1_PRIMARY** %12, align 8
  %15 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %14, i64 0, i32 0
  %16 = load %struct.AV1_COMP*, %struct.AV1_COMP** %15, align 8
  %17 = load i8, i8* %3, align 1, !range !2
  %18 = icmp ne i8 %17, 0
  call void @av1_change_config(%struct.AV1_COMP* %16, %struct.AV1EncoderConfig* %11, i1 zeroext %18) #9
  %19 = load %struct.AV1_PRIMARY*, %struct.AV1_PRIMARY** %12, align 8
  %20 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %19, i64 0, i32 1
  %21 = load %struct.AV1_COMP*, %struct.AV1_COMP** %20, align 8
  %22 = icmp eq %struct.AV1_COMP* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %7
  %24 = load i8, i8* %3, align 1, !range !2
  %25 = icmp ne i8 %24, 0
  call void @av1_change_config(%struct.AV1_COMP* nonnull %21, %struct.AV1EncoderConfig* %11, i1 zeroext %25) #9
  br label %26

26:                                               ; preds = %7, %23
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #9
  br label %27

27:                                               ; preds = %26, %2
  ret i32 %5
}

declare void @av1_change_config_seq(%struct.AV1_PRIMARY*, %struct.AV1EncoderConfig*, i8*) local_unnamed_addr #3

declare void @av1_change_config(%struct.AV1_COMP*, %struct.AV1EncoderConfig*, i1 zeroext) local_unnamed_addr #3

declare void @av1_init_seq_coding_tools(%struct.AV1_PRIMARY*, %struct.AV1EncoderConfig*, i32) local_unnamed_addr #3

declare void @av1_init_layer_context(%struct.AV1_COMP*) local_unnamed_addr #3

declare void @av1_update_layer_context_change_config(%struct.AV1_COMP*, i64) local_unnamed_addr #3

declare i32 @av1_get_quantizer(%struct.AV1_COMP*) local_unnamed_addr #3

declare i32 @av1_qindex_to_quantizer(i32) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc void @yuvconfig2image(%struct.aom_image*, %struct.yv12_buffer_config* readonly) unnamed_addr #4 {
  %3 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %1, i64 0, i32 15
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %13

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %1, i64 0, i32 14
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 0
  br i1 %9, label %11, label %12

11:                                               ; preds = %6
  store i32 262, i32* %10, align 8
  br label %15

12:                                               ; preds = %6
  store i32 261, i32* %10, align 8
  br label %15

13:                                               ; preds = %2
  %14 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 0
  store i32 258, i32* %14, align 8
  br label %15

15:                                               ; preds = %11, %12, %13
  %16 = phi i32 [ 2306, %13 ], [ 2309, %12 ], [ 2310, %11 ]
  %17 = phi i32 [ 12, %13 ], [ 16, %12 ], [ 24, %11 ]
  %18 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %1, i64 0, i32 17
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 1
  store i32 %19, i32* %20, align 4
  %21 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %1, i64 0, i32 18
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 2
  store i32 %22, i32* %23, align 8
  %24 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %1, i64 0, i32 19
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 3
  store i32 %25, i32* %26, align 4
  %27 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %1, i64 0, i32 20
  %28 = load i8, i8* %27, align 8
  %29 = zext i8 %28 to i32
  %30 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 4
  store i32 %29, i32* %30, align 8
  %31 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %1, i64 0, i32 21
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 5
  store i32 %32, i32* %33, align 4
  %34 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %1, i64 0, i32 22
  %35 = load i32, i32* %34, align 8
  %36 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 6
  store i32 %35, i32* %36, align 8
  %37 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 9
  store i32 8, i32* %37, align 4
  %38 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %1, i64 0, i32 0, i32 0, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 7
  store i32 %39, i32* %40, align 4
  %41 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %1, i64 0, i32 1, i32 0, i32 0
  %42 = load i32, i32* %41, align 8
  %43 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 8
  store i32 %42, i32* %43, align 8
  %44 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %1, i64 0, i32 2, i32 0, i32 0
  %45 = load i32, i32* %44, align 8
  %46 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 10
  store i32 %45, i32* %46, align 8
  %47 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %1, i64 0, i32 3, i32 0, i32 0
  %48 = load i32, i32* %47, align 8
  %49 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 11
  store i32 %48, i32* %49, align 4
  %50 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %1, i64 0, i32 23
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 12
  store i32 %51, i32* %52, align 8
  %53 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %1, i64 0, i32 24
  %54 = load i32, i32* %53, align 8
  %55 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 13
  store i32 %54, i32* %55, align 4
  %56 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %1, i64 0, i32 14
  %57 = load i32, i32* %56, align 8
  %58 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 14
  store i32 %57, i32* %58, align 8
  %59 = load i32, i32* %3, align 4
  %60 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 15
  store i32 %59, i32* %60, align 4
  %61 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %1, i64 0, i32 5, i32 0
  %62 = bitcast %struct.anon.12* %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 16
  %65 = bitcast [3 x i8*]* %64 to i64*
  store i64 %63, i64* %65, align 8
  %66 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %1, i64 0, i32 5, i32 0, i32 1
  %67 = bitcast i8** %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 16, i64 1
  %70 = bitcast i8** %69 to i64*
  store i64 %68, i64* %70, align 8
  %71 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %1, i64 0, i32 5, i32 0, i32 2
  %72 = bitcast i8** %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 16, i64 2
  %75 = bitcast i8** %74 to i64*
  store i64 %73, i64* %75, align 8
  %76 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %1, i64 0, i32 4, i32 0, i32 0
  %77 = load i32, i32* %76, align 8
  %78 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 17, i64 0
  store i32 %77, i32* %78, align 8
  %79 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %1, i64 0, i32 4, i32 0, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 17, i64 1
  store i32 %80, i32* %81, align 4
  %82 = load i32, i32* %79, align 4
  %83 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 17, i64 2
  store i32 %82, i32* %83, align 8
  %84 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %1, i64 0, i32 26
  %85 = load i32, i32* %84, align 8
  %86 = and i32 %85, 8
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %109, label %88

88:                                               ; preds = %15
  %89 = getelementptr inbounds [3 x i8*], [3 x i8*]* %64, i64 0, i64 0
  %90 = shl nuw nsw i32 %17, 1
  %91 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 0
  store i32 %16, i32* %91, align 8
  %92 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %1, i64 0, i32 16
  %93 = load i32, i32* %92, align 8
  store i32 %93, i32* %37, align 4
  %94 = load i64, i64* %62, align 8
  %95 = shl i64 %94, 1
  %96 = inttoptr i64 %95 to i8*
  store i8* %96, i8** %89, align 8
  %97 = load i64, i64* %67, align 8
  %98 = shl i64 %97, 1
  %99 = inttoptr i64 %98 to i8*
  store i8* %99, i8** %69, align 8
  %100 = load i64, i64* %72, align 8
  %101 = shl i64 %100, 1
  %102 = inttoptr i64 %101 to i8*
  store i8* %102, i8** %74, align 8
  %103 = load i32, i32* %76, align 8
  %104 = shl nsw i32 %103, 1
  store i32 %104, i32* %78, align 8
  %105 = load i32, i32* %79, align 4
  %106 = shl nsw i32 %105, 1
  store i32 %106, i32* %81, align 4
  %107 = load i32, i32* %79, align 4
  %108 = shl nsw i32 %107, 1
  store i32 %108, i32* %83, align 8
  br label %109

109:                                              ; preds = %15, %88
  %110 = phi i32 [ %90, %88 ], [ %17, %15 ]
  %111 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 19
  store i32 %110, i32* %111, align 8
  %112 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 22
  store i8* null, i8** %112, align 8
  %113 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %1, i64 0, i32 10
  %114 = bitcast i8** %113 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 23
  %117 = bitcast i8** %116 to i64*
  store i64 %115, i64* %117, align 8
  %118 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 24
  store i32 0, i32* %118, align 8
  %119 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 25
  store i32 0, i32* %119, align 4
  %120 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %1, i64 0, i32 13
  %121 = load i64, i64* %120, align 8
  %122 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 18
  store i64 %121, i64* %122, align 8
  %123 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 26
  store %struct.aom_metadata_array* null, %struct.aom_metadata_array** %123, align 8
  ret void
}

declare i32 @av1_get_active_map(%struct.AV1_COMP*, i8*, i32, i32) local_unnamed_addr #3

declare i32 @av1_get_last_show_frame(%struct.AV1_COMP*, %struct.yv12_buffer_config*) local_unnamed_addr #3

declare i32 @av1_copy_new_frame_enc(%struct.AV1Common*, %struct.yv12_buffer_config*, %struct.yv12_buffer_config*) local_unnamed_addr #3

declare i32 @av1_get_seq_level_idx(%struct.SequenceHeader*, %struct.AV1LevelParams*, i32*) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #6

; Function Attrs: nounwind returns_twice
declare i32 @_setjmp(%struct.__jmp_buf_tag*) local_unnamed_addr #7

declare void @av1_set_svc_fixed_mode(%struct.AV1_COMP*) local_unnamed_addr #3

declare void @av1_apply_encoding_flags(%struct.AV1_COMP*, i64) local_unnamed_addr #3

declare %struct.lookahead_ctx* @av1_lookahead_init(i32, i32, i32, i32, i32, i32, i32, i32, i32, i1 zeroext, i32) local_unnamed_addr #3

declare void @aom_internal_error(%struct.aom_internal_error_info*, i32, i8*, ...) local_unnamed_addr #3

declare void @av1_check_initial_width(%struct.AV1_COMP*, i32, i32, i32) local_unnamed_addr #3

declare i32 @av1_receive_raw_frame(%struct.AV1_COMP*, i64, %struct.yv12_buffer_config*, i64, i64) local_unnamed_addr #3

declare void @av1_compute_num_workers_for_mt(%struct.AV1_COMP*) local_unnamed_addr #3

declare i32 @av1_get_max_num_workers(%struct.AV1_COMP*) local_unnamed_addr #3

declare void @av1_create_workers(%struct.AV1_COMP*, i32) local_unnamed_addr #3

declare void @av1_create_second_pass_workers(%struct.AV1_COMP*, i32) local_unnamed_addr #3

declare i32 @av1_get_compressed_data(%struct.AV1_COMP*, i32*, i64*, i64, i8*, i64*, i64*, i32, %struct.aom_rational64*) local_unnamed_addr #3

declare i64 @aom_uleb_size_in_bytes(i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

declare i32 @av1_write_obu_header(%struct.AV1LevelParams*, i32*, i8 zeroext, i32, i8*) local_unnamed_addr #3

declare i32 @av1_write_uleb_obu_size(i64, i64, i8*) local_unnamed_addr #3

declare i32 @av1_convert_sect5obus_to_annexb(i8*, i64*) local_unnamed_addr #3

declare i32 @aom_codec_pkt_list_add(%struct.aom_codec_pkt_list*, %struct.aom_codec_cx_pkt*) local_unnamed_addr #3

declare %struct.aom_codec_cx_pkt* @aom_codec_pkt_list_get(%struct.aom_codec_pkt_list*, i8**) local_unnamed_addr #3

declare %struct.aom_fixed_buf* @av1_get_global_headers(%struct.AV1_PRIMARY*) local_unnamed_addr #3

declare i32 @av1_get_preview_raw_frame(%struct.AV1_COMP*, %struct.yv12_buffer_config*) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

declare i8* @aom_malloc(i64) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare i32 @snprintf(i8* nocapture, i64, i8* nocapture readonly, ...) local_unnamed_addr #6

declare i32 @arg_match_helper(%struct.arg*, %struct.arg_def*, i8**, i8*) local_unnamed_addr #3

declare i32 @arg_parse_uint_helper(%struct.arg*, i8*) local_unnamed_addr #3

declare i32 @arg_parse_enum_helper(%struct.arg*, i8*) local_unnamed_addr #3

declare i32 @arg_parse_int_helper(%struct.arg*, i8*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind returns_twice "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { nounwind returns_twice }
attributes #11 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5}
!5 = distinct !{!5, !"LVerDomain"}
!6 = !{!7}
!7 = distinct !{!7, !5}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.isvectorized", i32 1}
!10 = !{!11}
!11 = distinct !{!11, !12}
!12 = distinct !{!12, !"LVerDomain"}
!13 = !{!14}
!14 = distinct !{!14, !12}
!15 = distinct !{!15, !9}
!16 = distinct !{!16, !9}
!17 = distinct !{!17, !9}
