; ModuleID = 'gen/third_party/blink/public/mojom/clipboard/clipboard.mojom-test-utils.cc'
source_filename = "gen/third_party/blink/public/mojom/clipboard/clipboard.mojom-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::mojom::ClipboardHostAsyncWaiter" = type { %"class.blink::mojom::ClipboardHost"* }
%"class.blink::mojom::ClipboardHost" = type { i32 (...)** }
%"class.blink::mojom::ClipboardHostInterceptorForTesting" = type { %"class.blink::mojom::ClipboardHost" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::OnceCallback.1" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.2" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.3" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.4" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.5" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.6" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.7" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%class.GURL = type { %"class.std::__1::basic_string.9", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.12 }
%union.anon.12 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %class.GURL* }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.21" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"struct.std::__1::pair"* }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.32 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.26, i32, i32 }
%class.sk_sp.26 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.27" }
%"struct.std::__1::atomic.27" = type { %"struct.std::__1::__atomic_base.28" }
%"struct.std::__1::__atomic_base.28" = type { %"struct.std::__1::__atomic_base.29" }
%"struct.std::__1::__atomic_base.29" = type { %"struct.std::__1::__cxx_atomic_impl.30" }
%"struct.std::__1::__cxx_atomic_impl.30" = type { %"struct.std::__1::__cxx_atomic_base_impl.31" }
%"struct.std::__1::__cxx_atomic_base_impl.31" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.32 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.base::RunLoop" = type { %"class.base::RunLoop::Delegate"*, i32, i8, i8, i8, i8, i8, %class.scoped_refptr.47, %"class.base::WeakPtrFactory" }
%"class.base::RunLoop::Delegate" = type <{ i32 (...)**, %"class.std::__1::stack", %"class.base::ObserverList", i8, [7 x i8] }>
%"class.std::__1::stack" = type { %"class.std::__1::vector.33" }
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { %"class.base::RunLoop"**, %"class.base::RunLoop"**, %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.base::RunLoop"** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.40", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.40" = type { %"class.std::__1::__vector_base.41" }
%"class.std::__1::__vector_base.41" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.42" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%class.scoped_refptr.47 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.48" }>
%"class.base::RefCountedThreadSafe.48" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.49 }
%class.scoped_refptr.49 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.50", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.50" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.27" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.std::__1::vector.53" = type { %"class.std::__1::__vector_base.54" }
%"class.std::__1::__vector_base.54" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.std::__1::basic_string"* }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.72" }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.blink::mojom::ClipboardFiles"* }
%"class.blink::mojom::ClipboardFiles" = type { %"class.std::__1::vector.75", %"class.absl::optional" }
%"class.std::__1::vector.75" = type { %"class.std::__1::__vector_base.76" }
%"class.std::__1::__vector_base.76" = type { %"class.mojo::StructPtr.77"*, %"class.mojo::StructPtr.77"*, %"class.std::__1::__compressed_pair.84" }
%"class.mojo::StructPtr.77" = type { %"class.std::__1::unique_ptr.78" }
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.blink::mojom::DataTransferFile"* }
%"class.blink::mojom::DataTransferFile" = type { %"class.base::FilePath", %"class.base::FilePath", %"class.mojo::PendingRemote" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string.9" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.mojo::StructPtr.77"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.89 }
%union.anon.89 = type { %"class.std::__1::basic_string.9" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.13 }
%struct.anon.13 = type { i8 }

$_ZN5blink5mojom13ClipboardHostD2Ev = comdat any

$_ZN5blink5mojom34ClipboardHostInterceptorForTestingD0Ev = comdat any

$_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

@.str = private unnamed_addr constant [18 x i8] c"GetSequenceNumber\00", align 1
@.str.1 = private unnamed_addr constant [75 x i8] c"gen/third_party/blink/public/mojom/clipboard/clipboard.mojom-test-utils.cc\00", align 1
@.str.2 = private unnamed_addr constant [18 x i8] c"IsFormatAvailable\00", align 1
@.str.3 = private unnamed_addr constant [19 x i8] c"ReadAvailableTypes\00", align 1
@.str.4 = private unnamed_addr constant [9 x i8] c"ReadText\00", align 1
@.str.5 = private unnamed_addr constant [9 x i8] c"ReadHtml\00", align 1
@.str.6 = private unnamed_addr constant [8 x i8] c"ReadSvg\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"ReadRtf\00", align 1
@.str.8 = private unnamed_addr constant [10 x i8] c"ReadImage\00", align 1
@.str.9 = private unnamed_addr constant [10 x i8] c"ReadFiles\00", align 1
@.str.10 = private unnamed_addr constant [15 x i8] c"ReadCustomData\00", align 1
@_ZTVN5blink5mojom34ClipboardHostInterceptorForTestingE = hidden unnamed_addr constant { [32 x i8*] } { [32 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::mojom::ClipboardHost"*)* @_ZN5blink5mojom13ClipboardHostD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)* @_ZN5blink5mojom34ClipboardHostInterceptorForTestingD0Ev to i8*), i8* bitcast (i1 (%"class.blink::mojom::ClipboardHost"*, i32, i64*)* @_ZN5blink5mojom13ClipboardHost17GetSequenceNumberEN2ui15ClipboardBufferEPm to i8*), i8* bitcast (void (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*, i32, %"class.base::OnceCallback"*)* @_ZN5blink5mojom34ClipboardHostInterceptorForTesting17GetSequenceNumberEN2ui15ClipboardBufferEN4base12OnceCallbackIFvmEEE to i8*), i8* bitcast (i1 (%"class.blink::mojom::ClipboardHost"*, i32, i32, i8*)* @_ZN5blink5mojom13ClipboardHost17IsFormatAvailableENS0_15ClipboardFormatEN2ui15ClipboardBufferEPb to i8*), i8* bitcast (void (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*, i32, i32, %"class.base::OnceCallback.1"*)* @_ZN5blink5mojom34ClipboardHostInterceptorForTesting17IsFormatAvailableENS0_15ClipboardFormatEN2ui15ClipboardBufferEN4base12OnceCallbackIFvbEEE to i8*), i8* bitcast (i1 (%"class.blink::mojom::ClipboardHost"*, i32, %"class.std::__1::vector.53"*)* @_ZN5blink5mojom13ClipboardHost18ReadAvailableTypesEN2ui15ClipboardBufferEPNSt3__16vectorINS4_12basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEENS9_ISB_EEEE to i8*), i8* bitcast (void (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*, i32, %"class.base::OnceCallback.2"*)* @_ZN5blink5mojom34ClipboardHostInterceptorForTesting18ReadAvailableTypesEN2ui15ClipboardBufferEN4base12OnceCallbackIFvRKNSt3__16vectorINS6_12basic_stringIDsNS6_11char_traitsIDsEENS6_9allocatorIDsEEEENSB_ISD_EEEEEEE to i8*), i8* bitcast (i1 (%"class.blink::mojom::ClipboardHost"*, i32, %"class.std::__1::basic_string"*)* @_ZN5blink5mojom13ClipboardHost8ReadTextEN2ui15ClipboardBufferEPNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE to i8*), i8* bitcast (void (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*, i32, %"class.base::OnceCallback.3"*)* @_ZN5blink5mojom34ClipboardHostInterceptorForTesting8ReadTextEN2ui15ClipboardBufferEN4base12OnceCallbackIFvRKNSt3__112basic_stringIDsNS6_11char_traitsIDsEENS6_9allocatorIDsEEEEEEE to i8*), i8* bitcast (i1 (%"class.blink::mojom::ClipboardHost"*, i32, %"class.std::__1::basic_string"*, %class.GURL*, i32*, i32*)* @_ZN5blink5mojom13ClipboardHost8ReadHtmlEN2ui15ClipboardBufferEPNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEEP4GURLPjSE_ to i8*), i8* bitcast (void (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*, i32, %"class.base::OnceCallback.4"*)* @_ZN5blink5mojom34ClipboardHostInterceptorForTesting8ReadHtmlEN2ui15ClipboardBufferEN4base12OnceCallbackIFvRKNSt3__112basic_stringIDsNS6_11char_traitsIDsEENS6_9allocatorIDsEEEERK4GURLjjEEE to i8*), i8* bitcast (void (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*, i32, %"class.base::OnceCallback.3"*)* @_ZN5blink5mojom34ClipboardHostInterceptorForTesting7ReadSvgEN2ui15ClipboardBufferEN4base12OnceCallbackIFvRKNSt3__112basic_stringIDsNS6_11char_traitsIDsEENS6_9allocatorIDsEEEEEEE to i8*), i8* bitcast (i1 (%"class.blink::mojom::ClipboardHost"*, i32, %"class.std::__1::basic_string.9"*)* @_ZN5blink5mojom13ClipboardHost7ReadRtfEN2ui15ClipboardBufferEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE to i8*), i8* bitcast (void (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*, i32, %"class.base::OnceCallback.5"*)* @_ZN5blink5mojom34ClipboardHostInterceptorForTesting7ReadRtfEN2ui15ClipboardBufferEN4base12OnceCallbackIFvRKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEEEE to i8*), i8* bitcast (i1 (%"class.blink::mojom::ClipboardHost"*, i32, %class.SkBitmap*)* @_ZN5blink5mojom13ClipboardHost9ReadImageEN2ui15ClipboardBufferEP8SkBitmap to i8*), i8* bitcast (void (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*, i32, %"class.base::OnceCallback.6"*)* @_ZN5blink5mojom34ClipboardHostInterceptorForTesting9ReadImageEN2ui15ClipboardBufferEN4base12OnceCallbackIFvRK8SkBitmapEEE to i8*), i8* bitcast (i1 (%"class.blink::mojom::ClipboardHost"*, i32, %"class.mojo::StructPtr"*)* @_ZN5blink5mojom13ClipboardHost9ReadFilesEN2ui15ClipboardBufferEPN4mojo9StructPtrINS0_14ClipboardFilesEEE to i8*), i8* bitcast (void (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*, i32, %"class.base::OnceCallback.7"*)* @_ZN5blink5mojom34ClipboardHostInterceptorForTesting9ReadFilesEN2ui15ClipboardBufferEN4base12OnceCallbackIFvN4mojo9StructPtrINS0_14ClipboardFilesEEEEEE to i8*), i8* bitcast (i1 (%"class.blink::mojom::ClipboardHost"*, i32, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)* @_ZN5blink5mojom13ClipboardHost14ReadCustomDataEN2ui15ClipboardBufferERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEEPSA_ to i8*), i8* bitcast (void (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*, i32, %"class.std::__1::basic_string"*, %"class.base::OnceCallback.3"*)* @_ZN5blink5mojom34ClipboardHostInterceptorForTesting14ReadCustomDataEN2ui15ClipboardBufferERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEEN4base12OnceCallbackIFvSC_EEE to i8*), i8* bitcast (void (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*, %"class.std::__1::basic_string"*)* @_ZN5blink5mojom34ClipboardHostInterceptorForTesting9WriteTextERKNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEE to i8*), i8* bitcast (void (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*, %"class.std::__1::basic_string"*, %class.GURL*)* @_ZN5blink5mojom34ClipboardHostInterceptorForTesting9WriteHtmlERKNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEERK4GURL to i8*), i8* bitcast (void (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*, %"class.std::__1::basic_string"*)* @_ZN5blink5mojom34ClipboardHostInterceptorForTesting8WriteSvgERKNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEE to i8*), i8* bitcast (void (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)* @_ZN5blink5mojom34ClipboardHostInterceptorForTesting21WriteSmartPasteMarkerEv to i8*), i8* bitcast (void (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*, %"class.base::flat_map"*)* @_ZN5blink5mojom34ClipboardHostInterceptorForTesting15WriteCustomDataERKN4base8flat_mapINSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEESA_NS4_4lessIvEENS4_6vectorINS4_4pairISA_SA_EENS8_ISF_EEEEEE to i8*), i8* bitcast (void (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*, %"class.std::__1::basic_string.9"*, %"class.std::__1::basic_string"*)* @_ZN5blink5mojom34ClipboardHostInterceptorForTesting13WriteBookmarkERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEERKNS3_IDsNS4_IDsEENS6_IDsEEEE to i8*), i8* bitcast (void (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*, %class.SkBitmap*)* @_ZN5blink5mojom34ClipboardHostInterceptorForTesting10WriteImageERK8SkBitmap to i8*), i8* bitcast (void (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)* @_ZN5blink5mojom34ClipboardHostInterceptorForTesting11CommitWriteEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN5blink5mojom24ClipboardHostAsyncWaiterC1EPNS0_13ClipboardHostE = hidden unnamed_addr alias void (%"class.blink::mojom::ClipboardHostAsyncWaiter"*, %"class.blink::mojom::ClipboardHost"*), void (%"class.blink::mojom::ClipboardHostAsyncWaiter"*, %"class.blink::mojom::ClipboardHost"*)* @_ZN5blink5mojom24ClipboardHostAsyncWaiterC2EPNS0_13ClipboardHostE
@_ZN5blink5mojom24ClipboardHostAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::ClipboardHostAsyncWaiter"*), void (%"class.blink::mojom::ClipboardHostAsyncWaiter"*)* @_ZN5blink5mojom24ClipboardHostAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom34ClipboardHostInterceptorForTesting17GetSequenceNumberEN2ui15ClipboardBufferEN4base12OnceCallbackIFvmEEE(%"class.blink::mojom::ClipboardHostInterceptorForTesting"*, i32, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = bitcast %"class.blink::mojom::ClipboardHostInterceptorForTesting"* %0 to %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)***
  %6 = load %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)**, %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)** %6, i64 29
  %8 = load %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.blink::mojom::ClipboardHost"* %8(%"class.blink::mojom::ClipboardHostInterceptorForTesting"* %0) #12
  %10 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = bitcast %"class.blink::mojom::ClipboardHost"* %9 to void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback"*)***
  %15 = load void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback"*)** %15, i64 3
  %17 = load void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback"*)** %16, align 8
  call void %17(%"class.blink::mojom::ClipboardHost"* %9, i32 %1, %"class.base::OnceCallback"* nonnull %4) #12
  %18 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom34ClipboardHostInterceptorForTesting17IsFormatAvailableENS0_15ClipboardFormatEN2ui15ClipboardBufferEN4base12OnceCallbackIFvbEEE(%"class.blink::mojom::ClipboardHostInterceptorForTesting"*, i32, i32, %"class.base::OnceCallback.1"* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::OnceCallback.1", align 8
  %6 = bitcast %"class.blink::mojom::ClipboardHostInterceptorForTesting"* %0 to %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)***
  %7 = load %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)**, %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)** %7, i64 29
  %9 = load %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)** %8, align 8
  %10 = tail call %"class.blink::mojom::ClipboardHost"* %9(%"class.blink::mojom::ClipboardHostInterceptorForTesting"* %0) #12
  %11 = getelementptr inbounds %"class.base::OnceCallback.1", %"class.base::OnceCallback.1"* %3, i64 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.base::OnceCallback.1"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.base::OnceCallback.1"* %5 to i64*
  store i64 %13, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8
  %15 = bitcast %"class.blink::mojom::ClipboardHost"* %10 to void (%"class.blink::mojom::ClipboardHost"*, i32, i32, %"class.base::OnceCallback.1"*)***
  %16 = load void (%"class.blink::mojom::ClipboardHost"*, i32, i32, %"class.base::OnceCallback.1"*)**, void (%"class.blink::mojom::ClipboardHost"*, i32, i32, %"class.base::OnceCallback.1"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::mojom::ClipboardHost"*, i32, i32, %"class.base::OnceCallback.1"*)*, void (%"class.blink::mojom::ClipboardHost"*, i32, i32, %"class.base::OnceCallback.1"*)** %16, i64 5
  %18 = load void (%"class.blink::mojom::ClipboardHost"*, i32, i32, %"class.base::OnceCallback.1"*)*, void (%"class.blink::mojom::ClipboardHost"*, i32, i32, %"class.base::OnceCallback.1"*)** %17, align 8
  call void %18(%"class.blink::mojom::ClipboardHost"* %10, i32 %1, i32 %2, %"class.base::OnceCallback.1"* nonnull %5) #12
  %19 = getelementptr inbounds %"class.base::OnceCallback.1", %"class.base::OnceCallback.1"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %19) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom34ClipboardHostInterceptorForTesting18ReadAvailableTypesEN2ui15ClipboardBufferEN4base12OnceCallbackIFvRKNSt3__16vectorINS6_12basic_stringIDsNS6_11char_traitsIDsEENS6_9allocatorIDsEEEENSB_ISD_EEEEEEE(%"class.blink::mojom::ClipboardHostInterceptorForTesting"*, i32, %"class.base::OnceCallback.2"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback.2", align 8
  %5 = bitcast %"class.blink::mojom::ClipboardHostInterceptorForTesting"* %0 to %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)***
  %6 = load %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)**, %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)** %6, i64 29
  %8 = load %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.blink::mojom::ClipboardHost"* %8(%"class.blink::mojom::ClipboardHostInterceptorForTesting"* %0) #12
  %10 = getelementptr inbounds %"class.base::OnceCallback.2", %"class.base::OnceCallback.2"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::OnceCallback.2"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback.2"* %4 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = bitcast %"class.blink::mojom::ClipboardHost"* %9 to void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.2"*)***
  %15 = load void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.2"*)**, void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.2"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.2"*)*, void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.2"*)** %15, i64 7
  %17 = load void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.2"*)*, void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.2"*)** %16, align 8
  call void %17(%"class.blink::mojom::ClipboardHost"* %9, i32 %1, %"class.base::OnceCallback.2"* nonnull %4) #12
  %18 = getelementptr inbounds %"class.base::OnceCallback.2", %"class.base::OnceCallback.2"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom34ClipboardHostInterceptorForTesting8ReadTextEN2ui15ClipboardBufferEN4base12OnceCallbackIFvRKNSt3__112basic_stringIDsNS6_11char_traitsIDsEENS6_9allocatorIDsEEEEEEE(%"class.blink::mojom::ClipboardHostInterceptorForTesting"*, i32, %"class.base::OnceCallback.3"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback.3", align 8
  %5 = bitcast %"class.blink::mojom::ClipboardHostInterceptorForTesting"* %0 to %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)***
  %6 = load %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)**, %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)** %6, i64 29
  %8 = load %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.blink::mojom::ClipboardHost"* %8(%"class.blink::mojom::ClipboardHostInterceptorForTesting"* %0) #12
  %10 = getelementptr inbounds %"class.base::OnceCallback.3", %"class.base::OnceCallback.3"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::OnceCallback.3"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback.3"* %4 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = bitcast %"class.blink::mojom::ClipboardHost"* %9 to void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)***
  %15 = load void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)**, void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)*, void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)** %15, i64 9
  %17 = load void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)*, void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)** %16, align 8
  call void %17(%"class.blink::mojom::ClipboardHost"* %9, i32 %1, %"class.base::OnceCallback.3"* nonnull %4) #12
  %18 = getelementptr inbounds %"class.base::OnceCallback.3", %"class.base::OnceCallback.3"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom34ClipboardHostInterceptorForTesting8ReadHtmlEN2ui15ClipboardBufferEN4base12OnceCallbackIFvRKNSt3__112basic_stringIDsNS6_11char_traitsIDsEENS6_9allocatorIDsEEEERK4GURLjjEEE(%"class.blink::mojom::ClipboardHostInterceptorForTesting"*, i32, %"class.base::OnceCallback.4"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback.4", align 8
  %5 = bitcast %"class.blink::mojom::ClipboardHostInterceptorForTesting"* %0 to %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)***
  %6 = load %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)**, %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)** %6, i64 29
  %8 = load %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.blink::mojom::ClipboardHost"* %8(%"class.blink::mojom::ClipboardHostInterceptorForTesting"* %0) #12
  %10 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::OnceCallback.4"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback.4"* %4 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = bitcast %"class.blink::mojom::ClipboardHost"* %9 to void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.4"*)***
  %15 = load void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.4"*)**, void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.4"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.4"*)*, void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.4"*)** %15, i64 11
  %17 = load void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.4"*)*, void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.4"*)** %16, align 8
  call void %17(%"class.blink::mojom::ClipboardHost"* %9, i32 %1, %"class.base::OnceCallback.4"* nonnull %4) #12
  %18 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom34ClipboardHostInterceptorForTesting7ReadSvgEN2ui15ClipboardBufferEN4base12OnceCallbackIFvRKNSt3__112basic_stringIDsNS6_11char_traitsIDsEENS6_9allocatorIDsEEEEEEE(%"class.blink::mojom::ClipboardHostInterceptorForTesting"*, i32, %"class.base::OnceCallback.3"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback.3", align 8
  %5 = bitcast %"class.blink::mojom::ClipboardHostInterceptorForTesting"* %0 to %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)***
  %6 = load %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)**, %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)** %6, i64 29
  %8 = load %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.blink::mojom::ClipboardHost"* %8(%"class.blink::mojom::ClipboardHostInterceptorForTesting"* %0) #12
  %10 = getelementptr inbounds %"class.base::OnceCallback.3", %"class.base::OnceCallback.3"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::OnceCallback.3"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback.3"* %4 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = bitcast %"class.blink::mojom::ClipboardHost"* %9 to void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)***
  %15 = load void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)**, void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)*, void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)** %15, i64 12
  %17 = load void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)*, void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)** %16, align 8
  call void %17(%"class.blink::mojom::ClipboardHost"* %9, i32 %1, %"class.base::OnceCallback.3"* nonnull %4) #12
  %18 = getelementptr inbounds %"class.base::OnceCallback.3", %"class.base::OnceCallback.3"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom34ClipboardHostInterceptorForTesting7ReadRtfEN2ui15ClipboardBufferEN4base12OnceCallbackIFvRKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEEEE(%"class.blink::mojom::ClipboardHostInterceptorForTesting"*, i32, %"class.base::OnceCallback.5"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback.5", align 8
  %5 = bitcast %"class.blink::mojom::ClipboardHostInterceptorForTesting"* %0 to %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)***
  %6 = load %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)**, %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)** %6, i64 29
  %8 = load %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.blink::mojom::ClipboardHost"* %8(%"class.blink::mojom::ClipboardHostInterceptorForTesting"* %0) #12
  %10 = getelementptr inbounds %"class.base::OnceCallback.5", %"class.base::OnceCallback.5"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::OnceCallback.5"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback.5"* %4 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = bitcast %"class.blink::mojom::ClipboardHost"* %9 to void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.5"*)***
  %15 = load void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.5"*)**, void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.5"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.5"*)*, void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.5"*)** %15, i64 14
  %17 = load void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.5"*)*, void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.5"*)** %16, align 8
  call void %17(%"class.blink::mojom::ClipboardHost"* %9, i32 %1, %"class.base::OnceCallback.5"* nonnull %4) #12
  %18 = getelementptr inbounds %"class.base::OnceCallback.5", %"class.base::OnceCallback.5"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom34ClipboardHostInterceptorForTesting9ReadImageEN2ui15ClipboardBufferEN4base12OnceCallbackIFvRK8SkBitmapEEE(%"class.blink::mojom::ClipboardHostInterceptorForTesting"*, i32, %"class.base::OnceCallback.6"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback.6", align 8
  %5 = bitcast %"class.blink::mojom::ClipboardHostInterceptorForTesting"* %0 to %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)***
  %6 = load %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)**, %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)** %6, i64 29
  %8 = load %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.blink::mojom::ClipboardHost"* %8(%"class.blink::mojom::ClipboardHostInterceptorForTesting"* %0) #12
  %10 = getelementptr inbounds %"class.base::OnceCallback.6", %"class.base::OnceCallback.6"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::OnceCallback.6"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback.6"* %4 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = bitcast %"class.blink::mojom::ClipboardHost"* %9 to void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.6"*)***
  %15 = load void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.6"*)**, void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.6"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.6"*)*, void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.6"*)** %15, i64 16
  %17 = load void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.6"*)*, void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.6"*)** %16, align 8
  call void %17(%"class.blink::mojom::ClipboardHost"* %9, i32 %1, %"class.base::OnceCallback.6"* nonnull %4) #12
  %18 = getelementptr inbounds %"class.base::OnceCallback.6", %"class.base::OnceCallback.6"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom34ClipboardHostInterceptorForTesting9ReadFilesEN2ui15ClipboardBufferEN4base12OnceCallbackIFvN4mojo9StructPtrINS0_14ClipboardFilesEEEEEE(%"class.blink::mojom::ClipboardHostInterceptorForTesting"*, i32, %"class.base::OnceCallback.7"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback.7", align 8
  %5 = bitcast %"class.blink::mojom::ClipboardHostInterceptorForTesting"* %0 to %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)***
  %6 = load %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)**, %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)** %6, i64 29
  %8 = load %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.blink::mojom::ClipboardHost"* %8(%"class.blink::mojom::ClipboardHostInterceptorForTesting"* %0) #12
  %10 = getelementptr inbounds %"class.base::OnceCallback.7", %"class.base::OnceCallback.7"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::OnceCallback.7"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback.7"* %4 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = bitcast %"class.blink::mojom::ClipboardHost"* %9 to void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.7"*)***
  %15 = load void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.7"*)**, void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.7"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.7"*)*, void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.7"*)** %15, i64 18
  %17 = load void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.7"*)*, void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.7"*)** %16, align 8
  call void %17(%"class.blink::mojom::ClipboardHost"* %9, i32 %1, %"class.base::OnceCallback.7"* nonnull %4) #12
  %18 = getelementptr inbounds %"class.base::OnceCallback.7", %"class.base::OnceCallback.7"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom34ClipboardHostInterceptorForTesting14ReadCustomDataEN2ui15ClipboardBufferERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEEN4base12OnceCallbackIFvSC_EEE(%"class.blink::mojom::ClipboardHostInterceptorForTesting"*, i32, %"class.std::__1::basic_string"* dereferenceable(24), %"class.base::OnceCallback.3"* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::OnceCallback.3", align 8
  %6 = bitcast %"class.blink::mojom::ClipboardHostInterceptorForTesting"* %0 to %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)***
  %7 = load %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)**, %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)** %7, i64 29
  %9 = load %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)** %8, align 8
  %10 = tail call %"class.blink::mojom::ClipboardHost"* %9(%"class.blink::mojom::ClipboardHostInterceptorForTesting"* %0) #12
  %11 = getelementptr inbounds %"class.base::OnceCallback.3", %"class.base::OnceCallback.3"* %3, i64 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.base::OnceCallback.3"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.base::OnceCallback.3"* %5 to i64*
  store i64 %13, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8
  %15 = bitcast %"class.blink::mojom::ClipboardHost"* %10 to void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.std::__1::basic_string"*, %"class.base::OnceCallback.3"*)***
  %16 = load void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.std::__1::basic_string"*, %"class.base::OnceCallback.3"*)**, void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.std::__1::basic_string"*, %"class.base::OnceCallback.3"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.std::__1::basic_string"*, %"class.base::OnceCallback.3"*)*, void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.std::__1::basic_string"*, %"class.base::OnceCallback.3"*)** %16, i64 20
  %18 = load void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.std::__1::basic_string"*, %"class.base::OnceCallback.3"*)*, void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.std::__1::basic_string"*, %"class.base::OnceCallback.3"*)** %17, align 8
  call void %18(%"class.blink::mojom::ClipboardHost"* %10, i32 %1, %"class.std::__1::basic_string"* dereferenceable(24) %2, %"class.base::OnceCallback.3"* nonnull %5) #12
  %19 = getelementptr inbounds %"class.base::OnceCallback.3", %"class.base::OnceCallback.3"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %19) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom34ClipboardHostInterceptorForTesting9WriteTextERKNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEE(%"class.blink::mojom::ClipboardHostInterceptorForTesting"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::mojom::ClipboardHostInterceptorForTesting"* %0 to %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)***
  %4 = load %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)**, %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)** %4, i64 29
  %6 = load %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.blink::mojom::ClipboardHost"* %6(%"class.blink::mojom::ClipboardHostInterceptorForTesting"* %0) #12
  %8 = bitcast %"class.blink::mojom::ClipboardHost"* %7 to void (%"class.blink::mojom::ClipboardHost"*, %"class.std::__1::basic_string"*)***
  %9 = load void (%"class.blink::mojom::ClipboardHost"*, %"class.std::__1::basic_string"*)**, void (%"class.blink::mojom::ClipboardHost"*, %"class.std::__1::basic_string"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::mojom::ClipboardHost"*, %"class.std::__1::basic_string"*)*, void (%"class.blink::mojom::ClipboardHost"*, %"class.std::__1::basic_string"*)** %9, i64 21
  %11 = load void (%"class.blink::mojom::ClipboardHost"*, %"class.std::__1::basic_string"*)*, void (%"class.blink::mojom::ClipboardHost"*, %"class.std::__1::basic_string"*)** %10, align 8
  tail call void %11(%"class.blink::mojom::ClipboardHost"* %7, %"class.std::__1::basic_string"* dereferenceable(24) %1) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom34ClipboardHostInterceptorForTesting9WriteHtmlERKNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEERK4GURL(%"class.blink::mojom::ClipboardHostInterceptorForTesting"*, %"class.std::__1::basic_string"* dereferenceable(24), %class.GURL* dereferenceable(120)) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.blink::mojom::ClipboardHostInterceptorForTesting"* %0 to %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)***
  %5 = load %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)**, %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)** %5, i64 29
  %7 = load %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.blink::mojom::ClipboardHost"* %7(%"class.blink::mojom::ClipboardHostInterceptorForTesting"* %0) #12
  %9 = bitcast %"class.blink::mojom::ClipboardHost"* %8 to void (%"class.blink::mojom::ClipboardHost"*, %"class.std::__1::basic_string"*, %class.GURL*)***
  %10 = load void (%"class.blink::mojom::ClipboardHost"*, %"class.std::__1::basic_string"*, %class.GURL*)**, void (%"class.blink::mojom::ClipboardHost"*, %"class.std::__1::basic_string"*, %class.GURL*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::mojom::ClipboardHost"*, %"class.std::__1::basic_string"*, %class.GURL*)*, void (%"class.blink::mojom::ClipboardHost"*, %"class.std::__1::basic_string"*, %class.GURL*)** %10, i64 22
  %12 = load void (%"class.blink::mojom::ClipboardHost"*, %"class.std::__1::basic_string"*, %class.GURL*)*, void (%"class.blink::mojom::ClipboardHost"*, %"class.std::__1::basic_string"*, %class.GURL*)** %11, align 8
  tail call void %12(%"class.blink::mojom::ClipboardHost"* %8, %"class.std::__1::basic_string"* dereferenceable(24) %1, %class.GURL* dereferenceable(120) %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom34ClipboardHostInterceptorForTesting8WriteSvgERKNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEE(%"class.blink::mojom::ClipboardHostInterceptorForTesting"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::mojom::ClipboardHostInterceptorForTesting"* %0 to %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)***
  %4 = load %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)**, %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)** %4, i64 29
  %6 = load %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.blink::mojom::ClipboardHost"* %6(%"class.blink::mojom::ClipboardHostInterceptorForTesting"* %0) #12
  %8 = bitcast %"class.blink::mojom::ClipboardHost"* %7 to void (%"class.blink::mojom::ClipboardHost"*, %"class.std::__1::basic_string"*)***
  %9 = load void (%"class.blink::mojom::ClipboardHost"*, %"class.std::__1::basic_string"*)**, void (%"class.blink::mojom::ClipboardHost"*, %"class.std::__1::basic_string"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::mojom::ClipboardHost"*, %"class.std::__1::basic_string"*)*, void (%"class.blink::mojom::ClipboardHost"*, %"class.std::__1::basic_string"*)** %9, i64 23
  %11 = load void (%"class.blink::mojom::ClipboardHost"*, %"class.std::__1::basic_string"*)*, void (%"class.blink::mojom::ClipboardHost"*, %"class.std::__1::basic_string"*)** %10, align 8
  tail call void %11(%"class.blink::mojom::ClipboardHost"* %7, %"class.std::__1::basic_string"* dereferenceable(24) %1) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom34ClipboardHostInterceptorForTesting21WriteSmartPasteMarkerEv(%"class.blink::mojom::ClipboardHostInterceptorForTesting"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::mojom::ClipboardHostInterceptorForTesting"* %0 to %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)***
  %3 = load %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)**, %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)** %3, i64 29
  %5 = load %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)** %4, align 8
  %6 = tail call %"class.blink::mojom::ClipboardHost"* %5(%"class.blink::mojom::ClipboardHostInterceptorForTesting"* %0) #12
  %7 = bitcast %"class.blink::mojom::ClipboardHost"* %6 to void (%"class.blink::mojom::ClipboardHost"*)***
  %8 = load void (%"class.blink::mojom::ClipboardHost"*)**, void (%"class.blink::mojom::ClipboardHost"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::mojom::ClipboardHost"*)*, void (%"class.blink::mojom::ClipboardHost"*)** %8, i64 24
  %10 = load void (%"class.blink::mojom::ClipboardHost"*)*, void (%"class.blink::mojom::ClipboardHost"*)** %9, align 8
  tail call void %10(%"class.blink::mojom::ClipboardHost"* %6) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom34ClipboardHostInterceptorForTesting15WriteCustomDataERKN4base8flat_mapINSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEESA_NS4_4lessIvEENS4_6vectorINS4_4pairISA_SA_EENS8_ISF_EEEEEE(%"class.blink::mojom::ClipboardHostInterceptorForTesting"*, %"class.base::flat_map"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::mojom::ClipboardHostInterceptorForTesting"* %0 to %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)***
  %4 = load %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)**, %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)** %4, i64 29
  %6 = load %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.blink::mojom::ClipboardHost"* %6(%"class.blink::mojom::ClipboardHostInterceptorForTesting"* %0) #12
  %8 = bitcast %"class.blink::mojom::ClipboardHost"* %7 to void (%"class.blink::mojom::ClipboardHost"*, %"class.base::flat_map"*)***
  %9 = load void (%"class.blink::mojom::ClipboardHost"*, %"class.base::flat_map"*)**, void (%"class.blink::mojom::ClipboardHost"*, %"class.base::flat_map"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::mojom::ClipboardHost"*, %"class.base::flat_map"*)*, void (%"class.blink::mojom::ClipboardHost"*, %"class.base::flat_map"*)** %9, i64 25
  %11 = load void (%"class.blink::mojom::ClipboardHost"*, %"class.base::flat_map"*)*, void (%"class.blink::mojom::ClipboardHost"*, %"class.base::flat_map"*)** %10, align 8
  tail call void %11(%"class.blink::mojom::ClipboardHost"* %7, %"class.base::flat_map"* dereferenceable(24) %1) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom34ClipboardHostInterceptorForTesting13WriteBookmarkERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEERKNS3_IDsNS4_IDsEENS6_IDsEEEE(%"class.blink::mojom::ClipboardHostInterceptorForTesting"*, %"class.std::__1::basic_string.9"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.blink::mojom::ClipboardHostInterceptorForTesting"* %0 to %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)***
  %5 = load %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)**, %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)** %5, i64 29
  %7 = load %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.blink::mojom::ClipboardHost"* %7(%"class.blink::mojom::ClipboardHostInterceptorForTesting"* %0) #12
  %9 = bitcast %"class.blink::mojom::ClipboardHost"* %8 to void (%"class.blink::mojom::ClipboardHost"*, %"class.std::__1::basic_string.9"*, %"class.std::__1::basic_string"*)***
  %10 = load void (%"class.blink::mojom::ClipboardHost"*, %"class.std::__1::basic_string.9"*, %"class.std::__1::basic_string"*)**, void (%"class.blink::mojom::ClipboardHost"*, %"class.std::__1::basic_string.9"*, %"class.std::__1::basic_string"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::mojom::ClipboardHost"*, %"class.std::__1::basic_string.9"*, %"class.std::__1::basic_string"*)*, void (%"class.blink::mojom::ClipboardHost"*, %"class.std::__1::basic_string.9"*, %"class.std::__1::basic_string"*)** %10, i64 26
  %12 = load void (%"class.blink::mojom::ClipboardHost"*, %"class.std::__1::basic_string.9"*, %"class.std::__1::basic_string"*)*, void (%"class.blink::mojom::ClipboardHost"*, %"class.std::__1::basic_string.9"*, %"class.std::__1::basic_string"*)** %11, align 8
  tail call void %12(%"class.blink::mojom::ClipboardHost"* %8, %"class.std::__1::basic_string.9"* dereferenceable(24) %1, %"class.std::__1::basic_string"* dereferenceable(24) %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom34ClipboardHostInterceptorForTesting10WriteImageERK8SkBitmap(%"class.blink::mojom::ClipboardHostInterceptorForTesting"*, %class.SkBitmap* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::mojom::ClipboardHostInterceptorForTesting"* %0 to %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)***
  %4 = load %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)**, %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)** %4, i64 29
  %6 = load %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.blink::mojom::ClipboardHost"* %6(%"class.blink::mojom::ClipboardHostInterceptorForTesting"* %0) #12
  %8 = bitcast %"class.blink::mojom::ClipboardHost"* %7 to void (%"class.blink::mojom::ClipboardHost"*, %class.SkBitmap*)***
  %9 = load void (%"class.blink::mojom::ClipboardHost"*, %class.SkBitmap*)**, void (%"class.blink::mojom::ClipboardHost"*, %class.SkBitmap*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::mojom::ClipboardHost"*, %class.SkBitmap*)*, void (%"class.blink::mojom::ClipboardHost"*, %class.SkBitmap*)** %9, i64 27
  %11 = load void (%"class.blink::mojom::ClipboardHost"*, %class.SkBitmap*)*, void (%"class.blink::mojom::ClipboardHost"*, %class.SkBitmap*)** %10, align 8
  tail call void %11(%"class.blink::mojom::ClipboardHost"* %7, %class.SkBitmap* dereferenceable(56) %1) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom34ClipboardHostInterceptorForTesting11CommitWriteEv(%"class.blink::mojom::ClipboardHostInterceptorForTesting"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::mojom::ClipboardHostInterceptorForTesting"* %0 to %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)***
  %3 = load %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)**, %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)** %3, i64 29
  %5 = load %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)*, %"class.blink::mojom::ClipboardHost"* (%"class.blink::mojom::ClipboardHostInterceptorForTesting"*)** %4, align 8
  %6 = tail call %"class.blink::mojom::ClipboardHost"* %5(%"class.blink::mojom::ClipboardHostInterceptorForTesting"* %0) #12
  %7 = bitcast %"class.blink::mojom::ClipboardHost"* %6 to void (%"class.blink::mojom::ClipboardHost"*)***
  %8 = load void (%"class.blink::mojom::ClipboardHost"*)**, void (%"class.blink::mojom::ClipboardHost"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::mojom::ClipboardHost"*)*, void (%"class.blink::mojom::ClipboardHost"*)** %8, i64 28
  %10 = load void (%"class.blink::mojom::ClipboardHost"*)*, void (%"class.blink::mojom::ClipboardHost"*)** %9, align 8
  tail call void %10(%"class.blink::mojom::ClipboardHost"* %6) #12
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom24ClipboardHostAsyncWaiterC2EPNS0_13ClipboardHostE(%"class.blink::mojom::ClipboardHostAsyncWaiter"* nocapture, %"class.blink::mojom::ClipboardHost"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::ClipboardHostAsyncWaiter", %"class.blink::mojom::ClipboardHostAsyncWaiter"* %0, i64 0, i32 0
  store %"class.blink::mojom::ClipboardHost"* %1, %"class.blink::mojom::ClipboardHost"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom24ClipboardHostAsyncWaiterD2Ev(%"class.blink::mojom::ClipboardHostAsyncWaiter"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom24ClipboardHostAsyncWaiter17GetSequenceNumberEN2ui15ClipboardBufferEPm(%"class.blink::mojom::ClipboardHostAsyncWaiter"* nocapture readonly, i32, i64*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::RunLoop", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.base::Location", align 8
  %7 = ptrtoint i64* %2 to i64
  %8 = bitcast %"class.base::RunLoop"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %8) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %4, i32 0) #12
  %9 = getelementptr inbounds %"class.blink::mojom::ClipboardHostAsyncWaiter", %"class.blink::mojom::ClipboardHostAsyncWaiter"* %0, i64 0, i32 0
  %10 = load %"class.blink::mojom::ClipboardHost"*, %"class.blink::mojom::ClipboardHost"** %9, align 8
  %11 = ptrtoint %"class.base::RunLoop"* %4 to i64
  %12 = call i8* @_Znwm(i64 56) #13, !noalias !2
  %13 = bitcast i8* %12 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %13, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i64)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom24ClipboardHostAsyncWaiter17GetSequenceNumberEN2ui15ClipboardBufferEPmE3$_0JPNS_7RunLoopES8_EEEFvmEE7RunOnceEPNS0_13BindStateBaseEm" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom24ClipboardHostAsyncWaiter17GetSequenceNumberEN2ui15ClipboardBufferEPmE3$_0JPNS_7RunLoopES7_EE7DestroyEPKNS0_13BindStateBaseE") #12, !noalias !2
  %14 = getelementptr inbounds i8, i8* %12, i64 40
  %15 = bitcast i8* %14 to i64*
  store i64 %11, i64* %15, align 8, !noalias !2
  %16 = getelementptr inbounds i8, i8* %12, i64 48
  %17 = bitcast i8* %16 to i64*
  store i64 %7, i64* %17, align 8, !noalias !2
  %18 = bitcast %"class.base::OnceCallback"* %5 to i8**
  store i8* %12, i8** %18, align 8, !alias.scope !2
  %19 = bitcast %"class.blink::mojom::ClipboardHost"* %10 to void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback"*)***
  %20 = load void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback"*)** %20, i64 3
  %22 = load void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback"*)** %21, align 8
  call void %22(%"class.blink::mojom::ClipboardHost"* %10, i32 %1, %"class.base::OnceCallback"* nonnull %5) #12
  %23 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #12
  %24 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.1, i64 0, i64 0), i32 108) #12
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %4, %"class.base::Location"* nonnull dereferenceable(32) %6) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #12
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %8) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"*, i32) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"*, %"class.base::Location"* dereferenceable(32)) local_unnamed_addr #5

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom24ClipboardHostAsyncWaiter17IsFormatAvailableENS0_15ClipboardFormatEN2ui15ClipboardBufferEPb(%"class.blink::mojom::ClipboardHostAsyncWaiter"* nocapture readonly, i32, i32, i8*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::RunLoop", align 8
  %6 = alloca %"class.base::OnceCallback.1", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = ptrtoint i8* %3 to i64
  %9 = bitcast %"class.base::RunLoop"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %5, i32 0) #12
  %10 = getelementptr inbounds %"class.blink::mojom::ClipboardHostAsyncWaiter", %"class.blink::mojom::ClipboardHostAsyncWaiter"* %0, i64 0, i32 0
  %11 = load %"class.blink::mojom::ClipboardHost"*, %"class.blink::mojom::ClipboardHost"** %10, align 8
  %12 = ptrtoint %"class.base::RunLoop"* %5 to i64
  %13 = call i8* @_Znwm(i64 56) #13, !noalias !7
  %14 = bitcast i8* %13 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %14, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i1)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom24ClipboardHostAsyncWaiter17IsFormatAvailableENS4_15ClipboardFormatEN2ui15ClipboardBufferEPbE3$_1JPNS_7RunLoopES9_EEEFvbEE7RunOnceEPNS0_13BindStateBaseEb" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom24ClipboardHostAsyncWaiter17IsFormatAvailableENS3_15ClipboardFormatEN2ui15ClipboardBufferEPbE3$_1JPNS_7RunLoopES8_EE7DestroyEPKNS0_13BindStateBaseE") #12, !noalias !7
  %15 = getelementptr inbounds i8, i8* %13, i64 40
  %16 = bitcast i8* %15 to i64*
  store i64 %12, i64* %16, align 8, !noalias !7
  %17 = getelementptr inbounds i8, i8* %13, i64 48
  %18 = bitcast i8* %17 to i64*
  store i64 %8, i64* %18, align 8, !noalias !7
  %19 = bitcast %"class.base::OnceCallback.1"* %6 to i8**
  store i8* %13, i8** %19, align 8, !alias.scope !7
  %20 = bitcast %"class.blink::mojom::ClipboardHost"* %11 to void (%"class.blink::mojom::ClipboardHost"*, i32, i32, %"class.base::OnceCallback.1"*)***
  %21 = load void (%"class.blink::mojom::ClipboardHost"*, i32, i32, %"class.base::OnceCallback.1"*)**, void (%"class.blink::mojom::ClipboardHost"*, i32, i32, %"class.base::OnceCallback.1"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::mojom::ClipboardHost"*, i32, i32, %"class.base::OnceCallback.1"*)*, void (%"class.blink::mojom::ClipboardHost"*, i32, i32, %"class.base::OnceCallback.1"*)** %21, i64 5
  %23 = load void (%"class.blink::mojom::ClipboardHost"*, i32, i32, %"class.base::OnceCallback.1"*)*, void (%"class.blink::mojom::ClipboardHost"*, i32, i32, %"class.base::OnceCallback.1"*)** %22, align 8
  call void %23(%"class.blink::mojom::ClipboardHost"* %11, i32 %1, i32 %2, %"class.base::OnceCallback.1"* nonnull %6) #12
  %24 = getelementptr inbounds %"class.base::OnceCallback.1", %"class.base::OnceCallback.1"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %24) #12
  %25 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.1, i64 0, i64 0), i32 123) #12
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %5, %"class.base::Location"* nonnull dereferenceable(32) %7) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #12
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom24ClipboardHostAsyncWaiter18ReadAvailableTypesEN2ui15ClipboardBufferEPNSt3__16vectorINS4_12basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEENS9_ISB_EEEE(%"class.blink::mojom::ClipboardHostAsyncWaiter"* nocapture readonly, i32, %"class.std::__1::vector.53"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::RunLoop", align 8
  %5 = alloca %"class.base::OnceCallback.2", align 8
  %6 = alloca %"class.base::Location", align 8
  %7 = ptrtoint %"class.std::__1::vector.53"* %2 to i64
  %8 = bitcast %"class.base::RunLoop"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %8) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %4, i32 0) #12
  %9 = getelementptr inbounds %"class.blink::mojom::ClipboardHostAsyncWaiter", %"class.blink::mojom::ClipboardHostAsyncWaiter"* %0, i64 0, i32 0
  %10 = load %"class.blink::mojom::ClipboardHost"*, %"class.blink::mojom::ClipboardHost"** %9, align 8
  %11 = ptrtoint %"class.base::RunLoop"* %4 to i64
  %12 = call i8* @_Znwm(i64 56) #13, !noalias !12
  %13 = bitcast i8* %12 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %13, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector.53"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom24ClipboardHostAsyncWaiter18ReadAvailableTypesEN2ui15ClipboardBufferEPNSt3__16vectorINS8_12basic_stringIDsNS8_11char_traitsIDsEENS8_9allocatorIDsEEEENSD_ISF_EEEEE3$_2JPNS_7RunLoopESI_EEEFvRKSH_EE7RunOnceEPNS0_13BindStateBaseESO_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom24ClipboardHostAsyncWaiter18ReadAvailableTypesEN2ui15ClipboardBufferEPNSt3__16vectorINS7_12basic_stringIDsNS7_11char_traitsIDsEENS7_9allocatorIDsEEEENSC_ISE_EEEEE3$_2JPNS_7RunLoopESH_EE7DestroyEPKNS0_13BindStateBaseE") #12, !noalias !12
  %14 = getelementptr inbounds i8, i8* %12, i64 40
  %15 = bitcast i8* %14 to i64*
  store i64 %11, i64* %15, align 8, !noalias !12
  %16 = getelementptr inbounds i8, i8* %12, i64 48
  %17 = bitcast i8* %16 to i64*
  store i64 %7, i64* %17, align 8, !noalias !12
  %18 = bitcast %"class.base::OnceCallback.2"* %5 to i8**
  store i8* %12, i8** %18, align 8, !alias.scope !12
  %19 = bitcast %"class.blink::mojom::ClipboardHost"* %10 to void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.2"*)***
  %20 = load void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.2"*)**, void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.2"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.2"*)*, void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.2"*)** %20, i64 7
  %22 = load void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.2"*)*, void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.2"*)** %21, align 8
  call void %22(%"class.blink::mojom::ClipboardHost"* %10, i32 %1, %"class.base::OnceCallback.2"* nonnull %5) #12
  %23 = getelementptr inbounds %"class.base::OnceCallback.2", %"class.base::OnceCallback.2"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #12
  %24 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.1, i64 0, i64 0), i32 138) #12
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %4, %"class.base::Location"* nonnull dereferenceable(32) %6) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #12
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %8) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom24ClipboardHostAsyncWaiter8ReadTextEN2ui15ClipboardBufferEPNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%"class.blink::mojom::ClipboardHostAsyncWaiter"* nocapture readonly, i32, %"class.std::__1::basic_string"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::RunLoop", align 8
  %5 = alloca %"class.base::OnceCallback.3", align 8
  %6 = alloca %"class.base::Location", align 8
  %7 = ptrtoint %"class.std::__1::basic_string"* %2 to i64
  %8 = bitcast %"class.base::RunLoop"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %8) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %4, i32 0) #12
  %9 = getelementptr inbounds %"class.blink::mojom::ClipboardHostAsyncWaiter", %"class.blink::mojom::ClipboardHostAsyncWaiter"* %0, i64 0, i32 0
  %10 = load %"class.blink::mojom::ClipboardHost"*, %"class.blink::mojom::ClipboardHost"** %9, align 8
  %11 = ptrtoint %"class.base::RunLoop"* %4 to i64
  %12 = call i8* @_Znwm(i64 56) #13, !noalias !17
  %13 = bitcast i8* %12 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %13, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom24ClipboardHostAsyncWaiter8ReadTextEN2ui15ClipboardBufferEPNSt3__112basic_stringIDsNS8_11char_traitsIDsEENS8_9allocatorIDsEEEEE3$_3JPNS_7RunLoopESF_EEEFvRKSE_EE7RunOnceEPNS0_13BindStateBaseESL_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom24ClipboardHostAsyncWaiter8ReadTextEN2ui15ClipboardBufferEPNSt3__112basic_stringIDsNS7_11char_traitsIDsEENS7_9allocatorIDsEEEEE3$_3JPNS_7RunLoopESE_EE7DestroyEPKNS0_13BindStateBaseE") #12, !noalias !17
  %14 = getelementptr inbounds i8, i8* %12, i64 40
  %15 = bitcast i8* %14 to i64*
  store i64 %11, i64* %15, align 8, !noalias !17
  %16 = getelementptr inbounds i8, i8* %12, i64 48
  %17 = bitcast i8* %16 to i64*
  store i64 %7, i64* %17, align 8, !noalias !17
  %18 = bitcast %"class.base::OnceCallback.3"* %5 to i8**
  store i8* %12, i8** %18, align 8, !alias.scope !17
  %19 = bitcast %"class.blink::mojom::ClipboardHost"* %10 to void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)***
  %20 = load void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)**, void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)*, void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)** %20, i64 9
  %22 = load void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)*, void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)** %21, align 8
  call void %22(%"class.blink::mojom::ClipboardHost"* %10, i32 %1, %"class.base::OnceCallback.3"* nonnull %5) #12
  %23 = getelementptr inbounds %"class.base::OnceCallback.3", %"class.base::OnceCallback.3"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #12
  %24 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.1, i64 0, i64 0), i32 153) #12
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %4, %"class.base::Location"* nonnull dereferenceable(32) %6) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #12
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %8) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom24ClipboardHostAsyncWaiter8ReadHtmlEN2ui15ClipboardBufferEPNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEEP4GURLPjSE_(%"class.blink::mojom::ClipboardHostAsyncWaiter"* nocapture readonly, i32, %"class.std::__1::basic_string"*, %class.GURL*, i32*, i32*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.base::RunLoop", align 8
  %8 = alloca %"class.base::OnceCallback.4", align 8
  %9 = alloca %"class.base::Location", align 8
  %10 = ptrtoint %"class.std::__1::basic_string"* %2 to i64
  %11 = ptrtoint %class.GURL* %3 to i64
  %12 = ptrtoint i32* %4 to i64
  %13 = ptrtoint i32* %5 to i64
  %14 = bitcast %"class.base::RunLoop"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %14) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %7, i32 0) #12
  %15 = getelementptr inbounds %"class.blink::mojom::ClipboardHostAsyncWaiter", %"class.blink::mojom::ClipboardHostAsyncWaiter"* %0, i64 0, i32 0
  %16 = load %"class.blink::mojom::ClipboardHost"*, %"class.blink::mojom::ClipboardHost"** %15, align 8
  %17 = ptrtoint %"class.base::RunLoop"* %7 to i64
  %18 = call i8* @_Znwm(i64 80) #13, !noalias !22
  %19 = bitcast i8* %18 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %19, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*, %class.GURL*, i32, i32)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom24ClipboardHostAsyncWaiter8ReadHtmlEN2ui15ClipboardBufferEPNSt3__112basic_stringIDsNS8_11char_traitsIDsEENS8_9allocatorIDsEEEEP4GURLPjSI_E3$_4JPNS_7RunLoopESF_SH_SI_SI_EEEFvRKSE_RKSG_jjEE7RunOnceEPNS0_13BindStateBaseESO_SQ_jj" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom24ClipboardHostAsyncWaiter8ReadHtmlEN2ui15ClipboardBufferEPNSt3__112basic_stringIDsNS7_11char_traitsIDsEENS7_9allocatorIDsEEEEP4GURLPjSH_E3$_4JPNS_7RunLoopESE_SG_SH_SH_EE7DestroyEPKNS0_13BindStateBaseE") #12, !noalias !22
  %20 = getelementptr inbounds i8, i8* %18, i64 40
  %21 = bitcast i8* %20 to i64*
  store i64 %17, i64* %21, align 8, !noalias !22
  %22 = getelementptr inbounds i8, i8* %18, i64 48
  %23 = bitcast i8* %22 to i64*
  store i64 %10, i64* %23, align 8, !noalias !22
  %24 = getelementptr inbounds i8, i8* %18, i64 56
  %25 = bitcast i8* %24 to i64*
  store i64 %11, i64* %25, align 8, !noalias !22
  %26 = getelementptr inbounds i8, i8* %18, i64 64
  %27 = bitcast i8* %26 to i64*
  store i64 %12, i64* %27, align 8, !noalias !22
  %28 = getelementptr inbounds i8, i8* %18, i64 72
  %29 = bitcast i8* %28 to i64*
  store i64 %13, i64* %29, align 8, !noalias !22
  %30 = bitcast %"class.base::OnceCallback.4"* %8 to i8**
  store i8* %18, i8** %30, align 8, !alias.scope !22
  %31 = bitcast %"class.blink::mojom::ClipboardHost"* %16 to void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.4"*)***
  %32 = load void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.4"*)**, void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.4"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.4"*)*, void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.4"*)** %32, i64 11
  %34 = load void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.4"*)*, void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.4"*)** %33, align 8
  call void %34(%"class.blink::mojom::ClipboardHost"* %16, i32 %1, %"class.base::OnceCallback.4"* nonnull %8) #12
  %35 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %35) #12
  %36 = bitcast %"class.base::Location"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %36) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %9, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.1, i64 0, i64 0), i32 180) #12
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %7, %"class.base::Location"* nonnull dereferenceable(32) %9) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %36) #12
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %14) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom24ClipboardHostAsyncWaiter7ReadSvgEN2ui15ClipboardBufferEPNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%"class.blink::mojom::ClipboardHostAsyncWaiter"* nocapture readonly, i32, %"class.std::__1::basic_string"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::RunLoop", align 8
  %5 = alloca %"class.base::OnceCallback.3", align 8
  %6 = alloca %"class.base::Location", align 8
  %7 = ptrtoint %"class.std::__1::basic_string"* %2 to i64
  %8 = bitcast %"class.base::RunLoop"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %8) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %4, i32 0) #12
  %9 = getelementptr inbounds %"class.blink::mojom::ClipboardHostAsyncWaiter", %"class.blink::mojom::ClipboardHostAsyncWaiter"* %0, i64 0, i32 0
  %10 = load %"class.blink::mojom::ClipboardHost"*, %"class.blink::mojom::ClipboardHost"** %9, align 8
  %11 = ptrtoint %"class.base::RunLoop"* %4 to i64
  %12 = call i8* @_Znwm(i64 56) #13, !noalias !27
  %13 = bitcast i8* %12 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %13, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom24ClipboardHostAsyncWaiter7ReadSvgEN2ui15ClipboardBufferEPNSt3__112basic_stringIDsNS8_11char_traitsIDsEENS8_9allocatorIDsEEEEE3$_5JPNS_7RunLoopESF_EEEFvRKSE_EE7RunOnceEPNS0_13BindStateBaseESL_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom24ClipboardHostAsyncWaiter7ReadSvgEN2ui15ClipboardBufferEPNSt3__112basic_stringIDsNS7_11char_traitsIDsEENS7_9allocatorIDsEEEEE3$_5JPNS_7RunLoopESE_EE7DestroyEPKNS0_13BindStateBaseE") #12, !noalias !27
  %14 = getelementptr inbounds i8, i8* %12, i64 40
  %15 = bitcast i8* %14 to i64*
  store i64 %11, i64* %15, align 8, !noalias !27
  %16 = getelementptr inbounds i8, i8* %12, i64 48
  %17 = bitcast i8* %16 to i64*
  store i64 %7, i64* %17, align 8, !noalias !27
  %18 = bitcast %"class.base::OnceCallback.3"* %5 to i8**
  store i8* %12, i8** %18, align 8, !alias.scope !27
  %19 = bitcast %"class.blink::mojom::ClipboardHost"* %10 to void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)***
  %20 = load void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)**, void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)*, void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)** %20, i64 12
  %22 = load void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)*, void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.3"*)** %21, align 8
  call void %22(%"class.blink::mojom::ClipboardHost"* %10, i32 %1, %"class.base::OnceCallback.3"* nonnull %5) #12
  %23 = getelementptr inbounds %"class.base::OnceCallback.3", %"class.base::OnceCallback.3"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #12
  %24 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.1, i64 0, i64 0), i32 195) #12
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %4, %"class.base::Location"* nonnull dereferenceable(32) %6) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #12
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %8) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom24ClipboardHostAsyncWaiter7ReadRtfEN2ui15ClipboardBufferEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.blink::mojom::ClipboardHostAsyncWaiter"* nocapture readonly, i32, %"class.std::__1::basic_string.9"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::RunLoop", align 8
  %5 = alloca %"class.base::OnceCallback.5", align 8
  %6 = alloca %"class.base::Location", align 8
  %7 = ptrtoint %"class.std::__1::basic_string.9"* %2 to i64
  %8 = bitcast %"class.base::RunLoop"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %8) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %4, i32 0) #12
  %9 = getelementptr inbounds %"class.blink::mojom::ClipboardHostAsyncWaiter", %"class.blink::mojom::ClipboardHostAsyncWaiter"* %0, i64 0, i32 0
  %10 = load %"class.blink::mojom::ClipboardHost"*, %"class.blink::mojom::ClipboardHost"** %9, align 8
  %11 = ptrtoint %"class.base::RunLoop"* %4 to i64
  %12 = call i8* @_Znwm(i64 56) #13, !noalias !32
  %13 = bitcast i8* %12 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %13, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string.9"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom24ClipboardHostAsyncWaiter7ReadRtfEN2ui15ClipboardBufferEPNSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEE3$_6JPNS_7RunLoopESF_EEEFvRKSE_EE7RunOnceEPNS0_13BindStateBaseESL_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom24ClipboardHostAsyncWaiter7ReadRtfEN2ui15ClipboardBufferEPNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEEE3$_6JPNS_7RunLoopESE_EE7DestroyEPKNS0_13BindStateBaseE") #12, !noalias !32
  %14 = getelementptr inbounds i8, i8* %12, i64 40
  %15 = bitcast i8* %14 to i64*
  store i64 %11, i64* %15, align 8, !noalias !32
  %16 = getelementptr inbounds i8, i8* %12, i64 48
  %17 = bitcast i8* %16 to i64*
  store i64 %7, i64* %17, align 8, !noalias !32
  %18 = bitcast %"class.base::OnceCallback.5"* %5 to i8**
  store i8* %12, i8** %18, align 8, !alias.scope !32
  %19 = bitcast %"class.blink::mojom::ClipboardHost"* %10 to void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.5"*)***
  %20 = load void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.5"*)**, void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.5"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.5"*)*, void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.5"*)** %20, i64 14
  %22 = load void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.5"*)*, void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.5"*)** %21, align 8
  call void %22(%"class.blink::mojom::ClipboardHost"* %10, i32 %1, %"class.base::OnceCallback.5"* nonnull %5) #12
  %23 = getelementptr inbounds %"class.base::OnceCallback.5", %"class.base::OnceCallback.5"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #12
  %24 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.1, i64 0, i64 0), i32 210) #12
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %4, %"class.base::Location"* nonnull dereferenceable(32) %6) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #12
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %8) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom24ClipboardHostAsyncWaiter9ReadImageEN2ui15ClipboardBufferEP8SkBitmap(%"class.blink::mojom::ClipboardHostAsyncWaiter"* nocapture readonly, i32, %class.SkBitmap*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::RunLoop", align 8
  %5 = alloca %"class.base::OnceCallback.6", align 8
  %6 = alloca %"class.base::Location", align 8
  %7 = ptrtoint %class.SkBitmap* %2 to i64
  %8 = bitcast %"class.base::RunLoop"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %8) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %4, i32 0) #12
  %9 = getelementptr inbounds %"class.blink::mojom::ClipboardHostAsyncWaiter", %"class.blink::mojom::ClipboardHostAsyncWaiter"* %0, i64 0, i32 0
  %10 = load %"class.blink::mojom::ClipboardHost"*, %"class.blink::mojom::ClipboardHost"** %9, align 8
  %11 = ptrtoint %"class.base::RunLoop"* %4 to i64
  %12 = call i8* @_Znwm(i64 56) #13, !noalias !37
  %13 = bitcast i8* %12 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %13, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %class.SkBitmap*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom24ClipboardHostAsyncWaiter9ReadImageEN2ui15ClipboardBufferEP8SkBitmapE3$_7JPNS_7RunLoopES9_EEEFvRKS8_EE7RunOnceEPNS0_13BindStateBaseESF_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom24ClipboardHostAsyncWaiter9ReadImageEN2ui15ClipboardBufferEP8SkBitmapE3$_7JPNS_7RunLoopES8_EE7DestroyEPKNS0_13BindStateBaseE") #12, !noalias !37
  %14 = getelementptr inbounds i8, i8* %12, i64 40
  %15 = bitcast i8* %14 to i64*
  store i64 %11, i64* %15, align 8, !noalias !37
  %16 = getelementptr inbounds i8, i8* %12, i64 48
  %17 = bitcast i8* %16 to i64*
  store i64 %7, i64* %17, align 8, !noalias !37
  %18 = bitcast %"class.base::OnceCallback.6"* %5 to i8**
  store i8* %12, i8** %18, align 8, !alias.scope !37
  %19 = bitcast %"class.blink::mojom::ClipboardHost"* %10 to void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.6"*)***
  %20 = load void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.6"*)**, void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.6"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.6"*)*, void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.6"*)** %20, i64 16
  %22 = load void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.6"*)*, void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.6"*)** %21, align 8
  call void %22(%"class.blink::mojom::ClipboardHost"* %10, i32 %1, %"class.base::OnceCallback.6"* nonnull %5) #12
  %23 = getelementptr inbounds %"class.base::OnceCallback.6", %"class.base::OnceCallback.6"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #12
  %24 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.1, i64 0, i64 0), i32 225) #12
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %4, %"class.base::Location"* nonnull dereferenceable(32) %6) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #12
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %8) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom24ClipboardHostAsyncWaiter9ReadFilesEN2ui15ClipboardBufferEPN4mojo9StructPtrINS0_14ClipboardFilesEEE(%"class.blink::mojom::ClipboardHostAsyncWaiter"* nocapture readonly, i32, %"class.mojo::StructPtr"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::RunLoop", align 8
  %5 = alloca %"class.base::OnceCallback.7", align 8
  %6 = alloca %"class.base::Location", align 8
  %7 = ptrtoint %"class.mojo::StructPtr"* %2 to i64
  %8 = bitcast %"class.base::RunLoop"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %8) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %4, i32 0) #12
  %9 = getelementptr inbounds %"class.blink::mojom::ClipboardHostAsyncWaiter", %"class.blink::mojom::ClipboardHostAsyncWaiter"* %0, i64 0, i32 0
  %10 = load %"class.blink::mojom::ClipboardHost"*, %"class.blink::mojom::ClipboardHost"** %9, align 8
  %11 = ptrtoint %"class.base::RunLoop"* %4 to i64
  %12 = call i8* @_Znwm(i64 56) #13, !noalias !42
  %13 = bitcast i8* %12 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %13, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom24ClipboardHostAsyncWaiter9ReadFilesEN2ui15ClipboardBufferEPN4mojo9StructPtrINS4_14ClipboardFilesEEEE3$_8JPNS_7RunLoopESC_EEEFvSB_EE7RunOnceEPNS0_13BindStateBaseEOSB_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom24ClipboardHostAsyncWaiter9ReadFilesEN2ui15ClipboardBufferEPN4mojo9StructPtrINS3_14ClipboardFilesEEEE3$_8JPNS_7RunLoopESB_EE7DestroyEPKNS0_13BindStateBaseE") #12, !noalias !42
  %14 = getelementptr inbounds i8, i8* %12, i64 40
  %15 = bitcast i8* %14 to i64*
  store i64 %11, i64* %15, align 8, !noalias !42
  %16 = getelementptr inbounds i8, i8* %12, i64 48
  %17 = bitcast i8* %16 to i64*
  store i64 %7, i64* %17, align 8, !noalias !42
  %18 = bitcast %"class.base::OnceCallback.7"* %5 to i8**
  store i8* %12, i8** %18, align 8, !alias.scope !42
  %19 = bitcast %"class.blink::mojom::ClipboardHost"* %10 to void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.7"*)***
  %20 = load void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.7"*)**, void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.7"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.7"*)*, void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.7"*)** %20, i64 18
  %22 = load void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.7"*)*, void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.base::OnceCallback.7"*)** %21, align 8
  call void %22(%"class.blink::mojom::ClipboardHost"* %10, i32 %1, %"class.base::OnceCallback.7"* nonnull %5) #12
  %23 = getelementptr inbounds %"class.base::OnceCallback.7", %"class.base::OnceCallback.7"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #12
  %24 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.1, i64 0, i64 0), i32 240) #12
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %4, %"class.base::Location"* nonnull dereferenceable(32) %6) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #12
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %8) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom24ClipboardHostAsyncWaiter14ReadCustomDataEN2ui15ClipboardBufferERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEEPSA_(%"class.blink::mojom::ClipboardHostAsyncWaiter"* nocapture readonly, i32, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::RunLoop", align 8
  %6 = alloca %"class.base::OnceCallback.3", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = ptrtoint %"class.std::__1::basic_string"* %3 to i64
  %9 = bitcast %"class.base::RunLoop"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %5, i32 0) #12
  %10 = getelementptr inbounds %"class.blink::mojom::ClipboardHostAsyncWaiter", %"class.blink::mojom::ClipboardHostAsyncWaiter"* %0, i64 0, i32 0
  %11 = load %"class.blink::mojom::ClipboardHost"*, %"class.blink::mojom::ClipboardHost"** %10, align 8
  %12 = ptrtoint %"class.base::RunLoop"* %5 to i64
  %13 = call i8* @_Znwm(i64 56) #13, !noalias !47
  %14 = bitcast i8* %13 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %14, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom24ClipboardHostAsyncWaiter14ReadCustomDataEN2ui15ClipboardBufferERKNSt3__112basic_stringIDsNS8_11char_traitsIDsEENS8_9allocatorIDsEEEEPSE_E3$_9JPNS_7RunLoopESH_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom24ClipboardHostAsyncWaiter14ReadCustomDataEN2ui15ClipboardBufferERKNSt3__112basic_stringIDsNS7_11char_traitsIDsEENS7_9allocatorIDsEEEEPSD_E3$_9JPNS_7RunLoopESG_EE7DestroyEPKNS0_13BindStateBaseE") #12, !noalias !47
  %15 = getelementptr inbounds i8, i8* %13, i64 40
  %16 = bitcast i8* %15 to i64*
  store i64 %12, i64* %16, align 8, !noalias !47
  %17 = getelementptr inbounds i8, i8* %13, i64 48
  %18 = bitcast i8* %17 to i64*
  store i64 %8, i64* %18, align 8, !noalias !47
  %19 = bitcast %"class.base::OnceCallback.3"* %6 to i8**
  store i8* %13, i8** %19, align 8, !alias.scope !47
  %20 = bitcast %"class.blink::mojom::ClipboardHost"* %11 to void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.std::__1::basic_string"*, %"class.base::OnceCallback.3"*)***
  %21 = load void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.std::__1::basic_string"*, %"class.base::OnceCallback.3"*)**, void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.std::__1::basic_string"*, %"class.base::OnceCallback.3"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.std::__1::basic_string"*, %"class.base::OnceCallback.3"*)*, void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.std::__1::basic_string"*, %"class.base::OnceCallback.3"*)** %21, i64 20
  %23 = load void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.std::__1::basic_string"*, %"class.base::OnceCallback.3"*)*, void (%"class.blink::mojom::ClipboardHost"*, i32, %"class.std::__1::basic_string"*, %"class.base::OnceCallback.3"*)** %22, align 8
  call void %23(%"class.blink::mojom::ClipboardHost"* %11, i32 %1, %"class.std::__1::basic_string"* dereferenceable(24) %2, %"class.base::OnceCallback.3"* nonnull %6) #12
  %24 = getelementptr inbounds %"class.base::OnceCallback.3", %"class.base::OnceCallback.3"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %24) #12
  %25 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.1, i64 0, i64 0), i32 255) #12
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %5, %"class.base::Location"* nonnull dereferenceable(32) %7) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #12
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom13ClipboardHostD2Ev(%"class.blink::mojom::ClipboardHost"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom34ClipboardHostInterceptorForTestingD0Ev(%"class.blink::mojom::ClipboardHostInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #14
  unreachable
}

declare zeroext i1 @_ZN5blink5mojom13ClipboardHost17GetSequenceNumberEN2ui15ClipboardBufferEPm(%"class.blink::mojom::ClipboardHost"*, i32, i64*) unnamed_addr #5

declare zeroext i1 @_ZN5blink5mojom13ClipboardHost17IsFormatAvailableENS0_15ClipboardFormatEN2ui15ClipboardBufferEPb(%"class.blink::mojom::ClipboardHost"*, i32, i32, i8*) unnamed_addr #5

declare zeroext i1 @_ZN5blink5mojom13ClipboardHost18ReadAvailableTypesEN2ui15ClipboardBufferEPNSt3__16vectorINS4_12basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEENS9_ISB_EEEE(%"class.blink::mojom::ClipboardHost"*, i32, %"class.std::__1::vector.53"*) unnamed_addr #5

declare zeroext i1 @_ZN5blink5mojom13ClipboardHost8ReadTextEN2ui15ClipboardBufferEPNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%"class.blink::mojom::ClipboardHost"*, i32, %"class.std::__1::basic_string"*) unnamed_addr #5

declare zeroext i1 @_ZN5blink5mojom13ClipboardHost8ReadHtmlEN2ui15ClipboardBufferEPNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEEP4GURLPjSE_(%"class.blink::mojom::ClipboardHost"*, i32, %"class.std::__1::basic_string"*, %class.GURL*, i32*, i32*) unnamed_addr #5

declare zeroext i1 @_ZN5blink5mojom13ClipboardHost7ReadRtfEN2ui15ClipboardBufferEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.blink::mojom::ClipboardHost"*, i32, %"class.std::__1::basic_string.9"*) unnamed_addr #5

declare zeroext i1 @_ZN5blink5mojom13ClipboardHost9ReadImageEN2ui15ClipboardBufferEP8SkBitmap(%"class.blink::mojom::ClipboardHost"*, i32, %class.SkBitmap*) unnamed_addr #5

declare zeroext i1 @_ZN5blink5mojom13ClipboardHost9ReadFilesEN2ui15ClipboardBufferEPN4mojo9StructPtrINS0_14ClipboardFilesEEE(%"class.blink::mojom::ClipboardHost"*, i32, %"class.mojo::StructPtr"*) unnamed_addr #5

declare zeroext i1 @_ZN5blink5mojom13ClipboardHost14ReadCustomDataEN2ui15ClipboardBufferERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEEPSA_(%"class.blink::mojom::ClipboardHost"*, i32, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"*) unnamed_addr #5

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom24ClipboardHostAsyncWaiter17GetSequenceNumberEN2ui15ClipboardBufferEPmE3$_0JPNS_7RunLoopES8_EEEFvmEE7RunOnceEPNS0_13BindStateBaseEm"(%"class.base::internal::BindStateBase"* nocapture readonly, i64) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to i64**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load i64*, i64** %6, align 8
  store i64 %1, i64* %8, align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #12
  ret void
}

declare void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom24ClipboardHostAsyncWaiter17GetSequenceNumberEN2ui15ClipboardBufferEPmE3$_0JPNS_7RunLoopES7_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #13
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom24ClipboardHostAsyncWaiter17IsFormatAvailableENS4_15ClipboardFormatEN2ui15ClipboardBufferEPbE3$_1JPNS_7RunLoopES9_EEEFvbEE7RunOnceEPNS0_13BindStateBaseEb"(%"class.base::internal::BindStateBase"* nocapture readonly, i1 zeroext) #0 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::RunLoop"**
  %6 = getelementptr inbounds void ()*, void ()** %4, i64 1
  %7 = bitcast void ()** %6 to i8**
  %8 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %5, align 8
  %9 = load i8*, i8** %7, align 8
  store i8 %3, i8* %9, align 1
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %8) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom24ClipboardHostAsyncWaiter17IsFormatAvailableENS3_15ClipboardFormatEN2ui15ClipboardBufferEPbE3$_1JPNS_7RunLoopES8_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #13
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom24ClipboardHostAsyncWaiter18ReadAvailableTypesEN2ui15ClipboardBufferEPNSt3__16vectorINS8_12basic_stringIDsNS8_11char_traitsIDsEENS8_9allocatorIDsEEEENSD_ISF_EEEEE3$_2JPNS_7RunLoopESI_EEEFvRKSH_EE7RunOnceEPNS0_13BindStateBaseESO_"(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.std::__1::vector.53"* readonly dereferenceable(24)) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to %"class.std::__1::vector.53"**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load %"class.std::__1::vector.53"*, %"class.std::__1::vector.53"** %6, align 8
  %9 = icmp eq %"class.std::__1::vector.53"* %8, %1
  br i1 %9, label %15, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.std::__1::vector.53", %"class.std::__1::vector.53"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %11, align 8
  %13 = getelementptr inbounds %"class.std::__1::vector.53", %"class.std::__1::vector.53"* %1, i64 0, i32 0, i32 1
  %14 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %13, align 8
  tail call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.53"* %8, %"class.std::__1::basic_string"* %12, %"class.std::__1::basic_string"* %14) #12
  br label %15

15:                                               ; preds = %2, %10
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.53"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.std::__1::basic_string"* %2 to i64
  %5 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 24
  %8 = getelementptr inbounds %"class.std::__1::vector.53", %"class.std::__1::vector.53"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.std::__1::basic_string"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.53"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 24
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.std::__1::basic_string"*
  br i1 %15, label %251, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.53", %"class.std::__1::vector.53"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.std::__1::basic_string"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 24
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 %22
  %25 = select i1 %23, %"class.std::__1::basic_string"* %24, %"class.std::__1::basic_string"* %2
  %26 = icmp eq %"class.std::__1::basic_string"* %25, %1
  br i1 %26, label %34, label %27

27:                                               ; preds = %17, %27
  %28 = phi %"class.std::__1::basic_string"* [ %32, %27 ], [ %16, %17 ]
  %29 = phi %"class.std::__1::basic_string"* [ %31, %27 ], [ %1, %17 ]
  %30 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %28, %"class.std::__1::basic_string"* dereferenceable(24) %29) #12
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 1
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 1
  %33 = icmp eq %"class.std::__1::basic_string"* %31, %25
  br i1 %33, label %34, label %27

34:                                               ; preds = %27, %17
  %35 = phi %"class.std::__1::basic_string"* [ %16, %17 ], [ %32, %27 ]
  br i1 %23, label %36, label %235

36:                                               ; preds = %34
  %37 = load i64, i64* %19, align 8
  %38 = icmp eq %"class.std::__1::basic_string"* %25, %2
  br i1 %38, label %233, label %39

39:                                               ; preds = %36
  %40 = inttoptr i64 %37 to %"class.std::__1::basic_string"*
  br label %41

41:                                               ; preds = %227, %39
  %42 = phi %"class.std::__1::basic_string"* [ %229, %227 ], [ %40, %39 ]
  %43 = phi %"class.std::__1::basic_string"* [ %228, %227 ], [ %24, %39 ]
  %44 = bitcast %"class.std::__1::basic_string"* %43 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %44, i64 0, i32 1, i32 1
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %51, label %48

48:                                               ; preds = %41
  %49 = bitcast %"class.std::__1::basic_string"* %42 to i8*
  %50 = bitcast %"class.std::__1::basic_string"* %43 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 24, i1 false) #12
  br label %227

51:                                               ; preds = %41
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i16*, i16** %52, align 8
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = icmp ult i64 %55, 11
  br i1 %56, label %57, label %62

57:                                               ; preds = %51
  %58 = bitcast %"class.std::__1::basic_string"* %42 to i16*
  %59 = trunc i64 %55 to i8
  %60 = bitcast %"class.std::__1::basic_string"* %42 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %60, i64 0, i32 1, i32 1
  store i8 %59, i8* %61, align 1
  br label %79

62:                                               ; preds = %51
  %63 = icmp ugt i64 %55, 9223372036854775791
  br i1 %63, label %64, label %66

64:                                               ; preds = %62
  %65 = bitcast %"class.std::__1::basic_string"* %42 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %65) #14
  unreachable

66:                                               ; preds = %62
  %67 = add nuw nsw i64 %55, 8
  %68 = and i64 %67, -8
  %69 = icmp slt i64 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %66
  tail call void @abort() #14
  unreachable

71:                                               ; preds = %66
  %72 = shl i64 %68, 1
  %73 = tail call i8* @_Znwm(i64 %72) #13
  %74 = bitcast i8* %73 to i16*
  %75 = bitcast %"class.std::__1::basic_string"* %42 to i8**
  store i8* %73, i8** %75, align 8
  %76 = or i64 %68, -9223372036854775808
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %76, i64* %77, align 8
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %55, i64* %78, align 8
  br label %79

79:                                               ; preds = %71, %57
  %80 = phi i16* [ %58, %57 ], [ %74, %71 ]
  %81 = add nuw nsw i64 %55, 1
  %82 = add i64 %55, 1
  %83 = icmp ult i64 %82, 16
  br i1 %83, label %174, label %84

84:                                               ; preds = %79
  %85 = getelementptr i16, i16* %80, i64 1
  %86 = getelementptr i16, i16* %85, i64 %55
  %87 = getelementptr i16, i16* %53, i64 1
  %88 = getelementptr i16, i16* %87, i64 %55
  %89 = icmp ult i16* %80, %88
  %90 = icmp ult i16* %53, %86
  %91 = and i1 %89, %90
  br i1 %91, label %174, label %92

92:                                               ; preds = %84
  %93 = and i64 %82, -16
  %94 = sub i64 %81, %93
  %95 = getelementptr i16, i16* %53, i64 %93
  %96 = getelementptr i16, i16* %80, i64 %93
  %97 = add i64 %93, -16
  %98 = lshr exact i64 %97, 4
  %99 = add nuw nsw i64 %98, 1
  %100 = and i64 %99, 3
  %101 = icmp ult i64 %97, 48
  br i1 %101, label %153, label %102

102:                                              ; preds = %92
  %103 = sub nsw i64 %99, %100
  br label %104

104:                                              ; preds = %104, %102
  %105 = phi i64 [ 0, %102 ], [ %150, %104 ]
  %106 = phi i64 [ %103, %102 ], [ %151, %104 ]
  %107 = getelementptr i16, i16* %53, i64 %105
  %108 = getelementptr i16, i16* %80, i64 %105
  %109 = bitcast i16* %107 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !52
  %111 = getelementptr i16, i16* %107, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !52
  %114 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %110, <8 x i16>* %114, align 2, !alias.scope !55, !noalias !52
  %115 = getelementptr i16, i16* %108, i64 8
  %116 = bitcast i16* %115 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %116, align 2, !alias.scope !55, !noalias !52
  %117 = or i64 %105, 16
  %118 = getelementptr i16, i16* %53, i64 %117
  %119 = getelementptr i16, i16* %80, i64 %117
  %120 = bitcast i16* %118 to <8 x i16>*
  %121 = load <8 x i16>, <8 x i16>* %120, align 2, !alias.scope !52
  %122 = getelementptr i16, i16* %118, i64 8
  %123 = bitcast i16* %122 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !52
  %125 = bitcast i16* %119 to <8 x i16>*
  store <8 x i16> %121, <8 x i16>* %125, align 2, !alias.scope !55, !noalias !52
  %126 = getelementptr i16, i16* %119, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %127, align 2, !alias.scope !55, !noalias !52
  %128 = or i64 %105, 32
  %129 = getelementptr i16, i16* %53, i64 %128
  %130 = getelementptr i16, i16* %80, i64 %128
  %131 = bitcast i16* %129 to <8 x i16>*
  %132 = load <8 x i16>, <8 x i16>* %131, align 2, !alias.scope !52
  %133 = getelementptr i16, i16* %129, i64 8
  %134 = bitcast i16* %133 to <8 x i16>*
  %135 = load <8 x i16>, <8 x i16>* %134, align 2, !alias.scope !52
  %136 = bitcast i16* %130 to <8 x i16>*
  store <8 x i16> %132, <8 x i16>* %136, align 2, !alias.scope !55, !noalias !52
  %137 = getelementptr i16, i16* %130, i64 8
  %138 = bitcast i16* %137 to <8 x i16>*
  store <8 x i16> %135, <8 x i16>* %138, align 2, !alias.scope !55, !noalias !52
  %139 = or i64 %105, 48
  %140 = getelementptr i16, i16* %53, i64 %139
  %141 = getelementptr i16, i16* %80, i64 %139
  %142 = bitcast i16* %140 to <8 x i16>*
  %143 = load <8 x i16>, <8 x i16>* %142, align 2, !alias.scope !52
  %144 = getelementptr i16, i16* %140, i64 8
  %145 = bitcast i16* %144 to <8 x i16>*
  %146 = load <8 x i16>, <8 x i16>* %145, align 2, !alias.scope !52
  %147 = bitcast i16* %141 to <8 x i16>*
  store <8 x i16> %143, <8 x i16>* %147, align 2, !alias.scope !55, !noalias !52
  %148 = getelementptr i16, i16* %141, i64 8
  %149 = bitcast i16* %148 to <8 x i16>*
  store <8 x i16> %146, <8 x i16>* %149, align 2, !alias.scope !55, !noalias !52
  %150 = add i64 %105, 64
  %151 = add i64 %106, -4
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %104, !llvm.loop !57

153:                                              ; preds = %104, %92
  %154 = phi i64 [ 0, %92 ], [ %150, %104 ]
  %155 = icmp eq i64 %100, 0
  br i1 %155, label %172, label %156

156:                                              ; preds = %153, %156
  %157 = phi i64 [ %169, %156 ], [ %154, %153 ]
  %158 = phi i64 [ %170, %156 ], [ %100, %153 ]
  %159 = getelementptr i16, i16* %53, i64 %157
  %160 = getelementptr i16, i16* %80, i64 %157
  %161 = bitcast i16* %159 to <8 x i16>*
  %162 = load <8 x i16>, <8 x i16>* %161, align 2, !alias.scope !52
  %163 = getelementptr i16, i16* %159, i64 8
  %164 = bitcast i16* %163 to <8 x i16>*
  %165 = load <8 x i16>, <8 x i16>* %164, align 2, !alias.scope !52
  %166 = bitcast i16* %160 to <8 x i16>*
  store <8 x i16> %162, <8 x i16>* %166, align 2, !alias.scope !55, !noalias !52
  %167 = getelementptr i16, i16* %160, i64 8
  %168 = bitcast i16* %167 to <8 x i16>*
  store <8 x i16> %165, <8 x i16>* %168, align 2, !alias.scope !55, !noalias !52
  %169 = add i64 %157, 16
  %170 = add i64 %158, -1
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %172, label %156, !llvm.loop !59

172:                                              ; preds = %156, %153
  %173 = icmp eq i64 %82, %93
  br i1 %173, label %227, label %174

174:                                              ; preds = %172, %84, %79
  %175 = phi i64 [ %81, %84 ], [ %81, %79 ], [ %94, %172 ]
  %176 = phi i16* [ %53, %84 ], [ %53, %79 ], [ %95, %172 ]
  %177 = phi i16* [ %80, %84 ], [ %80, %79 ], [ %96, %172 ]
  %178 = add i64 %175, -1
  %179 = and i64 %175, 7
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %192, label %181

181:                                              ; preds = %174, %181
  %182 = phi i64 [ %187, %181 ], [ %175, %174 ]
  %183 = phi i16* [ %189, %181 ], [ %176, %174 ]
  %184 = phi i16* [ %188, %181 ], [ %177, %174 ]
  %185 = phi i64 [ %190, %181 ], [ %179, %174 ]
  %186 = load i16, i16* %183, align 2
  store i16 %186, i16* %184, align 2
  %187 = add i64 %182, -1
  %188 = getelementptr inbounds i16, i16* %184, i64 1
  %189 = getelementptr inbounds i16, i16* %183, i64 1
  %190 = add i64 %185, -1
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %192, label %181, !llvm.loop !61

192:                                              ; preds = %181, %174
  %193 = phi i64 [ %175, %174 ], [ %187, %181 ]
  %194 = phi i16* [ %176, %174 ], [ %189, %181 ]
  %195 = phi i16* [ %177, %174 ], [ %188, %181 ]
  %196 = icmp ult i64 %178, 7
  br i1 %196, label %227, label %197

197:                                              ; preds = %192, %197
  %198 = phi i64 [ %223, %197 ], [ %193, %192 ]
  %199 = phi i16* [ %225, %197 ], [ %194, %192 ]
  %200 = phi i16* [ %224, %197 ], [ %195, %192 ]
  %201 = load i16, i16* %199, align 2
  store i16 %201, i16* %200, align 2
  %202 = getelementptr inbounds i16, i16* %200, i64 1
  %203 = getelementptr inbounds i16, i16* %199, i64 1
  %204 = load i16, i16* %203, align 2
  store i16 %204, i16* %202, align 2
  %205 = getelementptr inbounds i16, i16* %200, i64 2
  %206 = getelementptr inbounds i16, i16* %199, i64 2
  %207 = load i16, i16* %206, align 2
  store i16 %207, i16* %205, align 2
  %208 = getelementptr inbounds i16, i16* %200, i64 3
  %209 = getelementptr inbounds i16, i16* %199, i64 3
  %210 = load i16, i16* %209, align 2
  store i16 %210, i16* %208, align 2
  %211 = getelementptr inbounds i16, i16* %200, i64 4
  %212 = getelementptr inbounds i16, i16* %199, i64 4
  %213 = load i16, i16* %212, align 2
  store i16 %213, i16* %211, align 2
  %214 = getelementptr inbounds i16, i16* %200, i64 5
  %215 = getelementptr inbounds i16, i16* %199, i64 5
  %216 = load i16, i16* %215, align 2
  store i16 %216, i16* %214, align 2
  %217 = getelementptr inbounds i16, i16* %200, i64 6
  %218 = getelementptr inbounds i16, i16* %199, i64 6
  %219 = load i16, i16* %218, align 2
  store i16 %219, i16* %217, align 2
  %220 = getelementptr inbounds i16, i16* %200, i64 7
  %221 = getelementptr inbounds i16, i16* %199, i64 7
  %222 = load i16, i16* %221, align 2
  store i16 %222, i16* %220, align 2
  %223 = add i64 %198, -8
  %224 = getelementptr inbounds i16, i16* %200, i64 8
  %225 = getelementptr inbounds i16, i16* %199, i64 8
  %226 = icmp eq i64 %223, 0
  br i1 %226, label %227, label %197, !llvm.loop !62

227:                                              ; preds = %192, %197, %172, %48
  %228 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 1
  %229 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 1
  %230 = icmp eq %"class.std::__1::basic_string"* %228, %2
  br i1 %230, label %231, label %41

231:                                              ; preds = %227
  %232 = ptrtoint %"class.std::__1::basic_string"* %229 to i64
  br label %233

233:                                              ; preds = %36, %231
  %234 = phi i64 [ %37, %36 ], [ %232, %231 ]
  store i64 %234, i64* %19, align 8
  br label %494

235:                                              ; preds = %34
  %236 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %18, align 8
  %237 = icmp eq %"class.std::__1::basic_string"* %236, %35
  br i1 %237, label %250, label %238

238:                                              ; preds = %235, %248
  %239 = phi %"class.std::__1::basic_string"* [ %240, %248 ], [ %236, %235 ]
  %240 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %239, i64 -1
  %241 = bitcast %"class.std::__1::basic_string"* %240 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %242 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %241, i64 0, i32 1, i32 1
  %243 = load i8, i8* %242, align 1
  %244 = icmp slt i8 %243, 0
  br i1 %244, label %245, label %248

245:                                              ; preds = %238
  %246 = bitcast %"class.std::__1::basic_string"* %240 to i8**
  %247 = load i8*, i8** %246, align 8
  tail call void @_ZdlPv(i8* %247) #13
  br label %248

248:                                              ; preds = %245, %238
  %249 = icmp eq %"class.std::__1::basic_string"* %240, %35
  br i1 %249, label %250, label %238

250:                                              ; preds = %248, %235
  store %"class.std::__1::basic_string"* %35, %"class.std::__1::basic_string"** %18, align 8
  br label %494

251:                                              ; preds = %3
  %252 = icmp eq i64 %12, 0
  br i1 %252, label %276, label %253

253:                                              ; preds = %251
  %254 = inttoptr i64 %12 to i8*
  %255 = getelementptr inbounds %"class.std::__1::vector.53", %"class.std::__1::vector.53"* %0, i64 0, i32 0, i32 1
  %256 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %255, align 8
  %257 = icmp eq %"class.std::__1::basic_string"* %256, %16
  br i1 %257, label %273, label %258

258:                                              ; preds = %253, %268
  %259 = phi %"class.std::__1::basic_string"* [ %260, %268 ], [ %256, %253 ]
  %260 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %259, i64 -1
  %261 = bitcast %"class.std::__1::basic_string"* %260 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %262 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %261, i64 0, i32 1, i32 1
  %263 = load i8, i8* %262, align 1
  %264 = icmp slt i8 %263, 0
  br i1 %264, label %265, label %268

265:                                              ; preds = %258
  %266 = bitcast %"class.std::__1::basic_string"* %260 to i8**
  %267 = load i8*, i8** %266, align 8
  tail call void @_ZdlPv(i8* %267) #13
  br label %268

268:                                              ; preds = %265, %258
  %269 = icmp eq %"class.std::__1::basic_string"* %260, %16
  br i1 %269, label %270, label %258

270:                                              ; preds = %268
  %271 = bitcast %"class.std::__1::vector.53"* %0 to i8**
  %272 = load i8*, i8** %271, align 8
  br label %273

273:                                              ; preds = %270, %253
  %274 = phi i8* [ %272, %270 ], [ %254, %253 ]
  store %"class.std::__1::basic_string"* %16, %"class.std::__1::basic_string"** %255, align 8
  tail call void @_ZdlPv(i8* %274) #13
  %275 = bitcast %"class.std::__1::vector.53"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %275, i8 0, i64 24, i1 false) #12
  br label %276

276:                                              ; preds = %251, %273
  %277 = phi i64 [ %10, %251 ], [ 0, %273 ]
  %278 = icmp ugt i64 %7, 768614336404564650
  br i1 %278, label %279, label %281

279:                                              ; preds = %276
  %280 = bitcast %"class.std::__1::vector.53"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %280) #14
  unreachable

281:                                              ; preds = %276
  %282 = sdiv exact i64 %277, 24
  %283 = icmp ult i64 %282, 384307168202282325
  br i1 %283, label %284, label %288

284:                                              ; preds = %281
  %285 = shl nsw i64 %282, 1
  %286 = icmp ult i64 %285, %7
  %287 = select i1 %286, i64 %7, i64 %285
  br label %288

288:                                              ; preds = %284, %281
  %289 = phi i64 [ %287, %284 ], [ 768614336404564650, %281 ]
  %290 = mul i64 %289, 24
  %291 = tail call i8* @_Znwm(i64 %290) #13
  %292 = bitcast i8* %291 to %"class.std::__1::basic_string"*
  %293 = getelementptr inbounds %"class.std::__1::vector.53", %"class.std::__1::vector.53"* %0, i64 0, i32 0, i32 1
  %294 = bitcast %"class.std::__1::basic_string"** %293 to i8**
  store i8* %291, i8** %294, align 8
  %295 = bitcast %"class.std::__1::vector.53"* %0 to i8**
  store i8* %291, i8** %295, align 8
  %296 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %292, i64 %289
  store %"class.std::__1::basic_string"* %296, %"class.std::__1::basic_string"** %8, align 8
  %297 = bitcast %"class.std::__1::basic_string"** %293 to i64*
  %298 = ptrtoint i8* %291 to i64
  %299 = icmp eq %"class.std::__1::basic_string"* %1, %2
  br i1 %299, label %492, label %300

300:                                              ; preds = %288, %486
  %301 = phi %"class.std::__1::basic_string"* [ %488, %486 ], [ %292, %288 ]
  %302 = phi %"class.std::__1::basic_string"* [ %487, %486 ], [ %1, %288 ]
  %303 = bitcast %"class.std::__1::basic_string"* %302 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %304 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %303, i64 0, i32 1, i32 1
  %305 = load i8, i8* %304, align 1
  %306 = icmp slt i8 %305, 0
  br i1 %306, label %310, label %307

307:                                              ; preds = %300
  %308 = bitcast %"class.std::__1::basic_string"* %301 to i8*
  %309 = bitcast %"class.std::__1::basic_string"* %302 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %308, i8* align 8 %309, i64 24, i1 false) #12
  br label %486

310:                                              ; preds = %300
  %311 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %302, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %312 = load i16*, i16** %311, align 8
  %313 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %302, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %314 = load i64, i64* %313, align 8
  %315 = icmp ult i64 %314, 11
  br i1 %315, label %316, label %321

316:                                              ; preds = %310
  %317 = bitcast %"class.std::__1::basic_string"* %301 to i16*
  %318 = trunc i64 %314 to i8
  %319 = bitcast %"class.std::__1::basic_string"* %301 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %320 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %319, i64 0, i32 1, i32 1
  store i8 %318, i8* %320, align 1
  br label %338

321:                                              ; preds = %310
  %322 = icmp ugt i64 %314, 9223372036854775791
  br i1 %322, label %323, label %325

323:                                              ; preds = %321
  %324 = bitcast %"class.std::__1::basic_string"* %301 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %324) #14
  unreachable

325:                                              ; preds = %321
  %326 = add nuw nsw i64 %314, 8
  %327 = and i64 %326, -8
  %328 = icmp slt i64 %327, 0
  br i1 %328, label %329, label %330

329:                                              ; preds = %325
  tail call void @abort() #14
  unreachable

330:                                              ; preds = %325
  %331 = shl i64 %327, 1
  %332 = tail call i8* @_Znwm(i64 %331) #13
  %333 = bitcast i8* %332 to i16*
  %334 = bitcast %"class.std::__1::basic_string"* %301 to i8**
  store i8* %332, i8** %334, align 8
  %335 = or i64 %327, -9223372036854775808
  %336 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %301, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %335, i64* %336, align 8
  %337 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %301, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %314, i64* %337, align 8
  br label %338

338:                                              ; preds = %330, %316
  %339 = phi i16* [ %317, %316 ], [ %333, %330 ]
  %340 = add nuw nsw i64 %314, 1
  %341 = add i64 %314, 1
  %342 = icmp ult i64 %341, 16
  br i1 %342, label %433, label %343

343:                                              ; preds = %338
  %344 = getelementptr i16, i16* %339, i64 1
  %345 = getelementptr i16, i16* %344, i64 %314
  %346 = getelementptr i16, i16* %312, i64 1
  %347 = getelementptr i16, i16* %346, i64 %314
  %348 = icmp ult i16* %339, %347
  %349 = icmp ult i16* %312, %345
  %350 = and i1 %348, %349
  br i1 %350, label %433, label %351

351:                                              ; preds = %343
  %352 = and i64 %341, -16
  %353 = sub i64 %340, %352
  %354 = getelementptr i16, i16* %312, i64 %352
  %355 = getelementptr i16, i16* %339, i64 %352
  %356 = add i64 %352, -16
  %357 = lshr exact i64 %356, 4
  %358 = add nuw nsw i64 %357, 1
  %359 = and i64 %358, 3
  %360 = icmp ult i64 %356, 48
  br i1 %360, label %412, label %361

361:                                              ; preds = %351
  %362 = sub nsw i64 %358, %359
  br label %363

363:                                              ; preds = %363, %361
  %364 = phi i64 [ 0, %361 ], [ %409, %363 ]
  %365 = phi i64 [ %362, %361 ], [ %410, %363 ]
  %366 = getelementptr i16, i16* %312, i64 %364
  %367 = getelementptr i16, i16* %339, i64 %364
  %368 = bitcast i16* %366 to <8 x i16>*
  %369 = load <8 x i16>, <8 x i16>* %368, align 2, !alias.scope !63
  %370 = getelementptr i16, i16* %366, i64 8
  %371 = bitcast i16* %370 to <8 x i16>*
  %372 = load <8 x i16>, <8 x i16>* %371, align 2, !alias.scope !63
  %373 = bitcast i16* %367 to <8 x i16>*
  store <8 x i16> %369, <8 x i16>* %373, align 2, !alias.scope !66, !noalias !63
  %374 = getelementptr i16, i16* %367, i64 8
  %375 = bitcast i16* %374 to <8 x i16>*
  store <8 x i16> %372, <8 x i16>* %375, align 2, !alias.scope !66, !noalias !63
  %376 = or i64 %364, 16
  %377 = getelementptr i16, i16* %312, i64 %376
  %378 = getelementptr i16, i16* %339, i64 %376
  %379 = bitcast i16* %377 to <8 x i16>*
  %380 = load <8 x i16>, <8 x i16>* %379, align 2, !alias.scope !63
  %381 = getelementptr i16, i16* %377, i64 8
  %382 = bitcast i16* %381 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !63
  %384 = bitcast i16* %378 to <8 x i16>*
  store <8 x i16> %380, <8 x i16>* %384, align 2, !alias.scope !66, !noalias !63
  %385 = getelementptr i16, i16* %378, i64 8
  %386 = bitcast i16* %385 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %386, align 2, !alias.scope !66, !noalias !63
  %387 = or i64 %364, 32
  %388 = getelementptr i16, i16* %312, i64 %387
  %389 = getelementptr i16, i16* %339, i64 %387
  %390 = bitcast i16* %388 to <8 x i16>*
  %391 = load <8 x i16>, <8 x i16>* %390, align 2, !alias.scope !63
  %392 = getelementptr i16, i16* %388, i64 8
  %393 = bitcast i16* %392 to <8 x i16>*
  %394 = load <8 x i16>, <8 x i16>* %393, align 2, !alias.scope !63
  %395 = bitcast i16* %389 to <8 x i16>*
  store <8 x i16> %391, <8 x i16>* %395, align 2, !alias.scope !66, !noalias !63
  %396 = getelementptr i16, i16* %389, i64 8
  %397 = bitcast i16* %396 to <8 x i16>*
  store <8 x i16> %394, <8 x i16>* %397, align 2, !alias.scope !66, !noalias !63
  %398 = or i64 %364, 48
  %399 = getelementptr i16, i16* %312, i64 %398
  %400 = getelementptr i16, i16* %339, i64 %398
  %401 = bitcast i16* %399 to <8 x i16>*
  %402 = load <8 x i16>, <8 x i16>* %401, align 2, !alias.scope !63
  %403 = getelementptr i16, i16* %399, i64 8
  %404 = bitcast i16* %403 to <8 x i16>*
  %405 = load <8 x i16>, <8 x i16>* %404, align 2, !alias.scope !63
  %406 = bitcast i16* %400 to <8 x i16>*
  store <8 x i16> %402, <8 x i16>* %406, align 2, !alias.scope !66, !noalias !63
  %407 = getelementptr i16, i16* %400, i64 8
  %408 = bitcast i16* %407 to <8 x i16>*
  store <8 x i16> %405, <8 x i16>* %408, align 2, !alias.scope !66, !noalias !63
  %409 = add i64 %364, 64
  %410 = add i64 %365, -4
  %411 = icmp eq i64 %410, 0
  br i1 %411, label %412, label %363, !llvm.loop !68

412:                                              ; preds = %363, %351
  %413 = phi i64 [ 0, %351 ], [ %409, %363 ]
  %414 = icmp eq i64 %359, 0
  br i1 %414, label %431, label %415

415:                                              ; preds = %412, %415
  %416 = phi i64 [ %428, %415 ], [ %413, %412 ]
  %417 = phi i64 [ %429, %415 ], [ %359, %412 ]
  %418 = getelementptr i16, i16* %312, i64 %416
  %419 = getelementptr i16, i16* %339, i64 %416
  %420 = bitcast i16* %418 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !63
  %422 = getelementptr i16, i16* %418, i64 8
  %423 = bitcast i16* %422 to <8 x i16>*
  %424 = load <8 x i16>, <8 x i16>* %423, align 2, !alias.scope !63
  %425 = bitcast i16* %419 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %425, align 2, !alias.scope !66, !noalias !63
  %426 = getelementptr i16, i16* %419, i64 8
  %427 = bitcast i16* %426 to <8 x i16>*
  store <8 x i16> %424, <8 x i16>* %427, align 2, !alias.scope !66, !noalias !63
  %428 = add i64 %416, 16
  %429 = add i64 %417, -1
  %430 = icmp eq i64 %429, 0
  br i1 %430, label %431, label %415, !llvm.loop !69

431:                                              ; preds = %415, %412
  %432 = icmp eq i64 %341, %352
  br i1 %432, label %486, label %433

433:                                              ; preds = %431, %343, %338
  %434 = phi i64 [ %340, %343 ], [ %340, %338 ], [ %353, %431 ]
  %435 = phi i16* [ %312, %343 ], [ %312, %338 ], [ %354, %431 ]
  %436 = phi i16* [ %339, %343 ], [ %339, %338 ], [ %355, %431 ]
  %437 = add i64 %434, -1
  %438 = and i64 %434, 7
  %439 = icmp eq i64 %438, 0
  br i1 %439, label %451, label %440

440:                                              ; preds = %433, %440
  %441 = phi i64 [ %446, %440 ], [ %434, %433 ]
  %442 = phi i16* [ %448, %440 ], [ %435, %433 ]
  %443 = phi i16* [ %447, %440 ], [ %436, %433 ]
  %444 = phi i64 [ %449, %440 ], [ %438, %433 ]
  %445 = load i16, i16* %442, align 2
  store i16 %445, i16* %443, align 2
  %446 = add i64 %441, -1
  %447 = getelementptr inbounds i16, i16* %443, i64 1
  %448 = getelementptr inbounds i16, i16* %442, i64 1
  %449 = add i64 %444, -1
  %450 = icmp eq i64 %449, 0
  br i1 %450, label %451, label %440, !llvm.loop !70

451:                                              ; preds = %440, %433
  %452 = phi i64 [ %434, %433 ], [ %446, %440 ]
  %453 = phi i16* [ %435, %433 ], [ %448, %440 ]
  %454 = phi i16* [ %436, %433 ], [ %447, %440 ]
  %455 = icmp ult i64 %437, 7
  br i1 %455, label %486, label %456

456:                                              ; preds = %451, %456
  %457 = phi i64 [ %482, %456 ], [ %452, %451 ]
  %458 = phi i16* [ %484, %456 ], [ %453, %451 ]
  %459 = phi i16* [ %483, %456 ], [ %454, %451 ]
  %460 = load i16, i16* %458, align 2
  store i16 %460, i16* %459, align 2
  %461 = getelementptr inbounds i16, i16* %459, i64 1
  %462 = getelementptr inbounds i16, i16* %458, i64 1
  %463 = load i16, i16* %462, align 2
  store i16 %463, i16* %461, align 2
  %464 = getelementptr inbounds i16, i16* %459, i64 2
  %465 = getelementptr inbounds i16, i16* %458, i64 2
  %466 = load i16, i16* %465, align 2
  store i16 %466, i16* %464, align 2
  %467 = getelementptr inbounds i16, i16* %459, i64 3
  %468 = getelementptr inbounds i16, i16* %458, i64 3
  %469 = load i16, i16* %468, align 2
  store i16 %469, i16* %467, align 2
  %470 = getelementptr inbounds i16, i16* %459, i64 4
  %471 = getelementptr inbounds i16, i16* %458, i64 4
  %472 = load i16, i16* %471, align 2
  store i16 %472, i16* %470, align 2
  %473 = getelementptr inbounds i16, i16* %459, i64 5
  %474 = getelementptr inbounds i16, i16* %458, i64 5
  %475 = load i16, i16* %474, align 2
  store i16 %475, i16* %473, align 2
  %476 = getelementptr inbounds i16, i16* %459, i64 6
  %477 = getelementptr inbounds i16, i16* %458, i64 6
  %478 = load i16, i16* %477, align 2
  store i16 %478, i16* %476, align 2
  %479 = getelementptr inbounds i16, i16* %459, i64 7
  %480 = getelementptr inbounds i16, i16* %458, i64 7
  %481 = load i16, i16* %480, align 2
  store i16 %481, i16* %479, align 2
  %482 = add i64 %457, -8
  %483 = getelementptr inbounds i16, i16* %459, i64 8
  %484 = getelementptr inbounds i16, i16* %458, i64 8
  %485 = icmp eq i64 %482, 0
  br i1 %485, label %486, label %456, !llvm.loop !71

486:                                              ; preds = %451, %456, %431, %307
  %487 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %302, i64 1
  %488 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %301, i64 1
  %489 = icmp eq %"class.std::__1::basic_string"* %487, %2
  br i1 %489, label %490, label %300

490:                                              ; preds = %486
  %491 = ptrtoint %"class.std::__1::basic_string"* %488 to i64
  br label %492

492:                                              ; preds = %288, %490
  %493 = phi i64 [ %298, %288 ], [ %491, %490 ]
  store i64 %493, i64* %297, align 8
  br label %494

494:                                              ; preds = %233, %250, %492
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string"*
  %35 = icmp ugt %"class.std::__1::basic_string"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !72
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !72
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !75, !noalias !72
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !75, !noalias !72
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !72
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !72
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !75, !noalias !72
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !75, !noalias !72
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !72
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !72
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !75, !noalias !72
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !75, !noalias !72
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !72
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !72
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !75, !noalias !72
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !75, !noalias !72
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !77

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !72
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !72
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !75, !noalias !72
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !75, !noalias !72
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !78

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !79

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !80

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #14
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #14
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #13
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !81
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !81
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !84, !noalias !81
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !84, !noalias !81
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !81
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !81
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !84, !noalias !81
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !84, !noalias !81
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !81
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !81
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !84, !noalias !81
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !84, !noalias !81
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !81
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !81
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !84, !noalias !81
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !84, !noalias !81
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !86

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !81
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !81
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !84, !noalias !81
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !84, !noalias !81
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !87

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !88

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !89

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !90
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !90
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !93, !noalias !90
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !93, !noalias !90
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !90
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !90
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !93, !noalias !90
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !93, !noalias !90
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !90
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !90
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !93, !noalias !90
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !93, !noalias !90
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !90
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !90
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !93, !noalias !90
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !93, !noalias !90
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !95

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !90
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !90
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !93, !noalias !90
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !93, !noalias !90
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !96

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !97

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !98

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #12
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string"* %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #14
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #14
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #13
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !99
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !99
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !102, !noalias !99
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !102, !noalias !99
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !99
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !99
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !102, !noalias !99
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !102, !noalias !99
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !99
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !99
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !102, !noalias !99
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !102, !noalias !99
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !99
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !99
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !102, !noalias !99
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !102, !noalias !99
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !104

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !99
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !99
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !102, !noalias !99
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !102, !noalias !99
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !105

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !106

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !107

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !108

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !109

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !110

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !112
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !112
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !115, !noalias !112
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !115, !noalias !112
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !112
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !112
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !115, !noalias !112
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !115, !noalias !112
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !112
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !112
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !115, !noalias !112
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !115, !noalias !112
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !112
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !112
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !115, !noalias !112
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !115, !noalias !112
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !117

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !112
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !112
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !115, !noalias !112
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !115, !noalias !112
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !118

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !119

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !120

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #13
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #10

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom24ClipboardHostAsyncWaiter18ReadAvailableTypesEN2ui15ClipboardBufferEPNSt3__16vectorINS7_12basic_stringIDsNS7_11char_traitsIDsEENS7_9allocatorIDsEEEENSC_ISE_EEEEE3$_2JPNS_7RunLoopESH_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #13
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom24ClipboardHostAsyncWaiter8ReadTextEN2ui15ClipboardBufferEPNSt3__112basic_stringIDsNS8_11char_traitsIDsEENS8_9allocatorIDsEEEEE3$_3JPNS_7RunLoopESF_EEEFvRKSE_EE7RunOnceEPNS0_13BindStateBaseESL_"(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.std::__1::basic_string"* dereferenceable(24)) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to %"class.std::__1::basic_string"**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  %9 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %8, %"class.std::__1::basic_string"* dereferenceable(24) %1) #12
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom24ClipboardHostAsyncWaiter8ReadTextEN2ui15ClipboardBufferEPNSt3__112basic_stringIDsNS7_11char_traitsIDsEENS7_9allocatorIDsEEEEE3$_3JPNS_7RunLoopESE_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #13
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom24ClipboardHostAsyncWaiter8ReadHtmlEN2ui15ClipboardBufferEPNSt3__112basic_stringIDsNS8_11char_traitsIDsEENS8_9allocatorIDsEEEEP4GURLPjSI_E3$_4JPNS_7RunLoopESF_SH_SI_SI_EEEFvRKSE_RKSG_jjEE7RunOnceEPNS0_13BindStateBaseESO_SQ_jj"(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.std::__1::basic_string"* dereferenceable(24), %class.GURL* dereferenceable(120), i32, i32) #0 align 2 {
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to %"class.base::RunLoop"**
  %8 = getelementptr inbounds void ()*, void ()** %6, i64 1
  %9 = bitcast void ()** %8 to %"class.std::__1::basic_string"**
  %10 = getelementptr inbounds void ()*, void ()** %6, i64 2
  %11 = bitcast void ()** %10 to %class.GURL**
  %12 = getelementptr inbounds void ()*, void ()** %6, i64 3
  %13 = bitcast void ()** %12 to i32**
  %14 = getelementptr inbounds void ()*, void ()** %6, i64 4
  %15 = bitcast void ()** %14 to i32**
  %16 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %7, align 8
  %17 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %9, align 8
  %18 = load %class.GURL*, %class.GURL** %11, align 8
  %19 = load i32*, i32** %13, align 8
  %20 = load i32*, i32** %15, align 8
  %21 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %17, %"class.std::__1::basic_string"* dereferenceable(24) %1) #12
  %22 = tail call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %18, %class.GURL* dereferenceable(120) %2) #12
  store i32 %3, i32* %19, align 4
  store i32 %4, i32* %20, align 4
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %16) #12
  ret void
}

declare dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom24ClipboardHostAsyncWaiter8ReadHtmlEN2ui15ClipboardBufferEPNSt3__112basic_stringIDsNS7_11char_traitsIDsEENS7_9allocatorIDsEEEEP4GURLPjSH_E3$_4JPNS_7RunLoopESE_SG_SH_SH_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #13
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom24ClipboardHostAsyncWaiter7ReadSvgEN2ui15ClipboardBufferEPNSt3__112basic_stringIDsNS8_11char_traitsIDsEENS8_9allocatorIDsEEEEE3$_5JPNS_7RunLoopESF_EEEFvRKSE_EE7RunOnceEPNS0_13BindStateBaseESL_"(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.std::__1::basic_string"* dereferenceable(24)) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to %"class.std::__1::basic_string"**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  %9 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %8, %"class.std::__1::basic_string"* dereferenceable(24) %1) #12
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom24ClipboardHostAsyncWaiter7ReadSvgEN2ui15ClipboardBufferEPNSt3__112basic_stringIDsNS7_11char_traitsIDsEENS7_9allocatorIDsEEEEE3$_5JPNS_7RunLoopESE_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #13
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom24ClipboardHostAsyncWaiter7ReadRtfEN2ui15ClipboardBufferEPNSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEE3$_6JPNS_7RunLoopESF_EEEFvRKSE_EE7RunOnceEPNS0_13BindStateBaseESL_"(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.std::__1::basic_string.9"* dereferenceable(24)) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to %"class.std::__1::basic_string.9"**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load %"class.std::__1::basic_string.9"*, %"class.std::__1::basic_string.9"** %6, align 8
  %9 = icmp eq %"class.std::__1::basic_string.9"* %8, %1
  br i1 %9, label %39, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.std::__1::basic_string.9"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = bitcast %"class.std::__1::basic_string.9"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %14, label %29, label %19

19:                                               ; preds = %10
  br i1 %18, label %23, label %20

20:                                               ; preds = %19
  %21 = bitcast %"class.std::__1::basic_string.9"* %8 to i8*
  %22 = bitcast %"class.std::__1::basic_string.9"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 24, i1 false) #12
  br label %39

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = tail call dereferenceable(24) %"class.std::__1::basic_string.9"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string.9"* %8, i8* %25, i64 %27) #12
  br label %39

29:                                               ; preds = %10
  %30 = getelementptr inbounds %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.std::__1::basic_string.9"* %1 to i8*
  %35 = zext i8 %17 to i64
  %36 = select i1 %18, i8* %31, i8* %34
  %37 = select i1 %18, i64 %33, i64 %35
  %38 = tail call dereferenceable(24) %"class.std::__1::basic_string.9"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string.9"* %8, i8* %36, i64 %37) #12
  br label %39

39:                                               ; preds = %2, %20, %23, %29
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #12
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string.9"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string.9"*, i8*, i64) local_unnamed_addr #5

declare dereferenceable(24) %"class.std::__1::basic_string.9"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string.9"*, i8*, i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom24ClipboardHostAsyncWaiter7ReadRtfEN2ui15ClipboardBufferEPNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEEE3$_6JPNS_7RunLoopESE_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #13
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom24ClipboardHostAsyncWaiter9ReadImageEN2ui15ClipboardBufferEP8SkBitmapE3$_7JPNS_7RunLoopES9_EEEFvRKS8_EE7RunOnceEPNS0_13BindStateBaseESF_"(%"class.base::internal::BindStateBase"* nocapture readonly, %class.SkBitmap* dereferenceable(56)) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to %class.SkBitmap**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load %class.SkBitmap*, %class.SkBitmap** %6, align 8
  %9 = tail call dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSERKS_(%class.SkBitmap* %8, %class.SkBitmap* dereferenceable(56) %1) #12
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #12
  ret void
}

declare dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSERKS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom24ClipboardHostAsyncWaiter9ReadImageEN2ui15ClipboardBufferEP8SkBitmapE3$_7JPNS_7RunLoopES8_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #13
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom24ClipboardHostAsyncWaiter9ReadFilesEN2ui15ClipboardBufferEPN4mojo9StructPtrINS4_14ClipboardFilesEEEE3$_8JPNS_7RunLoopESC_EEEFvSB_EE7RunOnceEPNS0_13BindStateBaseEOSB_"(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.mojo::StructPtr"* nocapture dereferenceable(8)) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to %"class.mojo::StructPtr"**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %6, align 8
  %9 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  store i64 0, i64* %9, align 8
  %11 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::mojom::ClipboardFiles"*, %"class.blink::mojom::ClipboardFiles"** %11, align 8
  store %"class.blink::mojom::ClipboardFiles"* null, %"class.blink::mojom::ClipboardFiles"** %11, align 8
  %13 = icmp eq %"class.blink::mojom::ClipboardFiles"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = bitcast %"class.mojo::StructPtr"* %8 to i64*
  store i64 %10, i64* %15, align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #12
  br label %23

16:                                               ; preds = %2
  tail call void @_ZN5blink5mojom14ClipboardFilesD1Ev(%"class.blink::mojom::ClipboardFiles"* nonnull %12) #12
  %17 = bitcast %"class.blink::mojom::ClipboardFiles"* %12 to i8*
  tail call void @_ZdlPv(i8* %17) #13
  %18 = load %"class.blink::mojom::ClipboardFiles"*, %"class.blink::mojom::ClipboardFiles"** %11, align 8
  %19 = bitcast %"class.mojo::StructPtr"* %8 to i64*
  store i64 %10, i64* %19, align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #12
  %20 = icmp eq %"class.blink::mojom::ClipboardFiles"* %18, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %16
  %22 = bitcast %"class.blink::mojom::ClipboardFiles"* %18 to i8*
  tail call void @_ZN5blink5mojom14ClipboardFilesD1Ev(%"class.blink::mojom::ClipboardFiles"* nonnull %18) #12
  tail call void @_ZdlPv(i8* %22) #13
  br label %23

23:                                               ; preds = %14, %16, %21
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink5mojom14ClipboardFilesD1Ev(%"class.blink::mojom::ClipboardFiles"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom24ClipboardHostAsyncWaiter9ReadFilesEN2ui15ClipboardBufferEPN4mojo9StructPtrINS3_14ClipboardFilesEEEE3$_8JPNS_7RunLoopESB_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #13
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom24ClipboardHostAsyncWaiter14ReadCustomDataEN2ui15ClipboardBufferERKNSt3__112basic_stringIDsNS8_11char_traitsIDsEENS8_9allocatorIDsEEEEPSE_E3$_9JPNS_7RunLoopESH_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_"(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.std::__1::basic_string"* dereferenceable(24)) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to %"class.std::__1::basic_string"**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  %9 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %8, %"class.std::__1::basic_string"* dereferenceable(24) %1) #12
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom24ClipboardHostAsyncWaiter14ReadCustomDataEN2ui15ClipboardBufferERKNSt3__112basic_stringIDsNS7_11char_traitsIDsEENS7_9allocatorIDsEEEEPSD_E3$_9JPNS_7RunLoopESG_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #13
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom24ClipboardHostAsyncWaiter17GetSequenceNumberEN2ui15ClipboardBufferEPmE3$_0JPNS_7RunLoopERS8_EEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom24ClipboardHostAsyncWaiter17GetSequenceNumberEN2ui15ClipboardBufferEPmE3$_0JPNS_7RunLoopERS8_EEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIZN5blink5mojom24ClipboardHostAsyncWaiter17GetSequenceNumberEN2ui15ClipboardBufferEPmE3$_0JPNS_7RunLoopERS6_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIZN5blink5mojom24ClipboardHostAsyncWaiter17GetSequenceNumberEN2ui15ClipboardBufferEPmE3$_0JPNS_7RunLoopERS6_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
!7 = !{!8, !10}
!8 = distinct !{!8, !9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom24ClipboardHostAsyncWaiter17IsFormatAvailableENS4_15ClipboardFormatEN2ui15ClipboardBufferEPbE3$_1JPNS_7RunLoopERS9_EEEDcOT0_DpOT1_: argument 0"}
!9 = distinct !{!9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom24ClipboardHostAsyncWaiter17IsFormatAvailableENS4_15ClipboardFormatEN2ui15ClipboardBufferEPbE3$_1JPNS_7RunLoopERS9_EEEDcOT0_DpOT1_"}
!10 = distinct !{!10, !11, !"_ZN4base8BindOnceIZN5blink5mojom24ClipboardHostAsyncWaiter17IsFormatAvailableENS2_15ClipboardFormatEN2ui15ClipboardBufferEPbE3$_1JPNS_7RunLoopERS7_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_: argument 0"}
!11 = distinct !{!11, !"_ZN4base8BindOnceIZN5blink5mojom24ClipboardHostAsyncWaiter17IsFormatAvailableENS2_15ClipboardFormatEN2ui15ClipboardBufferEPbE3$_1JPNS_7RunLoopERS7_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_"}
!12 = !{!13, !15}
!13 = distinct !{!13, !14, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom24ClipboardHostAsyncWaiter18ReadAvailableTypesEN2ui15ClipboardBufferEPNSt3__16vectorINS8_12basic_stringIDsNS8_11char_traitsIDsEENS8_9allocatorIDsEEEENSD_ISF_EEEEE3$_2JPNS_7RunLoopERSI_EEEDcOT0_DpOT1_: argument 0"}
!14 = distinct !{!14, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom24ClipboardHostAsyncWaiter18ReadAvailableTypesEN2ui15ClipboardBufferEPNSt3__16vectorINS8_12basic_stringIDsNS8_11char_traitsIDsEENS8_9allocatorIDsEEEENSD_ISF_EEEEE3$_2JPNS_7RunLoopERSI_EEEDcOT0_DpOT1_"}
!15 = distinct !{!15, !16, !"_ZN4base8BindOnceIZN5blink5mojom24ClipboardHostAsyncWaiter18ReadAvailableTypesEN2ui15ClipboardBufferEPNSt3__16vectorINS6_12basic_stringIDsNS6_11char_traitsIDsEENS6_9allocatorIDsEEEENSB_ISD_EEEEE3$_2JPNS_7RunLoopERSG_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSO_DpOSP_: argument 0"}
!16 = distinct !{!16, !"_ZN4base8BindOnceIZN5blink5mojom24ClipboardHostAsyncWaiter18ReadAvailableTypesEN2ui15ClipboardBufferEPNSt3__16vectorINS6_12basic_stringIDsNS6_11char_traitsIDsEENS6_9allocatorIDsEEEENSB_ISD_EEEEE3$_2JPNS_7RunLoopERSG_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSO_DpOSP_"}
!17 = !{!18, !20}
!18 = distinct !{!18, !19, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom24ClipboardHostAsyncWaiter8ReadTextEN2ui15ClipboardBufferEPNSt3__112basic_stringIDsNS8_11char_traitsIDsEENS8_9allocatorIDsEEEEE3$_3JPNS_7RunLoopERSF_EEEDcOT0_DpOT1_: argument 0"}
!19 = distinct !{!19, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom24ClipboardHostAsyncWaiter8ReadTextEN2ui15ClipboardBufferEPNSt3__112basic_stringIDsNS8_11char_traitsIDsEENS8_9allocatorIDsEEEEE3$_3JPNS_7RunLoopERSF_EEEDcOT0_DpOT1_"}
!20 = distinct !{!20, !21, !"_ZN4base8BindOnceIZN5blink5mojom24ClipboardHostAsyncWaiter8ReadTextEN2ui15ClipboardBufferEPNSt3__112basic_stringIDsNS6_11char_traitsIDsEENS6_9allocatorIDsEEEEE3$_3JPNS_7RunLoopERSD_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_: argument 0"}
!21 = distinct !{!21, !"_ZN4base8BindOnceIZN5blink5mojom24ClipboardHostAsyncWaiter8ReadTextEN2ui15ClipboardBufferEPNSt3__112basic_stringIDsNS6_11char_traitsIDsEENS6_9allocatorIDsEEEEE3$_3JPNS_7RunLoopERSD_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_"}
!22 = !{!23, !25}
!23 = distinct !{!23, !24, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom24ClipboardHostAsyncWaiter8ReadHtmlEN2ui15ClipboardBufferEPNSt3__112basic_stringIDsNS8_11char_traitsIDsEENS8_9allocatorIDsEEEEP4GURLPjSI_E3$_4JPNS_7RunLoopERSF_RSH_RSI_SO_EEEDcOT0_DpOT1_: argument 0"}
!24 = distinct !{!24, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom24ClipboardHostAsyncWaiter8ReadHtmlEN2ui15ClipboardBufferEPNSt3__112basic_stringIDsNS8_11char_traitsIDsEENS8_9allocatorIDsEEEEP4GURLPjSI_E3$_4JPNS_7RunLoopERSF_RSH_RSI_SO_EEEDcOT0_DpOT1_"}
!25 = distinct !{!25, !26, !"_ZN4base8BindOnceIZN5blink5mojom24ClipboardHostAsyncWaiter8ReadHtmlEN2ui15ClipboardBufferEPNSt3__112basic_stringIDsNS6_11char_traitsIDsEENS6_9allocatorIDsEEEEP4GURLPjSG_E3$_4JPNS_7RunLoopERSD_RSF_RSG_SM_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSQ_DpOSR_: argument 0"}
!26 = distinct !{!26, !"_ZN4base8BindOnceIZN5blink5mojom24ClipboardHostAsyncWaiter8ReadHtmlEN2ui15ClipboardBufferEPNSt3__112basic_stringIDsNS6_11char_traitsIDsEENS6_9allocatorIDsEEEEP4GURLPjSG_E3$_4JPNS_7RunLoopERSD_RSF_RSG_SM_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSQ_DpOSR_"}
!27 = !{!28, !30}
!28 = distinct !{!28, !29, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom24ClipboardHostAsyncWaiter7ReadSvgEN2ui15ClipboardBufferEPNSt3__112basic_stringIDsNS8_11char_traitsIDsEENS8_9allocatorIDsEEEEE3$_5JPNS_7RunLoopERSF_EEEDcOT0_DpOT1_: argument 0"}
!29 = distinct !{!29, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom24ClipboardHostAsyncWaiter7ReadSvgEN2ui15ClipboardBufferEPNSt3__112basic_stringIDsNS8_11char_traitsIDsEENS8_9allocatorIDsEEEEE3$_5JPNS_7RunLoopERSF_EEEDcOT0_DpOT1_"}
!30 = distinct !{!30, !31, !"_ZN4base8BindOnceIZN5blink5mojom24ClipboardHostAsyncWaiter7ReadSvgEN2ui15ClipboardBufferEPNSt3__112basic_stringIDsNS6_11char_traitsIDsEENS6_9allocatorIDsEEEEE3$_5JPNS_7RunLoopERSD_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_: argument 0"}
!31 = distinct !{!31, !"_ZN4base8BindOnceIZN5blink5mojom24ClipboardHostAsyncWaiter7ReadSvgEN2ui15ClipboardBufferEPNSt3__112basic_stringIDsNS6_11char_traitsIDsEENS6_9allocatorIDsEEEEE3$_5JPNS_7RunLoopERSD_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_"}
!32 = !{!33, !35}
!33 = distinct !{!33, !34, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom24ClipboardHostAsyncWaiter7ReadRtfEN2ui15ClipboardBufferEPNSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEE3$_6JPNS_7RunLoopERSF_EEEDcOT0_DpOT1_: argument 0"}
!34 = distinct !{!34, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom24ClipboardHostAsyncWaiter7ReadRtfEN2ui15ClipboardBufferEPNSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEE3$_6JPNS_7RunLoopERSF_EEEDcOT0_DpOT1_"}
!35 = distinct !{!35, !36, !"_ZN4base8BindOnceIZN5blink5mojom24ClipboardHostAsyncWaiter7ReadRtfEN2ui15ClipboardBufferEPNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEE3$_6JPNS_7RunLoopERSD_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_: argument 0"}
!36 = distinct !{!36, !"_ZN4base8BindOnceIZN5blink5mojom24ClipboardHostAsyncWaiter7ReadRtfEN2ui15ClipboardBufferEPNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEE3$_6JPNS_7RunLoopERSD_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_"}
!37 = !{!38, !40}
!38 = distinct !{!38, !39, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom24ClipboardHostAsyncWaiter9ReadImageEN2ui15ClipboardBufferEP8SkBitmapE3$_7JPNS_7RunLoopERS9_EEEDcOT0_DpOT1_: argument 0"}
!39 = distinct !{!39, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom24ClipboardHostAsyncWaiter9ReadImageEN2ui15ClipboardBufferEP8SkBitmapE3$_7JPNS_7RunLoopERS9_EEEDcOT0_DpOT1_"}
!40 = distinct !{!40, !41, !"_ZN4base8BindOnceIZN5blink5mojom24ClipboardHostAsyncWaiter9ReadImageEN2ui15ClipboardBufferEP8SkBitmapE3$_7JPNS_7RunLoopERS7_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_: argument 0"}
!41 = distinct !{!41, !"_ZN4base8BindOnceIZN5blink5mojom24ClipboardHostAsyncWaiter9ReadImageEN2ui15ClipboardBufferEP8SkBitmapE3$_7JPNS_7RunLoopERS7_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_"}
!42 = !{!43, !45}
!43 = distinct !{!43, !44, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom24ClipboardHostAsyncWaiter9ReadFilesEN2ui15ClipboardBufferEPN4mojo9StructPtrINS4_14ClipboardFilesEEEE3$_8JPNS_7RunLoopERSC_EEEDcOT0_DpOT1_: argument 0"}
!44 = distinct !{!44, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom24ClipboardHostAsyncWaiter9ReadFilesEN2ui15ClipboardBufferEPN4mojo9StructPtrINS4_14ClipboardFilesEEEE3$_8JPNS_7RunLoopERSC_EEEDcOT0_DpOT1_"}
!45 = distinct !{!45, !46, !"_ZN4base8BindOnceIZN5blink5mojom24ClipboardHostAsyncWaiter9ReadFilesEN2ui15ClipboardBufferEPN4mojo9StructPtrINS2_14ClipboardFilesEEEE3$_8JPNS_7RunLoopERSA_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_: argument 0"}
!46 = distinct !{!46, !"_ZN4base8BindOnceIZN5blink5mojom24ClipboardHostAsyncWaiter9ReadFilesEN2ui15ClipboardBufferEPN4mojo9StructPtrINS2_14ClipboardFilesEEEE3$_8JPNS_7RunLoopERSA_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_"}
!47 = !{!48, !50}
!48 = distinct !{!48, !49, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom24ClipboardHostAsyncWaiter14ReadCustomDataEN2ui15ClipboardBufferERKNSt3__112basic_stringIDsNS8_11char_traitsIDsEENS8_9allocatorIDsEEEEPSE_E3$_9JPNS_7RunLoopERSH_EEEDcOT0_DpOT1_: argument 0"}
!49 = distinct !{!49, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom24ClipboardHostAsyncWaiter14ReadCustomDataEN2ui15ClipboardBufferERKNSt3__112basic_stringIDsNS8_11char_traitsIDsEENS8_9allocatorIDsEEEEPSE_E3$_9JPNS_7RunLoopERSH_EEEDcOT0_DpOT1_"}
!50 = distinct !{!50, !51, !"_ZN4base8BindOnceIZN5blink5mojom24ClipboardHostAsyncWaiter14ReadCustomDataEN2ui15ClipboardBufferERKNSt3__112basic_stringIDsNS6_11char_traitsIDsEENS6_9allocatorIDsEEEEPSC_E3$_9JPNS_7RunLoopERSF_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSN_DpOSO_: argument 0"}
!51 = distinct !{!51, !"_ZN4base8BindOnceIZN5blink5mojom24ClipboardHostAsyncWaiter14ReadCustomDataEN2ui15ClipboardBufferERKNSt3__112basic_stringIDsNS6_11char_traitsIDsEENS6_9allocatorIDsEEEEPSC_E3$_9JPNS_7RunLoopERSF_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSN_DpOSO_"}
!52 = !{!53}
!53 = distinct !{!53, !54}
!54 = distinct !{!54, !"LVerDomain"}
!55 = !{!56}
!56 = distinct !{!56, !54}
!57 = distinct !{!57, !58}
!58 = !{!"llvm.loop.isvectorized", i32 1}
!59 = distinct !{!59, !60}
!60 = !{!"llvm.loop.unroll.disable"}
!61 = distinct !{!61, !60}
!62 = distinct !{!62, !58}
!63 = !{!64}
!64 = distinct !{!64, !65}
!65 = distinct !{!65, !"LVerDomain"}
!66 = !{!67}
!67 = distinct !{!67, !65}
!68 = distinct !{!68, !58}
!69 = distinct !{!69, !60}
!70 = distinct !{!70, !60}
!71 = distinct !{!71, !58}
!72 = !{!73}
!73 = distinct !{!73, !74}
!74 = distinct !{!74, !"LVerDomain"}
!75 = !{!76}
!76 = distinct !{!76, !74}
!77 = distinct !{!77, !58}
!78 = distinct !{!78, !60}
!79 = distinct !{!79, !60}
!80 = distinct !{!80, !58}
!81 = !{!82}
!82 = distinct !{!82, !83}
!83 = distinct !{!83, !"LVerDomain"}
!84 = !{!85}
!85 = distinct !{!85, !83}
!86 = distinct !{!86, !58}
!87 = distinct !{!87, !60}
!88 = distinct !{!88, !60}
!89 = distinct !{!89, !58}
!90 = !{!91}
!91 = distinct !{!91, !92}
!92 = distinct !{!92, !"LVerDomain"}
!93 = !{!94}
!94 = distinct !{!94, !92}
!95 = distinct !{!95, !58}
!96 = distinct !{!96, !60}
!97 = distinct !{!97, !60}
!98 = distinct !{!98, !58}
!99 = !{!100}
!100 = distinct !{!100, !101}
!101 = distinct !{!101, !"LVerDomain"}
!102 = !{!103}
!103 = distinct !{!103, !101}
!104 = distinct !{!104, !58}
!105 = distinct !{!105, !60}
!106 = distinct !{!106, !60}
!107 = distinct !{!107, !58}
!108 = distinct !{!108, !58}
!109 = distinct !{!109, !60}
!110 = distinct !{!110, !111, !58}
!111 = !{!"llvm.loop.unroll.runtime.disable"}
!112 = !{!113}
!113 = distinct !{!113, !114}
!114 = distinct !{!114, !"LVerDomain"}
!115 = !{!116}
!116 = distinct !{!116, !114}
!117 = distinct !{!117, !58}
!118 = distinct !{!118, !60}
!119 = distinct !{!119, !60}
!120 = distinct !{!120, !58}
