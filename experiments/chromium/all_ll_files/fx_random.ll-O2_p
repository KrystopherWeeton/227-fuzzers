; ModuleID = '../../third_party/pdfium/core/fxcrt/fx_random.cpp'
source_filename = "../../third_party/pdfium/core/fxcrt/fx_random.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.timeval = type { i64, i64 }

@_ZZ21FX_Random_MT_GeneratePvE3mag = internal unnamed_addr constant [2 x i32] [i32 0, i32 -1727483681], align 4
@_ZN12_GLOBAL__N_117g_bHaveGlobalSeedE = internal unnamed_addr global i1 false, align 1
@_ZN12_GLOBAL__N_113g_nGlobalSeedE = internal unnamed_addr global i32 0, align 4

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_Z18FX_Random_MT_Startj(i32) local_unnamed_addr #0 {
  %2 = tail call i8* @_ZN6pdfium8internal11CallocOrDieEmm(i64 1, i64 3396) #6
  %3 = getelementptr inbounds i8, i8* %2, i64 4
  %4 = bitcast i8* %3 to i32*
  store i32 %0, i32* %4, align 4
  br label %7

5:                                                ; preds = %7
  %6 = bitcast i8* %2 to i32*
  store i32 848, i32* %6, align 4
  ret i8* %2

7:                                                ; preds = %18, %1
  %8 = phi i32 [ %0, %1 ], [ %23, %18 ]
  %9 = phi i64 [ 1, %1 ], [ %25, %18 ]
  %10 = lshr i32 %8, 30
  %11 = xor i32 %10, %8
  %12 = mul i32 %11, 1812433253
  %13 = trunc i64 %9 to i32
  %14 = add i32 %12, %13
  %15 = getelementptr inbounds i32, i32* %4, i64 %9
  store i32 %14, i32* %15, align 4
  %16 = add nuw nsw i64 %9, 1
  %17 = icmp eq i64 %16, 848
  br i1 %17, label %5, label %18

18:                                               ; preds = %7
  %19 = lshr i32 %14, 30
  %20 = xor i32 %19, %14
  %21 = mul i32 %20, 1812433253
  %22 = trunc i64 %16 to i32
  %23 = add i32 %21, %22
  %24 = getelementptr inbounds i32, i32* %4, i64 %16
  store i32 %23, i32* %24, align 4
  %25 = add nuw nsw i64 %9, 2
  br label %7
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i8* @_ZN6pdfium8internal11CallocOrDieEmm(i64, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_Z21FX_Random_MT_GeneratePv(i8* nocapture) local_unnamed_addr #3 {
  %2 = getelementptr inbounds i8, i8* %0, i64 4
  %3 = bitcast i8* %2 to i32*
  %4 = bitcast i8* %0 to i32*
  %5 = load i32, i32* %4, align 4
  %6 = icmp ugt i32 %5, 847
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = zext i32 %5 to i64
  %9 = getelementptr inbounds i32, i32* %3, i64 %8
  %10 = load i32, i32* %9, align 4
  %11 = add nuw nsw i32 %5, 1
  br label %79

12:                                               ; preds = %1
  %13 = load i32, i32* %3, align 4
  br label %18

14:                                               ; preds = %18
  %15 = getelementptr inbounds i8, i8* %0, i64 1572
  %16 = bitcast i8* %15 to i32*
  %17 = load i32, i32* %16, align 4
  br label %39

18:                                               ; preds = %18, %12
  %19 = phi i32 [ %13, %12 ], [ %25, %18 ]
  %20 = phi i64 [ 0, %12 ], [ %23, %18 ]
  %21 = getelementptr inbounds i32, i32* %3, i64 %20
  %22 = and i32 %19, -2147483648
  %23 = add nuw nsw i64 %20, 1
  %24 = getelementptr inbounds i32, i32* %3, i64 %23
  %25 = load i32, i32* %24, align 4
  %26 = and i32 %25, 2147483646
  %27 = or i32 %26, %22
  %28 = add nuw nsw i64 %20, 456
  %29 = getelementptr inbounds i32, i32* %3, i64 %28
  %30 = load i32, i32* %29, align 4
  %31 = lshr exact i32 %27, 1
  %32 = and i32 %25, 1
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds [2 x i32], [2 x i32]* @_ZZ21FX_Random_MT_GeneratePvE3mag, i64 0, i64 %33
  %35 = load i32, i32* %34, align 4
  %36 = xor i32 %35, %30
  %37 = xor i32 %36, %31
  store i32 %37, i32* %21, align 4
  %38 = icmp eq i64 %23, 392
  br i1 %38, label %14, label %18

39:                                               ; preds = %39, %14
  %40 = phi i32 [ %17, %14 ], [ %46, %39 ]
  %41 = phi i64 [ 392, %14 ], [ %44, %39 ]
  %42 = getelementptr inbounds i32, i32* %3, i64 %41
  %43 = and i32 %40, -2147483648
  %44 = add nuw nsw i64 %41, 1
  %45 = getelementptr inbounds i32, i32* %3, i64 %44
  %46 = load i32, i32* %45, align 4
  %47 = and i32 %46, 2147483646
  %48 = or i32 %47, %43
  %49 = add nuw i64 %41, 4294966904
  %50 = and i64 %49, 4294967295
  %51 = getelementptr inbounds i32, i32* %3, i64 %50
  %52 = load i32, i32* %51, align 4
  %53 = lshr exact i32 %48, 1
  %54 = and i32 %46, 1
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds [2 x i32], [2 x i32]* @_ZZ21FX_Random_MT_GeneratePvE3mag, i64 0, i64 %55
  %57 = load i32, i32* %56, align 4
  %58 = xor i32 %57, %52
  %59 = xor i32 %58, %53
  store i32 %59, i32* %42, align 4
  %60 = icmp eq i64 %44, 847
  br i1 %60, label %61, label %39

61:                                               ; preds = %39
  %62 = getelementptr inbounds i8, i8* %0, i64 3392
  %63 = bitcast i8* %62 to i32*
  %64 = load i32, i32* %63, align 4
  %65 = and i32 %64, -2147483648
  %66 = load i32, i32* %3, align 4
  %67 = and i32 %66, 2147483646
  %68 = or i32 %67, %65
  %69 = getelementptr inbounds i8, i8* %0, i64 1824
  %70 = bitcast i8* %69 to i32*
  %71 = load i32, i32* %70, align 4
  %72 = lshr exact i32 %68, 1
  %73 = and i32 %66, 1
  %74 = zext i32 %73 to i64
  %75 = getelementptr inbounds [2 x i32], [2 x i32]* @_ZZ21FX_Random_MT_GeneratePvE3mag, i64 0, i64 %74
  %76 = load i32, i32* %75, align 4
  %77 = xor i32 %76, %71
  %78 = xor i32 %77, %72
  store i32 %78, i32* %63, align 4
  store i32 0, i32* %4, align 4
  br label %79

79:                                               ; preds = %7, %61
  %80 = phi i32 [ %66, %61 ], [ %10, %7 ]
  %81 = phi i32 [ 1, %61 ], [ %11, %7 ]
  store i32 %81, i32* %4, align 4
  %82 = lshr i32 %80, 11
  %83 = xor i32 %82, %80
  %84 = shl i32 %83, 7
  %85 = and i32 %84, -1658038656
  %86 = xor i32 %85, %83
  %87 = shl i32 %86, 15
  %88 = and i32 %87, -272236544
  %89 = xor i32 %88, %86
  %90 = lshr i32 %89, 18
  %91 = xor i32 %90, %89
  ret i32 %91
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z18FX_Random_MT_ClosePv(i8*) local_unnamed_addr #0 {
  tail call void @_Z7FX_FreePv(i8* %0) #6
  ret void
}

declare void @_Z7FX_FreePv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z20FX_Random_GenerateMTPji(i32* nocapture, i32) local_unnamed_addr #0 {
  %3 = alloca i8, align 1
  %4 = alloca %struct.timeval, align 8
  %5 = load i1, i1* @_ZN12_GLOBAL__N_117g_bHaveGlobalSeedE, align 1
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = load i32, i32* @_ZN12_GLOBAL__N_113g_nGlobalSeedE, align 4
  br label %26

8:                                                ; preds = %2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #6
  store i8 -86, i8* %3, align 1
  %9 = ptrtoint i8* %3 to i64
  %10 = lshr i64 %9, 3
  %11 = trunc i64 %10 to i32
  %12 = xor i32 %11, -1
  %13 = bitcast %struct.timeval* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #6
  %14 = getelementptr inbounds %struct.timeval, %struct.timeval* %4, i64 0, i32 0
  %15 = getelementptr inbounds %struct.timeval, %struct.timeval* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false) #6
  %16 = call i32 @gettimeofday(%struct.timeval* nonnull %4, i8* null) #6
  %17 = load i64, i64* %14, align 8
  %18 = trunc i64 %17 to i32
  %19 = mul i32 %18, 1000000
  %20 = xor i32 %19, %12
  %21 = load i64, i64* %15, align 8
  %22 = trunc i64 %21 to i32
  %23 = xor i32 %20, %22
  %24 = call i32 @getpid() #6
  %25 = xor i32 %23, %24
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #6
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #6
  store i32 %25, i32* @_ZN12_GLOBAL__N_113g_nGlobalSeedE, align 4
  store i1 true, i1* @_ZN12_GLOBAL__N_117g_bHaveGlobalSeedE, align 1
  br label %26

26:                                               ; preds = %8, %6
  %27 = phi i32 [ %7, %6 ], [ %25, %8 ]
  %28 = add i32 %27, 1
  store i32 %28, i32* @_ZN12_GLOBAL__N_113g_nGlobalSeedE, align 4
  %29 = call i8* @_ZN6pdfium8internal11CallocOrDieEmm(i64 1, i64 3396) #6
  %30 = getelementptr inbounds i8, i8* %29, i64 4
  %31 = bitcast i8* %30 to i32*
  store i32 %28, i32* %31, align 4
  br label %32

32:                                               ; preds = %54, %26
  %33 = phi i32 [ %28, %26 ], [ %59, %54 ]
  %34 = phi i64 [ 1, %26 ], [ %61, %54 ]
  %35 = lshr i32 %33, 30
  %36 = xor i32 %35, %33
  %37 = mul i32 %36, 1812433253
  %38 = trunc i64 %34 to i32
  %39 = add i32 %37, %38
  %40 = getelementptr inbounds i32, i32* %31, i64 %34
  store i32 %39, i32* %40, align 4
  %41 = add nuw nsw i64 %34, 1
  %42 = icmp eq i64 %41, 848
  br i1 %42, label %43, label %54

43:                                               ; preds = %32
  %44 = bitcast i8* %29 to i32*
  store i32 848, i32* %44, align 4
  %45 = icmp sgt i32 %1, 0
  br i1 %45, label %46, label %53

46:                                               ; preds = %43, %46
  %47 = phi i32 [ %49, %46 ], [ %1, %43 ]
  %48 = phi i32* [ %51, %46 ], [ %0, %43 ]
  %49 = add nsw i32 %47, -1
  %50 = call i32 @_Z21FX_Random_MT_GeneratePv(i8* %29)
  %51 = getelementptr inbounds i32, i32* %48, i64 1
  store i32 %50, i32* %48, align 4
  %52 = icmp sgt i32 %49, 0
  br i1 %52, label %46, label %53

53:                                               ; preds = %46, %43
  call void @_Z7FX_FreePv(i8* %29) #6
  ret void

54:                                               ; preds = %32
  %55 = lshr i32 %39, 30
  %56 = xor i32 %55, %39
  %57 = mul i32 %56, 1812433253
  %58 = trunc i64 %41 to i32
  %59 = add i32 %57, %58
  %60 = getelementptr inbounds i32, i32* %31, i64 %41
  store i32 %59, i32* %60, align 4
  %61 = add nuw nsw i64 %34, 2
  br label %32
}

; Function Attrs: nofree nounwind
declare i32 @gettimeofday(%struct.timeval* nocapture, i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind
declare i32 @getpid() local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
