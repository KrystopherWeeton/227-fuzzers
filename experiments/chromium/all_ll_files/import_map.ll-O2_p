; ModuleID = '../../third_party/blink/renderer/core/script/import_map.cc'
source_filename = "../../third_party/blink/renderer/core/script/import_map.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.7", i32, [4 x i8], %"class.std::__1::unique_ptr.143", %"class.std::__1::unique_ptr.143", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.154", %"class.std::__1::unique_ptr.160", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.178", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.185", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.51", %"class.std::__1::unique_ptr.58", %"class.std::__1::unique_ptr.58", %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.93", %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.123", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.43" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.43" = type { %"struct.std::__1::__atomic_base.44" }
%"struct.std::__1::__atomic_base.44" = type { %"struct.std::__1::__atomic_base.45" }
%"struct.std::__1::__atomic_base.45" = type { %"struct.std::__1::__cxx_atomic_impl.46" }
%"struct.std::__1::__cxx_atomic_impl.46" = type { %"struct.std::__1::__cxx_atomic_base_impl.47" }
%"struct.std::__1::__cxx_atomic_base_impl.47" = type { i64 }
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.blink::Worklist.54"* }
%"class.blink::Worklist.54" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.43" }
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.blink::Worklist.61"* }
%"class.blink::Worklist.61" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.43" }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.blink::Worklist.68"* }
%"class.blink::Worklist.68" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.43" }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.blink::Worklist.75"* }
%"class.blink::Worklist.75" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.43" }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.blink::Worklist.82"* }
%"class.blink::Worklist.82" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.43" }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::Worklist.89"* }
%"class.blink::Worklist.89" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.43" }
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.blink::Worklist.96"* }
%"class.blink::Worklist.96" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.43" }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.103", %"class.std::__1::__compressed_pair.110", %"class.std::__1::__compressed_pair.115", %"class.std::__1::__compressed_pair.117", [4 x i8] }>
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105", %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { i64 }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { float }
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.126", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.135" }
%"class.WTF::Vector.135" = type { %"class.WTF::VectorBuffer.136" }
%"class.WTF::VectorBuffer.136" = type { %"class.WTF::VectorBufferBase.137" }
%"class.WTF::VectorBufferBase.137" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.151" }
%"class.WTF::VectorBuffer.151" = type { %"class.WTF::VectorBufferBase.152" }
%"class.WTF::VectorBufferBase.152" = type { %"struct.std::__1::pair.153"*, i32, i32 }
%"struct.std::__1::pair.153" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.166" }
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.54"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.61"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.68"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.75"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.82"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.189" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.184 }
%class.scoped_refptr.184 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.185" = type { %"struct.std::__1::__atomic_base.186" }
%"struct.std::__1::__atomic_base.186" = type { %"struct.std::__1::__cxx_atomic_impl.187" }
%"struct.std::__1::__cxx_atomic_impl.187" = type { %"struct.std::__1::__cxx_atomic_base_impl.188" }
%"struct.std::__1::__cxx_atomic_base_impl.188" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::ImportMap" = type { %"class.WTF::HashMap", %"class.WTF::Vector" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::String", %"class.blink::KURL" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::String", %"class.WTF::HashMap" }
%"class.blink::Modulator" = type { %"class.blink::V8PerContextData::Data", %"class.blink::NameClient" }
%"class.blink::V8PerContextData::Data" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference", %class.scoped_refptr.6 }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%class.scoped_refptr.6 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"struct.std::__1::pair.216" = type { %"class.WTF::String", %"class.blink::JSONValue"* }
%"class.blink::JSONValue" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.217", i8* }
%"class.WTF::StringAppend.217" = type { i8*, %"class.WTF::String" }
%"struct.blink::JSONParseError" = type { i32, i32, i32, %"class.WTF::String" }
%"class.blink::JSONObject" = type { %"class.blink::JSONValue.base", [4 x i8], %"class.WTF::HashMap.203", %"class.WTF::Vector.208" }
%"class.blink::JSONValue.base" = type <{ i32 (...)**, i32 }>
%"class.WTF::HashMap.203" = type { %"class.WTF::HashTable.204" }
%"class.WTF::HashTable.204" = type <{ %"struct.WTF::KeyValuePair.207"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.207" = type opaque
%"class.WTF::Vector.208" = type { %"class.WTF::VectorBuffer.209" }
%"class.WTF::VectorBuffer.209" = type { %"class.WTF::VectorBufferBase.210" }
%"class.WTF::VectorBufferBase.210" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::ParsedSpecifier" = type { i32, %"class.blink::KURL", %"class.WTF::String" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::StringAppend.224" = type { %"class.WTF::StringAppend", %"class.WTF::String" }
%"class.WTF::StringTypeAdapter.248" = type <{ i8*, i32, [4 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"struct.WTF::HashTableConstIteratorAdapter" }
%"struct.WTF::HashTableConstIteratorAdapter" = type { %"class.WTF::HashTableConstIterator" }
%"class.WTF::HashTableConstIterator" = type { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* }
%"class.absl::optional.218" = type { %"class.absl::optional_internal::optional_data.219" }
%"class.absl::optional_internal::optional_data.219" = type { %"class.absl::optional_internal::optional_data_base.220" }
%"class.absl::optional_internal::optional_data_base.220" = type { %"class.absl::optional_internal::optional_data_dtor_base.221" }
%"class.absl::optional_internal::optional_data_dtor_base.221" = type { i8, %union.anon.222 }
%union.anon.222 = type { %"class.blink::KURL" }
%"class.WTF::StringAppend.223" = type { %"class.WTF::StringAppend.224", i8* }
%"class.WTF::StringAppend.225" = type { %"class.WTF::StringAppend.223", %"class.WTF::String" }
%"class.WTF::StringTypeAdapter.245" = type { %"class.WTF::StringTypeAdapter.246" }
%"class.WTF::StringTypeAdapter.246" = type { %"class.WTF::StringView" }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.226, i32, i8, i8, [2 x i8] }>
%union.anon.226 = type { %"class.WTF::Vector.227" }
%"class.WTF::Vector.227" = type { %"class.WTF::VectorBuffer.228" }
%"class.WTF::VectorBuffer.228" = type { %"class.WTF::VectorBufferBase.229", [16 x i8] }
%"class.WTF::VectorBufferBase.229" = type { i8*, i32, i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.251 }
%union.anon.251 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev = comdat any

$_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev = comdat any

$_ZN3WTFplINS_12StringAppendINS1_INS1_IPKcNS_6StringEEES3_EES4_EES3_S4_EENS1_INS1_IT_T0_EET1_EERKSA_SB_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EcvS3_Ev = comdat any

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEaSERKS3_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EcvS3_Ev = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev = comdat any

$_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_9ImportMapEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_9ImportMapEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_9ImportMapEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_9ImportMapEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorINSt3__14pairINS_6StringENS_7HashMapIS3_N5blink4KURLENS_10StringHashENS_10HashTraitsIS3_EENS8_IS6_EENS_18PartitionAllocatorEEEEELj0ESB_E14AppendSlowCaseISD_EEvOT_ = comdat any

$_ZN3WTF6VectorINSt3__14pairINS_6StringENS_7HashMapIS3_N5blink4KURLENS_10StringHashENS_10HashTraitsIS3_EENS8_IS6_EENS_18PartitionAllocatorEEEEELj0ESB_E16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairINS_6StringENS_7HashMapIS4_N5blink4KURLENS_10StringHashENS_10HashTraitsIS4_EENS9_IS7_EES0_EEEEEEmm = comdat any

$_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_ = comdat any

$_ZNSt3__14swapIN3WTF7HashMapINS1_6StringEN5blink4KURLENS1_10StringHashENS1_10HashTraitsIS3_EENS7_IS5_EENS1_18PartitionAllocatorEEEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableISD_EE5valueEvE4typeERSD_SG_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink4KURLEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKS1_RKS4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink4KURLEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink4KURLEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE8RehashToEPS5_jSF_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink4KURLEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink4KURLEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKS1_S4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_ = comdat any

$_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink4KURLEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE4findERKS1_ = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EC2ES7_S3_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_E6lengthEv = comdat any

$_ZZN5blink11GCInfoTraitINS_9ImportMapEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_9ImportMapEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [41 x i8] c"Failed to parse import map: invalid JSON\00", align 1
@.str.1 = private unnamed_addr constant [42 x i8] c"Failed to parse import map: not an object\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"imports\00", align 1
@.str.3 = private unnamed_addr constant [75 x i8] c"Failed to parse import map: \22imports\22 top-level key must be a JSON object.\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"scopes\00", align 1
@.str.5 = private unnamed_addr constant [74 x i8] c"Failed to parse import map: \22scopes\22 top-level key must be a JSON object.\00", align 1
@.str.6 = private unnamed_addr constant [65 x i8] c"Failed to parse import map: the value of the scope with prefix \22\00", align 1
@.str.7 = private unnamed_addr constant [25 x i8] c"\22 must be a JSON object.\00", align 1
@.str.8 = private unnamed_addr constant [16 x i8] c"Ignored scope \22\00", align 1
@.str.9 = private unnamed_addr constant [26 x i8] c"\22: not parsable as a URL.\00", align 1
@.str.10 = private unnamed_addr constant [31 x i8] c"Internal error in GetString().\00", align 1
@.str.11 = private unnamed_addr constant [20 x i8] c"Invalid value type.\00", align 1
@.str.12 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.13 = private unnamed_addr constant [14 x i8] c"Import Map: \22\00", align 1
@.str.14 = private unnamed_addr constant [55 x i8] c"\22 skips prefix match because of non-special URL scheme\00", align 1
@.str.15 = private unnamed_addr constant [50 x i8] c"\22 matches with no entries and thus is not mapped.\00", align 1
@.str.16 = private unnamed_addr constant [17 x i8] c"\22 matches with \22\00", align 1
@.str.17 = private unnamed_addr constant [33 x i8] c"\22 but is blocked by a null value\00", align 1
@.str.18 = private unnamed_addr constant [51 x i8] c"\22 but is blocked due to relative URL parse failure\00", align 1
@.str.19 = private unnamed_addr constant [37 x i8] c"\22 but is blocked due to backtracking\00", align 1
@.str.20 = private unnamed_addr constant [20 x i8] c"\22 and is mapped to \00", align 1
@.str.21 = private unnamed_addr constant [12 x i8] c"{\22imports\22:\00", align 1
@.str.22 = private unnamed_addr constant [12 x i8] c",\22scopes\22:{\00", align 1
@.str.23 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.24 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.25 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@.str.26 = private unnamed_addr constant [43 x i8] c"specifier keys cannot be the empty string.\00", align 1
@.str.27 = private unnamed_addr constant [28 x i8] c"Ignored an import map key \22\00", align 1
@.str.28 = private unnamed_addr constant [4 x i8] c"\22: \00", align 1
@.str.29 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.30 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.31 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@.str.32 = private unnamed_addr constant [33 x i8] c"Ignored an import map value of \22\00", align 1
@.str.33 = private unnamed_addr constant [14 x i8] c"Invalid URL: \00", align 1
@.str.34 = private unnamed_addr constant [17 x i8] c"Bare specifier: \00", align 1
@.str.35 = private unnamed_addr constant [59 x i8] c"Since specifierKey ended in a slash, so must the address: \00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.36 = private unnamed_addr constant [2 x i8] c"{\00", align 1
@.str.37 = private unnamed_addr constant [5 x i8] c"null\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.38 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.39 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_9ImportMapEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_9ImportMapEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_9ImportMapEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_9ImportMapEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_9ImportMapEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.40 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.43 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.44 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairINS_6StringENS_7HashMapIS3_N5blink4KURLENS_10StringHashENS_10HashTraitsIS3_EENS8_IS6_EENS_18PartitionAllocatorEEEEEEEPKcv = private unnamed_addr constant [218 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::pair<WTF::String, WTF::HashMap<WTF::String, blink::KURL, WTF::StringHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<blink::KURL>, WTF::PartitionAllocator> >]\00", align 1
@.str.45 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.46 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringEN5blink4KURLEEEEEPKcv = private unnamed_addr constant [91 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::String, blink::KURL>]\00", align 1

@_ZN5blink9ImportMapC1Ev = hidden unnamed_addr alias void (%"class.blink::ImportMap"*), void (%"class.blink::ImportMap"*)* @_ZN5blink9ImportMapC2Ev
@_ZN5blink9ImportMapC1EON3WTF7HashMapINS1_6StringENS_4KURLENS1_10StringHashENS1_10HashTraitsIS3_EENS6_IS4_EENS1_18PartitionAllocatorEEEONS1_6VectorINSt3__14pairIS3_SA_EELj0ES9_EE = hidden unnamed_addr alias void (%"class.blink::ImportMap"*, %"class.WTF::HashMap"*, %"class.WTF::Vector"*), void (%"class.blink::ImportMap"*, %"class.WTF::HashMap"*, %"class.WTF::Vector"*)* @_ZN5blink9ImportMapC2EON3WTF7HashMapINS1_6StringENS_4KURLENS1_10StringHashENS1_10HashTraitsIS3_EENS6_IS4_EENS1_18PartitionAllocatorEEEONS1_6VectorINSt3__14pairIS3_SA_EELj0ES9_EE

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ImportMap"* @_ZN5blink9ImportMap5ParseERKNS_9ModulatorERKN3WTF6StringERKNS_4KURLERNS_13ConsoleLoggerEPNS_11ScriptValueE(%"class.blink::Modulator"* dereferenceable(16), %"class.WTF::String"* dereferenceable(8), %"class.blink::KURL"* dereferenceable(112), %"class.blink::ConsoleLogger"* dereferenceable(8), %"class.blink::ScriptValue"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::ScriptValue", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.blink::ScriptValue", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.blink::ScriptValue", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.WTF::HashMap", align 8
  %15 = alloca %"class.WTF::Vector", align 8
  %16 = alloca %"class.WTF::String", align 8
  %17 = alloca %"class.WTF::String", align 8
  %18 = alloca %"class.blink::ScriptValue", align 8
  %19 = alloca %"class.WTF::String", align 8
  %20 = alloca %"struct.std::__1::pair.216", align 8
  %21 = alloca %"class.blink::ScriptValue", align 8
  %22 = alloca %"class.WTF::String", align 8
  %23 = alloca %"class.WTF::StringAppend", align 8
  %24 = alloca %"class.blink::KURL", align 8
  %25 = alloca %"class.WTF::String", align 8
  %26 = alloca %"class.WTF::StringAppend", align 8
  %27 = alloca %"struct.std::__1::pair", align 8
  %28 = alloca %"class.WTF::HashMap", align 8
  %29 = tail call %"class.blink::JSONValue"* @_ZN5blink9ParseJSONERKN3WTF6StringEPNS_14JSONParseErrorE(%"class.WTF::String"* dereferenceable(8) %1, %"struct.blink::JSONParseError"* null) #8
  %30 = icmp eq %"class.blink::JSONValue"* %29, null
  br i1 %30, label %31, label %71

31:                                               ; preds = %5
  %32 = bitcast %"class.blink::ScriptValue"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #8
  %33 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str, i64 0, i64 0), i64 40) #8
  %34 = bitcast %"class.blink::Modulator"* %0 to void (%"class.blink::ScriptValue"*, %"class.blink::Modulator"*, %"class.WTF::String"*)***
  %35 = load void (%"class.blink::ScriptValue"*, %"class.blink::Modulator"*, %"class.WTF::String"*)**, void (%"class.blink::ScriptValue"*, %"class.blink::Modulator"*, %"class.WTF::String"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.blink::ScriptValue"*, %"class.blink::Modulator"*, %"class.WTF::String"*)*, void (%"class.blink::ScriptValue"*, %"class.blink::Modulator"*, %"class.WTF::String"*)** %35, i64 16
  %37 = load void (%"class.blink::ScriptValue"*, %"class.blink::Modulator"*, %"class.WTF::String"*)*, void (%"class.blink::ScriptValue"*, %"class.blink::Modulator"*, %"class.WTF::String"*)** %36, align 8
  call void %37(%"class.blink::ScriptValue"* nonnull sret %6, %"class.blink::Modulator"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %7) #8
  %38 = bitcast %"class.blink::ScriptValue"* %6 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.blink::ScriptValue"* %4 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %4, i64 0, i32 1
  %42 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %6, i64 0, i32 1
  %43 = call dereferenceable(16) %"class.blink::WorldSafeV8Reference"* @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEaSERKS3_(%"class.blink::WorldSafeV8Reference"* %41, %"class.blink::WorldSafeV8Reference"* dereferenceable(16) %42) #8
  %44 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %6, i64 0, i32 1, i32 1, i32 0
  %45 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %44, align 8
  %46 = icmp eq %"class.blink::DOMWrapperWorld"* %45, null
  br i1 %46, label %54, label %47

47:                                               ; preds = %31
  %48 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %45, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %48) #8
  %49 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %45, i64 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %47
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %45) #8
  %53 = bitcast %"class.blink::DOMWrapperWorld"* %45 to i8*
  call void @free(i8* %53) #8
  br label %54

54:                                               ; preds = %31, %47, %52
  %55 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %1004, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  br i1 %62, label %65, label %67

65:                                               ; preds = %58
  %66 = add i32 %64, -1
  store i32 %66, i32* %63, align 4
  br label %67

67:                                               ; preds = %65, %58
  %68 = phi i32 [ %66, %65 ], [ %64, %58 ]
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %1004

70:                                               ; preds = %67
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %56) #8
  br label %1004

71:                                               ; preds = %5
  %72 = getelementptr inbounds %"class.blink::JSONValue", %"class.blink::JSONValue"* %29, i64 0, i32 1
  %73 = load i32, i32* %72, align 8
  %74 = icmp eq i32 %73, 5
  %75 = bitcast %"class.blink::JSONValue"* %29 to %"class.blink::JSONObject"*
  br i1 %74, label %128, label %76

76:                                               ; preds = %71
  %77 = bitcast %"class.blink::JSONValue"* %29 to void (%"class.blink::JSONValue"*)***
  %78 = load void (%"class.blink::JSONValue"*)**, void (%"class.blink::JSONValue"*)*** %77, align 8
  %79 = getelementptr inbounds void (%"class.blink::JSONValue"*)*, void (%"class.blink::JSONValue"*)** %78, i64 1
  %80 = load void (%"class.blink::JSONValue"*)*, void (%"class.blink::JSONValue"*)** %79, align 8
  tail call void %80(%"class.blink::JSONValue"* nonnull %29) #8
  %81 = bitcast %"class.blink::ScriptValue"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %81) #8
  %82 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %9, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0), i64 41) #8
  %83 = bitcast %"class.blink::Modulator"* %0 to void (%"class.blink::ScriptValue"*, %"class.blink::Modulator"*, %"class.WTF::String"*)***
  %84 = load void (%"class.blink::ScriptValue"*, %"class.blink::Modulator"*, %"class.WTF::String"*)**, void (%"class.blink::ScriptValue"*, %"class.blink::Modulator"*, %"class.WTF::String"*)*** %83, align 8
  %85 = getelementptr inbounds void (%"class.blink::ScriptValue"*, %"class.blink::Modulator"*, %"class.WTF::String"*)*, void (%"class.blink::ScriptValue"*, %"class.blink::Modulator"*, %"class.WTF::String"*)** %84, i64 15
  %86 = load void (%"class.blink::ScriptValue"*, %"class.blink::Modulator"*, %"class.WTF::String"*)*, void (%"class.blink::ScriptValue"*, %"class.blink::Modulator"*, %"class.WTF::String"*)** %85, align 8
  call void %86(%"class.blink::ScriptValue"* nonnull sret %8, %"class.blink::Modulator"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %9) #8
  %87 = bitcast %"class.blink::ScriptValue"* %8 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = bitcast %"class.blink::ScriptValue"* %4 to i64*
  store i64 %88, i64* %89, align 8
  %90 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %4, i64 0, i32 1
  %91 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %8, i64 0, i32 1
  %92 = call dereferenceable(16) %"class.blink::WorldSafeV8Reference"* @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEaSERKS3_(%"class.blink::WorldSafeV8Reference"* %90, %"class.blink::WorldSafeV8Reference"* dereferenceable(16) %91) #8
  %93 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %8, i64 0, i32 1, i32 1, i32 0
  %94 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %93, align 8
  %95 = icmp eq %"class.blink::DOMWrapperWorld"* %94, null
  br i1 %95, label %103, label %96

96:                                               ; preds = %76
  %97 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %94, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %97) #8
  %98 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %94, i64 0, i32 0, i32 0, i32 0, i32 0
  %99 = load i32, i32* %98, align 4
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %103

101:                                              ; preds = %96
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %94) #8
  %102 = bitcast %"class.blink::DOMWrapperWorld"* %94 to i8*
  call void @free(i8* %102) #8
  br label %103

103:                                              ; preds = %76, %96, %101
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %106, label %120, label %107

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  br i1 %111, label %114, label %116

114:                                              ; preds = %107
  %115 = add i32 %113, -1
  store i32 %115, i32* %112, align 4
  br label %116

116:                                              ; preds = %114, %107
  %117 = phi i32 [ %115, %114 ], [ %113, %107 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %105) #8
  br label %120

120:                                              ; preds = %119, %116, %103
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %81) #8
  %121 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_9ImportMapEEEPhm(i64 40) #8
  %122 = bitcast i8* %121 to %"class.blink::ImportMap"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %121, i8 0, i64 20, i1 false) #8
  %123 = getelementptr inbounds i8, i8* %121, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %123, i8 0, i64 16, i1 false) #8
  %124 = getelementptr inbounds i8, i8* %121, i64 -4
  %125 = bitcast i8* %124 to i16*
  %126 = load atomic i16, i16* %125 monotonic, align 2
  %127 = or i16 %126, 1
  store atomic i16 %127, i16* %125 release, align 2
  br label %1012

128:                                              ; preds = %71
  %129 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %129) #8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %10, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), i64 7) #8
  %130 = call %"class.blink::JSONValue"* @_ZNK5blink10JSONObject3GetERKN3WTF6StringE(%"class.blink::JSONObject"* nonnull %75, %"class.WTF::String"* nonnull dereferenceable(8) %10) #8
  %131 = icmp eq %"class.blink::JSONValue"* %130, null
  %132 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %132, align 8
  %134 = icmp eq %"class.WTF::StringImpl"* %133, null
  br i1 %134, label %148, label %135

135:                                              ; preds = %128
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  br i1 %139, label %142, label %144

142:                                              ; preds = %135
  %143 = add i32 %141, -1
  store i32 %143, i32* %140, align 4
  br label %144

144:                                              ; preds = %142, %135
  %145 = phi i32 [ %143, %142 ], [ %141, %135 ]
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %148

147:                                              ; preds = %144
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %133) #8
  br label %148

148:                                              ; preds = %128, %144, %147
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %129) #8
  br i1 %131, label %229, label %149

149:                                              ; preds = %148
  %150 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %150) #8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %11, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), i64 7) #8
  %151 = call %"class.blink::JSONObject"* @_ZNK5blink10JSONObject13GetJSONObjectERKN3WTF6StringE(%"class.blink::JSONObject"* nonnull %75, %"class.WTF::String"* nonnull dereferenceable(8) %11) #8
  %152 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %153 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %152, align 8
  %154 = icmp eq %"class.WTF::StringImpl"* %153, null
  br i1 %154, label %168, label %155

155:                                              ; preds = %149
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = load atomic i32, i32* %156 monotonic, align 4
  %158 = and i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 0
  %161 = load i32, i32* %160, align 4
  br i1 %159, label %162, label %164

162:                                              ; preds = %155
  %163 = add i32 %161, -1
  store i32 %163, i32* %160, align 4
  br label %164

164:                                              ; preds = %162, %155
  %165 = phi i32 [ %163, %162 ], [ %161, %155 ]
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %168

167:                                              ; preds = %164
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %153) #8
  br label %168

168:                                              ; preds = %149, %164, %167
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %150) #8
  %169 = icmp eq %"class.blink::JSONObject"* %151, null
  br i1 %169, label %170, label %210

170:                                              ; preds = %168
  %171 = bitcast %"class.blink::ScriptValue"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %171) #8
  %172 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %172) #8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %13, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.3, i64 0, i64 0), i64 74) #8
  %173 = bitcast %"class.blink::Modulator"* %0 to void (%"class.blink::ScriptValue"*, %"class.blink::Modulator"*, %"class.WTF::String"*)***
  %174 = load void (%"class.blink::ScriptValue"*, %"class.blink::Modulator"*, %"class.WTF::String"*)**, void (%"class.blink::ScriptValue"*, %"class.blink::Modulator"*, %"class.WTF::String"*)*** %173, align 8
  %175 = getelementptr inbounds void (%"class.blink::ScriptValue"*, %"class.blink::Modulator"*, %"class.WTF::String"*)*, void (%"class.blink::ScriptValue"*, %"class.blink::Modulator"*, %"class.WTF::String"*)** %174, i64 15
  %176 = load void (%"class.blink::ScriptValue"*, %"class.blink::Modulator"*, %"class.WTF::String"*)*, void (%"class.blink::ScriptValue"*, %"class.blink::Modulator"*, %"class.WTF::String"*)** %175, align 8
  call void %176(%"class.blink::ScriptValue"* nonnull sret %12, %"class.blink::Modulator"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %13) #8
  %177 = bitcast %"class.blink::ScriptValue"* %12 to i64*
  %178 = load i64, i64* %177, align 8
  %179 = bitcast %"class.blink::ScriptValue"* %4 to i64*
  store i64 %178, i64* %179, align 8
  %180 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %4, i64 0, i32 1
  %181 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %12, i64 0, i32 1
  %182 = call dereferenceable(16) %"class.blink::WorldSafeV8Reference"* @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEaSERKS3_(%"class.blink::WorldSafeV8Reference"* %180, %"class.blink::WorldSafeV8Reference"* dereferenceable(16) %181) #8
  %183 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %12, i64 0, i32 1, i32 1, i32 0
  %184 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %183, align 8
  %185 = icmp eq %"class.blink::DOMWrapperWorld"* %184, null
  br i1 %185, label %193, label %186

186:                                              ; preds = %170
  %187 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %184, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %187) #8
  %188 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %184, i64 0, i32 0, i32 0, i32 0, i32 0
  %189 = load i32, i32* %188, align 4
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %193

191:                                              ; preds = %186
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %184) #8
  %192 = bitcast %"class.blink::DOMWrapperWorld"* %184 to i8*
  call void @free(i8* %192) #8
  br label %193

193:                                              ; preds = %170, %186, %191
  %194 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  %195 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %194, align 8
  %196 = icmp eq %"class.WTF::StringImpl"* %195, null
  br i1 %196, label %221, label %197

197:                                              ; preds = %193
  %198 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %195, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %199 = load atomic i32, i32* %198 monotonic, align 4
  %200 = and i32 %199, 2
  %201 = icmp eq i32 %200, 0
  %202 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %195, i64 0, i32 0
  %203 = load i32, i32* %202, align 4
  br i1 %201, label %204, label %206

204:                                              ; preds = %197
  %205 = add i32 %203, -1
  store i32 %205, i32* %202, align 4
  br label %206

206:                                              ; preds = %204, %197
  %207 = phi i32 [ %205, %204 ], [ %203, %197 ]
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %209, label %221

209:                                              ; preds = %206
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %195) #8
  br label %221

210:                                              ; preds = %168
  %211 = bitcast %"class.WTF::HashMap"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %211) #8
  call void @_ZN5blink9ImportMap28SortAndNormalizeSpecifierMapEPKNS_10JSONObjectERKNS_4KURLERNS_13ConsoleLoggerE(%"class.WTF::HashMap"* nonnull sret %14, %"class.blink::JSONObject"* nonnull %151, %"class.blink::KURL"* dereferenceable(112) %2, %"class.blink::ConsoleLogger"* dereferenceable(8) %3)
  %212 = bitcast %"class.WTF::HashMap"* %14 to i64*
  %213 = load i64, i64* %212, align 8
  store atomic i64 0, i64* %212 monotonic, align 8
  %214 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %14, i64 0, i32 0, i32 1
  %215 = load i32, i32* %214, align 8
  store i32 0, i32* %214, align 8
  %216 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %14, i64 0, i32 0, i32 2
  %217 = load i32, i32* %216, align 4
  store i32 0, i32* %216, align 4
  %218 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %14, i64 0, i32 0, i32 3
  %219 = load i32, i32* %218, align 8
  %220 = and i32 %219, 2147483647
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %211) #8
  br label %229

221:                                              ; preds = %209, %206, %193
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %172) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %171) #8
  %222 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_9ImportMapEEEPhm(i64 40) #8
  %223 = bitcast i8* %222 to %"class.blink::ImportMap"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %222, i8 0, i64 20, i1 false) #8
  %224 = getelementptr inbounds i8, i8* %222, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %224, i8 0, i64 16, i1 false) #8
  %225 = getelementptr inbounds i8, i8* %222, i64 -4
  %226 = bitcast i8* %225 to i16*
  %227 = load atomic i16, i16* %226 monotonic, align 2
  %228 = or i16 %227, 1
  store atomic i16 %228, i16* %226 release, align 2
  br label %998

229:                                              ; preds = %210, %148
  %230 = phi i32 [ 0, %148 ], [ %220, %210 ]
  %231 = phi i32 [ 0, %148 ], [ %217, %210 ]
  %232 = phi i32 [ 0, %148 ], [ %215, %210 ]
  %233 = phi i64 [ 0, %148 ], [ %213, %210 ]
  %234 = bitcast %"class.WTF::Vector"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %234) #8
  %235 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %15, i64 0, i32 0, i32 0, i32 0
  %236 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %15, i64 0, i32 0, i32 0, i32 1
  %237 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %15, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %234, i8 0, i64 16, i1 false) #8
  %238 = bitcast %"class.WTF::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %238) #8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %16, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0), i64 6) #8
  %239 = call %"class.blink::JSONValue"* @_ZNK5blink10JSONObject3GetERKN3WTF6StringE(%"class.blink::JSONObject"* nonnull %75, %"class.WTF::String"* nonnull dereferenceable(8) %16) #8
  %240 = icmp eq %"class.blink::JSONValue"* %239, null
  %241 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  %242 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %241, align 8
  %243 = icmp eq %"class.WTF::StringImpl"* %242, null
  br i1 %243, label %257, label %244

244:                                              ; preds = %229
  %245 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %242, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %246 = load atomic i32, i32* %245 monotonic, align 4
  %247 = and i32 %246, 2
  %248 = icmp eq i32 %247, 0
  %249 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %242, i64 0, i32 0
  %250 = load i32, i32* %249, align 4
  br i1 %248, label %251, label %253

251:                                              ; preds = %244
  %252 = add i32 %250, -1
  store i32 %252, i32* %249, align 4
  br label %253

253:                                              ; preds = %251, %244
  %254 = phi i32 [ %252, %251 ], [ %250, %244 ]
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %256, label %257

256:                                              ; preds = %253
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %242) #8
  br label %257

257:                                              ; preds = %229, %253, %256
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %238) #8
  br i1 %240, label %855, label %258

258:                                              ; preds = %257
  %259 = bitcast %"class.WTF::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %259) #8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %17, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0), i64 6) #8
  %260 = call %"class.blink::JSONObject"* @_ZNK5blink10JSONObject13GetJSONObjectERKN3WTF6StringE(%"class.blink::JSONObject"* nonnull %75, %"class.WTF::String"* nonnull dereferenceable(8) %17) #8
  %261 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  %262 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %261, align 8
  %263 = icmp eq %"class.WTF::StringImpl"* %262, null
  br i1 %263, label %277, label %264

264:                                              ; preds = %258
  %265 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %262, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %266 = load atomic i32, i32* %265 monotonic, align 4
  %267 = and i32 %266, 2
  %268 = icmp eq i32 %267, 0
  %269 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %262, i64 0, i32 0
  %270 = load i32, i32* %269, align 4
  br i1 %268, label %271, label %273

271:                                              ; preds = %264
  %272 = add i32 %270, -1
  store i32 %272, i32* %269, align 4
  br label %273

273:                                              ; preds = %271, %264
  %274 = phi i32 [ %272, %271 ], [ %270, %264 ]
  %275 = icmp eq i32 %274, 0
  br i1 %275, label %276, label %277

276:                                              ; preds = %273
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %262) #8
  br label %277

277:                                              ; preds = %258, %273, %276
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %259) #8
  %278 = icmp eq %"class.blink::JSONObject"* %260, null
  br i1 %278, label %325, label %279

279:                                              ; preds = %277
  %280 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %260, i64 0, i32 2, i32 0, i32 2
  %281 = load i32, i32* %280, align 4
  %282 = icmp eq i32 %281, 0
  br i1 %282, label %850, label %283

283:                                              ; preds = %279
  %284 = bitcast %"struct.std::__1::pair.216"* %20 to i8*
  %285 = getelementptr inbounds %"struct.std::__1::pair.216", %"struct.std::__1::pair.216"* %20, i64 0, i32 0, i32 0, i32 0
  %286 = getelementptr inbounds %"struct.std::__1::pair.216", %"struct.std::__1::pair.216"* %20, i64 0, i32 1
  %287 = getelementptr inbounds %"struct.std::__1::pair.216", %"struct.std::__1::pair.216"* %20, i64 0, i32 0
  %288 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %24, i64 0, i32 0
  %289 = bitcast %"class.WTF::String"* %25 to i8*
  %290 = bitcast %"class.WTF::StringAppend"* %26 to i8*
  %291 = bitcast %"class.WTF::StringAppend"* %26 to i64*
  %292 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %26, i64 0, i32 0, i32 1, i32 0, i32 0
  %293 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %26, i64 0, i32 1
  %294 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %25, i64 0, i32 0, i32 0
  %295 = bitcast %"class.blink::ConsoleLogger"* %3 to void (%"class.blink::ConsoleLogger"*, i32, i32, %"class.WTF::String"*, i1)***
  %296 = bitcast %"struct.std::__1::pair"* %27 to i8*
  %297 = bitcast %"class.WTF::HashMap"* %28 to i8*
  %298 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %24, i64 0, i32 4, i32 0, i32 0
  %299 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %27, i64 0, i32 0, i32 0, i32 0
  %300 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %27, i64 0, i32 1
  %301 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %27, i64 0, i32 1, i32 0, i32 1
  %302 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %27, i64 0, i32 1, i32 0, i32 2
  %303 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %27, i64 0, i32 1, i32 0, i32 3
  %304 = bitcast %"class.WTF::HashMap"* %28 to i64*
  %305 = bitcast %"class.WTF::HashMap"* %300 to i64*
  %306 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %28, i64 0, i32 0, i32 1
  %307 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %28, i64 0, i32 0, i32 2
  %308 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %28, i64 0, i32 0, i32 3
  %309 = bitcast %"struct.std::__1::pair"* %27 to i64*
  %310 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %27, i64 0, i32 1, i32 0, i32 0
  %311 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %28, i64 0, i32 0, i32 0
  %312 = bitcast %"class.blink::ScriptValue"* %21 to i8*
  %313 = bitcast %"class.WTF::String"* %22 to i8*
  %314 = bitcast %"class.WTF::StringAppend"* %23 to i8*
  %315 = bitcast %"class.WTF::StringAppend"* %23 to i64*
  %316 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %23, i64 0, i32 0, i32 1, i32 0, i32 0
  %317 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %23, i64 0, i32 1
  %318 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %22, i64 0, i32 0, i32 0
  %319 = bitcast %"class.blink::Modulator"* %0 to void (%"class.blink::ScriptValue"*, %"class.blink::Modulator"*, %"class.WTF::String"*)***
  %320 = bitcast %"class.blink::ScriptValue"* %21 to i64*
  %321 = bitcast %"class.blink::ScriptValue"* %4 to i64*
  %322 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %4, i64 0, i32 1
  %323 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %21, i64 0, i32 1
  %324 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %21, i64 0, i32 1, i32 1, i32 0
  br label %368

325:                                              ; preds = %277
  %326 = bitcast %"class.blink::ScriptValue"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %326) #8
  %327 = bitcast %"class.WTF::String"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %327) #8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %19, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.5, i64 0, i64 0), i64 73) #8
  %328 = bitcast %"class.blink::Modulator"* %0 to void (%"class.blink::ScriptValue"*, %"class.blink::Modulator"*, %"class.WTF::String"*)***
  %329 = load void (%"class.blink::ScriptValue"*, %"class.blink::Modulator"*, %"class.WTF::String"*)**, void (%"class.blink::ScriptValue"*, %"class.blink::Modulator"*, %"class.WTF::String"*)*** %328, align 8
  %330 = getelementptr inbounds void (%"class.blink::ScriptValue"*, %"class.blink::Modulator"*, %"class.WTF::String"*)*, void (%"class.blink::ScriptValue"*, %"class.blink::Modulator"*, %"class.WTF::String"*)** %329, i64 15
  %331 = load void (%"class.blink::ScriptValue"*, %"class.blink::Modulator"*, %"class.WTF::String"*)*, void (%"class.blink::ScriptValue"*, %"class.blink::Modulator"*, %"class.WTF::String"*)** %330, align 8
  call void %331(%"class.blink::ScriptValue"* nonnull sret %18, %"class.blink::Modulator"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %19) #8
  %332 = bitcast %"class.blink::ScriptValue"* %18 to i64*
  %333 = load i64, i64* %332, align 8
  %334 = bitcast %"class.blink::ScriptValue"* %4 to i64*
  store i64 %333, i64* %334, align 8
  %335 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %4, i64 0, i32 1
  %336 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %18, i64 0, i32 1
  %337 = call dereferenceable(16) %"class.blink::WorldSafeV8Reference"* @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEaSERKS3_(%"class.blink::WorldSafeV8Reference"* %335, %"class.blink::WorldSafeV8Reference"* dereferenceable(16) %336) #8
  %338 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %18, i64 0, i32 1, i32 1, i32 0
  %339 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %338, align 8
  %340 = icmp eq %"class.blink::DOMWrapperWorld"* %339, null
  br i1 %340, label %348, label %341

341:                                              ; preds = %325
  %342 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %339, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %342) #8
  %343 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %339, i64 0, i32 0, i32 0, i32 0, i32 0
  %344 = load i32, i32* %343, align 4
  %345 = icmp eq i32 %344, 0
  br i1 %345, label %346, label %348

346:                                              ; preds = %341
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %339) #8
  %347 = bitcast %"class.blink::DOMWrapperWorld"* %339 to i8*
  call void @free(i8* %347) #8
  br label %348

348:                                              ; preds = %325, %341, %346
  %349 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %19, i64 0, i32 0, i32 0
  %350 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %349, align 8
  %351 = icmp eq %"class.WTF::StringImpl"* %350, null
  br i1 %351, label %365, label %352

352:                                              ; preds = %348
  %353 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %350, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %354 = load atomic i32, i32* %353 monotonic, align 4
  %355 = and i32 %354, 2
  %356 = icmp eq i32 %355, 0
  %357 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %350, i64 0, i32 0
  %358 = load i32, i32* %357, align 4
  br i1 %356, label %359, label %361

359:                                              ; preds = %352
  %360 = add i32 %358, -1
  store i32 %360, i32* %357, align 4
  br label %361

361:                                              ; preds = %359, %352
  %362 = phi i32 [ %360, %359 ], [ %358, %352 ]
  %363 = icmp eq i32 %362, 0
  br i1 %363, label %364, label %365

364:                                              ; preds = %361
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %350) #8
  br label %365

365:                                              ; preds = %364, %361, %348
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %327) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %326) #8
  %366 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_9ImportMapEEEPhm(i64 40) #8
  call void @llvm.memset.p0i8.i64(i8* align 8 %366, i8 0, i64 20, i1 false) #8
  %367 = getelementptr inbounds i8, i8* %366, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %367, i8 0, i64 16, i1 false) #8
  br label %875

368:                                              ; preds = %283, %846
  %369 = phi i32 [ 0, %283 ], [ %847, %846 ]
  %370 = phi %"class.blink::ImportMap"* [ undef, %283 ], [ %828, %846 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %284) #8
  %371 = call { %"class.WTF::StringImpl"*, %"class.blink::JSONValue"* } @_ZNK5blink10JSONObject2atEj(%"class.blink::JSONObject"* nonnull %260, i32 %369) #8
  %372 = extractvalue { %"class.WTF::StringImpl"*, %"class.blink::JSONValue"* } %371, 0
  store %"class.WTF::StringImpl"* %372, %"class.WTF::StringImpl"** %285, align 8
  %373 = extractvalue { %"class.WTF::StringImpl"*, %"class.blink::JSONValue"* } %371, 1
  store %"class.blink::JSONValue"* %373, %"class.blink::JSONValue"** %286, align 8
  %374 = call %"class.blink::JSONObject"* @_ZNK5blink10JSONObject13GetJSONObjectERKN3WTF6StringE(%"class.blink::JSONObject"* nonnull %260, %"class.WTF::String"* nonnull dereferenceable(8) %287) #8
  %375 = icmp eq %"class.blink::JSONObject"* %374, null
  br i1 %375, label %376, label %534

376:                                              ; preds = %368
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %312) #8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %313) #8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %314) #8
  %377 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %285, align 8
  %378 = icmp eq %"class.WTF::StringImpl"* %377, null
  br i1 %378, label %452, label %379

379:                                              ; preds = %376
  %380 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %377, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %381 = load atomic i32, i32* %380 monotonic, align 4
  %382 = and i32 %381, 2
  %383 = icmp eq i32 %382, 0
  %384 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %377, i64 0, i32 0
  %385 = load i32, i32* %384, align 4
  br i1 %383, label %386, label %396

386:                                              ; preds = %379
  %387 = zext i32 %385 to i33
  %388 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %387, i33 1) #8
  %389 = extractvalue { i33, i1 } %388, 1
  %390 = extractvalue { i33, i1 } %388, 0
  %391 = icmp slt i33 %390, 0
  %392 = or i1 %389, %391
  br i1 %392, label %393, label %394, !prof !2

393:                                              ; preds = %386
  call void @llvm.trap() #8
  unreachable

394:                                              ; preds = %386
  %395 = trunc i33 %390 to i32
  store i32 %395, i32* %384, align 4
  br label %396

396:                                              ; preds = %394, %379
  %397 = phi i32 [ %395, %394 ], [ %385, %379 ]
  %398 = load atomic i32, i32* %380 monotonic, align 4
  %399 = and i32 %398, 2
  %400 = icmp eq i32 %399, 0
  br i1 %400, label %401, label %411

401:                                              ; preds = %396
  %402 = zext i32 %397 to i33
  %403 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %402, i33 1) #8
  %404 = extractvalue { i33, i1 } %403, 1
  %405 = extractvalue { i33, i1 } %403, 0
  %406 = icmp slt i33 %405, 0
  %407 = or i1 %404, %406
  br i1 %407, label %408, label %409, !prof !2

408:                                              ; preds = %401
  call void @llvm.trap() #8
  unreachable

409:                                              ; preds = %401
  %410 = trunc i33 %405 to i32
  store i32 %410, i32* %384, align 4
  br label %411

411:                                              ; preds = %409, %396
  %412 = phi i32 [ %410, %409 ], [ %397, %396 ]
  %413 = load atomic i32, i32* %380 monotonic, align 4
  %414 = and i32 %413, 2
  %415 = icmp eq i32 %414, 0
  br i1 %415, label %416, label %418

416:                                              ; preds = %411
  %417 = add i32 %412, -1
  store i32 %417, i32* %384, align 4
  br label %418

418:                                              ; preds = %416, %411
  %419 = phi i32 [ %417, %416 ], [ %412, %411 ]
  %420 = icmp eq i32 %419, 0
  br i1 %420, label %421, label %422

421:                                              ; preds = %418
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %377) #8
  br label %422

422:                                              ; preds = %418, %421
  %423 = load atomic i32, i32* %380 monotonic, align 4, !noalias !3
  %424 = and i32 %423, 2
  %425 = icmp eq i32 %424, 0
  %426 = load i32, i32* %384, align 4
  br i1 %425, label %427, label %437

427:                                              ; preds = %422
  %428 = zext i32 %426 to i33
  %429 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %428, i33 1) #8
  %430 = extractvalue { i33, i1 } %429, 1
  %431 = extractvalue { i33, i1 } %429, 0
  %432 = icmp slt i33 %431, 0
  %433 = or i1 %430, %432
  br i1 %433, label %434, label %435, !prof !2

434:                                              ; preds = %427
  call void @llvm.trap() #8, !noalias !3
  unreachable

435:                                              ; preds = %427
  %436 = trunc i33 %431 to i32
  store i32 %436, i32* %384, align 4, !noalias !3
  br label %437

437:                                              ; preds = %422, %435
  %438 = phi i32 [ %436, %435 ], [ %426, %422 ]
  store i64 ptrtoint ([65 x i8]* @.str.6 to i64), i64* %315, align 8, !alias.scope !3
  store %"class.WTF::StringImpl"* %377, %"class.WTF::StringImpl"** %316, align 8, !alias.scope !3
  %439 = load atomic i32, i32* %380 monotonic, align 4, !noalias !3
  %440 = and i32 %439, 2
  %441 = icmp eq i32 %440, 0
  br i1 %441, label %442, label %453

442:                                              ; preds = %437
  %443 = zext i32 %438 to i33
  %444 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %443, i33 1) #8
  %445 = extractvalue { i33, i1 } %444, 1
  %446 = extractvalue { i33, i1 } %444, 0
  %447 = icmp slt i33 %446, 0
  %448 = or i1 %445, %447
  br i1 %448, label %449, label %450, !prof !2

449:                                              ; preds = %442
  call void @llvm.trap() #8, !noalias !3
  unreachable

450:                                              ; preds = %442
  %451 = trunc i33 %446 to i32
  store i32 %451, i32* %384, align 4, !noalias !3
  br label %453

452:                                              ; preds = %376
  store i64 ptrtoint ([65 x i8]* @.str.6 to i64), i64* %315, align 8, !alias.scope !3
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %316, align 8, !alias.scope !3
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.7, i64 0, i64 0), i8** %317, align 8, !alias.scope !3
  br label %464

453:                                              ; preds = %450, %437
  %454 = phi i32 [ %451, %450 ], [ %438, %437 ]
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.7, i64 0, i64 0), i8** %317, align 8, !alias.scope !3
  %455 = load atomic i32, i32* %380 monotonic, align 4, !noalias !3
  %456 = and i32 %455, 2
  %457 = icmp eq i32 %456, 0
  br i1 %457, label %458, label %460

458:                                              ; preds = %453
  %459 = add i32 %454, -1
  store i32 %459, i32* %384, align 4, !noalias !3
  br label %460

460:                                              ; preds = %458, %453
  %461 = phi i32 [ %459, %458 ], [ %454, %453 ]
  %462 = icmp eq i32 %461, 0
  br i1 %462, label %463, label %464

463:                                              ; preds = %460
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %377) #8, !noalias !3
  br label %464

464:                                              ; preds = %452, %460, %463
  %465 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %23)
  store %"class.WTF::StringImpl"* %465, %"class.WTF::StringImpl"** %318, align 8
  %466 = load void (%"class.blink::ScriptValue"*, %"class.blink::Modulator"*, %"class.WTF::String"*)**, void (%"class.blink::ScriptValue"*, %"class.blink::Modulator"*, %"class.WTF::String"*)*** %319, align 8
  %467 = getelementptr inbounds void (%"class.blink::ScriptValue"*, %"class.blink::Modulator"*, %"class.WTF::String"*)*, void (%"class.blink::ScriptValue"*, %"class.blink::Modulator"*, %"class.WTF::String"*)** %466, i64 15
  %468 = load void (%"class.blink::ScriptValue"*, %"class.blink::Modulator"*, %"class.WTF::String"*)*, void (%"class.blink::ScriptValue"*, %"class.blink::Modulator"*, %"class.WTF::String"*)** %467, align 8
  call void %468(%"class.blink::ScriptValue"* nonnull sret %21, %"class.blink::Modulator"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %22) #8
  %469 = load i64, i64* %320, align 8
  store i64 %469, i64* %321, align 8
  %470 = call dereferenceable(16) %"class.blink::WorldSafeV8Reference"* @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEaSERKS3_(%"class.blink::WorldSafeV8Reference"* %322, %"class.blink::WorldSafeV8Reference"* dereferenceable(16) %323) #8
  %471 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %324, align 8
  %472 = icmp eq %"class.blink::DOMWrapperWorld"* %471, null
  br i1 %472, label %480, label %473

473:                                              ; preds = %464
  %474 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %471, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %474) #8
  %475 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %471, i64 0, i32 0, i32 0, i32 0, i32 0
  %476 = load i32, i32* %475, align 4
  %477 = icmp eq i32 %476, 0
  br i1 %477, label %478, label %480

478:                                              ; preds = %473
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %471) #8
  %479 = bitcast %"class.blink::DOMWrapperWorld"* %471 to i8*
  call void @free(i8* %479) #8
  br label %480

480:                                              ; preds = %464, %473, %478
  %481 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %318, align 8
  %482 = icmp eq %"class.WTF::StringImpl"* %481, null
  br i1 %482, label %496, label %483

483:                                              ; preds = %480
  %484 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %481, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %485 = load atomic i32, i32* %484 monotonic, align 4
  %486 = and i32 %485, 2
  %487 = icmp eq i32 %486, 0
  %488 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %481, i64 0, i32 0
  %489 = load i32, i32* %488, align 4
  br i1 %487, label %490, label %492

490:                                              ; preds = %483
  %491 = add i32 %489, -1
  store i32 %491, i32* %488, align 4
  br label %492

492:                                              ; preds = %490, %483
  %493 = phi i32 [ %491, %490 ], [ %489, %483 ]
  %494 = icmp eq i32 %493, 0
  br i1 %494, label %495, label %496

495:                                              ; preds = %492
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %481) #8
  br label %496

496:                                              ; preds = %480, %492, %495
  %497 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %316, align 8
  %498 = icmp eq %"class.WTF::StringImpl"* %497, null
  br i1 %498, label %512, label %499

499:                                              ; preds = %496
  %500 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %497, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %501 = load atomic i32, i32* %500 monotonic, align 4
  %502 = and i32 %501, 2
  %503 = icmp eq i32 %502, 0
  %504 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %497, i64 0, i32 0
  %505 = load i32, i32* %504, align 4
  br i1 %503, label %506, label %508

506:                                              ; preds = %499
  %507 = add i32 %505, -1
  store i32 %507, i32* %504, align 4
  br label %508

508:                                              ; preds = %506, %499
  %509 = phi i32 [ %507, %506 ], [ %505, %499 ]
  %510 = icmp eq i32 %509, 0
  br i1 %510, label %511, label %512

511:                                              ; preds = %508
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %497) #8
  br label %512

512:                                              ; preds = %496, %508, %511
  br i1 %378, label %526, label %513

513:                                              ; preds = %512
  %514 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %377, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %515 = load atomic i32, i32* %514 monotonic, align 4
  %516 = and i32 %515, 2
  %517 = icmp eq i32 %516, 0
  %518 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %377, i64 0, i32 0
  %519 = load i32, i32* %518, align 4
  br i1 %517, label %520, label %522

520:                                              ; preds = %513
  %521 = add i32 %519, -1
  store i32 %521, i32* %518, align 4
  br label %522

522:                                              ; preds = %520, %513
  %523 = phi i32 [ %521, %520 ], [ %519, %513 ]
  %524 = icmp eq i32 %523, 0
  br i1 %524, label %525, label %526

525:                                              ; preds = %522
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %377) #8
  br label %526

526:                                              ; preds = %512, %522, %525
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %314) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %313) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %312) #8
  %527 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_9ImportMapEEEPhm(i64 40) #8
  %528 = bitcast i8* %527 to %"class.blink::ImportMap"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %527, i8 0, i64 20, i1 false) #8
  %529 = getelementptr inbounds i8, i8* %527, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %529, i8 0, i64 16, i1 false) #8
  %530 = getelementptr inbounds i8, i8* %527, i64 -4
  %531 = bitcast i8* %530 to i16*
  %532 = load atomic i16, i16* %531 monotonic, align 2
  %533 = or i16 %532, 1
  store atomic i16 %533, i16* %531 release, align 2
  br label %827

534:                                              ; preds = %368
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %288) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %288, i8 -86, i64 112, i1 false)
  call void @_ZN5blink4KURLC1ERKS0_RKN3WTF6StringE(%"class.blink::KURL"* nonnull %24, %"class.blink::KURL"* dereferenceable(112) %2, %"class.WTF::String"* nonnull dereferenceable(8) %287) #8
  %535 = call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* nonnull %24) #8
  br i1 %535, label %675, label %536

536:                                              ; preds = %534
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %289) #8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %290) #8
  %537 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %285, align 8
  %538 = icmp eq %"class.WTF::StringImpl"* %537, null
  br i1 %538, label %612, label %539

539:                                              ; preds = %536
  %540 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %537, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %541 = load atomic i32, i32* %540 monotonic, align 4
  %542 = and i32 %541, 2
  %543 = icmp eq i32 %542, 0
  %544 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %537, i64 0, i32 0
  %545 = load i32, i32* %544, align 4
  br i1 %543, label %546, label %556

546:                                              ; preds = %539
  %547 = zext i32 %545 to i33
  %548 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %547, i33 1) #8
  %549 = extractvalue { i33, i1 } %548, 1
  %550 = extractvalue { i33, i1 } %548, 0
  %551 = icmp slt i33 %550, 0
  %552 = or i1 %549, %551
  br i1 %552, label %553, label %554, !prof !2

553:                                              ; preds = %546
  call void @llvm.trap() #8
  unreachable

554:                                              ; preds = %546
  %555 = trunc i33 %550 to i32
  store i32 %555, i32* %544, align 4
  br label %556

556:                                              ; preds = %554, %539
  %557 = phi i32 [ %555, %554 ], [ %545, %539 ]
  %558 = load atomic i32, i32* %540 monotonic, align 4
  %559 = and i32 %558, 2
  %560 = icmp eq i32 %559, 0
  br i1 %560, label %561, label %571

561:                                              ; preds = %556
  %562 = zext i32 %557 to i33
  %563 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %562, i33 1) #8
  %564 = extractvalue { i33, i1 } %563, 1
  %565 = extractvalue { i33, i1 } %563, 0
  %566 = icmp slt i33 %565, 0
  %567 = or i1 %564, %566
  br i1 %567, label %568, label %569, !prof !2

568:                                              ; preds = %561
  call void @llvm.trap() #8
  unreachable

569:                                              ; preds = %561
  %570 = trunc i33 %565 to i32
  store i32 %570, i32* %544, align 4
  br label %571

571:                                              ; preds = %569, %556
  %572 = phi i32 [ %570, %569 ], [ %557, %556 ]
  %573 = load atomic i32, i32* %540 monotonic, align 4
  %574 = and i32 %573, 2
  %575 = icmp eq i32 %574, 0
  br i1 %575, label %576, label %578

576:                                              ; preds = %571
  %577 = add i32 %572, -1
  store i32 %577, i32* %544, align 4
  br label %578

578:                                              ; preds = %576, %571
  %579 = phi i32 [ %577, %576 ], [ %572, %571 ]
  %580 = icmp eq i32 %579, 0
  br i1 %580, label %581, label %582

581:                                              ; preds = %578
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %537) #8
  br label %582

582:                                              ; preds = %578, %581
  %583 = load atomic i32, i32* %540 monotonic, align 4, !noalias !6
  %584 = and i32 %583, 2
  %585 = icmp eq i32 %584, 0
  %586 = load i32, i32* %544, align 4
  br i1 %585, label %587, label %597

587:                                              ; preds = %582
  %588 = zext i32 %586 to i33
  %589 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %588, i33 1) #8
  %590 = extractvalue { i33, i1 } %589, 1
  %591 = extractvalue { i33, i1 } %589, 0
  %592 = icmp slt i33 %591, 0
  %593 = or i1 %590, %592
  br i1 %593, label %594, label %595, !prof !2

594:                                              ; preds = %587
  call void @llvm.trap() #8, !noalias !6
  unreachable

595:                                              ; preds = %587
  %596 = trunc i33 %591 to i32
  store i32 %596, i32* %544, align 4, !noalias !6
  br label %597

597:                                              ; preds = %582, %595
  %598 = phi i32 [ %596, %595 ], [ %586, %582 ]
  store i64 ptrtoint ([16 x i8]* @.str.8 to i64), i64* %291, align 8, !alias.scope !6
  store %"class.WTF::StringImpl"* %537, %"class.WTF::StringImpl"** %292, align 8, !alias.scope !6
  %599 = load atomic i32, i32* %540 monotonic, align 4, !noalias !6
  %600 = and i32 %599, 2
  %601 = icmp eq i32 %600, 0
  br i1 %601, label %602, label %613

602:                                              ; preds = %597
  %603 = zext i32 %598 to i33
  %604 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %603, i33 1) #8
  %605 = extractvalue { i33, i1 } %604, 1
  %606 = extractvalue { i33, i1 } %604, 0
  %607 = icmp slt i33 %606, 0
  %608 = or i1 %605, %607
  br i1 %608, label %609, label %610, !prof !2

609:                                              ; preds = %602
  call void @llvm.trap() #8, !noalias !6
  unreachable

610:                                              ; preds = %602
  %611 = trunc i33 %606 to i32
  store i32 %611, i32* %544, align 4, !noalias !6
  br label %613

612:                                              ; preds = %536
  store i64 ptrtoint ([16 x i8]* @.str.8 to i64), i64* %291, align 8, !alias.scope !6
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %292, align 8, !alias.scope !6
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.9, i64 0, i64 0), i8** %293, align 8, !alias.scope !6
  br label %624

613:                                              ; preds = %610, %597
  %614 = phi i32 [ %611, %610 ], [ %598, %597 ]
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.9, i64 0, i64 0), i8** %293, align 8, !alias.scope !6
  %615 = load atomic i32, i32* %540 monotonic, align 4, !noalias !6
  %616 = and i32 %615, 2
  %617 = icmp eq i32 %616, 0
  br i1 %617, label %618, label %620

618:                                              ; preds = %613
  %619 = add i32 %614, -1
  store i32 %619, i32* %544, align 4, !noalias !6
  br label %620

620:                                              ; preds = %618, %613
  %621 = phi i32 [ %619, %618 ], [ %614, %613 ]
  %622 = icmp eq i32 %621, 0
  br i1 %622, label %623, label %624

623:                                              ; preds = %620
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %537) #8, !noalias !6
  br label %624

624:                                              ; preds = %612, %620, %623
  %625 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %26)
  store %"class.WTF::StringImpl"* %625, %"class.WTF::StringImpl"** %294, align 8
  %626 = load void (%"class.blink::ConsoleLogger"*, i32, i32, %"class.WTF::String"*, i1)**, void (%"class.blink::ConsoleLogger"*, i32, i32, %"class.WTF::String"*, i1)*** %295, align 8
  %627 = getelementptr inbounds void (%"class.blink::ConsoleLogger"*, i32, i32, %"class.WTF::String"*, i1)*, void (%"class.blink::ConsoleLogger"*, i32, i32, %"class.WTF::String"*, i1)** %626, i64 3
  %628 = load void (%"class.blink::ConsoleLogger"*, i32, i32, %"class.WTF::String"*, i1)*, void (%"class.blink::ConsoleLogger"*, i32, i32, %"class.WTF::String"*, i1)** %627, align 8
  call void %628(%"class.blink::ConsoleLogger"* %3, i32 8, i32 2, %"class.WTF::String"* nonnull dereferenceable(8) %25, i1 zeroext false) #8
  %629 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %294, align 8
  %630 = icmp eq %"class.WTF::StringImpl"* %629, null
  br i1 %630, label %644, label %631

631:                                              ; preds = %624
  %632 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %629, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %633 = load atomic i32, i32* %632 monotonic, align 4
  %634 = and i32 %633, 2
  %635 = icmp eq i32 %634, 0
  %636 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %629, i64 0, i32 0
  %637 = load i32, i32* %636, align 4
  br i1 %635, label %638, label %640

638:                                              ; preds = %631
  %639 = add i32 %637, -1
  store i32 %639, i32* %636, align 4
  br label %640

640:                                              ; preds = %638, %631
  %641 = phi i32 [ %639, %638 ], [ %637, %631 ]
  %642 = icmp eq i32 %641, 0
  br i1 %642, label %643, label %644

643:                                              ; preds = %640
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %629) #8
  br label %644

644:                                              ; preds = %624, %640, %643
  %645 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %292, align 8
  %646 = icmp eq %"class.WTF::StringImpl"* %645, null
  br i1 %646, label %660, label %647

647:                                              ; preds = %644
  %648 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %645, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %649 = load atomic i32, i32* %648 monotonic, align 4
  %650 = and i32 %649, 2
  %651 = icmp eq i32 %650, 0
  %652 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %645, i64 0, i32 0
  %653 = load i32, i32* %652, align 4
  br i1 %651, label %654, label %656

654:                                              ; preds = %647
  %655 = add i32 %653, -1
  store i32 %655, i32* %652, align 4
  br label %656

656:                                              ; preds = %654, %647
  %657 = phi i32 [ %655, %654 ], [ %653, %647 ]
  %658 = icmp eq i32 %657, 0
  br i1 %658, label %659, label %660

659:                                              ; preds = %656
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %645) #8
  br label %660

660:                                              ; preds = %644, %656, %659
  br i1 %538, label %674, label %661

661:                                              ; preds = %660
  %662 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %537, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %663 = load atomic i32, i32* %662 monotonic, align 4
  %664 = and i32 %663, 2
  %665 = icmp eq i32 %664, 0
  %666 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %537, i64 0, i32 0
  %667 = load i32, i32* %666, align 4
  br i1 %665, label %668, label %670

668:                                              ; preds = %661
  %669 = add i32 %667, -1
  store i32 %669, i32* %666, align 4
  br label %670

670:                                              ; preds = %668, %661
  %671 = phi i32 [ %669, %668 ], [ %667, %661 ]
  %672 = icmp eq i32 %671, 0
  br i1 %672, label %673, label %674

673:                                              ; preds = %670
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %537) #8
  br label %674

674:                                              ; preds = %660, %670, %673
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %290) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %289) #8
  br label %825

675:                                              ; preds = %534
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %296) #8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %297) #8
  call void @_ZN5blink9ImportMap28SortAndNormalizeSpecifierMapEPKNS_10JSONObjectERKNS_4KURLERNS_13ConsoleLoggerE(%"class.WTF::HashMap"* nonnull sret %28, %"class.blink::JSONObject"* nonnull %374, %"class.blink::KURL"* dereferenceable(112) %2, %"class.blink::ConsoleLogger"* dereferenceable(8) %3)
  %676 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %298, align 8, !noalias !9
  store %"class.WTF::StringImpl"* %676, %"class.WTF::StringImpl"** %299, align 8, !alias.scope !9
  %677 = icmp eq %"class.WTF::StringImpl"* %676, null
  br i1 %677, label %695, label %678

678:                                              ; preds = %675
  %679 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %676, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %680 = load atomic i32, i32* %679 monotonic, align 4, !noalias !9
  %681 = and i32 %680, 2
  %682 = icmp eq i32 %681, 0
  br i1 %682, label %683, label %695

683:                                              ; preds = %678
  %684 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %676, i64 0, i32 0
  %685 = load i32, i32* %684, align 4, !noalias !9
  %686 = zext i32 %685 to i33
  %687 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %686, i33 1) #8
  %688 = extractvalue { i33, i1 } %687, 1
  %689 = extractvalue { i33, i1 } %687, 0
  %690 = icmp slt i33 %689, 0
  %691 = or i1 %688, %690
  br i1 %691, label %692, label %693, !prof !2

692:                                              ; preds = %683
  call void @llvm.trap() #8, !noalias !9
  unreachable

693:                                              ; preds = %683
  %694 = trunc i33 %689 to i32
  store i32 %694, i32* %684, align 4, !noalias !9
  br label %695

695:                                              ; preds = %675, %678, %693
  store i64 0, i64* %305, align 8, !alias.scope !9
  %696 = load i64, i64* %304, align 8, !noalias !9
  store atomic i64 0, i64* %304 monotonic, align 8, !noalias !9
  store atomic i64 %696, i64* %305 monotonic, align 8, !alias.scope !9
  %697 = load i32, i32* %306, align 8, !noalias !9
  store i32 %697, i32* %301, align 8, !alias.scope !9
  store i32 0, i32* %306, align 8, !noalias !9
  %698 = load i32, i32* %307, align 4, !noalias !9
  store i32 %698, i32* %302, align 4, !alias.scope !9
  store i32 0, i32* %307, align 4, !noalias !9
  %699 = load i32, i32* %308, align 8, !noalias !9
  %700 = and i32 %699, 2147483647
  store i32 %700, i32* %303, align 8, !alias.scope !9
  %701 = and i32 %699, -2147483648
  store i32 %701, i32* %308, align 8, !noalias !9
  %702 = load i32, i32* %237, align 4
  %703 = load i32, i32* %236, align 8
  %704 = icmp eq i32 %702, %703
  br i1 %704, label %733, label %705, !prof !2

705:                                              ; preds = %695
  %706 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %235, align 8
  %707 = zext i32 %702 to i64
  %708 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %706, i64 %707
  %709 = load i64, i64* %309, align 8
  %710 = bitcast %"struct.std::__1::pair"* %708 to i64*
  store i64 %709, i64* %710, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %299, align 8
  %711 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %706, i64 %707, i32 1
  %712 = bitcast %"class.WTF::HashMap"* %711 to i8*
  %713 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %706, i64 %707, i32 1, i32 0, i32 1
  %714 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %706, i64 %707, i32 1, i32 0, i32 2
  %715 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %706, i64 %707, i32 1, i32 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %712, i8 0, i64 20, i1 false) #8
  %716 = load i64, i64* %305, align 8
  %717 = bitcast %"class.WTF::HashMap"* %711 to i64*
  store atomic i64 0, i64* %305 monotonic, align 8
  store atomic i64 %716, i64* %717 monotonic, align 8
  %718 = load i32, i32* %713, align 4
  %719 = load i32, i32* %301, align 8
  store i32 %719, i32* %713, align 4
  store i32 %718, i32* %301, align 8
  %720 = load i32, i32* %714, align 4
  %721 = load i32, i32* %302, align 4
  store i32 %721, i32* %714, align 4
  store i32 %720, i32* %302, align 4
  %722 = load i32, i32* %715, align 8
  %723 = and i32 %722, 2147483647
  %724 = load i32, i32* %303, align 8
  %725 = and i32 %724, 2147483647
  %726 = and i32 %722, -2147483648
  %727 = or i32 %725, %726
  store i32 %727, i32* %715, align 8
  %728 = load i32, i32* %303, align 8
  %729 = and i32 %728, -2147483648
  %730 = or i32 %729, %723
  store i32 %730, i32* %303, align 8
  %731 = load i32, i32* %237, align 4
  %732 = add i32 %731, 1
  store i32 %732, i32* %237, align 4
  br label %734

733:                                              ; preds = %695
  call void @_ZN3WTF6VectorINSt3__14pairINS_6StringENS_7HashMapIS3_N5blink4KURLENS_10StringHashENS_10HashTraitsIS3_EENS8_IS6_EENS_18PartitionAllocatorEEEEELj0ESB_E14AppendSlowCaseISD_EEvOT_(%"class.WTF::Vector"* nonnull %15, %"struct.std::__1::pair"* nonnull dereferenceable(32) %27) #8
  br label %734

734:                                              ; preds = %705, %733
  %735 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %310, align 8
  %736 = icmp eq %"struct.WTF::KeyValuePair"* %735, null
  br i1 %736, label %771, label %737, !prof !12

737:                                              ; preds = %734
  %738 = load i32, i32* %301, align 8
  %739 = icmp eq i32 %738, 0
  br i1 %739, label %769, label %740

740:                                              ; preds = %737
  %741 = zext i32 %738 to i64
  br label %742

742:                                              ; preds = %766, %740
  %743 = phi i64 [ 0, %740 ], [ %767, %766 ]
  %744 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %735, i64 %743
  %745 = bitcast %"struct.WTF::KeyValuePair"* %744 to i8**
  %746 = load i8*, i8** %745, align 8
  %747 = icmp eq i8* %746, inttoptr (i64 -1 to i8*)
  br i1 %747, label %766, label %748

748:                                              ; preds = %742
  %749 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %735, i64 %743, i32 1
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %749) #8
  %750 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %744, i64 0, i32 0, i32 0, i32 0
  %751 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %750, align 8
  %752 = icmp eq %"class.WTF::StringImpl"* %751, null
  br i1 %752, label %766, label %753

753:                                              ; preds = %748
  %754 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %751, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %755 = load atomic i32, i32* %754 monotonic, align 4
  %756 = and i32 %755, 2
  %757 = icmp eq i32 %756, 0
  %758 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %751, i64 0, i32 0
  %759 = load i32, i32* %758, align 4
  br i1 %757, label %760, label %762

760:                                              ; preds = %753
  %761 = add i32 %759, -1
  store i32 %761, i32* %758, align 4
  br label %762

762:                                              ; preds = %760, %753
  %763 = phi i32 [ %761, %760 ], [ %759, %753 ]
  %764 = icmp eq i32 %763, 0
  br i1 %764, label %765, label %766

765:                                              ; preds = %762
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %751) #8
  br label %766

766:                                              ; preds = %765, %762, %748, %742
  %767 = add nuw nsw i64 %743, 1
  %768 = icmp eq i64 %767, %741
  br i1 %768, label %769, label %742

769:                                              ; preds = %766, %737
  %770 = bitcast %"struct.WTF::KeyValuePair"* %735 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %770) #8
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %310, align 8
  br label %771

771:                                              ; preds = %769, %734
  %772 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %299, align 8
  %773 = icmp eq %"class.WTF::StringImpl"* %772, null
  br i1 %773, label %787, label %774

774:                                              ; preds = %771
  %775 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %772, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %776 = load atomic i32, i32* %775 monotonic, align 4
  %777 = and i32 %776, 2
  %778 = icmp eq i32 %777, 0
  %779 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %772, i64 0, i32 0
  %780 = load i32, i32* %779, align 4
  br i1 %778, label %781, label %783

781:                                              ; preds = %774
  %782 = add i32 %780, -1
  store i32 %782, i32* %779, align 4
  br label %783

783:                                              ; preds = %781, %774
  %784 = phi i32 [ %782, %781 ], [ %780, %774 ]
  %785 = icmp eq i32 %784, 0
  br i1 %785, label %786, label %787

786:                                              ; preds = %783
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %772) #8
  br label %787

787:                                              ; preds = %771, %783, %786
  %788 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %311, align 8
  %789 = icmp eq %"struct.WTF::KeyValuePair"* %788, null
  br i1 %789, label %824, label %790, !prof !12

790:                                              ; preds = %787
  %791 = load i32, i32* %306, align 8
  %792 = icmp eq i32 %791, 0
  br i1 %792, label %822, label %793

793:                                              ; preds = %790
  %794 = zext i32 %791 to i64
  br label %795

795:                                              ; preds = %819, %793
  %796 = phi i64 [ 0, %793 ], [ %820, %819 ]
  %797 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %788, i64 %796
  %798 = bitcast %"struct.WTF::KeyValuePair"* %797 to i8**
  %799 = load i8*, i8** %798, align 8
  %800 = icmp eq i8* %799, inttoptr (i64 -1 to i8*)
  br i1 %800, label %819, label %801

801:                                              ; preds = %795
  %802 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %788, i64 %796, i32 1
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %802) #8
  %803 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %797, i64 0, i32 0, i32 0, i32 0
  %804 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %803, align 8
  %805 = icmp eq %"class.WTF::StringImpl"* %804, null
  br i1 %805, label %819, label %806

806:                                              ; preds = %801
  %807 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %804, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %808 = load atomic i32, i32* %807 monotonic, align 4
  %809 = and i32 %808, 2
  %810 = icmp eq i32 %809, 0
  %811 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %804, i64 0, i32 0
  %812 = load i32, i32* %811, align 4
  br i1 %810, label %813, label %815

813:                                              ; preds = %806
  %814 = add i32 %812, -1
  store i32 %814, i32* %811, align 4
  br label %815

815:                                              ; preds = %813, %806
  %816 = phi i32 [ %814, %813 ], [ %812, %806 ]
  %817 = icmp eq i32 %816, 0
  br i1 %817, label %818, label %819

818:                                              ; preds = %815
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %804) #8
  br label %819

819:                                              ; preds = %818, %815, %801, %795
  %820 = add nuw nsw i64 %796, 1
  %821 = icmp eq i64 %820, %794
  br i1 %821, label %822, label %795

822:                                              ; preds = %819, %790
  %823 = bitcast %"struct.WTF::KeyValuePair"* %788 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %823) #8
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %311, align 8
  br label %824

824:                                              ; preds = %787, %822
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %297) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %296) #8
  br label %825

825:                                              ; preds = %824, %674
  %826 = phi i32 [ 0, %824 ], [ 4, %674 ]
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %24) #8
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %288) #8
  br label %827

827:                                              ; preds = %825, %526
  %828 = phi %"class.blink::ImportMap"* [ %370, %825 ], [ %528, %526 ]
  %829 = phi i32 [ %826, %825 ], [ 1, %526 ]
  %830 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %285, align 8
  %831 = icmp eq %"class.WTF::StringImpl"* %830, null
  br i1 %831, label %845, label %832

832:                                              ; preds = %827
  %833 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %830, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %834 = load atomic i32, i32* %833 monotonic, align 4
  %835 = and i32 %834, 2
  %836 = icmp eq i32 %835, 0
  %837 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %830, i64 0, i32 0
  %838 = load i32, i32* %837, align 4
  br i1 %836, label %839, label %841

839:                                              ; preds = %832
  %840 = add i32 %838, -1
  store i32 %840, i32* %837, align 4
  br label %841

841:                                              ; preds = %839, %832
  %842 = phi i32 [ %840, %839 ], [ %838, %832 ]
  %843 = icmp eq i32 %842, 0
  br i1 %843, label %844, label %845

844:                                              ; preds = %841
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %830) #8
  br label %845

845:                                              ; preds = %827, %841, %844
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %284) #8
  switch i32 %829, label %884 [
    i32 0, label %846
    i32 4, label %846
  ]

846:                                              ; preds = %845, %845
  %847 = add nuw i32 %369, 1
  %848 = load i32, i32* %280, align 4
  %849 = icmp ult i32 %847, %848
  br i1 %849, label %368, label %850

850:                                              ; preds = %846, %279
  %851 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %235, align 8
  %852 = load i32, i32* %237, align 4
  %853 = zext i32 %852 to i64
  %854 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %851, i64 %853
  call fastcc void @"_ZNSt3__16__sortIRZN5blink9ImportMap5ParseERKNS1_9ModulatorERKN3WTF6StringERKNS1_4KURLERNS1_13ConsoleLoggerEPNS1_11ScriptValueEE3$_0PNS_4pairIS7_NS6_7HashMapIS7_SA_NS6_10StringHashENS6_10HashTraitsIS7_EENSM_ISA_EENS6_18PartitionAllocatorEEEEEEEvT0_ST_T_"(%"struct.std::__1::pair"* %851, %"struct.std::__1::pair"* %854) #8
  br label %855

855:                                              ; preds = %850, %257
  %856 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_9ImportMapEEEPhm(i64 40) #8
  %857 = getelementptr inbounds i8, i8* %856, i64 8
  %858 = bitcast i8* %857 to i32*
  %859 = getelementptr inbounds i8, i8* %856, i64 12
  %860 = bitcast i8* %859 to i32*
  %861 = getelementptr inbounds i8, i8* %856, i64 16
  %862 = bitcast i8* %861 to i32*
  %863 = bitcast i8* %856 to i64*
  store atomic i64 %233, i64* %863 monotonic, align 8
  store i32 %232, i32* %858, align 4
  store i32 %231, i32* %860, align 4
  store i32 %230, i32* %862, align 8
  %864 = getelementptr inbounds i8, i8* %856, i64 24
  %865 = getelementptr inbounds i8, i8* %856, i64 32
  %866 = bitcast i8* %865 to i32*
  %867 = getelementptr inbounds i8, i8* %856, i64 36
  %868 = bitcast i8* %867 to i32*
  %869 = bitcast %"class.WTF::Vector"* %15 to i64*
  %870 = bitcast i8* %864 to i64*
  store i64 0, i64* %870, align 8
  %871 = load i64, i64* %869, align 8
  %872 = bitcast i8* %864 to i64*
  store atomic i64 0, i64* %869 monotonic, align 8
  store atomic i64 %871, i64* %872 monotonic, align 8
  %873 = load i32, i32* %236, align 8
  store i32 %873, i32* %866, align 4
  store i32 0, i32* %236, align 8
  %874 = load i32, i32* %237, align 4
  store i32 %874, i32* %868, align 4
  store i32 0, i32* %237, align 4
  br label %875

875:                                              ; preds = %855, %365
  %876 = phi i8* [ %856, %855 ], [ %366, %365 ]
  %877 = phi i32 [ 0, %855 ], [ %232, %365 ]
  %878 = phi i64 [ 0, %855 ], [ %233, %365 ]
  %879 = bitcast i8* %876 to %"class.blink::ImportMap"*
  %880 = getelementptr inbounds i8, i8* %876, i64 -4
  %881 = bitcast i8* %880 to i16*
  %882 = load atomic i16, i16* %881 monotonic, align 2
  %883 = or i16 %882, 1
  store atomic i16 %883, i16* %881 release, align 2
  br label %884

884:                                              ; preds = %845, %875
  %885 = phi i32 [ %877, %875 ], [ %232, %845 ]
  %886 = phi i64 [ %878, %875 ], [ %233, %845 ]
  %887 = phi %"class.blink::ImportMap"* [ %879, %875 ], [ %828, %845 ]
  %888 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %235, align 8
  %889 = icmp eq %"struct.std::__1::pair"* %888, null
  br i1 %889, label %962, label %890, !prof !12

890:                                              ; preds = %884
  %891 = bitcast %"struct.std::__1::pair"* %888 to i8*
  %892 = load i32, i32* %237, align 4
  %893 = icmp eq i32 %892, 0
  br i1 %893, label %960, label %894, !prof !2

894:                                              ; preds = %890
  %895 = zext i32 %892 to i64
  %896 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %888, i64 %895
  br label %897

897:                                              ; preds = %954, %894
  %898 = phi %"struct.std::__1::pair"* [ %955, %954 ], [ %888, %894 ]
  %899 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %898, i64 0, i32 1, i32 0, i32 0
  %900 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %899, align 8
  %901 = icmp eq %"struct.WTF::KeyValuePair"* %900, null
  br i1 %901, label %937, label %902, !prof !12

902:                                              ; preds = %897
  %903 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %898, i64 0, i32 1, i32 0, i32 1
  %904 = load i32, i32* %903, align 8
  %905 = icmp eq i32 %904, 0
  br i1 %905, label %935, label %906

906:                                              ; preds = %902
  %907 = zext i32 %904 to i64
  br label %908

908:                                              ; preds = %932, %906
  %909 = phi i64 [ 0, %906 ], [ %933, %932 ]
  %910 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %900, i64 %909
  %911 = bitcast %"struct.WTF::KeyValuePair"* %910 to i8**
  %912 = load i8*, i8** %911, align 8
  %913 = icmp eq i8* %912, inttoptr (i64 -1 to i8*)
  br i1 %913, label %932, label %914

914:                                              ; preds = %908
  %915 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %900, i64 %909, i32 1
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %915) #8
  %916 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %910, i64 0, i32 0, i32 0, i32 0
  %917 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %916, align 8
  %918 = icmp eq %"class.WTF::StringImpl"* %917, null
  br i1 %918, label %932, label %919

919:                                              ; preds = %914
  %920 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %917, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %921 = load atomic i32, i32* %920 monotonic, align 4
  %922 = and i32 %921, 2
  %923 = icmp eq i32 %922, 0
  %924 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %917, i64 0, i32 0
  %925 = load i32, i32* %924, align 4
  br i1 %923, label %926, label %928

926:                                              ; preds = %919
  %927 = add i32 %925, -1
  store i32 %927, i32* %924, align 4
  br label %928

928:                                              ; preds = %926, %919
  %929 = phi i32 [ %927, %926 ], [ %925, %919 ]
  %930 = icmp eq i32 %929, 0
  br i1 %930, label %931, label %932

931:                                              ; preds = %928
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %917) #8
  br label %932

932:                                              ; preds = %931, %928, %914, %908
  %933 = add nuw nsw i64 %909, 1
  %934 = icmp eq i64 %933, %907
  br i1 %934, label %935, label %908

935:                                              ; preds = %932, %902
  %936 = bitcast %"struct.WTF::KeyValuePair"* %900 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %936) #8
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %899, align 8
  br label %937

937:                                              ; preds = %935, %897
  %938 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %898, i64 0, i32 0, i32 0, i32 0
  %939 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %938, align 8
  %940 = icmp eq %"class.WTF::StringImpl"* %939, null
  br i1 %940, label %954, label %941

941:                                              ; preds = %937
  %942 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %939, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %943 = load atomic i32, i32* %942 monotonic, align 4
  %944 = and i32 %943, 2
  %945 = icmp eq i32 %944, 0
  %946 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %939, i64 0, i32 0
  %947 = load i32, i32* %946, align 4
  br i1 %945, label %948, label %950

948:                                              ; preds = %941
  %949 = add i32 %947, -1
  store i32 %949, i32* %946, align 4
  br label %950

950:                                              ; preds = %948, %941
  %951 = phi i32 [ %949, %948 ], [ %947, %941 ]
  %952 = icmp eq i32 %951, 0
  br i1 %952, label %953, label %954

953:                                              ; preds = %950
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %939) #8
  br label %954

954:                                              ; preds = %937, %950, %953
  %955 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %898, i64 1
  %956 = icmp eq %"struct.std::__1::pair"* %955, %896
  br i1 %956, label %957, label %897

957:                                              ; preds = %954
  store i32 0, i32* %237, align 4
  %958 = bitcast %"class.WTF::Vector"* %15 to i8**
  %959 = load i8*, i8** %958, align 8
  br label %960

960:                                              ; preds = %957, %890
  %961 = phi i8* [ %959, %957 ], [ %891, %890 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %961) #8
  store %"struct.std::__1::pair"* null, %"struct.std::__1::pair"** %235, align 8
  br label %962

962:                                              ; preds = %960, %884
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %234) #8
  %963 = inttoptr i64 %886 to %"struct.WTF::KeyValuePair"*
  %964 = icmp eq i64 %886, 0
  br i1 %964, label %998, label %965, !prof !12

965:                                              ; preds = %962
  %966 = icmp eq i32 %885, 0
  br i1 %966, label %996, label %967

967:                                              ; preds = %965
  %968 = zext i32 %885 to i64
  br label %969

969:                                              ; preds = %993, %967
  %970 = phi i64 [ 0, %967 ], [ %994, %993 ]
  %971 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %963, i64 %970
  %972 = bitcast %"struct.WTF::KeyValuePair"* %971 to i8**
  %973 = load i8*, i8** %972, align 8
  %974 = icmp eq i8* %973, inttoptr (i64 -1 to i8*)
  br i1 %974, label %993, label %975

975:                                              ; preds = %969
  %976 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %963, i64 %970, i32 1
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %976) #8
  %977 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %971, i64 0, i32 0, i32 0, i32 0
  %978 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %977, align 8
  %979 = icmp eq %"class.WTF::StringImpl"* %978, null
  br i1 %979, label %993, label %980

980:                                              ; preds = %975
  %981 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %978, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %982 = load atomic i32, i32* %981 monotonic, align 4
  %983 = and i32 %982, 2
  %984 = icmp eq i32 %983, 0
  %985 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %978, i64 0, i32 0
  %986 = load i32, i32* %985, align 4
  br i1 %984, label %987, label %989

987:                                              ; preds = %980
  %988 = add i32 %986, -1
  store i32 %988, i32* %985, align 4
  br label %989

989:                                              ; preds = %987, %980
  %990 = phi i32 [ %988, %987 ], [ %986, %980 ]
  %991 = icmp eq i32 %990, 0
  br i1 %991, label %992, label %993

992:                                              ; preds = %989
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %978) #8
  br label %993

993:                                              ; preds = %992, %989, %975, %969
  %994 = add nuw nsw i64 %970, 1
  %995 = icmp eq i64 %994, %968
  br i1 %995, label %996, label %969

996:                                              ; preds = %993, %965
  %997 = inttoptr i64 %886 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %997) #8
  br label %998

998:                                              ; preds = %962, %996, %221
  %999 = phi %"class.blink::ImportMap"* [ %223, %221 ], [ %887, %996 ], [ %887, %962 ]
  %1000 = bitcast %"class.blink::JSONValue"* %29 to void (%"class.blink::JSONObject"*)***
  %1001 = load void (%"class.blink::JSONObject"*)**, void (%"class.blink::JSONObject"*)*** %1000, align 8
  %1002 = getelementptr inbounds void (%"class.blink::JSONObject"*)*, void (%"class.blink::JSONObject"*)** %1001, i64 1
  %1003 = load void (%"class.blink::JSONObject"*)*, void (%"class.blink::JSONObject"*)** %1002, align 8
  call void %1003(%"class.blink::JSONObject"* nonnull %75) #8
  br label %1012

1004:                                             ; preds = %70, %67, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #8
  %1005 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_9ImportMapEEEPhm(i64 40) #8
  %1006 = bitcast i8* %1005 to %"class.blink::ImportMap"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1005, i8 0, i64 20, i1 false) #8
  %1007 = getelementptr inbounds i8, i8* %1005, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %1007, i8 0, i64 16, i1 false) #8
  %1008 = getelementptr inbounds i8, i8* %1005, i64 -4
  %1009 = bitcast i8* %1008 to i16*
  %1010 = load atomic i16, i16* %1009 monotonic, align 2
  %1011 = or i16 %1010, 1
  store atomic i16 %1011, i16* %1009 release, align 2
  br label %1012

1012:                                             ; preds = %1004, %998, %120
  %1013 = phi %"class.blink::ImportMap"* [ %1006, %1004 ], [ %999, %998 ], [ %122, %120 ]
  ret %"class.blink::ImportMap"* %1013
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.blink::JSONValue"* @_ZN5blink9ParseJSONERKN3WTF6StringEPNS_14JSONParseErrorE(%"class.WTF::String"* dereferenceable(8), %"struct.blink::JSONParseError"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.blink::JSONValue"* @_ZNK5blink10JSONObject3GetERKN3WTF6StringE(%"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.blink::JSONObject"* @_ZNK5blink10JSONObject13GetJSONObjectERKN3WTF6StringE(%"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9ImportMap28SortAndNormalizeSpecifierMapEPKNS_10JSONObjectERKNS_4KURLERNS_13ConsoleLoggerE(%"class.WTF::HashMap"* noalias sret, %"class.blink::JSONObject"*, %"class.blink::KURL"* dereferenceable(112), %"class.blink::ConsoleLogger"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::ParsedSpecifier", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::StringAppend.217", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::StringAppend.217", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.blink::KURL", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.WTF::StringAppend.217", align 8
  %15 = alloca %"class.WTF::String", align 8
  %16 = alloca %"class.WTF::StringAppend.224", align 8
  %17 = alloca %"class.WTF::StringAppend", align 8
  %18 = alloca %"class.WTF::String", align 8
  %19 = alloca %"class.blink::ParsedSpecifier", align 8
  %20 = alloca %"struct.std::__1::pair.216", align 8
  %21 = alloca %"class.WTF::String", align 8
  %22 = alloca %"class.WTF::String", align 8
  %23 = alloca %"class.WTF::String", align 8
  %24 = alloca %"class.blink::KURL", align 8
  %25 = alloca %"class.WTF::String", align 8
  %26 = bitcast %"class.WTF::HashMap"* %0 to i8*
  %27 = bitcast %"class.WTF::HashMap"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 -86, i64 24, i1 false)
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 20, i1 false) #8
  %28 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %1, i64 0, i32 2, i32 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %753, label %31

31:                                               ; preds = %4
  %32 = bitcast %"struct.std::__1::pair.216"* %20 to i8*
  %33 = getelementptr inbounds %"struct.std::__1::pair.216", %"struct.std::__1::pair.216"* %20, i64 0, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::__1::pair.216", %"struct.std::__1::pair.216"* %20, i64 0, i32 1
  %35 = bitcast %"class.WTF::String"* %21 to i8*
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::pair.216", %"struct.std::__1::pair.216"* %20, i64 0, i32 0
  %38 = bitcast %"class.blink::ParsedSpecifier"* %19 to i8*
  %39 = getelementptr inbounds %"class.blink::ParsedSpecifier", %"class.blink::ParsedSpecifier"* %19, i64 0, i32 0
  %40 = getelementptr inbounds %"class.blink::ParsedSpecifier", %"class.blink::ParsedSpecifier"* %19, i64 0, i32 2, i32 0, i32 0
  %41 = getelementptr inbounds %"class.blink::ParsedSpecifier", %"class.blink::ParsedSpecifier"* %19, i64 0, i32 1
  %42 = bitcast %"class.WTF::String"* %25 to i8*
  %43 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %25, i64 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %0, i64 0, i32 0
  %45 = bitcast %"class.WTF::String"* %22 to i8*
  %46 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %22, i64 0, i32 0, i32 0
  %47 = bitcast %"class.WTF::String"* %23 to i8*
  %48 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %23, i64 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %24, i64 0, i32 0
  %50 = bitcast %"class.blink::ParsedSpecifier"* %5 to i8*
  %51 = getelementptr inbounds %"class.blink::ParsedSpecifier", %"class.blink::ParsedSpecifier"* %5, i64 0, i32 0
  %52 = bitcast %"class.WTF::StringView"* %10 to i8*
  %53 = bitcast %"class.WTF::StringView"* %10 to i64*
  %54 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %55 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  %56 = bitcast %"class.WTF::StringView"* %12 to i8*
  %57 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %11, i64 0, i32 0
  %58 = bitcast %"class.WTF::StringView"* %12 to i64*
  %59 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  %60 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  %61 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %11, i64 0, i32 4, i32 0, i32 0
  %62 = bitcast %"class.WTF::String"* %13 to i8*
  %63 = bitcast %"class.WTF::StringAppend.217"* %14 to i8*
  %64 = getelementptr inbounds %"class.WTF::StringAppend.217", %"class.WTF::StringAppend.217"* %14, i64 0, i32 0
  %65 = getelementptr inbounds %"class.WTF::StringAppend.217", %"class.WTF::StringAppend.217"* %14, i64 0, i32 1, i32 0, i32 0
  %66 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  %67 = bitcast %"class.WTF::String"* %8 to i8*
  %68 = bitcast %"class.WTF::StringAppend.217"* %9 to i8*
  %69 = getelementptr inbounds %"class.WTF::StringAppend.217", %"class.WTF::StringAppend.217"* %9, i64 0, i32 0
  %70 = getelementptr inbounds %"class.WTF::StringAppend.217", %"class.WTF::StringAppend.217"* %9, i64 0, i32 1, i32 0, i32 0
  %71 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %72 = bitcast %"class.WTF::String"* %6 to i8*
  %73 = bitcast %"class.WTF::StringAppend.217"* %7 to i8*
  %74 = getelementptr inbounds %"class.WTF::StringAppend.217", %"class.WTF::StringAppend.217"* %7, i64 0, i32 0
  %75 = getelementptr inbounds %"class.WTF::StringAppend.217", %"class.WTF::StringAppend.217"* %7, i64 0, i32 1, i32 0, i32 0
  %76 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %77 = getelementptr inbounds %"class.blink::ParsedSpecifier", %"class.blink::ParsedSpecifier"* %5, i64 0, i32 2, i32 0, i32 0
  %78 = getelementptr inbounds %"class.blink::ParsedSpecifier", %"class.blink::ParsedSpecifier"* %5, i64 0, i32 1
  %79 = bitcast %"class.WTF::String"* %18 to i8*
  %80 = bitcast %"class.WTF::String"* %15 to i8*
  %81 = bitcast %"class.WTF::StringAppend.224"* %16 to i8*
  %82 = bitcast %"class.WTF::StringAppend"* %17 to i8*
  %83 = bitcast %"class.WTF::StringAppend"* %17 to i64*
  %84 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %17, i64 0, i32 0, i32 1, i32 0, i32 0
  %85 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %17, i64 0, i32 1
  %86 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 0, i32 0, i32 0
  %87 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  %88 = bitcast %"class.blink::ConsoleLogger"* %3 to void (%"class.blink::ConsoleLogger"*, i32, i32, %"class.WTF::String"*, i1)***
  %89 = getelementptr inbounds %"class.WTF::StringAppend.224", %"class.WTF::StringAppend.224"* %16, i64 0, i32 1, i32 0, i32 0
  %90 = getelementptr inbounds %"class.WTF::StringAppend.224", %"class.WTF::StringAppend.224"* %16, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  br label %91

91:                                               ; preds = %31, %749
  %92 = phi i32 [ 0, %31 ], [ %750, %749 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #8
  %93 = call { %"class.WTF::StringImpl"*, %"class.blink::JSONValue"* } @_ZNK5blink10JSONObject2atEj(%"class.blink::JSONObject"* %1, i32 %92) #8
  %94 = extractvalue { %"class.WTF::StringImpl"*, %"class.blink::JSONValue"* } %93, 0
  store %"class.WTF::StringImpl"* %94, %"class.WTF::StringImpl"** %33, align 8
  %95 = extractvalue { %"class.WTF::StringImpl"*, %"class.blink::JSONValue"* } %93, 1
  store %"class.blink::JSONValue"* %95, %"class.blink::JSONValue"** %34, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #8
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %36, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %96, label %101, label %97

97:                                               ; preds = %91
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %309

101:                                              ; preds = %97, %91
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %18, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.26, i64 0, i64 0), i64 42) #8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %81) #8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %82) #8
  %102 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %103 = icmp eq %"class.WTF::StringImpl"* %102, null
  br i1 %103, label %178, label %104

104:                                              ; preds = %101
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  br i1 %108, label %111, label %121

111:                                              ; preds = %104
  %112 = zext i32 %110 to i33
  %113 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %112, i33 1) #8
  %114 = extractvalue { i33, i1 } %113, 1
  %115 = extractvalue { i33, i1 } %113, 0
  %116 = icmp slt i33 %115, 0
  %117 = or i1 %114, %116
  br i1 %117, label %118, label %119, !prof !2

118:                                              ; preds = %111
  call void @llvm.trap() #8
  unreachable

119:                                              ; preds = %111
  %120 = trunc i33 %115 to i32
  store i32 %120, i32* %109, align 4
  br label %121

121:                                              ; preds = %119, %104
  %122 = phi i32 [ %120, %119 ], [ %110, %104 ]
  %123 = load atomic i32, i32* %105 monotonic, align 4
  %124 = and i32 %123, 2
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %136

126:                                              ; preds = %121
  %127 = zext i32 %122 to i33
  %128 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %127, i33 1) #8
  %129 = extractvalue { i33, i1 } %128, 1
  %130 = extractvalue { i33, i1 } %128, 0
  %131 = icmp slt i33 %130, 0
  %132 = or i1 %129, %131
  br i1 %132, label %133, label %134, !prof !2

133:                                              ; preds = %126
  call void @llvm.trap() #8
  unreachable

134:                                              ; preds = %126
  %135 = trunc i33 %130 to i32
  store i32 %135, i32* %109, align 4
  br label %136

136:                                              ; preds = %134, %121
  %137 = phi i32 [ %135, %134 ], [ %122, %121 ]
  %138 = load atomic i32, i32* %105 monotonic, align 4
  %139 = and i32 %138, 2
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %143

141:                                              ; preds = %136
  %142 = add i32 %137, -1
  store i32 %142, i32* %109, align 4
  br label %143

143:                                              ; preds = %141, %136
  %144 = phi i32 [ %142, %141 ], [ %137, %136 ]
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %148

146:                                              ; preds = %143
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %102) #8
  %147 = load i32, i32* %109, align 4
  br label %148

148:                                              ; preds = %146, %143
  %149 = phi i32 [ %147, %146 ], [ %144, %143 ]
  %150 = load atomic i32, i32* %105 monotonic, align 4, !noalias !13
  %151 = and i32 %150, 2
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %163

153:                                              ; preds = %148
  %154 = zext i32 %149 to i33
  %155 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %154, i33 1) #8
  %156 = extractvalue { i33, i1 } %155, 1
  %157 = extractvalue { i33, i1 } %155, 0
  %158 = icmp slt i33 %157, 0
  %159 = or i1 %156, %158
  br i1 %159, label %160, label %161, !prof !2

160:                                              ; preds = %153
  call void @llvm.trap() #8, !noalias !13
  unreachable

161:                                              ; preds = %153
  %162 = trunc i33 %157 to i32
  store i32 %162, i32* %109, align 4, !noalias !13
  br label %163

163:                                              ; preds = %161, %148
  %164 = phi i32 [ %162, %161 ], [ %149, %148 ]
  store i64 ptrtoint ([28 x i8]* @.str.27 to i64), i64* %83, align 8, !alias.scope !13
  store %"class.WTF::StringImpl"* %102, %"class.WTF::StringImpl"** %84, align 8, !alias.scope !13
  %165 = load atomic i32, i32* %105 monotonic, align 4, !noalias !13
  %166 = and i32 %165, 2
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %179

168:                                              ; preds = %163
  %169 = zext i32 %164 to i33
  %170 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %169, i33 1) #8
  %171 = extractvalue { i33, i1 } %170, 1
  %172 = extractvalue { i33, i1 } %170, 0
  %173 = icmp slt i33 %172, 0
  %174 = or i1 %171, %173
  br i1 %174, label %175, label %176, !prof !2

175:                                              ; preds = %168
  call void @llvm.trap() #8, !noalias !13
  unreachable

176:                                              ; preds = %168
  %177 = trunc i33 %172 to i32
  store i32 %177, i32* %109, align 4, !noalias !13
  br label %179

178:                                              ; preds = %101
  store i64 ptrtoint ([28 x i8]* @.str.27 to i64), i64* %83, align 8, !alias.scope !13
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %84, align 8, !alias.scope !13
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28, i64 0, i64 0), i8** %85, align 8, !alias.scope !13
  br label %190

179:                                              ; preds = %176, %163
  %180 = phi i32 [ %177, %176 ], [ %164, %163 ]
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28, i64 0, i64 0), i8** %85, align 8, !alias.scope !13
  %181 = load atomic i32, i32* %105 monotonic, align 4, !noalias !13
  %182 = and i32 %181, 2
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %186

184:                                              ; preds = %179
  %185 = add i32 %180, -1
  store i32 %185, i32* %109, align 4, !noalias !13
  br label %186

186:                                              ; preds = %184, %179
  %187 = phi i32 [ %185, %184 ], [ %180, %179 ]
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %189, label %190

189:                                              ; preds = %186
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %102) #8, !noalias !13
  br label %190

190:                                              ; preds = %189, %186, %178
  %191 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %192 = icmp eq %"class.WTF::StringImpl"* %191, null
  br i1 %192, label %210, label %193

193:                                              ; preds = %190
  %194 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %195 = load atomic i32, i32* %194 monotonic, align 4
  %196 = and i32 %195, 2
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %210

198:                                              ; preds = %193
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 0
  %200 = load i32, i32* %199, align 4
  %201 = zext i32 %200 to i33
  %202 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %201, i33 1) #8
  %203 = extractvalue { i33, i1 } %202, 1
  %204 = extractvalue { i33, i1 } %202, 0
  %205 = icmp slt i33 %204, 0
  %206 = or i1 %203, %205
  br i1 %206, label %207, label %208, !prof !2

207:                                              ; preds = %198
  call void @llvm.trap() #8
  unreachable

208:                                              ; preds = %198
  %209 = trunc i33 %204 to i32
  store i32 %209, i32* %199, align 4
  br label %210

210:                                              ; preds = %208, %193, %190
  call void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.224"* nonnull sret %16, %"class.WTF::StringAppend"* nonnull dereferenceable(24) %17, %"class.WTF::StringImpl"* %191) #8
  %211 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EcvS3_Ev(%"class.WTF::StringAppend.224"* nonnull %16) #8
  store %"class.WTF::StringImpl"* %211, %"class.WTF::StringImpl"** %87, align 8
  %212 = load void (%"class.blink::ConsoleLogger"*, i32, i32, %"class.WTF::String"*, i1)**, void (%"class.blink::ConsoleLogger"*, i32, i32, %"class.WTF::String"*, i1)*** %88, align 8
  %213 = getelementptr inbounds void (%"class.blink::ConsoleLogger"*, i32, i32, %"class.WTF::String"*, i1)*, void (%"class.blink::ConsoleLogger"*, i32, i32, %"class.WTF::String"*, i1)** %212, i64 3
  %214 = load void (%"class.blink::ConsoleLogger"*, i32, i32, %"class.WTF::String"*, i1)*, void (%"class.blink::ConsoleLogger"*, i32, i32, %"class.WTF::String"*, i1)** %213, align 8
  call void %214(%"class.blink::ConsoleLogger"* %3, i32 8, i32 2, %"class.WTF::String"* nonnull dereferenceable(8) %15, i1 zeroext false) #8
  %215 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %87, align 8
  %216 = icmp eq %"class.WTF::StringImpl"* %215, null
  br i1 %216, label %230, label %217

217:                                              ; preds = %210
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %219 = load atomic i32, i32* %218 monotonic, align 4
  %220 = and i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 0
  %223 = load i32, i32* %222, align 4
  br i1 %221, label %224, label %226

224:                                              ; preds = %217
  %225 = add i32 %223, -1
  store i32 %225, i32* %222, align 4
  br label %226

226:                                              ; preds = %224, %217
  %227 = phi i32 [ %225, %224 ], [ %223, %217 ]
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %229, label %230

229:                                              ; preds = %226
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %215) #8
  br label %230

230:                                              ; preds = %229, %226, %210
  %231 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %232 = icmp eq %"class.WTF::StringImpl"* %231, null
  br i1 %232, label %246, label %233

233:                                              ; preds = %230
  %234 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %231, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %235 = load atomic i32, i32* %234 monotonic, align 4
  %236 = and i32 %235, 2
  %237 = icmp eq i32 %236, 0
  %238 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %231, i64 0, i32 0
  %239 = load i32, i32* %238, align 4
  br i1 %237, label %240, label %242

240:                                              ; preds = %233
  %241 = add i32 %239, -1
  store i32 %241, i32* %238, align 4
  br label %242

242:                                              ; preds = %240, %233
  %243 = phi i32 [ %241, %240 ], [ %239, %233 ]
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %245, label %246

245:                                              ; preds = %242
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %231) #8
  br label %246

246:                                              ; preds = %245, %242, %230
  %247 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  %248 = icmp eq %"class.WTF::StringImpl"* %247, null
  br i1 %248, label %262, label %249

249:                                              ; preds = %246
  %250 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %247, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %251 = load atomic i32, i32* %250 monotonic, align 4
  %252 = and i32 %251, 2
  %253 = icmp eq i32 %252, 0
  %254 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %247, i64 0, i32 0
  %255 = load i32, i32* %254, align 4
  br i1 %253, label %256, label %258

256:                                              ; preds = %249
  %257 = add i32 %255, -1
  store i32 %257, i32* %254, align 4
  br label %258

258:                                              ; preds = %256, %249
  %259 = phi i32 [ %257, %256 ], [ %255, %249 ]
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %261, label %262

261:                                              ; preds = %258
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %247) #8
  br label %262

262:                                              ; preds = %261, %258, %246
  %263 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %84, align 8
  %264 = icmp eq %"class.WTF::StringImpl"* %263, null
  br i1 %264, label %278, label %265

265:                                              ; preds = %262
  %266 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %263, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %267 = load atomic i32, i32* %266 monotonic, align 4
  %268 = and i32 %267, 2
  %269 = icmp eq i32 %268, 0
  %270 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %263, i64 0, i32 0
  %271 = load i32, i32* %270, align 4
  br i1 %269, label %272, label %274

272:                                              ; preds = %265
  %273 = add i32 %271, -1
  store i32 %273, i32* %270, align 4
  br label %274

274:                                              ; preds = %272, %265
  %275 = phi i32 [ %273, %272 ], [ %271, %265 ]
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %277, label %278

277:                                              ; preds = %274
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %263) #8
  br label %278

278:                                              ; preds = %277, %274, %262
  br i1 %103, label %292, label %279

279:                                              ; preds = %278
  %280 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %281 = load atomic i32, i32* %280 monotonic, align 4
  %282 = and i32 %281, 2
  %283 = icmp eq i32 %282, 0
  %284 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 0
  %285 = load i32, i32* %284, align 4
  br i1 %283, label %286, label %288

286:                                              ; preds = %279
  %287 = add i32 %285, -1
  store i32 %287, i32* %284, align 4
  br label %288

288:                                              ; preds = %286, %279
  %289 = phi i32 [ %287, %286 ], [ %285, %279 ]
  %290 = icmp eq i32 %289, 0
  br i1 %290, label %291, label %292

291:                                              ; preds = %288
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %102) #8
  br label %292

292:                                              ; preds = %291, %288, %278
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %82) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %81) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #8
  %293 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %294 = icmp eq %"class.WTF::StringImpl"* %293, null
  br i1 %294, label %308, label %295

295:                                              ; preds = %292
  %296 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %293, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %297 = load atomic i32, i32* %296 monotonic, align 4
  %298 = and i32 %297, 2
  %299 = icmp eq i32 %298, 0
  %300 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %293, i64 0, i32 0
  %301 = load i32, i32* %300, align 4
  br i1 %299, label %302, label %304

302:                                              ; preds = %295
  %303 = add i32 %301, -1
  store i32 %303, i32* %300, align 4
  br label %304

304:                                              ; preds = %302, %295
  %305 = phi i32 [ %303, %302 ], [ %301, %295 ]
  %306 = icmp eq i32 %305, 0
  br i1 %306, label %307, label %308

307:                                              ; preds = %304
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %293) #8
  br label %308

308:                                              ; preds = %292, %304, %307
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %36, align 8
  br label %733

309:                                              ; preds = %97
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %38) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 128, i1 false) #8
  call void @_ZN5blink15ParsedSpecifier6CreateERKN3WTF6StringERKNS_4KURLE(%"class.blink::ParsedSpecifier"* nonnull sret %19, %"class.WTF::String"* nonnull dereferenceable(8) %37, %"class.blink::KURL"* dereferenceable(112) %2) #8
  %310 = load i32, i32* %39, align 8
  %311 = icmp ult i32 %310, 2
  br i1 %311, label %312, label %332

312:                                              ; preds = %309
  %313 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %314 = icmp eq %"class.WTF::StringImpl"* %313, null
  br i1 %314, label %334, label %315

315:                                              ; preds = %312
  %316 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %313, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %317 = load atomic i32, i32* %316 monotonic, align 4
  %318 = and i32 %317, 2
  %319 = icmp eq i32 %318, 0
  br i1 %319, label %320, label %334

320:                                              ; preds = %315
  %321 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %313, i64 0, i32 0
  %322 = load i32, i32* %321, align 4
  %323 = zext i32 %322 to i33
  %324 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %323, i33 1) #8
  %325 = extractvalue { i33, i1 } %324, 1
  %326 = extractvalue { i33, i1 } %324, 0
  %327 = icmp slt i33 %326, 0
  %328 = or i1 %325, %327
  br i1 %328, label %329, label %330, !prof !2

329:                                              ; preds = %320
  call void @llvm.trap() #8
  unreachable

330:                                              ; preds = %320
  %331 = trunc i33 %326 to i32
  store i32 %331, i32* %321, align 4
  br label %334

332:                                              ; preds = %309
  %333 = call %"class.WTF::StringImpl"* @_ZNK5blink15ParsedSpecifier21GetImportMapKeyStringEv(%"class.blink::ParsedSpecifier"* nonnull %19) #8
  br label %334

334:                                              ; preds = %332, %330, %315, %312
  %335 = phi %"class.WTF::StringImpl"* [ %333, %332 ], [ null, %312 ], [ %313, %315 ], [ %313, %330 ]
  %336 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %337 = icmp eq %"class.WTF::StringImpl"* %336, null
  br i1 %337, label %351, label %338

338:                                              ; preds = %334
  %339 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %336, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %340 = load atomic i32, i32* %339 monotonic, align 4
  %341 = and i32 %340, 2
  %342 = icmp eq i32 %341, 0
  %343 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %336, i64 0, i32 0
  %344 = load i32, i32* %343, align 4
  br i1 %342, label %345, label %347

345:                                              ; preds = %338
  %346 = add i32 %344, -1
  store i32 %346, i32* %343, align 4
  br label %347

347:                                              ; preds = %345, %338
  %348 = phi i32 [ %346, %345 ], [ %344, %338 ]
  %349 = icmp eq i32 %348, 0
  br i1 %349, label %350, label %351

350:                                              ; preds = %347
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %336) #8
  br label %351

351:                                              ; preds = %334, %347, %350
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %41) #8
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %38) #8
  store %"class.WTF::StringImpl"* %335, %"class.WTF::StringImpl"** %36, align 8
  %352 = icmp eq %"class.WTF::StringImpl"* %335, null
  br i1 %352, label %733, label %353

353:                                              ; preds = %351
  %354 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %335, i64 0, i32 1
  %355 = load i32, i32* %354, align 4
  %356 = icmp eq i32 %355, 0
  br i1 %356, label %717, label %357

357:                                              ; preds = %353
  %358 = load %"class.blink::JSONValue"*, %"class.blink::JSONValue"** %34, align 8
  %359 = getelementptr inbounds %"class.blink::JSONValue", %"class.blink::JSONValue"* %358, i64 0, i32 1
  %360 = load i32, i32* %359, align 8
  switch i32 %360, label %717 [
    i32 4, label %361
    i32 0, label %691
    i32 1, label %691
    i32 2, label %691
    i32 3, label %691
    i32 5, label %691
    i32 6, label %691
  ]

361:                                              ; preds = %357
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %46, align 8
  %362 = call zeroext i1 @_ZNK5blink10JSONObject9GetStringERKN3WTF6StringEPS2_(%"class.blink::JSONObject"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %37, %"class.WTF::String"* nonnull %22) #8
  br i1 %362, label %389, label %363

363:                                              ; preds = %361
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %23, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i64 0, i64 0), i64 30) #8
  call fastcc void @_ZN5blink12_GLOBAL__N_122AddIgnoredValueMessageERNS_13ConsoleLoggerERKN3WTF6StringES6_(%"class.blink::ConsoleLogger"* dereferenceable(8) %3, %"class.WTF::String"* nonnull dereferenceable(8) %37, %"class.WTF::String"* nonnull dereferenceable(8) %23)
  %364 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %365 = icmp eq %"class.WTF::StringImpl"* %364, null
  br i1 %365, label %379, label %366

366:                                              ; preds = %363
  %367 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %364, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %368 = load atomic i32, i32* %367 monotonic, align 4
  %369 = and i32 %368, 2
  %370 = icmp eq i32 %369, 0
  %371 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %364, i64 0, i32 0
  %372 = load i32, i32* %371, align 4
  br i1 %370, label %373, label %375

373:                                              ; preds = %366
  %374 = add i32 %372, -1
  store i32 %374, i32* %371, align 4
  br label %375

375:                                              ; preds = %373, %366
  %376 = phi i32 [ %374, %373 ], [ %372, %366 ]
  %377 = icmp eq i32 %376, 0
  br i1 %377, label %378, label %379

378:                                              ; preds = %375
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %364) #8
  br label %379

379:                                              ; preds = %363, %375, %378
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #8
  %380 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink7NullURLEv() #8
  %381 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink4KURLEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKS1_RKS4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable"* %44, %"class.WTF::String"* nonnull dereferenceable(8) %21, %"class.blink::KURL"* dereferenceable(112) %380) #8
  %382 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %381, 1
  %383 = and i8 %382, 1
  %384 = icmp eq i8 %383, 0
  br i1 %384, label %385, label %674

385:                                              ; preds = %379
  %386 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %381, 0
  %387 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %386, i64 0, i32 1
  %388 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* %387, %"class.blink::KURL"* dereferenceable(112) %380) #8
  br label %674

389:                                              ; preds = %361
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %49) #8
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %50) #8, !noalias !16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 128, i1 false) #8, !noalias !16
  call void @_ZN5blink15ParsedSpecifier6CreateERKN3WTF6StringERKNS_4KURLE(%"class.blink::ParsedSpecifier"* nonnull sret %5, %"class.WTF::String"* nonnull dereferenceable(8) %22, %"class.blink::KURL"* dereferenceable(112) %2) #8, !noalias !16
  %390 = load i32, i32* %51, align 8, !noalias !16
  switch i32 %390, label %647 [
    i32 0, label %391
    i32 1, label %471
    i32 2, label %551
  ]

391:                                              ; preds = %389
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #8, !noalias !16
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %73) #8, !noalias !16
  %392 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8, !noalias !16
  %393 = icmp eq %"class.WTF::StringImpl"* %392, null
  br i1 %393, label %437, label %394

394:                                              ; preds = %391
  %395 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %392, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %396 = load atomic i32, i32* %395 monotonic, align 4
  %397 = and i32 %396, 2
  %398 = icmp eq i32 %397, 0
  %399 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %392, i64 0, i32 0
  %400 = load i32, i32* %399, align 4
  br i1 %398, label %401, label %411

401:                                              ; preds = %394
  %402 = zext i32 %400 to i33
  %403 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %402, i33 1) #8
  %404 = extractvalue { i33, i1 } %403, 1
  %405 = extractvalue { i33, i1 } %403, 0
  %406 = icmp slt i33 %405, 0
  %407 = or i1 %404, %406
  br i1 %407, label %408, label %409, !prof !2

408:                                              ; preds = %401
  call void @llvm.trap() #8
  unreachable

409:                                              ; preds = %401
  %410 = trunc i33 %405 to i32
  store i32 %410, i32* %399, align 4
  br label %411

411:                                              ; preds = %409, %394
  %412 = phi i32 [ %410, %409 ], [ %400, %394 ]
  %413 = load atomic i32, i32* %395 monotonic, align 4
  %414 = and i32 %413, 2
  %415 = icmp eq i32 %414, 0
  br i1 %415, label %416, label %426

416:                                              ; preds = %411
  %417 = zext i32 %412 to i33
  %418 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %417, i33 1) #8
  %419 = extractvalue { i33, i1 } %418, 1
  %420 = extractvalue { i33, i1 } %418, 0
  %421 = icmp slt i33 %420, 0
  %422 = or i1 %419, %421
  br i1 %422, label %423, label %424, !prof !2

423:                                              ; preds = %416
  call void @llvm.trap() #8
  unreachable

424:                                              ; preds = %416
  %425 = trunc i33 %420 to i32
  store i32 %425, i32* %399, align 4
  br label %426

426:                                              ; preds = %424, %411
  %427 = phi i32 [ %425, %424 ], [ %412, %411 ]
  %428 = load atomic i32, i32* %395 monotonic, align 4
  %429 = and i32 %428, 2
  %430 = icmp eq i32 %429, 0
  br i1 %430, label %431, label %433

431:                                              ; preds = %426
  %432 = add i32 %427, -1
  store i32 %432, i32* %399, align 4
  br label %433

433:                                              ; preds = %431, %426
  %434 = phi i32 [ %432, %431 ], [ %427, %426 ]
  %435 = icmp eq i32 %434, 0
  br i1 %435, label %436, label %437

436:                                              ; preds = %433
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %392) #8
  br label %437

437:                                              ; preds = %436, %433, %391
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.33, i64 0, i64 0), i8** %74, align 8, !noalias !16
  store %"class.WTF::StringImpl"* %392, %"class.WTF::StringImpl"** %75, align 8, !noalias !16
  %438 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend.217"* nonnull %7) #8
  store %"class.WTF::StringImpl"* %438, %"class.WTF::StringImpl"** %76, align 8, !noalias !16
  call fastcc void @_ZN5blink12_GLOBAL__N_122AddIgnoredValueMessageERNS_13ConsoleLoggerERKN3WTF6StringES6_(%"class.blink::ConsoleLogger"* dereferenceable(8) %3, %"class.WTF::String"* nonnull dereferenceable(8) %37, %"class.WTF::String"* nonnull dereferenceable(8) %6) #8
  %439 = icmp eq %"class.WTF::StringImpl"* %438, null
  br i1 %439, label %453, label %440

440:                                              ; preds = %437
  %441 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %438, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %442 = load atomic i32, i32* %441 monotonic, align 4
  %443 = and i32 %442, 2
  %444 = icmp eq i32 %443, 0
  %445 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %438, i64 0, i32 0
  %446 = load i32, i32* %445, align 4
  br i1 %444, label %447, label %449

447:                                              ; preds = %440
  %448 = add i32 %446, -1
  store i32 %448, i32* %445, align 4
  br label %449

449:                                              ; preds = %447, %440
  %450 = phi i32 [ %448, %447 ], [ %446, %440 ]
  %451 = icmp eq i32 %450, 0
  br i1 %451, label %452, label %453

452:                                              ; preds = %449
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %438) #8
  br label %453

453:                                              ; preds = %452, %449, %437
  %454 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8, !noalias !16
  %455 = icmp eq %"class.WTF::StringImpl"* %454, null
  br i1 %455, label %469, label %456

456:                                              ; preds = %453
  %457 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %454, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %458 = load atomic i32, i32* %457 monotonic, align 4
  %459 = and i32 %458, 2
  %460 = icmp eq i32 %459, 0
  %461 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %454, i64 0, i32 0
  %462 = load i32, i32* %461, align 4
  br i1 %460, label %463, label %465

463:                                              ; preds = %456
  %464 = add i32 %462, -1
  store i32 %464, i32* %461, align 4
  br label %465

465:                                              ; preds = %463, %456
  %466 = phi i32 [ %464, %463 ], [ %462, %456 ]
  %467 = icmp eq i32 %466, 0
  br i1 %467, label %468, label %469

468:                                              ; preds = %465
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %454) #8
  br label %469

469:                                              ; preds = %468, %465, %453
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %73) #8, !noalias !16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #8, !noalias !16
  %470 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink7NullURLEv() #8
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %24, %"class.blink::KURL"* dereferenceable(112) %470) #8
  br label %648

471:                                              ; preds = %389
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #8, !noalias !16
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %68) #8, !noalias !16
  %472 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8, !noalias !16
  %473 = icmp eq %"class.WTF::StringImpl"* %472, null
  br i1 %473, label %517, label %474

474:                                              ; preds = %471
  %475 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %472, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %476 = load atomic i32, i32* %475 monotonic, align 4
  %477 = and i32 %476, 2
  %478 = icmp eq i32 %477, 0
  %479 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %472, i64 0, i32 0
  %480 = load i32, i32* %479, align 4
  br i1 %478, label %481, label %491

481:                                              ; preds = %474
  %482 = zext i32 %480 to i33
  %483 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %482, i33 1) #8
  %484 = extractvalue { i33, i1 } %483, 1
  %485 = extractvalue { i33, i1 } %483, 0
  %486 = icmp slt i33 %485, 0
  %487 = or i1 %484, %486
  br i1 %487, label %488, label %489, !prof !2

488:                                              ; preds = %481
  call void @llvm.trap() #8
  unreachable

489:                                              ; preds = %481
  %490 = trunc i33 %485 to i32
  store i32 %490, i32* %479, align 4
  br label %491

491:                                              ; preds = %489, %474
  %492 = phi i32 [ %490, %489 ], [ %480, %474 ]
  %493 = load atomic i32, i32* %475 monotonic, align 4
  %494 = and i32 %493, 2
  %495 = icmp eq i32 %494, 0
  br i1 %495, label %496, label %506

496:                                              ; preds = %491
  %497 = zext i32 %492 to i33
  %498 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %497, i33 1) #8
  %499 = extractvalue { i33, i1 } %498, 1
  %500 = extractvalue { i33, i1 } %498, 0
  %501 = icmp slt i33 %500, 0
  %502 = or i1 %499, %501
  br i1 %502, label %503, label %504, !prof !2

503:                                              ; preds = %496
  call void @llvm.trap() #8
  unreachable

504:                                              ; preds = %496
  %505 = trunc i33 %500 to i32
  store i32 %505, i32* %479, align 4
  br label %506

506:                                              ; preds = %504, %491
  %507 = phi i32 [ %505, %504 ], [ %492, %491 ]
  %508 = load atomic i32, i32* %475 monotonic, align 4
  %509 = and i32 %508, 2
  %510 = icmp eq i32 %509, 0
  br i1 %510, label %511, label %513

511:                                              ; preds = %506
  %512 = add i32 %507, -1
  store i32 %512, i32* %479, align 4
  br label %513

513:                                              ; preds = %511, %506
  %514 = phi i32 [ %512, %511 ], [ %507, %506 ]
  %515 = icmp eq i32 %514, 0
  br i1 %515, label %516, label %517

516:                                              ; preds = %513
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %472) #8
  br label %517

517:                                              ; preds = %516, %513, %471
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.34, i64 0, i64 0), i8** %69, align 8, !noalias !16
  store %"class.WTF::StringImpl"* %472, %"class.WTF::StringImpl"** %70, align 8, !noalias !16
  %518 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend.217"* nonnull %9) #8
  store %"class.WTF::StringImpl"* %518, %"class.WTF::StringImpl"** %71, align 8, !noalias !16
  call fastcc void @_ZN5blink12_GLOBAL__N_122AddIgnoredValueMessageERNS_13ConsoleLoggerERKN3WTF6StringES6_(%"class.blink::ConsoleLogger"* dereferenceable(8) %3, %"class.WTF::String"* nonnull dereferenceable(8) %37, %"class.WTF::String"* nonnull dereferenceable(8) %8) #8
  %519 = icmp eq %"class.WTF::StringImpl"* %518, null
  br i1 %519, label %533, label %520

520:                                              ; preds = %517
  %521 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %518, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %522 = load atomic i32, i32* %521 monotonic, align 4
  %523 = and i32 %522, 2
  %524 = icmp eq i32 %523, 0
  %525 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %518, i64 0, i32 0
  %526 = load i32, i32* %525, align 4
  br i1 %524, label %527, label %529

527:                                              ; preds = %520
  %528 = add i32 %526, -1
  store i32 %528, i32* %525, align 4
  br label %529

529:                                              ; preds = %527, %520
  %530 = phi i32 [ %528, %527 ], [ %526, %520 ]
  %531 = icmp eq i32 %530, 0
  br i1 %531, label %532, label %533

532:                                              ; preds = %529
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %518) #8
  br label %533

533:                                              ; preds = %532, %529, %517
  %534 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8, !noalias !16
  %535 = icmp eq %"class.WTF::StringImpl"* %534, null
  br i1 %535, label %549, label %536

536:                                              ; preds = %533
  %537 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %534, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %538 = load atomic i32, i32* %537 monotonic, align 4
  %539 = and i32 %538, 2
  %540 = icmp eq i32 %539, 0
  %541 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %534, i64 0, i32 0
  %542 = load i32, i32* %541, align 4
  br i1 %540, label %543, label %545

543:                                              ; preds = %536
  %544 = add i32 %542, -1
  store i32 %544, i32* %541, align 4
  br label %545

545:                                              ; preds = %543, %536
  %546 = phi i32 [ %544, %543 ], [ %542, %536 ]
  %547 = icmp eq i32 %546, 0
  br i1 %547, label %548, label %549

548:                                              ; preds = %545
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %534) #8
  br label %549

549:                                              ; preds = %548, %545, %533
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %68) #8, !noalias !16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #8, !noalias !16
  %550 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink7NullURLEv() #8
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %24, %"class.blink::KURL"* dereferenceable(112) %550) #8
  br label %648

551:                                              ; preds = %389
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #8, !noalias !16
  %552 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %552, i64* %53, align 8, !noalias !16
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0), i8** %54, align 8, !noalias !16
  store i32 1, i32* %55, align 8, !noalias !16
  %553 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8, !noalias !16
  %554 = icmp eq %"class.WTF::StringImpl"* %553, null
  br i1 %554, label %555, label %556

555:                                              ; preds = %551
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #8, !noalias !16
  br label %564

556:                                              ; preds = %551
  %557 = call zeroext i1 @_ZNK3WTF10StringImpl8EndsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %553, %"class.WTF::StringView"* nonnull dereferenceable(24) %10) #8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #8, !noalias !16
  br i1 %557, label %558, label %564

558:                                              ; preds = %556
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %57) #8, !noalias !16
  call void @_ZNK5blink15ParsedSpecifier6GetUrlEv(%"class.blink::KURL"* nonnull sret %11, %"class.blink::ParsedSpecifier"* nonnull %5) #8
  %559 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %559, i64* %58, align 8, !noalias !16
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0), i8** %59, align 8, !noalias !16
  store i32 1, i32* %60, align 8, !noalias !16
  %560 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8, !noalias !16
  %561 = icmp eq %"class.WTF::StringImpl"* %560, null
  br i1 %561, label %565, label %562

562:                                              ; preds = %558
  %563 = call zeroext i1 @_ZNK3WTF10StringImpl8EndsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %560, %"class.WTF::StringView"* nonnull dereferenceable(24) %12) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #8, !noalias !16
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %57) #8, !noalias !16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #8, !noalias !16
  br i1 %563, label %646, label %566

564:                                              ; preds = %556, %555
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #8, !noalias !16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #8, !noalias !16
  br label %646

565:                                              ; preds = %558
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #8, !noalias !16
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %57) #8, !noalias !16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #8, !noalias !16
  br label %566

566:                                              ; preds = %565, %562
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #8, !noalias !16
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %63) #8, !noalias !16
  %567 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8, !noalias !16
  %568 = icmp eq %"class.WTF::StringImpl"* %567, null
  br i1 %568, label %612, label %569

569:                                              ; preds = %566
  %570 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %567, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %571 = load atomic i32, i32* %570 monotonic, align 4
  %572 = and i32 %571, 2
  %573 = icmp eq i32 %572, 0
  %574 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %567, i64 0, i32 0
  %575 = load i32, i32* %574, align 4
  br i1 %573, label %576, label %586

576:                                              ; preds = %569
  %577 = zext i32 %575 to i33
  %578 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %577, i33 1) #8
  %579 = extractvalue { i33, i1 } %578, 1
  %580 = extractvalue { i33, i1 } %578, 0
  %581 = icmp slt i33 %580, 0
  %582 = or i1 %579, %581
  br i1 %582, label %583, label %584, !prof !2

583:                                              ; preds = %576
  call void @llvm.trap() #8
  unreachable

584:                                              ; preds = %576
  %585 = trunc i33 %580 to i32
  store i32 %585, i32* %574, align 4
  br label %586

586:                                              ; preds = %584, %569
  %587 = phi i32 [ %585, %584 ], [ %575, %569 ]
  %588 = load atomic i32, i32* %570 monotonic, align 4
  %589 = and i32 %588, 2
  %590 = icmp eq i32 %589, 0
  br i1 %590, label %591, label %601

591:                                              ; preds = %586
  %592 = zext i32 %587 to i33
  %593 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %592, i33 1) #8
  %594 = extractvalue { i33, i1 } %593, 1
  %595 = extractvalue { i33, i1 } %593, 0
  %596 = icmp slt i33 %595, 0
  %597 = or i1 %594, %596
  br i1 %597, label %598, label %599, !prof !2

598:                                              ; preds = %591
  call void @llvm.trap() #8
  unreachable

599:                                              ; preds = %591
  %600 = trunc i33 %595 to i32
  store i32 %600, i32* %574, align 4
  br label %601

601:                                              ; preds = %599, %586
  %602 = phi i32 [ %600, %599 ], [ %587, %586 ]
  %603 = load atomic i32, i32* %570 monotonic, align 4
  %604 = and i32 %603, 2
  %605 = icmp eq i32 %604, 0
  br i1 %605, label %606, label %608

606:                                              ; preds = %601
  %607 = add i32 %602, -1
  store i32 %607, i32* %574, align 4
  br label %608

608:                                              ; preds = %606, %601
  %609 = phi i32 [ %607, %606 ], [ %602, %601 ]
  %610 = icmp eq i32 %609, 0
  br i1 %610, label %611, label %612

611:                                              ; preds = %608
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %567) #8
  br label %612

612:                                              ; preds = %611, %608, %566
  store i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.35, i64 0, i64 0), i8** %64, align 8, !noalias !16
  store %"class.WTF::StringImpl"* %567, %"class.WTF::StringImpl"** %65, align 8, !noalias !16
  %613 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend.217"* nonnull %14) #8
  store %"class.WTF::StringImpl"* %613, %"class.WTF::StringImpl"** %66, align 8, !noalias !16
  call fastcc void @_ZN5blink12_GLOBAL__N_122AddIgnoredValueMessageERNS_13ConsoleLoggerERKN3WTF6StringES6_(%"class.blink::ConsoleLogger"* dereferenceable(8) %3, %"class.WTF::String"* nonnull dereferenceable(8) %37, %"class.WTF::String"* nonnull dereferenceable(8) %13) #8
  %614 = icmp eq %"class.WTF::StringImpl"* %613, null
  br i1 %614, label %628, label %615

615:                                              ; preds = %612
  %616 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %613, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %617 = load atomic i32, i32* %616 monotonic, align 4
  %618 = and i32 %617, 2
  %619 = icmp eq i32 %618, 0
  %620 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %613, i64 0, i32 0
  %621 = load i32, i32* %620, align 4
  br i1 %619, label %622, label %624

622:                                              ; preds = %615
  %623 = add i32 %621, -1
  store i32 %623, i32* %620, align 4
  br label %624

624:                                              ; preds = %622, %615
  %625 = phi i32 [ %623, %622 ], [ %621, %615 ]
  %626 = icmp eq i32 %625, 0
  br i1 %626, label %627, label %628

627:                                              ; preds = %624
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %613) #8
  br label %628

628:                                              ; preds = %627, %624, %612
  %629 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8, !noalias !16
  %630 = icmp eq %"class.WTF::StringImpl"* %629, null
  br i1 %630, label %644, label %631

631:                                              ; preds = %628
  %632 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %629, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %633 = load atomic i32, i32* %632 monotonic, align 4
  %634 = and i32 %633, 2
  %635 = icmp eq i32 %634, 0
  %636 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %629, i64 0, i32 0
  %637 = load i32, i32* %636, align 4
  br i1 %635, label %638, label %640

638:                                              ; preds = %631
  %639 = add i32 %637, -1
  store i32 %639, i32* %636, align 4
  br label %640

640:                                              ; preds = %638, %631
  %641 = phi i32 [ %639, %638 ], [ %637, %631 ]
  %642 = icmp eq i32 %641, 0
  br i1 %642, label %643, label %644

643:                                              ; preds = %640
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %629) #8
  br label %644

644:                                              ; preds = %643, %640, %628
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %63) #8, !noalias !16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #8, !noalias !16
  %645 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink7NullURLEv() #8
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %24, %"class.blink::KURL"* dereferenceable(112) %645) #8
  br label %648

646:                                              ; preds = %564, %562
  call void @_ZNK5blink15ParsedSpecifier6GetUrlEv(%"class.blink::KURL"* nonnull sret %24, %"class.blink::ParsedSpecifier"* nonnull %5) #8
  br label %648

647:                                              ; preds = %389
  unreachable

648:                                              ; preds = %646, %644, %549, %469
  %649 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8, !noalias !16
  %650 = icmp eq %"class.WTF::StringImpl"* %649, null
  br i1 %650, label %664, label %651

651:                                              ; preds = %648
  %652 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %649, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %653 = load atomic i32, i32* %652 monotonic, align 4
  %654 = and i32 %653, 2
  %655 = icmp eq i32 %654, 0
  %656 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %649, i64 0, i32 0
  %657 = load i32, i32* %656, align 4
  br i1 %655, label %658, label %660

658:                                              ; preds = %651
  %659 = add i32 %657, -1
  store i32 %659, i32* %656, align 4
  br label %660

660:                                              ; preds = %658, %651
  %661 = phi i32 [ %659, %658 ], [ %657, %651 ]
  %662 = icmp eq i32 %661, 0
  br i1 %662, label %663, label %664

663:                                              ; preds = %660
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %649) #8
  br label %664

664:                                              ; preds = %648, %660, %663
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %78) #8
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %50) #8, !noalias !16
  %665 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink4KURLEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKS1_S4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable"* %44, %"class.WTF::String"* nonnull dereferenceable(8) %21, %"class.blink::KURL"* nonnull dereferenceable(112) %24) #8
  %666 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %665, 1
  %667 = and i8 %666, 1
  %668 = icmp eq i8 %667, 0
  br i1 %668, label %669, label %673

669:                                              ; preds = %664
  %670 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %665, 0
  %671 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %670, i64 0, i32 1
  %672 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* %671, %"class.blink::KURL"* nonnull dereferenceable(112) %24) #8
  br label %673

673:                                              ; preds = %664, %669
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %24) #8
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %49) #8
  br label %674

674:                                              ; preds = %385, %379, %673
  %675 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %676 = icmp eq %"class.WTF::StringImpl"* %675, null
  br i1 %676, label %690, label %677

677:                                              ; preds = %674
  %678 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %675, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %679 = load atomic i32, i32* %678 monotonic, align 4
  %680 = and i32 %679, 2
  %681 = icmp eq i32 %680, 0
  %682 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %675, i64 0, i32 0
  %683 = load i32, i32* %682, align 4
  br i1 %681, label %684, label %686

684:                                              ; preds = %677
  %685 = add i32 %683, -1
  store i32 %685, i32* %682, align 4
  br label %686

686:                                              ; preds = %684, %677
  %687 = phi i32 [ %685, %684 ], [ %683, %677 ]
  %688 = icmp eq i32 %687, 0
  br i1 %688, label %689, label %690

689:                                              ; preds = %686
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %675) #8
  br label %690

690:                                              ; preds = %674, %686, %689
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #8
  br label %717

691:                                              ; preds = %357, %357, %357, %357, %357, %357
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %25, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.11, i64 0, i64 0), i64 19) #8
  call fastcc void @_ZN5blink12_GLOBAL__N_122AddIgnoredValueMessageERNS_13ConsoleLoggerERKN3WTF6StringES6_(%"class.blink::ConsoleLogger"* dereferenceable(8) %3, %"class.WTF::String"* nonnull dereferenceable(8) %37, %"class.WTF::String"* nonnull dereferenceable(8) %25)
  %692 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %693 = icmp eq %"class.WTF::StringImpl"* %692, null
  br i1 %693, label %707, label %694

694:                                              ; preds = %691
  %695 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %692, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %696 = load atomic i32, i32* %695 monotonic, align 4
  %697 = and i32 %696, 2
  %698 = icmp eq i32 %697, 0
  %699 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %692, i64 0, i32 0
  %700 = load i32, i32* %699, align 4
  br i1 %698, label %701, label %703

701:                                              ; preds = %694
  %702 = add i32 %700, -1
  store i32 %702, i32* %699, align 4
  br label %703

703:                                              ; preds = %701, %694
  %704 = phi i32 [ %702, %701 ], [ %700, %694 ]
  %705 = icmp eq i32 %704, 0
  br i1 %705, label %706, label %707

706:                                              ; preds = %703
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %692) #8
  br label %707

707:                                              ; preds = %691, %703, %706
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #8
  %708 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink7NullURLEv() #8
  %709 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink4KURLEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKS1_RKS4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable"* %44, %"class.WTF::String"* nonnull dereferenceable(8) %21, %"class.blink::KURL"* dereferenceable(112) %708) #8
  %710 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %709, 1
  %711 = and i8 %710, 1
  %712 = icmp eq i8 %711, 0
  br i1 %712, label %713, label %717

713:                                              ; preds = %707
  %714 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %709, 0
  %715 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %714, i64 0, i32 1
  %716 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* %715, %"class.blink::KURL"* dereferenceable(112) %708) #8
  br label %717

717:                                              ; preds = %713, %707, %690, %357, %353
  %718 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %719 = icmp eq %"class.WTF::StringImpl"* %718, null
  br i1 %719, label %733, label %720

720:                                              ; preds = %717
  %721 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %718, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %722 = load atomic i32, i32* %721 monotonic, align 4
  %723 = and i32 %722, 2
  %724 = icmp eq i32 %723, 0
  %725 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %718, i64 0, i32 0
  %726 = load i32, i32* %725, align 4
  br i1 %724, label %727, label %729

727:                                              ; preds = %720
  %728 = add i32 %726, -1
  store i32 %728, i32* %725, align 4
  br label %729

729:                                              ; preds = %727, %720
  %730 = phi i32 [ %728, %727 ], [ %726, %720 ]
  %731 = icmp eq i32 %730, 0
  br i1 %731, label %732, label %733

732:                                              ; preds = %729
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %718) #8
  br label %733

733:                                              ; preds = %351, %308, %717, %729, %732
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #8
  %734 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %735 = icmp eq %"class.WTF::StringImpl"* %734, null
  br i1 %735, label %749, label %736

736:                                              ; preds = %733
  %737 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %734, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %738 = load atomic i32, i32* %737 monotonic, align 4
  %739 = and i32 %738, 2
  %740 = icmp eq i32 %739, 0
  %741 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %734, i64 0, i32 0
  %742 = load i32, i32* %741, align 4
  br i1 %740, label %743, label %745

743:                                              ; preds = %736
  %744 = add i32 %742, -1
  store i32 %744, i32* %741, align 4
  br label %745

745:                                              ; preds = %743, %736
  %746 = phi i32 [ %744, %743 ], [ %742, %736 ]
  %747 = icmp eq i32 %746, 0
  br i1 %747, label %748, label %749

748:                                              ; preds = %745
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %734) #8
  br label %749

749:                                              ; preds = %733, %745, %748
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #8
  %750 = add nuw i32 %92, 1
  %751 = load i32, i32* %28, align 4
  %752 = icmp ult i32 %750, %751
  br i1 %752, label %91, label %753

753:                                              ; preds = %749, %4
  ret void
}

declare { %"class.WTF::StringImpl"*, %"class.blink::JSONValue"* } @_ZNK5blink10JSONObject2atEj(%"class.blink::JSONObject"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.248", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.248", align 8
  %4 = alloca i8*, align 8
  %5 = alloca i16*, align 8
  %6 = bitcast %"class.WTF::StringTypeAdapter.248"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false) #8
  %8 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.248"* nonnull %3, i8* %8) #8
  %9 = bitcast %"class.WTF::StringTypeAdapter.248"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #8
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.248"* nonnull %2, i8* %11) #8
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8
  br i1 %20, label %57, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #8
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %4) #8
  %25 = load i8*, i8** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend"* %0, i8* %25)
  %26 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %26, label %93, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %44

34:                                               ; preds = %27
  %35 = zext i32 %33 to i33
  %36 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #8
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !2

41:                                               ; preds = %34
  call void @llvm.trap() #8
  unreachable

42:                                               ; preds = %34
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %32, align 4
  br label %44

44:                                               ; preds = %27, %42
  %45 = phi i32 [ %43, %42 ], [ %33, %27 ]
  %46 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %47 = load atomic i32, i32* %28 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %52 = add i32 %45, -1
  store i32 %52, i32* %51, align 4
  br label %53

53:                                               ; preds = %50, %44
  %54 = phi i32 [ %52, %50 ], [ %45, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %93

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #8
  br label %93

57:                                               ; preds = %1
  %58 = bitcast i16** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #8
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %5, align 8
  %59 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %60 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %59, i16** nonnull dereferenceable(8) %5) #8
  %61 = load i16*, i16** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend"* %0, i16* %61)
  %62 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %62, label %93, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %80

70:                                               ; preds = %63
  %71 = zext i32 %69 to i33
  %72 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #8
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !2

77:                                               ; preds = %70
  call void @llvm.trap() #8
  unreachable

78:                                               ; preds = %70
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %68, align 4
  br label %80

80:                                               ; preds = %63, %78
  %81 = phi i32 [ %79, %78 ], [ %69, %63 ]
  %82 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  %83 = load atomic i32, i32* %64 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %88 = add i32 %81, -1
  store i32 %88, i32* %87, align 4
  br label %89

89:                                               ; preds = %86, %80
  %90 = phi i32 [ %88, %86 ], [ %81, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #8
  br label %93

93:                                               ; preds = %92, %89, %57, %56, %53, %21
  %94 = phi i8* [ %22, %21 ], [ %22, %53 ], [ %22, %56 ], [ %58, %57 ], [ %58, %89 ], [ %58, %92 ]
  %95 = phi i64 [ 0, %21 ], [ %46, %53 ], [ %46, %56 ], [ 0, %57 ], [ %82, %89 ], [ %82, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #8
  %96 = inttoptr i64 %95 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %96
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink4KURLC1ERKS0_RKN3WTF6StringE(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #3

declare zeroext i1 @_ZNK5blink10JSONObject9GetStringERKN3WTF6StringEPS2_(%"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_122AddIgnoredValueMessageERNS_13ConsoleLoggerERKN3WTF6StringES6_(%"class.blink::ConsoleLogger"* dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #0 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::StringAppend.224", align 8
  %6 = alloca %"class.WTF::StringAppend", align 8
  %7 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #8
  %8 = bitcast %"class.WTF::StringAppend.224"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #8
  %9 = bitcast %"class.WTF::StringAppend"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %88, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  br i1 %17, label %20, label %30

20:                                               ; preds = %13
  %21 = zext i32 %19 to i33
  %22 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %21, i33 1) #8
  %23 = extractvalue { i33, i1 } %22, 1
  %24 = extractvalue { i33, i1 } %22, 0
  %25 = icmp slt i33 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %28, !prof !2

27:                                               ; preds = %20
  tail call void @llvm.trap() #8
  unreachable

28:                                               ; preds = %20
  %29 = trunc i33 %24 to i32
  store i32 %29, i32* %18, align 4
  br label %30

30:                                               ; preds = %28, %13
  %31 = phi i32 [ %29, %28 ], [ %19, %13 ]
  %32 = load atomic i32, i32* %14 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %45

35:                                               ; preds = %30
  %36 = zext i32 %31 to i33
  %37 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %36, i33 1) #8
  %38 = extractvalue { i33, i1 } %37, 1
  %39 = extractvalue { i33, i1 } %37, 0
  %40 = icmp slt i33 %39, 0
  %41 = or i1 %38, %40
  br i1 %41, label %42, label %43, !prof !2

42:                                               ; preds = %35
  tail call void @llvm.trap() #8
  unreachable

43:                                               ; preds = %35
  %44 = trunc i33 %39 to i32
  store i32 %44, i32* %18, align 4
  br label %45

45:                                               ; preds = %43, %30
  %46 = phi i32 [ %44, %43 ], [ %31, %30 ]
  %47 = load atomic i32, i32* %14 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %45
  %51 = add i32 %46, -1
  store i32 %51, i32* %18, align 4
  br label %52

52:                                               ; preds = %50, %45
  %53 = phi i32 [ %51, %50 ], [ %46, %45 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %11) #8
  br label %56

56:                                               ; preds = %52, %55
  %57 = load atomic i32, i32* %14 monotonic, align 4, !noalias !19
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = load i32, i32* %18, align 4
  br i1 %59, label %61, label %71

61:                                               ; preds = %56
  %62 = zext i32 %60 to i33
  %63 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %62, i33 1) #8
  %64 = extractvalue { i33, i1 } %63, 1
  %65 = extractvalue { i33, i1 } %63, 0
  %66 = icmp slt i33 %65, 0
  %67 = or i1 %64, %66
  br i1 %67, label %68, label %69, !prof !2

68:                                               ; preds = %61
  tail call void @llvm.trap() #8, !noalias !19
  unreachable

69:                                               ; preds = %61
  %70 = trunc i33 %65 to i32
  store i32 %70, i32* %18, align 4, !noalias !19
  br label %71

71:                                               ; preds = %56, %69
  %72 = phi i32 [ %70, %69 ], [ %60, %56 ]
  %73 = bitcast %"class.WTF::StringAppend"* %6 to i64*
  store i64 ptrtoint ([33 x i8]* @.str.32 to i64), i64* %73, align 8, !alias.scope !19
  %74 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %74, align 8, !alias.scope !19
  %75 = load atomic i32, i32* %14 monotonic, align 4, !noalias !19
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %92

78:                                               ; preds = %71
  %79 = zext i32 %72 to i33
  %80 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %79, i33 1) #8
  %81 = extractvalue { i33, i1 } %80, 1
  %82 = extractvalue { i33, i1 } %80, 0
  %83 = icmp slt i33 %82, 0
  %84 = or i1 %81, %83
  br i1 %84, label %85, label %86, !prof !2

85:                                               ; preds = %78
  tail call void @llvm.trap() #8, !noalias !19
  unreachable

86:                                               ; preds = %78
  %87 = trunc i33 %82 to i32
  store i32 %87, i32* %18, align 4, !noalias !19
  br label %92

88:                                               ; preds = %3
  %89 = bitcast %"class.WTF::StringAppend"* %6 to i64*
  store i64 ptrtoint ([33 x i8]* @.str.32 to i64), i64* %89, align 8, !alias.scope !19
  %90 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %90, align 8, !alias.scope !19
  %91 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28, i64 0, i64 0), i8** %91, align 8, !alias.scope !19
  br label %104

92:                                               ; preds = %86, %71
  %93 = phi i32 [ %87, %86 ], [ %72, %71 ]
  %94 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28, i64 0, i64 0), i8** %94, align 8, !alias.scope !19
  %95 = load atomic i32, i32* %14 monotonic, align 4, !noalias !19
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %100

98:                                               ; preds = %92
  %99 = add i32 %93, -1
  store i32 %99, i32* %18, align 4, !noalias !19
  br label %100

100:                                              ; preds = %98, %92
  %101 = phi i32 [ %99, %98 ], [ %93, %92 ]
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %100
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %11) #8, !noalias !19
  br label %104

104:                                              ; preds = %88, %100, %103
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %106 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %105, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %106, null
  br i1 %107, label %125, label %108

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %125

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = zext i32 %115 to i33
  %117 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %116, i33 1) #8
  %118 = extractvalue { i33, i1 } %117, 1
  %119 = extractvalue { i33, i1 } %117, 0
  %120 = icmp slt i33 %119, 0
  %121 = or i1 %118, %120
  br i1 %121, label %122, label %123, !prof !2

122:                                              ; preds = %113
  tail call void @llvm.trap() #8
  unreachable

123:                                              ; preds = %113
  %124 = trunc i33 %119 to i32
  store i32 %124, i32* %114, align 4
  br label %125

125:                                              ; preds = %104, %108, %123
  call void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.224"* nonnull sret %5, %"class.WTF::StringAppend"* nonnull dereferenceable(24) %6, %"class.WTF::StringImpl"* %106)
  %126 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EcvS3_Ev(%"class.WTF::StringAppend.224"* nonnull %5)
  %127 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %126, %"class.WTF::StringImpl"** %127, align 8
  %128 = bitcast %"class.blink::ConsoleLogger"* %0 to void (%"class.blink::ConsoleLogger"*, i32, i32, %"class.WTF::String"*, i1)***
  %129 = load void (%"class.blink::ConsoleLogger"*, i32, i32, %"class.WTF::String"*, i1)**, void (%"class.blink::ConsoleLogger"*, i32, i32, %"class.WTF::String"*, i1)*** %128, align 8
  %130 = getelementptr inbounds void (%"class.blink::ConsoleLogger"*, i32, i32, %"class.WTF::String"*, i1)*, void (%"class.blink::ConsoleLogger"*, i32, i32, %"class.WTF::String"*, i1)** %129, i64 3
  %131 = load void (%"class.blink::ConsoleLogger"*, i32, i32, %"class.WTF::String"*, i1)*, void (%"class.blink::ConsoleLogger"*, i32, i32, %"class.WTF::String"*, i1)** %130, align 8
  call void %131(%"class.blink::ConsoleLogger"* %0, i32 8, i32 2, %"class.WTF::String"* nonnull dereferenceable(8) %4, i1 zeroext false) #8
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %127, align 8
  %133 = icmp eq %"class.WTF::StringImpl"* %132, null
  br i1 %133, label %147, label %134

134:                                              ; preds = %125
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  br i1 %138, label %141, label %143

141:                                              ; preds = %134
  %142 = add i32 %140, -1
  store i32 %142, i32* %139, align 4
  br label %143

143:                                              ; preds = %141, %134
  %144 = phi i32 [ %142, %141 ], [ %140, %134 ]
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %143
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %132) #8
  br label %147

147:                                              ; preds = %125, %143, %146
  %148 = getelementptr inbounds %"class.WTF::StringAppend.224", %"class.WTF::StringAppend.224"* %5, i64 0, i32 1, i32 0, i32 0
  %149 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %148, align 8
  %150 = icmp eq %"class.WTF::StringImpl"* %149, null
  br i1 %150, label %164, label %151

151:                                              ; preds = %147
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load atomic i32, i32* %152 monotonic, align 4
  %154 = and i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 0
  %157 = load i32, i32* %156, align 4
  br i1 %155, label %158, label %160

158:                                              ; preds = %151
  %159 = add i32 %157, -1
  store i32 %159, i32* %156, align 4
  br label %160

160:                                              ; preds = %158, %151
  %161 = phi i32 [ %159, %158 ], [ %157, %151 ]
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %164

163:                                              ; preds = %160
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %149) #8
  br label %164

164:                                              ; preds = %163, %160, %147
  %165 = getelementptr inbounds %"class.WTF::StringAppend.224", %"class.WTF::StringAppend.224"* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %166 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %165, align 8
  %167 = icmp eq %"class.WTF::StringImpl"* %166, null
  br i1 %167, label %181, label %168

168:                                              ; preds = %164
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %166, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %170 = load atomic i32, i32* %169 monotonic, align 4
  %171 = and i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %166, i64 0, i32 0
  %174 = load i32, i32* %173, align 4
  br i1 %172, label %175, label %177

175:                                              ; preds = %168
  %176 = add i32 %174, -1
  store i32 %176, i32* %173, align 4
  br label %177

177:                                              ; preds = %175, %168
  %178 = phi i32 [ %176, %175 ], [ %174, %168 ]
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %180, label %181

180:                                              ; preds = %177
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %166) #8
  br label %181

181:                                              ; preds = %164, %177, %180
  %182 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  %183 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %182, align 8
  %184 = icmp eq %"class.WTF::StringImpl"* %183, null
  br i1 %184, label %198, label %185

185:                                              ; preds = %181
  %186 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %183, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %187 = load atomic i32, i32* %186 monotonic, align 4
  %188 = and i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %183, i64 0, i32 0
  %191 = load i32, i32* %190, align 4
  br i1 %189, label %192, label %194

192:                                              ; preds = %185
  %193 = add i32 %191, -1
  store i32 %193, i32* %190, align 4
  br label %194

194:                                              ; preds = %192, %185
  %195 = phi i32 [ %193, %192 ], [ %191, %185 ]
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %197, label %198

197:                                              ; preds = %194
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %183) #8
  br label %198

198:                                              ; preds = %181, %194, %197
  br i1 %12, label %212, label %199

199:                                              ; preds = %198
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %201 = load atomic i32, i32* %200 monotonic, align 4
  %202 = and i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %205 = load i32, i32* %204, align 4
  br i1 %203, label %206, label %208

206:                                              ; preds = %199
  %207 = add i32 %205, -1
  store i32 %207, i32* %204, align 4
  br label %208

208:                                              ; preds = %206, %199
  %209 = phi i32 [ %207, %206 ], [ %205, %199 ]
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %211, label %212

211:                                              ; preds = %208
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %11) #8
  br label %212

212:                                              ; preds = %198, %208, %211
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #8
  ret void
}

declare dereferenceable(112) %"class.blink::KURL"* @_ZN5blink7NullURLEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9ImportMap11MatchPrefixERKNS_15ParsedSpecifierERKN3WTF7HashMapINS4_6StringENS_4KURLENS4_10StringHashENS4_10HashTraitsIS6_EENS9_IS7_EENS4_18PartitionAllocatorEEE(%"class.absl::optional"* noalias nocapture sret, %"class.blink::ImportMap"* nocapture readnone, %"class.blink::ParsedSpecifier"* dereferenceable(128), %"class.WTF::HashMap"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = tail call %"class.WTF::StringImpl"* @_ZNK5blink15ParsedSpecifier21GetImportMapKeyStringEv(%"class.blink::ParsedSpecifier"* %2) #8
  %7 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 -86, i64 24, i1 false)
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %3, i64 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %3, i64 0, i32 0, i32 0
  %12 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %3, i64 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 %15
  br i1 %10, label %39, label %17

17:                                               ; preds = %4
  %18 = icmp eq i32 %14, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %17, %23
  %20 = phi %"struct.WTF::KeyValuePair"* [ %24, %23 ], [ %12, %17 ]
  %21 = bitcast %"struct.WTF::KeyValuePair"* %20 to i64*
  %22 = load i64, i64* %21, align 8
  switch i64 %22, label %26 [
    i64 -1, label %23
    i64 0, label %23
  ]

23:                                               ; preds = %19, %19
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %20, i64 1
  %25 = icmp eq %"struct.WTF::KeyValuePair"* %24, %16
  br i1 %25, label %39, label %19

26:                                               ; preds = %19, %17
  %27 = phi %"struct.WTF::KeyValuePair"* [ %12, %17 ], [ %20, %19 ]
  %28 = icmp eq %"struct.WTF::KeyValuePair"* %27, %16
  br i1 %28, label %39, label %29

29:                                               ; preds = %26
  %30 = bitcast %"class.WTF::StringView"* %5 to i8*
  %31 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %33 = bitcast i8** %32 to %"class.WTF::StringImpl"**
  %34 = bitcast %"class.WTF::StringView"* %5 to i64*
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  %36 = icmp eq %"class.WTF::StringImpl"* %6, null
  %37 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  br label %55

39:                                               ; preds = %23, %111, %4, %26
  %40 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %39
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %50

48:                                               ; preds = %41
  %49 = add i32 %47, -1
  store i32 %49, i32* %46, align 4
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %49, %48 ], [ %47, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %6) #8
  br label %54

54:                                               ; preds = %39, %50, %53
  ret void

55:                                               ; preds = %29, %111
  %56 = phi i8 [ 0, %29 ], [ %101, %111 ]
  %57 = phi %"struct.WTF::KeyValuePair"* [ %27, %29 ], [ %112, %111 ]
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %100, label %61

61:                                               ; preds = %55
  %62 = call zeroext i1 @_ZNK3WTF10StringImpl8EndsWithEDs(%"class.WTF::StringImpl"* nonnull %59, i16 zeroext 47) #8
  br i1 %62, label %63, label %100

63:                                               ; preds = %61
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #8
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %66, label %68

66:                                               ; preds = %63
  store i8* null, i8** %32, align 8
  %67 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %67, i64* %34, align 8
  br label %72

68:                                               ; preds = %63
  store %"class.WTF::StringImpl"* %64, %"class.WTF::StringImpl"** %31, align 8
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 1
  store %"class.WTF::StringImpl"* %71, %"class.WTF::StringImpl"** %33, align 8
  br label %72

72:                                               ; preds = %66, %68
  %73 = phi i32 [ %70, %68 ], [ 0, %66 ]
  store i32 %73, i32* %35, align 8
  br i1 %36, label %74, label %76

74:                                               ; preds = %72
  %75 = icmp eq i32 %73, 0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #8
  br i1 %75, label %78, label %100

76:                                               ; preds = %72
  %77 = call zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #8
  br i1 %77, label %78, label %100

78:                                               ; preds = %74, %76
  %79 = icmp eq i8 %56, 0
  br i1 %79, label %99, label %80

80:                                               ; preds = %78
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %86, label %83

83:                                               ; preds = %80
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 1
  %85 = load i32, i32* %84, align 4
  br label %86

86:                                               ; preds = %83, %80
  %87 = phi i32 [ %85, %83 ], [ 0, %80 ]
  %88 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %37, align 8
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %88, i64 0, i32 0, i32 0, i32 0
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %91 = icmp eq %"class.WTF::StringImpl"* %90, null
  br i1 %91, label %95, label %92

92:                                               ; preds = %86
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 1
  %94 = load i32, i32* %93, align 4
  br label %95

95:                                               ; preds = %86, %92
  %96 = phi i32 [ %94, %92 ], [ 0, %86 ]
  %97 = icmp ult i32 %87, %96
  br i1 %97, label %100, label %98

98:                                               ; preds = %95
  store %"struct.WTF::KeyValuePair"* %57, %"struct.WTF::KeyValuePair"** %37, align 8
  store %"struct.WTF::KeyValuePair"* %16, %"struct.WTF::KeyValuePair"** %38, align 8
  br label %100

99:                                               ; preds = %78
  store %"struct.WTF::KeyValuePair"* %57, %"struct.WTF::KeyValuePair"** %37, align 8
  store %"struct.WTF::KeyValuePair"* %16, %"struct.WTF::KeyValuePair"** %38, align 8
  store i8 1, i8* %7, align 8
  br label %100

100:                                              ; preds = %55, %99, %98, %74, %76, %95, %61
  %101 = phi i8 [ %56, %55 ], [ 1, %99 ], [ %56, %98 ], [ %56, %74 ], [ %56, %76 ], [ %56, %95 ], [ %56, %61 ]
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %57, i64 1
  %103 = icmp eq %"struct.WTF::KeyValuePair"* %102, %16
  br i1 %103, label %111, label %104

104:                                              ; preds = %100, %108
  %105 = phi %"struct.WTF::KeyValuePair"* [ %109, %108 ], [ %102, %100 ]
  %106 = bitcast %"struct.WTF::KeyValuePair"* %105 to i64*
  %107 = load i64, i64* %106, align 8
  switch i64 %107, label %111 [
    i64 -1, label %108
    i64 0, label %108
  ]

108:                                              ; preds = %104, %104
  %109 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %105, i64 1
  %110 = icmp eq %"struct.WTF::KeyValuePair"* %109, %16
  br i1 %110, label %111, label %104

111:                                              ; preds = %104, %108, %100
  %112 = phi %"struct.WTF::KeyValuePair"* [ %16, %100 ], [ %16, %108 ], [ %105, %104 ]
  %113 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %11, align 8
  %114 = load i32, i32* %13, align 8
  %115 = zext i32 %114 to i64
  %116 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %113, i64 %115
  %117 = icmp eq %"struct.WTF::KeyValuePair"* %112, %116
  br i1 %117, label %39, label %55
}

declare %"class.WTF::StringImpl"* @_ZNK5blink15ParsedSpecifier21GetImportMapKeyStringEv(%"class.blink::ParsedSpecifier"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9ImportMapC2Ev(%"class.blink::ImportMap"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::ImportMap"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 20, i1 false) #8
  %3 = getelementptr inbounds %"class.blink::ImportMap", %"class.blink::ImportMap"* %0, i64 0, i32 1
  %4 = bitcast %"class.WTF::Vector"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9ImportMapC2EON3WTF7HashMapINS1_6StringENS_4KURLENS1_10StringHashENS1_10HashTraitsIS3_EENS6_IS4_EENS1_18PartitionAllocatorEEEONS1_6VectorINSt3__14pairIS3_SA_EELj0ES9_EE(%"class.blink::ImportMap"* nocapture, %"class.WTF::HashMap"* nocapture dereferenceable(24), %"class.WTF::Vector"* nocapture dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::ImportMap", %"class.blink::ImportMap"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.blink::ImportMap", %"class.blink::ImportMap"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = getelementptr inbounds %"class.blink::ImportMap", %"class.blink::ImportMap"* %0, i64 0, i32 0, i32 0, i32 3
  %7 = bitcast %"class.WTF::HashMap"* %1 to i64*
  %8 = bitcast %"class.blink::ImportMap"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 20, i1 false) #8
  %9 = load i64, i64* %7, align 8
  %10 = bitcast %"class.blink::ImportMap"* %0 to i64*
  store atomic i64 0, i64* %7 monotonic, align 8
  store atomic i64 %9, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %1, i64 0, i32 0, i32 1
  %12 = load i32, i32* %4, align 4
  %13 = load i32, i32* %11, align 4
  store i32 %13, i32* %4, align 4
  store i32 %12, i32* %11, align 4
  %14 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %1, i64 0, i32 0, i32 2
  %15 = load i32, i32* %5, align 4
  %16 = load i32, i32* %14, align 4
  store i32 %16, i32* %5, align 4
  store i32 %15, i32* %14, align 4
  %17 = load i32, i32* %6, align 8
  %18 = and i32 %17, 2147483647
  %19 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %1, i64 0, i32 0, i32 3
  %20 = load i32, i32* %19, align 8
  %21 = and i32 %20, 2147483647
  %22 = and i32 %17, -2147483648
  %23 = or i32 %21, %22
  store i32 %23, i32* %6, align 8
  %24 = load i32, i32* %19, align 8
  %25 = and i32 %24, -2147483648
  %26 = or i32 %25, %18
  store i32 %26, i32* %19, align 8
  %27 = getelementptr inbounds %"class.blink::ImportMap", %"class.blink::ImportMap"* %0, i64 0, i32 1
  %28 = getelementptr inbounds %"class.blink::ImportMap", %"class.blink::ImportMap"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.blink::ImportMap", %"class.blink::ImportMap"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %30 = bitcast %"class.WTF::Vector"* %2 to i64*
  %31 = bitcast %"class.WTF::Vector"* %27 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false) #8
  %32 = load i64, i64* %30, align 8
  %33 = bitcast %"class.WTF::Vector"* %27 to i64*
  store atomic i64 0, i64* %30 monotonic, align 8
  store atomic i64 %32, i64* %33 monotonic, align 8
  %34 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 1
  %35 = load i32, i32* %28, align 4
  %36 = load i32, i32* %34, align 4
  store i32 %36, i32* %28, align 4
  store i32 %35, i32* %34, align 4
  %37 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %29, align 4
  %39 = load i32, i32* %37, align 4
  store i32 %39, i32* %29, align 4
  store i32 %38, i32* %37, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9ImportMap7ResolveERKNS_15ParsedSpecifierERKNS_4KURLEPN3WTF6StringE(%"class.absl::optional.218"* noalias sret, %"class.blink::ImportMap"*, %"class.blink::ParsedSpecifier"* dereferenceable(128), %"class.blink::KURL"* nocapture readonly dereferenceable(112), %"class.WTF::String"* nocapture) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = getelementptr inbounds %"class.blink::ImportMap", %"class.blink::ImportMap"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %9 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ImportMap", %"class.blink::ImportMap"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %9, i64 %12
  %14 = icmp eq i32 %11, 0
  br i1 %14, label %66, label %15

15:                                               ; preds = %5
  %16 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %3, i64 0, i32 4, i32 0, i32 0
  %17 = bitcast %"class.WTF::StringView"* %6 to i8*
  %18 = bitcast %"class.WTF::StringView"* %7 to i8*
  %19 = bitcast %"class.WTF::StringView"* %6 to i64*
  %20 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %21 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  %22 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %24 = bitcast i8** %23 to %"class.WTF::StringImpl"**
  %25 = bitcast %"class.WTF::StringView"* %7 to i64*
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  %27 = getelementptr inbounds %"class.absl::optional.218", %"class.absl::optional.218"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %28

28:                                               ; preds = %15, %63
  %29 = phi %"struct.std::__1::pair"* [ %9, %15 ], [ %64, %63 ]
  %30 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %33 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"* %32) #8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #8
  br i1 %33, label %57, label %34

34:                                               ; preds = %28
  %35 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %35, i64* %19, align 8
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0), i8** %20, align 8
  store i32 1, i32* %21, align 8
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %62, label %38

38:                                               ; preds = %34
  %39 = call zeroext i1 @_ZNK3WTF10StringImpl8EndsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %36, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #8
  br i1 %39, label %40, label %62

40:                                               ; preds = %38
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %43, label %45

43:                                               ; preds = %40
  store i8* null, i8** %23, align 8
  %44 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %44, i64* %25, align 8
  br label %49

45:                                               ; preds = %40
  store %"class.WTF::StringImpl"* %41, %"class.WTF::StringImpl"** %22, align 8
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 1
  store %"class.WTF::StringImpl"* %48, %"class.WTF::StringImpl"** %24, align 8
  br label %49

49:                                               ; preds = %43, %45
  %50 = phi i32 [ %47, %45 ], [ 0, %43 ]
  store i32 %50, i32* %26, align 8
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = icmp eq i32 %50, 0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #8
  br i1 %54, label %58, label %63

55:                                               ; preds = %49
  %56 = call zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %51, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #8
  br i1 %56, label %58, label %63

57:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #8
  br label %58

58:                                               ; preds = %53, %57, %55
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 -86, i64 120, i1 false)
  %59 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %29, i64 0, i32 1
  call void @_ZNK5blink9ImportMap19ResolveImportsMatchERKNS_15ParsedSpecifierERKN3WTF7HashMapINS4_6StringENS_4KURLENS4_10StringHashENS4_10HashTraitsIS6_EENS9_IS7_EENS4_18PartitionAllocatorEEEPS6_(%"class.absl::optional.218"* sret %0, %"class.blink::ImportMap"* %1, %"class.blink::ParsedSpecifier"* dereferenceable(128) %2, %"class.WTF::HashMap"* dereferenceable(24) %59, %"class.WTF::String"* %4)
  %60 = load i8, i8* %27, align 8, !range !22
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %63, label %68

62:                                               ; preds = %34, %38
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #8
  br label %63

63:                                               ; preds = %58, %55, %62, %53
  %64 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %29, i64 1
  %65 = icmp eq %"struct.std::__1::pair"* %64, %13
  br i1 %65, label %66, label %28

66:                                               ; preds = %63, %5
  %67 = getelementptr inbounds %"class.blink::ImportMap", %"class.blink::ImportMap"* %1, i64 0, i32 0
  call void @_ZNK5blink9ImportMap19ResolveImportsMatchERKNS_15ParsedSpecifierERKN3WTF7HashMapINS4_6StringENS_4KURLENS4_10StringHashENS4_10HashTraitsIS6_EENS9_IS7_EENS4_18PartitionAllocatorEEEPS6_(%"class.absl::optional.218"* sret %0, %"class.blink::ImportMap"* %1, %"class.blink::ParsedSpecifier"* dereferenceable(128) %2, %"class.WTF::HashMap"* dereferenceable(24) %67, %"class.WTF::String"* %4)
  br label %68

68:                                               ; preds = %58, %66
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9ImportMap19ResolveImportsMatchERKNS_15ParsedSpecifierERKN3WTF7HashMapINS4_6StringENS_4KURLENS4_10StringHashENS4_10HashTraitsIS6_EENS9_IS7_EENS4_18PartitionAllocatorEEEPS6_(%"class.absl::optional.218"* noalias sret, %"class.blink::ImportMap"* nocapture readnone, %"class.blink::ParsedSpecifier"* dereferenceable(128), %"class.WTF::HashMap"* dereferenceable(24), %"class.WTF::String"* nocapture) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"struct.WTF::HashTableConstIteratorAdapter", align 8
  %8 = alloca %"class.blink::KURL", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.blink::KURL", align 8
  %11 = alloca %"class.WTF::StringAppend", align 8
  %12 = alloca %"class.absl::optional", align 8
  %13 = alloca %"class.blink::KURL", align 8
  %14 = alloca %"class.WTF::StringAppend", align 8
  %15 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #8
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %17 = tail call %"class.WTF::StringImpl"* @_ZNK5blink15ParsedSpecifier21GetImportMapKeyStringEv(%"class.blink::ParsedSpecifier"* %2) #8
  store %"class.WTF::StringImpl"* %17, %"class.WTF::StringImpl"** %16, align 8
  %18 = bitcast %"struct.WTF::HashTableConstIteratorAdapter"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #8
  %19 = getelementptr inbounds %"struct.WTF::HashTableConstIteratorAdapter", %"struct.WTF::HashTableConstIteratorAdapter"* %7, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"struct.WTF::HashTableConstIteratorAdapter", %"struct.WTF::HashTableConstIteratorAdapter"* %7, i64 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %3, i64 0, i32 0
  %22 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink4KURLEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable"* %21, %"class.WTF::String"* nonnull dereferenceable(8) %6) #8
  %23 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %22, 0
  store %"struct.WTF::KeyValuePair"* %23, %"struct.WTF::KeyValuePair"** %19, align 8
  %24 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %22, 1
  store %"struct.WTF::KeyValuePair"* %24, %"struct.WTF::KeyValuePair"** %20, align 8
  %25 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %3, i64 0, i32 0, i32 0
  %26 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %25, align 8
  %27 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %3, i64 0, i32 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %26, i64 %29
  %31 = icmp eq %"struct.WTF::KeyValuePair"* %23, %30
  br i1 %31, label %36, label %32

32:                                               ; preds = %5
  %33 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %33) #8
  call void @_ZNK5blink9ImportMap27ResolveImportsMatchInternalERKN3WTF6StringERKNS1_29HashTableConstIteratorAdapterINS1_9HashTableIS2_NS1_12KeyValuePairIS2_NS_4KURLEEENS1_24KeyValuePairKeyExtractorENS1_10StringHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS2_EENSD_IS8_EEEESE_NS1_18PartitionAllocatorEEES9_EEPS2_(%"class.blink::KURL"* nonnull sret %8, %"class.blink::ImportMap"* undef, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"struct.WTF::HashTableConstIteratorAdapter"* nonnull dereferenceable(16) %7, %"class.WTF::String"* %4)
  %34 = getelementptr inbounds %"class.absl::optional.218", %"class.absl::optional.218"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %34, align 8
  %35 = getelementptr inbounds %"class.absl::optional.218", %"class.absl::optional.218"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %35, %"class.blink::KURL"* nonnull dereferenceable(112) %8) #8
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %33) #8
  br label %369

36:                                               ; preds = %5
  %37 = getelementptr inbounds %"class.blink::ParsedSpecifier", %"class.blink::ParsedSpecifier"* %2, i64 0, i32 0
  %38 = load i32, i32* %37, align 8
  %39 = icmp eq i32 %38, 2
  br i1 %39, label %40, label %211

40:                                               ; preds = %36
  %41 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #8
  %42 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %42) #8
  call void @_ZNK5blink15ParsedSpecifier6GetUrlEv(%"class.blink::KURL"* nonnull sret %10, %"class.blink::ParsedSpecifier"* %2) #8
  %43 = call %"class.WTF::StringImpl"* @_ZNK5blink4KURL8ProtocolEv(%"class.blink::KURL"* nonnull %10) #8
  %44 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %43, %"class.WTF::StringImpl"** %44, align 8
  %45 = call zeroext i1 @_ZN5blink14SchemeRegistry15IsSpecialSchemeERKN3WTF6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %9) #8
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %47, label %61, label %48

48:                                               ; preds = %40
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %48
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %54, %48 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #8
  br label %61

61:                                               ; preds = %60, %57, %40
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %10) #8
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %42) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #8
  br i1 %45, label %211, label %62

62:                                               ; preds = %61
  %63 = bitcast %"class.WTF::StringAppend"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #8
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %141, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %83

73:                                               ; preds = %66
  %74 = zext i32 %72 to i33
  %75 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %74, i33 1) #8
  %76 = extractvalue { i33, i1 } %75, 1
  %77 = extractvalue { i33, i1 } %75, 0
  %78 = icmp slt i33 %77, 0
  %79 = or i1 %76, %78
  br i1 %79, label %80, label %81, !prof !2

80:                                               ; preds = %73
  call void @llvm.trap() #8
  unreachable

81:                                               ; preds = %73
  %82 = trunc i33 %77 to i32
  store i32 %82, i32* %71, align 4
  br label %83

83:                                               ; preds = %81, %66
  %84 = phi i32 [ %82, %81 ], [ %72, %66 ]
  %85 = load atomic i32, i32* %67 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %98

88:                                               ; preds = %83
  %89 = zext i32 %84 to i33
  %90 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %89, i33 1) #8
  %91 = extractvalue { i33, i1 } %90, 1
  %92 = extractvalue { i33, i1 } %90, 0
  %93 = icmp slt i33 %92, 0
  %94 = or i1 %91, %93
  br i1 %94, label %95, label %96, !prof !2

95:                                               ; preds = %88
  call void @llvm.trap() #8
  unreachable

96:                                               ; preds = %88
  %97 = trunc i33 %92 to i32
  store i32 %97, i32* %71, align 4
  br label %98

98:                                               ; preds = %96, %83
  %99 = phi i32 [ %97, %96 ], [ %84, %83 ]
  %100 = load atomic i32, i32* %67 monotonic, align 4
  %101 = and i32 %100, 2
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %105

103:                                              ; preds = %98
  %104 = add i32 %99, -1
  store i32 %104, i32* %71, align 4
  br label %105

105:                                              ; preds = %103, %98
  %106 = phi i32 [ %104, %103 ], [ %99, %98 ]
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %109

108:                                              ; preds = %105
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %64) #8
  br label %109

109:                                              ; preds = %105, %108
  %110 = load atomic i32, i32* %67 monotonic, align 4, !noalias !23
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = load i32, i32* %71, align 4
  br i1 %112, label %114, label %124

114:                                              ; preds = %109
  %115 = zext i32 %113 to i33
  %116 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %115, i33 1) #8
  %117 = extractvalue { i33, i1 } %116, 1
  %118 = extractvalue { i33, i1 } %116, 0
  %119 = icmp slt i33 %118, 0
  %120 = or i1 %117, %119
  br i1 %120, label %121, label %122, !prof !2

121:                                              ; preds = %114
  call void @llvm.trap() #8, !noalias !23
  unreachable

122:                                              ; preds = %114
  %123 = trunc i33 %118 to i32
  store i32 %123, i32* %71, align 4, !noalias !23
  br label %124

124:                                              ; preds = %109, %122
  %125 = phi i32 [ %123, %122 ], [ %113, %109 ]
  %126 = bitcast %"class.WTF::StringAppend"* %11 to i64*
  store i64 ptrtoint ([14 x i8]* @.str.13 to i64), i64* %126, align 8, !alias.scope !23
  %127 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %11, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %64, %"class.WTF::StringImpl"** %127, align 8, !alias.scope !23
  %128 = load atomic i32, i32* %67 monotonic, align 4, !noalias !23
  %129 = and i32 %128, 2
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %145

131:                                              ; preds = %124
  %132 = zext i32 %125 to i33
  %133 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %132, i33 1) #8
  %134 = extractvalue { i33, i1 } %133, 1
  %135 = extractvalue { i33, i1 } %133, 0
  %136 = icmp slt i33 %135, 0
  %137 = or i1 %134, %136
  br i1 %137, label %138, label %139, !prof !2

138:                                              ; preds = %131
  call void @llvm.trap() #8, !noalias !23
  unreachable

139:                                              ; preds = %131
  %140 = trunc i33 %135 to i32
  store i32 %140, i32* %71, align 4, !noalias !23
  br label %145

141:                                              ; preds = %62
  %142 = bitcast %"class.WTF::StringAppend"* %11 to i64*
  store i64 ptrtoint ([14 x i8]* @.str.13 to i64), i64* %142, align 8, !alias.scope !23
  %143 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %11, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %143, align 8, !alias.scope !23
  %144 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.14, i64 0, i64 0), i8** %144, align 8, !alias.scope !23
  br label %157

145:                                              ; preds = %139, %124
  %146 = phi i32 [ %140, %139 ], [ %125, %124 ]
  %147 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.14, i64 0, i64 0), i8** %147, align 8, !alias.scope !23
  %148 = load atomic i32, i32* %67 monotonic, align 4, !noalias !23
  %149 = and i32 %148, 2
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %153

151:                                              ; preds = %145
  %152 = add i32 %146, -1
  store i32 %152, i32* %71, align 4, !noalias !23
  br label %153

153:                                              ; preds = %151, %145
  %154 = phi i32 [ %152, %151 ], [ %146, %145 ]
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %157

156:                                              ; preds = %153
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %64) #8, !noalias !23
  br label %157

157:                                              ; preds = %141, %153, %156
  %158 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %11)
  %159 = ptrtoint %"class.WTF::StringImpl"* %158 to i64
  %160 = bitcast %"class.WTF::String"* %4 to i64*
  %161 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %162 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %161, align 8
  store i64 %159, i64* %160, align 8
  %163 = icmp eq %"class.WTF::StringImpl"* %162, null
  br i1 %163, label %177, label %164

164:                                              ; preds = %157
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = load atomic i32, i32* %165 monotonic, align 4
  %167 = and i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 0
  %170 = load i32, i32* %169, align 4
  br i1 %168, label %171, label %173

171:                                              ; preds = %164
  %172 = add i32 %170, -1
  store i32 %172, i32* %169, align 4
  br label %173

173:                                              ; preds = %171, %164
  %174 = phi i32 [ %172, %171 ], [ %170, %164 ]
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %177

176:                                              ; preds = %173
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %162) #8
  br label %177

177:                                              ; preds = %176, %173, %157
  %178 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %11, i64 0, i32 0, i32 1, i32 0, i32 0
  %179 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %178, align 8
  %180 = icmp eq %"class.WTF::StringImpl"* %179, null
  br i1 %180, label %194, label %181

181:                                              ; preds = %177
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %183 = load atomic i32, i32* %182 monotonic, align 4
  %184 = and i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 0
  %187 = load i32, i32* %186, align 4
  br i1 %185, label %188, label %190

188:                                              ; preds = %181
  %189 = add i32 %187, -1
  store i32 %189, i32* %186, align 4
  br label %190

190:                                              ; preds = %188, %181
  %191 = phi i32 [ %189, %188 ], [ %187, %181 ]
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %193, label %194

193:                                              ; preds = %190
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %179) #8
  br label %194

194:                                              ; preds = %177, %190, %193
  br i1 %65, label %208, label %195

195:                                              ; preds = %194
  %196 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %197 = load atomic i32, i32* %196 monotonic, align 4
  %198 = and i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 0
  %201 = load i32, i32* %200, align 4
  br i1 %199, label %202, label %204

202:                                              ; preds = %195
  %203 = add i32 %201, -1
  store i32 %203, i32* %200, align 4
  br label %204

204:                                              ; preds = %202, %195
  %205 = phi i32 [ %203, %202 ], [ %201, %195 ]
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %208

207:                                              ; preds = %204
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %64) #8
  br label %208

208:                                              ; preds = %194, %204, %207
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #8
  %209 = getelementptr inbounds %"class.absl::optional.218", %"class.absl::optional.218"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %209, align 8
  %210 = getelementptr inbounds %"class.absl::optional.218", %"class.absl::optional.218"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %210, i8 0, i64 112, i1 false) #8
  br label %369

211:                                              ; preds = %61, %36
  %212 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %212) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %212, i8 -86, i64 24, i1 false)
  call void @_ZNK5blink9ImportMap11MatchPrefixERKNS_15ParsedSpecifierERKN3WTF7HashMapINS4_6StringENS_4KURLENS4_10StringHashENS4_10HashTraitsIS6_EENS9_IS7_EENS4_18PartitionAllocatorEEE(%"class.absl::optional"* nonnull sret %12, %"class.blink::ImportMap"* undef, %"class.blink::ParsedSpecifier"* dereferenceable(128) %2, %"class.WTF::HashMap"* dereferenceable(24) %3)
  %213 = load i8, i8* %212, align 8, !range !22
  %214 = icmp eq i8 %213, 0
  br i1 %214, label %220, label %215

215:                                              ; preds = %211
  %216 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %13, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %216) #8
  %217 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %12, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZNK5blink9ImportMap27ResolveImportsMatchInternalERKN3WTF6StringERKNS1_29HashTableConstIteratorAdapterINS1_9HashTableIS2_NS1_12KeyValuePairIS2_NS_4KURLEEENS1_24KeyValuePairKeyExtractorENS1_10StringHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS2_EENSD_IS8_EEEESE_NS1_18PartitionAllocatorEEES9_EEPS2_(%"class.blink::KURL"* nonnull sret %13, %"class.blink::ImportMap"* undef, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"struct.WTF::HashTableConstIteratorAdapter"* dereferenceable(16) %217, %"class.WTF::String"* %4)
  %218 = getelementptr inbounds %"class.absl::optional.218", %"class.absl::optional.218"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %218, align 8
  %219 = getelementptr inbounds %"class.absl::optional.218", %"class.absl::optional.218"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %219, %"class.blink::KURL"* nonnull dereferenceable(112) %13) #8
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %216) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %212) #8
  br label %369

220:                                              ; preds = %211
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %212) #8
  %221 = bitcast %"class.WTF::StringAppend"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %221) #8
  %222 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %223 = icmp eq %"class.WTF::StringImpl"* %222, null
  br i1 %223, label %299, label %224

224:                                              ; preds = %220
  %225 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %222, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %226 = load atomic i32, i32* %225 monotonic, align 4
  %227 = and i32 %226, 2
  %228 = icmp eq i32 %227, 0
  %229 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %222, i64 0, i32 0
  %230 = load i32, i32* %229, align 4
  br i1 %228, label %231, label %241

231:                                              ; preds = %224
  %232 = zext i32 %230 to i33
  %233 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %232, i33 1) #8
  %234 = extractvalue { i33, i1 } %233, 1
  %235 = extractvalue { i33, i1 } %233, 0
  %236 = icmp slt i33 %235, 0
  %237 = or i1 %234, %236
  br i1 %237, label %238, label %239, !prof !2

238:                                              ; preds = %231
  call void @llvm.trap() #8
  unreachable

239:                                              ; preds = %231
  %240 = trunc i33 %235 to i32
  store i32 %240, i32* %229, align 4
  br label %241

241:                                              ; preds = %239, %224
  %242 = phi i32 [ %240, %239 ], [ %230, %224 ]
  %243 = load atomic i32, i32* %225 monotonic, align 4
  %244 = and i32 %243, 2
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %246, label %256

246:                                              ; preds = %241
  %247 = zext i32 %242 to i33
  %248 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %247, i33 1) #8
  %249 = extractvalue { i33, i1 } %248, 1
  %250 = extractvalue { i33, i1 } %248, 0
  %251 = icmp slt i33 %250, 0
  %252 = or i1 %249, %251
  br i1 %252, label %253, label %254, !prof !2

253:                                              ; preds = %246
  call void @llvm.trap() #8
  unreachable

254:                                              ; preds = %246
  %255 = trunc i33 %250 to i32
  store i32 %255, i32* %229, align 4
  br label %256

256:                                              ; preds = %254, %241
  %257 = phi i32 [ %255, %254 ], [ %242, %241 ]
  %258 = load atomic i32, i32* %225 monotonic, align 4
  %259 = and i32 %258, 2
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %261, label %263

261:                                              ; preds = %256
  %262 = add i32 %257, -1
  store i32 %262, i32* %229, align 4
  br label %263

263:                                              ; preds = %261, %256
  %264 = phi i32 [ %262, %261 ], [ %257, %256 ]
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %266, label %267

266:                                              ; preds = %263
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %222) #8
  br label %267

267:                                              ; preds = %263, %266
  %268 = load atomic i32, i32* %225 monotonic, align 4, !noalias !26
  %269 = and i32 %268, 2
  %270 = icmp eq i32 %269, 0
  %271 = load i32, i32* %229, align 4
  br i1 %270, label %272, label %282

272:                                              ; preds = %267
  %273 = zext i32 %271 to i33
  %274 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %273, i33 1) #8
  %275 = extractvalue { i33, i1 } %274, 1
  %276 = extractvalue { i33, i1 } %274, 0
  %277 = icmp slt i33 %276, 0
  %278 = or i1 %275, %277
  br i1 %278, label %279, label %280, !prof !2

279:                                              ; preds = %272
  call void @llvm.trap() #8, !noalias !26
  unreachable

280:                                              ; preds = %272
  %281 = trunc i33 %276 to i32
  store i32 %281, i32* %229, align 4, !noalias !26
  br label %282

282:                                              ; preds = %267, %280
  %283 = phi i32 [ %281, %280 ], [ %271, %267 ]
  %284 = bitcast %"class.WTF::StringAppend"* %14 to i64*
  store i64 ptrtoint ([14 x i8]* @.str.13 to i64), i64* %284, align 8, !alias.scope !26
  %285 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %14, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %222, %"class.WTF::StringImpl"** %285, align 8, !alias.scope !26
  %286 = load atomic i32, i32* %225 monotonic, align 4, !noalias !26
  %287 = and i32 %286, 2
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %289, label %303

289:                                              ; preds = %282
  %290 = zext i32 %283 to i33
  %291 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %290, i33 1) #8
  %292 = extractvalue { i33, i1 } %291, 1
  %293 = extractvalue { i33, i1 } %291, 0
  %294 = icmp slt i33 %293, 0
  %295 = or i1 %292, %294
  br i1 %295, label %296, label %297, !prof !2

296:                                              ; preds = %289
  call void @llvm.trap() #8, !noalias !26
  unreachable

297:                                              ; preds = %289
  %298 = trunc i33 %293 to i32
  store i32 %298, i32* %229, align 4, !noalias !26
  br label %303

299:                                              ; preds = %220
  %300 = bitcast %"class.WTF::StringAppend"* %14 to i64*
  store i64 ptrtoint ([14 x i8]* @.str.13 to i64), i64* %300, align 8, !alias.scope !26
  %301 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %14, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %301, align 8, !alias.scope !26
  %302 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %14, i64 0, i32 1
  store i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.15, i64 0, i64 0), i8** %302, align 8, !alias.scope !26
  br label %315

303:                                              ; preds = %297, %282
  %304 = phi i32 [ %298, %297 ], [ %283, %282 ]
  %305 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %14, i64 0, i32 1
  store i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.15, i64 0, i64 0), i8** %305, align 8, !alias.scope !26
  %306 = load atomic i32, i32* %225 monotonic, align 4, !noalias !26
  %307 = and i32 %306, 2
  %308 = icmp eq i32 %307, 0
  br i1 %308, label %309, label %311

309:                                              ; preds = %303
  %310 = add i32 %304, -1
  store i32 %310, i32* %229, align 4, !noalias !26
  br label %311

311:                                              ; preds = %309, %303
  %312 = phi i32 [ %310, %309 ], [ %304, %303 ]
  %313 = icmp eq i32 %312, 0
  br i1 %313, label %314, label %315

314:                                              ; preds = %311
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %222) #8, !noalias !26
  br label %315

315:                                              ; preds = %299, %311, %314
  %316 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %14)
  %317 = ptrtoint %"class.WTF::StringImpl"* %316 to i64
  %318 = bitcast %"class.WTF::String"* %4 to i64*
  %319 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %320 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %319, align 8
  store i64 %317, i64* %318, align 8
  %321 = icmp eq %"class.WTF::StringImpl"* %320, null
  br i1 %321, label %335, label %322

322:                                              ; preds = %315
  %323 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %320, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %324 = load atomic i32, i32* %323 monotonic, align 4
  %325 = and i32 %324, 2
  %326 = icmp eq i32 %325, 0
  %327 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %320, i64 0, i32 0
  %328 = load i32, i32* %327, align 4
  br i1 %326, label %329, label %331

329:                                              ; preds = %322
  %330 = add i32 %328, -1
  store i32 %330, i32* %327, align 4
  br label %331

331:                                              ; preds = %329, %322
  %332 = phi i32 [ %330, %329 ], [ %328, %322 ]
  %333 = icmp eq i32 %332, 0
  br i1 %333, label %334, label %335

334:                                              ; preds = %331
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %320) #8
  br label %335

335:                                              ; preds = %334, %331, %315
  %336 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %14, i64 0, i32 0, i32 1, i32 0, i32 0
  %337 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %336, align 8
  %338 = icmp eq %"class.WTF::StringImpl"* %337, null
  br i1 %338, label %352, label %339

339:                                              ; preds = %335
  %340 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %337, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %341 = load atomic i32, i32* %340 monotonic, align 4
  %342 = and i32 %341, 2
  %343 = icmp eq i32 %342, 0
  %344 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %337, i64 0, i32 0
  %345 = load i32, i32* %344, align 4
  br i1 %343, label %346, label %348

346:                                              ; preds = %339
  %347 = add i32 %345, -1
  store i32 %347, i32* %344, align 4
  br label %348

348:                                              ; preds = %346, %339
  %349 = phi i32 [ %347, %346 ], [ %345, %339 ]
  %350 = icmp eq i32 %349, 0
  br i1 %350, label %351, label %352

351:                                              ; preds = %348
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %337) #8
  br label %352

352:                                              ; preds = %335, %348, %351
  br i1 %223, label %366, label %353

353:                                              ; preds = %352
  %354 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %222, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %355 = load atomic i32, i32* %354 monotonic, align 4
  %356 = and i32 %355, 2
  %357 = icmp eq i32 %356, 0
  %358 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %222, i64 0, i32 0
  %359 = load i32, i32* %358, align 4
  br i1 %357, label %360, label %362

360:                                              ; preds = %353
  %361 = add i32 %359, -1
  store i32 %361, i32* %358, align 4
  br label %362

362:                                              ; preds = %360, %353
  %363 = phi i32 [ %361, %360 ], [ %359, %353 ]
  %364 = icmp eq i32 %363, 0
  br i1 %364, label %365, label %366

365:                                              ; preds = %362
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %222) #8
  br label %366

366:                                              ; preds = %352, %362, %365
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %221) #8
  %367 = getelementptr inbounds %"class.absl::optional.218", %"class.absl::optional.218"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %367, align 8
  %368 = getelementptr inbounds %"class.absl::optional.218", %"class.absl::optional.218"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %368, i8 0, i64 112, i1 false) #8
  br label %369

369:                                              ; preds = %215, %366, %208, %32
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #8
  %370 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %371 = icmp eq %"class.WTF::StringImpl"* %370, null
  br i1 %371, label %385, label %372

372:                                              ; preds = %369
  %373 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %370, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %374 = load atomic i32, i32* %373 monotonic, align 4
  %375 = and i32 %374, 2
  %376 = icmp eq i32 %375, 0
  %377 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %370, i64 0, i32 0
  %378 = load i32, i32* %377, align 4
  br i1 %376, label %379, label %381

379:                                              ; preds = %372
  %380 = add i32 %378, -1
  store i32 %380, i32* %377, align 4
  br label %381

381:                                              ; preds = %379, %372
  %382 = phi i32 [ %380, %379 ], [ %378, %372 ]
  %383 = icmp eq i32 %382, 0
  br i1 %383, label %384, label %385

384:                                              ; preds = %381
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %370) #8
  br label %385

385:                                              ; preds = %369, %381, %384
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9ImportMap27ResolveImportsMatchInternalERKN3WTF6StringERKNS1_29HashTableConstIteratorAdapterINS1_9HashTableIS2_NS1_12KeyValuePairIS2_NS_4KURLEEENS1_24KeyValuePairKeyExtractorENS1_10StringHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS2_EENSD_IS8_EEEESE_NS1_18PartitionAllocatorEEES9_EEPS2_(%"class.blink::KURL"* noalias sret, %"class.blink::ImportMap"* nocapture readnone, %"class.WTF::String"* dereferenceable(8), %"struct.WTF::HashTableConstIteratorAdapter"* nocapture readonly dereferenceable(16), %"class.WTF::String"* nocapture) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::StringAppend.224", align 8
  %7 = alloca %"class.WTF::StringAppend.224", align 8
  %8 = alloca %"class.WTF::StringAppend.224", align 8
  %9 = alloca %"class.WTF::StringAppend.224", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::StringAppend.223", align 8
  %12 = alloca %"class.WTF::StringAppend.224", align 8
  %13 = alloca %"class.WTF::StringAppend", align 8
  %14 = alloca %"class.blink::KURL", align 8
  %15 = alloca %"class.WTF::StringAppend.223", align 8
  %16 = alloca %"class.WTF::StringAppend.224", align 8
  %17 = alloca %"class.WTF::StringAppend", align 8
  %18 = alloca %"class.WTF::StringView", align 8
  %19 = alloca %"class.WTF::StringAppend.223", align 8
  %20 = alloca %"class.WTF::StringAppend.224", align 8
  %21 = alloca %"class.WTF::StringAppend", align 8
  %22 = alloca %"class.WTF::StringAppend.225", align 8
  %23 = alloca %"class.WTF::StringAppend.223", align 8
  %24 = alloca %"class.WTF::StringAppend.224", align 8
  %25 = alloca %"class.WTF::StringAppend", align 8
  %26 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #8
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %27, align 8
  %28 = getelementptr inbounds %"struct.WTF::HashTableConstIteratorAdapter", %"struct.WTF::HashTableConstIteratorAdapter"* %3, i64 0, i32 0, i32 0
  %29 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %28, align 8
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %36, label %33

33:                                               ; preds = %5
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %35 = load i32, i32* %34, align 4
  br label %36

36:                                               ; preds = %5, %33
  %37 = phi i32 [ %35, %33 ], [ 0, %5 ]
  %38 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %2, i32 %37, i32 -1) #8
  store %"class.WTF::StringImpl"* %38, %"class.WTF::StringImpl"** %27, align 8
  %39 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %28, align 8
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %39, i64 0, i32 1
  %41 = tail call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* %40) #8
  br i1 %41, label %334, label %42

42:                                               ; preds = %36
  %43 = bitcast %"class.WTF::StringAppend.223"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %43) #8
  %44 = bitcast %"class.WTF::StringAppend.224"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %44) #8
  %45 = bitcast %"class.WTF::StringAppend"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #8
  %46 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %124, label %49

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %66

56:                                               ; preds = %49
  %57 = zext i32 %55 to i33
  %58 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %57, i33 1) #8
  %59 = extractvalue { i33, i1 } %58, 1
  %60 = extractvalue { i33, i1 } %58, 0
  %61 = icmp slt i33 %60, 0
  %62 = or i1 %59, %61
  br i1 %62, label %63, label %64, !prof !2

63:                                               ; preds = %56
  tail call void @llvm.trap() #8
  unreachable

64:                                               ; preds = %56
  %65 = trunc i33 %60 to i32
  store i32 %65, i32* %54, align 4
  br label %66

66:                                               ; preds = %64, %49
  %67 = phi i32 [ %65, %64 ], [ %55, %49 ]
  %68 = load atomic i32, i32* %50 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %81

71:                                               ; preds = %66
  %72 = zext i32 %67 to i33
  %73 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %72, i33 1) #8
  %74 = extractvalue { i33, i1 } %73, 1
  %75 = extractvalue { i33, i1 } %73, 0
  %76 = icmp slt i33 %75, 0
  %77 = or i1 %74, %76
  br i1 %77, label %78, label %79, !prof !2

78:                                               ; preds = %71
  tail call void @llvm.trap() #8
  unreachable

79:                                               ; preds = %71
  %80 = trunc i33 %75 to i32
  store i32 %80, i32* %54, align 4
  br label %81

81:                                               ; preds = %79, %66
  %82 = phi i32 [ %80, %79 ], [ %67, %66 ]
  %83 = load atomic i32, i32* %50 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %88

86:                                               ; preds = %81
  %87 = add i32 %82, -1
  store i32 %87, i32* %54, align 4
  br label %88

88:                                               ; preds = %86, %81
  %89 = phi i32 [ %87, %86 ], [ %82, %81 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %47) #8
  br label %92

92:                                               ; preds = %88, %91
  %93 = load atomic i32, i32* %50 monotonic, align 4, !noalias !29
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = load i32, i32* %54, align 4
  br i1 %95, label %97, label %107

97:                                               ; preds = %92
  %98 = zext i32 %96 to i33
  %99 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %98, i33 1) #8
  %100 = extractvalue { i33, i1 } %99, 1
  %101 = extractvalue { i33, i1 } %99, 0
  %102 = icmp slt i33 %101, 0
  %103 = or i1 %100, %102
  br i1 %103, label %104, label %105, !prof !2

104:                                              ; preds = %97
  tail call void @llvm.trap() #8, !noalias !29
  unreachable

105:                                              ; preds = %97
  %106 = trunc i33 %101 to i32
  store i32 %106, i32* %54, align 4, !noalias !29
  br label %107

107:                                              ; preds = %92, %105
  %108 = phi i32 [ %106, %105 ], [ %96, %92 ]
  %109 = bitcast %"class.WTF::StringAppend"* %13 to i64*
  store i64 ptrtoint ([14 x i8]* @.str.13 to i64), i64* %109, align 8, !alias.scope !29
  %110 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %13, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %47, %"class.WTF::StringImpl"** %110, align 8, !alias.scope !29
  %111 = load atomic i32, i32* %50 monotonic, align 4, !noalias !29
  %112 = and i32 %111, 2
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %128

114:                                              ; preds = %107
  %115 = zext i32 %108 to i33
  %116 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %115, i33 1) #8
  %117 = extractvalue { i33, i1 } %116, 1
  %118 = extractvalue { i33, i1 } %116, 0
  %119 = icmp slt i33 %118, 0
  %120 = or i1 %117, %119
  br i1 %120, label %121, label %122, !prof !2

121:                                              ; preds = %114
  tail call void @llvm.trap() #8, !noalias !29
  unreachable

122:                                              ; preds = %114
  %123 = trunc i33 %118 to i32
  store i32 %123, i32* %54, align 4, !noalias !29
  br label %128

124:                                              ; preds = %42
  %125 = bitcast %"class.WTF::StringAppend"* %13 to i64*
  store i64 ptrtoint ([14 x i8]* @.str.13 to i64), i64* %125, align 8, !alias.scope !29
  %126 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %13, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %126, align 8, !alias.scope !29
  %127 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %13, i64 0, i32 1
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.16, i64 0, i64 0), i8** %127, align 8, !alias.scope !29
  br label %140

128:                                              ; preds = %122, %107
  %129 = phi i32 [ %123, %122 ], [ %108, %107 ]
  %130 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %13, i64 0, i32 1
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.16, i64 0, i64 0), i8** %130, align 8, !alias.scope !29
  %131 = load atomic i32, i32* %50 monotonic, align 4, !noalias !29
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %136

134:                                              ; preds = %128
  %135 = add i32 %129, -1
  store i32 %135, i32* %54, align 4, !noalias !29
  br label %136

136:                                              ; preds = %134, %128
  %137 = phi i32 [ %135, %134 ], [ %129, %128 ]
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %140

139:                                              ; preds = %136
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %47) #8, !noalias !29
  br label %140

140:                                              ; preds = %124, %136, %139
  %141 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %28, align 8
  %142 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %142, align 8
  %144 = icmp eq %"class.WTF::StringImpl"* %143, null
  br i1 %144, label %162, label %145

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load atomic i32, i32* %146 monotonic, align 4
  %148 = and i32 %147, 2
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %162

150:                                              ; preds = %145
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 0
  %152 = load i32, i32* %151, align 4
  %153 = zext i32 %152 to i33
  %154 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %153, i33 1) #8
  %155 = extractvalue { i33, i1 } %154, 1
  %156 = extractvalue { i33, i1 } %154, 0
  %157 = icmp slt i33 %156, 0
  %158 = or i1 %155, %157
  br i1 %158, label %159, label %160, !prof !2

159:                                              ; preds = %150
  tail call void @llvm.trap() #8
  unreachable

160:                                              ; preds = %150
  %161 = trunc i33 %156 to i32
  store i32 %161, i32* %151, align 4
  br label %162

162:                                              ; preds = %140, %145, %160
  call void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.224"* nonnull sret %12, %"class.WTF::StringAppend"* nonnull dereferenceable(24) %13, %"class.WTF::StringImpl"* %143)
  %163 = bitcast %"class.WTF::StringAppend.224"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %163)
  %164 = bitcast %"class.WTF::StringAppend.224"* %12 to i64*
  %165 = load i64, i64* %164, align 8, !noalias !32
  %166 = bitcast %"class.WTF::StringAppend.224"* %9 to i64*
  store i64 %165, i64* %166, align 8, !noalias !32
  %167 = getelementptr inbounds %"class.WTF::StringAppend.224", %"class.WTF::StringAppend.224"* %12, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %168 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %167, align 8, !noalias !32
  %169 = getelementptr inbounds %"class.WTF::StringAppend.224", %"class.WTF::StringAppend.224"* %9, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %168, %"class.WTF::StringImpl"** %169, align 8, !noalias !32
  %170 = icmp eq %"class.WTF::StringImpl"* %168, null
  br i1 %170, label %188, label %171

171:                                              ; preds = %162
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %168, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %173 = load atomic i32, i32* %172 monotonic, align 4
  %174 = and i32 %173, 2
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %188

176:                                              ; preds = %171
  %177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %168, i64 0, i32 0
  %178 = load i32, i32* %177, align 4
  %179 = zext i32 %178 to i33
  %180 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %179, i33 1) #8
  %181 = extractvalue { i33, i1 } %180, 1
  %182 = extractvalue { i33, i1 } %180, 0
  %183 = icmp slt i33 %182, 0
  %184 = or i1 %181, %183
  br i1 %184, label %185, label %186, !prof !2

185:                                              ; preds = %176
  call void @llvm.trap() #8
  unreachable

186:                                              ; preds = %176
  %187 = trunc i33 %182 to i32
  store i32 %187, i32* %177, align 4
  br label %188

188:                                              ; preds = %186, %171, %162
  %189 = getelementptr inbounds %"class.WTF::StringAppend.224", %"class.WTF::StringAppend.224"* %9, i64 0, i32 0, i32 1
  %190 = getelementptr inbounds %"class.WTF::StringAppend.224", %"class.WTF::StringAppend.224"* %12, i64 0, i32 0, i32 1
  %191 = bitcast i8** %190 to i64*
  %192 = load i64, i64* %191, align 8, !noalias !32
  %193 = bitcast i8** %189 to i64*
  store i64 %192, i64* %193, align 8, !noalias !32
  %194 = getelementptr inbounds %"class.WTF::StringAppend.224", %"class.WTF::StringAppend.224"* %12, i64 0, i32 1, i32 0, i32 0
  %195 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %194, align 8, !noalias !32
  %196 = getelementptr inbounds %"class.WTF::StringAppend.224", %"class.WTF::StringAppend.224"* %9, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %195, %"class.WTF::StringImpl"** %196, align 8, !noalias !32
  %197 = icmp eq %"class.WTF::StringImpl"* %195, null
  br i1 %197, label %215, label %198

198:                                              ; preds = %188
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %195, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %200 = load atomic i32, i32* %199 monotonic, align 4
  %201 = and i32 %200, 2
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %203, label %215

203:                                              ; preds = %198
  %204 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %195, i64 0, i32 0
  %205 = load i32, i32* %204, align 4
  %206 = zext i32 %205 to i33
  %207 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %206, i33 1) #8
  %208 = extractvalue { i33, i1 } %207, 1
  %209 = extractvalue { i33, i1 } %207, 0
  %210 = icmp slt i33 %209, 0
  %211 = or i1 %208, %210
  br i1 %211, label %212, label %213, !prof !2

212:                                              ; preds = %203
  call void @llvm.trap() #8
  unreachable

213:                                              ; preds = %203
  %214 = trunc i33 %209 to i32
  store i32 %214, i32* %204, align 4
  br label %215

215:                                              ; preds = %188, %198, %213
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend.223"* nonnull %11, %"class.WTF::StringAppend.224"* nonnull byval(%"class.WTF::StringAppend.224") align 8 %9, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.17, i64 0, i64 0)) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %163)
  %216 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend.223"* nonnull %11)
  %217 = ptrtoint %"class.WTF::StringImpl"* %216 to i64
  %218 = bitcast %"class.WTF::String"* %4 to i64*
  %219 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %220 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %219, align 8
  store i64 %217, i64* %218, align 8
  %221 = icmp eq %"class.WTF::StringImpl"* %220, null
  br i1 %221, label %235, label %222

222:                                              ; preds = %215
  %223 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %220, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %224 = load atomic i32, i32* %223 monotonic, align 4
  %225 = and i32 %224, 2
  %226 = icmp eq i32 %225, 0
  %227 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %220, i64 0, i32 0
  %228 = load i32, i32* %227, align 4
  br i1 %226, label %229, label %231

229:                                              ; preds = %222
  %230 = add i32 %228, -1
  store i32 %230, i32* %227, align 4
  br label %231

231:                                              ; preds = %229, %222
  %232 = phi i32 [ %230, %229 ], [ %228, %222 ]
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %234, label %235

234:                                              ; preds = %231
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %220) #8
  br label %235

235:                                              ; preds = %234, %231, %215
  %236 = getelementptr inbounds %"class.WTF::StringAppend.223", %"class.WTF::StringAppend.223"* %11, i64 0, i32 0, i32 1, i32 0, i32 0
  %237 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %236, align 8
  %238 = icmp eq %"class.WTF::StringImpl"* %237, null
  br i1 %238, label %252, label %239

239:                                              ; preds = %235
  %240 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %237, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %241 = load atomic i32, i32* %240 monotonic, align 4
  %242 = and i32 %241, 2
  %243 = icmp eq i32 %242, 0
  %244 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %237, i64 0, i32 0
  %245 = load i32, i32* %244, align 4
  br i1 %243, label %246, label %248

246:                                              ; preds = %239
  %247 = add i32 %245, -1
  store i32 %247, i32* %244, align 4
  br label %248

248:                                              ; preds = %246, %239
  %249 = phi i32 [ %247, %246 ], [ %245, %239 ]
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %251, label %252

251:                                              ; preds = %248
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %237) #8
  br label %252

252:                                              ; preds = %251, %248, %235
  %253 = getelementptr inbounds %"class.WTF::StringAppend.223", %"class.WTF::StringAppend.223"* %11, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %254 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %253, align 8
  %255 = icmp eq %"class.WTF::StringImpl"* %254, null
  br i1 %255, label %269, label %256

256:                                              ; preds = %252
  %257 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %254, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %258 = load atomic i32, i32* %257 monotonic, align 4
  %259 = and i32 %258, 2
  %260 = icmp eq i32 %259, 0
  %261 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %254, i64 0, i32 0
  %262 = load i32, i32* %261, align 4
  br i1 %260, label %263, label %265

263:                                              ; preds = %256
  %264 = add i32 %262, -1
  store i32 %264, i32* %261, align 4
  br label %265

265:                                              ; preds = %263, %256
  %266 = phi i32 [ %264, %263 ], [ %262, %256 ]
  %267 = icmp eq i32 %266, 0
  br i1 %267, label %268, label %269

268:                                              ; preds = %265
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %254) #8
  br label %269

269:                                              ; preds = %252, %265, %268
  %270 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %194, align 8
  %271 = icmp eq %"class.WTF::StringImpl"* %270, null
  br i1 %271, label %285, label %272

272:                                              ; preds = %269
  %273 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %270, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %274 = load atomic i32, i32* %273 monotonic, align 4
  %275 = and i32 %274, 2
  %276 = icmp eq i32 %275, 0
  %277 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %270, i64 0, i32 0
  %278 = load i32, i32* %277, align 4
  br i1 %276, label %279, label %281

279:                                              ; preds = %272
  %280 = add i32 %278, -1
  store i32 %280, i32* %277, align 4
  br label %281

281:                                              ; preds = %279, %272
  %282 = phi i32 [ %280, %279 ], [ %278, %272 ]
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %284, label %285

284:                                              ; preds = %281
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %270) #8
  br label %285

285:                                              ; preds = %284, %281, %269
  %286 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %167, align 8
  %287 = icmp eq %"class.WTF::StringImpl"* %286, null
  br i1 %287, label %301, label %288

288:                                              ; preds = %285
  %289 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %286, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %290 = load atomic i32, i32* %289 monotonic, align 4
  %291 = and i32 %290, 2
  %292 = icmp eq i32 %291, 0
  %293 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %286, i64 0, i32 0
  %294 = load i32, i32* %293, align 4
  br i1 %292, label %295, label %297

295:                                              ; preds = %288
  %296 = add i32 %294, -1
  store i32 %296, i32* %293, align 4
  br label %297

297:                                              ; preds = %295, %288
  %298 = phi i32 [ %296, %295 ], [ %294, %288 ]
  %299 = icmp eq i32 %298, 0
  br i1 %299, label %300, label %301

300:                                              ; preds = %297
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %286) #8
  br label %301

301:                                              ; preds = %285, %297, %300
  %302 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %13, i64 0, i32 0, i32 1, i32 0, i32 0
  %303 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %302, align 8
  %304 = icmp eq %"class.WTF::StringImpl"* %303, null
  br i1 %304, label %318, label %305

305:                                              ; preds = %301
  %306 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %303, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %307 = load atomic i32, i32* %306 monotonic, align 4
  %308 = and i32 %307, 2
  %309 = icmp eq i32 %308, 0
  %310 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %303, i64 0, i32 0
  %311 = load i32, i32* %310, align 4
  br i1 %309, label %312, label %314

312:                                              ; preds = %305
  %313 = add i32 %311, -1
  store i32 %313, i32* %310, align 4
  br label %314

314:                                              ; preds = %312, %305
  %315 = phi i32 [ %313, %312 ], [ %311, %305 ]
  %316 = icmp eq i32 %315, 0
  br i1 %316, label %317, label %318

317:                                              ; preds = %314
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %303) #8
  br label %318

318:                                              ; preds = %301, %314, %317
  br i1 %48, label %332, label %319

319:                                              ; preds = %318
  %320 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %321 = load atomic i32, i32* %320 monotonic, align 4
  %322 = and i32 %321, 2
  %323 = icmp eq i32 %322, 0
  %324 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %325 = load i32, i32* %324, align 4
  br i1 %323, label %326, label %328

326:                                              ; preds = %319
  %327 = add i32 %325, -1
  store i32 %327, i32* %324, align 4
  br label %328

328:                                              ; preds = %326, %319
  %329 = phi i32 [ %327, %326 ], [ %325, %319 ]
  %330 = icmp eq i32 %329, 0
  br i1 %330, label %331, label %332

331:                                              ; preds = %328
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %47) #8
  br label %332

332:                                              ; preds = %318, %328, %331
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %44) #8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %43) #8
  %333 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink7NullURLEv() #8
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %0, %"class.blink::KURL"* dereferenceable(112) %333) #8
  br label %1307

334:                                              ; preds = %36
  %335 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %335) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %335, i8 -86, i64 112, i1 false)
  %336 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %336, label %337, label %340

337:                                              ; preds = %334
  %338 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %28, align 8
  %339 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %338, i64 0, i32 1
  br label %346

340:                                              ; preds = %334
  %341 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 1
  %342 = load i32, i32* %341, align 4
  %343 = icmp eq i32 %342, 0
  %344 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %28, align 8
  %345 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %344, i64 0, i32 1
  br i1 %343, label %346, label %348

346:                                              ; preds = %337, %340
  %347 = phi %"class.blink::KURL"* [ %339, %337 ], [ %345, %340 ]
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %14, %"class.blink::KURL"* dereferenceable(112) %347) #8
  br label %349

348:                                              ; preds = %340
  call void @_ZN5blink4KURLC1ERKS0_RKN3WTF6StringE(%"class.blink::KURL"* nonnull %14, %"class.blink::KURL"* dereferenceable(112) %345, %"class.WTF::String"* nonnull dereferenceable(8) %10) #8
  br label %349

349:                                              ; preds = %348, %346
  %350 = call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* nonnull %14) #8
  br i1 %350, label %643, label %351

351:                                              ; preds = %349
  %352 = bitcast %"class.WTF::StringAppend.223"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %352) #8
  %353 = bitcast %"class.WTF::StringAppend.224"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %353) #8
  %354 = bitcast %"class.WTF::StringAppend"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %354) #8
  %355 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %356 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %355, align 8
  %357 = icmp eq %"class.WTF::StringImpl"* %356, null
  br i1 %357, label %433, label %358

358:                                              ; preds = %351
  %359 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %356, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %360 = load atomic i32, i32* %359 monotonic, align 4
  %361 = and i32 %360, 2
  %362 = icmp eq i32 %361, 0
  %363 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %356, i64 0, i32 0
  %364 = load i32, i32* %363, align 4
  br i1 %362, label %365, label %375

365:                                              ; preds = %358
  %366 = zext i32 %364 to i33
  %367 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %366, i33 1) #8
  %368 = extractvalue { i33, i1 } %367, 1
  %369 = extractvalue { i33, i1 } %367, 0
  %370 = icmp slt i33 %369, 0
  %371 = or i1 %368, %370
  br i1 %371, label %372, label %373, !prof !2

372:                                              ; preds = %365
  call void @llvm.trap() #8
  unreachable

373:                                              ; preds = %365
  %374 = trunc i33 %369 to i32
  store i32 %374, i32* %363, align 4
  br label %375

375:                                              ; preds = %373, %358
  %376 = phi i32 [ %374, %373 ], [ %364, %358 ]
  %377 = load atomic i32, i32* %359 monotonic, align 4
  %378 = and i32 %377, 2
  %379 = icmp eq i32 %378, 0
  br i1 %379, label %380, label %390

380:                                              ; preds = %375
  %381 = zext i32 %376 to i33
  %382 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %381, i33 1) #8
  %383 = extractvalue { i33, i1 } %382, 1
  %384 = extractvalue { i33, i1 } %382, 0
  %385 = icmp slt i33 %384, 0
  %386 = or i1 %383, %385
  br i1 %386, label %387, label %388, !prof !2

387:                                              ; preds = %380
  call void @llvm.trap() #8
  unreachable

388:                                              ; preds = %380
  %389 = trunc i33 %384 to i32
  store i32 %389, i32* %363, align 4
  br label %390

390:                                              ; preds = %388, %375
  %391 = phi i32 [ %389, %388 ], [ %376, %375 ]
  %392 = load atomic i32, i32* %359 monotonic, align 4
  %393 = and i32 %392, 2
  %394 = icmp eq i32 %393, 0
  br i1 %394, label %395, label %397

395:                                              ; preds = %390
  %396 = add i32 %391, -1
  store i32 %396, i32* %363, align 4
  br label %397

397:                                              ; preds = %395, %390
  %398 = phi i32 [ %396, %395 ], [ %391, %390 ]
  %399 = icmp eq i32 %398, 0
  br i1 %399, label %400, label %401

400:                                              ; preds = %397
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %356) #8
  br label %401

401:                                              ; preds = %397, %400
  %402 = load atomic i32, i32* %359 monotonic, align 4, !noalias !35
  %403 = and i32 %402, 2
  %404 = icmp eq i32 %403, 0
  %405 = load i32, i32* %363, align 4
  br i1 %404, label %406, label %416

406:                                              ; preds = %401
  %407 = zext i32 %405 to i33
  %408 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %407, i33 1) #8
  %409 = extractvalue { i33, i1 } %408, 1
  %410 = extractvalue { i33, i1 } %408, 0
  %411 = icmp slt i33 %410, 0
  %412 = or i1 %409, %411
  br i1 %412, label %413, label %414, !prof !2

413:                                              ; preds = %406
  call void @llvm.trap() #8, !noalias !35
  unreachable

414:                                              ; preds = %406
  %415 = trunc i33 %410 to i32
  store i32 %415, i32* %363, align 4, !noalias !35
  br label %416

416:                                              ; preds = %401, %414
  %417 = phi i32 [ %415, %414 ], [ %405, %401 ]
  %418 = bitcast %"class.WTF::StringAppend"* %17 to i64*
  store i64 ptrtoint ([14 x i8]* @.str.13 to i64), i64* %418, align 8, !alias.scope !35
  %419 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %17, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %356, %"class.WTF::StringImpl"** %419, align 8, !alias.scope !35
  %420 = load atomic i32, i32* %359 monotonic, align 4, !noalias !35
  %421 = and i32 %420, 2
  %422 = icmp eq i32 %421, 0
  br i1 %422, label %423, label %437

423:                                              ; preds = %416
  %424 = zext i32 %417 to i33
  %425 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %424, i33 1) #8
  %426 = extractvalue { i33, i1 } %425, 1
  %427 = extractvalue { i33, i1 } %425, 0
  %428 = icmp slt i33 %427, 0
  %429 = or i1 %426, %428
  br i1 %429, label %430, label %431, !prof !2

430:                                              ; preds = %423
  call void @llvm.trap() #8, !noalias !35
  unreachable

431:                                              ; preds = %423
  %432 = trunc i33 %427 to i32
  store i32 %432, i32* %363, align 4, !noalias !35
  br label %437

433:                                              ; preds = %351
  %434 = bitcast %"class.WTF::StringAppend"* %17 to i64*
  store i64 ptrtoint ([14 x i8]* @.str.13 to i64), i64* %434, align 8, !alias.scope !35
  %435 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %17, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %435, align 8, !alias.scope !35
  %436 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %17, i64 0, i32 1
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.16, i64 0, i64 0), i8** %436, align 8, !alias.scope !35
  br label %449

437:                                              ; preds = %431, %416
  %438 = phi i32 [ %432, %431 ], [ %417, %416 ]
  %439 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %17, i64 0, i32 1
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.16, i64 0, i64 0), i8** %439, align 8, !alias.scope !35
  %440 = load atomic i32, i32* %359 monotonic, align 4, !noalias !35
  %441 = and i32 %440, 2
  %442 = icmp eq i32 %441, 0
  br i1 %442, label %443, label %445

443:                                              ; preds = %437
  %444 = add i32 %438, -1
  store i32 %444, i32* %363, align 4, !noalias !35
  br label %445

445:                                              ; preds = %443, %437
  %446 = phi i32 [ %444, %443 ], [ %438, %437 ]
  %447 = icmp eq i32 %446, 0
  br i1 %447, label %448, label %449

448:                                              ; preds = %445
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %356) #8, !noalias !35
  br label %449

449:                                              ; preds = %433, %445, %448
  %450 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %28, align 8
  %451 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %450, i64 0, i32 0, i32 0, i32 0
  %452 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %451, align 8
  %453 = icmp eq %"class.WTF::StringImpl"* %452, null
  br i1 %453, label %471, label %454

454:                                              ; preds = %449
  %455 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %452, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %456 = load atomic i32, i32* %455 monotonic, align 4
  %457 = and i32 %456, 2
  %458 = icmp eq i32 %457, 0
  br i1 %458, label %459, label %471

459:                                              ; preds = %454
  %460 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %452, i64 0, i32 0
  %461 = load i32, i32* %460, align 4
  %462 = zext i32 %461 to i33
  %463 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %462, i33 1) #8
  %464 = extractvalue { i33, i1 } %463, 1
  %465 = extractvalue { i33, i1 } %463, 0
  %466 = icmp slt i33 %465, 0
  %467 = or i1 %464, %466
  br i1 %467, label %468, label %469, !prof !2

468:                                              ; preds = %459
  call void @llvm.trap() #8
  unreachable

469:                                              ; preds = %459
  %470 = trunc i33 %465 to i32
  store i32 %470, i32* %460, align 4
  br label %471

471:                                              ; preds = %449, %454, %469
  call void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.224"* nonnull sret %16, %"class.WTF::StringAppend"* nonnull dereferenceable(24) %17, %"class.WTF::StringImpl"* %452)
  %472 = bitcast %"class.WTF::StringAppend.224"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %472)
  %473 = bitcast %"class.WTF::StringAppend.224"* %16 to i64*
  %474 = load i64, i64* %473, align 8, !noalias !38
  %475 = bitcast %"class.WTF::StringAppend.224"* %8 to i64*
  store i64 %474, i64* %475, align 8, !noalias !38
  %476 = getelementptr inbounds %"class.WTF::StringAppend.224", %"class.WTF::StringAppend.224"* %16, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %477 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %476, align 8, !noalias !38
  %478 = getelementptr inbounds %"class.WTF::StringAppend.224", %"class.WTF::StringAppend.224"* %8, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %477, %"class.WTF::StringImpl"** %478, align 8, !noalias !38
  %479 = icmp eq %"class.WTF::StringImpl"* %477, null
  br i1 %479, label %497, label %480

480:                                              ; preds = %471
  %481 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %477, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %482 = load atomic i32, i32* %481 monotonic, align 4
  %483 = and i32 %482, 2
  %484 = icmp eq i32 %483, 0
  br i1 %484, label %485, label %497

485:                                              ; preds = %480
  %486 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %477, i64 0, i32 0
  %487 = load i32, i32* %486, align 4
  %488 = zext i32 %487 to i33
  %489 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %488, i33 1) #8
  %490 = extractvalue { i33, i1 } %489, 1
  %491 = extractvalue { i33, i1 } %489, 0
  %492 = icmp slt i33 %491, 0
  %493 = or i1 %490, %492
  br i1 %493, label %494, label %495, !prof !2

494:                                              ; preds = %485
  call void @llvm.trap() #8
  unreachable

495:                                              ; preds = %485
  %496 = trunc i33 %491 to i32
  store i32 %496, i32* %486, align 4
  br label %497

497:                                              ; preds = %495, %480, %471
  %498 = getelementptr inbounds %"class.WTF::StringAppend.224", %"class.WTF::StringAppend.224"* %8, i64 0, i32 0, i32 1
  %499 = getelementptr inbounds %"class.WTF::StringAppend.224", %"class.WTF::StringAppend.224"* %16, i64 0, i32 0, i32 1
  %500 = bitcast i8** %499 to i64*
  %501 = load i64, i64* %500, align 8, !noalias !38
  %502 = bitcast i8** %498 to i64*
  store i64 %501, i64* %502, align 8, !noalias !38
  %503 = getelementptr inbounds %"class.WTF::StringAppend.224", %"class.WTF::StringAppend.224"* %16, i64 0, i32 1, i32 0, i32 0
  %504 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %503, align 8, !noalias !38
  %505 = getelementptr inbounds %"class.WTF::StringAppend.224", %"class.WTF::StringAppend.224"* %8, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %504, %"class.WTF::StringImpl"** %505, align 8, !noalias !38
  %506 = icmp eq %"class.WTF::StringImpl"* %504, null
  br i1 %506, label %524, label %507

507:                                              ; preds = %497
  %508 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %504, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %509 = load atomic i32, i32* %508 monotonic, align 4
  %510 = and i32 %509, 2
  %511 = icmp eq i32 %510, 0
  br i1 %511, label %512, label %524

512:                                              ; preds = %507
  %513 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %504, i64 0, i32 0
  %514 = load i32, i32* %513, align 4
  %515 = zext i32 %514 to i33
  %516 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %515, i33 1) #8
  %517 = extractvalue { i33, i1 } %516, 1
  %518 = extractvalue { i33, i1 } %516, 0
  %519 = icmp slt i33 %518, 0
  %520 = or i1 %517, %519
  br i1 %520, label %521, label %522, !prof !2

521:                                              ; preds = %512
  call void @llvm.trap() #8
  unreachable

522:                                              ; preds = %512
  %523 = trunc i33 %518 to i32
  store i32 %523, i32* %513, align 4
  br label %524

524:                                              ; preds = %497, %507, %522
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend.223"* nonnull %15, %"class.WTF::StringAppend.224"* nonnull byval(%"class.WTF::StringAppend.224") align 8 %8, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.18, i64 0, i64 0)) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %472)
  %525 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend.223"* nonnull %15)
  %526 = ptrtoint %"class.WTF::StringImpl"* %525 to i64
  %527 = bitcast %"class.WTF::String"* %4 to i64*
  %528 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %529 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %528, align 8
  store i64 %526, i64* %527, align 8
  %530 = icmp eq %"class.WTF::StringImpl"* %529, null
  br i1 %530, label %544, label %531

531:                                              ; preds = %524
  %532 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %529, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %533 = load atomic i32, i32* %532 monotonic, align 4
  %534 = and i32 %533, 2
  %535 = icmp eq i32 %534, 0
  %536 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %529, i64 0, i32 0
  %537 = load i32, i32* %536, align 4
  br i1 %535, label %538, label %540

538:                                              ; preds = %531
  %539 = add i32 %537, -1
  store i32 %539, i32* %536, align 4
  br label %540

540:                                              ; preds = %538, %531
  %541 = phi i32 [ %539, %538 ], [ %537, %531 ]
  %542 = icmp eq i32 %541, 0
  br i1 %542, label %543, label %544

543:                                              ; preds = %540
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %529) #8
  br label %544

544:                                              ; preds = %543, %540, %524
  %545 = getelementptr inbounds %"class.WTF::StringAppend.223", %"class.WTF::StringAppend.223"* %15, i64 0, i32 0, i32 1, i32 0, i32 0
  %546 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %545, align 8
  %547 = icmp eq %"class.WTF::StringImpl"* %546, null
  br i1 %547, label %561, label %548

548:                                              ; preds = %544
  %549 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %546, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %550 = load atomic i32, i32* %549 monotonic, align 4
  %551 = and i32 %550, 2
  %552 = icmp eq i32 %551, 0
  %553 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %546, i64 0, i32 0
  %554 = load i32, i32* %553, align 4
  br i1 %552, label %555, label %557

555:                                              ; preds = %548
  %556 = add i32 %554, -1
  store i32 %556, i32* %553, align 4
  br label %557

557:                                              ; preds = %555, %548
  %558 = phi i32 [ %556, %555 ], [ %554, %548 ]
  %559 = icmp eq i32 %558, 0
  br i1 %559, label %560, label %561

560:                                              ; preds = %557
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %546) #8
  br label %561

561:                                              ; preds = %560, %557, %544
  %562 = getelementptr inbounds %"class.WTF::StringAppend.223", %"class.WTF::StringAppend.223"* %15, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %563 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %562, align 8
  %564 = icmp eq %"class.WTF::StringImpl"* %563, null
  br i1 %564, label %578, label %565

565:                                              ; preds = %561
  %566 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %563, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %567 = load atomic i32, i32* %566 monotonic, align 4
  %568 = and i32 %567, 2
  %569 = icmp eq i32 %568, 0
  %570 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %563, i64 0, i32 0
  %571 = load i32, i32* %570, align 4
  br i1 %569, label %572, label %574

572:                                              ; preds = %565
  %573 = add i32 %571, -1
  store i32 %573, i32* %570, align 4
  br label %574

574:                                              ; preds = %572, %565
  %575 = phi i32 [ %573, %572 ], [ %571, %565 ]
  %576 = icmp eq i32 %575, 0
  br i1 %576, label %577, label %578

577:                                              ; preds = %574
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %563) #8
  br label %578

578:                                              ; preds = %561, %574, %577
  %579 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %503, align 8
  %580 = icmp eq %"class.WTF::StringImpl"* %579, null
  br i1 %580, label %594, label %581

581:                                              ; preds = %578
  %582 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %579, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %583 = load atomic i32, i32* %582 monotonic, align 4
  %584 = and i32 %583, 2
  %585 = icmp eq i32 %584, 0
  %586 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %579, i64 0, i32 0
  %587 = load i32, i32* %586, align 4
  br i1 %585, label %588, label %590

588:                                              ; preds = %581
  %589 = add i32 %587, -1
  store i32 %589, i32* %586, align 4
  br label %590

590:                                              ; preds = %588, %581
  %591 = phi i32 [ %589, %588 ], [ %587, %581 ]
  %592 = icmp eq i32 %591, 0
  br i1 %592, label %593, label %594

593:                                              ; preds = %590
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %579) #8
  br label %594

594:                                              ; preds = %593, %590, %578
  %595 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %476, align 8
  %596 = icmp eq %"class.WTF::StringImpl"* %595, null
  br i1 %596, label %610, label %597

597:                                              ; preds = %594
  %598 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %595, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %599 = load atomic i32, i32* %598 monotonic, align 4
  %600 = and i32 %599, 2
  %601 = icmp eq i32 %600, 0
  %602 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %595, i64 0, i32 0
  %603 = load i32, i32* %602, align 4
  br i1 %601, label %604, label %606

604:                                              ; preds = %597
  %605 = add i32 %603, -1
  store i32 %605, i32* %602, align 4
  br label %606

606:                                              ; preds = %604, %597
  %607 = phi i32 [ %605, %604 ], [ %603, %597 ]
  %608 = icmp eq i32 %607, 0
  br i1 %608, label %609, label %610

609:                                              ; preds = %606
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %595) #8
  br label %610

610:                                              ; preds = %594, %606, %609
  %611 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %17, i64 0, i32 0, i32 1, i32 0, i32 0
  %612 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %611, align 8
  %613 = icmp eq %"class.WTF::StringImpl"* %612, null
  br i1 %613, label %627, label %614

614:                                              ; preds = %610
  %615 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %612, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %616 = load atomic i32, i32* %615 monotonic, align 4
  %617 = and i32 %616, 2
  %618 = icmp eq i32 %617, 0
  %619 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %612, i64 0, i32 0
  %620 = load i32, i32* %619, align 4
  br i1 %618, label %621, label %623

621:                                              ; preds = %614
  %622 = add i32 %620, -1
  store i32 %622, i32* %619, align 4
  br label %623

623:                                              ; preds = %621, %614
  %624 = phi i32 [ %622, %621 ], [ %620, %614 ]
  %625 = icmp eq i32 %624, 0
  br i1 %625, label %626, label %627

626:                                              ; preds = %623
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %612) #8
  br label %627

627:                                              ; preds = %610, %623, %626
  br i1 %357, label %641, label %628

628:                                              ; preds = %627
  %629 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %356, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %630 = load atomic i32, i32* %629 monotonic, align 4
  %631 = and i32 %630, 2
  %632 = icmp eq i32 %631, 0
  %633 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %356, i64 0, i32 0
  %634 = load i32, i32* %633, align 4
  br i1 %632, label %635, label %637

635:                                              ; preds = %628
  %636 = add i32 %634, -1
  store i32 %636, i32* %633, align 4
  br label %637

637:                                              ; preds = %635, %628
  %638 = phi i32 [ %636, %635 ], [ %634, %628 ]
  %639 = icmp eq i32 %638, 0
  br i1 %639, label %640, label %641

640:                                              ; preds = %637
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %356) #8
  br label %641

641:                                              ; preds = %627, %637, %640
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %354) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %353) #8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %352) #8
  %642 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink7NullURLEv() #8
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %0, %"class.blink::KURL"* dereferenceable(112) %642) #8
  br label %1306

643:                                              ; preds = %349
  %644 = bitcast %"class.WTF::StringView"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %644) #8
  %645 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %28, align 8
  %646 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %645, i64 0, i32 1, i32 4, i32 0, i32 0
  %647 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %646, align 8
  %648 = icmp eq %"class.WTF::StringImpl"* %647, null
  br i1 %648, label %649, label %653

649:                                              ; preds = %643
  %650 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 1
  store i8* null, i8** %650, align 8
  %651 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %652 = bitcast %"class.WTF::StringView"* %18 to i64*
  store i64 %651, i64* %652, align 8
  br label %660

653:                                              ; preds = %643
  %654 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 0
  store %"class.WTF::StringImpl"* %647, %"class.WTF::StringImpl"** %654, align 8
  %655 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %647, i64 0, i32 1
  %656 = load i32, i32* %655, align 4
  %657 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %647, i64 1
  %658 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 1
  %659 = bitcast i8** %658 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %657, %"class.WTF::StringImpl"** %659, align 8
  br label %660

660:                                              ; preds = %649, %653
  %661 = phi i32 [ %656, %653 ], [ 0, %649 ]
  %662 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 2
  store i32 %661, i32* %662, align 8
  %663 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %14, i64 0, i32 4, i32 0, i32 0
  %664 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %663, align 8
  %665 = icmp eq %"class.WTF::StringImpl"* %664, null
  br i1 %665, label %666, label %668

666:                                              ; preds = %660
  %667 = icmp eq i32 %661, 0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %644) #8
  br i1 %667, label %962, label %670

668:                                              ; preds = %660
  %669 = call zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %664, %"class.WTF::StringView"* nonnull dereferenceable(24) %18) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %644) #8
  br i1 %669, label %962, label %670

670:                                              ; preds = %666, %668
  %671 = bitcast %"class.WTF::StringAppend.223"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %671) #8
  %672 = bitcast %"class.WTF::StringAppend.224"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %672) #8
  %673 = bitcast %"class.WTF::StringAppend"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %673) #8
  %674 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %675 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %674, align 8
  %676 = icmp eq %"class.WTF::StringImpl"* %675, null
  br i1 %676, label %752, label %677

677:                                              ; preds = %670
  %678 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %675, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %679 = load atomic i32, i32* %678 monotonic, align 4
  %680 = and i32 %679, 2
  %681 = icmp eq i32 %680, 0
  %682 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %675, i64 0, i32 0
  %683 = load i32, i32* %682, align 4
  br i1 %681, label %684, label %694

684:                                              ; preds = %677
  %685 = zext i32 %683 to i33
  %686 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %685, i33 1) #8
  %687 = extractvalue { i33, i1 } %686, 1
  %688 = extractvalue { i33, i1 } %686, 0
  %689 = icmp slt i33 %688, 0
  %690 = or i1 %687, %689
  br i1 %690, label %691, label %692, !prof !2

691:                                              ; preds = %684
  call void @llvm.trap() #8
  unreachable

692:                                              ; preds = %684
  %693 = trunc i33 %688 to i32
  store i32 %693, i32* %682, align 4
  br label %694

694:                                              ; preds = %692, %677
  %695 = phi i32 [ %693, %692 ], [ %683, %677 ]
  %696 = load atomic i32, i32* %678 monotonic, align 4
  %697 = and i32 %696, 2
  %698 = icmp eq i32 %697, 0
  br i1 %698, label %699, label %709

699:                                              ; preds = %694
  %700 = zext i32 %695 to i33
  %701 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %700, i33 1) #8
  %702 = extractvalue { i33, i1 } %701, 1
  %703 = extractvalue { i33, i1 } %701, 0
  %704 = icmp slt i33 %703, 0
  %705 = or i1 %702, %704
  br i1 %705, label %706, label %707, !prof !2

706:                                              ; preds = %699
  call void @llvm.trap() #8
  unreachable

707:                                              ; preds = %699
  %708 = trunc i33 %703 to i32
  store i32 %708, i32* %682, align 4
  br label %709

709:                                              ; preds = %707, %694
  %710 = phi i32 [ %708, %707 ], [ %695, %694 ]
  %711 = load atomic i32, i32* %678 monotonic, align 4
  %712 = and i32 %711, 2
  %713 = icmp eq i32 %712, 0
  br i1 %713, label %714, label %716

714:                                              ; preds = %709
  %715 = add i32 %710, -1
  store i32 %715, i32* %682, align 4
  br label %716

716:                                              ; preds = %714, %709
  %717 = phi i32 [ %715, %714 ], [ %710, %709 ]
  %718 = icmp eq i32 %717, 0
  br i1 %718, label %719, label %720

719:                                              ; preds = %716
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %675) #8
  br label %720

720:                                              ; preds = %716, %719
  %721 = load atomic i32, i32* %678 monotonic, align 4, !noalias !41
  %722 = and i32 %721, 2
  %723 = icmp eq i32 %722, 0
  %724 = load i32, i32* %682, align 4
  br i1 %723, label %725, label %735

725:                                              ; preds = %720
  %726 = zext i32 %724 to i33
  %727 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %726, i33 1) #8
  %728 = extractvalue { i33, i1 } %727, 1
  %729 = extractvalue { i33, i1 } %727, 0
  %730 = icmp slt i33 %729, 0
  %731 = or i1 %728, %730
  br i1 %731, label %732, label %733, !prof !2

732:                                              ; preds = %725
  call void @llvm.trap() #8, !noalias !41
  unreachable

733:                                              ; preds = %725
  %734 = trunc i33 %729 to i32
  store i32 %734, i32* %682, align 4, !noalias !41
  br label %735

735:                                              ; preds = %720, %733
  %736 = phi i32 [ %734, %733 ], [ %724, %720 ]
  %737 = bitcast %"class.WTF::StringAppend"* %21 to i64*
  store i64 ptrtoint ([14 x i8]* @.str.13 to i64), i64* %737, align 8, !alias.scope !41
  %738 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %21, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %675, %"class.WTF::StringImpl"** %738, align 8, !alias.scope !41
  %739 = load atomic i32, i32* %678 monotonic, align 4, !noalias !41
  %740 = and i32 %739, 2
  %741 = icmp eq i32 %740, 0
  br i1 %741, label %742, label %756

742:                                              ; preds = %735
  %743 = zext i32 %736 to i33
  %744 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %743, i33 1) #8
  %745 = extractvalue { i33, i1 } %744, 1
  %746 = extractvalue { i33, i1 } %744, 0
  %747 = icmp slt i33 %746, 0
  %748 = or i1 %745, %747
  br i1 %748, label %749, label %750, !prof !2

749:                                              ; preds = %742
  call void @llvm.trap() #8, !noalias !41
  unreachable

750:                                              ; preds = %742
  %751 = trunc i33 %746 to i32
  store i32 %751, i32* %682, align 4, !noalias !41
  br label %756

752:                                              ; preds = %670
  %753 = bitcast %"class.WTF::StringAppend"* %21 to i64*
  store i64 ptrtoint ([14 x i8]* @.str.13 to i64), i64* %753, align 8, !alias.scope !41
  %754 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %21, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %754, align 8, !alias.scope !41
  %755 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %21, i64 0, i32 1
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.16, i64 0, i64 0), i8** %755, align 8, !alias.scope !41
  br label %768

756:                                              ; preds = %750, %735
  %757 = phi i32 [ %751, %750 ], [ %736, %735 ]
  %758 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %21, i64 0, i32 1
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.16, i64 0, i64 0), i8** %758, align 8, !alias.scope !41
  %759 = load atomic i32, i32* %678 monotonic, align 4, !noalias !41
  %760 = and i32 %759, 2
  %761 = icmp eq i32 %760, 0
  br i1 %761, label %762, label %764

762:                                              ; preds = %756
  %763 = add i32 %757, -1
  store i32 %763, i32* %682, align 4, !noalias !41
  br label %764

764:                                              ; preds = %762, %756
  %765 = phi i32 [ %763, %762 ], [ %757, %756 ]
  %766 = icmp eq i32 %765, 0
  br i1 %766, label %767, label %768

767:                                              ; preds = %764
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %675) #8, !noalias !41
  br label %768

768:                                              ; preds = %752, %764, %767
  %769 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %28, align 8
  %770 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %769, i64 0, i32 0, i32 0, i32 0
  %771 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %770, align 8
  %772 = icmp eq %"class.WTF::StringImpl"* %771, null
  br i1 %772, label %790, label %773

773:                                              ; preds = %768
  %774 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %771, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %775 = load atomic i32, i32* %774 monotonic, align 4
  %776 = and i32 %775, 2
  %777 = icmp eq i32 %776, 0
  br i1 %777, label %778, label %790

778:                                              ; preds = %773
  %779 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %771, i64 0, i32 0
  %780 = load i32, i32* %779, align 4
  %781 = zext i32 %780 to i33
  %782 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %781, i33 1) #8
  %783 = extractvalue { i33, i1 } %782, 1
  %784 = extractvalue { i33, i1 } %782, 0
  %785 = icmp slt i33 %784, 0
  %786 = or i1 %783, %785
  br i1 %786, label %787, label %788, !prof !2

787:                                              ; preds = %778
  call void @llvm.trap() #8
  unreachable

788:                                              ; preds = %778
  %789 = trunc i33 %784 to i32
  store i32 %789, i32* %779, align 4
  br label %790

790:                                              ; preds = %768, %773, %788
  call void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.224"* nonnull sret %20, %"class.WTF::StringAppend"* nonnull dereferenceable(24) %21, %"class.WTF::StringImpl"* %771)
  %791 = bitcast %"class.WTF::StringAppend.224"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %791)
  %792 = bitcast %"class.WTF::StringAppend.224"* %20 to i64*
  %793 = load i64, i64* %792, align 8, !noalias !44
  %794 = bitcast %"class.WTF::StringAppend.224"* %7 to i64*
  store i64 %793, i64* %794, align 8, !noalias !44
  %795 = getelementptr inbounds %"class.WTF::StringAppend.224", %"class.WTF::StringAppend.224"* %20, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %796 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %795, align 8, !noalias !44
  %797 = getelementptr inbounds %"class.WTF::StringAppend.224", %"class.WTF::StringAppend.224"* %7, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %796, %"class.WTF::StringImpl"** %797, align 8, !noalias !44
  %798 = icmp eq %"class.WTF::StringImpl"* %796, null
  br i1 %798, label %816, label %799

799:                                              ; preds = %790
  %800 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %796, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %801 = load atomic i32, i32* %800 monotonic, align 4
  %802 = and i32 %801, 2
  %803 = icmp eq i32 %802, 0
  br i1 %803, label %804, label %816

804:                                              ; preds = %799
  %805 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %796, i64 0, i32 0
  %806 = load i32, i32* %805, align 4
  %807 = zext i32 %806 to i33
  %808 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %807, i33 1) #8
  %809 = extractvalue { i33, i1 } %808, 1
  %810 = extractvalue { i33, i1 } %808, 0
  %811 = icmp slt i33 %810, 0
  %812 = or i1 %809, %811
  br i1 %812, label %813, label %814, !prof !2

813:                                              ; preds = %804
  call void @llvm.trap() #8
  unreachable

814:                                              ; preds = %804
  %815 = trunc i33 %810 to i32
  store i32 %815, i32* %805, align 4
  br label %816

816:                                              ; preds = %814, %799, %790
  %817 = getelementptr inbounds %"class.WTF::StringAppend.224", %"class.WTF::StringAppend.224"* %7, i64 0, i32 0, i32 1
  %818 = getelementptr inbounds %"class.WTF::StringAppend.224", %"class.WTF::StringAppend.224"* %20, i64 0, i32 0, i32 1
  %819 = bitcast i8** %818 to i64*
  %820 = load i64, i64* %819, align 8, !noalias !44
  %821 = bitcast i8** %817 to i64*
  store i64 %820, i64* %821, align 8, !noalias !44
  %822 = getelementptr inbounds %"class.WTF::StringAppend.224", %"class.WTF::StringAppend.224"* %20, i64 0, i32 1, i32 0, i32 0
  %823 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %822, align 8, !noalias !44
  %824 = getelementptr inbounds %"class.WTF::StringAppend.224", %"class.WTF::StringAppend.224"* %7, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %823, %"class.WTF::StringImpl"** %824, align 8, !noalias !44
  %825 = icmp eq %"class.WTF::StringImpl"* %823, null
  br i1 %825, label %843, label %826

826:                                              ; preds = %816
  %827 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %823, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %828 = load atomic i32, i32* %827 monotonic, align 4
  %829 = and i32 %828, 2
  %830 = icmp eq i32 %829, 0
  br i1 %830, label %831, label %843

831:                                              ; preds = %826
  %832 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %823, i64 0, i32 0
  %833 = load i32, i32* %832, align 4
  %834 = zext i32 %833 to i33
  %835 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %834, i33 1) #8
  %836 = extractvalue { i33, i1 } %835, 1
  %837 = extractvalue { i33, i1 } %835, 0
  %838 = icmp slt i33 %837, 0
  %839 = or i1 %836, %838
  br i1 %839, label %840, label %841, !prof !2

840:                                              ; preds = %831
  call void @llvm.trap() #8
  unreachable

841:                                              ; preds = %831
  %842 = trunc i33 %837 to i32
  store i32 %842, i32* %832, align 4
  br label %843

843:                                              ; preds = %816, %826, %841
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend.223"* nonnull %19, %"class.WTF::StringAppend.224"* nonnull byval(%"class.WTF::StringAppend.224") align 8 %7, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.19, i64 0, i64 0)) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %791)
  %844 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend.223"* nonnull %19)
  %845 = ptrtoint %"class.WTF::StringImpl"* %844 to i64
  %846 = bitcast %"class.WTF::String"* %4 to i64*
  %847 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %848 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %847, align 8
  store i64 %845, i64* %846, align 8
  %849 = icmp eq %"class.WTF::StringImpl"* %848, null
  br i1 %849, label %863, label %850

850:                                              ; preds = %843
  %851 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %848, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %852 = load atomic i32, i32* %851 monotonic, align 4
  %853 = and i32 %852, 2
  %854 = icmp eq i32 %853, 0
  %855 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %848, i64 0, i32 0
  %856 = load i32, i32* %855, align 4
  br i1 %854, label %857, label %859

857:                                              ; preds = %850
  %858 = add i32 %856, -1
  store i32 %858, i32* %855, align 4
  br label %859

859:                                              ; preds = %857, %850
  %860 = phi i32 [ %858, %857 ], [ %856, %850 ]
  %861 = icmp eq i32 %860, 0
  br i1 %861, label %862, label %863

862:                                              ; preds = %859
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %848) #8
  br label %863

863:                                              ; preds = %862, %859, %843
  %864 = getelementptr inbounds %"class.WTF::StringAppend.223", %"class.WTF::StringAppend.223"* %19, i64 0, i32 0, i32 1, i32 0, i32 0
  %865 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %864, align 8
  %866 = icmp eq %"class.WTF::StringImpl"* %865, null
  br i1 %866, label %880, label %867

867:                                              ; preds = %863
  %868 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %865, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %869 = load atomic i32, i32* %868 monotonic, align 4
  %870 = and i32 %869, 2
  %871 = icmp eq i32 %870, 0
  %872 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %865, i64 0, i32 0
  %873 = load i32, i32* %872, align 4
  br i1 %871, label %874, label %876

874:                                              ; preds = %867
  %875 = add i32 %873, -1
  store i32 %875, i32* %872, align 4
  br label %876

876:                                              ; preds = %874, %867
  %877 = phi i32 [ %875, %874 ], [ %873, %867 ]
  %878 = icmp eq i32 %877, 0
  br i1 %878, label %879, label %880

879:                                              ; preds = %876
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %865) #8
  br label %880

880:                                              ; preds = %879, %876, %863
  %881 = getelementptr inbounds %"class.WTF::StringAppend.223", %"class.WTF::StringAppend.223"* %19, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %882 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %881, align 8
  %883 = icmp eq %"class.WTF::StringImpl"* %882, null
  br i1 %883, label %897, label %884

884:                                              ; preds = %880
  %885 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %882, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %886 = load atomic i32, i32* %885 monotonic, align 4
  %887 = and i32 %886, 2
  %888 = icmp eq i32 %887, 0
  %889 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %882, i64 0, i32 0
  %890 = load i32, i32* %889, align 4
  br i1 %888, label %891, label %893

891:                                              ; preds = %884
  %892 = add i32 %890, -1
  store i32 %892, i32* %889, align 4
  br label %893

893:                                              ; preds = %891, %884
  %894 = phi i32 [ %892, %891 ], [ %890, %884 ]
  %895 = icmp eq i32 %894, 0
  br i1 %895, label %896, label %897

896:                                              ; preds = %893
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %882) #8
  br label %897

897:                                              ; preds = %880, %893, %896
  %898 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %822, align 8
  %899 = icmp eq %"class.WTF::StringImpl"* %898, null
  br i1 %899, label %913, label %900

900:                                              ; preds = %897
  %901 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %898, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %902 = load atomic i32, i32* %901 monotonic, align 4
  %903 = and i32 %902, 2
  %904 = icmp eq i32 %903, 0
  %905 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %898, i64 0, i32 0
  %906 = load i32, i32* %905, align 4
  br i1 %904, label %907, label %909

907:                                              ; preds = %900
  %908 = add i32 %906, -1
  store i32 %908, i32* %905, align 4
  br label %909

909:                                              ; preds = %907, %900
  %910 = phi i32 [ %908, %907 ], [ %906, %900 ]
  %911 = icmp eq i32 %910, 0
  br i1 %911, label %912, label %913

912:                                              ; preds = %909
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %898) #8
  br label %913

913:                                              ; preds = %912, %909, %897
  %914 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %795, align 8
  %915 = icmp eq %"class.WTF::StringImpl"* %914, null
  br i1 %915, label %929, label %916

916:                                              ; preds = %913
  %917 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %914, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %918 = load atomic i32, i32* %917 monotonic, align 4
  %919 = and i32 %918, 2
  %920 = icmp eq i32 %919, 0
  %921 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %914, i64 0, i32 0
  %922 = load i32, i32* %921, align 4
  br i1 %920, label %923, label %925

923:                                              ; preds = %916
  %924 = add i32 %922, -1
  store i32 %924, i32* %921, align 4
  br label %925

925:                                              ; preds = %923, %916
  %926 = phi i32 [ %924, %923 ], [ %922, %916 ]
  %927 = icmp eq i32 %926, 0
  br i1 %927, label %928, label %929

928:                                              ; preds = %925
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %914) #8
  br label %929

929:                                              ; preds = %913, %925, %928
  %930 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %21, i64 0, i32 0, i32 1, i32 0, i32 0
  %931 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %930, align 8
  %932 = icmp eq %"class.WTF::StringImpl"* %931, null
  br i1 %932, label %946, label %933

933:                                              ; preds = %929
  %934 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %931, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %935 = load atomic i32, i32* %934 monotonic, align 4
  %936 = and i32 %935, 2
  %937 = icmp eq i32 %936, 0
  %938 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %931, i64 0, i32 0
  %939 = load i32, i32* %938, align 4
  br i1 %937, label %940, label %942

940:                                              ; preds = %933
  %941 = add i32 %939, -1
  store i32 %941, i32* %938, align 4
  br label %942

942:                                              ; preds = %940, %933
  %943 = phi i32 [ %941, %940 ], [ %939, %933 ]
  %944 = icmp eq i32 %943, 0
  br i1 %944, label %945, label %946

945:                                              ; preds = %942
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %931) #8
  br label %946

946:                                              ; preds = %929, %942, %945
  br i1 %676, label %960, label %947

947:                                              ; preds = %946
  %948 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %675, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %949 = load atomic i32, i32* %948 monotonic, align 4
  %950 = and i32 %949, 2
  %951 = icmp eq i32 %950, 0
  %952 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %675, i64 0, i32 0
  %953 = load i32, i32* %952, align 4
  br i1 %951, label %954, label %956

954:                                              ; preds = %947
  %955 = add i32 %953, -1
  store i32 %955, i32* %952, align 4
  br label %956

956:                                              ; preds = %954, %947
  %957 = phi i32 [ %955, %954 ], [ %953, %947 ]
  %958 = icmp eq i32 %957, 0
  br i1 %958, label %959, label %960

959:                                              ; preds = %956
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %675) #8
  br label %960

960:                                              ; preds = %946, %956, %959
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %673) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %672) #8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %671) #8
  %961 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink7NullURLEv() #8
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %0, %"class.blink::KURL"* dereferenceable(112) %961) #8
  br label %1306

962:                                              ; preds = %666, %668
  %963 = bitcast %"class.WTF::StringAppend.225"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %963) #8
  %964 = bitcast %"class.WTF::StringAppend.223"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %964) #8
  %965 = bitcast %"class.WTF::StringAppend.224"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %965) #8
  %966 = bitcast %"class.WTF::StringAppend"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %966) #8
  %967 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %968 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %967, align 8
  %969 = icmp eq %"class.WTF::StringImpl"* %968, null
  br i1 %969, label %1045, label %970

970:                                              ; preds = %962
  %971 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %968, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %972 = load atomic i32, i32* %971 monotonic, align 4
  %973 = and i32 %972, 2
  %974 = icmp eq i32 %973, 0
  %975 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %968, i64 0, i32 0
  %976 = load i32, i32* %975, align 4
  br i1 %974, label %977, label %987

977:                                              ; preds = %970
  %978 = zext i32 %976 to i33
  %979 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %978, i33 1) #8
  %980 = extractvalue { i33, i1 } %979, 1
  %981 = extractvalue { i33, i1 } %979, 0
  %982 = icmp slt i33 %981, 0
  %983 = or i1 %980, %982
  br i1 %983, label %984, label %985, !prof !2

984:                                              ; preds = %977
  call void @llvm.trap() #8
  unreachable

985:                                              ; preds = %977
  %986 = trunc i33 %981 to i32
  store i32 %986, i32* %975, align 4
  br label %987

987:                                              ; preds = %985, %970
  %988 = phi i32 [ %986, %985 ], [ %976, %970 ]
  %989 = load atomic i32, i32* %971 monotonic, align 4
  %990 = and i32 %989, 2
  %991 = icmp eq i32 %990, 0
  br i1 %991, label %992, label %1002

992:                                              ; preds = %987
  %993 = zext i32 %988 to i33
  %994 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %993, i33 1) #8
  %995 = extractvalue { i33, i1 } %994, 1
  %996 = extractvalue { i33, i1 } %994, 0
  %997 = icmp slt i33 %996, 0
  %998 = or i1 %995, %997
  br i1 %998, label %999, label %1000, !prof !2

999:                                              ; preds = %992
  call void @llvm.trap() #8
  unreachable

1000:                                             ; preds = %992
  %1001 = trunc i33 %996 to i32
  store i32 %1001, i32* %975, align 4
  br label %1002

1002:                                             ; preds = %1000, %987
  %1003 = phi i32 [ %1001, %1000 ], [ %988, %987 ]
  %1004 = load atomic i32, i32* %971 monotonic, align 4
  %1005 = and i32 %1004, 2
  %1006 = icmp eq i32 %1005, 0
  br i1 %1006, label %1007, label %1009

1007:                                             ; preds = %1002
  %1008 = add i32 %1003, -1
  store i32 %1008, i32* %975, align 4
  br label %1009

1009:                                             ; preds = %1007, %1002
  %1010 = phi i32 [ %1008, %1007 ], [ %1003, %1002 ]
  %1011 = icmp eq i32 %1010, 0
  br i1 %1011, label %1012, label %1013

1012:                                             ; preds = %1009
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %968) #8
  br label %1013

1013:                                             ; preds = %1009, %1012
  %1014 = load atomic i32, i32* %971 monotonic, align 4, !noalias !47
  %1015 = and i32 %1014, 2
  %1016 = icmp eq i32 %1015, 0
  %1017 = load i32, i32* %975, align 4
  br i1 %1016, label %1018, label %1028

1018:                                             ; preds = %1013
  %1019 = zext i32 %1017 to i33
  %1020 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1019, i33 1) #8
  %1021 = extractvalue { i33, i1 } %1020, 1
  %1022 = extractvalue { i33, i1 } %1020, 0
  %1023 = icmp slt i33 %1022, 0
  %1024 = or i1 %1021, %1023
  br i1 %1024, label %1025, label %1026, !prof !2

1025:                                             ; preds = %1018
  call void @llvm.trap() #8, !noalias !47
  unreachable

1026:                                             ; preds = %1018
  %1027 = trunc i33 %1022 to i32
  store i32 %1027, i32* %975, align 4, !noalias !47
  br label %1028

1028:                                             ; preds = %1013, %1026
  %1029 = phi i32 [ %1027, %1026 ], [ %1017, %1013 ]
  %1030 = bitcast %"class.WTF::StringAppend"* %25 to i64*
  store i64 ptrtoint ([14 x i8]* @.str.13 to i64), i64* %1030, align 8, !alias.scope !47
  %1031 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %25, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %968, %"class.WTF::StringImpl"** %1031, align 8, !alias.scope !47
  %1032 = load atomic i32, i32* %971 monotonic, align 4, !noalias !47
  %1033 = and i32 %1032, 2
  %1034 = icmp eq i32 %1033, 0
  br i1 %1034, label %1035, label %1049

1035:                                             ; preds = %1028
  %1036 = zext i32 %1029 to i33
  %1037 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1036, i33 1) #8
  %1038 = extractvalue { i33, i1 } %1037, 1
  %1039 = extractvalue { i33, i1 } %1037, 0
  %1040 = icmp slt i33 %1039, 0
  %1041 = or i1 %1038, %1040
  br i1 %1041, label %1042, label %1043, !prof !2

1042:                                             ; preds = %1035
  call void @llvm.trap() #8, !noalias !47
  unreachable

1043:                                             ; preds = %1035
  %1044 = trunc i33 %1039 to i32
  store i32 %1044, i32* %975, align 4, !noalias !47
  br label %1049

1045:                                             ; preds = %962
  %1046 = bitcast %"class.WTF::StringAppend"* %25 to i64*
  store i64 ptrtoint ([14 x i8]* @.str.13 to i64), i64* %1046, align 8, !alias.scope !47
  %1047 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %25, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1047, align 8, !alias.scope !47
  %1048 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %25, i64 0, i32 1
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.16, i64 0, i64 0), i8** %1048, align 8, !alias.scope !47
  br label %1061

1049:                                             ; preds = %1043, %1028
  %1050 = phi i32 [ %1044, %1043 ], [ %1029, %1028 ]
  %1051 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %25, i64 0, i32 1
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.16, i64 0, i64 0), i8** %1051, align 8, !alias.scope !47
  %1052 = load atomic i32, i32* %971 monotonic, align 4, !noalias !47
  %1053 = and i32 %1052, 2
  %1054 = icmp eq i32 %1053, 0
  br i1 %1054, label %1055, label %1057

1055:                                             ; preds = %1049
  %1056 = add i32 %1050, -1
  store i32 %1056, i32* %975, align 4, !noalias !47
  br label %1057

1057:                                             ; preds = %1055, %1049
  %1058 = phi i32 [ %1056, %1055 ], [ %1050, %1049 ]
  %1059 = icmp eq i32 %1058, 0
  br i1 %1059, label %1060, label %1061

1060:                                             ; preds = %1057
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %968) #8, !noalias !47
  br label %1061

1061:                                             ; preds = %1045, %1057, %1060
  %1062 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %28, align 8
  %1063 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1062, i64 0, i32 0, i32 0, i32 0
  %1064 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1063, align 8
  %1065 = icmp eq %"class.WTF::StringImpl"* %1064, null
  br i1 %1065, label %1083, label %1066

1066:                                             ; preds = %1061
  %1067 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1064, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1068 = load atomic i32, i32* %1067 monotonic, align 4
  %1069 = and i32 %1068, 2
  %1070 = icmp eq i32 %1069, 0
  br i1 %1070, label %1071, label %1083

1071:                                             ; preds = %1066
  %1072 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1064, i64 0, i32 0
  %1073 = load i32, i32* %1072, align 4
  %1074 = zext i32 %1073 to i33
  %1075 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1074, i33 1) #8
  %1076 = extractvalue { i33, i1 } %1075, 1
  %1077 = extractvalue { i33, i1 } %1075, 0
  %1078 = icmp slt i33 %1077, 0
  %1079 = or i1 %1076, %1078
  br i1 %1079, label %1080, label %1081, !prof !2

1080:                                             ; preds = %1071
  call void @llvm.trap() #8
  unreachable

1081:                                             ; preds = %1071
  %1082 = trunc i33 %1077 to i32
  store i32 %1082, i32* %1072, align 4
  br label %1083

1083:                                             ; preds = %1061, %1066, %1081
  call void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.224"* nonnull sret %24, %"class.WTF::StringAppend"* nonnull dereferenceable(24) %25, %"class.WTF::StringImpl"* %1064)
  %1084 = bitcast %"class.WTF::StringAppend.224"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1084)
  %1085 = bitcast %"class.WTF::StringAppend.224"* %24 to i64*
  %1086 = load i64, i64* %1085, align 8, !noalias !50
  %1087 = bitcast %"class.WTF::StringAppend.224"* %6 to i64*
  store i64 %1086, i64* %1087, align 8, !noalias !50
  %1088 = getelementptr inbounds %"class.WTF::StringAppend.224", %"class.WTF::StringAppend.224"* %24, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %1089 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1088, align 8, !noalias !50
  %1090 = getelementptr inbounds %"class.WTF::StringAppend.224", %"class.WTF::StringAppend.224"* %6, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1089, %"class.WTF::StringImpl"** %1090, align 8, !noalias !50
  %1091 = icmp eq %"class.WTF::StringImpl"* %1089, null
  br i1 %1091, label %1109, label %1092

1092:                                             ; preds = %1083
  %1093 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1089, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1094 = load atomic i32, i32* %1093 monotonic, align 4
  %1095 = and i32 %1094, 2
  %1096 = icmp eq i32 %1095, 0
  br i1 %1096, label %1097, label %1109

1097:                                             ; preds = %1092
  %1098 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1089, i64 0, i32 0
  %1099 = load i32, i32* %1098, align 4
  %1100 = zext i32 %1099 to i33
  %1101 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1100, i33 1) #8
  %1102 = extractvalue { i33, i1 } %1101, 1
  %1103 = extractvalue { i33, i1 } %1101, 0
  %1104 = icmp slt i33 %1103, 0
  %1105 = or i1 %1102, %1104
  br i1 %1105, label %1106, label %1107, !prof !2

1106:                                             ; preds = %1097
  call void @llvm.trap() #8
  unreachable

1107:                                             ; preds = %1097
  %1108 = trunc i33 %1103 to i32
  store i32 %1108, i32* %1098, align 4
  br label %1109

1109:                                             ; preds = %1107, %1092, %1083
  %1110 = getelementptr inbounds %"class.WTF::StringAppend.224", %"class.WTF::StringAppend.224"* %6, i64 0, i32 0, i32 1
  %1111 = getelementptr inbounds %"class.WTF::StringAppend.224", %"class.WTF::StringAppend.224"* %24, i64 0, i32 0, i32 1
  %1112 = bitcast i8** %1111 to i64*
  %1113 = load i64, i64* %1112, align 8, !noalias !50
  %1114 = bitcast i8** %1110 to i64*
  store i64 %1113, i64* %1114, align 8, !noalias !50
  %1115 = getelementptr inbounds %"class.WTF::StringAppend.224", %"class.WTF::StringAppend.224"* %24, i64 0, i32 1, i32 0, i32 0
  %1116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1115, align 8, !noalias !50
  %1117 = getelementptr inbounds %"class.WTF::StringAppend.224", %"class.WTF::StringAppend.224"* %6, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1116, %"class.WTF::StringImpl"** %1117, align 8, !noalias !50
  %1118 = icmp eq %"class.WTF::StringImpl"* %1116, null
  br i1 %1118, label %1136, label %1119

1119:                                             ; preds = %1109
  %1120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1121 = load atomic i32, i32* %1120 monotonic, align 4
  %1122 = and i32 %1121, 2
  %1123 = icmp eq i32 %1122, 0
  br i1 %1123, label %1124, label %1136

1124:                                             ; preds = %1119
  %1125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1116, i64 0, i32 0
  %1126 = load i32, i32* %1125, align 4
  %1127 = zext i32 %1126 to i33
  %1128 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1127, i33 1) #8
  %1129 = extractvalue { i33, i1 } %1128, 1
  %1130 = extractvalue { i33, i1 } %1128, 0
  %1131 = icmp slt i33 %1130, 0
  %1132 = or i1 %1129, %1131
  br i1 %1132, label %1133, label %1134, !prof !2

1133:                                             ; preds = %1124
  call void @llvm.trap() #8
  unreachable

1134:                                             ; preds = %1124
  %1135 = trunc i33 %1130 to i32
  store i32 %1135, i32* %1125, align 4
  br label %1136

1136:                                             ; preds = %1109, %1119, %1134
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend.223"* nonnull %23, %"class.WTF::StringAppend.224"* nonnull byval(%"class.WTF::StringAppend.224") align 8 %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.20, i64 0, i64 0)) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1084)
  %1137 = call %"class.WTF::StringImpl"* @_ZNK5blink4KURL12ElidedStringEv(%"class.blink::KURL"* nonnull %14) #8
  call void @_ZN3WTFplINS_12StringAppendINS1_INS1_IPKcNS_6StringEEES3_EES4_EES3_S4_EENS1_INS1_IT_T0_EET1_EERKSA_SB_(%"class.WTF::StringAppend.225"* nonnull sret %22, %"class.WTF::StringAppend.223"* nonnull dereferenceable(40) %23, %"class.WTF::StringImpl"* %1137)
  %1138 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EcvS3_Ev(%"class.WTF::StringAppend.225"* nonnull %22)
  %1139 = ptrtoint %"class.WTF::StringImpl"* %1138 to i64
  %1140 = bitcast %"class.WTF::String"* %4 to i64*
  %1141 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %1142 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1141, align 8
  store i64 %1139, i64* %1140, align 8
  %1143 = icmp eq %"class.WTF::StringImpl"* %1142, null
  br i1 %1143, label %1157, label %1144

1144:                                             ; preds = %1136
  %1145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1142, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1146 = load atomic i32, i32* %1145 monotonic, align 4
  %1147 = and i32 %1146, 2
  %1148 = icmp eq i32 %1147, 0
  %1149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1142, i64 0, i32 0
  %1150 = load i32, i32* %1149, align 4
  br i1 %1148, label %1151, label %1153

1151:                                             ; preds = %1144
  %1152 = add i32 %1150, -1
  store i32 %1152, i32* %1149, align 4
  br label %1153

1153:                                             ; preds = %1151, %1144
  %1154 = phi i32 [ %1152, %1151 ], [ %1150, %1144 ]
  %1155 = icmp eq i32 %1154, 0
  br i1 %1155, label %1156, label %1157

1156:                                             ; preds = %1153
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1142) #8
  br label %1157

1157:                                             ; preds = %1156, %1153, %1136
  %1158 = getelementptr inbounds %"class.WTF::StringAppend.225", %"class.WTF::StringAppend.225"* %22, i64 0, i32 1, i32 0, i32 0
  %1159 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1158, align 8
  %1160 = icmp eq %"class.WTF::StringImpl"* %1159, null
  br i1 %1160, label %1174, label %1161

1161:                                             ; preds = %1157
  %1162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1159, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1163 = load atomic i32, i32* %1162 monotonic, align 4
  %1164 = and i32 %1163, 2
  %1165 = icmp eq i32 %1164, 0
  %1166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1159, i64 0, i32 0
  %1167 = load i32, i32* %1166, align 4
  br i1 %1165, label %1168, label %1170

1168:                                             ; preds = %1161
  %1169 = add i32 %1167, -1
  store i32 %1169, i32* %1166, align 4
  br label %1170

1170:                                             ; preds = %1168, %1161
  %1171 = phi i32 [ %1169, %1168 ], [ %1167, %1161 ]
  %1172 = icmp eq i32 %1171, 0
  br i1 %1172, label %1173, label %1174

1173:                                             ; preds = %1170
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1159) #8
  br label %1174

1174:                                             ; preds = %1173, %1170, %1157
  %1175 = getelementptr inbounds %"class.WTF::StringAppend.225", %"class.WTF::StringAppend.225"* %22, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %1176 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1175, align 8
  %1177 = icmp eq %"class.WTF::StringImpl"* %1176, null
  br i1 %1177, label %1191, label %1178

1178:                                             ; preds = %1174
  %1179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1176, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1180 = load atomic i32, i32* %1179 monotonic, align 4
  %1181 = and i32 %1180, 2
  %1182 = icmp eq i32 %1181, 0
  %1183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1176, i64 0, i32 0
  %1184 = load i32, i32* %1183, align 4
  br i1 %1182, label %1185, label %1187

1185:                                             ; preds = %1178
  %1186 = add i32 %1184, -1
  store i32 %1186, i32* %1183, align 4
  br label %1187

1187:                                             ; preds = %1185, %1178
  %1188 = phi i32 [ %1186, %1185 ], [ %1184, %1178 ]
  %1189 = icmp eq i32 %1188, 0
  br i1 %1189, label %1190, label %1191

1190:                                             ; preds = %1187
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1176) #8
  br label %1191

1191:                                             ; preds = %1190, %1187, %1174
  %1192 = getelementptr inbounds %"class.WTF::StringAppend.225", %"class.WTF::StringAppend.225"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %1193 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1192, align 8
  %1194 = icmp eq %"class.WTF::StringImpl"* %1193, null
  br i1 %1194, label %1208, label %1195

1195:                                             ; preds = %1191
  %1196 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1193, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1197 = load atomic i32, i32* %1196 monotonic, align 4
  %1198 = and i32 %1197, 2
  %1199 = icmp eq i32 %1198, 0
  %1200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1193, i64 0, i32 0
  %1201 = load i32, i32* %1200, align 4
  br i1 %1199, label %1202, label %1204

1202:                                             ; preds = %1195
  %1203 = add i32 %1201, -1
  store i32 %1203, i32* %1200, align 4
  br label %1204

1204:                                             ; preds = %1202, %1195
  %1205 = phi i32 [ %1203, %1202 ], [ %1201, %1195 ]
  %1206 = icmp eq i32 %1205, 0
  br i1 %1206, label %1207, label %1208

1207:                                             ; preds = %1204
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1193) #8
  br label %1208

1208:                                             ; preds = %1191, %1204, %1207
  %1209 = getelementptr inbounds %"class.WTF::StringAppend.223", %"class.WTF::StringAppend.223"* %23, i64 0, i32 0, i32 1, i32 0, i32 0
  %1210 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1209, align 8
  %1211 = icmp eq %"class.WTF::StringImpl"* %1210, null
  br i1 %1211, label %1225, label %1212

1212:                                             ; preds = %1208
  %1213 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1210, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1214 = load atomic i32, i32* %1213 monotonic, align 4
  %1215 = and i32 %1214, 2
  %1216 = icmp eq i32 %1215, 0
  %1217 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1210, i64 0, i32 0
  %1218 = load i32, i32* %1217, align 4
  br i1 %1216, label %1219, label %1221

1219:                                             ; preds = %1212
  %1220 = add i32 %1218, -1
  store i32 %1220, i32* %1217, align 4
  br label %1221

1221:                                             ; preds = %1219, %1212
  %1222 = phi i32 [ %1220, %1219 ], [ %1218, %1212 ]
  %1223 = icmp eq i32 %1222, 0
  br i1 %1223, label %1224, label %1225

1224:                                             ; preds = %1221
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1210) #8
  br label %1225

1225:                                             ; preds = %1224, %1221, %1208
  %1226 = getelementptr inbounds %"class.WTF::StringAppend.223", %"class.WTF::StringAppend.223"* %23, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %1227 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1226, align 8
  %1228 = icmp eq %"class.WTF::StringImpl"* %1227, null
  br i1 %1228, label %1242, label %1229

1229:                                             ; preds = %1225
  %1230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1227, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1231 = load atomic i32, i32* %1230 monotonic, align 4
  %1232 = and i32 %1231, 2
  %1233 = icmp eq i32 %1232, 0
  %1234 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1227, i64 0, i32 0
  %1235 = load i32, i32* %1234, align 4
  br i1 %1233, label %1236, label %1238

1236:                                             ; preds = %1229
  %1237 = add i32 %1235, -1
  store i32 %1237, i32* %1234, align 4
  br label %1238

1238:                                             ; preds = %1236, %1229
  %1239 = phi i32 [ %1237, %1236 ], [ %1235, %1229 ]
  %1240 = icmp eq i32 %1239, 0
  br i1 %1240, label %1241, label %1242

1241:                                             ; preds = %1238
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1227) #8
  br label %1242

1242:                                             ; preds = %1225, %1238, %1241
  %1243 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1115, align 8
  %1244 = icmp eq %"class.WTF::StringImpl"* %1243, null
  br i1 %1244, label %1258, label %1245

1245:                                             ; preds = %1242
  %1246 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1243, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1247 = load atomic i32, i32* %1246 monotonic, align 4
  %1248 = and i32 %1247, 2
  %1249 = icmp eq i32 %1248, 0
  %1250 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1243, i64 0, i32 0
  %1251 = load i32, i32* %1250, align 4
  br i1 %1249, label %1252, label %1254

1252:                                             ; preds = %1245
  %1253 = add i32 %1251, -1
  store i32 %1253, i32* %1250, align 4
  br label %1254

1254:                                             ; preds = %1252, %1245
  %1255 = phi i32 [ %1253, %1252 ], [ %1251, %1245 ]
  %1256 = icmp eq i32 %1255, 0
  br i1 %1256, label %1257, label %1258

1257:                                             ; preds = %1254
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1243) #8
  br label %1258

1258:                                             ; preds = %1257, %1254, %1242
  %1259 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1088, align 8
  %1260 = icmp eq %"class.WTF::StringImpl"* %1259, null
  br i1 %1260, label %1274, label %1261

1261:                                             ; preds = %1258
  %1262 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1259, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1263 = load atomic i32, i32* %1262 monotonic, align 4
  %1264 = and i32 %1263, 2
  %1265 = icmp eq i32 %1264, 0
  %1266 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1259, i64 0, i32 0
  %1267 = load i32, i32* %1266, align 4
  br i1 %1265, label %1268, label %1270

1268:                                             ; preds = %1261
  %1269 = add i32 %1267, -1
  store i32 %1269, i32* %1266, align 4
  br label %1270

1270:                                             ; preds = %1268, %1261
  %1271 = phi i32 [ %1269, %1268 ], [ %1267, %1261 ]
  %1272 = icmp eq i32 %1271, 0
  br i1 %1272, label %1273, label %1274

1273:                                             ; preds = %1270
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1259) #8
  br label %1274

1274:                                             ; preds = %1258, %1270, %1273
  %1275 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %25, i64 0, i32 0, i32 1, i32 0, i32 0
  %1276 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1275, align 8
  %1277 = icmp eq %"class.WTF::StringImpl"* %1276, null
  br i1 %1277, label %1291, label %1278

1278:                                             ; preds = %1274
  %1279 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1276, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1280 = load atomic i32, i32* %1279 monotonic, align 4
  %1281 = and i32 %1280, 2
  %1282 = icmp eq i32 %1281, 0
  %1283 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1276, i64 0, i32 0
  %1284 = load i32, i32* %1283, align 4
  br i1 %1282, label %1285, label %1287

1285:                                             ; preds = %1278
  %1286 = add i32 %1284, -1
  store i32 %1286, i32* %1283, align 4
  br label %1287

1287:                                             ; preds = %1285, %1278
  %1288 = phi i32 [ %1286, %1285 ], [ %1284, %1278 ]
  %1289 = icmp eq i32 %1288, 0
  br i1 %1289, label %1290, label %1291

1290:                                             ; preds = %1287
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1276) #8
  br label %1291

1291:                                             ; preds = %1274, %1287, %1290
  br i1 %969, label %1305, label %1292

1292:                                             ; preds = %1291
  %1293 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %968, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1294 = load atomic i32, i32* %1293 monotonic, align 4
  %1295 = and i32 %1294, 2
  %1296 = icmp eq i32 %1295, 0
  %1297 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %968, i64 0, i32 0
  %1298 = load i32, i32* %1297, align 4
  br i1 %1296, label %1299, label %1301

1299:                                             ; preds = %1292
  %1300 = add i32 %1298, -1
  store i32 %1300, i32* %1297, align 4
  br label %1301

1301:                                             ; preds = %1299, %1292
  %1302 = phi i32 [ %1300, %1299 ], [ %1298, %1292 ]
  %1303 = icmp eq i32 %1302, 0
  br i1 %1303, label %1304, label %1305

1304:                                             ; preds = %1301
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %968) #8
  br label %1305

1305:                                             ; preds = %1291, %1301, %1304
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %966) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %965) #8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %964) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %963) #8
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %0, %"class.blink::KURL"* nonnull dereferenceable(112) %14) #8
  br label %1306

1306:                                             ; preds = %1305, %960, %641
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %14) #8
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %335) #8
  br label %1307

1307:                                             ; preds = %1306, %332
  %1308 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %1309 = icmp eq %"class.WTF::StringImpl"* %1308, null
  br i1 %1309, label %1323, label %1310

1310:                                             ; preds = %1307
  %1311 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1308, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1312 = load atomic i32, i32* %1311 monotonic, align 4
  %1313 = and i32 %1312, 2
  %1314 = icmp eq i32 %1313, 0
  %1315 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1308, i64 0, i32 0
  %1316 = load i32, i32* %1315, align 4
  br i1 %1314, label %1317, label %1319

1317:                                             ; preds = %1310
  %1318 = add i32 %1316, -1
  store i32 %1318, i32* %1315, align 4
  br label %1319

1319:                                             ; preds = %1317, %1310
  %1320 = phi i32 [ %1318, %1317 ], [ %1316, %1310 ]
  %1321 = icmp eq i32 %1320, 0
  br i1 %1321, label %1322, label %1323

1322:                                             ; preds = %1319
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1308) #8
  br label %1323

1323:                                             ; preds = %1307, %1319, %1322
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #8
  ret void
}

declare zeroext i1 @_ZN5blink14SchemeRegistry15IsSpecialSchemeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZNK5blink15ParsedSpecifier6GetUrlEv(%"class.blink::KURL"* sret, %"class.blink::ParsedSpecifier"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink4KURL8ProtocolEv(%"class.blink::KURL"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.224"* noalias sret, %"class.WTF::StringAppend"* dereferenceable(24), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.WTF::StringAppend", align 8
  %5 = bitcast %"class.WTF::StringAppend"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.WTF::StringAppend"* %4 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #8
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !2

26:                                               ; preds = %17
  tail call void @llvm.trap() #8
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %3, %12, %27
  %30 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %4, i64 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %1, i64 0, i32 1
  %32 = bitcast i8** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast i8** %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %35, label %53, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %54

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #8
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !2

50:                                               ; preds = %41
  tail call void @llvm.trap() #8
  unreachable

51:                                               ; preds = %41
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %42, align 4
  br label %54

53:                                               ; preds = %29
  tail call void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.224"* %0, %"class.WTF::StringAppend"* nonnull byval(%"class.WTF::StringAppend") align 8 %4, %"class.WTF::StringImpl"* null)
  br label %66

54:                                               ; preds = %36, %51
  tail call void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.224"* %0, %"class.WTF::StringAppend"* nonnull byval(%"class.WTF::StringAppend") align 8 %4, %"class.WTF::StringImpl"* nonnull %2)
  %55 = load atomic i32, i32* %37 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %54
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %54
  %63 = phi i32 [ %61, %60 ], [ %59, %54 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #8
  br label %66

66:                                               ; preds = %53, %62, %65
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend.223"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.248", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.248", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.248", align 8
  %5 = alloca i8*, align 8
  %6 = alloca i16*, align 8
  %7 = bitcast %"class.WTF::StringTypeAdapter.248"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.223", %"class.WTF::StringAppend.223"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false) #8
  %9 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.248"* nonnull %4, i8* %9) #8
  %10 = getelementptr inbounds %"class.WTF::StringAppend.223", %"class.WTF::StringAppend.223"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %13 = bitcast %"class.WTF::StringTypeAdapter.248"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #8
  %14 = getelementptr inbounds %"class.WTF::StringAppend.223", %"class.WTF::StringAppend.223"* %0, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false) #8
  %15 = load i8*, i8** %14, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.248"* nonnull %3, i8* %15) #8
  %16 = bitcast %"class.WTF::StringTypeAdapter.248"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #8
  %17 = getelementptr inbounds %"class.WTF::StringAppend.223", %"class.WTF::StringAppend.223"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false) #8
  %18 = load i8*, i8** %17, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.248"* nonnull %2, i8* %18) #8
  %19 = getelementptr inbounds %"class.WTF::StringAppend.223", %"class.WTF::StringAppend.223"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %23 = select i1 %21, %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"* %20
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 1
  %27 = icmp eq i32 %26, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #8
  br i1 %27, label %28, label %29

28:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #8
  br label %72

29:                                               ; preds = %1
  %30 = icmp eq %"class.WTF::StringImpl"* %11, null
  %31 = select i1 %30, %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"* %11
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #8
  br i1 %35, label %72, label %36

36:                                               ; preds = %29
  %37 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #8
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %38 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.223"* %0)
  %39 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %38, i8** nonnull dereferenceable(8) %5) #8
  %40 = load i8*, i8** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh(%"class.WTF::StringAppend.223"* %0, i8* %40)
  %41 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %41, label %108, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %59

49:                                               ; preds = %42
  %50 = zext i32 %48 to i33
  %51 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %50, i33 1) #8
  %52 = extractvalue { i33, i1 } %51, 1
  %53 = extractvalue { i33, i1 } %51, 0
  %54 = icmp slt i33 %53, 0
  %55 = or i1 %52, %54
  br i1 %55, label %56, label %57, !prof !2

56:                                               ; preds = %49
  call void @llvm.trap() #8
  unreachable

57:                                               ; preds = %49
  %58 = trunc i33 %53 to i32
  store i32 %58, i32* %47, align 4
  br label %59

59:                                               ; preds = %42, %57
  %60 = phi i32 [ %58, %57 ], [ %48, %42 ]
  %61 = ptrtoint %"class.WTF::StringImpl"* %39 to i64
  %62 = load atomic i32, i32* %43 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %67 = add i32 %60, -1
  store i32 %67, i32* %66, align 4
  br label %68

68:                                               ; preds = %65, %59
  %69 = phi i32 [ %67, %65 ], [ %60, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %108

71:                                               ; preds = %68
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #8
  br label %108

72:                                               ; preds = %29, %28
  %73 = bitcast i16** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #8
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %6, align 8
  %74 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.223"* %0)
  %75 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %74, i16** nonnull dereferenceable(8) %6) #8
  %76 = load i16*, i16** %6, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs(%"class.WTF::StringAppend.223"* %0, i16* %76)
  %77 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %77, label %108, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %95

85:                                               ; preds = %78
  %86 = zext i32 %84 to i33
  %87 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %86, i33 1) #8
  %88 = extractvalue { i33, i1 } %87, 1
  %89 = extractvalue { i33, i1 } %87, 0
  %90 = icmp slt i33 %89, 0
  %91 = or i1 %88, %90
  br i1 %91, label %92, label %93, !prof !2

92:                                               ; preds = %85
  call void @llvm.trap() #8
  unreachable

93:                                               ; preds = %85
  %94 = trunc i33 %89 to i32
  store i32 %94, i32* %83, align 4
  br label %95

95:                                               ; preds = %78, %93
  %96 = phi i32 [ %94, %93 ], [ %84, %78 ]
  %97 = ptrtoint %"class.WTF::StringImpl"* %75 to i64
  %98 = load atomic i32, i32* %79 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %103 = add i32 %96, -1
  store i32 %103, i32* %102, align 4
  br label %104

104:                                              ; preds = %101, %95
  %105 = phi i32 [ %103, %101 ], [ %96, %95 ]
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %75) #8
  br label %108

108:                                              ; preds = %107, %104, %72, %71, %68, %36
  %109 = phi i8* [ %37, %36 ], [ %37, %68 ], [ %37, %71 ], [ %73, %72 ], [ %73, %104 ], [ %73, %107 ]
  %110 = phi i64 [ 0, %36 ], [ %61, %68 ], [ %61, %71 ], [ 0, %72 ], [ %97, %104 ], [ %97, %107 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %109) #8
  %111 = inttoptr i64 %110 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %111
}

declare void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_12StringAppendINS1_INS1_IPKcNS_6StringEEES3_EES4_EES3_S4_EENS1_INS1_IT_T0_EET1_EERKSA_SB_(%"class.WTF::StringAppend.225"* noalias sret, %"class.WTF::StringAppend.223"* dereferenceable(40), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.WTF::StringAppend.223", align 8
  %5 = bitcast %"class.WTF::StringAppend.223"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.WTF::StringAppend.223"* %4 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.223", %"class.WTF::StringAppend.223"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::StringAppend.223", %"class.WTF::StringAppend.223"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #8
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !2

26:                                               ; preds = %17
  tail call void @llvm.trap() #8
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %27, %12, %3
  %30 = getelementptr inbounds %"class.WTF::StringAppend.223", %"class.WTF::StringAppend.223"* %4, i64 0, i32 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringAppend.223", %"class.WTF::StringAppend.223"* %1, i64 0, i32 0, i32 0, i32 1
  %32 = bitcast i8** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast i8** %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"class.WTF::StringAppend.223", %"class.WTF::StringAppend.223"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.WTF::StringAppend.223", %"class.WTF::StringAppend.223"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %36, %"class.WTF::StringImpl"** %37, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %38, label %56, label %39

39:                                               ; preds = %29
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %56

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = zext i32 %46 to i33
  %48 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %47, i33 1) #8
  %49 = extractvalue { i33, i1 } %48, 1
  %50 = extractvalue { i33, i1 } %48, 0
  %51 = icmp slt i33 %50, 0
  %52 = or i1 %49, %51
  br i1 %52, label %53, label %54, !prof !2

53:                                               ; preds = %44
  tail call void @llvm.trap() #8
  unreachable

54:                                               ; preds = %44
  %55 = trunc i33 %50 to i32
  store i32 %55, i32* %45, align 4
  br label %56

56:                                               ; preds = %29, %39, %54
  %57 = getelementptr inbounds %"class.WTF::StringAppend.223", %"class.WTF::StringAppend.223"* %4, i64 0, i32 1
  %58 = getelementptr inbounds %"class.WTF::StringAppend.223", %"class.WTF::StringAppend.223"* %1, i64 0, i32 1
  %59 = bitcast i8** %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = bitcast i8** %57 to i64*
  store i64 %60, i64* %61, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %62, label %80, label %63

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %81

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = zext i32 %70 to i33
  %72 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #8
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !2

77:                                               ; preds = %68
  tail call void @llvm.trap() #8
  unreachable

78:                                               ; preds = %68
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %69, align 4
  br label %81

80:                                               ; preds = %56
  tail call void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EC2ES7_S3_(%"class.WTF::StringAppend.225"* %0, %"class.WTF::StringAppend.223"* nonnull byval(%"class.WTF::StringAppend.223") align 8 %4, %"class.WTF::StringImpl"* null)
  br label %93

81:                                               ; preds = %63, %78
  tail call void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EC2ES7_S3_(%"class.WTF::StringAppend.225"* %0, %"class.WTF::StringAppend.223"* nonnull byval(%"class.WTF::StringAppend.223") align 8 %4, %"class.WTF::StringImpl"* nonnull %2)
  %82 = load atomic i32, i32* %64 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  br i1 %84, label %87, label %89

87:                                               ; preds = %81
  %88 = add i32 %86, -1
  store i32 %88, i32* %85, align 4
  br label %89

89:                                               ; preds = %87, %81
  %90 = phi i32 [ %88, %87 ], [ %86, %81 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #8
  br label %93

93:                                               ; preds = %80, %89, %92
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK5blink4KURL12ElidedStringEv(%"class.blink::KURL"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EcvS3_Ev(%"class.WTF::StringAppend.225"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.245", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.245", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.248", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.248", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter.248", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i16*, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.225", %"class.WTF::StringAppend.225"* %0, i64 0, i32 0
  %10 = getelementptr inbounds %"class.WTF::StringAppend.225", %"class.WTF::StringAppend.225"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %13 = bitcast %"class.WTF::StringTypeAdapter.248"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #8
  %14 = getelementptr inbounds %"class.WTF::StringAppend.225", %"class.WTF::StringAppend.225"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false) #8
  %15 = load i8*, i8** %14, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.248"* nonnull %6, i8* %15) #8
  %16 = getelementptr inbounds %"class.WTF::StringAppend.225", %"class.WTF::StringAppend.225"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %19 = bitcast %"class.WTF::StringTypeAdapter.248"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #8
  %20 = getelementptr inbounds %"class.WTF::StringAppend.225", %"class.WTF::StringAppend.225"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 16, i1 false) #8
  %21 = load i8*, i8** %20, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.248"* nonnull %5, i8* %21) #8
  %22 = bitcast %"class.WTF::StringTypeAdapter.248"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #8
  %23 = getelementptr inbounds %"class.WTF::StringAppend.225", %"class.WTF::StringAppend.225"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 16, i1 false) #8
  %24 = load i8*, i8** %23, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.248"* nonnull %4, i8* %24) #8
  %25 = getelementptr inbounds %"class.WTF::StringAppend.225", %"class.WTF::StringAppend.225"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %29 = select i1 %27, %"class.WTF::StringImpl"* %28, %"class.WTF::StringImpl"* %26
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #8
  br i1 %33, label %34, label %35

34:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #8
  br label %107

35:                                               ; preds = %1
  %36 = icmp eq %"class.WTF::StringImpl"* %17, null
  %37 = select i1 %36, %"class.WTF::StringImpl"* %18, %"class.WTF::StringImpl"* %17
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 1
  %41 = icmp eq i32 %40, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #8
  br i1 %41, label %107, label %42

42:                                               ; preds = %35
  %43 = icmp eq %"class.WTF::StringImpl"* %11, null
  %44 = select i1 %43, %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"* %11
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 1
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %107, label %49

49:                                               ; preds = %42
  %50 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #8
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %51 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_E6lengthEv(%"class.WTF::StringAppend.225"* %0)
  %52 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %51, i8** nonnull dereferenceable(8) %7) #8
  %53 = load i8*, i8** %7, align 8
  %54 = bitcast %"class.WTF::StringTypeAdapter.245"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #8
  %55 = getelementptr inbounds %"class.WTF::StringTypeAdapter.245", %"class.WTF::StringTypeAdapter.245"* %3, i64 0, i32 0, i32 0, i32 1
  %56 = getelementptr inbounds %"class.WTF::StringTypeAdapter.245", %"class.WTF::StringTypeAdapter.245"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 -86, i64 24, i1 false) #8
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %59, label %61

59:                                               ; preds = %49
  %60 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %67

61:                                               ; preds = %49
  %62 = ptrtoint %"class.WTF::StringImpl"* %57 to i64
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 1
  %66 = bitcast %"class.WTF::StringImpl"* %65 to i8*
  br label %67

67:                                               ; preds = %59, %61
  %68 = phi i8* [ null, %59 ], [ %66, %61 ]
  %69 = phi i64 [ %60, %59 ], [ %62, %61 ]
  %70 = phi i32 [ 0, %59 ], [ %64, %61 ]
  %71 = bitcast %"class.WTF::StringTypeAdapter.245"* %3 to i64*
  store i64 %69, i64* %71, align 8
  store i8* %68, i8** %55, align 8
  store i32 %70, i32* %56, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh(%"class.WTF::StringAppend.223"* %9, i8* %53) #8
  %72 = getelementptr inbounds %"class.WTF::StringTypeAdapter.245", %"class.WTF::StringTypeAdapter.245"* %3, i64 0, i32 0
  %73 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.223"* %9) #8
  %74 = zext i32 %73 to i64
  %75 = getelementptr inbounds i8, i8* %53, i64 %74
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.246"* nonnull %72, i8* %75) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #8
  %76 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %76, label %165, label %77

77:                                               ; preds = %67
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  br i1 %81, label %84, label %94

84:                                               ; preds = %77
  %85 = zext i32 %83 to i33
  %86 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %85, i33 1) #8
  %87 = extractvalue { i33, i1 } %86, 1
  %88 = extractvalue { i33, i1 } %86, 0
  %89 = icmp slt i33 %88, 0
  %90 = or i1 %87, %89
  br i1 %90, label %91, label %92, !prof !2

91:                                               ; preds = %84
  call void @llvm.trap() #8
  unreachable

92:                                               ; preds = %84
  %93 = trunc i33 %88 to i32
  store i32 %93, i32* %82, align 4
  br label %94

94:                                               ; preds = %77, %92
  %95 = phi i32 [ %93, %92 ], [ %83, %77 ]
  %96 = ptrtoint %"class.WTF::StringImpl"* %52 to i64
  %97 = load atomic i32, i32* %78 monotonic, align 4
  %98 = and i32 %97, 2
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %103

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %102 = add i32 %95, -1
  store i32 %102, i32* %101, align 4
  br label %103

103:                                              ; preds = %100, %94
  %104 = phi i32 [ %102, %100 ], [ %95, %94 ]
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %165

106:                                              ; preds = %103
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #8
  br label %165

107:                                              ; preds = %42, %35, %34
  %108 = bitcast i16** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %108) #8
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %8, align 8
  %109 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_E6lengthEv(%"class.WTF::StringAppend.225"* %0)
  %110 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %109, i16** nonnull dereferenceable(8) %8) #8
  %111 = load i16*, i16** %8, align 8
  %112 = bitcast %"class.WTF::StringTypeAdapter.245"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %112) #8
  %113 = getelementptr inbounds %"class.WTF::StringTypeAdapter.245", %"class.WTF::StringTypeAdapter.245"* %2, i64 0, i32 0, i32 0, i32 1
  %114 = getelementptr inbounds %"class.WTF::StringTypeAdapter.245", %"class.WTF::StringTypeAdapter.245"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %112, i8 -86, i64 24, i1 false) #8
  %115 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %116 = icmp eq %"class.WTF::StringImpl"* %115, null
  br i1 %116, label %117, label %119

117:                                              ; preds = %107
  %118 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %125

119:                                              ; preds = %107
  %120 = ptrtoint %"class.WTF::StringImpl"* %115 to i64
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 1
  %122 = load i32, i32* %121, align 4
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 1
  %124 = bitcast %"class.WTF::StringImpl"* %123 to i8*
  br label %125

125:                                              ; preds = %117, %119
  %126 = phi i8* [ null, %117 ], [ %124, %119 ]
  %127 = phi i64 [ %118, %117 ], [ %120, %119 ]
  %128 = phi i32 [ 0, %117 ], [ %122, %119 ]
  %129 = bitcast %"class.WTF::StringTypeAdapter.245"* %2 to i64*
  store i64 %127, i64* %129, align 8
  store i8* %126, i8** %113, align 8
  store i32 %128, i32* %114, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs(%"class.WTF::StringAppend.223"* %9, i16* %111) #8
  %130 = getelementptr inbounds %"class.WTF::StringTypeAdapter.245", %"class.WTF::StringTypeAdapter.245"* %2, i64 0, i32 0
  %131 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.223"* %9) #8
  %132 = zext i32 %131 to i64
  %133 = getelementptr inbounds i16, i16* %111, i64 %132
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.246"* nonnull %130, i16* %133) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %112) #8
  %134 = icmp eq %"class.WTF::StringImpl"* %110, null
  br i1 %134, label %165, label %135

135:                                              ; preds = %125
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  br i1 %139, label %142, label %152

142:                                              ; preds = %135
  %143 = zext i32 %141 to i33
  %144 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %143, i33 1) #8
  %145 = extractvalue { i33, i1 } %144, 1
  %146 = extractvalue { i33, i1 } %144, 0
  %147 = icmp slt i33 %146, 0
  %148 = or i1 %145, %147
  br i1 %148, label %149, label %150, !prof !2

149:                                              ; preds = %142
  call void @llvm.trap() #8
  unreachable

150:                                              ; preds = %142
  %151 = trunc i33 %146 to i32
  store i32 %151, i32* %140, align 4
  br label %152

152:                                              ; preds = %135, %150
  %153 = phi i32 [ %151, %150 ], [ %141, %135 ]
  %154 = ptrtoint %"class.WTF::StringImpl"* %110 to i64
  %155 = load atomic i32, i32* %136 monotonic, align 4
  %156 = and i32 %155, 2
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %161

158:                                              ; preds = %152
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 0
  %160 = add i32 %153, -1
  store i32 %160, i32* %159, align 4
  br label %161

161:                                              ; preds = %158, %152
  %162 = phi i32 [ %160, %158 ], [ %153, %152 ]
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %165

164:                                              ; preds = %161
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %110) #8
  br label %165

165:                                              ; preds = %164, %161, %125, %106, %103, %67
  %166 = phi i8* [ %50, %67 ], [ %50, %103 ], [ %50, %106 ], [ %108, %125 ], [ %108, %161 ], [ %108, %164 ]
  %167 = phi i64 [ 0, %67 ], [ %96, %103 ], [ %96, %106 ], [ 0, %125 ], [ %154, %161 ], [ %154, %164 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %166) #8
  %168 = inttoptr i64 %167 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %168
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink9ImportMap8ToStringEv(%"class.blink::ImportMap"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringBuilder", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = bitcast %"class.WTF::StringBuilder"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %10) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 48, i1 false)
  %11 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %11, align 8
  %12 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 1
  %13 = bitcast %union.anon.226* %12 to i8*
  store i8 0, i8* %13, align 8
  %14 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 2
  store i32 0, i32* %14, align 8
  %15 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 3
  store i8 1, i8* %15, align 4
  %16 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 4
  store i8 0, i8* %16, align 1
  %17 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #8
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %19 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.21, i64 0, i64 0), i8** %20, align 8
  %21 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 11, i32* %21, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #8
  %22 = getelementptr inbounds %"class.blink::ImportMap", %"class.blink::ImportMap"* %0, i64 0, i32 0
  call fastcc void @_ZN5blinkL20SpecifierMapToStringERN3WTF13StringBuilderERKNS0_7HashMapINS0_6StringENS_4KURLENS0_10StringHashENS0_10HashTraitsIS4_EENS7_IS5_EENS0_18PartitionAllocatorEEE(%"class.WTF::StringBuilder"* nonnull dereferenceable(48) %2, %"class.WTF::HashMap"* dereferenceable(24) %22)
  %23 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #8
  %24 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %25 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.22, i64 0, i64 0), i8** %26, align 8
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 11, i32* %27, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #8
  %28 = getelementptr inbounds %"class.blink::ImportMap", %"class.blink::ImportMap"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %29 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::ImportMap", %"class.blink::ImportMap"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %29, i64 %32
  %34 = icmp eq i32 %31, 0
  br i1 %34, label %76, label %35

35:                                               ; preds = %1
  %36 = bitcast %"class.WTF::StringView"* %5 to i8*
  %37 = bitcast %"class.WTF::StringView"* %5 to i64*
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %39 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  %40 = bitcast %"class.WTF::StringView"* %6 to i8*
  %41 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %43 = bitcast i8** %42 to %"class.WTF::StringImpl"**
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  %45 = bitcast %"class.WTF::StringView"* %6 to i64*
  %46 = bitcast %"class.WTF::StringView"* %7 to i8*
  %47 = bitcast %"class.WTF::StringView"* %7 to i64*
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %49 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #8
  %50 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %29, i64 0, i32 0
  %51 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String18EncodeForDebuggingEv(%"class.WTF::String"* %50) #8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %69, label %53

53:                                               ; preds = %35
  store %"class.WTF::StringImpl"* %51, %"class.WTF::StringImpl"** %41, align 8
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 1
  store %"class.WTF::StringImpl"* %56, %"class.WTF::StringImpl"** %43, align 8
  store i32 %55, i32* %44, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %53
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %53
  %66 = phi i32 [ %64, %63 ], [ %62, %53 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %71

68:                                               ; preds = %65
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %51) #8
  br label %71

69:                                               ; preds = %35
  store i8* null, i8** %42, align 8
  %70 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %70, i64* %45, align 8
  store i32 0, i32* %44, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  br label %71

71:                                               ; preds = %69, %68, %65
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #8
  %72 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %72, i64* %47, align 8
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i64 0, i64 0), i8** %48, align 8
  store i32 1, i32* %49, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #8
  %73 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %29, i64 0, i32 1
  call fastcc void @_ZN5blinkL20SpecifierMapToStringERN3WTF13StringBuilderERKNS0_7HashMapINS0_6StringENS_4KURLENS0_10StringHashENS0_10HashTraitsIS4_EENS7_IS5_EENS0_18PartitionAllocatorEEE(%"class.WTF::StringBuilder"* nonnull dereferenceable(48) %2, %"class.WTF::HashMap"* dereferenceable(24) %73)
  %74 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %29, i64 1
  %75 = icmp eq i32 %31, 1
  br i1 %75, label %76, label %104

76:                                               ; preds = %71, %128, %1
  %77 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77) #8
  %78 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %79 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %78, i64* %79, align 8
  %80 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.25, i64 0, i64 0), i8** %80, align 8
  %81 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 1, i32* %81, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77) #8
  %82 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %82) #8
  %83 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %84 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.25, i64 0, i64 0), i8** %85, align 8
  %86 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 1, i32* %86, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %9)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %82) #8
  %87 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %2) #8
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %2) #8
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %89 = icmp eq %"class.WTF::StringImpl"* %88, null
  br i1 %89, label %103, label %90

90:                                               ; preds = %76
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  br i1 %94, label %97, label %99

97:                                               ; preds = %90
  %98 = add i32 %96, -1
  store i32 %98, i32* %95, align 4
  br label %99

99:                                               ; preds = %97, %90
  %100 = phi i32 [ %98, %97 ], [ %96, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %99
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %88) #8
  br label %103

103:                                              ; preds = %76, %99, %102
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #8
  ret %"class.WTF::StringImpl"* %87

104:                                              ; preds = %71, %128
  %105 = phi %"struct.std::__1::pair"* [ %131, %128 ], [ %74, %71 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #8
  %106 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %106, i64* %37, align 8
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0), i8** %38, align 8
  store i32 1, i32* %39, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #8
  %107 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %105, i64 0, i32 0
  %108 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String18EncodeForDebuggingEv(%"class.WTF::String"* %107) #8
  %109 = icmp eq %"class.WTF::StringImpl"* %108, null
  br i1 %109, label %110, label %112

110:                                              ; preds = %104
  store i8* null, i8** %42, align 8
  %111 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %111, i64* %45, align 8
  store i32 0, i32* %44, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  br label %128

112:                                              ; preds = %104
  store %"class.WTF::StringImpl"* %108, %"class.WTF::StringImpl"** %41, align 8
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 1
  %114 = load i32, i32* %113, align 4
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 1
  store %"class.WTF::StringImpl"* %115, %"class.WTF::StringImpl"** %43, align 8
  store i32 %114, i32* %44, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load atomic i32, i32* %116 monotonic, align 4
  %118 = and i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  br i1 %119, label %122, label %124

122:                                              ; preds = %112
  %123 = add i32 %121, -1
  store i32 %123, i32* %120, align 4
  br label %124

124:                                              ; preds = %122, %112
  %125 = phi i32 [ %123, %122 ], [ %121, %112 ]
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %128

127:                                              ; preds = %124
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %108) #8
  br label %128

128:                                              ; preds = %110, %124, %127
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #8
  %129 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %129, i64* %47, align 8
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i64 0, i64 0), i8** %48, align 8
  store i32 1, i32* %49, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #8
  %130 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %105, i64 0, i32 1
  call fastcc void @_ZN5blinkL20SpecifierMapToStringERN3WTF13StringBuilderERKNS0_7HashMapINS0_6StringENS_4KURLENS0_10StringHashENS0_10HashTraitsIS4_EENS7_IS5_EENS0_18PartitionAllocatorEEE(%"class.WTF::StringBuilder"* nonnull dereferenceable(48) %2, %"class.WTF::HashMap"* dereferenceable(24) %130)
  %131 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %105, i64 1
  %132 = icmp eq %"struct.std::__1::pair"* %131, %33
  br i1 %132, label %76, label %104, !llvm.loop !53
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !22
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #8
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !2

46:                                               ; preds = %37
  tail call void @llvm.trap() #8
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #8
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #8
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #8
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blinkL20SpecifierMapToStringERN3WTF13StringBuilderERKNS0_7HashMapINS0_6StringENS_4KURLENS0_10StringHashENS0_10HashTraitsIS4_EENS7_IS5_EENS0_18PartitionAllocatorEEE(%"class.WTF::StringBuilder"* dereferenceable(48), %"class.WTF::HashMap"* nocapture readonly dereferenceable(24)) unnamed_addr #0 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #8
  %11 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %12 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.36, i64 0, i64 0), i8** %13, align 8
  %14 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 1, i32* %14, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %0, %"class.WTF::StringView"* nonnull dereferenceable(24) %3)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #8
  %15 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %1, i64 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %1, i64 0, i32 0, i32 0
  %19 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %18, align 8
  %20 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %1, i64 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %19, i64 %22
  br i1 %17, label %61, label %24

24:                                               ; preds = %2
  %25 = icmp eq i32 %21, 0
  br i1 %25, label %33, label %26

26:                                               ; preds = %24, %30
  %27 = phi %"struct.WTF::KeyValuePair"* [ %31, %30 ], [ %19, %24 ]
  %28 = bitcast %"struct.WTF::KeyValuePair"* %27 to i64*
  %29 = load i64, i64* %28, align 8
  switch i64 %29, label %33 [
    i64 -1, label %30
    i64 0, label %30
  ]

30:                                               ; preds = %26, %26
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %27, i64 1
  %32 = icmp eq %"struct.WTF::KeyValuePair"* %31, %23
  br i1 %32, label %61, label %26

33:                                               ; preds = %26, %24
  %34 = phi %"struct.WTF::KeyValuePair"* [ %19, %24 ], [ %27, %26 ]
  %35 = icmp eq %"struct.WTF::KeyValuePair"* %34, %23
  br i1 %35, label %61, label %36

36:                                               ; preds = %33
  %37 = bitcast %"class.WTF::StringView"* %4 to i8*
  %38 = bitcast %"class.WTF::StringView"* %4 to i64*
  %39 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %40 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %41 = bitcast %"class.WTF::StringView"* %5 to i8*
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  %43 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %44 = bitcast i8** %43 to %"class.WTF::StringImpl"**
  %45 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  %46 = bitcast %"class.WTF::StringView"* %5 to i64*
  %47 = bitcast %"class.WTF::StringView"* %6 to i8*
  %48 = bitcast %"class.WTF::StringView"* %6 to i64*
  %49 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %50 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  %51 = bitcast %"class.WTF::StringView"* %8 to i8*
  %52 = bitcast %"class.WTF::StringView"* %8 to i64*
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %54 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  %55 = bitcast %"class.WTF::StringView"* %7 to i8*
  %56 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  %57 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %58 = bitcast i8** %57 to %"class.WTF::StringImpl"**
  %59 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  %60 = bitcast %"class.WTF::StringView"* %7 to i64*
  br label %67

61:                                               ; preds = %30, %122, %133, %130, %2, %33
  %62 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %62) #8
  %63 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %64 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %63, i64* %64, align 8
  %65 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.25, i64 0, i64 0), i8** %65, align 8
  %66 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 1, i32* %66, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %0, %"class.WTF::StringView"* nonnull dereferenceable(24) %9)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %62) #8
  ret void

67:                                               ; preds = %36, %133
  %68 = phi i1 [ true, %36 ], [ false, %133 ]
  %69 = phi %"struct.WTF::KeyValuePair"* [ %34, %36 ], [ %127, %133 ]
  br i1 %68, label %72, label %70

70:                                               ; preds = %67
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #8
  %71 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %71, i64* %38, align 8
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0), i8** %39, align 8
  store i32 1, i32* %40, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %0, %"class.WTF::StringView"* nonnull dereferenceable(24) %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #8
  br label %72

72:                                               ; preds = %70, %67
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #8
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %69, i64 0, i32 0
  %74 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String18EncodeForDebuggingEv(%"class.WTF::String"* %73) #8
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %76, label %78

76:                                               ; preds = %72
  store i8* null, i8** %43, align 8
  %77 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %77, i64* %46, align 8
  store i32 0, i32* %45, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %0, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  br label %94

78:                                               ; preds = %72
  store %"class.WTF::StringImpl"* %74, %"class.WTF::StringImpl"** %42, align 8
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 1
  store %"class.WTF::StringImpl"* %81, %"class.WTF::StringImpl"** %44, align 8
  store i32 %80, i32* %45, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %0, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  br i1 %85, label %88, label %90

88:                                               ; preds = %78
  %89 = add i32 %87, -1
  store i32 %89, i32* %86, align 4
  br label %90

90:                                               ; preds = %88, %78
  %91 = phi i32 [ %89, %88 ], [ %87, %78 ]
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %94

93:                                               ; preds = %90
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %74) #8
  br label %94

94:                                               ; preds = %76, %90, %93
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #8
  %95 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %95, i64* %48, align 8
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i64 0, i64 0), i8** %49, align 8
  store i32 1, i32* %50, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %0, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #8
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %69, i64 0, i32 1
  %97 = call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* %96) #8
  br i1 %97, label %98, label %120

98:                                               ; preds = %94
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #8
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %69, i64 0, i32 1, i32 4
  %100 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String18EncodeForDebuggingEv(%"class.WTF::String"* %99) #8
  %101 = icmp eq %"class.WTF::StringImpl"* %100, null
  br i1 %101, label %102, label %104

102:                                              ; preds = %98
  store i8* null, i8** %57, align 8
  %103 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %103, i64* %60, align 8
  store i32 0, i32* %59, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %0, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  br label %122

104:                                              ; preds = %98
  store %"class.WTF::StringImpl"* %100, %"class.WTF::StringImpl"** %56, align 8
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 1
  %106 = load i32, i32* %105, align 4
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 1
  store %"class.WTF::StringImpl"* %107, %"class.WTF::StringImpl"** %58, align 8
  store i32 %106, i32* %59, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %0, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  br i1 %111, label %114, label %116

114:                                              ; preds = %104
  %115 = add i32 %113, -1
  store i32 %115, i32* %112, align 4
  br label %116

116:                                              ; preds = %114, %104
  %117 = phi i32 [ %115, %114 ], [ %113, %104 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %122

119:                                              ; preds = %116
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %100) #8
  br label %122

120:                                              ; preds = %94
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #8
  %121 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %121, i64* %52, align 8
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.37, i64 0, i64 0), i8** %53, align 8
  store i32 4, i32* %54, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %0, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  br label %122

122:                                              ; preds = %119, %116, %102, %120
  %123 = phi i8* [ %51, %120 ], [ %55, %102 ], [ %55, %116 ], [ %55, %119 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %123) #8
  %124 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %69, i64 1
  %125 = icmp eq %"struct.WTF::KeyValuePair"* %124, %23
  br i1 %125, label %61, label %126

126:                                              ; preds = %122, %130
  %127 = phi %"struct.WTF::KeyValuePair"* [ %131, %130 ], [ %124, %122 ]
  %128 = bitcast %"struct.WTF::KeyValuePair"* %127 to i64*
  %129 = load i64, i64* %128, align 8
  switch i64 %129, label %133 [
    i64 -1, label %130
    i64 0, label %130
  ]

130:                                              ; preds = %126, %126
  %131 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %127, i64 1
  %132 = icmp eq %"struct.WTF::KeyValuePair"* %131, %23
  br i1 %132, label %61, label %126

133:                                              ; preds = %126
  %134 = icmp eq %"struct.WTF::KeyValuePair"* %127, %23
  br i1 %134, label %61, label %67
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String18EncodeForDebuggingEv(%"class.WTF::String"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.blink::WorldSafeV8Reference"* @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEaSERKS3_(%"class.blink::WorldSafeV8Reference"*, %"class.blink::WorldSafeV8Reference"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 0
  %4 = icmp eq %"class.blink::WorldSafeV8Reference"* %0, %1
  br i1 %4, label %16, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = icmp eq i64* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  tail call void @_ZN2v82V819DisposeTracedGlobalEPm(i64* nonnull %7) #8
  %10 = bitcast %"class.blink::WorldSafeV8Reference"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  br label %11

11:                                               ; preds = %9, %5
  %12 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8
  %14 = icmp eq i64* %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64** %12, i64** %6) #8
  br label %16

16:                                               ; preds = %2, %11, %15
  tail call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference"* dereferenceable(8) %3) #8
  %17 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 1
  %18 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %1, i64 0, i32 1, i32 0
  %19 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %18, align 8
  %20 = icmp eq %"class.blink::DOMWrapperWorld"* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %19, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %22) #8
  br label %23

23:                                               ; preds = %16, %21
  %24 = ptrtoint %"class.blink::DOMWrapperWorld"* %19 to i64
  %25 = bitcast %class.scoped_refptr.6* %17 to i64*
  %26 = getelementptr inbounds %class.scoped_refptr.6, %class.scoped_refptr.6* %17, i64 0, i32 0
  %27 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %26, align 8
  store i64 %24, i64* %25, align 8
  %28 = icmp eq %"class.blink::DOMWrapperWorld"* %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %30) #8
  %31 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %27) #8
  %35 = bitcast %"class.blink::DOMWrapperWorld"* %27 to i8*
  tail call void @free(i8* %35) #8
  br label %36

36:                                               ; preds = %23, %29, %34
  ret %"class.blink::WorldSafeV8Reference"* %0
}

declare void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64**, i64**) local_unnamed_addr #2

declare void @_ZN2v82V819DisposeTracedGlobalEPm(i64*) local_unnamed_addr #2

declare void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZN5blink15ParsedSpecifier6CreateERKN3WTF6StringERKNS_4KURLE(%"class.blink::ParsedSpecifier"* sret, %"class.WTF::String"* dereferenceable(8), %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EcvS3_Ev(%"class.WTF::StringAppend.224"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.245", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.245", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.248", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.248", align 8
  %6 = alloca i8*, align 8
  %7 = alloca i16*, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.224", %"class.WTF::StringAppend.224"* %0, i64 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %11 = bitcast %"class.WTF::StringTypeAdapter.248"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #8
  %12 = getelementptr inbounds %"class.WTF::StringAppend.224", %"class.WTF::StringAppend.224"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #8
  %13 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.248"* nonnull %5, i8* %13) #8
  %14 = bitcast %"class.WTF::StringTypeAdapter.248"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #8
  %15 = getelementptr inbounds %"class.WTF::StringAppend.224", %"class.WTF::StringAppend.224"* %0, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false) #8
  %16 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.248"* nonnull %4, i8* %16) #8
  %17 = getelementptr inbounds %"class.WTF::StringAppend.224", %"class.WTF::StringAppend.224"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %21 = select i1 %19, %"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"* %18
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #8
  br i1 %25, label %92, label %26

26:                                               ; preds = %1
  %27 = icmp eq %"class.WTF::StringImpl"* %9, null
  %28 = select i1 %27, %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"* %9
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 1
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %92, label %33

33:                                               ; preds = %26
  %34 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #8
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %35 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.224"* %0)
  %36 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %35, i8** nonnull dereferenceable(8) %6) #8
  %37 = load i8*, i8** %6, align 8
  %38 = getelementptr inbounds %"class.WTF::StringAppend.224", %"class.WTF::StringAppend.224"* %0, i64 0, i32 0
  %39 = bitcast %"class.WTF::StringTypeAdapter.245"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #8
  %40 = getelementptr inbounds %"class.WTF::StringTypeAdapter.245", %"class.WTF::StringTypeAdapter.245"* %3, i64 0, i32 0, i32 0, i32 1
  %41 = getelementptr inbounds %"class.WTF::StringTypeAdapter.245", %"class.WTF::StringTypeAdapter.245"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 24, i1 false) #8
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %44, label %46

44:                                               ; preds = %33
  %45 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %52

46:                                               ; preds = %33
  %47 = ptrtoint %"class.WTF::StringImpl"* %42 to i64
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 1
  %51 = bitcast %"class.WTF::StringImpl"* %50 to i8*
  br label %52

52:                                               ; preds = %44, %46
  %53 = phi i8* [ null, %44 ], [ %51, %46 ]
  %54 = phi i64 [ %45, %44 ], [ %47, %46 ]
  %55 = phi i32 [ 0, %44 ], [ %49, %46 ]
  %56 = bitcast %"class.WTF::StringTypeAdapter.245"* %3 to i64*
  store i64 %54, i64* %56, align 8
  store i8* %53, i8** %40, align 8
  store i32 %55, i32* %41, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend"* %38, i8* %37) #8
  %57 = getelementptr inbounds %"class.WTF::StringTypeAdapter.245", %"class.WTF::StringTypeAdapter.245"* %3, i64 0, i32 0
  %58 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %38) #8
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds i8, i8* %37, i64 %59
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.246"* nonnull %57, i8* %60) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #8
  %61 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %61, label %151, label %62

62:                                               ; preds = %52
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %79

69:                                               ; preds = %62
  %70 = zext i32 %68 to i33
  %71 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %70, i33 1) #8
  %72 = extractvalue { i33, i1 } %71, 1
  %73 = extractvalue { i33, i1 } %71, 0
  %74 = icmp slt i33 %73, 0
  %75 = or i1 %72, %74
  br i1 %75, label %76, label %77, !prof !2

76:                                               ; preds = %69
  call void @llvm.trap() #8
  unreachable

77:                                               ; preds = %69
  %78 = trunc i33 %73 to i32
  store i32 %78, i32* %67, align 4
  br label %79

79:                                               ; preds = %62, %77
  %80 = phi i32 [ %78, %77 ], [ %68, %62 ]
  %81 = ptrtoint %"class.WTF::StringImpl"* %36 to i64
  %82 = load atomic i32, i32* %63 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %88

85:                                               ; preds = %79
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %87 = add i32 %80, -1
  store i32 %87, i32* %86, align 4
  br label %88

88:                                               ; preds = %85, %79
  %89 = phi i32 [ %87, %85 ], [ %80, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %151

91:                                               ; preds = %88
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #8
  br label %151

92:                                               ; preds = %26, %1
  %93 = bitcast i16** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93) #8
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %7, align 8
  %94 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.224"* %0)
  %95 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %94, i16** nonnull dereferenceable(8) %7) #8
  %96 = load i16*, i16** %7, align 8
  %97 = getelementptr inbounds %"class.WTF::StringAppend.224", %"class.WTF::StringAppend.224"* %0, i64 0, i32 0
  %98 = bitcast %"class.WTF::StringTypeAdapter.245"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %98) #8
  %99 = getelementptr inbounds %"class.WTF::StringTypeAdapter.245", %"class.WTF::StringTypeAdapter.245"* %2, i64 0, i32 0, i32 0, i32 1
  %100 = getelementptr inbounds %"class.WTF::StringTypeAdapter.245", %"class.WTF::StringTypeAdapter.245"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %98, i8 -86, i64 24, i1 false) #8
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %102 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %102, label %103, label %105

103:                                              ; preds = %92
  %104 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %111

105:                                              ; preds = %92
  %106 = ptrtoint %"class.WTF::StringImpl"* %101 to i64
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 1
  %108 = load i32, i32* %107, align 4
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 1
  %110 = bitcast %"class.WTF::StringImpl"* %109 to i8*
  br label %111

111:                                              ; preds = %103, %105
  %112 = phi i8* [ null, %103 ], [ %110, %105 ]
  %113 = phi i64 [ %104, %103 ], [ %106, %105 ]
  %114 = phi i32 [ 0, %103 ], [ %108, %105 ]
  %115 = bitcast %"class.WTF::StringTypeAdapter.245"* %2 to i64*
  store i64 %113, i64* %115, align 8
  store i8* %112, i8** %99, align 8
  store i32 %114, i32* %100, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend"* %97, i16* %96) #8
  %116 = getelementptr inbounds %"class.WTF::StringTypeAdapter.245", %"class.WTF::StringTypeAdapter.245"* %2, i64 0, i32 0
  %117 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %97) #8
  %118 = zext i32 %117 to i64
  %119 = getelementptr inbounds i16, i16* %96, i64 %118
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.246"* nonnull %116, i16* %119) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %98) #8
  %120 = icmp eq %"class.WTF::StringImpl"* %95, null
  br i1 %120, label %151, label %121

121:                                              ; preds = %111
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load atomic i32, i32* %122 monotonic, align 4
  %124 = and i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 0
  %127 = load i32, i32* %126, align 4
  br i1 %125, label %128, label %138

128:                                              ; preds = %121
  %129 = zext i32 %127 to i33
  %130 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %129, i33 1) #8
  %131 = extractvalue { i33, i1 } %130, 1
  %132 = extractvalue { i33, i1 } %130, 0
  %133 = icmp slt i33 %132, 0
  %134 = or i1 %131, %133
  br i1 %134, label %135, label %136, !prof !2

135:                                              ; preds = %128
  call void @llvm.trap() #8
  unreachable

136:                                              ; preds = %128
  %137 = trunc i33 %132 to i32
  store i32 %137, i32* %126, align 4
  br label %138

138:                                              ; preds = %121, %136
  %139 = phi i32 [ %137, %136 ], [ %127, %121 ]
  %140 = ptrtoint %"class.WTF::StringImpl"* %95 to i64
  %141 = load atomic i32, i32* %122 monotonic, align 4
  %142 = and i32 %141, 2
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %147

144:                                              ; preds = %138
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 0
  %146 = add i32 %139, -1
  store i32 %146, i32* %145, align 4
  br label %147

147:                                              ; preds = %144, %138
  %148 = phi i32 [ %146, %144 ], [ %139, %138 ]
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %151

150:                                              ; preds = %147
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %95) #8
  br label %151

151:                                              ; preds = %150, %147, %111, %91, %88, %52
  %152 = phi i8* [ %34, %52 ], [ %34, %88 ], [ %34, %91 ], [ %93, %111 ], [ %93, %147 ], [ %93, %150 ]
  %153 = phi i64 [ 0, %52 ], [ %81, %88 ], [ %81, %91 ], [ 0, %111 ], [ %140, %147 ], [ %140, %150 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %152) #8
  %154 = inttoptr i64 %153 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %154
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.224"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.224", %"class.WTF::StringAppend.224"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend.224", %"class.WTF::StringAppend.224"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %8) #8
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #8
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %8) #8
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #8
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.29, i64 0, i64 0), i8* %26, i8* %27) #8
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.30, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #8
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #8
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #8
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #8
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #8
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.31, i64 0, i64 0), i8* %41, i8* %42) #8
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.30, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #8
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #8
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #8
  ret i32 %18
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.248"*, i8*) unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.248", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.248"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #8
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.248", %"class.WTF::StringTypeAdapter.248"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.248"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.248"* nonnull %4, i8* %14) #8
  %15 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.217"* %9) #8
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #8
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.217"* %9) #8
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #8
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.29, i64 0, i64 0), i8* %25, i8* %26) #8
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.30, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #8
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #8
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #8
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #8
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #8
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.31, i64 0, i64 0), i8* %41, i8* %42) #8
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.30, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #8
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #8
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #8
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.217"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.248", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.248"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.248", %"class.WTF::StringTypeAdapter.248"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.217", %"class.WTF::StringAppend.217"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.248"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.248"* nonnull %4, i8* %13) #8
  %14 = getelementptr inbounds %"class.WTF::StringAppend.217", %"class.WTF::StringAppend.217"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #8
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #8
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.29, i64 0, i64 0), i8* %30, i8* %31) #8
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.30, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #8
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #8
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #8
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #8
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #8
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.31, i64 0, i64 0), i8* %45, i8* %46) #8
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.30, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #8
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #8
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #8
  ret i32 %23
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.246"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.248", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.245", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.248", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.248"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.248"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.248"* nonnull %5, i8* %10) #8
  %11 = bitcast %"class.WTF::StringTypeAdapter.248"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #8
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.248", %"class.WTF::StringTypeAdapter.248"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #8
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.248"* nonnull %3, i8* %14) #8
  %15 = bitcast %"class.WTF::StringTypeAdapter.245"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #8
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.245", %"class.WTF::StringTypeAdapter.245"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.245", %"class.WTF::StringTypeAdapter.245"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #8
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.245"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.248"* nonnull %3, i8* %1) #8
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.245", %"class.WTF::StringTypeAdapter.245"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.246"* nonnull %34, i8* %37) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #8
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.217"* %6) #8
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.248"* nonnull %5, i8* %40) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #8
  ret void
}

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.248"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.246"*, i16*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.248", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.245", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.248", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.248"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.248"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.248"* nonnull %5, i8* %10) #8
  %11 = bitcast %"class.WTF::StringTypeAdapter.248"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #8
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.248", %"class.WTF::StringTypeAdapter.248"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #8
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.248"* nonnull %3, i8* %14) #8
  %15 = bitcast %"class.WTF::StringTypeAdapter.245"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #8
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.245", %"class.WTF::StringTypeAdapter.245"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.245", %"class.WTF::StringTypeAdapter.245"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #8
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.245"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.248"* nonnull %3, i16* %1) #8
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.245", %"class.WTF::StringTypeAdapter.245"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.246"* nonnull %34, i16* %37) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #8
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.217"* %6) #8
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.248"* nonnull %5, i16* %40) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #8
  ret void
}

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.248"*, i16*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend.217"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.248", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.245", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.248", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.245", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter.248", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i16*, align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.248"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.WTF::StringAppend.217", %"class.WTF::StringAppend.217"* %0, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #8
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.248"* nonnull %6, i8* %11) #8
  %12 = getelementptr inbounds %"class.WTF::StringAppend.217", %"class.WTF::StringAppend.217"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #8
  br i1 %20, label %82, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #8
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.217"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %7) #8
  %25 = load i8*, i8** %7, align 8
  %26 = bitcast %"class.WTF::StringTypeAdapter.248"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #8
  %27 = getelementptr inbounds %"class.WTF::StringTypeAdapter.248", %"class.WTF::StringTypeAdapter.248"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 16, i1 false) #8
  %28 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.248"* nonnull %4, i8* %28) #8
  %29 = bitcast %"class.WTF::StringTypeAdapter.245"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #8
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.245", %"class.WTF::StringTypeAdapter.245"* %5, i64 0, i32 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringTypeAdapter.245", %"class.WTF::StringTypeAdapter.245"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 24, i1 false) #8
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %34, label %36

34:                                               ; preds = %21
  %35 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %42

36:                                               ; preds = %21
  %37 = ptrtoint %"class.WTF::StringImpl"* %32 to i64
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 1
  %41 = bitcast %"class.WTF::StringImpl"* %40 to i8*
  br label %42

42:                                               ; preds = %34, %36
  %43 = phi i8* [ null, %34 ], [ %41, %36 ]
  %44 = phi i64 [ %35, %34 ], [ %37, %36 ]
  %45 = phi i32 [ 0, %34 ], [ %39, %36 ]
  %46 = bitcast %"class.WTF::StringTypeAdapter.245"* %5 to i64*
  store i64 %44, i64* %46, align 8
  store i8* %43, i8** %30, align 8
  store i32 %45, i32* %31, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.248"* nonnull %4, i8* %25) #8
  %47 = getelementptr inbounds %"class.WTF::StringTypeAdapter.245", %"class.WTF::StringTypeAdapter.245"* %5, i64 0, i32 0
  %48 = load i32, i32* %27, align 8
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %25, i64 %49
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.246"* nonnull %47, i8* %50) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #8
  %51 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %51, label %143, label %52

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %69

59:                                               ; preds = %52
  %60 = zext i32 %58 to i33
  %61 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %60, i33 1) #8
  %62 = extractvalue { i33, i1 } %61, 1
  %63 = extractvalue { i33, i1 } %61, 0
  %64 = icmp slt i33 %63, 0
  %65 = or i1 %62, %64
  br i1 %65, label %66, label %67, !prof !2

66:                                               ; preds = %59
  call void @llvm.trap() #8
  unreachable

67:                                               ; preds = %59
  %68 = trunc i33 %63 to i32
  store i32 %68, i32* %57, align 4
  br label %69

69:                                               ; preds = %52, %67
  %70 = phi i32 [ %68, %67 ], [ %58, %52 ]
  %71 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %72 = load atomic i32, i32* %53 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %77 = add i32 %70, -1
  store i32 %77, i32* %76, align 4
  br label %78

78:                                               ; preds = %75, %69
  %79 = phi i32 [ %77, %75 ], [ %70, %69 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %143

81:                                               ; preds = %78
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #8
  br label %143

82:                                               ; preds = %1
  %83 = bitcast i16** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #8
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %8, align 8
  %84 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.217"* %0)
  %85 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %84, i16** nonnull dereferenceable(8) %8) #8
  %86 = load i16*, i16** %8, align 8
  %87 = bitcast %"class.WTF::StringTypeAdapter.248"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #8
  %88 = getelementptr inbounds %"class.WTF::StringTypeAdapter.248", %"class.WTF::StringTypeAdapter.248"* %2, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 -86, i64 16, i1 false) #8
  %89 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.248"* nonnull %2, i8* %89) #8
  %90 = bitcast %"class.WTF::StringTypeAdapter.245"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #8
  %91 = getelementptr inbounds %"class.WTF::StringTypeAdapter.245", %"class.WTF::StringTypeAdapter.245"* %3, i64 0, i32 0, i32 0, i32 1
  %92 = getelementptr inbounds %"class.WTF::StringTypeAdapter.245", %"class.WTF::StringTypeAdapter.245"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 -86, i64 24, i1 false) #8
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %95, label %97

95:                                               ; preds = %82
  %96 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %103

97:                                               ; preds = %82
  %98 = ptrtoint %"class.WTF::StringImpl"* %93 to i64
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 1
  %102 = bitcast %"class.WTF::StringImpl"* %101 to i8*
  br label %103

103:                                              ; preds = %95, %97
  %104 = phi i8* [ null, %95 ], [ %102, %97 ]
  %105 = phi i64 [ %96, %95 ], [ %98, %97 ]
  %106 = phi i32 [ 0, %95 ], [ %100, %97 ]
  %107 = bitcast %"class.WTF::StringTypeAdapter.245"* %3 to i64*
  store i64 %105, i64* %107, align 8
  store i8* %104, i8** %91, align 8
  store i32 %106, i32* %92, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.248"* nonnull %2, i16* %86) #8
  %108 = getelementptr inbounds %"class.WTF::StringTypeAdapter.245", %"class.WTF::StringTypeAdapter.245"* %3, i64 0, i32 0
  %109 = load i32, i32* %88, align 8
  %110 = zext i32 %109 to i64
  %111 = getelementptr inbounds i16, i16* %86, i64 %110
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.246"* nonnull %108, i16* %111) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #8
  %112 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %112, label %143, label %113

113:                                              ; preds = %103
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  br i1 %117, label %120, label %130

120:                                              ; preds = %113
  %121 = zext i32 %119 to i33
  %122 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %121, i33 1) #8
  %123 = extractvalue { i33, i1 } %122, 1
  %124 = extractvalue { i33, i1 } %122, 0
  %125 = icmp slt i33 %124, 0
  %126 = or i1 %123, %125
  br i1 %126, label %127, label %128, !prof !2

127:                                              ; preds = %120
  call void @llvm.trap() #8
  unreachable

128:                                              ; preds = %120
  %129 = trunc i33 %124 to i32
  store i32 %129, i32* %118, align 4
  br label %130

130:                                              ; preds = %113, %128
  %131 = phi i32 [ %129, %128 ], [ %119, %113 ]
  %132 = ptrtoint %"class.WTF::StringImpl"* %85 to i64
  %133 = load atomic i32, i32* %114 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %139

136:                                              ; preds = %130
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %138 = add i32 %131, -1
  store i32 %138, i32* %137, align 4
  br label %139

139:                                              ; preds = %136, %130
  %140 = phi i32 [ %138, %136 ], [ %131, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %85) #8
  br label %143

143:                                              ; preds = %142, %139, %103, %81, %78, %42
  %144 = phi i8* [ %22, %42 ], [ %22, %78 ], [ %22, %81 ], [ %83, %103 ], [ %83, %139 ], [ %83, %142 ]
  %145 = phi i64 [ 0, %42 ], [ %71, %78 ], [ %71, %81 ], [ 0, %103 ], [ %132, %139 ], [ %132, %142 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %144) #8
  %146 = inttoptr i64 %145 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %146
}

declare zeroext i1 @_ZNK3WTF10StringImpl8EndsWithEDs(%"class.WTF::StringImpl"*, i16 zeroext) local_unnamed_addr #2

declare zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK3WTF10StringImpl8EndsWithERKNS_10StringViewE(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.224"*, %"class.WTF::StringAppend"* byval(%"class.WTF::StringAppend") align 8, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend.224"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.224", %"class.WTF::StringAppend.224"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #8
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !2

25:                                               ; preds = %16
  tail call void @llvm.trap() #8
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %3, %11, %26
  %29 = getelementptr inbounds %"class.WTF::StringAppend.224", %"class.WTF::StringAppend.224"* %0, i64 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %1, i64 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.224", %"class.WTF::StringAppend.224"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %35, label %65, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %53

43:                                               ; preds = %36
  %44 = zext i32 %42 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #8
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !2

50:                                               ; preds = %43
  tail call void @llvm.trap() #8
  unreachable

51:                                               ; preds = %43
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %41, align 4
  br label %53

53:                                               ; preds = %36, %51
  %54 = phi i32 [ %52, %51 ], [ %42, %36 ]
  %55 = load atomic i32, i32* %37 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %60 = add i32 %54, -1
  store i32 %60, i32* %59, align 4
  br label %61

61:                                               ; preds = %58, %53
  %62 = phi i32 [ %60, %58 ], [ %54, %53 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #8
  br label %65

65:                                               ; preds = %28, %61, %64
  br i1 %10, label %79, label %66

66:                                               ; preds = %65
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %75

73:                                               ; preds = %66
  %74 = add i32 %72, -1
  store i32 %74, i32* %71, align 4
  br label %75

75:                                               ; preds = %73, %66
  %76 = phi i32 [ %74, %73 ], [ %72, %66 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #8
  br label %79

79:                                               ; preds = %65, %75, %78
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_9ImportMapEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #8
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_9ImportMapEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_9ImportMapEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_9ImportMapEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #8
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #8
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #8
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #8
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.38, i64 0, i64 0), i8* %40, i8* %41) #8
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #8
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.39, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #8
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #8
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #8
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !2

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #8
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_9ImportMapEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_9ImportMapEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 24
  %3 = bitcast i8* %2 to %"struct.std::__1::pair"**
  %4 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %3, align 8
  %5 = icmp eq %"struct.std::__1::pair"* %4, null
  br i1 %5, label %80, label %6, !prof !12

6:                                                ; preds = %1
  %7 = bitcast %"struct.std::__1::pair"* %4 to i8*
  %8 = getelementptr inbounds i8, i8* %0, i64 36
  %9 = bitcast i8* %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %78, label %12, !prof !2

12:                                               ; preds = %6
  %13 = zext i32 %10 to i64
  %14 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 %13
  br label %15

15:                                               ; preds = %72, %12
  %16 = phi %"struct.std::__1::pair"* [ %73, %72 ], [ %4, %12 ]
  %17 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 0, i32 1, i32 0, i32 0
  %18 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %17, align 8
  %19 = icmp eq %"struct.WTF::KeyValuePair"* %18, null
  br i1 %19, label %55, label %20, !prof !12

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 0, i32 1, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %53, label %24

24:                                               ; preds = %20
  %25 = zext i32 %22 to i64
  br label %26

26:                                               ; preds = %50, %24
  %27 = phi i64 [ 0, %24 ], [ %51, %50 ]
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %18, i64 %27
  %29 = bitcast %"struct.WTF::KeyValuePair"* %28 to i8**
  %30 = load i8*, i8** %29, align 8
  %31 = icmp eq i8* %30, inttoptr (i64 -1 to i8*)
  br i1 %31, label %50, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %18, i64 %27, i32 1
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %33) #8
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %28, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %50, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  br i1 %41, label %44, label %46

44:                                               ; preds = %37
  %45 = add i32 %43, -1
  store i32 %45, i32* %42, align 4
  br label %46

46:                                               ; preds = %44, %37
  %47 = phi i32 [ %45, %44 ], [ %43, %37 ]
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %46
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #8
  br label %50

50:                                               ; preds = %49, %46, %32, %26
  %51 = add nuw nsw i64 %27, 1
  %52 = icmp eq i64 %51, %25
  br i1 %52, label %53, label %26

53:                                               ; preds = %50, %20
  %54 = bitcast %"struct.WTF::KeyValuePair"* %18 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %54) #8
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %17, align 8
  br label %55

55:                                               ; preds = %53, %15
  %56 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 0, i32 0, i32 0, i32 0
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %59
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ %67, %66 ], [ %65, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #8
  br label %72

72:                                               ; preds = %55, %68, %71
  %73 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 1
  %74 = icmp eq %"struct.std::__1::pair"* %73, %14
  br i1 %74, label %75, label %15

75:                                               ; preds = %72
  store i32 0, i32* %9, align 4
  %76 = bitcast i8* %2 to i8**
  %77 = load i8*, i8** %76, align 8
  br label %78

78:                                               ; preds = %75, %6
  %79 = phi i8* [ %77, %75 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %79) #8
  store %"struct.std::__1::pair"* null, %"struct.std::__1::pair"** %3, align 8
  br label %80

80:                                               ; preds = %1, %78
  %81 = bitcast i8* %0 to %"struct.WTF::KeyValuePair"**
  %82 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %81, align 8
  %83 = icmp eq %"struct.WTF::KeyValuePair"* %82, null
  br i1 %83, label %120, label %84, !prof !12

84:                                               ; preds = %80
  %85 = getelementptr inbounds i8, i8* %0, i64 8
  %86 = bitcast i8* %85 to i32*
  %87 = load i32, i32* %86, align 8
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %118, label %89

89:                                               ; preds = %84
  %90 = zext i32 %87 to i64
  br label %91

91:                                               ; preds = %115, %89
  %92 = phi i64 [ 0, %89 ], [ %116, %115 ]
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %82, i64 %92
  %94 = bitcast %"struct.WTF::KeyValuePair"* %93 to i8**
  %95 = load i8*, i8** %94, align 8
  %96 = icmp eq i8* %95, inttoptr (i64 -1 to i8*)
  br i1 %96, label %115, label %97

97:                                               ; preds = %91
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %82, i64 %92, i32 1
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %98) #8
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %93, i64 0, i32 0, i32 0, i32 0
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %99, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %100, null
  br i1 %101, label %115, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  br i1 %106, label %109, label %111

109:                                              ; preds = %102
  %110 = add i32 %108, -1
  store i32 %110, i32* %107, align 4
  br label %111

111:                                              ; preds = %109, %102
  %112 = phi i32 [ %110, %109 ], [ %108, %102 ]
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %111
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %100) #8
  br label %115

115:                                              ; preds = %114, %111, %97, %91
  %116 = add nuw nsw i64 %92, 1
  %117 = icmp eq i64 %116, %90
  br i1 %117, label %118, label %91

118:                                              ; preds = %115, %84
  %119 = bitcast %"struct.WTF::KeyValuePair"* %82 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %119) #8
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %81, align 8
  br label %120

120:                                              ; preds = %80, %118
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_9ImportMapEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.40, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__14pairINS_6StringENS_7HashMapIS3_N5blink4KURLENS_10StringHashENS_10HashTraitsIS3_EENS8_IS6_EENS_18PartitionAllocatorEEEEELj0ESB_E14AppendSlowCaseISD_EEvOT_(%"class.WTF::Vector"*, %"struct.std::__1::pair"* dereferenceable(32)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %6, align 8
  %8 = icmp ugt %"struct.std::__1::pair"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %7, i64 %10
  %12 = icmp ugt %"struct.std::__1::pair"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !12

24:                                               ; preds = %13
  %25 = icmp eq %"struct.std::__1::pair"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairINS_6StringENS_7HashMapIS4_N5blink4KURLENS_10StringHashENS_10HashTraitsIS4_EENS9_IS7_EES0_EEEEEEmm(i64 %27) #8
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([218 x i8], [218 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairINS_6StringENS_7HashMapIS3_N5blink4KURLENS_10StringHashENS_10HashTraitsIS3_EENS8_IS6_EENS_18PartitionAllocatorEEEEEEEPKcv, i64 0, i64 0)) #8
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 5
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"struct.std::__1::pair"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorINSt3__14pairINS_6StringENS_7HashMapIS3_N5blink4KURLENS_10StringHashENS_10HashTraitsIS3_EENS8_IS6_EENS_18PartitionAllocatorEEEEELj0ESB_E16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %22) #8
  %36 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"struct.std::__1::pair"* %1 to i64
  %39 = ptrtoint %"struct.std::__1::pair"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 5
  %42 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !12

52:                                               ; preds = %37
  %53 = icmp eq %"struct.std::__1::pair"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairINS_6StringENS_7HashMapIS4_N5blink4KURLENS_10StringHashENS_10HashTraitsIS4_EENS9_IS7_EES0_EEEEEEmm(i64 %55) #8
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([218 x i8], [218 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairINS_6StringENS_7HashMapIS3_N5blink4KURLENS_10StringHashENS_10HashTraitsIS3_EENS8_IS6_EENS_18PartitionAllocatorEEEEEEEPKcv, i64 0, i64 0)) #8
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 5
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"struct.std::__1::pair"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorINSt3__14pairINS_6StringENS_7HashMapIS3_N5blink4KURLENS_10StringHashENS_10HashTraitsIS3_EENS8_IS6_EENS_18PartitionAllocatorEEEEELj0ESB_E16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %50) #8
  %64 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"struct.std::__1::pair"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"struct.std::__1::pair"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"struct.std::__1::pair"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %69, i64 %72
  %74 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %70, i64 0, i32 0, i32 0, i32 0
  %75 = bitcast %"struct.std::__1::pair"* %70 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = bitcast %"struct.std::__1::pair"* %73 to i64*
  store i64 %76, i64* %77, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %74, align 8
  %78 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %69, i64 %72, i32 1
  %79 = bitcast %"class.WTF::HashMap"* %78 to i8*
  %80 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %70, i64 0, i32 1
  %81 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %69, i64 %72, i32 1, i32 0, i32 1
  %82 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %69, i64 %72, i32 1, i32 0, i32 2
  %83 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %69, i64 %72, i32 1, i32 0, i32 3
  %84 = bitcast %"class.WTF::HashMap"* %80 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 20, i1 false) #8
  %85 = load i64, i64* %84, align 8
  %86 = bitcast %"class.WTF::HashMap"* %78 to i64*
  store atomic i64 0, i64* %84 monotonic, align 8
  store atomic i64 %85, i64* %86 monotonic, align 8
  %87 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %70, i64 0, i32 1, i32 0, i32 1
  %88 = load i32, i32* %81, align 4
  %89 = load i32, i32* %87, align 4
  store i32 %89, i32* %81, align 4
  store i32 %88, i32* %87, align 4
  %90 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %70, i64 0, i32 1, i32 0, i32 2
  %91 = load i32, i32* %82, align 4
  %92 = load i32, i32* %90, align 4
  store i32 %92, i32* %82, align 4
  store i32 %91, i32* %90, align 4
  %93 = load i32, i32* %83, align 8
  %94 = and i32 %93, 2147483647
  %95 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %70, i64 0, i32 1, i32 0, i32 3
  %96 = load i32, i32* %95, align 8
  %97 = and i32 %96, 2147483647
  %98 = and i32 %93, -2147483648
  %99 = or i32 %97, %98
  store i32 %99, i32* %83, align 8
  %100 = load i32, i32* %95, align 8
  %101 = and i32 %100, -2147483648
  %102 = or i32 %101, %94
  store i32 %102, i32* %95, align 8
  %103 = load i32, i32* %3, align 4
  %104 = add i32 %103, 1
  store i32 %104, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__14pairINS_6StringENS_7HashMapIS3_N5blink4KURLENS_10StringHashENS_10HashTraitsIS3_EENS8_IS6_EENS_18PartitionAllocatorEEEEELj0ESB_E16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %105

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %103, label %14

14:                                               ; preds = %4, %99
  %15 = phi %"struct.std::__1::pair"* [ %101, %99 ], [ %6, %4 ]
  %16 = phi %"struct.std::__1::pair"* [ %100, %99 ], [ null, %4 ]
  %17 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %15, i64 0, i32 0, i32 0, i32 0
  %18 = bitcast %"struct.std::__1::pair"* %15 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"struct.std::__1::pair"* %16 to i64*
  store i64 %19, i64* %20, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %17, align 8
  %21 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 0, i32 1
  %22 = bitcast %"class.WTF::HashMap"* %21 to i8*
  %23 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %15, i64 0, i32 1
  %24 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 0, i32 1, i32 0, i32 1
  %25 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 0, i32 1, i32 0, i32 2
  %26 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 0, i32 1, i32 0, i32 3
  %27 = bitcast %"class.WTF::HashMap"* %23 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 20, i1 false) #8
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.WTF::HashMap"* %21 to i64*
  store atomic i64 0, i64* %27 monotonic, align 8
  store atomic i64 %28, i64* %29 monotonic, align 8
  %30 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %15, i64 0, i32 1, i32 0, i32 1
  %31 = load i32, i32* %24, align 4
  %32 = load i32, i32* %30, align 4
  store i32 %32, i32* %24, align 4
  store i32 %31, i32* %30, align 4
  %33 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %15, i64 0, i32 1, i32 0, i32 2
  %34 = load i32, i32* %25, align 4
  %35 = load i32, i32* %33, align 4
  store i32 %35, i32* %25, align 4
  store i32 %34, i32* %33, align 4
  %36 = load i32, i32* %26, align 8
  %37 = and i32 %36, 2147483647
  %38 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %15, i64 0, i32 1, i32 0, i32 3
  %39 = load i32, i32* %38, align 8
  %40 = and i32 %39, 2147483647
  %41 = and i32 %36, -2147483648
  %42 = or i32 %40, %41
  store i32 %42, i32* %26, align 8
  %43 = load i32, i32* %38, align 8
  %44 = and i32 %43, -2147483648
  %45 = or i32 %44, %37
  store i32 %45, i32* %38, align 8
  %46 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %15, i64 0, i32 1, i32 0, i32 0
  %47 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %46, align 8
  %48 = icmp eq %"struct.WTF::KeyValuePair"* %47, null
  br i1 %48, label %83, label %49, !prof !12

49:                                               ; preds = %14
  %50 = load i32, i32* %30, align 8
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %81, label %52

52:                                               ; preds = %49
  %53 = zext i32 %50 to i64
  br label %54

54:                                               ; preds = %78, %52
  %55 = phi i64 [ 0, %52 ], [ %79, %78 ]
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %47, i64 %55
  %57 = bitcast %"struct.WTF::KeyValuePair"* %56 to i8**
  %58 = load i8*, i8** %57, align 8
  %59 = icmp eq i8* %58, inttoptr (i64 -1 to i8*)
  br i1 %59, label %78, label %60

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %47, i64 %55, i32 1
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %61) #8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %56, i64 0, i32 0, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %78, label %65

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  br i1 %69, label %72, label %74

72:                                               ; preds = %65
  %73 = add i32 %71, -1
  store i32 %73, i32* %70, align 4
  br label %74

74:                                               ; preds = %72, %65
  %75 = phi i32 [ %73, %72 ], [ %71, %65 ]
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %74
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %63) #8
  br label %78

78:                                               ; preds = %77, %74, %60, %54
  %79 = add nuw nsw i64 %55, 1
  %80 = icmp eq i64 %79, %53
  br i1 %80, label %81, label %54

81:                                               ; preds = %78, %49
  %82 = bitcast %"struct.WTF::KeyValuePair"* %47 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %82) #8
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %46, align 8
  br label %83

83:                                               ; preds = %81, %14
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %99, label %86

86:                                               ; preds = %83
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %95

93:                                               ; preds = %86
  %94 = add i32 %92, -1
  store i32 %94, i32* %91, align 4
  br label %95

95:                                               ; preds = %93, %86
  %96 = phi i32 [ %94, %93 ], [ %92, %86 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #8
  br label %99

99:                                               ; preds = %83, %95, %98
  %100 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 1
  %101 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %15, i64 1
  %102 = icmp eq %"struct.std::__1::pair"* %101, %10
  br i1 %102, label %103, label %14

103:                                              ; preds = %99, %4
  %104 = bitcast %"struct.std::__1::pair"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %104) #8
  br label %219

105:                                              ; preds = %2
  %106 = zext i32 %1 to i64
  %107 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairINS_6StringENS_7HashMapIS4_N5blink4KURLENS_10StringHashENS_10HashTraitsIS4_EENS9_IS7_EES0_EEEEEEmm(i64 %106) #8
  %108 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %107, i8* getelementptr inbounds ([218 x i8], [218 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairINS_6StringENS_7HashMapIS3_N5blink4KURLENS_10StringHashENS_10HashTraitsIS3_EENS8_IS6_EENS_18PartitionAllocatorEEEEEEEPKcv, i64 0, i64 0)) #8
  %109 = lshr i64 %107, 5
  %110 = ptrtoint i8* %108 to i64
  %111 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %112 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %111, align 8
  %113 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %114 = load i32, i32* %113, align 4
  %115 = zext i32 %114 to i64
  %116 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %112, i64 %115
  %117 = icmp eq i32 %114, 0
  br i1 %117, label %118, label %120

118:                                              ; preds = %105
  %119 = bitcast %"struct.std::__1::pair"* %112 to i8*
  br label %214

120:                                              ; preds = %105
  %121 = bitcast i8* %108 to %"struct.std::__1::pair"*
  br label %122

122:                                              ; preds = %120, %207
  %123 = phi %"struct.std::__1::pair"* [ %209, %207 ], [ %112, %120 ]
  %124 = phi %"struct.std::__1::pair"* [ %208, %207 ], [ %121, %120 ]
  %125 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %123, i64 0, i32 0, i32 0, i32 0
  %126 = bitcast %"struct.std::__1::pair"* %123 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"struct.std::__1::pair"* %124 to i64*
  store i64 %127, i64* %128, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %125, align 8
  %129 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %124, i64 0, i32 1
  %130 = bitcast %"class.WTF::HashMap"* %129 to i8*
  %131 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %123, i64 0, i32 1
  %132 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %124, i64 0, i32 1, i32 0, i32 1
  %133 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %124, i64 0, i32 1, i32 0, i32 2
  %134 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %124, i64 0, i32 1, i32 0, i32 3
  %135 = bitcast %"class.WTF::HashMap"* %131 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %130, i8 0, i64 20, i1 false) #8
  %136 = load i64, i64* %135, align 8
  %137 = bitcast %"class.WTF::HashMap"* %129 to i64*
  store atomic i64 0, i64* %135 monotonic, align 8
  store atomic i64 %136, i64* %137 monotonic, align 8
  %138 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %123, i64 0, i32 1, i32 0, i32 1
  %139 = load i32, i32* %132, align 4
  %140 = load i32, i32* %138, align 4
  store i32 %140, i32* %132, align 4
  store i32 %139, i32* %138, align 4
  %141 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %123, i64 0, i32 1, i32 0, i32 2
  %142 = load i32, i32* %133, align 4
  %143 = load i32, i32* %141, align 4
  store i32 %143, i32* %133, align 4
  store i32 %142, i32* %141, align 4
  %144 = load i32, i32* %134, align 8
  %145 = and i32 %144, 2147483647
  %146 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %123, i64 0, i32 1, i32 0, i32 3
  %147 = load i32, i32* %146, align 8
  %148 = and i32 %147, 2147483647
  %149 = and i32 %144, -2147483648
  %150 = or i32 %148, %149
  store i32 %150, i32* %134, align 8
  %151 = load i32, i32* %146, align 8
  %152 = and i32 %151, -2147483648
  %153 = or i32 %152, %145
  store i32 %153, i32* %146, align 8
  %154 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %123, i64 0, i32 1, i32 0, i32 0
  %155 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %154, align 8
  %156 = icmp eq %"struct.WTF::KeyValuePair"* %155, null
  br i1 %156, label %191, label %157, !prof !12

157:                                              ; preds = %122
  %158 = load i32, i32* %138, align 8
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %189, label %160

160:                                              ; preds = %157
  %161 = zext i32 %158 to i64
  br label %162

162:                                              ; preds = %186, %160
  %163 = phi i64 [ 0, %160 ], [ %187, %186 ]
  %164 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %155, i64 %163
  %165 = bitcast %"struct.WTF::KeyValuePair"* %164 to i8**
  %166 = load i8*, i8** %165, align 8
  %167 = icmp eq i8* %166, inttoptr (i64 -1 to i8*)
  br i1 %167, label %186, label %168

168:                                              ; preds = %162
  %169 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %155, i64 %163, i32 1
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %169) #8
  %170 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %164, i64 0, i32 0, i32 0, i32 0
  %171 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %170, align 8
  %172 = icmp eq %"class.WTF::StringImpl"* %171, null
  br i1 %172, label %186, label %173

173:                                              ; preds = %168
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %171, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %175 = load atomic i32, i32* %174 monotonic, align 4
  %176 = and i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %171, i64 0, i32 0
  %179 = load i32, i32* %178, align 4
  br i1 %177, label %180, label %182

180:                                              ; preds = %173
  %181 = add i32 %179, -1
  store i32 %181, i32* %178, align 4
  br label %182

182:                                              ; preds = %180, %173
  %183 = phi i32 [ %181, %180 ], [ %179, %173 ]
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %186

185:                                              ; preds = %182
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %171) #8
  br label %186

186:                                              ; preds = %185, %182, %168, %162
  %187 = add nuw nsw i64 %163, 1
  %188 = icmp eq i64 %187, %161
  br i1 %188, label %189, label %162

189:                                              ; preds = %186, %157
  %190 = bitcast %"struct.WTF::KeyValuePair"* %155 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %190) #8
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %154, align 8
  br label %191

191:                                              ; preds = %189, %122
  %192 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %125, align 8
  %193 = icmp eq %"class.WTF::StringImpl"* %192, null
  br i1 %193, label %207, label %194

194:                                              ; preds = %191
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %192, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load atomic i32, i32* %195 monotonic, align 4
  %197 = and i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %192, i64 0, i32 0
  %200 = load i32, i32* %199, align 4
  br i1 %198, label %201, label %203

201:                                              ; preds = %194
  %202 = add i32 %200, -1
  store i32 %202, i32* %199, align 4
  br label %203

203:                                              ; preds = %201, %194
  %204 = phi i32 [ %202, %201 ], [ %200, %194 ]
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %207

206:                                              ; preds = %203
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %192) #8
  br label %207

207:                                              ; preds = %191, %203, %206
  %208 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %124, i64 1
  %209 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %123, i64 1
  %210 = icmp eq %"struct.std::__1::pair"* %209, %116
  br i1 %210, label %211, label %122

211:                                              ; preds = %207
  %212 = bitcast %"class.WTF::Vector"* %0 to i8**
  %213 = load i8*, i8** %212, align 8
  br label %214

214:                                              ; preds = %118, %211
  %215 = phi i8* [ %213, %211 ], [ %119, %118 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %215) #8
  %216 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %110, i64* %216 monotonic, align 8
  %217 = trunc i64 %109 to i32
  %218 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %217, i32* %218, align 8
  br label %219

219:                                              ; preds = %214, %103
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairINS_6StringENS_7HashMapIS4_N5blink4KURLENS_10StringHashENS_10HashTraitsIS4_EENS9_IS7_EES0_EEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 67043328
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 67043328) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.43, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.44, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 5
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #8
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNSt3__16__sortIRZN5blink9ImportMap5ParseERKNS1_9ModulatorERKN3WTF6StringERKNS1_4KURLERNS1_13ConsoleLoggerEPNS1_11ScriptValueEE3$_0PNS_4pairIS7_NS6_7HashMapIS7_SA_NS6_10StringHashENS6_10HashTraitsIS7_EENSM_ISA_EENS6_18PartitionAllocatorEEEEEEEvT0_ST_T_"(%"struct.std::__1::pair"*, %"struct.std::__1::pair"*) unnamed_addr #0 {
  %3 = alloca %"struct.std::__1::pair", align 8
  br label %4

4:                                                ; preds = %377, %2
  %5 = phi %"struct.std::__1::pair"* [ %1, %2 ], [ %355, %377 ]
  %6 = phi %"struct.std::__1::pair"* [ %0, %2 ], [ %16, %377 ]
  %7 = ptrtoint %"struct.std::__1::pair"* %5 to i64
  %8 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 -1
  %9 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %8, i64 0, i32 0
  %10 = bitcast %"struct.std::__1::pair"* %8 to i64*
  %11 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 -1, i32 1
  %12 = ptrtoint %"struct.std::__1::pair"* %5 to i64
  br label %13

13:                                               ; preds = %386, %4
  %14 = phi %"struct.std::__1::pair"* [ %6, %4 ], [ %387, %386 ]
  br label %15

15:                                               ; preds = %298, %13
  %16 = phi %"struct.std::__1::pair"* [ %14, %13 ], [ %289, %298 ]
  %17 = ptrtoint %"struct.std::__1::pair"* %16 to i64
  %18 = sub i64 %7, %17
  %19 = ashr exact i64 %18, 5
  switch i64 %19, label %47 [
    i64 0, label %390
    i64 1, label %390
    i64 2, label %20
    i64 3, label %32
    i64 4, label %36
    i64 5, label %41
  ]

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 -1
  %22 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 0, i32 0
  %23 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %21, i64 0, i32 0
  %24 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %22, %"class.WTF::String"* dereferenceable(8) %23) #8
  br i1 %24, label %25, label %390

25:                                               ; preds = %20
  %26 = bitcast %"struct.std::__1::pair"* %16 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"struct.std::__1::pair"* %21 to i64*
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %26, align 8
  store i64 %27, i64* %28, align 8
  %30 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 0, i32 1
  %31 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 -1, i32 1
  tail call void @_ZNSt3__14swapIN3WTF7HashMapINS1_6StringEN5blink4KURLENS1_10StringHashENS1_10HashTraitsIS3_EENS7_IS5_EENS1_18PartitionAllocatorEEEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableISD_EE5valueEvE4typeERSD_SG_(%"class.WTF::HashMap"* dereferenceable(24) %30, %"class.WTF::HashMap"* dereferenceable(24) %31) #8
  br label %390

32:                                               ; preds = %15
  %33 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 1
  %34 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 -1
  %35 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN5blink9ImportMap5ParseERKNS1_9ModulatorERKN3WTF6StringERKNS1_4KURLERNS1_13ConsoleLoggerEPNS1_11ScriptValueEE3$_0PNS_4pairIS7_NS6_7HashMapIS7_SA_NS6_10StringHashENS6_10HashTraitsIS7_EENSM_ISA_EENS6_18PartitionAllocatorEEEEEEEjT0_ST_ST_T_"(%"struct.std::__1::pair"* %16, %"struct.std::__1::pair"* %33, %"struct.std::__1::pair"* %34)
  br label %390

36:                                               ; preds = %15
  %37 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 1
  %38 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 2
  %39 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 -1
  %40 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN5blink9ImportMap5ParseERKNS1_9ModulatorERKN3WTF6StringERKNS1_4KURLERNS1_13ConsoleLoggerEPNS1_11ScriptValueEE3$_0PNS_4pairIS7_NS6_7HashMapIS7_SA_NS6_10StringHashENS6_10HashTraitsIS7_EENSM_ISA_EENS6_18PartitionAllocatorEEEEEEEjT0_ST_ST_ST_T_"(%"struct.std::__1::pair"* %16, %"struct.std::__1::pair"* %37, %"struct.std::__1::pair"* %38, %"struct.std::__1::pair"* %39)
  br label %390

41:                                               ; preds = %15
  %42 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 1
  %43 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 2
  %44 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 3
  %45 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 -1
  %46 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN5blink9ImportMap5ParseERKNS1_9ModulatorERKN3WTF6StringERKNS1_4KURLERNS1_13ConsoleLoggerEPNS1_11ScriptValueEE3$_0PNS_4pairIS7_NS6_7HashMapIS7_SA_NS6_10StringHashENS6_10HashTraitsIS7_EENSM_ISA_EENS6_18PartitionAllocatorEEEEEEEjT0_ST_ST_ST_ST_T_"(%"struct.std::__1::pair"* %16, %"struct.std::__1::pair"* %42, %"struct.std::__1::pair"* %43, %"struct.std::__1::pair"* %44, %"struct.std::__1::pair"* %45)
  br label %390

47:                                               ; preds = %15
  %48 = icmp slt i64 %18, 224
  br i1 %48, label %49, label %244

49:                                               ; preds = %47
  %50 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 2
  %51 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 1
  %52 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN5blink9ImportMap5ParseERKNS1_9ModulatorERKN3WTF6StringERKNS1_4KURLERNS1_13ConsoleLoggerEPNS1_11ScriptValueEE3$_0PNS_4pairIS7_NS6_7HashMapIS7_SA_NS6_10StringHashENS6_10HashTraitsIS7_EENSM_ISA_EENS6_18PartitionAllocatorEEEEEEEjT0_ST_ST_T_"(%"struct.std::__1::pair"* %16, %"struct.std::__1::pair"* %51, %"struct.std::__1::pair"* %50) #8
  %53 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 3
  %54 = icmp eq %"struct.std::__1::pair"* %53, %5
  br i1 %54, label %390, label %55

55:                                               ; preds = %49
  %56 = bitcast %"struct.std::__1::pair"* %3 to i8*
  %57 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 0, i32 0, i32 0
  %58 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 1, i32 0, i32 0
  %59 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 1, i32 0, i32 1
  %60 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 1, i32 0, i32 2
  %61 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 1, i32 0, i32 3
  %62 = bitcast %"struct.std::__1::pair"* %3 to i64*
  %63 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 1
  %64 = bitcast %"class.WTF::HashMap"* %63 to i8*
  %65 = bitcast %"class.WTF::HashMap"* %63 to i64*
  %66 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 0
  br label %67

67:                                               ; preds = %241, %55
  %68 = phi %"struct.std::__1::pair"* [ %53, %55 ], [ %242, %241 ]
  %69 = phi %"struct.std::__1::pair"* [ %50, %55 ], [ %68, %241 ]
  %70 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %69, i64 0, i32 0
  %71 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %68, i64 0, i32 0
  %72 = call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %70, %"class.WTF::String"* dereferenceable(8) %71) #8
  br i1 %72, label %73, label %241

73:                                               ; preds = %67
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %56) #8
  %74 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %68, i64 0, i32 0, i32 0, i32 0
  %75 = bitcast %"struct.std::__1::pair"* %68 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 -86, i64 32, i1 false) #8
  %76 = load i64, i64* %75, align 8
  store i64 %76, i64* %62, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %74, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %68, i64 0, i32 1
  %78 = bitcast %"class.WTF::HashMap"* %77 to i64*
  call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 20, i1 false) #8
  %79 = load i64, i64* %78, align 8
  store atomic i64 0, i64* %78 monotonic, align 8
  store atomic i64 %79, i64* %65 monotonic, align 8
  %80 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %68, i64 0, i32 1, i32 0, i32 1
  %81 = load i32, i32* %59, align 8
  %82 = load i32, i32* %80, align 4
  store i32 %82, i32* %59, align 8
  store i32 %81, i32* %80, align 4
  %83 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %68, i64 0, i32 1, i32 0, i32 2
  %84 = load i32, i32* %60, align 4
  %85 = load i32, i32* %83, align 4
  store i32 %85, i32* %60, align 4
  store i32 %84, i32* %83, align 4
  %86 = load i32, i32* %61, align 8
  %87 = and i32 %86, 2147483647
  %88 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %68, i64 0, i32 1, i32 0, i32 3
  %89 = load i32, i32* %88, align 8
  %90 = and i32 %89, 2147483647
  %91 = and i32 %86, -2147483648
  %92 = or i32 %90, %91
  store i32 %92, i32* %61, align 8
  %93 = and i32 %89, -2147483648
  %94 = or i32 %93, %87
  store i32 %94, i32* %88, align 8
  br label %95

95:                                               ; preds = %145, %73
  %96 = phi %"struct.std::__1::pair"* [ %68, %73 ], [ %97, %145 ]
  %97 = phi %"struct.std::__1::pair"* [ %69, %73 ], [ %146, %145 ]
  %98 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %97, i64 0, i32 0, i32 0, i32 0
  %99 = bitcast %"struct.std::__1::pair"* %97 to i64*
  %100 = load i64, i64* %99, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %98, align 8
  %101 = bitcast %"struct.std::__1::pair"* %96 to i64*
  %102 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %96, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  store i64 %100, i64* %101, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %95
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #8
  br label %118

118:                                              ; preds = %117, %114, %95
  %119 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %97, i64 0, i32 1
  %120 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %96, i64 0, i32 1
  %121 = bitcast %"class.WTF::HashMap"* %119 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = bitcast %"class.WTF::HashMap"* %120 to i64*
  %124 = load i64, i64* %123, align 8
  store atomic i64 %124, i64* %121 monotonic, align 8
  store atomic i64 %122, i64* %123 monotonic, align 8
  %125 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %96, i64 0, i32 1, i32 0, i32 1
  %126 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %97, i64 0, i32 1, i32 0, i32 1
  %127 = load i32, i32* %125, align 4
  %128 = load i32, i32* %126, align 4
  store i32 %128, i32* %125, align 4
  store i32 %127, i32* %126, align 4
  %129 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %96, i64 0, i32 1, i32 0, i32 2
  %130 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %97, i64 0, i32 1, i32 0, i32 2
  %131 = load i32, i32* %129, align 4
  %132 = load i32, i32* %130, align 4
  store i32 %132, i32* %129, align 4
  store i32 %131, i32* %130, align 4
  %133 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %96, i64 0, i32 1, i32 0, i32 3
  %134 = load i32, i32* %133, align 8
  %135 = and i32 %134, 2147483647
  %136 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %97, i64 0, i32 1, i32 0, i32 3
  %137 = load i32, i32* %136, align 8
  %138 = and i32 %137, 2147483647
  %139 = and i32 %134, -2147483648
  %140 = or i32 %138, %139
  store i32 %140, i32* %133, align 8
  %141 = load i32, i32* %136, align 8
  %142 = and i32 %141, -2147483648
  %143 = or i32 %142, %135
  store i32 %143, i32* %136, align 8
  %144 = icmp eq %"struct.std::__1::pair"* %97, %16
  br i1 %144, label %149, label %145

145:                                              ; preds = %118
  %146 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %97, i64 -1
  %147 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %146, i64 0, i32 0
  %148 = call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %147, %"class.WTF::String"* nonnull dereferenceable(8) %66) #8
  br i1 %148, label %95, label %149

149:                                              ; preds = %145, %118
  %150 = phi %"struct.std::__1::pair"* [ %16, %118 ], [ %97, %145 ]
  %151 = bitcast %"struct.std::__1::pair"* %150 to i64*
  %152 = bitcast %"class.WTF::HashMap"* %119 to i64*
  %153 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %150, i64 0, i32 0, i32 0, i32 0
  %154 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %150, i64 0, i32 1, i32 0, i32 1
  %155 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %150, i64 0, i32 1, i32 0, i32 2
  %156 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %150, i64 0, i32 1, i32 0, i32 3
  %157 = load i64, i64* %62, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %57, align 8
  %158 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %153, align 8
  store i64 %157, i64* %151, align 8
  %159 = icmp eq %"class.WTF::StringImpl"* %158, null
  br i1 %159, label %173, label %160

160:                                              ; preds = %149
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %158, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = load atomic i32, i32* %161 monotonic, align 4
  %163 = and i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %158, i64 0, i32 0
  %166 = load i32, i32* %165, align 4
  br i1 %164, label %167, label %169

167:                                              ; preds = %160
  %168 = add i32 %166, -1
  store i32 %168, i32* %165, align 4
  br label %169

169:                                              ; preds = %167, %160
  %170 = phi i32 [ %168, %167 ], [ %166, %160 ]
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %173

172:                                              ; preds = %169
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %158) #8
  br label %173

173:                                              ; preds = %172, %169, %149
  %174 = load i64, i64* %65, align 8
  %175 = load i64, i64* %152, align 8
  store atomic i64 %175, i64* %65 monotonic, align 8
  store atomic i64 %174, i64* %152 monotonic, align 8
  %176 = load i32, i32* %154, align 4
  %177 = load i32, i32* %59, align 8
  store i32 %177, i32* %154, align 4
  store i32 %176, i32* %59, align 8
  %178 = load i32, i32* %155, align 4
  %179 = load i32, i32* %60, align 4
  store i32 %179, i32* %155, align 4
  store i32 %178, i32* %60, align 4
  %180 = load i32, i32* %156, align 8
  %181 = and i32 %180, 2147483647
  %182 = load i32, i32* %61, align 8
  %183 = and i32 %182, 2147483647
  %184 = and i32 %180, -2147483648
  %185 = or i32 %183, %184
  store i32 %185, i32* %156, align 8
  %186 = load i32, i32* %61, align 8
  %187 = and i32 %186, -2147483648
  %188 = or i32 %187, %181
  store i32 %188, i32* %61, align 8
  %189 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %58, align 8
  %190 = icmp eq %"struct.WTF::KeyValuePair"* %189, null
  br i1 %190, label %224, label %191, !prof !12

191:                                              ; preds = %173
  %192 = icmp eq i32 %176, 0
  br i1 %192, label %222, label %193

193:                                              ; preds = %191
  %194 = zext i32 %176 to i64
  br label %195

195:                                              ; preds = %219, %193
  %196 = phi i64 [ 0, %193 ], [ %220, %219 ]
  %197 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %189, i64 %196
  %198 = bitcast %"struct.WTF::KeyValuePair"* %197 to i8**
  %199 = load i8*, i8** %198, align 8
  %200 = icmp eq i8* %199, inttoptr (i64 -1 to i8*)
  br i1 %200, label %219, label %201

201:                                              ; preds = %195
  %202 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %189, i64 %196, i32 1
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %202) #8
  %203 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %197, i64 0, i32 0, i32 0, i32 0
  %204 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %203, align 8
  %205 = icmp eq %"class.WTF::StringImpl"* %204, null
  br i1 %205, label %219, label %206

206:                                              ; preds = %201
  %207 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %208 = load atomic i32, i32* %207 monotonic, align 4
  %209 = and i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 0
  %212 = load i32, i32* %211, align 4
  br i1 %210, label %213, label %215

213:                                              ; preds = %206
  %214 = add i32 %212, -1
  store i32 %214, i32* %211, align 4
  br label %215

215:                                              ; preds = %213, %206
  %216 = phi i32 [ %214, %213 ], [ %212, %206 ]
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %218, label %219

218:                                              ; preds = %215
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %204) #8
  br label %219

219:                                              ; preds = %218, %215, %201, %195
  %220 = add nuw nsw i64 %196, 1
  %221 = icmp eq i64 %220, %194
  br i1 %221, label %222, label %195

222:                                              ; preds = %219, %191
  %223 = bitcast %"struct.WTF::KeyValuePair"* %189 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %223) #8
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %58, align 8
  br label %224

224:                                              ; preds = %222, %173
  %225 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %226 = icmp eq %"class.WTF::StringImpl"* %225, null
  br i1 %226, label %240, label %227

227:                                              ; preds = %224
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %225, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %229 = load atomic i32, i32* %228 monotonic, align 4
  %230 = and i32 %229, 2
  %231 = icmp eq i32 %230, 0
  %232 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %225, i64 0, i32 0
  %233 = load i32, i32* %232, align 4
  br i1 %231, label %234, label %236

234:                                              ; preds = %227
  %235 = add i32 %233, -1
  store i32 %235, i32* %232, align 4
  br label %236

236:                                              ; preds = %234, %227
  %237 = phi i32 [ %235, %234 ], [ %233, %227 ]
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %239, label %240

239:                                              ; preds = %236
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %225) #8
  br label %240

240:                                              ; preds = %239, %236, %224
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %56) #8
  br label %241

241:                                              ; preds = %240, %67
  %242 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %68, i64 1
  %243 = icmp eq %"struct.std::__1::pair"* %242, %5
  br i1 %243, label %390, label %67

244:                                              ; preds = %47
  %245 = icmp sgt i64 %18, 31968
  %246 = sdiv i64 %19, 2
  %247 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 %246
  br i1 %245, label %248, label %253

248:                                              ; preds = %244
  %249 = sdiv i64 %19, 4
  %250 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 %249
  %251 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %247, i64 %249
  %252 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN5blink9ImportMap5ParseERKNS1_9ModulatorERKN3WTF6StringERKNS1_4KURLERNS1_13ConsoleLoggerEPNS1_11ScriptValueEE3$_0PNS_4pairIS7_NS6_7HashMapIS7_SA_NS6_10StringHashENS6_10HashTraitsIS7_EENSM_ISA_EENS6_18PartitionAllocatorEEEEEEEjT0_ST_ST_ST_ST_T_"(%"struct.std::__1::pair"* %16, %"struct.std::__1::pair"* %250, %"struct.std::__1::pair"* %247, %"struct.std::__1::pair"* %251, %"struct.std::__1::pair"* %8)
  br label %255

253:                                              ; preds = %244
  %254 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN5blink9ImportMap5ParseERKNS1_9ModulatorERKN3WTF6StringERKNS1_4KURLERNS1_13ConsoleLoggerEPNS1_11ScriptValueEE3$_0PNS_4pairIS7_NS6_7HashMapIS7_SA_NS6_10StringHashENS6_10HashTraitsIS7_EENSM_ISA_EENS6_18PartitionAllocatorEEEEEEEjT0_ST_ST_T_"(%"struct.std::__1::pair"* %16, %"struct.std::__1::pair"* %247, %"struct.std::__1::pair"* %8)
  br label %255

255:                                              ; preds = %253, %248
  %256 = phi i32 [ %252, %248 ], [ %254, %253 ]
  %257 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %247, i64 0, i32 0
  %258 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 0, i32 0
  %259 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %257, %"class.WTF::String"* dereferenceable(8) %258) #8
  br i1 %259, label %318, label %260

260:                                              ; preds = %255, %307
  %261 = phi %"struct.std::__1::pair"* [ %262, %307 ], [ %8, %255 ]
  %262 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %261, i64 -1
  %263 = icmp eq %"struct.std::__1::pair"* %16, %262
  br i1 %263, label %264, label %307

264:                                              ; preds = %260
  %265 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 1
  %266 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %9, %"class.WTF::String"* dereferenceable(8) %258) #8
  br i1 %266, label %282, label %267

267:                                              ; preds = %264
  %268 = icmp eq %"struct.std::__1::pair"* %265, %8
  br i1 %268, label %390, label %269

269:                                              ; preds = %267, %279
  %270 = phi %"struct.std::__1::pair"* [ %280, %279 ], [ %265, %267 ]
  %271 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %270, i64 0, i32 0
  %272 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %271, %"class.WTF::String"* dereferenceable(8) %258) #8
  br i1 %272, label %273, label %279

273:                                              ; preds = %269
  %274 = bitcast %"struct.std::__1::pair"* %270 to i64*
  %275 = load i64, i64* %274, align 8
  %276 = load i64, i64* %10, align 8
  store i64 %276, i64* %274, align 8
  store i64 %275, i64* %10, align 8
  %277 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %270, i64 0, i32 1
  tail call void @_ZNSt3__14swapIN3WTF7HashMapINS1_6StringEN5blink4KURLENS1_10StringHashENS1_10HashTraitsIS3_EENS7_IS5_EENS1_18PartitionAllocatorEEEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableISD_EE5valueEvE4typeERSD_SG_(%"class.WTF::HashMap"* dereferenceable(24) %277, %"class.WTF::HashMap"* dereferenceable(24) %11) #8
  %278 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %270, i64 1
  br label %282

279:                                              ; preds = %269
  %280 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %270, i64 1
  %281 = icmp eq %"struct.std::__1::pair"* %280, %8
  br i1 %281, label %390, label %269

282:                                              ; preds = %273, %264
  %283 = phi %"struct.std::__1::pair"* [ %265, %264 ], [ %278, %273 ]
  %284 = icmp eq %"struct.std::__1::pair"* %283, %8
  br i1 %284, label %390, label %285

285:                                              ; preds = %282, %300
  %286 = phi %"struct.std::__1::pair"* [ %292, %300 ], [ %283, %282 ]
  %287 = phi %"struct.std::__1::pair"* [ %295, %300 ], [ %8, %282 ]
  br label %288

288:                                              ; preds = %288, %285
  %289 = phi %"struct.std::__1::pair"* [ %286, %285 ], [ %292, %288 ]
  %290 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %289, i64 0, i32 0
  %291 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %290, %"class.WTF::String"* dereferenceable(8) %258) #8
  %292 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %289, i64 1
  br i1 %291, label %293, label %288

293:                                              ; preds = %288, %293
  %294 = phi %"struct.std::__1::pair"* [ %295, %293 ], [ %287, %288 ]
  %295 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %294, i64 -1
  %296 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %295, i64 0, i32 0
  %297 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %296, %"class.WTF::String"* dereferenceable(8) %258) #8
  br i1 %297, label %293, label %298

298:                                              ; preds = %293
  %299 = icmp ult %"struct.std::__1::pair"* %289, %295
  br i1 %299, label %300, label %15

300:                                              ; preds = %298
  %301 = bitcast %"struct.std::__1::pair"* %289 to i64*
  %302 = load i64, i64* %301, align 8
  %303 = bitcast %"struct.std::__1::pair"* %295 to i64*
  %304 = load i64, i64* %303, align 8
  store i64 %304, i64* %301, align 8
  store i64 %302, i64* %303, align 8
  %305 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %289, i64 0, i32 1
  %306 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %294, i64 -1, i32 1
  tail call void @_ZNSt3__14swapIN3WTF7HashMapINS1_6StringEN5blink4KURLENS1_10StringHashENS1_10HashTraitsIS3_EENS7_IS5_EENS1_18PartitionAllocatorEEEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableISD_EE5valueEvE4typeERSD_SG_(%"class.WTF::HashMap"* dereferenceable(24) %305, %"class.WTF::HashMap"* dereferenceable(24) %306) #8
  br label %285

307:                                              ; preds = %260
  %308 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %262, i64 0, i32 0
  %309 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %257, %"class.WTF::String"* dereferenceable(8) %308) #8
  br i1 %309, label %310, label %260

310:                                              ; preds = %307
  %311 = bitcast %"struct.std::__1::pair"* %16 to i64*
  %312 = load i64, i64* %311, align 8
  %313 = bitcast %"struct.std::__1::pair"* %262 to i64*
  %314 = load i64, i64* %313, align 8
  store i64 %314, i64* %311, align 8
  store i64 %312, i64* %313, align 8
  %315 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 0, i32 1
  %316 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %261, i64 -1, i32 1
  tail call void @_ZNSt3__14swapIN3WTF7HashMapINS1_6StringEN5blink4KURLENS1_10StringHashENS1_10HashTraitsIS3_EENS7_IS5_EENS1_18PartitionAllocatorEEEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableISD_EE5valueEvE4typeERSD_SG_(%"class.WTF::HashMap"* dereferenceable(24) %315, %"class.WTF::HashMap"* dereferenceable(24) %316) #8
  %317 = add i32 %256, 1
  br label %318

318:                                              ; preds = %255, %310
  %319 = phi i32 [ %317, %310 ], [ %256, %255 ]
  %320 = phi %"struct.std::__1::pair"* [ %262, %310 ], [ %8, %255 ]
  %321 = ptrtoint %"struct.std::__1::pair"* %16 to i64
  %322 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 1
  %323 = icmp ult %"struct.std::__1::pair"* %322, %320
  br i1 %323, label %324, label %352

324:                                              ; preds = %318, %342
  %325 = phi %"struct.std::__1::pair"* [ %351, %342 ], [ %247, %318 ]
  %326 = phi i32 [ %349, %342 ], [ %319, %318 ]
  %327 = phi %"struct.std::__1::pair"* [ %334, %342 ], [ %322, %318 ]
  %328 = phi %"struct.std::__1::pair"* [ %337, %342 ], [ %320, %318 ]
  %329 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %325, i64 0, i32 0
  br label %330

330:                                              ; preds = %330, %324
  %331 = phi %"struct.std::__1::pair"* [ %327, %324 ], [ %334, %330 ]
  %332 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %331, i64 0, i32 0
  %333 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %329, %"class.WTF::String"* dereferenceable(8) %332) #8
  %334 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %331, i64 1
  br i1 %333, label %330, label %335

335:                                              ; preds = %330, %335
  %336 = phi %"struct.std::__1::pair"* [ %337, %335 ], [ %328, %330 ]
  %337 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %336, i64 -1
  %338 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %337, i64 0, i32 0
  %339 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %329, %"class.WTF::String"* dereferenceable(8) %338) #8
  br i1 %339, label %340, label %335

340:                                              ; preds = %335
  %341 = icmp ugt %"struct.std::__1::pair"* %331, %337
  br i1 %341, label %352, label %342

342:                                              ; preds = %340
  %343 = bitcast %"struct.std::__1::pair"* %331 to i64*
  %344 = load i64, i64* %343, align 8
  %345 = bitcast %"struct.std::__1::pair"* %337 to i64*
  %346 = load i64, i64* %345, align 8
  store i64 %346, i64* %343, align 8
  store i64 %344, i64* %345, align 8
  %347 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %331, i64 0, i32 1
  %348 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %336, i64 -1, i32 1
  tail call void @_ZNSt3__14swapIN3WTF7HashMapINS1_6StringEN5blink4KURLENS1_10StringHashENS1_10HashTraitsIS3_EENS7_IS5_EENS1_18PartitionAllocatorEEEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableISD_EE5valueEvE4typeERSD_SG_(%"class.WTF::HashMap"* dereferenceable(24) %347, %"class.WTF::HashMap"* dereferenceable(24) %348) #8
  %349 = add i32 %326, 1
  %350 = icmp eq %"struct.std::__1::pair"* %325, %331
  %351 = select i1 %350, %"struct.std::__1::pair"* %337, %"struct.std::__1::pair"* %325
  br label %324

352:                                              ; preds = %340, %318
  %353 = phi %"struct.std::__1::pair"* [ %247, %318 ], [ %325, %340 ]
  %354 = phi i32 [ %319, %318 ], [ %326, %340 ]
  %355 = phi %"struct.std::__1::pair"* [ %322, %318 ], [ %331, %340 ]
  %356 = icmp eq %"struct.std::__1::pair"* %355, %353
  br i1 %356, label %369, label %357

357:                                              ; preds = %352
  %358 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %355, i64 0, i32 0
  %359 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %353, i64 0, i32 0
  %360 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %358, %"class.WTF::String"* dereferenceable(8) %359) #8
  br i1 %360, label %361, label %369

361:                                              ; preds = %357
  %362 = bitcast %"struct.std::__1::pair"* %355 to i64*
  %363 = load i64, i64* %362, align 8
  %364 = bitcast %"struct.std::__1::pair"* %353 to i64*
  %365 = load i64, i64* %364, align 8
  store i64 %365, i64* %362, align 8
  store i64 %363, i64* %364, align 8
  %366 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %355, i64 0, i32 1
  %367 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %353, i64 0, i32 1
  tail call void @_ZNSt3__14swapIN3WTF7HashMapINS1_6StringEN5blink4KURLENS1_10StringHashENS1_10HashTraitsIS3_EENS7_IS5_EENS1_18PartitionAllocatorEEEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableISD_EE5valueEvE4typeERSD_SG_(%"class.WTF::HashMap"* dereferenceable(24) %366, %"class.WTF::HashMap"* dereferenceable(24) %367) #8
  %368 = add i32 %354, 1
  br label %369

369:                                              ; preds = %352, %361, %357
  %370 = phi i32 [ %368, %361 ], [ %354, %357 ], [ %354, %352 ]
  %371 = icmp eq i32 %370, 0
  br i1 %371, label %372, label %379

372:                                              ; preds = %369
  %373 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN5blink9ImportMap5ParseERKNS1_9ModulatorERKN3WTF6StringERKNS1_4KURLERNS1_13ConsoleLoggerEPNS1_11ScriptValueEE3$_0PNS_4pairIS7_NS6_7HashMapIS7_SA_NS6_10StringHashENS6_10HashTraitsIS7_EENSM_ISA_EENS6_18PartitionAllocatorEEEEEEEbT0_ST_T_"(%"struct.std::__1::pair"* %16, %"struct.std::__1::pair"* %355)
  %374 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %355, i64 1
  %375 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN5blink9ImportMap5ParseERKNS1_9ModulatorERKN3WTF6StringERKNS1_4KURLERNS1_13ConsoleLoggerEPNS1_11ScriptValueEE3$_0PNS_4pairIS7_NS6_7HashMapIS7_SA_NS6_10StringHashENS6_10HashTraitsIS7_EENSM_ISA_EENS6_18PartitionAllocatorEEEEEEEbT0_ST_T_"(%"struct.std::__1::pair"* %374, %"struct.std::__1::pair"* %5)
  br i1 %375, label %376, label %378

376:                                              ; preds = %372
  br i1 %373, label %390, label %377

377:                                              ; preds = %376, %388
  br label %4

378:                                              ; preds = %372
  br i1 %373, label %386, label %379

379:                                              ; preds = %378, %369
  %380 = ptrtoint %"struct.std::__1::pair"* %355 to i64
  %381 = sub i64 %380, %321
  %382 = sub i64 %12, %380
  %383 = icmp slt i64 %381, %382
  br i1 %383, label %384, label %388

384:                                              ; preds = %379
  tail call fastcc void @"_ZNSt3__16__sortIRZN5blink9ImportMap5ParseERKNS1_9ModulatorERKN3WTF6StringERKNS1_4KURLERNS1_13ConsoleLoggerEPNS1_11ScriptValueEE3$_0PNS_4pairIS7_NS6_7HashMapIS7_SA_NS6_10StringHashENS6_10HashTraitsIS7_EENSM_ISA_EENS6_18PartitionAllocatorEEEEEEEvT0_ST_T_"(%"struct.std::__1::pair"* %16, %"struct.std::__1::pair"* %355)
  %385 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %355, i64 1
  br label %386

386:                                              ; preds = %384, %378
  %387 = phi %"struct.std::__1::pair"* [ %374, %378 ], [ %385, %384 ]
  br label %13

388:                                              ; preds = %379
  %389 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %355, i64 1
  tail call fastcc void @"_ZNSt3__16__sortIRZN5blink9ImportMap5ParseERKNS1_9ModulatorERKN3WTF6StringERKNS1_4KURLERNS1_13ConsoleLoggerEPNS1_11ScriptValueEE3$_0PNS_4pairIS7_NS6_7HashMapIS7_SA_NS6_10StringHashENS6_10HashTraitsIS7_EENSM_ISA_EENS6_18PartitionAllocatorEEEEEEEvT0_ST_T_"(%"struct.std::__1::pair"* %389, %"struct.std::__1::pair"* %5)
  br label %377

390:                                              ; preds = %376, %282, %15, %15, %267, %279, %241, %49, %20, %25, %32, %36, %41
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort3IRZN5blink9ImportMap5ParseERKNS1_9ModulatorERKN3WTF6StringERKNS1_4KURLERNS1_13ConsoleLoggerEPNS1_11ScriptValueEE3$_0PNS_4pairIS7_NS6_7HashMapIS7_SA_NS6_10StringHashENS6_10HashTraitsIS7_EENSM_ISA_EENS6_18PartitionAllocatorEEEEEEEjT0_ST_ST_T_"(%"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*) unnamed_addr #0 {
  %4 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0
  %6 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %4, %"class.WTF::String"* dereferenceable(8) %5) #8
  %7 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 0
  %8 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %5, %"class.WTF::String"* dereferenceable(8) %7) #8
  br i1 %6, label %23, label %9

9:                                                ; preds = %3
  br i1 %8, label %10, label %42

10:                                               ; preds = %9
  %11 = bitcast %"struct.std::__1::pair"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"struct.std::__1::pair"* %2 to i64*
  %14 = load i64, i64* %13, align 8
  store i64 %14, i64* %11, align 8
  store i64 %12, i64* %13, align 8
  %15 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %16 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1
  tail call void @_ZNSt3__14swapIN3WTF7HashMapINS1_6StringEN5blink4KURLENS1_10StringHashENS1_10HashTraitsIS3_EENS7_IS5_EENS1_18PartitionAllocatorEEEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableISD_EE5valueEvE4typeERSD_SG_(%"class.WTF::HashMap"* dereferenceable(24) %15, %"class.WTF::HashMap"* dereferenceable(24) %16) #8
  %17 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %4, %"class.WTF::String"* dereferenceable(8) %5) #8
  br i1 %17, label %18, label %42

18:                                               ; preds = %10
  %19 = bitcast %"struct.std::__1::pair"* %0 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = load i64, i64* %11, align 8
  store i64 %21, i64* %19, align 8
  store i64 %20, i64* %11, align 8
  %22 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1
  tail call void @_ZNSt3__14swapIN3WTF7HashMapINS1_6StringEN5blink4KURLENS1_10StringHashENS1_10HashTraitsIS3_EENS7_IS5_EENS1_18PartitionAllocatorEEEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableISD_EE5valueEvE4typeERSD_SG_(%"class.WTF::HashMap"* dereferenceable(24) %22, %"class.WTF::HashMap"* dereferenceable(24) %15) #8
  br label %42

23:                                               ; preds = %3
  %24 = bitcast %"struct.std::__1::pair"* %0 to i64*
  %25 = load i64, i64* %24, align 8
  br i1 %8, label %26, label %31

26:                                               ; preds = %23
  %27 = bitcast %"struct.std::__1::pair"* %2 to i64*
  %28 = load i64, i64* %27, align 8
  store i64 %28, i64* %24, align 8
  store i64 %25, i64* %27, align 8
  %29 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1
  %30 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1
  tail call void @_ZNSt3__14swapIN3WTF7HashMapINS1_6StringEN5blink4KURLENS1_10StringHashENS1_10HashTraitsIS3_EENS7_IS5_EENS1_18PartitionAllocatorEEEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableISD_EE5valueEvE4typeERSD_SG_(%"class.WTF::HashMap"* dereferenceable(24) %29, %"class.WTF::HashMap"* dereferenceable(24) %30) #8
  br label %42

31:                                               ; preds = %23
  %32 = bitcast %"struct.std::__1::pair"* %1 to i64*
  %33 = load i64, i64* %32, align 8
  store i64 %33, i64* %24, align 8
  store i64 %25, i64* %32, align 8
  %34 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1
  %35 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  tail call void @_ZNSt3__14swapIN3WTF7HashMapINS1_6StringEN5blink4KURLENS1_10StringHashENS1_10HashTraitsIS3_EENS7_IS5_EENS1_18PartitionAllocatorEEEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableISD_EE5valueEvE4typeERSD_SG_(%"class.WTF::HashMap"* dereferenceable(24) %34, %"class.WTF::HashMap"* dereferenceable(24) %35) #8
  %36 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %5, %"class.WTF::String"* dereferenceable(8) %7) #8
  br i1 %36, label %37, label %42

37:                                               ; preds = %31
  %38 = load i64, i64* %32, align 8
  %39 = bitcast %"struct.std::__1::pair"* %2 to i64*
  %40 = load i64, i64* %39, align 8
  store i64 %40, i64* %32, align 8
  store i64 %38, i64* %39, align 8
  %41 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1
  tail call void @_ZNSt3__14swapIN3WTF7HashMapINS1_6StringEN5blink4KURLENS1_10StringHashENS1_10HashTraitsIS3_EENS7_IS5_EENS1_18PartitionAllocatorEEEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableISD_EE5valueEvE4typeERSD_SG_(%"class.WTF::HashMap"* dereferenceable(24) %35, %"class.WTF::HashMap"* dereferenceable(24) %41) #8
  br label %42

42:                                               ; preds = %31, %37, %10, %18, %9, %26
  %43 = phi i32 [ 1, %26 ], [ 0, %9 ], [ 2, %18 ], [ 1, %10 ], [ 2, %37 ], [ 1, %31 ]
  ret i32 %43
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort4IRZN5blink9ImportMap5ParseERKNS1_9ModulatorERKN3WTF6StringERKNS1_4KURLERNS1_13ConsoleLoggerEPNS1_11ScriptValueEE3$_0PNS_4pairIS7_NS6_7HashMapIS7_SA_NS6_10StringHashENS6_10HashTraitsIS7_EENSM_ISA_EENS6_18PartitionAllocatorEEEEEEEjT0_ST_ST_ST_T_"(%"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*) unnamed_addr #0 {
  %5 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN5blink9ImportMap5ParseERKNS1_9ModulatorERKN3WTF6StringERKNS1_4KURLERNS1_13ConsoleLoggerEPNS1_11ScriptValueEE3$_0PNS_4pairIS7_NS6_7HashMapIS7_SA_NS6_10StringHashENS6_10HashTraitsIS7_EENSM_ISA_EENS6_18PartitionAllocatorEEEEEEEjT0_ST_ST_T_"(%"struct.std::__1::pair"* %0, %"struct.std::__1::pair"* %1, %"struct.std::__1::pair"* %2)
  %6 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 0
  %7 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 0
  %8 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %6, %"class.WTF::String"* dereferenceable(8) %7) #8
  br i1 %8, label %9, label %33

9:                                                ; preds = %4
  %10 = bitcast %"struct.std::__1::pair"* %2 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"struct.std::__1::pair"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  store i64 %13, i64* %10, align 8
  store i64 %11, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1
  %15 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 1
  tail call void @_ZNSt3__14swapIN3WTF7HashMapINS1_6StringEN5blink4KURLENS1_10StringHashENS1_10HashTraitsIS3_EENS7_IS5_EENS1_18PartitionAllocatorEEEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableISD_EE5valueEvE4typeERSD_SG_(%"class.WTF::HashMap"* dereferenceable(24) %14, %"class.WTF::HashMap"* dereferenceable(24) %15) #8
  %16 = add i32 %5, 1
  %17 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0
  %18 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %17, %"class.WTF::String"* dereferenceable(8) %6) #8
  br i1 %18, label %19, label %33

19:                                               ; preds = %9
  %20 = bitcast %"struct.std::__1::pair"* %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = load i64, i64* %10, align 8
  store i64 %22, i64* %20, align 8
  store i64 %21, i64* %10, align 8
  %23 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  tail call void @_ZNSt3__14swapIN3WTF7HashMapINS1_6StringEN5blink4KURLENS1_10StringHashENS1_10HashTraitsIS3_EENS7_IS5_EENS1_18PartitionAllocatorEEEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableISD_EE5valueEvE4typeERSD_SG_(%"class.WTF::HashMap"* dereferenceable(24) %23, %"class.WTF::HashMap"* dereferenceable(24) %14) #8
  %24 = add i32 %5, 2
  %25 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 0
  %26 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %25, %"class.WTF::String"* dereferenceable(8) %17) #8
  br i1 %26, label %27, label %33

27:                                               ; preds = %19
  %28 = bitcast %"struct.std::__1::pair"* %0 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = load i64, i64* %20, align 8
  store i64 %30, i64* %28, align 8
  store i64 %29, i64* %20, align 8
  %31 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1
  tail call void @_ZNSt3__14swapIN3WTF7HashMapINS1_6StringEN5blink4KURLENS1_10StringHashENS1_10HashTraitsIS3_EENS7_IS5_EENS1_18PartitionAllocatorEEEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableISD_EE5valueEvE4typeERSD_SG_(%"class.WTF::HashMap"* dereferenceable(24) %31, %"class.WTF::HashMap"* dereferenceable(24) %23) #8
  %32 = add i32 %5, 3
  br label %33

33:                                               ; preds = %9, %27, %19, %4
  %34 = phi i32 [ %32, %27 ], [ %24, %19 ], [ %16, %9 ], [ %5, %4 ]
  ret i32 %34
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort5IRZN5blink9ImportMap5ParseERKNS1_9ModulatorERKN3WTF6StringERKNS1_4KURLERNS1_13ConsoleLoggerEPNS1_11ScriptValueEE3$_0PNS_4pairIS7_NS6_7HashMapIS7_SA_NS6_10StringHashENS6_10HashTraitsIS7_EENSM_ISA_EENS6_18PartitionAllocatorEEEEEEEjT0_ST_ST_ST_ST_T_"(%"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*) unnamed_addr #0 {
  %6 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN5blink9ImportMap5ParseERKNS1_9ModulatorERKN3WTF6StringERKNS1_4KURLERNS1_13ConsoleLoggerEPNS1_11ScriptValueEE3$_0PNS_4pairIS7_NS6_7HashMapIS7_SA_NS6_10StringHashENS6_10HashTraitsIS7_EENSM_ISA_EENS6_18PartitionAllocatorEEEEEEEjT0_ST_ST_ST_T_"(%"struct.std::__1::pair"* %0, %"struct.std::__1::pair"* %1, %"struct.std::__1::pair"* %2, %"struct.std::__1::pair"* %3)
  %7 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 0
  %8 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 0
  %9 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %7, %"class.WTF::String"* dereferenceable(8) %8) #8
  br i1 %9, label %10, label %42

10:                                               ; preds = %5
  %11 = bitcast %"struct.std::__1::pair"* %3 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"struct.std::__1::pair"* %4 to i64*
  %14 = load i64, i64* %13, align 8
  store i64 %14, i64* %11, align 8
  store i64 %12, i64* %13, align 8
  %15 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 1
  %16 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 1
  tail call void @_ZNSt3__14swapIN3WTF7HashMapINS1_6StringEN5blink4KURLENS1_10StringHashENS1_10HashTraitsIS3_EENS7_IS5_EENS1_18PartitionAllocatorEEEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableISD_EE5valueEvE4typeERSD_SG_(%"class.WTF::HashMap"* dereferenceable(24) %15, %"class.WTF::HashMap"* dereferenceable(24) %16) #8
  %17 = add i32 %6, 1
  %18 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 0
  %19 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %18, %"class.WTF::String"* dereferenceable(8) %7) #8
  br i1 %19, label %20, label %42

20:                                               ; preds = %10
  %21 = bitcast %"struct.std::__1::pair"* %2 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = load i64, i64* %11, align 8
  store i64 %23, i64* %21, align 8
  store i64 %22, i64* %11, align 8
  %24 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1
  tail call void @_ZNSt3__14swapIN3WTF7HashMapINS1_6StringEN5blink4KURLENS1_10StringHashENS1_10HashTraitsIS3_EENS7_IS5_EENS1_18PartitionAllocatorEEEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableISD_EE5valueEvE4typeERSD_SG_(%"class.WTF::HashMap"* dereferenceable(24) %24, %"class.WTF::HashMap"* dereferenceable(24) %15) #8
  %25 = add i32 %6, 2
  %26 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0
  %27 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %26, %"class.WTF::String"* dereferenceable(8) %18) #8
  br i1 %27, label %28, label %42

28:                                               ; preds = %20
  %29 = bitcast %"struct.std::__1::pair"* %1 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = load i64, i64* %21, align 8
  store i64 %31, i64* %29, align 8
  store i64 %30, i64* %21, align 8
  %32 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  tail call void @_ZNSt3__14swapIN3WTF7HashMapINS1_6StringEN5blink4KURLENS1_10StringHashENS1_10HashTraitsIS3_EENS7_IS5_EENS1_18PartitionAllocatorEEEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableISD_EE5valueEvE4typeERSD_SG_(%"class.WTF::HashMap"* dereferenceable(24) %32, %"class.WTF::HashMap"* dereferenceable(24) %24) #8
  %33 = add i32 %6, 3
  %34 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 0
  %35 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %34, %"class.WTF::String"* dereferenceable(8) %26) #8
  br i1 %35, label %36, label %42

36:                                               ; preds = %28
  %37 = bitcast %"struct.std::__1::pair"* %0 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = load i64, i64* %29, align 8
  store i64 %39, i64* %37, align 8
  store i64 %38, i64* %29, align 8
  %40 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1
  tail call void @_ZNSt3__14swapIN3WTF7HashMapINS1_6StringEN5blink4KURLENS1_10StringHashENS1_10HashTraitsIS3_EENS7_IS5_EENS1_18PartitionAllocatorEEEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableISD_EE5valueEvE4typeERSD_SG_(%"class.WTF::HashMap"* dereferenceable(24) %40, %"class.WTF::HashMap"* dereferenceable(24) %32) #8
  %41 = add i32 %6, 4
  br label %42

42:                                               ; preds = %10, %28, %36, %20, %5
  %43 = phi i32 [ %41, %36 ], [ %33, %28 ], [ %25, %20 ], [ %17, %10 ], [ %6, %5 ]
  ret i32 %43
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN5blink9ImportMap5ParseERKNS1_9ModulatorERKN3WTF6StringERKNS1_4KURLERNS1_13ConsoleLoggerEPNS1_11ScriptValueEE3$_0PNS_4pairIS7_NS6_7HashMapIS7_SA_NS6_10StringHashENS6_10HashTraitsIS7_EENSM_ISA_EENS6_18PartitionAllocatorEEEEEEEbT0_ST_T_"(%"struct.std::__1::pair"*, %"struct.std::__1::pair"*) unnamed_addr #0 {
  %3 = alloca %"struct.std::__1::pair", align 8
  %4 = ptrtoint %"struct.std::__1::pair"* %1 to i64
  %5 = ptrtoint %"struct.std::__1::pair"* %0 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 5
  switch i64 %7, label %35 [
    i64 0, label %238
    i64 1, label %238
    i64 2, label %8
    i64 3, label %20
    i64 4, label %24
    i64 5, label %29
  ]

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 -1
  %10 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 0
  %11 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %9, i64 0, i32 0
  %12 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %10, %"class.WTF::String"* dereferenceable(8) %11) #8
  br i1 %12, label %13, label %238

13:                                               ; preds = %8
  %14 = bitcast %"struct.std::__1::pair"* %0 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"struct.std::__1::pair"* %9 to i64*
  %17 = load i64, i64* %16, align 8
  store i64 %17, i64* %14, align 8
  store i64 %15, i64* %16, align 8
  %18 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1
  %19 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 -1, i32 1
  tail call void @_ZNSt3__14swapIN3WTF7HashMapINS1_6StringEN5blink4KURLENS1_10StringHashENS1_10HashTraitsIS3_EENS7_IS5_EENS1_18PartitionAllocatorEEEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableISD_EE5valueEvE4typeERSD_SG_(%"class.WTF::HashMap"* dereferenceable(24) %18, %"class.WTF::HashMap"* dereferenceable(24) %19) #8
  br label %238

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 1
  %22 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 -1
  %23 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN5blink9ImportMap5ParseERKNS1_9ModulatorERKN3WTF6StringERKNS1_4KURLERNS1_13ConsoleLoggerEPNS1_11ScriptValueEE3$_0PNS_4pairIS7_NS6_7HashMapIS7_SA_NS6_10StringHashENS6_10HashTraitsIS7_EENSM_ISA_EENS6_18PartitionAllocatorEEEEEEEjT0_ST_ST_T_"(%"struct.std::__1::pair"* %0, %"struct.std::__1::pair"* %21, %"struct.std::__1::pair"* %22)
  br label %238

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 1
  %26 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 2
  %27 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 -1
  %28 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN5blink9ImportMap5ParseERKNS1_9ModulatorERKN3WTF6StringERKNS1_4KURLERNS1_13ConsoleLoggerEPNS1_11ScriptValueEE3$_0PNS_4pairIS7_NS6_7HashMapIS7_SA_NS6_10StringHashENS6_10HashTraitsIS7_EENSM_ISA_EENS6_18PartitionAllocatorEEEEEEEjT0_ST_ST_ST_T_"(%"struct.std::__1::pair"* %0, %"struct.std::__1::pair"* %25, %"struct.std::__1::pair"* %26, %"struct.std::__1::pair"* %27)
  br label %238

29:                                               ; preds = %2
  %30 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 1
  %31 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 2
  %32 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 3
  %33 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 -1
  %34 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN5blink9ImportMap5ParseERKNS1_9ModulatorERKN3WTF6StringERKNS1_4KURLERNS1_13ConsoleLoggerEPNS1_11ScriptValueEE3$_0PNS_4pairIS7_NS6_7HashMapIS7_SA_NS6_10StringHashENS6_10HashTraitsIS7_EENSM_ISA_EENS6_18PartitionAllocatorEEEEEEEjT0_ST_ST_ST_ST_T_"(%"struct.std::__1::pair"* %0, %"struct.std::__1::pair"* %30, %"struct.std::__1::pair"* %31, %"struct.std::__1::pair"* %32, %"struct.std::__1::pair"* %33)
  br label %238

35:                                               ; preds = %2
  %36 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 2
  %37 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 1
  %38 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN5blink9ImportMap5ParseERKNS1_9ModulatorERKN3WTF6StringERKNS1_4KURLERNS1_13ConsoleLoggerEPNS1_11ScriptValueEE3$_0PNS_4pairIS7_NS6_7HashMapIS7_SA_NS6_10StringHashENS6_10HashTraitsIS7_EENSM_ISA_EENS6_18PartitionAllocatorEEEEEEEjT0_ST_ST_T_"(%"struct.std::__1::pair"* %0, %"struct.std::__1::pair"* %37, %"struct.std::__1::pair"* %36)
  %39 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 3
  %40 = icmp eq %"struct.std::__1::pair"* %39, %1
  br i1 %40, label %238, label %41

41:                                               ; preds = %35
  %42 = bitcast %"struct.std::__1::pair"* %3 to i8*
  %43 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 1, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 1, i32 0, i32 1
  %46 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 1, i32 0, i32 2
  %47 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 1, i32 0, i32 3
  %48 = bitcast %"struct.std::__1::pair"* %3 to i64*
  %49 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 1
  %50 = bitcast %"class.WTF::HashMap"* %49 to i8*
  %51 = bitcast %"class.WTF::HashMap"* %49 to i64*
  %52 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 0
  %53 = bitcast %"struct.std::__1::pair"* %3 to i8*
  br label %54

54:                                               ; preds = %41, %231
  %55 = phi %"struct.std::__1::pair"* [ %39, %41 ], [ %233, %231 ]
  %56 = phi i32 [ 0, %41 ], [ %232, %231 ]
  %57 = phi %"struct.std::__1::pair"* [ %36, %41 ], [ %55, %231 ]
  %58 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %57, i64 0, i32 0
  %59 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 0, i32 0
  %60 = call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %58, %"class.WTF::String"* dereferenceable(8) %59) #8
  br i1 %60, label %61, label %231

61:                                               ; preds = %54
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %42) #8
  %62 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 0, i32 0, i32 0, i32 0
  %63 = bitcast %"struct.std::__1::pair"* %55 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 -86, i64 32, i1 false)
  %64 = load i64, i64* %63, align 8
  store i64 %64, i64* %48, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %62, align 8
  %65 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 0, i32 1
  %66 = bitcast %"class.WTF::HashMap"* %65 to i64*
  call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 20, i1 false) #8
  %67 = load i64, i64* %66, align 8
  store atomic i64 0, i64* %66 monotonic, align 8
  store atomic i64 %67, i64* %51 monotonic, align 8
  %68 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 0, i32 1, i32 0, i32 1
  %69 = load i32, i32* %45, align 8
  %70 = load i32, i32* %68, align 4
  store i32 %70, i32* %45, align 8
  store i32 %69, i32* %68, align 4
  %71 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 0, i32 1, i32 0, i32 2
  %72 = load i32, i32* %46, align 4
  %73 = load i32, i32* %71, align 4
  store i32 %73, i32* %46, align 4
  store i32 %72, i32* %71, align 4
  %74 = load i32, i32* %47, align 8
  %75 = and i32 %74, 2147483647
  %76 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 0, i32 1, i32 0, i32 3
  %77 = load i32, i32* %76, align 8
  %78 = and i32 %77, 2147483647
  %79 = and i32 %74, -2147483648
  %80 = or i32 %78, %79
  store i32 %80, i32* %47, align 8
  %81 = and i32 %77, -2147483648
  %82 = or i32 %81, %75
  store i32 %82, i32* %76, align 8
  br label %83

83:                                               ; preds = %133, %61
  %84 = phi %"struct.std::__1::pair"* [ %55, %61 ], [ %85, %133 ]
  %85 = phi %"struct.std::__1::pair"* [ %57, %61 ], [ %134, %133 ]
  %86 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %85, i64 0, i32 0, i32 0, i32 0
  %87 = bitcast %"struct.std::__1::pair"* %85 to i64*
  %88 = load i64, i64* %87, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %86, align 8
  %89 = bitcast %"struct.std::__1::pair"* %84 to i64*
  %90 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %84, i64 0, i32 0, i32 0, i32 0
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  store i64 %88, i64* %89, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %92, label %106, label %93

93:                                               ; preds = %83
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  br i1 %97, label %100, label %102

100:                                              ; preds = %93
  %101 = add i32 %99, -1
  store i32 %101, i32* %98, align 4
  br label %102

102:                                              ; preds = %100, %93
  %103 = phi i32 [ %101, %100 ], [ %99, %93 ]
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %102
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %91) #8
  br label %106

106:                                              ; preds = %83, %102, %105
  %107 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %85, i64 0, i32 1
  %108 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %84, i64 0, i32 1
  %109 = bitcast %"class.WTF::HashMap"* %107 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = bitcast %"class.WTF::HashMap"* %108 to i64*
  %112 = load i64, i64* %111, align 8
  store atomic i64 %112, i64* %109 monotonic, align 8
  store atomic i64 %110, i64* %111 monotonic, align 8
  %113 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %84, i64 0, i32 1, i32 0, i32 1
  %114 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %85, i64 0, i32 1, i32 0, i32 1
  %115 = load i32, i32* %113, align 4
  %116 = load i32, i32* %114, align 4
  store i32 %116, i32* %113, align 4
  store i32 %115, i32* %114, align 4
  %117 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %84, i64 0, i32 1, i32 0, i32 2
  %118 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %85, i64 0, i32 1, i32 0, i32 2
  %119 = load i32, i32* %117, align 4
  %120 = load i32, i32* %118, align 4
  store i32 %120, i32* %117, align 4
  store i32 %119, i32* %118, align 4
  %121 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %84, i64 0, i32 1, i32 0, i32 3
  %122 = load i32, i32* %121, align 8
  %123 = and i32 %122, 2147483647
  %124 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %85, i64 0, i32 1, i32 0, i32 3
  %125 = load i32, i32* %124, align 8
  %126 = and i32 %125, 2147483647
  %127 = and i32 %122, -2147483648
  %128 = or i32 %126, %127
  store i32 %128, i32* %121, align 8
  %129 = load i32, i32* %124, align 8
  %130 = and i32 %129, -2147483648
  %131 = or i32 %130, %123
  store i32 %131, i32* %124, align 8
  %132 = icmp eq %"struct.std::__1::pair"* %85, %0
  br i1 %132, label %137, label %133

133:                                              ; preds = %106
  %134 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %85, i64 -1
  %135 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %134, i64 0, i32 0
  %136 = call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %135, %"class.WTF::String"* nonnull dereferenceable(8) %52) #8
  br i1 %136, label %83, label %137

137:                                              ; preds = %106, %133
  %138 = phi %"struct.std::__1::pair"* [ %85, %133 ], [ %0, %106 ]
  %139 = bitcast %"class.WTF::HashMap"* %107 to i64*
  %140 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %138, i64 0, i32 0, i32 0, i32 0
  %141 = bitcast %"struct.std::__1::pair"* %138 to i64*
  %142 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %138, i64 0, i32 1, i32 0, i32 1
  %143 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %138, i64 0, i32 1, i32 0, i32 2
  %144 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %138, i64 0, i32 1, i32 0, i32 3
  %145 = load i64, i64* %48, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %43, align 8
  %146 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %140, align 8
  store i64 %145, i64* %141, align 8
  %147 = icmp eq %"class.WTF::StringImpl"* %146, null
  br i1 %147, label %161, label %148

148:                                              ; preds = %137
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %146, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = load atomic i32, i32* %149 monotonic, align 4
  %151 = and i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %146, i64 0, i32 0
  %154 = load i32, i32* %153, align 4
  br i1 %152, label %155, label %157

155:                                              ; preds = %148
  %156 = add i32 %154, -1
  store i32 %156, i32* %153, align 4
  br label %157

157:                                              ; preds = %155, %148
  %158 = phi i32 [ %156, %155 ], [ %154, %148 ]
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %161

160:                                              ; preds = %157
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %146) #8
  br label %161

161:                                              ; preds = %137, %157, %160
  %162 = load i64, i64* %51, align 8
  %163 = load i64, i64* %139, align 8
  store atomic i64 %163, i64* %51 monotonic, align 8
  store atomic i64 %162, i64* %139 monotonic, align 8
  %164 = load i32, i32* %142, align 4
  %165 = load i32, i32* %45, align 8
  store i32 %165, i32* %142, align 4
  store i32 %164, i32* %45, align 8
  %166 = load i32, i32* %143, align 4
  %167 = load i32, i32* %46, align 4
  store i32 %167, i32* %143, align 4
  store i32 %166, i32* %46, align 4
  %168 = load i32, i32* %144, align 8
  %169 = and i32 %168, 2147483647
  %170 = load i32, i32* %47, align 8
  %171 = and i32 %170, 2147483647
  %172 = and i32 %168, -2147483648
  %173 = or i32 %171, %172
  store i32 %173, i32* %144, align 8
  %174 = load i32, i32* %47, align 8
  %175 = and i32 %174, -2147483648
  %176 = or i32 %175, %169
  store i32 %176, i32* %47, align 8
  %177 = add i32 %56, 1
  %178 = icmp eq i32 %177, 8
  %179 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %44, align 8
  %180 = icmp eq %"struct.WTF::KeyValuePair"* %179, null
  br i1 %180, label %214, label %181, !prof !12

181:                                              ; preds = %161
  %182 = icmp eq i32 %164, 0
  br i1 %182, label %212, label %183

183:                                              ; preds = %181
  %184 = zext i32 %164 to i64
  br label %185

185:                                              ; preds = %209, %183
  %186 = phi i64 [ 0, %183 ], [ %210, %209 ]
  %187 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %179, i64 %186
  %188 = bitcast %"struct.WTF::KeyValuePair"* %187 to i8**
  %189 = load i8*, i8** %188, align 8
  %190 = icmp eq i8* %189, inttoptr (i64 -1 to i8*)
  br i1 %190, label %209, label %191

191:                                              ; preds = %185
  %192 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %179, i64 %186, i32 1
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %192) #8
  %193 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %187, i64 0, i32 0, i32 0, i32 0
  %194 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %193, align 8
  %195 = icmp eq %"class.WTF::StringImpl"* %194, null
  br i1 %195, label %209, label %196

196:                                              ; preds = %191
  %197 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %194, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %198 = load atomic i32, i32* %197 monotonic, align 4
  %199 = and i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %194, i64 0, i32 0
  %202 = load i32, i32* %201, align 4
  br i1 %200, label %203, label %205

203:                                              ; preds = %196
  %204 = add i32 %202, -1
  store i32 %204, i32* %201, align 4
  br label %205

205:                                              ; preds = %203, %196
  %206 = phi i32 [ %204, %203 ], [ %202, %196 ]
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %208, label %209

208:                                              ; preds = %205
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %194) #8
  br label %209

209:                                              ; preds = %208, %205, %191, %185
  %210 = add nuw nsw i64 %186, 1
  %211 = icmp eq i64 %210, %184
  br i1 %211, label %212, label %185

212:                                              ; preds = %209, %181
  %213 = bitcast %"struct.WTF::KeyValuePair"* %179 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %213) #8
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %44, align 8
  br label %214

214:                                              ; preds = %212, %161
  %215 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %216 = icmp eq %"class.WTF::StringImpl"* %215, null
  br i1 %216, label %230, label %217

217:                                              ; preds = %214
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %219 = load atomic i32, i32* %218 monotonic, align 4
  %220 = and i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 0
  %223 = load i32, i32* %222, align 4
  br i1 %221, label %224, label %226

224:                                              ; preds = %217
  %225 = add i32 %223, -1
  store i32 %225, i32* %222, align 4
  br label %226

226:                                              ; preds = %224, %217
  %227 = phi i32 [ %225, %224 ], [ %223, %217 ]
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %229, label %230

229:                                              ; preds = %226
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %215) #8
  br label %230

230:                                              ; preds = %214, %226, %229
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %42) #8
  br i1 %178, label %235, label %231

231:                                              ; preds = %230, %54
  %232 = phi i32 [ %177, %230 ], [ %56, %54 ]
  %233 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 1
  %234 = icmp eq %"struct.std::__1::pair"* %233, %1
  br i1 %234, label %238, label %54

235:                                              ; preds = %230
  %236 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 1
  %237 = icmp eq %"struct.std::__1::pair"* %236, %1
  br label %238

238:                                              ; preds = %231, %235, %35, %8, %13, %2, %2, %29, %24, %20
  %239 = phi i1 [ true, %29 ], [ true, %24 ], [ true, %20 ], [ true, %2 ], [ true, %2 ], [ true, %13 ], [ true, %8 ], [ true, %35 ], [ %237, %235 ], [ true, %231 ]
  ret i1 %239
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #7 comdat {
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %4, null
  %8 = icmp ne %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %9, label %15

9:                                                ; preds = %2
  br i1 %8, label %10, label %168

10:                                               ; preds = %9
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp ne i32 %12, 0
  %14 = sext i1 %13 to i32
  br label %168

15:                                               ; preds = %2
  br i1 %8, label %21, label %16

16:                                               ; preds = %15
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp ne i32 %18, 0
  %20 = zext i1 %19 to i32
  br label %168

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 1
  %29 = icmp ne i32 %28, 0
  br i1 %25, label %94, label %30

30:                                               ; preds = %21
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = icmp ult i32 %32, %34
  %36 = select i1 %35, i32 %32, i32 %34
  %37 = icmp eq i32 %36, 0
  br i1 %29, label %38, label %64

38:                                               ; preds = %30
  br i1 %37, label %59, label %39

39:                                               ; preds = %38
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 1
  %41 = bitcast %"class.WTF::StringImpl"* %40 to i8*
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 1
  %43 = bitcast %"class.WTF::StringImpl"* %42 to i8*
  br label %44

44:                                               ; preds = %51, %39
  %45 = phi i32 [ %54, %51 ], [ 0, %39 ]
  %46 = phi i8* [ %53, %51 ], [ %41, %39 ]
  %47 = phi i8* [ %52, %51 ], [ %43, %39 ]
  %48 = load i8, i8* %47, align 1
  %49 = load i8, i8* %46, align 1
  %50 = icmp eq i8 %48, %49
  br i1 %50, label %51, label %56

51:                                               ; preds = %44
  %52 = getelementptr inbounds i8, i8* %47, i64 1
  %53 = getelementptr inbounds i8, i8* %46, i64 1
  %54 = add nuw i32 %45, 1
  %55 = icmp ult i32 %54, %36
  br i1 %55, label %44, label %59

56:                                               ; preds = %44
  %57 = icmp ugt i8 %48, %49
  %58 = select i1 %57, i32 1, i32 -1
  br label %168

59:                                               ; preds = %51, %38
  %60 = icmp eq i32 %32, %34
  br i1 %60, label %168, label %61

61:                                               ; preds = %59
  %62 = icmp ugt i32 %32, %34
  %63 = select i1 %62, i32 1, i32 -1
  br label %168

64:                                               ; preds = %30
  br i1 %37, label %89, label %65

65:                                               ; preds = %64
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 1
  %67 = bitcast %"class.WTF::StringImpl"* %66 to i16*
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 1
  %69 = bitcast %"class.WTF::StringImpl"* %68 to i8*
  br label %70

70:                                               ; preds = %79, %65
  %71 = phi i32 [ %82, %79 ], [ 0, %65 ]
  %72 = phi i16* [ %81, %79 ], [ %67, %65 ]
  %73 = phi i8* [ %80, %79 ], [ %69, %65 ]
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i32
  %76 = load i16, i16* %72, align 2
  %77 = zext i16 %76 to i32
  %78 = icmp eq i32 %75, %77
  br i1 %78, label %79, label %84

79:                                               ; preds = %70
  %80 = getelementptr inbounds i8, i8* %73, i64 1
  %81 = getelementptr inbounds i16, i16* %72, i64 1
  %82 = add nuw i32 %71, 1
  %83 = icmp ult i32 %82, %36
  br i1 %83, label %70, label %89

84:                                               ; preds = %70
  %85 = zext i8 %74 to i32
  %86 = zext i16 %76 to i32
  %87 = icmp ugt i32 %85, %86
  %88 = select i1 %87, i32 1, i32 -1
  br label %168

89:                                               ; preds = %79, %64
  %90 = icmp eq i32 %32, %34
  br i1 %90, label %168, label %91

91:                                               ; preds = %89
  %92 = icmp ugt i32 %32, %34
  %93 = select i1 %92, i32 1, i32 -1
  br label %168

94:                                               ; preds = %21
  br i1 %29, label %95, label %135

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %97 = load i32, i32* %96, align 4
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = icmp ult i32 %97, %99
  %101 = select i1 %100, i32 %97, i32 %99
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %127, label %103

103:                                              ; preds = %95
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 1
  %105 = bitcast %"class.WTF::StringImpl"* %104 to i16*
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 1
  %107 = bitcast %"class.WTF::StringImpl"* %106 to i8*
  br label %108

108:                                              ; preds = %117, %103
  %109 = phi i32 [ %120, %117 ], [ 0, %103 ]
  %110 = phi i16* [ %119, %117 ], [ %105, %103 ]
  %111 = phi i8* [ %118, %117 ], [ %107, %103 ]
  %112 = load i8, i8* %111, align 1
  %113 = zext i8 %112 to i32
  %114 = load i16, i16* %110, align 2
  %115 = zext i16 %114 to i32
  %116 = icmp eq i32 %113, %115
  br i1 %116, label %117, label %122

117:                                              ; preds = %108
  %118 = getelementptr inbounds i8, i8* %111, i64 1
  %119 = getelementptr inbounds i16, i16* %110, i64 1
  %120 = add nuw i32 %109, 1
  %121 = icmp ult i32 %120, %101
  br i1 %121, label %108, label %127

122:                                              ; preds = %108
  %123 = zext i8 %112 to i32
  %124 = zext i16 %114 to i32
  %125 = icmp ugt i32 %123, %124
  %126 = select i1 %125, i32 1, i32 -1
  br label %132

127:                                              ; preds = %117, %95
  %128 = icmp eq i32 %97, %99
  br i1 %128, label %132, label %129

129:                                              ; preds = %127
  %130 = icmp ugt i32 %97, %99
  %131 = select i1 %130, i32 1, i32 -1
  br label %132

132:                                              ; preds = %129, %127, %122
  %133 = phi i32 [ %126, %122 ], [ %131, %129 ], [ 0, %127 ]
  %134 = sub nsw i32 0, %133
  br label %168

135:                                              ; preds = %94
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %137 = load i32, i32* %136, align 4
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %139 = load i32, i32* %138, align 4
  %140 = icmp ult i32 %137, %139
  %141 = select i1 %140, i32 %137, i32 %139
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %163, label %143

143:                                              ; preds = %135
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 1
  %145 = bitcast %"class.WTF::StringImpl"* %144 to i16*
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 1
  %147 = bitcast %"class.WTF::StringImpl"* %146 to i16*
  br label %148

148:                                              ; preds = %155, %143
  %149 = phi i32 [ %158, %155 ], [ 0, %143 ]
  %150 = phi i16* [ %157, %155 ], [ %145, %143 ]
  %151 = phi i16* [ %156, %155 ], [ %147, %143 ]
  %152 = load i16, i16* %151, align 2
  %153 = load i16, i16* %150, align 2
  %154 = icmp eq i16 %152, %153
  br i1 %154, label %155, label %160

155:                                              ; preds = %148
  %156 = getelementptr inbounds i16, i16* %151, i64 1
  %157 = getelementptr inbounds i16, i16* %150, i64 1
  %158 = add nuw i32 %149, 1
  %159 = icmp ult i32 %158, %141
  br i1 %159, label %148, label %163

160:                                              ; preds = %148
  %161 = icmp ugt i16 %152, %153
  %162 = select i1 %161, i32 1, i32 -1
  br label %168

163:                                              ; preds = %155, %135
  %164 = icmp eq i32 %137, %139
  br i1 %164, label %168, label %165

165:                                              ; preds = %163
  %166 = icmp ugt i32 %137, %139
  %167 = select i1 %166, i32 1, i32 -1
  br label %168

168:                                              ; preds = %9, %10, %16, %56, %59, %61, %84, %89, %91, %132, %160, %163, %165
  %169 = phi i32 [ %20, %16 ], [ 0, %9 ], [ %14, %10 ], [ %134, %132 ], [ %58, %56 ], [ %63, %61 ], [ 0, %59 ], [ %88, %84 ], [ %93, %91 ], [ 0, %89 ], [ %162, %160 ], [ %167, %165 ], [ 0, %163 ]
  %170 = icmp slt i32 %169, 0
  ret i1 %170
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14swapIN3WTF7HashMapINS1_6StringEN5blink4KURLENS1_10StringHashENS1_10HashTraitsIS3_EENS7_IS5_EENS1_18PartitionAllocatorEEEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableISD_EE5valueEvE4typeERSD_SG_(%"class.WTF::HashMap"* dereferenceable(24), %"class.WTF::HashMap"* dereferenceable(24)) local_unnamed_addr #7 comdat {
  %3 = bitcast %"class.WTF::HashMap"* %0 to i64*
  %4 = load i64, i64* %3, align 8
  store atomic i64 0, i64* %3 monotonic, align 8
  %5 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %0, i64 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 4
  store i32 0, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %0, i64 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  store i32 0, i32* %7, align 4
  %9 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %0, i64 0, i32 0, i32 3
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 2147483647
  %12 = and i32 %10, -2147483648
  store i32 %12, i32* %9, align 8
  %13 = bitcast %"class.WTF::HashMap"* %1 to i64*
  %14 = load i64, i64* %13, align 8
  store atomic i64 0, i64* %13 monotonic, align 8
  store atomic i64 %14, i64* %3 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %1, i64 0, i32 0, i32 1
  %16 = load i32, i32* %5, align 4
  %17 = load i32, i32* %15, align 4
  store i32 %17, i32* %5, align 4
  store i32 %16, i32* %15, align 4
  %18 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %1, i64 0, i32 0, i32 2
  %19 = load i32, i32* %7, align 4
  %20 = load i32, i32* %18, align 4
  store i32 %20, i32* %7, align 4
  store i32 %19, i32* %18, align 4
  %21 = load i32, i32* %9, align 8
  %22 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %1, i64 0, i32 0, i32 3
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 2147483647
  %25 = and i32 %21, -2147483648
  %26 = or i32 %24, %25
  store i32 %26, i32* %9, align 8
  %27 = load i32, i32* %22, align 8
  %28 = and i32 %27, -2147483648
  %29 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %1, i64 0, i32 0, i32 0
  %30 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %29, align 8
  store atomic i64 %4, i64* %13 monotonic, align 8
  %31 = load i32, i32* %15, align 4
  store i32 %6, i32* %15, align 4
  store i32 %8, i32* %18, align 4
  %32 = or i32 %28, %11
  store i32 %32, i32* %22, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair"* %30, null
  br i1 %33, label %67, label %34, !prof !12

34:                                               ; preds = %2
  %35 = icmp eq i32 %31, 0
  br i1 %35, label %65, label %36

36:                                               ; preds = %34
  %37 = zext i32 %31 to i64
  br label %38

38:                                               ; preds = %62, %36
  %39 = phi i64 [ 0, %36 ], [ %63, %62 ]
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 %39
  %41 = bitcast %"struct.WTF::KeyValuePair"* %40 to i8**
  %42 = load i8*, i8** %41, align 8
  %43 = icmp eq i8* %42, inttoptr (i64 -1 to i8*)
  br i1 %43, label %62, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 %39, i32 1
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %45) #8
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %40, i64 0, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %62, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %49
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %49
  %59 = phi i32 [ %57, %56 ], [ %55, %49 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %47) #8
  br label %62

62:                                               ; preds = %61, %58, %44, %38
  %63 = add nuw nsw i64 %39, 1
  %64 = icmp eq i64 %63, %37
  br i1 %64, label %65, label %38

65:                                               ; preds = %62, %34
  %66 = bitcast %"struct.WTF::KeyValuePair"* %30 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %66) #8
  br label %67

67:                                               ; preds = %2, %65
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink4KURLEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKS1_RKS4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink4KURLEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #8
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #8
  br i1 %57, label %132, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 120, i1 false) #8
  %72 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"struct.WTF::KeyValuePair"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %99, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %99

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i33
  %91 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %90, i33 1) #8
  %92 = extractvalue { i33, i1 } %91, 1
  %93 = extractvalue { i33, i1 } %91, 0
  %94 = icmp slt i33 %93, 0
  %95 = or i1 %92, %94
  br i1 %95, label %96, label %97, !prof !2

96:                                               ; preds = %87
  tail call void @llvm.trap() #8
  unreachable

97:                                               ; preds = %87
  %98 = trunc i33 %93 to i32
  store i32 %98, i32* %88, align 4
  br label %99

99:                                               ; preds = %97, %82, %78
  %100 = ptrtoint %"class.WTF::StringImpl"* %80 to i64
  %101 = bitcast %"struct.WTF::KeyValuePair"* %79 to i64*
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %79, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  store i64 %100, i64* %101, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #8
  br label %118

118:                                              ; preds = %99, %114, %117
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %79, i64 0, i32 1
  %120 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* %119, %"class.blink::KURL"* dereferenceable(112) %2) #8
  %121 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %122 = load i32, i32* %121, align 4
  %123 = add i32 %122, 1
  store i32 %123, i32* %121, align 4
  %124 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %125 = load i32, i32* %124, align 8
  %126 = add i32 %125, %123
  %127 = shl i32 %126, 1
  %128 = load i32, i32* %12, align 8
  %129 = icmp ult i32 %127, %128
  br i1 %129, label %132, label %130

130:                                              ; preds = %118
  %131 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink4KURLEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %79)
  br label %132

132:                                              ; preds = %54, %118, %130
  %133 = phi i8 [ 1, %118 ], [ 1, %130 ], [ 0, %54 ]
  %134 = phi %"struct.WTF::KeyValuePair"* [ %79, %118 ], [ %131, %130 ], [ %47, %54 ]
  %135 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %134, 0
  %136 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %135, i8 %133, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %136
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink4KURLEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #8
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.45, i64 0, i64 0), i8* %22, i8* %23) #8
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.46, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #8
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = mul nuw nsw i64 %33, 120
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringEN5blink4KURLEEEEEPKcv, i64 0, i64 0)) #8
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #8
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink4KURLEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE8RehashToEPS5_jSF_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #8
  ret %"struct.WTF::KeyValuePair"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink4KURLEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE8RehashToEPS5_jSF_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable", align 8
  %6 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair"* %1, %"struct.WTF::KeyValuePair"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair"* %22 to i64
  br label %74

24:                                               ; preds = %116
  %25 = bitcast %"class.WTF::HashTable"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %117, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair"* [ null, %16 ], [ %120, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %118, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %70, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %68, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %65, %39
  %42 = phi i64 [ 0, %39 ], [ %66, %65 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 %42
  %44 = bitcast %"struct.WTF::KeyValuePair"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = icmp eq i8* %45, inttoptr (i64 -1 to i8*)
  br i1 %46, label %65, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 %42, i32 1
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %48) #8
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %43, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %65, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %61

59:                                               ; preds = %52
  %60 = add i32 %58, -1
  store i32 %60, i32* %57, align 4
  br label %61

61:                                               ; preds = %59, %52
  %62 = phi i32 [ %60, %59 ], [ %58, %52 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %50) #8
  br label %65

65:                                               ; preds = %64, %61, %47, %41
  %66 = add nuw nsw i64 %42, 1
  %67 = icmp eq i64 %66, %40
  br i1 %67, label %68, label %41

68:                                               ; preds = %65, %37
  %69 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %69) #8
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %70

70:                                               ; preds = %28, %68
  %71 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %72 = load i32, i32* %71, align 8
  %73 = and i32 %72, -2147483648
  store i32 %73, i32* %71, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8
  ret %"struct.WTF::KeyValuePair"* %33

74:                                               ; preds = %21, %116
  %75 = phi i64 [ %117, %116 ], [ %23, %21 ]
  %76 = phi i32 [ %118, %116 ], [ %13, %21 ]
  %77 = phi %"struct.WTF::KeyValuePair"* [ %119, %116 ], [ %22, %21 ]
  %78 = phi %"struct.WTF::KeyValuePair"* [ %120, %116 ], [ null, %21 ]
  %79 = phi i32 [ %121, %116 ], [ 0, %21 ]
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %77, i64 %80
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %81, i64 0, i32 0, i32 0, i32 0
  %83 = bitcast %"struct.WTF::KeyValuePair"* %81 to i64*
  %84 = load i64, i64* %83, align 8
  switch i64 %84, label %85 [
    i64 -1, label %116
    i64 0, label %116
  ]

85:                                               ; preds = %74
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %81, i64 0, i32 0
  %87 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink4KURLEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %86) #8
  %88 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %87, 0
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %88, i64 0, i32 1
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %89) #8
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %88, i64 0, i32 0, i32 0, i32 0
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %92, label %106, label %93

93:                                               ; preds = %85
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  br i1 %97, label %100, label %102

100:                                              ; preds = %93
  %101 = add i32 %99, -1
  store i32 %101, i32* %98, align 4
  br label %102

102:                                              ; preds = %100, %93
  %103 = phi i32 [ %101, %100 ], [ %99, %93 ]
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %102
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %91) #8
  br label %106

106:                                              ; preds = %85, %102, %105
  %107 = load i64, i64* %83, align 8
  %108 = bitcast %"struct.WTF::KeyValuePair"* %88 to i64*
  store i64 %107, i64* %108, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %82, align 8
  %109 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %77, i64 %80, i32 1
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %89, %"class.blink::KURL"* dereferenceable(112) %109) #8
  %110 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %111 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %110, i64 %80
  %112 = icmp eq %"struct.WTF::KeyValuePair"* %111, %3
  %113 = select i1 %112, %"struct.WTF::KeyValuePair"* %88, %"struct.WTF::KeyValuePair"* %78
  %114 = load i32, i32* %12, align 8
  %115 = ptrtoint %"struct.WTF::KeyValuePair"* %110 to i64
  br label %116

116:                                              ; preds = %74, %74, %106
  %117 = phi i64 [ %75, %74 ], [ %115, %106 ], [ %75, %74 ]
  %118 = phi i32 [ %76, %74 ], [ %114, %106 ], [ %76, %74 ]
  %119 = phi %"struct.WTF::KeyValuePair"* [ %77, %74 ], [ %110, %106 ], [ %77, %74 ]
  %120 = phi %"struct.WTF::KeyValuePair"* [ %78, %74 ], [ %113, %106 ], [ %78, %74 ]
  %121 = add i32 %79, 1
  %122 = icmp eq i32 %121, %118
  br i1 %122, label %24, label %74
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink4KURLEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #8
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %20
  %22 = ptrtoint %"struct.WTF::KeyValuePair"* %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %21, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"struct.WTF::KeyValuePair"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"struct.WTF::KeyValuePair"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"struct.WTF::KeyValuePair"* %44, null
  %46 = ptrtoint %"struct.WTF::KeyValuePair"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"struct.WTF::KeyValuePair"* [ null, %26 ], [ %62, %61 ]
  %50 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %51 = phi %"struct.WTF::KeyValuePair"* [ %21, %26 ], [ %67, %61 ]
  %52 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %53 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %54 = bitcast %"struct.WTF::KeyValuePair"* %51 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, inttoptr (i64 -1 to i8*)
  br i1 %56, label %61, label %57

57:                                               ; preds = %48
  %58 = bitcast i8* %55 to %"class.WTF::StringImpl"*
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"* %59) #8
  br i1 %60, label %72, label %61

61:                                               ; preds = %57, %48
  %62 = phi %"struct.WTF::KeyValuePair"* [ %49, %57 ], [ %51, %48 ]
  %63 = icmp eq i64 %53, 0
  %64 = select i1 %63, i64 %39, i64 %53
  %65 = add i64 %64, %52
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %66
  %68 = ptrtoint %"struct.WTF::KeyValuePair"* %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %67, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %57, %42
  %73 = phi i64 [ %47, %42 ], [ %50, %57 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %57 ]
  %75 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair"*
  %76 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %75, 0
  %77 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %76, i8 %74, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %77
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

declare dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink4KURLEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKS1_S4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink4KURLEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #8
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #8
  br i1 %57, label %132, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 120, i1 false) #8
  %72 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"struct.WTF::KeyValuePair"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %99, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %99

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i33
  %91 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %90, i33 1) #8
  %92 = extractvalue { i33, i1 } %91, 1
  %93 = extractvalue { i33, i1 } %91, 0
  %94 = icmp slt i33 %93, 0
  %95 = or i1 %92, %94
  br i1 %95, label %96, label %97, !prof !2

96:                                               ; preds = %87
  tail call void @llvm.trap() #8
  unreachable

97:                                               ; preds = %87
  %98 = trunc i33 %93 to i32
  store i32 %98, i32* %88, align 4
  br label %99

99:                                               ; preds = %97, %82, %78
  %100 = ptrtoint %"class.WTF::StringImpl"* %80 to i64
  %101 = bitcast %"struct.WTF::KeyValuePair"* %79 to i64*
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %79, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  store i64 %100, i64* %101, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #8
  br label %118

118:                                              ; preds = %99, %114, %117
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %79, i64 0, i32 1
  %120 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* %119, %"class.blink::KURL"* dereferenceable(112) %2) #8
  %121 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %122 = load i32, i32* %121, align 4
  %123 = add i32 %122, 1
  store i32 %123, i32* %121, align 4
  %124 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %125 = load i32, i32* %124, align 8
  %126 = add i32 %125, %123
  %127 = shl i32 %126, 1
  %128 = load i32, i32* %12, align 8
  %129 = icmp ult i32 %127, %128
  br i1 %129, label %132, label %130

130:                                              ; preds = %118
  %131 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink4KURLEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %79)
  br label %132

132:                                              ; preds = %54, %118, %130
  %133 = phi i8 [ 1, %118 ], [ 1, %130 ], [ 0, %54 ]
  %134 = phi %"struct.WTF::KeyValuePair"* [ %79, %118 ], [ %131, %130 ], [ %47, %54 ]
  %135 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %134, 0
  %136 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %135, i8 %133, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %136
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink4KURLEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #8
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %63, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #8
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %63, label %41

61:                                               ; preds = %48
  %62 = icmp eq %"struct.WTF::KeyValuePair"* %42, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %52, %61, %19, %2
  %64 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %65 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 %67
  br label %74

69:                                               ; preds = %61
  %70 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %71 = load i32, i32* %7, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %70, i64 %72
  br label %74

74:                                               ; preds = %63, %69
  %75 = phi %"struct.WTF::KeyValuePair"* [ %42, %69 ], [ %68, %63 ]
  %76 = phi %"struct.WTF::KeyValuePair"* [ %73, %69 ], [ %68, %63 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %77, %"struct.WTF::KeyValuePair"* %76, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend.223"*, %"class.WTF::StringAppend.224"* byval(%"class.WTF::StringAppend.224") align 8, i8*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.224"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend.223"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.224", %"class.WTF::StringAppend.224"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.223", %"class.WTF::StringAppend.223"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #8
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !2

25:                                               ; preds = %16
  tail call void @llvm.trap() #8
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %26, %11, %3
  %29 = getelementptr inbounds %"class.WTF::StringAppend.223", %"class.WTF::StringAppend.223"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.224", %"class.WTF::StringAppend.224"* %1, i64 0, i32 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.224", %"class.WTF::StringAppend.224"* %1, i64 0, i32 1, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.WTF::StringAppend.223", %"class.WTF::StringAppend.223"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %36, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %57

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #8
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !2

52:                                               ; preds = %43
  tail call void @llvm.trap() #8
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %57

55:                                               ; preds = %28
  %56 = getelementptr inbounds %"class.WTF::StringAppend.223", %"class.WTF::StringAppend.223"* %0, i64 0, i32 1
  store i8* %2, i8** %56, align 8
  br label %70

57:                                               ; preds = %38, %53
  %58 = getelementptr inbounds %"class.WTF::StringAppend.223", %"class.WTF::StringAppend.223"* %0, i64 0, i32 1
  store i8* %2, i8** %58, align 8
  %59 = load atomic i32, i32* %39 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #8
  br label %70

70:                                               ; preds = %55, %69, %66
  br i1 %10, label %84, label %71

71:                                               ; preds = %70
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  br i1 %75, label %78, label %80

78:                                               ; preds = %71
  %79 = add i32 %77, -1
  store i32 %79, i32* %76, align 4
  br label %80

80:                                               ; preds = %78, %71
  %81 = phi i32 [ %79, %78 ], [ %77, %71 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #8
  br label %84

84:                                               ; preds = %70, %80, %83
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.223"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.248", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.223", %"class.WTF::StringAppend.223"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.248"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #8
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.248", %"class.WTF::StringTypeAdapter.248"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.223", %"class.WTF::StringAppend.223"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.248"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.248"* nonnull %4, i8* %14) #8
  %15 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.224"* %9) #8
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #8
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.224"* %9) #8
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #8
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.29, i64 0, i64 0), i8* %25, i8* %26) #8
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.30, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #8
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #8
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #8
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #8
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #8
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.31, i64 0, i64 0), i8* %41, i8* %42) #8
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.30, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #8
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #8
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #8
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh(%"class.WTF::StringAppend.223"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.245", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.248", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.223", %"class.WTF::StringAppend.223"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter.248"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.223", %"class.WTF::StringAppend.223"* %0, i64 0, i32 1
  %8 = bitcast %"class.WTF::StringTypeAdapter.248"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.248"* nonnull %4, i8* %9) #8
  %10 = getelementptr inbounds %"class.WTF::StringAppend.223", %"class.WTF::StringAppend.223"* %0, i64 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.245"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #8
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.245", %"class.WTF::StringTypeAdapter.245"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.245", %"class.WTF::StringTypeAdapter.245"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend.223", %"class.WTF::StringAppend.223"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #8
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %17, %19
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.245"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend"* %10, i8* %1) #8
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.245", %"class.WTF::StringTypeAdapter.245"* %3, i64 0, i32 0
  %31 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %10) #8
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %1, i64 %32
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.246"* nonnull %30, i8* %33) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #8
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.224"* %5) #8
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.248"* nonnull %4, i8* %36) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs(%"class.WTF::StringAppend.223"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.245", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.248", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.223", %"class.WTF::StringAppend.223"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter.248"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.223", %"class.WTF::StringAppend.223"* %0, i64 0, i32 1
  %8 = bitcast %"class.WTF::StringTypeAdapter.248"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.248"* nonnull %4, i8* %9) #8
  %10 = getelementptr inbounds %"class.WTF::StringAppend.223", %"class.WTF::StringAppend.223"* %0, i64 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.245"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #8
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.245", %"class.WTF::StringTypeAdapter.245"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.245", %"class.WTF::StringTypeAdapter.245"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend.223", %"class.WTF::StringAppend.223"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #8
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %17, %19
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.245"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend"* %10, i16* %1) #8
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.245", %"class.WTF::StringTypeAdapter.245"* %3, i64 0, i32 0
  %31 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %10) #8
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i16, i16* %1, i64 %32
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.246"* nonnull %30, i16* %33) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #8
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.224"* %5) #8
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i16, i16* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.248"* nonnull %4, i16* %36) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EC2ES7_S3_(%"class.WTF::StringAppend.225"*, %"class.WTF::StringAppend.223"* byval(%"class.WTF::StringAppend.223") align 8, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.223"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend.225"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.223", %"class.WTF::StringAppend.223"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.225", %"class.WTF::StringAppend.225"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #8
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !2

25:                                               ; preds = %16
  tail call void @llvm.trap() #8
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %26, %11, %3
  %29 = getelementptr inbounds %"class.WTF::StringAppend.225", %"class.WTF::StringAppend.225"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.223", %"class.WTF::StringAppend.223"* %1, i64 0, i32 0, i32 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.223", %"class.WTF::StringAppend.223"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.WTF::StringAppend.225", %"class.WTF::StringAppend.225"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %36, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %55

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #8
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !2

52:                                               ; preds = %43
  tail call void @llvm.trap() #8
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %55

55:                                               ; preds = %28, %38, %53
  %56 = getelementptr inbounds %"class.WTF::StringAppend.225", %"class.WTF::StringAppend.225"* %0, i64 0, i32 0, i32 1
  %57 = getelementptr inbounds %"class.WTF::StringAppend.223", %"class.WTF::StringAppend.223"* %1, i64 0, i32 1
  %58 = bitcast i8** %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = bitcast i8** %56 to i64*
  store i64 %59, i64* %60, align 8
  %61 = getelementptr inbounds %"class.WTF::StringAppend.225", %"class.WTF::StringAppend.225"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %61, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %62, label %92, label %63

63:                                               ; preds = %55
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %80

70:                                               ; preds = %63
  %71 = zext i32 %69 to i33
  %72 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #8
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !2

77:                                               ; preds = %70
  tail call void @llvm.trap() #8
  unreachable

78:                                               ; preds = %70
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %68, align 4
  br label %80

80:                                               ; preds = %63, %78
  %81 = phi i32 [ %79, %78 ], [ %69, %63 ]
  %82 = load atomic i32, i32* %64 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %88

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %87 = add i32 %81, -1
  store i32 %87, i32* %86, align 4
  br label %88

88:                                               ; preds = %85, %80
  %89 = phi i32 [ %87, %85 ], [ %81, %80 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #8
  br label %92

92:                                               ; preds = %55, %88, %91
  br i1 %37, label %106, label %93

93:                                               ; preds = %92
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  br i1 %97, label %100, label %102

100:                                              ; preds = %93
  %101 = add i32 %99, -1
  store i32 %101, i32* %98, align 4
  br label %102

102:                                              ; preds = %100, %93
  %103 = phi i32 [ %101, %100 ], [ %99, %93 ]
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %102
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #8
  br label %106

106:                                              ; preds = %105, %102, %92
  br i1 %10, label %120, label %107

107:                                              ; preds = %106
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  br i1 %111, label %114, label %116

114:                                              ; preds = %107
  %115 = add i32 %113, -1
  store i32 %115, i32* %112, align 4
  br label %116

116:                                              ; preds = %114, %107
  %117 = phi i32 [ %115, %114 ], [ %113, %107 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #8
  br label %120

120:                                              ; preds = %106, %116, %119
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_E6lengthEv(%"class.WTF::StringAppend.225"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.225", %"class.WTF::StringAppend.225"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend.225", %"class.WTF::StringAppend.225"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.223"* %8) #8
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #8
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.223"* %8) #8
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #8
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.29, i64 0, i64 0), i8* %26, i8* %27) #8
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.30, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #8
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #8
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #8
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #8
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #8
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.31, i64 0, i64 0), i8* %41, i8* %42) #8
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.30, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #8
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #8
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #8
  ret i32 %18
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!5 = distinct !{!5, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!8 = distinct !{!8, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNSt3__19make_pairIRKN3WTF6StringENS1_7HashMapIS2_N5blink4KURLENS1_10StringHashENS1_10HashTraitsIS2_EENS9_IS7_EENS1_18PartitionAllocatorEEEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENSF_IT0_E4typeEEEOSG_OSJ_: argument 0"}
!11 = distinct !{!11, !"_ZNSt3__19make_pairIRKN3WTF6StringENS1_7HashMapIS2_N5blink4KURLENS1_10StringHashENS1_10HashTraitsIS2_EENS9_IS7_EENS1_18PartitionAllocatorEEEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENSF_IT0_E4typeEEEOSG_OSJ_"}
!12 = !{!"branch_weights", i32 2000, i32 1}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!15 = distinct !{!15, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN5blink12_GLOBAL__N_114NormalizeValueERKN3WTF6StringES4_RKNS_4KURLERNS_13ConsoleLoggerE: argument 0"}
!18 = distinct !{!18, !"_ZN5blink12_GLOBAL__N_114NormalizeValueERKN3WTF6StringES4_RKNS_4KURLERNS_13ConsoleLoggerE"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!21 = distinct !{!21, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!22 = !{i8 0, i8 2}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!25 = distinct !{!25, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!28 = distinct !{!28, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!31 = distinct !{!31, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_: argument 0"}
!34 = distinct !{!34, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!37 = distinct !{!37, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_: argument 0"}
!40 = distinct !{!40, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!43 = distinct !{!43, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_: argument 0"}
!46 = distinct !{!46, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_"}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!49 = distinct !{!49, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_: argument 0"}
!52 = distinct !{!52, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_"}
!53 = distinct !{!53, !54}
!54 = !{!"llvm.loop.unroll.disable"}
