; ModuleID = '../../content/browser/renderer_host/input/synthetic_touchscreen_pinch_gesture.cc'
source_filename = "../../content/browser/renderer_host/input/synthetic_touchscreen_pinch_gesture.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.content::SyntheticTouchscreenPinchGesture" = type { %"class.content::SyntheticGesture", %"struct.content::SyntheticPinchGestureParams", %"class.std::__1::unique_ptr", float, float, float, i32, i32, %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.content::SyntheticGesture" = type { i32 (...)** }
%"struct.content::SyntheticPinchGestureParams" = type { %"struct.content::SyntheticGestureParams.base", float, %"class.gfx::PointF", float, [4 x i8] }
%"struct.content::SyntheticGestureParams.base" = type <{ i32 (...)**, i32 }>
%"class.gfx::PointF" = type { float, float }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.content::SyntheticPointerDriver"* }
%"class.content::SyntheticPointerDriver" = type { i32 (...)** }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.content::SyntheticGestureTarget" = type { i32 (...)** }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

@_ZTVN7content32SyntheticTouchscreenPinchGestureE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.content::SyntheticTouchscreenPinchGesture"*)* @_ZN7content32SyntheticTouchscreenPinchGestureD2Ev to i8*), i8* bitcast (void (%"class.content::SyntheticTouchscreenPinchGesture"*)* @_ZN7content32SyntheticTouchscreenPinchGestureD0Ev to i8*), i8* bitcast (i32 (%"class.content::SyntheticTouchscreenPinchGesture"*, %"class.base::TimeTicks"*, %"class.content::SyntheticGestureTarget"*)* @_ZN7content32SyntheticTouchscreenPinchGesture18ForwardInputEventsERKN4base9TimeTicksEPNS_22SyntheticGestureTargetE to i8*), i8* bitcast (void (%"class.content::SyntheticTouchscreenPinchGesture"*, %"class.base::OnceCallback"*, %"class.content::SyntheticGestureTarget"*)* @_ZNK7content32SyntheticTouchscreenPinchGesture16WaitForTargetAckEN4base12OnceCallbackIFvvEEEPNS_22SyntheticGestureTargetE to i8*), i8* bitcast (i1 (%"class.content::SyntheticGesture"*)* @_ZNK7content16SyntheticGesture26AllowHighFrequencyDispatchEv to i8*)] }, align 8
@.str = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.1 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1

@_ZN7content32SyntheticTouchscreenPinchGestureC1ERKNS_27SyntheticPinchGestureParamsE = hidden unnamed_addr alias void (%"class.content::SyntheticTouchscreenPinchGesture"*, %"struct.content::SyntheticPinchGestureParams"*), void (%"class.content::SyntheticTouchscreenPinchGesture"*, %"struct.content::SyntheticPinchGestureParams"*)* @_ZN7content32SyntheticTouchscreenPinchGestureC2ERKNS_27SyntheticPinchGestureParamsE
@_ZN7content32SyntheticTouchscreenPinchGestureD1Ev = hidden unnamed_addr alias void (%"class.content::SyntheticTouchscreenPinchGesture"*), void (%"class.content::SyntheticTouchscreenPinchGesture"*)* @_ZN7content32SyntheticTouchscreenPinchGestureD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content32SyntheticTouchscreenPinchGestureC2ERKNS_27SyntheticPinchGestureParamsE(%"class.content::SyntheticTouchscreenPinchGesture"*, %"struct.content::SyntheticPinchGestureParams"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 0
  tail call void @_ZN7content16SyntheticGestureC2Ev(%"class.content::SyntheticGesture"* %3) #8
  %4 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7content32SyntheticTouchscreenPinchGestureE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 1
  tail call void @_ZN7content27SyntheticPinchGestureParamsC1ERKS0_(%"struct.content::SyntheticPinchGestureParams"* %5, %"struct.content::SyntheticPinchGestureParams"* dereferenceable(32) %1) #8
  %6 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 8, i32 0, i32 0
  %8 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast %"class.std::__1::unique_ptr"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 28, i1 false)
  %10 = bitcast i64* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false)
  %11 = load i32, i32* %8, align 8
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %14, label %13

13:                                               ; preds = %2
  store i32 1, i32* %8, align 8
  br label %14

14:                                               ; preds = %2, %13
  ret void
}

declare void @_ZN7content16SyntheticGestureC2Ev(%"class.content::SyntheticGesture"*) unnamed_addr #1

declare void @_ZN7content27SyntheticPinchGestureParamsC1ERKS0_(%"struct.content::SyntheticPinchGestureParams"*, %"struct.content::SyntheticPinchGestureParams"* dereferenceable(32)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content32SyntheticTouchscreenPinchGestureD2Ev(%"class.content::SyntheticTouchscreenPinchGesture"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7content32SyntheticTouchscreenPinchGestureE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticPointerDriver"** %3, align 8
  store %"class.content::SyntheticPointerDriver"* null, %"class.content::SyntheticPointerDriver"** %3, align 8
  %5 = icmp eq %"class.content::SyntheticPointerDriver"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.content::SyntheticPointerDriver"* %4 to void (%"class.content::SyntheticPointerDriver"*)***
  %8 = load void (%"class.content::SyntheticPointerDriver"*)**, void (%"class.content::SyntheticPointerDriver"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.content::SyntheticPointerDriver"*)*, void (%"class.content::SyntheticPointerDriver"*)** %8, i64 1
  %10 = load void (%"class.content::SyntheticPointerDriver"*)*, void (%"class.content::SyntheticPointerDriver"*)** %9, align 8
  tail call void %10(%"class.content::SyntheticPointerDriver"* nonnull %4) #8
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 1
  tail call void @_ZN7content27SyntheticPinchGestureParamsD1Ev(%"struct.content::SyntheticPinchGestureParams"* %12) #8
  %13 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 0
  tail call void @_ZN7content16SyntheticGestureD2Ev(%"class.content::SyntheticGesture"* %13) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN7content27SyntheticPinchGestureParamsD1Ev(%"struct.content::SyntheticPinchGestureParams"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7content16SyntheticGestureD2Ev(%"class.content::SyntheticGesture"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content32SyntheticTouchscreenPinchGestureD0Ev(%"class.content::SyntheticTouchscreenPinchGesture"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7content32SyntheticTouchscreenPinchGestureE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticPointerDriver"** %3, align 8
  store %"class.content::SyntheticPointerDriver"* null, %"class.content::SyntheticPointerDriver"** %3, align 8
  %5 = icmp eq %"class.content::SyntheticPointerDriver"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.content::SyntheticPointerDriver"* %4 to void (%"class.content::SyntheticPointerDriver"*)***
  %8 = load void (%"class.content::SyntheticPointerDriver"*)**, void (%"class.content::SyntheticPointerDriver"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.content::SyntheticPointerDriver"*)*, void (%"class.content::SyntheticPointerDriver"*)** %8, i64 1
  %10 = load void (%"class.content::SyntheticPointerDriver"*)*, void (%"class.content::SyntheticPointerDriver"*)** %9, align 8
  tail call void %10(%"class.content::SyntheticPointerDriver"* nonnull %4) #8
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 1
  tail call void @_ZN7content27SyntheticPinchGestureParamsD1Ev(%"struct.content::SyntheticPinchGestureParams"* %12) #8
  %13 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 0
  tail call void @_ZN7content16SyntheticGestureD2Ev(%"class.content::SyntheticGesture"* %13) #8
  %14 = bitcast %"class.content::SyntheticTouchscreenPinchGesture"* %0 to i8*
  tail call void @_ZdlPv(i8* %14) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN7content32SyntheticTouchscreenPinchGesture18ForwardInputEventsERKN4base9TimeTicksEPNS_22SyntheticGestureTargetE(%"class.content::SyntheticTouchscreenPinchGesture"* nocapture, %"class.base::TimeTicks"* dereferenceable(8), %"class.content::SyntheticGestureTarget"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 7
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %22

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 6
  store i32 %9, i32* %10, align 4
  %11 = icmp eq i32 %9, 0
  br i1 %11, label %12, label %18

12:                                               ; preds = %7
  %13 = bitcast %"class.content::SyntheticGestureTarget"* %2 to i32 (%"class.content::SyntheticGestureTarget"*)***
  %14 = load i32 (%"class.content::SyntheticGestureTarget"*)**, i32 (%"class.content::SyntheticGestureTarget"*)*** %13, align 8
  %15 = getelementptr inbounds i32 (%"class.content::SyntheticGestureTarget"*)*, i32 (%"class.content::SyntheticGestureTarget"*)** %14, i64 3
  %16 = load i32 (%"class.content::SyntheticGestureTarget"*)*, i32 (%"class.content::SyntheticGestureTarget"*)** %15, align 8
  %17 = tail call i32 %16(%"class.content::SyntheticGestureTarget"* %2) #8
  store i32 %17, i32* %10, align 4
  br label %18

18:                                               ; preds = %12, %7
  store i32 1, i32* %4, align 8
  %19 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %1, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 8, i32 0, i32 0
  %21 = load i64, i64* %19, align 8
  store i64 %21, i64* %20, align 8
  br label %22

22:                                               ; preds = %18, %3
  %23 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 2
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticPointerDriver"** %24, align 8
  %26 = icmp eq %"class.content::SyntheticPointerDriver"* %25, null
  br i1 %26, label %27, label %40

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 6
  %29 = load i32, i32* %28, align 4
  %30 = tail call %"class.content::SyntheticPointerDriver"* @_ZN7content22SyntheticPointerDriver6CreateENS_5mojom17GestureSourceTypeE(i32 %29) #8
  %31 = ptrtoint %"class.content::SyntheticPointerDriver"* %30 to i64
  %32 = load %"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticPointerDriver"** %24, align 8
  %33 = bitcast %"class.std::__1::unique_ptr"* %23 to i64*
  store i64 %31, i64* %33, align 8
  %34 = icmp eq %"class.content::SyntheticPointerDriver"* %32, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %27
  %36 = bitcast %"class.content::SyntheticPointerDriver"* %32 to void (%"class.content::SyntheticPointerDriver"*)***
  %37 = load void (%"class.content::SyntheticPointerDriver"*)**, void (%"class.content::SyntheticPointerDriver"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.content::SyntheticPointerDriver"*)*, void (%"class.content::SyntheticPointerDriver"*)** %37, i64 1
  %39 = load void (%"class.content::SyntheticPointerDriver"*)*, void (%"class.content::SyntheticPointerDriver"*)** %38, align 8
  tail call void %39(%"class.content::SyntheticPointerDriver"* nonnull %32) #8
  br label %40

40:                                               ; preds = %22, %27, %35
  %41 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 6
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 1
  br i1 %43, label %44, label %48

44:                                               ; preds = %40
  tail call void @_ZN7content32SyntheticTouchscreenPinchGesture23ForwardTouchInputEventsERKN4base9TimeTicksEPNS_22SyntheticGestureTargetE(%"class.content::SyntheticTouchscreenPinchGesture"* %0, %"class.base::TimeTicks"* dereferenceable(8) %1, %"class.content::SyntheticGestureTarget"* %2)
  %45 = load i32, i32* %4, align 8
  %46 = icmp eq i32 %45, 3
  %47 = zext i1 %46 to i32
  br label %48

48:                                               ; preds = %40, %44
  %49 = phi i32 [ %47, %44 ], [ 3, %40 ]
  ret i32 %49
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare %"class.content::SyntheticPointerDriver"* @_ZN7content22SyntheticPointerDriver6CreateENS_5mojom17GestureSourceTypeE(i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content32SyntheticTouchscreenPinchGesture23ForwardTouchInputEventsERKN4base9TimeTicksEPNS_22SyntheticGestureTargetE(%"class.content::SyntheticTouchscreenPinchGesture"* nocapture, %"class.base::TimeTicks"* dereferenceable(8), %"class.content::SyntheticGestureTarget"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::TimeTicks", align 8
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = alloca %"class.base::TimeTicks", align 8
  %7 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 7
  %8 = load i32, i32* %7, align 8
  switch i32 %8, label %133 [
    i32 1, label %9
    i32 2, label %44
  ]

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 1, i32 1
  %11 = load float, float* %10, align 4
  %12 = fcmp oeq float %11, 1.000000e+00
  br i1 %12, label %13, label %14

13:                                               ; preds = %9
  store i32 3, i32* %7, align 8
  br label %133

14:                                               ; preds = %9
  tail call void @_ZN7content32SyntheticTouchscreenPinchGesture27SetupCoordinatesAndStopTimeEPNS_22SyntheticGestureTargetE(%"class.content::SyntheticTouchscreenPinchGesture"* %0, %"class.content::SyntheticGestureTarget"* %2)
  %15 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %16 = load %"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticPointerDriver"** %15, align 8
  %17 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 1, i32 2, i32 0
  %18 = load float, float* %17, align 4
  %19 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 3
  %20 = load float, float* %19, align 8
  %21 = bitcast %"class.base::TimeTicks"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #8
  %22 = tail call i64 @_ZN4base9TimeTicks3NowEv() #8
  %23 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %4, i64 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = bitcast %"class.content::SyntheticPointerDriver"* %16 to void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, i32, float, float, float, float, float, i32, i32, %"class.base::TimeTicks"*)***
  %25 = load void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, i32, float, float, float, float, float, i32, i32, %"class.base::TimeTicks"*)**, void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, i32, float, float, float, float, float, i32, i32, %"class.base::TimeTicks"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, i32, float, float, float, float, float, i32, i32, %"class.base::TimeTicks"*)*, void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, i32, float, float, float, float, float, i32, i32, %"class.base::TimeTicks"*)** %25, i64 3
  %27 = load void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, i32, float, float, float, float, float, i32, i32, %"class.base::TimeTicks"*)*, void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, i32, float, float, float, float, float, i32, i32, %"class.base::TimeTicks"*)** %26, align 8
  call void %27(%"class.content::SyntheticPointerDriver"* %16, float %18, float %20, i32 0, i32 1, i32 0, float 1.000000e+00, float 1.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, i32 0, i32 0, %"class.base::TimeTicks"* nonnull dereferenceable(8) %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #8
  %28 = load %"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticPointerDriver"** %15, align 8
  %29 = load float, float* %17, align 4
  %30 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 4
  %31 = load float, float* %30, align 4
  %32 = bitcast %"class.base::TimeTicks"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #8
  %33 = call i64 @_ZN4base9TimeTicks3NowEv() #8
  %34 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  store i64 %33, i64* %34, align 8
  %35 = bitcast %"class.content::SyntheticPointerDriver"* %28 to void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, i32, float, float, float, float, float, i32, i32, %"class.base::TimeTicks"*)***
  %36 = load void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, i32, float, float, float, float, float, i32, i32, %"class.base::TimeTicks"*)**, void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, i32, float, float, float, float, float, i32, i32, %"class.base::TimeTicks"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, i32, float, float, float, float, float, i32, i32, %"class.base::TimeTicks"*)*, void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, i32, float, float, float, float, float, i32, i32, %"class.base::TimeTicks"*)** %36, i64 3
  %38 = load void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, i32, float, float, float, float, float, i32, i32, %"class.base::TimeTicks"*)*, void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, i32, float, float, float, float, float, i32, i32, %"class.base::TimeTicks"*)** %37, align 8
  call void %38(%"class.content::SyntheticPointerDriver"* %28, float %29, float %31, i32 1, i32 1, i32 0, float 1.000000e+00, float 1.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, i32 0, i32 0, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #8
  %39 = load %"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticPointerDriver"** %15, align 8
  %40 = bitcast %"class.content::SyntheticPointerDriver"* %39 to void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)***
  %41 = load void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)**, void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)*, void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)** %41, i64 2
  %43 = load void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)*, void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)** %42, align 8
  call void %43(%"class.content::SyntheticPointerDriver"* %39, %"class.content::SyntheticGestureTarget"* %2, %"class.base::TimeTicks"* dereferenceable(8) %1) #8
  store i32 2, i32* %7, align 8
  br label %133

44:                                               ; preds = %3
  %45 = bitcast %"class.base::TimeTicks"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #8
  %46 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %6, i64 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 9
  %48 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %1, i64 0, i32 0, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %47, i64 0, i32 0, i32 0
  %51 = load i64, i64* %50, align 8
  %52 = icmp slt i64 %51, %49
  %53 = select i1 %52, %"class.base::TimeTicks"* %47, %"class.base::TimeTicks"* %1
  %54 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %53, i64 0, i32 0, i32 0
  %55 = load i64, i64* %54, align 8
  store i64 %55, i64* %46, align 8
  %56 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 9, i32 0, i32 0
  %57 = icmp slt i64 %55, %51
  br i1 %57, label %61, label %58

58:                                               ; preds = %44
  %59 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 5
  %60 = load float, float* %59, align 8
  br label %86

61:                                               ; preds = %44
  %62 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 1, i32 3
  %63 = load float, float* %62, align 8
  %64 = fpext float %63 to double
  %65 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 8, i32 0, i32 0
  %66 = load i64, i64* %65, align 8
  %67 = sub nsw i64 %55, %66
  %68 = add i64 %67, -9223372036854775807
  %69 = icmp ult i64 %68, 2
  br i1 %69, label %73, label %70

70:                                               ; preds = %61
  %71 = sitofp i64 %67 to double
  %72 = fdiv double %71, 1.000000e+06
  br label %76

73:                                               ; preds = %61
  %74 = icmp slt i64 %67, 0
  %75 = select i1 %74, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %76

76:                                               ; preds = %73, %70
  %77 = phi double [ %75, %73 ], [ %72, %70 ]
  %78 = fmul double %77, %64
  %79 = fptrunc double %78 to float
  %80 = fmul float %79, 5.000000e-01
  %81 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 1, i32 1
  %82 = load float, float* %81, align 4
  %83 = fcmp ogt float %82, 1.000000e+00
  %84 = fsub float -0.000000e+00, %80
  %85 = select i1 %83, float %84, float %80
  br label %86

86:                                               ; preds = %58, %76
  %87 = phi float [ %60, %58 ], [ %85, %76 ]
  %88 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 3
  %89 = load float, float* %88, align 8
  %90 = fadd float %87, %89
  %91 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 4
  %92 = load float, float* %91, align 4
  %93 = fsub float %92, %87
  %94 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %95 = load %"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticPointerDriver"** %94, align 8
  %96 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 1, i32 2, i32 0
  %97 = load float, float* %96, align 4
  %98 = bitcast %"class.content::SyntheticPointerDriver"* %95 to void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, float, float, float, float, float, i32, i32)***
  %99 = load void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, float, float, float, float, float, i32, i32)**, void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, float, float, float, float, float, i32, i32)*** %98, align 8
  %100 = getelementptr inbounds void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, float, float, float, float, float, i32, i32)*, void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, float, float, float, float, float, i32, i32)** %99, i64 4
  %101 = load void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, float, float, float, float, float, i32, i32)*, void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, float, float, float, float, float, i32, i32)** %100, align 8
  tail call void %101(%"class.content::SyntheticPointerDriver"* %95, float %97, float %90, i32 0, i32 0, float 1.000000e+00, float 1.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, i32 0, i32 0) #8
  %102 = load %"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticPointerDriver"** %94, align 8
  %103 = load float, float* %96, align 4
  %104 = bitcast %"class.content::SyntheticPointerDriver"* %102 to void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, float, float, float, float, float, i32, i32)***
  %105 = load void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, float, float, float, float, float, i32, i32)**, void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, float, float, float, float, float, i32, i32)*** %104, align 8
  %106 = getelementptr inbounds void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, float, float, float, float, float, i32, i32)*, void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, float, float, float, float, float, i32, i32)** %105, i64 4
  %107 = load void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, float, float, float, float, float, i32, i32)*, void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, float, float, float, float, float, i32, i32)** %106, align 8
  tail call void %107(%"class.content::SyntheticPointerDriver"* %102, float %103, float %93, i32 1, i32 0, float 1.000000e+00, float 1.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, i32 0, i32 0) #8
  %108 = load %"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticPointerDriver"** %94, align 8
  %109 = bitcast %"class.content::SyntheticPointerDriver"* %108 to void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)***
  %110 = load void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)**, void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)*** %109, align 8
  %111 = getelementptr inbounds void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)*, void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)** %110, i64 2
  %112 = load void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)*, void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)** %111, align 8
  call void %112(%"class.content::SyntheticPointerDriver"* %108, %"class.content::SyntheticGestureTarget"* %2, %"class.base::TimeTicks"* nonnull dereferenceable(8) %6) #8
  %113 = load i64, i64* %56, align 8
  %114 = load i64, i64* %46, align 8
  %115 = icmp slt i64 %114, %113
  br i1 %115, label %132, label %116

116:                                              ; preds = %86
  %117 = load %"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticPointerDriver"** %94, align 8
  %118 = bitcast %"class.content::SyntheticPointerDriver"* %117 to void (%"class.content::SyntheticPointerDriver"*, i32, i32, i32)***
  %119 = load void (%"class.content::SyntheticPointerDriver"*, i32, i32, i32)**, void (%"class.content::SyntheticPointerDriver"*, i32, i32, i32)*** %118, align 8
  %120 = getelementptr inbounds void (%"class.content::SyntheticPointerDriver"*, i32, i32, i32)*, void (%"class.content::SyntheticPointerDriver"*, i32, i32, i32)** %119, i64 5
  %121 = load void (%"class.content::SyntheticPointerDriver"*, i32, i32, i32)*, void (%"class.content::SyntheticPointerDriver"*, i32, i32, i32)** %120, align 8
  call void %121(%"class.content::SyntheticPointerDriver"* %117, i32 0, i32 1, i32 0) #8
  %122 = load %"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticPointerDriver"** %94, align 8
  %123 = bitcast %"class.content::SyntheticPointerDriver"* %122 to void (%"class.content::SyntheticPointerDriver"*, i32, i32, i32)***
  %124 = load void (%"class.content::SyntheticPointerDriver"*, i32, i32, i32)**, void (%"class.content::SyntheticPointerDriver"*, i32, i32, i32)*** %123, align 8
  %125 = getelementptr inbounds void (%"class.content::SyntheticPointerDriver"*, i32, i32, i32)*, void (%"class.content::SyntheticPointerDriver"*, i32, i32, i32)** %124, i64 5
  %126 = load void (%"class.content::SyntheticPointerDriver"*, i32, i32, i32)*, void (%"class.content::SyntheticPointerDriver"*, i32, i32, i32)** %125, align 8
  call void %126(%"class.content::SyntheticPointerDriver"* %122, i32 1, i32 1, i32 0) #8
  %127 = load %"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticPointerDriver"** %94, align 8
  %128 = bitcast %"class.content::SyntheticPointerDriver"* %127 to void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)***
  %129 = load void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)**, void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)*** %128, align 8
  %130 = getelementptr inbounds void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)*, void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)** %129, i64 2
  %131 = load void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)*, void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)** %130, align 8
  call void %131(%"class.content::SyntheticPointerDriver"* %127, %"class.content::SyntheticGestureTarget"* %2, %"class.base::TimeTicks"* nonnull dereferenceable(8) %6) #8
  store i32 3, i32* %7, align 8
  br label %132

132:                                              ; preds = %86, %116
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #8
  br label %133

133:                                              ; preds = %3, %132, %14, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7content32SyntheticTouchscreenPinchGesture16WaitForTargetAckEN4base12OnceCallbackIFvvEEEPNS_22SyntheticGestureTargetE(%"class.content::SyntheticTouchscreenPinchGesture"*, %"class.base::OnceCallback"* nocapture, %"class.content::SyntheticGestureTarget"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 1
  %6 = tail call i32 @_ZNK7content27SyntheticPinchGestureParams14GetGestureTypeEv(%"struct.content::SyntheticPinchGestureParams"* %5) #8
  %7 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 6
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = bitcast %"class.content::SyntheticGestureTarget"* %2 to void (%"class.content::SyntheticGestureTarget"*, i32, i32, %"class.base::OnceCallback"*)***
  %14 = load void (%"class.content::SyntheticGestureTarget"*, i32, i32, %"class.base::OnceCallback"*)**, void (%"class.content::SyntheticGestureTarget"*, i32, i32, %"class.base::OnceCallback"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.content::SyntheticGestureTarget"*, i32, i32, %"class.base::OnceCallback"*)*, void (%"class.content::SyntheticGestureTarget"*, i32, i32, %"class.base::OnceCallback"*)** %14, i64 9
  %16 = load void (%"class.content::SyntheticGestureTarget"*, i32, i32, %"class.base::OnceCallback"*)*, void (%"class.content::SyntheticGestureTarget"*, i32, i32, %"class.base::OnceCallback"*)** %15, align 8
  call void %16(%"class.content::SyntheticGestureTarget"* %2, i32 %6, i32 %8, %"class.base::OnceCallback"* nonnull %4) #8
  %17 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %17) #8
  ret void
}

declare i32 @_ZNK7content27SyntheticPinchGestureParams14GetGestureTypeEv(%"struct.content::SyntheticPinchGestureParams"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content32SyntheticTouchscreenPinchGesture27SetupCoordinatesAndStopTimeEPNS_22SyntheticGestureTargetE(%"class.content::SyntheticTouchscreenPinchGesture"* nocapture, %"class.content::SyntheticGestureTarget"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.content::SyntheticGestureTarget"* %1 to float (%"class.content::SyntheticGestureTarget"*)***
  %5 = load float (%"class.content::SyntheticGestureTarget"*)**, float (%"class.content::SyntheticGestureTarget"*)*** %4, align 8
  %6 = getelementptr inbounds float (%"class.content::SyntheticGestureTarget"*)*, float (%"class.content::SyntheticGestureTarget"*)** %5, i64 6
  %7 = load float (%"class.content::SyntheticGestureTarget"*)*, float (%"class.content::SyntheticGestureTarget"*)** %6, align 8
  %8 = tail call float %7(%"class.content::SyntheticGestureTarget"* %1) #8
  %9 = fmul float %8, 5.000000e-01
  %10 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 1, i32 1
  %11 = load float, float* %10, align 4
  %12 = fcmp ogt float %11, 1.000000e+00
  %13 = load float (%"class.content::SyntheticGestureTarget"*)**, float (%"class.content::SyntheticGestureTarget"*)*** %4, align 8
  %14 = getelementptr inbounds float (%"class.content::SyntheticGestureTarget"*)*, float (%"class.content::SyntheticGestureTarget"*)** %13, i64 7
  %15 = load float (%"class.content::SyntheticGestureTarget"*)*, float (%"class.content::SyntheticGestureTarget"*)** %14, align 8
  %16 = tail call float %15(%"class.content::SyntheticGestureTarget"* %1) #8
  %17 = fmul float %16, 5.000000e-01
  br i1 %12, label %18, label %22

18:                                               ; preds = %2
  %19 = fadd float %9, %17
  %20 = load float, float* %10, align 4
  %21 = fmul float %19, %20
  br label %26

22:                                               ; preds = %2
  %23 = load float, float* %10, align 4
  %24 = fdiv float %17, %23
  %25 = fadd float %9, %24
  br label %26

26:                                               ; preds = %22, %18
  %27 = phi float [ %21, %18 ], [ %17, %22 ]
  %28 = phi float [ %17, %18 ], [ %25, %22 ]
  %29 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 1, i32 2, i32 1
  %30 = load float, float* %29, align 4
  %31 = fsub float %30, %28
  %32 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 3
  store float %31, float* %32, align 8
  %33 = fadd float %28, %30
  %34 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 4
  store float %33, float* %34, align 4
  %35 = fsub float %28, %27
  %36 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 5
  store float %35, float* %36, align 8
  %37 = fmul float %35, 2.000000e+00
  %38 = tail call float @llvm.fabs.f32(float %37) #8
  %39 = fpext float %38 to double
  %40 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 1, i32 3
  %41 = load float, float* %40, align 8
  %42 = fpext float %41 to double
  %43 = fdiv double %39, %42
  %44 = fmul double %43, 1.000000e+06
  %45 = fptosi double %44 to i64
  %46 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 8, i32 0, i32 0
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %45, -9223372036854775807
  %49 = icmp ult i64 %48, 2
  br i1 %49, label %57, label %50

50:                                               ; preds = %26
  %51 = icmp slt i64 %45, 0
  %52 = select i1 %51, i64 -9223372036854775808, i64 9223372036854775807
  %53 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %47, i64 %45) #8
  %54 = extractvalue { i64, i1 } %53, 1
  %55 = extractvalue { i64, i1 } %53, 0
  %56 = select i1 %54, i64 %52, i64 %55, !prof !2
  br label %65

57:                                               ; preds = %26
  %58 = add i64 %47, -9223372036854775807
  %59 = icmp ugt i64 %58, 1
  %60 = icmp eq i64 %47, %45
  %61 = or i1 %59, %60
  br i1 %61, label %65, label %62

62:                                               ; preds = %57
  %63 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #8
  %64 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #8
  br label %65

65:                                               ; preds = %50, %57, %62
  %66 = phi i64 [ %56, %50 ], [ %45, %57 ], [ %45, %62 ]
  %67 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 9, i32 0, i32 0
  store i64 %66, i64* %67, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content32SyntheticTouchscreenPinchGesture16PressTouchPointsEPNS_22SyntheticGestureTargetERKN4base9TimeTicksE(%"class.content::SyntheticTouchscreenPinchGesture"* nocapture readonly, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::TimeTicks", align 8
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %7 = load %"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticPointerDriver"** %6, align 8
  %8 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 1, i32 2, i32 0
  %9 = load float, float* %8, align 4
  %10 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 3
  %11 = load float, float* %10, align 8
  %12 = bitcast %"class.base::TimeTicks"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #8
  %13 = tail call i64 @_ZN4base9TimeTicks3NowEv() #8
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %4, i64 0, i32 0, i32 0
  store i64 %13, i64* %14, align 8
  %15 = bitcast %"class.content::SyntheticPointerDriver"* %7 to void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, i32, float, float, float, float, float, i32, i32, %"class.base::TimeTicks"*)***
  %16 = load void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, i32, float, float, float, float, float, i32, i32, %"class.base::TimeTicks"*)**, void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, i32, float, float, float, float, float, i32, i32, %"class.base::TimeTicks"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, i32, float, float, float, float, float, i32, i32, %"class.base::TimeTicks"*)*, void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, i32, float, float, float, float, float, i32, i32, %"class.base::TimeTicks"*)** %16, i64 3
  %18 = load void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, i32, float, float, float, float, float, i32, i32, %"class.base::TimeTicks"*)*, void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, i32, float, float, float, float, float, i32, i32, %"class.base::TimeTicks"*)** %17, align 8
  call void %18(%"class.content::SyntheticPointerDriver"* %7, float %9, float %11, i32 0, i32 1, i32 0, float 1.000000e+00, float 1.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, i32 0, i32 0, %"class.base::TimeTicks"* nonnull dereferenceable(8) %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #8
  %19 = load %"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticPointerDriver"** %6, align 8
  %20 = load float, float* %8, align 4
  %21 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 4
  %22 = load float, float* %21, align 4
  %23 = bitcast %"class.base::TimeTicks"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #8
  %24 = call i64 @_ZN4base9TimeTicks3NowEv() #8
  %25 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  store i64 %24, i64* %25, align 8
  %26 = bitcast %"class.content::SyntheticPointerDriver"* %19 to void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, i32, float, float, float, float, float, i32, i32, %"class.base::TimeTicks"*)***
  %27 = load void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, i32, float, float, float, float, float, i32, i32, %"class.base::TimeTicks"*)**, void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, i32, float, float, float, float, float, i32, i32, %"class.base::TimeTicks"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, i32, float, float, float, float, float, i32, i32, %"class.base::TimeTicks"*)*, void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, i32, float, float, float, float, float, i32, i32, %"class.base::TimeTicks"*)** %27, i64 3
  %29 = load void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, i32, float, float, float, float, float, i32, i32, %"class.base::TimeTicks"*)*, void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, i32, float, float, float, float, float, i32, i32, %"class.base::TimeTicks"*)** %28, align 8
  call void %29(%"class.content::SyntheticPointerDriver"* %19, float %20, float %22, i32 1, i32 1, i32 0, float 1.000000e+00, float 1.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, i32 0, i32 0, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #8
  %30 = load %"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticPointerDriver"** %6, align 8
  %31 = bitcast %"class.content::SyntheticPointerDriver"* %30 to void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)***
  %32 = load void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)**, void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)*, void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)** %32, i64 2
  %34 = load void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)*, void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)** %33, align 8
  call void %34(%"class.content::SyntheticPointerDriver"* %30, %"class.content::SyntheticGestureTarget"* %1, %"class.base::TimeTicks"* dereferenceable(8) %2) #8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK7content32SyntheticTouchscreenPinchGesture14ClampTimestampERKN4base9TimeTicksE(%"class.content::SyntheticTouchscreenPinchGesture"* nocapture readonly, %"class.base::TimeTicks"* nocapture readonly dereferenceable(8)) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 9
  %4 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %1, i64 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp slt i64 %7, %5
  %9 = select i1 %8, %"class.base::TimeTicks"* %3, %"class.base::TimeTicks"* %1
  %10 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %9, i64 0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  ret i64 %11
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden float @_ZNK7content32SyntheticTouchscreenPinchGesture25GetDeltaForPointer0AtTimeERKN4base9TimeTicksE(%"class.content::SyntheticTouchscreenPinchGesture"* nocapture readonly, %"class.base::TimeTicks"* nocapture readonly dereferenceable(8)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 9, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %1, i64 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp slt i64 %6, %4
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 5
  %10 = load float, float* %9, align 8
  br label %36

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 1, i32 3
  %13 = load float, float* %12, align 8
  %14 = fpext float %13 to double
  %15 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 8, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = sub nsw i64 %6, %16
  %18 = add i64 %17, -9223372036854775807
  %19 = icmp ult i64 %18, 2
  br i1 %19, label %23, label %20

20:                                               ; preds = %11
  %21 = sitofp i64 %17 to double
  %22 = fdiv double %21, 1.000000e+06
  br label %26

23:                                               ; preds = %11
  %24 = icmp slt i64 %17, 0
  %25 = select i1 %24, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %26

26:                                               ; preds = %20, %23
  %27 = phi double [ %25, %23 ], [ %22, %20 ]
  %28 = fmul double %27, %14
  %29 = fptrunc double %28 to float
  %30 = fmul float %29, 5.000000e-01
  %31 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 1, i32 1
  %32 = load float, float* %31, align 4
  %33 = fcmp ogt float %32, 1.000000e+00
  %34 = fsub float -0.000000e+00, %30
  %35 = select i1 %33, float %34, float %30
  br label %36

36:                                               ; preds = %26, %8
  %37 = phi float [ %10, %8 ], [ %35, %26 ]
  ret float %37
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content32SyntheticTouchscreenPinchGesture15MoveTouchPointsEPNS_22SyntheticGestureTargetEfRKN4base9TimeTicksE(%"class.content::SyntheticTouchscreenPinchGesture"* nocapture readonly, %"class.content::SyntheticGestureTarget"*, float, %"class.base::TimeTicks"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 3
  %6 = load float, float* %5, align 8
  %7 = fadd float %6, %2
  %8 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 4
  %9 = load float, float* %8, align 4
  %10 = fsub float %9, %2
  %11 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %12 = load %"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticPointerDriver"** %11, align 8
  %13 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 1, i32 2, i32 0
  %14 = load float, float* %13, align 4
  %15 = bitcast %"class.content::SyntheticPointerDriver"* %12 to void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, float, float, float, float, float, i32, i32)***
  %16 = load void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, float, float, float, float, float, i32, i32)**, void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, float, float, float, float, float, i32, i32)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, float, float, float, float, float, i32, i32)*, void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, float, float, float, float, float, i32, i32)** %16, i64 4
  %18 = load void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, float, float, float, float, float, i32, i32)*, void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, float, float, float, float, float, i32, i32)** %17, align 8
  tail call void %18(%"class.content::SyntheticPointerDriver"* %12, float %14, float %7, i32 0, i32 0, float 1.000000e+00, float 1.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, i32 0, i32 0) #8
  %19 = load %"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticPointerDriver"** %11, align 8
  %20 = load float, float* %13, align 4
  %21 = bitcast %"class.content::SyntheticPointerDriver"* %19 to void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, float, float, float, float, float, i32, i32)***
  %22 = load void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, float, float, float, float, float, i32, i32)**, void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, float, float, float, float, float, i32, i32)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, float, float, float, float, float, i32, i32)*, void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, float, float, float, float, float, i32, i32)** %22, i64 4
  %24 = load void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, float, float, float, float, float, i32, i32)*, void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, float, float, float, float, float, i32, i32)** %23, align 8
  tail call void %24(%"class.content::SyntheticPointerDriver"* %19, float %20, float %10, i32 1, i32 0, float 1.000000e+00, float 1.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, i32 0, i32 0) #8
  %25 = load %"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticPointerDriver"** %11, align 8
  %26 = bitcast %"class.content::SyntheticPointerDriver"* %25 to void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)***
  %27 = load void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)**, void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)*, void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)** %27, i64 2
  %29 = load void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)*, void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)** %28, align 8
  tail call void %29(%"class.content::SyntheticPointerDriver"* %25, %"class.content::SyntheticGestureTarget"* %1, %"class.base::TimeTicks"* dereferenceable(8) %3) #8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK7content32SyntheticTouchscreenPinchGesture16HasReachedTargetERKN4base9TimeTicksE(%"class.content::SyntheticTouchscreenPinchGesture"* nocapture readonly, %"class.base::TimeTicks"* nocapture readonly dereferenceable(8)) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 9, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %1, i64 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp sge i64 %6, %4
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content32SyntheticTouchscreenPinchGesture18ReleaseTouchPointsEPNS_22SyntheticGestureTargetERKN4base9TimeTicksE(%"class.content::SyntheticTouchscreenPinchGesture"* nocapture readonly, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.content::SyntheticTouchscreenPinchGesture", %"class.content::SyntheticTouchscreenPinchGesture"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = load %"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticPointerDriver"** %4, align 8
  %6 = bitcast %"class.content::SyntheticPointerDriver"* %5 to void (%"class.content::SyntheticPointerDriver"*, i32, i32, i32)***
  %7 = load void (%"class.content::SyntheticPointerDriver"*, i32, i32, i32)**, void (%"class.content::SyntheticPointerDriver"*, i32, i32, i32)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.content::SyntheticPointerDriver"*, i32, i32, i32)*, void (%"class.content::SyntheticPointerDriver"*, i32, i32, i32)** %7, i64 5
  %9 = load void (%"class.content::SyntheticPointerDriver"*, i32, i32, i32)*, void (%"class.content::SyntheticPointerDriver"*, i32, i32, i32)** %8, align 8
  tail call void %9(%"class.content::SyntheticPointerDriver"* %5, i32 0, i32 1, i32 0) #8
  %10 = load %"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticPointerDriver"** %4, align 8
  %11 = bitcast %"class.content::SyntheticPointerDriver"* %10 to void (%"class.content::SyntheticPointerDriver"*, i32, i32, i32)***
  %12 = load void (%"class.content::SyntheticPointerDriver"*, i32, i32, i32)**, void (%"class.content::SyntheticPointerDriver"*, i32, i32, i32)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.content::SyntheticPointerDriver"*, i32, i32, i32)*, void (%"class.content::SyntheticPointerDriver"*, i32, i32, i32)** %12, i64 5
  %14 = load void (%"class.content::SyntheticPointerDriver"*, i32, i32, i32)*, void (%"class.content::SyntheticPointerDriver"*, i32, i32, i32)** %13, align 8
  tail call void %14(%"class.content::SyntheticPointerDriver"* %10, i32 1, i32 1, i32 0) #8
  %15 = load %"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticPointerDriver"** %4, align 8
  %16 = bitcast %"class.content::SyntheticPointerDriver"* %15 to void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)***
  %17 = load void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)**, void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)*, void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)** %17, i64 2
  %19 = load void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)*, void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)** %18, align 8
  tail call void %19(%"class.content::SyntheticPointerDriver"* %15, %"class.content::SyntheticGestureTarget"* %1, %"class.base::TimeTicks"* dereferenceable(8) %2) #8
  ret void
}

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #1

declare zeroext i1 @_ZNK7content16SyntheticGesture26AllowHighFrequencyDispatchEv(%"class.content::SyntheticGesture"*) unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #7

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
