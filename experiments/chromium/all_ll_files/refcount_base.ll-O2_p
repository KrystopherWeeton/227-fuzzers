; ModuleID = '../../native_client/src/shared/platform/refcount_base.cc'
source_filename = "../../native_client/src/shared/platform/refcount_base.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.nacl::RefCountBase" = type <{ i32 (...)**, %struct.NaClMutex, i32, [4 x i8] }>
%struct.NaClMutex = type { %union.pthread_mutex_t, i32 }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }

@_ZTVN4nacl12RefCountBaseE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.nacl::RefCountBase"*)* @_ZN4nacl12RefCountBaseD2Ev to i8*), i8* bitcast (void (%"class.nacl::RefCountBase"*)* @_ZN4nacl12RefCountBaseD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [49 x i8] c"scoped_ptr_refcount_obj: could not create mutex\0A\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"scoped_ptr_refcount_obj: refcount overflow on 0x%08lx\0A\00", align 1
@.str.2 = private unnamed_addr constant [65 x i8] c"scoped_ptr_refcount_obj: Unref on zero refcount object: 0x%08lx\0A\00", align 1
@.str.3 = private unnamed_addr constant [40 x i8] c"Fatal error in file %s, line %d: !(%s)\0A\00", align 1
@.str.4 = private unnamed_addr constant [57 x i8] c"../../native_client/src/shared/platform/refcount_base.cc\00", align 1
@.str.5 = private unnamed_addr constant [15 x i8] c"refcount_ == 0\00", align 1

@_ZN4nacl12RefCountBaseC1Ev = hidden unnamed_addr alias void (%"class.nacl::RefCountBase"*), void (%"class.nacl::RefCountBase"*)* @_ZN4nacl12RefCountBaseC2Ev
@_ZN4nacl12RefCountBaseD1Ev = hidden unnamed_addr alias void (%"class.nacl::RefCountBase"*), void (%"class.nacl::RefCountBase"*)* @_ZN4nacl12RefCountBaseD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4nacl12RefCountBaseC2Ev(%"class.nacl::RefCountBase"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.nacl::RefCountBase", %"class.nacl::RefCountBase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4nacl12RefCountBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.nacl::RefCountBase", %"class.nacl::RefCountBase"* %0, i64 0, i32 2
  store i32 1, i32* %3, align 8
  %4 = getelementptr inbounds %"class.nacl::RefCountBase", %"class.nacl::RefCountBase"* %0, i64 0, i32 1
  %5 = tail call i32 @NaClMutexCtor(%struct.NaClMutex* %4) #3
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %8

7:                                                ; preds = %1
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0)) #3
  br label %8

8:                                                ; preds = %1, %7
  ret void
}

declare i32 @NaClMutexCtor(%struct.NaClMutex*) local_unnamed_addr #1

declare void @NaClLog(i32, i8*, ...) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.nacl::RefCountBase"* @_ZN4nacl12RefCountBase3RefEv(%"class.nacl::RefCountBase"* returned) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.nacl::RefCountBase", %"class.nacl::RefCountBase"* %0, i64 0, i32 1
  tail call void @NaClXMutexLock(%struct.NaClMutex* %2) #3
  %3 = getelementptr inbounds %"class.nacl::RefCountBase", %"class.nacl::RefCountBase"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = add i32 %4, 1
  store i32 %5, i32* %3, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %1
  %8 = ptrtoint %"class.nacl::RefCountBase"* %0 to i64
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i64 %8) #3
  br label %9

9:                                                ; preds = %7, %1
  tail call void @NaClXMutexUnlock(%struct.NaClMutex* %2) #3
  ret %"class.nacl::RefCountBase"* %0
}

declare void @NaClXMutexLock(%struct.NaClMutex*) local_unnamed_addr #1

declare void @NaClXMutexUnlock(%struct.NaClMutex*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4nacl12RefCountBase5UnrefEv(%"class.nacl::RefCountBase"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.nacl::RefCountBase", %"class.nacl::RefCountBase"* %0, i64 0, i32 1
  tail call void @NaClXMutexLock(%struct.NaClMutex* %2) #3
  %3 = getelementptr inbounds %"class.nacl::RefCountBase", %"class.nacl::RefCountBase"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  %7 = ptrtoint %"class.nacl::RefCountBase"* %0 to i64
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.2, i64 0, i64 0), i64 %7) #3
  %8 = load i32, i32* %3, align 8
  br label %9

9:                                                ; preds = %6, %1
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ]
  %11 = add i32 %10, -1
  store i32 %11, i32* %3, align 8
  %12 = icmp ne i32 %11, 0
  tail call void @NaClXMutexUnlock(%struct.NaClMutex* %2) #3
  %13 = icmp eq %"class.nacl::RefCountBase"* %0, null
  %14 = or i1 %13, %12
  br i1 %14, label %20, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.nacl::RefCountBase"* %0 to void (%"class.nacl::RefCountBase"*)***
  %17 = load void (%"class.nacl::RefCountBase"*)**, void (%"class.nacl::RefCountBase"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.nacl::RefCountBase"*)*, void (%"class.nacl::RefCountBase"*)** %17, i64 1
  %19 = load void (%"class.nacl::RefCountBase"*)*, void (%"class.nacl::RefCountBase"*)** %18, align 8
  tail call void %19(%"class.nacl::RefCountBase"* nonnull %0) #3
  br label %20

20:                                               ; preds = %9, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4nacl12RefCountBaseD2Ev(%"class.nacl::RefCountBase"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.nacl::RefCountBase", %"class.nacl::RefCountBase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4nacl12RefCountBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.nacl::RefCountBase", %"class.nacl::RefCountBase"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.4, i64 0, i64 0), i32 49, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i64 0, i64 0)) #3
  br label %7

7:                                                ; preds = %1, %6
  %8 = getelementptr inbounds %"class.nacl::RefCountBase", %"class.nacl::RefCountBase"* %0, i64 0, i32 1
  tail call void @NaClMutexDtor(%struct.NaClMutex* %8) #3
  ret void
}

declare void @NaClMutexDtor(%struct.NaClMutex*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4nacl12RefCountBaseD0Ev(%"class.nacl::RefCountBase"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.nacl::RefCountBase", %"class.nacl::RefCountBase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4nacl12RefCountBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.nacl::RefCountBase", %"class.nacl::RefCountBase"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.4, i64 0, i64 0), i32 49, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i64 0, i64 0)) #3
  br label %7

7:                                                ; preds = %1, %6
  %8 = getelementptr inbounds %"class.nacl::RefCountBase", %"class.nacl::RefCountBase"* %0, i64 0, i32 1
  tail call void @NaClMutexDtor(%struct.NaClMutex* %8) #3
  %9 = bitcast %"class.nacl::RefCountBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %9) #4
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
