; ModuleID = '../../net/cert/ct_log_verifier.cc'
source_filename = "../../net/cert/ct_log_verifier.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::CTLogVerifier" = type { %"class.base::RefCountedThreadSafe", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, %struct.evp_pkey_st* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%struct.evp_pkey_st = type { i32, i32, %union.anon.2, %struct.evp_pkey_asn1_method_st* }
%union.anon.2 = type { i8* }
%struct.evp_pkey_asn1_method_st = type opaque
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.crypto::OpenSSLErrStackTracer" = type { %"class.base::Location" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%struct.cbs_st = type { i8*, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.net::ct::SignedEntryData" = type { i32, %"class.std::__1::basic_string", %"struct.net::SHA256HashValue", %"class.std::__1::basic_string" }
%"struct.net::SHA256HashValue" = type { [32 x i8] }
%"struct.net::ct::SignedCertificateTimestamp" = type { %"class.base::RefCountedThreadSafe.4", i32, %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", %"struct.net::ct::DigitallySigned", i32, %"class.std::__1::basic_string" }
%"class.base::RefCountedThreadSafe.4" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"struct.net::ct::DigitallySigned" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.bssl::internal::StackAllocated" = type { %struct.env_md_ctx_st }
%struct.env_md_ctx_st = type { %struct.env_md_st*, i8*, %struct.evp_pkey_ctx_st*, %struct.evp_md_pctx_ops* }
%struct.env_md_st = type opaque
%struct.evp_pkey_ctx_st = type opaque
%struct.evp_md_pctx_ops = type opaque
%struct.engine_st = type opaque
%"struct.net::ct::SignedTreeHead" = type { i32, %"class.base::Time", i64, [32 x i8], %"struct.net::ct::DigitallySigned", %"class.std::__1::basic_string" }
%"struct.net::ct::MerkleConsistencyProof" = type { %"class.std::__1::basic_string", %"class.std::__1::vector", i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.net::ct::MerkleAuditProof" = type { i64, i64, %"class.std::__1::vector" }

@_ZN3net12_GLOBAL__N_122kSHA256EmptyStringHashE = internal constant [32 x i8] c"\E3\B0\C4B\98\FC\1C\14\9A\FB\F4\C8\99o\B9$'\AEA\E4d\9B\93L\A4\95\99\1BxR\B8U", align 16
@.str = private unnamed_addr constant [15 x i8] c"~CTLogVerifier\00", align 1
@.str.1 = private unnamed_addr constant [34 x i8] c"../../net/cert/ct_log_verifier.cc\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"Init\00", align 1
@.str.3 = private unnamed_addr constant [16 x i8] c"VerifySignature\00", align 1

@_ZN3net13CTLogVerifierC1ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE = hidden unnamed_addr alias void (%"class.net::CTLogVerifier"*, %"class.std::__1::basic_string"*), void (%"class.net::CTLogVerifier"*, %"class.std::__1::basic_string"*)* @_ZN3net13CTLogVerifierC2ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
@_ZN3net13CTLogVerifierD1Ev = hidden unnamed_addr alias void (%"class.net::CTLogVerifier"*), void (%"class.net::CTLogVerifier"*)* @_ZN3net13CTLogVerifierD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::CTLogVerifier"* @_ZN3net13CTLogVerifier6CreateERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS3_12basic_stringIcS5_NS3_9allocatorIcEEEE(%"class.base::BasicStringPiece"* nocapture readonly dereferenceable(16), %"class.std::__1::basic_string"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca [15 x i8], align 8
  %4 = tail call i8* @_Znwm(i64 72) #8
  %5 = bitcast i8* %4 to %"class.net::CTLogVerifier"*
  %6 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %7 = bitcast %"class.std::__1::basic_string"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = bitcast i64* %9 to i8*
  %11 = getelementptr inbounds [15 x i8], [15 x i8]* %3, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 %10, i64 15, i1 false)
  %12 = getelementptr inbounds i8, i8* %6, i64 23
  %13 = load i8, i8* %12, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #9
  %14 = bitcast i8* %4 to i32*
  store i32 0, i32* %14, align 4
  %15 = getelementptr inbounds i8, i8* %4, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #9
  %16 = getelementptr inbounds i8, i8* %4, i64 32
  %17 = bitcast i8* %16 to i64*
  store i64 %8, i64* %17, align 8
  %18 = getelementptr inbounds i8, i8* %4, i64 40
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* nonnull align 8 %11, i64 15, i1 false)
  %19 = getelementptr inbounds i8, i8* %4, i64 55
  store i8 %13, i8* %19, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 15, i1 false)
  %20 = getelementptr inbounds i8, i8* %4, i64 56
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #9
  %21 = ptrtoint i8* %4 to i64
  %22 = atomicrmw add i32* %14, i32 1 monotonic
  %23 = tail call zeroext i1 @_ZN3net13CTLogVerifier4InitERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::CTLogVerifier"* nonnull %5, %"class.base::BasicStringPiece"* dereferenceable(16) %0)
  br i1 %23, label %28, label %24

24:                                               ; preds = %2
  %25 = atomicrmw sub i32* %14, i32 1 acq_rel
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  tail call void @_ZN3net13CTLogVerifierD2Ev(%"class.net::CTLogVerifier"* nonnull %5) #9
  tail call void @_ZdlPv(i8* nonnull %4) #8
  br label %28

28:                                               ; preds = %2, %24, %27
  %29 = phi i64 [ 0, %24 ], [ 0, %27 ], [ %21, %2 ]
  %30 = inttoptr i64 %29 to %"class.net::CTLogVerifier"*
  ret %"class.net::CTLogVerifier"* %30
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net13CTLogVerifier4InitERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::CTLogVerifier"* nocapture, %"class.base::BasicStringPiece"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.crypto::OpenSSLErrStackTracer", align 8
  %4 = alloca %"class.base::Location", align 8
  %5 = alloca %struct.cbs_st, align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = bitcast %"class.crypto::OpenSSLErrStackTracer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false)
  %8 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #9
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.1, i64 0, i64 0), i32 303) #9
  %9 = getelementptr inbounds %"class.crypto::OpenSSLErrStackTracer", %"class.crypto::OpenSSLErrStackTracer"* %3, i64 0, i32 0
  call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* nonnull %9, %"class.base::Location"* nonnull dereferenceable(32) %4) #9
  call void @_ZN6crypto17EnsureOpenSSLInitEv() #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #9
  %10 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #9
  %11 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 0, i32 0
  %12 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  %14 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  call void @CBS_init(%struct.cbs_st* nonnull %5, i8* %13, i64 %15) #9
  %16 = call %struct.evp_pkey_st* @EVP_parse_public_key(%struct.cbs_st* nonnull %5) #9
  %17 = getelementptr inbounds %"class.net::CTLogVerifier", %"class.net::CTLogVerifier"* %0, i64 0, i32 5
  store %struct.evp_pkey_st* %16, %struct.evp_pkey_st** %17, align 8
  %18 = icmp eq %struct.evp_pkey_st* %16, null
  br i1 %18, label %50, label %19

19:                                               ; preds = %2
  %20 = call i64 @CBS_len(%struct.cbs_st* nonnull %5) #9
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %22, label %50

22:                                               ; preds = %19
  %23 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #9
  %24 = load i8*, i8** %11, align 8
  %25 = load i64, i64* %14, align 8
  call void @_ZN6crypto16SHA256HashStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %6, i8* %24, i64 %25) #9
  %26 = getelementptr inbounds %"class.net::CTLogVerifier", %"class.net::CTLogVerifier"* %0, i64 0, i32 1
  %27 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %22
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %33) #8
  br label %34

34:                                               ; preds = %31, %22
  %35 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* nonnull align 8 %23, i64 24, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #9
  %36 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %17, align 8
  %37 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %36, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = call i32 @EVP_PKEY_type(i32 %38) #9
  switch i32 %39, label %50 [
    i32 6, label %43
    i32 408, label %40
  ]

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.net::CTLogVerifier", %"class.net::CTLogVerifier"* %0, i64 0, i32 3
  store i32 4, i32* %41, align 8
  %42 = getelementptr inbounds %"class.net::CTLogVerifier", %"class.net::CTLogVerifier"* %0, i64 0, i32 4
  store i32 3, i32* %42, align 4
  br label %49

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.net::CTLogVerifier", %"class.net::CTLogVerifier"* %0, i64 0, i32 3
  store i32 4, i32* %44, align 8
  %45 = getelementptr inbounds %"class.net::CTLogVerifier", %"class.net::CTLogVerifier"* %0, i64 0, i32 4
  store i32 1, i32* %45, align 4
  %46 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %17, align 8
  %47 = call i32 @EVP_PKEY_size(%struct.evp_pkey_st* %46) #9
  %48 = icmp slt i32 %47, 256
  br i1 %48, label %50, label %49

49:                                               ; preds = %40, %43
  br label %50

50:                                               ; preds = %43, %34, %2, %19, %49
  %51 = phi i1 [ true, %49 ], [ false, %19 ], [ false, %2 ], [ false, %34 ], [ false, %43 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #9
  call void @_ZN6crypto20ClearOpenSSLERRStackERKN4base8LocationE(%"class.base::Location"* nonnull dereferenceable(32) %9) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #9
  ret i1 %51
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13CTLogVerifierC2ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.net::CTLogVerifier"* nocapture, %"class.std::__1::basic_string"* nocapture) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::CTLogVerifier", %"class.net::CTLogVerifier"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %3, align 4
  %4 = getelementptr inbounds %"class.net::CTLogVerifier", %"class.net::CTLogVerifier"* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #9
  %6 = getelementptr inbounds %"class.net::CTLogVerifier", %"class.net::CTLogVerifier"* %0, i64 0, i32 2
  %7 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %8 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #9
  %9 = getelementptr inbounds %"class.net::CTLogVerifier", %"class.net::CTLogVerifier"* %0, i64 0, i32 3
  %10 = bitcast i32* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net13CTLogVerifier6VerifyERKNS_2ct15SignedEntryDataERKNS1_26SignedCertificateTimestampE(%"class.net::CTLogVerifier"* nocapture readonly, %"struct.net::ct::SignedEntryData"* dereferenceable(88), %"struct.net::ct::SignedCertificateTimestamp"* dereferenceable(128)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.base::BasicStringPiece", align 8
  %7 = alloca %"class.base::BasicStringPiece", align 8
  %8 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %2, i64 0, i32 2
  %9 = getelementptr inbounds %"class.net::CTLogVerifier", %"class.net::CTLogVerifier"* %0, i64 0, i32 1
  %10 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %12 to i64
  %17 = select i1 %13, i64 %15, i64 %16
  %18 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  %22 = getelementptr inbounds %"class.net::CTLogVerifier", %"class.net::CTLogVerifier"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = zext i8 %20 to i64
  %25 = select i1 %21, i64 %23, i64 %24
  %26 = icmp eq i64 %17, %25
  br i1 %26, label %27, label %127

27:                                               ; preds = %3
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %31 = select i1 %13, i8* %29, i8* %30
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %35 = select i1 %21, i8* %33, i8* %34
  %36 = icmp eq i64 %17, 0
  br i1 %13, label %43, label %37

37:                                               ; preds = %27
  br i1 %36, label %59, label %38

38:                                               ; preds = %37
  %39 = ptrtoint i8* %29 to i64
  %40 = trunc i64 %39 to i8
  %41 = load i8, i8* %35, align 1
  %42 = icmp eq i8 %41, %40
  br i1 %42, label %44, label %127

43:                                               ; preds = %27
  br i1 %36, label %59, label %56

44:                                               ; preds = %38, %51
  %45 = phi i64 [ %48, %51 ], [ %16, %38 ]
  %46 = phi i8* [ %49, %51 ], [ %30, %38 ]
  %47 = phi i8* [ %52, %51 ], [ %35, %38 ]
  %48 = add i64 %45, -1
  %49 = getelementptr inbounds i8, i8* %46, i64 1
  %50 = icmp eq i64 %48, 0
  br i1 %50, label %59, label %51

51:                                               ; preds = %44
  %52 = getelementptr inbounds i8, i8* %47, i64 1
  %53 = load i8, i8* %49, align 1
  %54 = load i8, i8* %52, align 1
  %55 = icmp eq i8 %53, %54
  br i1 %55, label %44, label %127

56:                                               ; preds = %43
  %57 = tail call i32 @bcmp(i8* %31, i8* %35, i64 %17) #9
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %127

59:                                               ; preds = %44, %56, %37, %43
  %60 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %2, i64 0, i32 5
  %61 = getelementptr inbounds %"class.net::CTLogVerifier", %"class.net::CTLogVerifier"* %0, i64 0, i32 3
  %62 = load i32, i32* %61, align 8
  %63 = getelementptr inbounds %"class.net::CTLogVerifier", %"class.net::CTLogVerifier"* %0, i64 0, i32 4
  %64 = load i32, i32* %63, align 4
  %65 = tail call zeroext i1 @_ZNK3net2ct15DigitallySigned24SignatureParametersMatchENS1_13HashAlgorithmENS1_18SignatureAlgorithmE(%"struct.net::ct::DigitallySigned"* %60, i32 %62, i32 %64) #9
  br i1 %65, label %66, label %127

66:                                               ; preds = %59
  %67 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %67) #9
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 0, i64 24, i1 false) #9
  %69 = call zeroext i1 @_ZN3net2ct17EncodeSignedEntryERKNS0_15SignedEntryDataEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"struct.net::ct::SignedEntryData"* dereferenceable(88) %1, %"class.std::__1::basic_string"* nonnull %4) #9
  br i1 %69, label %70, label %118

70:                                               ; preds = %66
  %71 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #9
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 24, i1 false) #9
  %73 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %2, i64 0, i32 3
  %74 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %2, i64 0, i32 4
  %75 = call zeroext i1 @_ZN3net2ct21EncodeV1SCTSignedDataERKN4base4TimeERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEESD_PSB_(%"class.base::Time"* dereferenceable(8) %73, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, %"class.std::__1::basic_string"* dereferenceable(24) %74, %"class.std::__1::basic_string"* nonnull %5) #9
  br i1 %75, label %78, label %76

76:                                               ; preds = %70
  %77 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %109

78:                                               ; preds = %70
  %79 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %80 = bitcast %"class.base::BasicStringPiece"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %80) #9
  %81 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 0
  %82 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %83 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %82, i64 0, i32 1, i32 0
  %84 = load i8, i8* %83, align 1
  %85 = icmp slt i8 %84, 0
  %86 = load i8*, i8** %72, align 8
  %87 = select i1 %85, i8* %86, i8* %71
  store i8* %87, i8** %81, align 8
  %88 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 1
  %89 = load i64, i64* %79, align 8
  %90 = zext i8 %84 to i64
  %91 = select i1 %85, i64 %89, i64 %90
  store i64 %91, i64* %88, align 8
  %92 = bitcast %"class.base::BasicStringPiece"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %92) #9
  %93 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %2, i64 0, i32 5, i32 2
  %94 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 0
  %95 = bitcast %"class.std::__1::basic_string"* %93 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %96 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %95, i64 0, i32 1, i32 0
  %97 = load i8, i8* %96, align 1
  %98 = icmp slt i8 %97, 0
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %93, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load i8*, i8** %99, align 8
  %101 = bitcast %"class.std::__1::basic_string"* %93 to i8*
  %102 = select i1 %98, i8* %100, i8* %101
  store i8* %102, i8** %94, align 8
  %103 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 1
  %104 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %2, i64 0, i32 5, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %105 = load i64, i64* %104, align 8
  %106 = zext i8 %97 to i64
  %107 = select i1 %98, i64 %105, i64 %106
  store i64 %107, i64* %103, align 8
  %108 = call zeroext i1 @_ZNK3net13CTLogVerifier15VerifySignatureERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES8_(%"class.net::CTLogVerifier"* %0, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %6, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %7)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %92) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %80) #9
  br label %109

109:                                              ; preds = %76, %78
  %110 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %77, %76 ], [ %82, %78 ]
  %111 = phi i1 [ false, %76 ], [ %108, %78 ]
  %112 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %110, i64 0, i32 1, i32 0
  %113 = load i8, i8* %112, align 1
  %114 = icmp slt i8 %113, 0
  br i1 %114, label %115, label %117

115:                                              ; preds = %109
  %116 = load i8*, i8** %72, align 8
  call void @_ZdlPv(i8* %116) #8
  br label %117

117:                                              ; preds = %109, %115
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #9
  br label %118

118:                                              ; preds = %66, %117
  %119 = phi i1 [ %111, %117 ], [ false, %66 ]
  %120 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  %122 = load i8, i8* %121, align 1
  %123 = icmp slt i8 %122, 0
  br i1 %123, label %124, label %126

124:                                              ; preds = %118
  %125 = load i8*, i8** %68, align 8
  call void @_ZdlPv(i8* %125) #8
  br label %126

126:                                              ; preds = %118, %124
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %67) #9
  br label %127

127:                                              ; preds = %51, %38, %56, %3, %59, %126
  %128 = phi i1 [ %119, %126 ], [ false, %56 ], [ false, %59 ], [ false, %3 ], [ false, %38 ], [ false, %51 ]
  ret i1 %128
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net13CTLogVerifier24SignatureParametersMatchERKNS_2ct15DigitallySignedE(%"class.net::CTLogVerifier"* nocapture readonly, %"struct.net::ct::DigitallySigned"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::CTLogVerifier", %"class.net::CTLogVerifier"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.net::CTLogVerifier", %"class.net::CTLogVerifier"* %0, i64 0, i32 4
  %6 = load i32, i32* %5, align 4
  %7 = tail call zeroext i1 @_ZNK3net2ct15DigitallySigned24SignatureParametersMatchENS1_13HashAlgorithmENS1_18SignatureAlgorithmE(%"struct.net::ct::DigitallySigned"* %1, i32 %4, i32 %6) #9
  ret i1 %7
}

declare zeroext i1 @_ZN3net2ct17EncodeSignedEntryERKNS0_15SignedEntryDataEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"struct.net::ct::SignedEntryData"* dereferenceable(88), %"class.std::__1::basic_string"*) local_unnamed_addr #3

declare zeroext i1 @_ZN3net2ct21EncodeV1SCTSignedDataERKN4base4TimeERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEESD_PSB_(%"class.base::Time"* dereferenceable(8), %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net13CTLogVerifier15VerifySignatureERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES8_(%"class.net::CTLogVerifier"* nocapture readonly, %"class.base::BasicStringPiece"* nocapture readonly dereferenceable(16), %"class.base::BasicStringPiece"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.crypto::OpenSSLErrStackTracer", align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = alloca %"class.bssl::internal::StackAllocated", align 8
  %7 = bitcast %"class.crypto::OpenSSLErrStackTracer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false)
  %8 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #9
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.1, i64 0, i64 0), i32 343) #9
  %9 = getelementptr inbounds %"class.crypto::OpenSSLErrStackTracer", %"class.crypto::OpenSSLErrStackTracer"* %4, i64 0, i32 0
  call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* nonnull %9, %"class.base::Location"* nonnull dereferenceable(32) %5) #9
  call void @_ZN6crypto17EnsureOpenSSLInitEv() #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #9
  %10 = getelementptr inbounds %"class.net::CTLogVerifier", %"class.net::CTLogVerifier"* %0, i64 0, i32 3
  %11 = load i32, i32* %10, align 8
  switch i32 %11, label %52 [
    i32 1, label %12
    i32 2, label %14
    i32 3, label %16
    i32 4, label %18
    i32 5, label %20
    i32 6, label %22
  ]

12:                                               ; preds = %3
  %13 = call %struct.env_md_st* @EVP_md5() #9
  br label %24

14:                                               ; preds = %3
  %15 = call %struct.env_md_st* @EVP_sha1() #9
  br label %24

16:                                               ; preds = %3
  %17 = call %struct.env_md_st* @EVP_sha224() #9
  br label %24

18:                                               ; preds = %3
  %19 = call %struct.env_md_st* @EVP_sha256() #9
  br label %24

20:                                               ; preds = %3
  %21 = call %struct.env_md_st* @EVP_sha384() #9
  br label %24

22:                                               ; preds = %3
  %23 = call %struct.env_md_st* @EVP_sha512() #9
  br label %24

24:                                               ; preds = %12, %14, %16, %18, %20, %22
  %25 = phi %struct.env_md_st* [ %23, %22 ], [ %21, %20 ], [ %19, %18 ], [ %17, %16 ], [ %15, %14 ], [ %13, %12 ]
  %26 = icmp eq %struct.env_md_st* %25, null
  br i1 %26, label %52, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.bssl::internal::StackAllocated"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %28) #9
  %29 = getelementptr inbounds %"class.bssl::internal::StackAllocated", %"class.bssl::internal::StackAllocated"* %6, i64 0, i32 0
  %30 = bitcast %"class.bssl::internal::StackAllocated"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 32, i1 false)
  call void @EVP_MD_CTX_init(%struct.env_md_ctx_st* nonnull %29) #9
  %31 = getelementptr inbounds %"class.net::CTLogVerifier", %"class.net::CTLogVerifier"* %0, i64 0, i32 5
  %32 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %31, align 8
  %33 = call i32 @EVP_DigestVerifyInit(%struct.env_md_ctx_st* nonnull %29, %struct.evp_pkey_ctx_st** null, %struct.env_md_st* nonnull %25, %struct.engine_st* null, %struct.evp_pkey_st* %32) #9
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %49, label %35

35:                                               ; preds = %27
  %36 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = call i32 @EVP_DigestVerifyUpdate(%struct.env_md_ctx_st* nonnull %29, i8* %37, i64 %39) #9
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %49, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %2, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %2, i64 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = call i32 @EVP_DigestVerifyFinal(%struct.env_md_ctx_st* nonnull %29, i8* %44, i64 %46) #9
  %48 = icmp ne i32 %47, 0
  br label %49

49:                                               ; preds = %35, %27, %42
  %50 = phi i1 [ false, %35 ], [ false, %27 ], [ %48, %42 ]
  %51 = call i32 @EVP_MD_CTX_cleanup(%struct.env_md_ctx_st* nonnull %29) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %28) #9
  br label %52

52:                                               ; preds = %3, %24, %49
  %53 = phi i1 [ %50, %49 ], [ false, %24 ], [ false, %3 ]
  call void @_ZN6crypto20ClearOpenSSLERRStackERKN4base8LocationE(%"class.base::Location"* nonnull dereferenceable(32) %9) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #9
  ret i1 %53
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net13CTLogVerifier20VerifySignedTreeHeadERKNS_2ct14SignedTreeHeadE(%"class.net::CTLogVerifier"* nocapture readonly, %"struct.net::ct::SignedTreeHead"* dereferenceable(112)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.base::BasicStringPiece", align 8
  %5 = alloca %"class.base::BasicStringPiece", align 8
  %6 = getelementptr inbounds %"struct.net::ct::SignedTreeHead", %"struct.net::ct::SignedTreeHead"* %1, i64 0, i32 4
  %7 = getelementptr inbounds %"class.net::CTLogVerifier", %"class.net::CTLogVerifier"* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.net::CTLogVerifier", %"class.net::CTLogVerifier"* %0, i64 0, i32 4
  %10 = load i32, i32* %9, align 4
  %11 = tail call zeroext i1 @_ZNK3net2ct15DigitallySigned24SignatureParametersMatchENS1_13HashAlgorithmENS1_18SignatureAlgorithmE(%"struct.net::ct::DigitallySigned"* %6, i32 %8, i32 %10) #9
  br i1 %11, label %12, label %66

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #9
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 24, i1 false) #9
  %15 = call zeroext i1 @_ZN3net2ct23EncodeTreeHeadSignatureERKNS0_14SignedTreeHeadEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"struct.net::ct::SignedTreeHead"* dereferenceable(112) %1, %"class.std::__1::basic_string"* nonnull %3) #9
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %57

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = bitcast %"class.base::BasicStringPiece"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #9
  %21 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 0
  %22 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  %26 = load i8*, i8** %14, align 8
  %27 = select i1 %25, i8* %26, i8* %13
  store i8* %27, i8** %21, align 8
  %28 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 1
  %29 = load i64, i64* %19, align 8
  %30 = zext i8 %24 to i64
  %31 = select i1 %25, i64 %29, i64 %30
  store i64 %31, i64* %28, align 8
  %32 = bitcast %"class.base::BasicStringPiece"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #9
  %33 = getelementptr inbounds %"struct.net::ct::SignedTreeHead", %"struct.net::ct::SignedTreeHead"* %1, i64 0, i32 4, i32 2
  %34 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 0
  %35 = bitcast %"class.std::__1::basic_string"* %33 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = bitcast %"class.std::__1::basic_string"* %33 to i8*
  %42 = select i1 %38, i8* %40, i8* %41
  store i8* %42, i8** %34, align 8
  %43 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 1
  %44 = getelementptr inbounds %"struct.net::ct::SignedTreeHead", %"struct.net::ct::SignedTreeHead"* %1, i64 0, i32 4, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = zext i8 %37 to i64
  %47 = select i1 %38, i64 %45, i64 %46
  store i64 %47, i64* %43, align 8
  %48 = call zeroext i1 @_ZNK3net13CTLogVerifier15VerifySignatureERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES8_(%"class.net::CTLogVerifier"* %0, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %4, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %5)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #9
  br i1 %48, label %49, label %57

49:                                               ; preds = %18
  %50 = getelementptr inbounds %"struct.net::ct::SignedTreeHead", %"struct.net::ct::SignedTreeHead"* %1, i64 0, i32 2
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %53, label %57

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"struct.net::ct::SignedTreeHead", %"struct.net::ct::SignedTreeHead"* %1, i64 0, i32 3, i64 0
  %55 = call i32 @bcmp(i8* %54, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @_ZN3net12_GLOBAL__N_122kSHA256EmptyStringHashE, i64 0, i64 0), i64 32)
  %56 = icmp eq i32 %55, 0
  br label %57

57:                                               ; preds = %16, %18, %49, %53
  %58 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %17, %16 ], [ %22, %18 ], [ %22, %49 ], [ %22, %53 ]
  %59 = phi i1 [ false, %16 ], [ false, %18 ], [ true, %49 ], [ %56, %53 ]
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  %61 = load i8, i8* %60, align 1
  %62 = icmp slt i8 %61, 0
  br i1 %62, label %63, label %65

63:                                               ; preds = %57
  %64 = load i8*, i8** %14, align 8
  call void @_ZdlPv(i8* %64) #8
  br label %65

65:                                               ; preds = %57, %63
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #9
  br label %66

66:                                               ; preds = %2, %65
  %67 = phi i1 [ %59, %65 ], [ false, %2 ]
  ret i1 %67
}

declare zeroext i1 @_ZN3net2ct23EncodeTreeHeadSignatureERKNS0_14SignedTreeHeadEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"struct.net::ct::SignedTreeHead"* dereferenceable(112), %"class.std::__1::basic_string"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK3net2ct15DigitallySigned24SignatureParametersMatchENS1_13HashAlgorithmENS1_18SignatureAlgorithmE(%"struct.net::ct::DigitallySigned"*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net13CTLogVerifier22VerifyConsistencyProofERKNS_2ct22MerkleConsistencyProofERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEESD_(%"class.net::CTLogVerifier"* nocapture readonly, %"struct.net::ct::MerkleConsistencyProof"* nocapture readonly dereferenceable(64), %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = getelementptr inbounds %"class.net::CTLogVerifier", %"class.net::CTLogVerifier"* %0, i64 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.net::CTLogVerifier", %"class.net::CTLogVerifier"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %13 to i64
  %18 = select i1 %14, i64 %16, i64 %17
  %19 = bitcast %"struct.net::ct::MerkleConsistencyProof"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  %23 = getelementptr inbounds %"struct.net::ct::MerkleConsistencyProof", %"struct.net::ct::MerkleConsistencyProof"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = zext i8 %21 to i64
  %26 = select i1 %22, i64 %24, i64 %25
  %27 = icmp eq i64 %18, %26
  br i1 %27, label %28, label %402

28:                                               ; preds = %4
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %32 = select i1 %14, i8* %30, i8* %31
  %33 = getelementptr inbounds %"struct.net::ct::MerkleConsistencyProof", %"struct.net::ct::MerkleConsistencyProof"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = bitcast %"struct.net::ct::MerkleConsistencyProof"* %1 to i8*
  %36 = select i1 %22, i8* %34, i8* %35
  %37 = icmp eq i64 %18, 0
  br i1 %14, label %44, label %38

38:                                               ; preds = %28
  br i1 %37, label %60, label %39

39:                                               ; preds = %38
  %40 = ptrtoint i8* %30 to i64
  %41 = trunc i64 %40 to i8
  %42 = load i8, i8* %36, align 1
  %43 = icmp eq i8 %42, %41
  br i1 %43, label %45, label %402

44:                                               ; preds = %28
  br i1 %37, label %60, label %57

45:                                               ; preds = %39, %52
  %46 = phi i64 [ %49, %52 ], [ %17, %39 ]
  %47 = phi i8* [ %50, %52 ], [ %31, %39 ]
  %48 = phi i8* [ %53, %52 ], [ %36, %39 ]
  %49 = add i64 %46, -1
  %50 = getelementptr inbounds i8, i8* %47, i64 1
  %51 = icmp eq i64 %49, 0
  br i1 %51, label %60, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds i8, i8* %48, i64 1
  %54 = load i8, i8* %50, align 1
  %55 = load i8, i8* %53, align 1
  %56 = icmp eq i8 %54, %55
  br i1 %56, label %45, label %402

57:                                               ; preds = %44
  %58 = tail call i32 @bcmp(i8* %32, i8* %36, i64 %18) #9
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %402

60:                                               ; preds = %45, %57, %38, %44
  %61 = getelementptr inbounds %"struct.net::ct::MerkleConsistencyProof", %"struct.net::ct::MerkleConsistencyProof"* %1, i64 0, i32 2
  %62 = load i64, i64* %61, align 8
  %63 = getelementptr inbounds %"struct.net::ct::MerkleConsistencyProof", %"struct.net::ct::MerkleConsistencyProof"* %1, i64 0, i32 3
  %64 = load i64, i64* %63, align 8
  %65 = icmp ugt i64 %62, %64
  br i1 %65, label %402, label %66

66:                                               ; preds = %60
  %67 = icmp eq i64 %62, %64
  br i1 %67, label %68, label %124

68:                                               ; preds = %66
  %69 = getelementptr inbounds %"struct.net::ct::MerkleConsistencyProof", %"struct.net::ct::MerkleConsistencyProof"* %1, i64 0, i32 1, i32 0, i32 0
  %70 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %69, align 8
  %71 = getelementptr inbounds %"struct.net::ct::MerkleConsistencyProof", %"struct.net::ct::MerkleConsistencyProof"* %1, i64 0, i32 1, i32 0, i32 1
  %72 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %71, align 8
  %73 = icmp eq %"class.std::__1::basic_string"* %70, %72
  br i1 %73, label %74, label %402

74:                                               ; preds = %68
  %75 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %75, i64 0, i32 1, i32 0
  %77 = load i8, i8* %76, align 1
  %78 = icmp slt i8 %77, 0
  %79 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %80 = load i64, i64* %79, align 8
  %81 = zext i8 %77 to i64
  %82 = select i1 %78, i64 %80, i64 %81
  %83 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %84 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %83, i64 0, i32 1, i32 0
  %85 = load i8, i8* %84, align 1
  %86 = icmp slt i8 %85, 0
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %88 = load i64, i64* %87, align 8
  %89 = zext i8 %85 to i64
  %90 = select i1 %86, i64 %88, i64 %89
  %91 = icmp eq i64 %82, %90
  br i1 %91, label %92, label %402

92:                                               ; preds = %74
  %93 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load i8*, i8** %93, align 8
  %95 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %96 = select i1 %78, i8* %94, i8* %95
  %97 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i8*, i8** %97, align 8
  %99 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %100 = select i1 %86, i8* %98, i8* %99
  %101 = icmp eq i64 %82, 0
  br i1 %78, label %108, label %102

102:                                              ; preds = %92
  br i1 %101, label %402, label %103

103:                                              ; preds = %102
  %104 = ptrtoint i8* %94 to i64
  %105 = trunc i64 %104 to i8
  %106 = load i8, i8* %100, align 1
  %107 = icmp eq i8 %106, %105
  br i1 %107, label %112, label %402

108:                                              ; preds = %92
  br i1 %101, label %402, label %109

109:                                              ; preds = %108
  %110 = tail call i32 @bcmp(i8* %96, i8* %100, i64 %82) #9
  %111 = icmp eq i32 %110, 0
  br label %402

112:                                              ; preds = %103, %119
  %113 = phi i64 [ %116, %119 ], [ %81, %103 ]
  %114 = phi i8* [ %117, %119 ], [ %95, %103 ]
  %115 = phi i8* [ %120, %119 ], [ %100, %103 ]
  %116 = add i64 %113, -1
  %117 = getelementptr inbounds i8, i8* %114, i64 1
  %118 = icmp eq i64 %116, 0
  br i1 %118, label %402, label %119

119:                                              ; preds = %112
  %120 = getelementptr inbounds i8, i8* %115, i64 1
  %121 = load i8, i8* %117, align 1
  %122 = load i8, i8* %120, align 1
  %123 = icmp eq i8 %121, %122
  br i1 %123, label %112, label %402

124:                                              ; preds = %66
  %125 = icmp eq i64 %62, 0
  br i1 %125, label %126, label %132

126:                                              ; preds = %124
  %127 = getelementptr inbounds %"struct.net::ct::MerkleConsistencyProof", %"struct.net::ct::MerkleConsistencyProof"* %1, i64 0, i32 1, i32 0, i32 0
  %128 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %127, align 8
  %129 = getelementptr inbounds %"struct.net::ct::MerkleConsistencyProof", %"struct.net::ct::MerkleConsistencyProof"* %1, i64 0, i32 1, i32 0, i32 1
  %130 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %129, align 8
  %131 = icmp eq %"class.std::__1::basic_string"* %128, %130
  br label %402

132:                                              ; preds = %124
  %133 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %134 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %133, i64 0, i32 1, i32 0
  %135 = load i8, i8* %134, align 1
  %136 = icmp slt i8 %135, 0
  %137 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = load i8*, i8** %137, align 8
  %139 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %140 = select i1 %136, i8* %138, i8* %139
  %141 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %142 = load i64, i64* %141, align 8
  %143 = zext i8 %135 to i64
  %144 = select i1 %136, i64 %142, i64 %143
  %145 = getelementptr inbounds %"struct.net::ct::MerkleConsistencyProof", %"struct.net::ct::MerkleConsistencyProof"* %1, i64 0, i32 1, i32 0, i32 0
  %146 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %145, align 8
  %147 = tail call i64 @llvm.ctpop.i64(i64 %62) #9, !range !2
  %148 = icmp eq i64 %147, 1
  br i1 %148, label %167, label %149

149:                                              ; preds = %132
  %150 = getelementptr inbounds %"struct.net::ct::MerkleConsistencyProof", %"struct.net::ct::MerkleConsistencyProof"* %1, i64 0, i32 1, i32 0, i32 1
  %151 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %150, align 8
  %152 = icmp eq %"class.std::__1::basic_string"* %146, %151
  br i1 %152, label %402, label %153

153:                                              ; preds = %149
  %154 = bitcast %"class.std::__1::basic_string"* %146 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %155 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %154, i64 0, i32 1, i32 0
  %156 = load i8, i8* %155, align 1
  %157 = icmp slt i8 %156, 0
  %158 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %146, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = load i8*, i8** %158, align 8
  %160 = bitcast %"class.std::__1::basic_string"* %146 to i8*
  %161 = select i1 %157, i8* %159, i8* %160
  %162 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %146, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %163 = load i64, i64* %162, align 8
  %164 = zext i8 %156 to i64
  %165 = select i1 %157, i64 %163, i64 %164
  %166 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %146, i64 1
  br label %167

167:                                              ; preds = %153, %132
  %168 = phi %"class.std::__1::basic_string"* [ %146, %132 ], [ %166, %153 ]
  %169 = phi i8* [ %140, %132 ], [ %161, %153 ]
  %170 = phi i64 [ %144, %132 ], [ %165, %153 ]
  %171 = add i64 %62, -1
  %172 = add i64 %64, -1
  %173 = and i64 %171, 1
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %182, label %175

175:                                              ; preds = %167, %175
  %176 = phi i64 [ %179, %175 ], [ %172, %167 ]
  %177 = phi i64 [ %178, %175 ], [ %171, %167 ]
  %178 = lshr i64 %177, 1
  %179 = lshr i64 %176, 1
  %180 = and i64 %177, 2
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %182, label %175

182:                                              ; preds = %175, %167
  %183 = phi i64 [ %171, %167 ], [ %178, %175 ]
  %184 = phi i64 [ %172, %167 ], [ %179, %175 ]
  %185 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %185) #9
  %186 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %187 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %188 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %189 = icmp ugt i64 %170, -17
  %190 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %190, i8 -86, i64 24, i1 false)
  br i1 %189, label %191, label %193

191:                                              ; preds = %182
  %192 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %192) #10
  unreachable

193:                                              ; preds = %182
  %194 = icmp ult i64 %170, 23
  br i1 %194, label %200, label %195

195:                                              ; preds = %193
  %196 = add nuw i64 %170, 16
  %197 = and i64 %196, -16
  %198 = tail call i8* @_Znwm(i64 %197) #8
  store i8* %198, i8** %186, align 8, !alias.scope !3
  %199 = or i64 %197, -9223372036854775808
  store i64 %199, i64* %188, align 8, !alias.scope !3
  store i64 %170, i64* %187, align 8, !alias.scope !3
  br label %205

200:                                              ; preds = %193
  %201 = trunc i64 %170 to i8
  %202 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %203 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %202, i64 0, i32 1, i32 0
  store i8 %201, i8* %203, align 1, !alias.scope !3
  %204 = icmp eq i64 %170, 0
  br i1 %204, label %207, label %205

205:                                              ; preds = %200, %195
  %206 = phi i8* [ %198, %195 ], [ %185, %200 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %206, i8* align 1 %169, i64 %170, i1 false) #9
  br label %207

207:                                              ; preds = %205, %200
  %208 = phi i8* [ %185, %200 ], [ %206, %205 ]
  %209 = getelementptr inbounds i8, i8* %208, i64 %170
  store i8 0, i8* %209, align 1
  %210 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %210) #9
  %211 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %213 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %213, i8 -86, i64 24, i1 false)
  br i1 %194, label %220, label %214

214:                                              ; preds = %207
  %215 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %216 = add nuw i64 %170, 16
  %217 = and i64 %216, -16
  %218 = tail call i8* @_Znwm(i64 %217) #8
  store i8* %218, i8** %211, align 8, !alias.scope !6
  %219 = or i64 %217, -9223372036854775808
  store i64 %219, i64* %215, align 8, !alias.scope !6
  store i64 %170, i64* %212, align 8, !alias.scope !6
  br label %225

220:                                              ; preds = %207
  %221 = trunc i64 %170 to i8
  %222 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %223 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %222, i64 0, i32 1, i32 0
  store i8 %221, i8* %223, align 1, !alias.scope !6
  %224 = icmp eq i64 %170, 0
  br i1 %224, label %227, label %225

225:                                              ; preds = %220, %214
  %226 = phi i8* [ %218, %214 ], [ %210, %220 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %226, i8* align 1 %169, i64 %170, i1 false) #9
  br label %227

227:                                              ; preds = %220, %225
  %228 = phi i8* [ %210, %220 ], [ %226, %225 ]
  %229 = getelementptr inbounds i8, i8* %228, i64 %170
  store i8 0, i8* %229, align 1
  %230 = getelementptr inbounds %"struct.net::ct::MerkleConsistencyProof", %"struct.net::ct::MerkleConsistencyProof"* %1, i64 0, i32 1, i32 0, i32 1
  %231 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %230, align 8
  %232 = icmp eq %"class.std::__1::basic_string"* %168, %231
  br i1 %232, label %233, label %235

233:                                              ; preds = %227
  %234 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %294

235:                                              ; preds = %227
  %236 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %237 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %238 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %237, i64 0, i32 1, i32 0
  %239 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %240 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %241 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %240, i64 0, i32 1, i32 0
  %242 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  br label %243

243:                                              ; preds = %235, %282
  %244 = phi i64 [ %184, %235 ], [ %286, %282 ]
  %245 = phi i64 [ %183, %235 ], [ %285, %282 ]
  %246 = phi %"class.std::__1::basic_string"* [ %168, %235 ], [ %287, %282 ]
  %247 = icmp eq i64 %244, 0
  br i1 %247, label %386, label %248

248:                                              ; preds = %243
  %249 = and i64 %245, 1
  %250 = icmp ne i64 %249, 0
  %251 = icmp eq i64 %245, %244
  %252 = or i1 %250, %251
  br i1 %252, label %253, label %276

253:                                              ; preds = %248
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %239) #9
  call void @_ZN3net2ct8internal9HashNodesERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEESA_(%"class.std::__1::basic_string"* nonnull sret %7, %"class.std::__1::basic_string"* dereferenceable(24) %246, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #9
  %254 = load i8, i8* %241, align 1
  %255 = icmp slt i8 %254, 0
  br i1 %255, label %256, label %258

256:                                              ; preds = %253
  %257 = load i8*, i8** %186, align 8
  call void @_ZdlPv(i8* %257) #8
  br label %258

258:                                              ; preds = %256, %253
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %185, i8* nonnull align 8 %239, i64 24, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %239) #9
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %242) #9
  call void @_ZN3net2ct8internal9HashNodesERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEESA_(%"class.std::__1::basic_string"* nonnull sret %8, %"class.std::__1::basic_string"* dereferenceable(24) %246, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #9
  %259 = load i8, i8* %238, align 1
  %260 = icmp slt i8 %259, 0
  br i1 %260, label %261, label %263

261:                                              ; preds = %258
  %262 = load i8*, i8** %211, align 8
  call void @_ZdlPv(i8* %262) #8
  br label %263

263:                                              ; preds = %261, %258
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %210, i8* nonnull align 8 %242, i64 24, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %242) #9
  %264 = icmp eq i64 %249, 0
  %265 = icmp ne i64 %245, 0
  %266 = and i1 %265, %264
  br i1 %266, label %267, label %282

267:                                              ; preds = %263, %267
  %268 = phi i64 [ %271, %267 ], [ %244, %263 ]
  %269 = phi i64 [ %270, %267 ], [ %245, %263 ]
  %270 = lshr i64 %269, 1
  %271 = lshr i64 %268, 1
  %272 = and i64 %269, 2
  %273 = icmp eq i64 %272, 0
  %274 = icmp ne i64 %270, 0
  %275 = and i1 %274, %273
  br i1 %275, label %267, label %282

276:                                              ; preds = %248
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %236) #9
  call void @_ZN3net2ct8internal9HashNodesERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEESA_(%"class.std::__1::basic_string"* nonnull sret %9, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6, %"class.std::__1::basic_string"* dereferenceable(24) %246) #9
  %277 = load i8, i8* %238, align 1
  %278 = icmp slt i8 %277, 0
  br i1 %278, label %279, label %281

279:                                              ; preds = %276
  %280 = load i8*, i8** %211, align 8
  call void @_ZdlPv(i8* %280) #8
  br label %281

281:                                              ; preds = %279, %276
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %210, i8* nonnull align 8 %236, i64 24, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %236) #9
  br label %282

282:                                              ; preds = %267, %263, %281
  %283 = phi i64 [ %245, %281 ], [ %245, %263 ], [ %270, %267 ]
  %284 = phi i64 [ %244, %281 ], [ %244, %263 ], [ %271, %267 ]
  %285 = lshr i64 %283, 1
  %286 = lshr i64 %284, 1
  %287 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %246, i64 1
  %288 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %230, align 8
  %289 = icmp eq %"class.std::__1::basic_string"* %287, %288
  br i1 %289, label %290, label %243

290:                                              ; preds = %282
  %291 = load i8, i8* %134, align 1
  %292 = load i64, i64* %141, align 8
  %293 = zext i8 %291 to i64
  br label %294

294:                                              ; preds = %233, %290
  %295 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %234, %233 ], [ %240, %290 ]
  %296 = phi i64 [ %143, %233 ], [ %293, %290 ]
  %297 = phi i64 [ %142, %233 ], [ %292, %290 ]
  %298 = phi i8 [ %135, %233 ], [ %291, %290 ]
  %299 = phi i64 [ %184, %233 ], [ %286, %290 ]
  %300 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %295, i64 0, i32 1, i32 0
  %301 = load i8, i8* %300, align 1
  %302 = icmp slt i8 %301, 0
  %303 = load i64, i64* %187, align 8
  %304 = zext i8 %301 to i64
  %305 = select i1 %302, i64 %303, i64 %304
  %306 = icmp slt i8 %298, 0
  %307 = select i1 %306, i64 %297, i64 %296
  %308 = icmp eq i64 %305, %307
  br i1 %308, label %309, label %386

309:                                              ; preds = %294
  %310 = load i8*, i8** %186, align 8
  %311 = select i1 %302, i8* %310, i8* %185
  %312 = load i8*, i8** %137, align 8
  %313 = select i1 %306, i8* %312, i8* %139
  %314 = icmp eq i64 %305, 0
  br i1 %302, label %321, label %315

315:                                              ; preds = %309
  br i1 %314, label %337, label %316

316:                                              ; preds = %315
  %317 = ptrtoint i8* %310 to i64
  %318 = trunc i64 %317 to i8
  %319 = load i8, i8* %313, align 1
  %320 = icmp eq i8 %319, %318
  br i1 %320, label %322, label %386

321:                                              ; preds = %309
  br i1 %314, label %337, label %334

322:                                              ; preds = %316, %329
  %323 = phi i64 [ %326, %329 ], [ %304, %316 ]
  %324 = phi i8* [ %327, %329 ], [ %185, %316 ]
  %325 = phi i8* [ %330, %329 ], [ %313, %316 ]
  %326 = add i64 %323, -1
  %327 = getelementptr inbounds i8, i8* %324, i64 1
  %328 = icmp eq i64 %326, 0
  br i1 %328, label %337, label %329

329:                                              ; preds = %322
  %330 = getelementptr inbounds i8, i8* %325, i64 1
  %331 = load i8, i8* %327, align 1
  %332 = load i8, i8* %330, align 1
  %333 = icmp eq i8 %331, %332
  br i1 %333, label %322, label %386

334:                                              ; preds = %321
  %335 = call i32 @bcmp(i8* %311, i8* %313, i64 %305) #9
  %336 = icmp eq i32 %335, 0
  br i1 %336, label %337, label %386

337:                                              ; preds = %322, %315, %321, %334
  %338 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %339 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %338, i64 0, i32 1, i32 0
  %340 = load i8, i8* %339, align 1
  %341 = icmp slt i8 %340, 0
  %342 = load i64, i64* %212, align 8
  %343 = zext i8 %340 to i64
  %344 = select i1 %341, i64 %342, i64 %343
  %345 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %346 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %345, i64 0, i32 1, i32 0
  %347 = load i8, i8* %346, align 1
  %348 = icmp slt i8 %347, 0
  %349 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %350 = load i64, i64* %349, align 8
  %351 = zext i8 %347 to i64
  %352 = select i1 %348, i64 %350, i64 %351
  %353 = icmp eq i64 %344, %352
  br i1 %353, label %354, label %386

354:                                              ; preds = %337
  %355 = load i8*, i8** %211, align 8
  %356 = select i1 %341, i8* %355, i8* %210
  %357 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %358 = load i8*, i8** %357, align 8
  %359 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %360 = select i1 %348, i8* %358, i8* %359
  %361 = icmp eq i64 %344, 0
  br i1 %341, label %368, label %362

362:                                              ; preds = %354
  br i1 %361, label %384, label %363

363:                                              ; preds = %362
  %364 = ptrtoint i8* %355 to i64
  %365 = trunc i64 %364 to i8
  %366 = load i8, i8* %360, align 1
  %367 = icmp eq i8 %366, %365
  br i1 %367, label %369, label %386

368:                                              ; preds = %354
  br i1 %361, label %384, label %381

369:                                              ; preds = %363, %376
  %370 = phi i64 [ %373, %376 ], [ %343, %363 ]
  %371 = phi i8* [ %374, %376 ], [ %210, %363 ]
  %372 = phi i8* [ %377, %376 ], [ %360, %363 ]
  %373 = add i64 %370, -1
  %374 = getelementptr inbounds i8, i8* %371, i64 1
  %375 = icmp eq i64 %373, 0
  br i1 %375, label %384, label %376

376:                                              ; preds = %369
  %377 = getelementptr inbounds i8, i8* %372, i64 1
  %378 = load i8, i8* %374, align 1
  %379 = load i8, i8* %377, align 1
  %380 = icmp eq i8 %378, %379
  br i1 %380, label %369, label %386

381:                                              ; preds = %368
  %382 = call i32 @bcmp(i8* %356, i8* %360, i64 %344) #9
  %383 = icmp eq i32 %382, 0
  br i1 %383, label %384, label %386

384:                                              ; preds = %369, %362, %368, %381
  %385 = icmp eq i64 %299, 0
  br label %386

386:                                              ; preds = %243, %329, %376, %316, %363, %337, %294, %384, %381, %334
  %387 = phi i1 [ false, %334 ], [ %385, %384 ], [ false, %381 ], [ false, %294 ], [ false, %337 ], [ false, %363 ], [ false, %316 ], [ false, %376 ], [ false, %329 ], [ false, %243 ]
  %388 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %389 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %388, i64 0, i32 1, i32 0
  %390 = load i8, i8* %389, align 1
  %391 = icmp slt i8 %390, 0
  br i1 %391, label %392, label %394

392:                                              ; preds = %386
  %393 = load i8*, i8** %211, align 8
  call void @_ZdlPv(i8* %393) #8
  br label %394

394:                                              ; preds = %386, %392
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %210) #9
  %395 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %396 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %395, i64 0, i32 1, i32 0
  %397 = load i8, i8* %396, align 1
  %398 = icmp slt i8 %397, 0
  br i1 %398, label %399, label %401

399:                                              ; preds = %394
  %400 = load i8*, i8** %186, align 8
  call void @_ZdlPv(i8* %400) #8
  br label %401

401:                                              ; preds = %394, %399
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %185) #9
  br label %402

402:                                              ; preds = %52, %119, %112, %103, %39, %57, %4, %401, %149, %109, %108, %102, %74, %68, %60, %126
  %403 = phi i1 [ %131, %126 ], [ false, %57 ], [ false, %60 ], [ false, %68 ], [ false, %74 ], [ %111, %109 ], [ true, %108 ], [ true, %102 ], [ %387, %401 ], [ false, %149 ], [ false, %4 ], [ false, %39 ], [ false, %103 ], [ true, %112 ], [ false, %119 ], [ false, %52 ]
  ret i1 %403
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN3net2ct8internal9HashNodesERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEESA_(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net13CTLogVerifier16VerifyAuditProofERKNS_2ct16MerkleAuditProofERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEESD_(%"class.net::CTLogVerifier"* nocapture readnone, %"struct.net::ct::MerkleAuditProof"* nocapture readonly dereferenceable(40), %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = getelementptr inbounds %"struct.net::ct::MerkleAuditProof", %"struct.net::ct::MerkleAuditProof"* %1, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"struct.net::ct::MerkleAuditProof", %"struct.net::ct::MerkleAuditProof"* %1, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp ult i64 %9, %11
  br i1 %12, label %13, label %142

13:                                               ; preds = %4
  %14 = add i64 %11, -1
  %15 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #9
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 24, i1 false)
  %21 = load i8, i8* %19, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %13
  %24 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* align 8 %24, i64 24, i1 false) #9
  br label %30

25:                                               ; preds = %13
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %5, i8* %27, i64 %29) #9
  br label %30

30:                                               ; preds = %23, %25
  %31 = getelementptr inbounds %"struct.net::ct::MerkleAuditProof", %"struct.net::ct::MerkleAuditProof"* %1, i64 0, i32 2, i32 0, i32 0
  %32 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %31, align 8
  %33 = getelementptr inbounds %"struct.net::ct::MerkleAuditProof", %"struct.net::ct::MerkleAuditProof"* %1, i64 0, i32 2, i32 0, i32 1
  %34 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %33, align 8
  %35 = icmp eq %"class.std::__1::basic_string"* %32, %34
  %36 = icmp eq i64 %14, 0
  br i1 %35, label %84, label %37

37:                                               ; preds = %30
  %38 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %39 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  br label %42

42:                                               ; preds = %37, %76
  %43 = phi i1 [ %36, %37 ], [ %83, %76 ]
  %44 = phi i64 [ %14, %37 ], [ %80, %76 ]
  %45 = phi i64 [ %9, %37 ], [ %79, %76 ]
  %46 = phi %"class.std::__1::basic_string"* [ %32, %37 ], [ %81, %76 ]
  br i1 %43, label %133, label %47

47:                                               ; preds = %42
  %48 = and i64 %45, 1
  %49 = icmp ne i64 %48, 0
  %50 = icmp eq i64 %45, %44
  %51 = or i1 %49, %50
  br i1 %51, label %52, label %70

52:                                               ; preds = %47
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #9
  call void @_ZN3net2ct8internal9HashNodesERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEESA_(%"class.std::__1::basic_string"* nonnull sret %6, %"class.std::__1::basic_string"* dereferenceable(24) %46, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #9
  %53 = load i8, i8* %40, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %57

55:                                               ; preds = %52
  %56 = load i8*, i8** %16, align 8
  call void @_ZdlPv(i8* %56) #8
  br label %57

57:                                               ; preds = %55, %52
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* nonnull align 8 %41, i64 24, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #9
  %58 = icmp eq i64 %48, 0
  %59 = icmp ne i64 %45, 0
  %60 = and i1 %59, %58
  br i1 %60, label %61, label %76

61:                                               ; preds = %57, %61
  %62 = phi i64 [ %65, %61 ], [ %44, %57 ]
  %63 = phi i64 [ %64, %61 ], [ %45, %57 ]
  %64 = lshr i64 %63, 1
  %65 = lshr i64 %62, 1
  %66 = and i64 %63, 2
  %67 = icmp eq i64 %66, 0
  %68 = icmp ne i64 %64, 0
  %69 = and i1 %68, %67
  br i1 %69, label %61, label %76

70:                                               ; preds = %47
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #9
  call void @_ZN3net2ct8internal9HashNodesERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEESA_(%"class.std::__1::basic_string"* nonnull sret %7, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5, %"class.std::__1::basic_string"* dereferenceable(24) %46) #9
  %71 = load i8, i8* %40, align 1
  %72 = icmp slt i8 %71, 0
  br i1 %72, label %73, label %75

73:                                               ; preds = %70
  %74 = load i8*, i8** %16, align 8
  call void @_ZdlPv(i8* %74) #8
  br label %75

75:                                               ; preds = %73, %70
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* nonnull align 8 %38, i64 24, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #9
  br label %76

76:                                               ; preds = %61, %57, %75
  %77 = phi i64 [ %45, %75 ], [ %45, %57 ], [ %64, %61 ]
  %78 = phi i64 [ %44, %75 ], [ %44, %57 ], [ %65, %61 ]
  %79 = lshr i64 %77, 1
  %80 = lshr i64 %78, 1
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %46, i64 1
  %82 = icmp eq %"class.std::__1::basic_string"* %81, %34
  %83 = icmp eq i64 %80, 0
  br i1 %82, label %84, label %42

84:                                               ; preds = %76, %30
  %85 = phi i1 [ %36, %30 ], [ %83, %76 ]
  %86 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br i1 %85, label %87, label %133

87:                                               ; preds = %84
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %86, i64 0, i32 1, i32 0
  %89 = load i8, i8* %88, align 1
  %90 = icmp slt i8 %89, 0
  %91 = load i64, i64* %17, align 8
  %92 = zext i8 %89 to i64
  %93 = select i1 %90, i64 %91, i64 %92
  %94 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %95 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %94, i64 0, i32 1, i32 0
  %96 = load i8, i8* %95, align 1
  %97 = icmp slt i8 %96, 0
  %98 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %99 = load i64, i64* %98, align 8
  %100 = zext i8 %96 to i64
  %101 = select i1 %97, i64 %99, i64 %100
  %102 = icmp eq i64 %93, %101
  br i1 %102, label %103, label %133

103:                                              ; preds = %87
  %104 = load i8*, i8** %16, align 8
  %105 = select i1 %90, i8* %104, i8* %15
  %106 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load i8*, i8** %106, align 8
  %108 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %109 = select i1 %97, i8* %107, i8* %108
  %110 = icmp eq i64 %93, 0
  br i1 %90, label %117, label %111

111:                                              ; preds = %103
  br i1 %110, label %133, label %112

112:                                              ; preds = %111
  %113 = ptrtoint i8* %104 to i64
  %114 = trunc i64 %113 to i8
  %115 = load i8, i8* %109, align 1
  %116 = icmp eq i8 %115, %114
  br i1 %116, label %121, label %133

117:                                              ; preds = %103
  br i1 %110, label %133, label %118

118:                                              ; preds = %117
  %119 = call i32 @bcmp(i8* %105, i8* %109, i64 %93) #9
  %120 = icmp eq i32 %119, 0
  br label %133

121:                                              ; preds = %112, %128
  %122 = phi i64 [ %125, %128 ], [ %92, %112 ]
  %123 = phi i8* [ %126, %128 ], [ %15, %112 ]
  %124 = phi i8* [ %129, %128 ], [ %109, %112 ]
  %125 = add i64 %122, -1
  %126 = getelementptr inbounds i8, i8* %123, i64 1
  %127 = icmp eq i64 %125, 0
  br i1 %127, label %133, label %128

128:                                              ; preds = %121
  %129 = getelementptr inbounds i8, i8* %124, i64 1
  %130 = load i8, i8* %126, align 1
  %131 = load i8, i8* %129, align 1
  %132 = icmp eq i8 %130, %131
  br i1 %132, label %121, label %133

133:                                              ; preds = %42, %128, %121, %112, %84, %118, %117, %111, %87
  %134 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %86, %118 ], [ %86, %117 ], [ %86, %111 ], [ %86, %87 ], [ %86, %84 ], [ %86, %112 ], [ %86, %121 ], [ %86, %128 ], [ %39, %42 ]
  %135 = phi i1 [ %120, %118 ], [ true, %117 ], [ true, %111 ], [ false, %87 ], [ false, %84 ], [ false, %112 ], [ false, %128 ], [ true, %121 ], [ false, %42 ]
  %136 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %134, i64 0, i32 1, i32 0
  %137 = load i8, i8* %136, align 1
  %138 = icmp slt i8 %137, 0
  br i1 %138, label %139, label %141

139:                                              ; preds = %133
  %140 = load i8*, i8** %16, align 8
  call void @_ZdlPv(i8* %140) #8
  br label %141

141:                                              ; preds = %133, %139
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #9
  br label %142

142:                                              ; preds = %4, %141
  %143 = phi i1 [ %135, %141 ], [ false, %4 ]
  ret i1 %143
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13CTLogVerifierD2Ev(%"class.net::CTLogVerifier"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.crypto::OpenSSLErrStackTracer", align 8
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast %"class.crypto::OpenSSLErrStackTracer"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 32, i1 false)
  %5 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #9
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.1, i64 0, i64 0), i32 296) #9
  %6 = getelementptr inbounds %"class.crypto::OpenSSLErrStackTracer", %"class.crypto::OpenSSLErrStackTracer"* %2, i64 0, i32 0
  call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* nonnull %6, %"class.base::Location"* nonnull dereferenceable(32) %3) #9
  call void @_ZN6crypto17EnsureOpenSSLInitEv() #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #9
  %7 = getelementptr inbounds %"class.net::CTLogVerifier", %"class.net::CTLogVerifier"* %0, i64 0, i32 5
  %8 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %7, align 8
  %9 = icmp eq %struct.evp_pkey_st* %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %1
  call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %8) #9
  br label %11

11:                                               ; preds = %1, %10
  call void @_ZN6crypto20ClearOpenSSLERRStackERKN4base8LocationE(%"class.base::Location"* nonnull dereferenceable(32) %6) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #9
  %12 = getelementptr inbounds %"class.net::CTLogVerifier", %"class.net::CTLogVerifier"* %0, i64 0, i32 2
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  call void @_ZdlPv(i8* %19) #8
  br label %20

20:                                               ; preds = %11, %17
  %21 = getelementptr inbounds %"class.net::CTLogVerifier", %"class.net::CTLogVerifier"* %0, i64 0, i32 1
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @_ZdlPv(i8* %28) #8
  br label %29

29:                                               ; preds = %20, %26
  ret void
}

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #3

declare void @EVP_PKEY_free(%struct.evp_pkey_st*) local_unnamed_addr #3

declare void @CBS_init(%struct.cbs_st*, i8*, i64) local_unnamed_addr #3

declare %struct.evp_pkey_st* @EVP_parse_public_key(%struct.cbs_st*) local_unnamed_addr #3

declare i64 @CBS_len(%struct.cbs_st*) local_unnamed_addr #3

declare void @_ZN6crypto16SHA256HashStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #3

declare i32 @EVP_PKEY_type(i32) local_unnamed_addr #3

declare i32 @EVP_PKEY_size(%struct.evp_pkey_st*) local_unnamed_addr #3

declare i32 @EVP_DigestVerifyInit(%struct.env_md_ctx_st*, %struct.evp_pkey_ctx_st**, %struct.env_md_st*, %struct.engine_st*, %struct.evp_pkey_st*) local_unnamed_addr #3

declare i32 @EVP_DigestVerifyUpdate(%struct.env_md_ctx_st*, i8*, i64) local_unnamed_addr #3

declare i32 @EVP_DigestVerifyFinal(%struct.env_md_ctx_st*, i8*, i64) local_unnamed_addr #3

declare void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"*, %"class.base::Location"* dereferenceable(32)) unnamed_addr #3

declare void @_ZN6crypto17EnsureOpenSSLInitEv() local_unnamed_addr #3

declare void @_ZN6crypto20ClearOpenSSLERRStackERKN4base8LocationE(%"class.base::Location"* dereferenceable(32)) local_unnamed_addr #3

declare %struct.env_md_st* @EVP_md5() local_unnamed_addr #3

declare %struct.env_md_st* @EVP_sha1() local_unnamed_addr #3

declare %struct.env_md_st* @EVP_sha224() local_unnamed_addr #3

declare %struct.env_md_st* @EVP_sha256() local_unnamed_addr #3

declare %struct.env_md_st* @EVP_sha384() local_unnamed_addr #3

declare %struct.env_md_st* @EVP_sha512() local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

declare void @EVP_MD_CTX_init(%struct.env_md_ctx_st*) local_unnamed_addr #3

declare i32 @EVP_MD_CTX_cleanup(%struct.env_md_ctx_st*) local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #6

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind readonly }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { builtin nounwind }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i64 0, i64 65}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!5 = distinct !{!5, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!8 = distinct !{!8, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
