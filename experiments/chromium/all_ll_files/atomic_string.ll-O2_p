; ModuleID = '../../third_party/blink/renderer/platform/wtf/text/atomic_string.cc'
source_filename = "../../third_party/blink/renderer/platform/wtf/text/atomic_string.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.WTF::Threading"*, %"class.base::ThreadLocalStorage::Slot" }
%"class.WTF::Threading" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.2", i32, [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.WTF::AtomicStringTable"* }
%"class.WTF::AtomicStringTable" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.WTF::StringImpl"**, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.WTF::ICUConverterWrapper"* }
%"struct.WTF::ICUConverterWrapper" = type opaque
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.perfetto::TracedValue" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::protos::pbzero::DebugAnnotation" = type opaque
%"class.perfetto::internal::CheckedScope" = type { i8 }

@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN3WTF12g_empty_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN3WTF9Threading12static_data_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_9ThreadingEEEPKcv = private unnamed_addr constant [62 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::Threading]\00", align 1

@_ZN3WTF12AtomicStringC1EPKhm = hidden unnamed_addr alias void (%"class.WTF::AtomicString"*, i8*, i64), void (%"class.WTF::AtomicString"*, i8*, i64)* @_ZN3WTF12AtomicStringC2EPKhm
@_ZN3WTF12AtomicStringC1EPKhj = hidden unnamed_addr alias void (%"class.WTF::AtomicString"*, i8*, i32), void (%"class.WTF::AtomicString"*, i8*, i32)* @_ZN3WTF12AtomicStringC2EPKhj
@_ZN3WTF12AtomicStringC1EPKDsj = hidden unnamed_addr alias void (%"class.WTF::AtomicString"*, i16*, i32), void (%"class.WTF::AtomicString"*, i16*, i32)* @_ZN3WTF12AtomicStringC2EPKDsj
@_ZN3WTF12AtomicStringC1EPKDs = hidden unnamed_addr alias void (%"class.WTF::AtomicString"*, i16*), void (%"class.WTF::AtomicString"*, i16*)* @_ZN3WTF12AtomicStringC2EPKDs

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nocapture, i8*, i64) unnamed_addr #0 align 2 {
  %4 = icmp ult i64 %2, 4294967296
  br i1 %4, label %6, label %5, !prof !2

5:                                                ; preds = %3
  tail call void @llvm.trap() #6
  unreachable

6:                                                ; preds = %3
  %7 = trunc i64 %2 to i32
  %8 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN3WTF9Threading12static_data_E, align 8
  %9 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %8, i64 0, i32 1
  %10 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %9) #6
  %11 = bitcast i8* %10 to %"class.WTF::Threading"*
  %12 = icmp eq i8* %10, null
  br i1 %12, label %13, label %16, !prof !3

13:                                               ; preds = %6
  %14 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 24, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_9ThreadingEEEPKcv, i64 0, i64 0)) #6
  %15 = bitcast i8* %14 to %"class.WTF::Threading"*
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %9, i8* %14) #6
  tail call void @_ZN3WTF9ThreadingC1Ev(%"class.WTF::Threading"* %15) #6
  br label %16

16:                                               ; preds = %6, %13
  %17 = phi %"class.WTF::Threading"* [ %15, %13 ], [ %11, %6 ]
  %18 = getelementptr inbounds %"class.WTF::Threading", %"class.WTF::Threading"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::AtomicStringTable"*, %"class.WTF::AtomicStringTable"** %18, align 8
  %20 = tail call %"class.WTF::StringImpl"* @_ZN3WTF17AtomicStringTable3AddEPKhj(%"class.WTF::AtomicStringTable"* %19, i8* %1, i32 %7) #6
  %21 = ptrtoint %"class.WTF::StringImpl"* %20 to i64
  %22 = bitcast %"class.WTF::AtomicString"* %0 to i64*
  store i64 %21, i64* %22, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3WTF12AtomicStringC2EPKhj(%"class.WTF::AtomicString"* nocapture, i8*, i32) unnamed_addr #0 align 2 {
  %4 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN3WTF9Threading12static_data_E, align 8
  %5 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %4, i64 0, i32 1
  %6 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %5) #6
  %7 = bitcast i8* %6 to %"class.WTF::Threading"*
  %8 = icmp eq i8* %6, null
  br i1 %8, label %9, label %12, !prof !3

9:                                                ; preds = %3
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 24, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_9ThreadingEEEPKcv, i64 0, i64 0)) #6
  %11 = bitcast i8* %10 to %"class.WTF::Threading"*
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %5, i8* %10) #6
  tail call void @_ZN3WTF9ThreadingC1Ev(%"class.WTF::Threading"* %11) #6
  br label %12

12:                                               ; preds = %3, %9
  %13 = phi %"class.WTF::Threading"* [ %11, %9 ], [ %7, %3 ]
  %14 = getelementptr inbounds %"class.WTF::Threading", %"class.WTF::Threading"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::AtomicStringTable"*, %"class.WTF::AtomicStringTable"** %14, align 8
  %16 = tail call %"class.WTF::StringImpl"* @_ZN3WTF17AtomicStringTable3AddEPKhj(%"class.WTF::AtomicStringTable"* %15, i8* %1, i32 %2) #6
  %17 = ptrtoint %"class.WTF::StringImpl"* %16 to i64
  %18 = bitcast %"class.WTF::AtomicString"* %0 to i64*
  store i64 %17, i64* %18, align 8
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF17AtomicStringTable3AddEPKhj(%"class.WTF::AtomicStringTable"*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3WTF12AtomicStringC2EPKDsj(%"class.WTF::AtomicString"* nocapture, i16*, i32) unnamed_addr #0 align 2 {
  %4 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN3WTF9Threading12static_data_E, align 8
  %5 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %4, i64 0, i32 1
  %6 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %5) #6
  %7 = bitcast i8* %6 to %"class.WTF::Threading"*
  %8 = icmp eq i8* %6, null
  br i1 %8, label %9, label %12, !prof !3

9:                                                ; preds = %3
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 24, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_9ThreadingEEEPKcv, i64 0, i64 0)) #6
  %11 = bitcast i8* %10 to %"class.WTF::Threading"*
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %5, i8* %10) #6
  tail call void @_ZN3WTF9ThreadingC1Ev(%"class.WTF::Threading"* %11) #6
  br label %12

12:                                               ; preds = %3, %9
  %13 = phi %"class.WTF::Threading"* [ %11, %9 ], [ %7, %3 ]
  %14 = getelementptr inbounds %"class.WTF::Threading", %"class.WTF::Threading"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::AtomicStringTable"*, %"class.WTF::AtomicStringTable"** %14, align 8
  %16 = tail call %"class.WTF::StringImpl"* @_ZN3WTF17AtomicStringTable3AddEPKDsj(%"class.WTF::AtomicStringTable"* %15, i16* %1, i32 %2) #6
  %17 = ptrtoint %"class.WTF::StringImpl"* %16 to i64
  %18 = bitcast %"class.WTF::AtomicString"* %0 to i64*
  store i64 %17, i64* %18, align 8
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF17AtomicStringTable3AddEPKDsj(%"class.WTF::AtomicStringTable"*, i16*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3WTF12AtomicStringC2EPKDs(%"class.WTF::AtomicString"* nocapture, i16*) unnamed_addr #0 align 2 {
  %3 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN3WTF9Threading12static_data_E, align 8
  %4 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %3, i64 0, i32 1
  %5 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %4) #6
  %6 = bitcast i8* %5 to %"class.WTF::Threading"*
  %7 = icmp eq i8* %5, null
  br i1 %7, label %8, label %11, !prof !3

8:                                                ; preds = %2
  %9 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 24, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_9ThreadingEEEPKcv, i64 0, i64 0)) #6
  %10 = bitcast i8* %9 to %"class.WTF::Threading"*
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %4, i8* %9) #6
  tail call void @_ZN3WTF9ThreadingC1Ev(%"class.WTF::Threading"* %10) #6
  br label %11

11:                                               ; preds = %2, %8
  %12 = phi %"class.WTF::Threading"* [ %10, %8 ], [ %6, %2 ]
  %13 = getelementptr inbounds %"class.WTF::Threading", %"class.WTF::Threading"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::AtomicStringTable"*, %"class.WTF::AtomicStringTable"** %13, align 8
  %15 = icmp eq i16* %1, null
  br i1 %15, label %27, label %16

16:                                               ; preds = %11, %16
  %17 = phi i64 [ %21, %16 ], [ 0, %11 ]
  %18 = getelementptr inbounds i16, i16* %1, i64 %17
  %19 = load i16, i16* %18, align 2
  %20 = icmp eq i16 %19, 0
  %21 = add i64 %17, 1
  br i1 %20, label %22, label %16

22:                                               ; preds = %16
  %23 = icmp ult i64 %17, 4294967296
  br i1 %23, label %25, label %24, !prof !2

24:                                               ; preds = %22
  tail call void @llvm.trap() #6
  unreachable

25:                                               ; preds = %22
  %26 = trunc i64 %17 to i32
  br label %27

27:                                               ; preds = %11, %25
  %28 = phi i32 [ %26, %25 ], [ 0, %11 ]
  %29 = tail call %"class.WTF::StringImpl"* @_ZN3WTF17AtomicStringTable3AddEPKDsj(%"class.WTF::AtomicStringTable"* %14, i16* %1, i32 %28) #6
  %30 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %31 = bitcast %"class.WTF::AtomicString"* %0 to i64*
  store i64 %30, i64* %31, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #0 align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN3WTF9Threading12static_data_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #6
  %5 = bitcast i8* %4 to %"class.WTF::Threading"*
  %6 = icmp eq i8* %4, null
  br i1 %6, label %7, label %10, !prof !3

7:                                                ; preds = %1
  %8 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 24, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_9ThreadingEEEPKcv, i64 0, i64 0)) #6
  %9 = bitcast i8* %8 to %"class.WTF::Threading"*
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %8) #6
  tail call void @_ZN3WTF9ThreadingC1Ev(%"class.WTF::Threading"* %9) #6
  br label %10

10:                                               ; preds = %1, %7
  %11 = phi %"class.WTF::Threading"* [ %9, %7 ], [ %5, %1 ]
  %12 = getelementptr inbounds %"class.WTF::Threading", %"class.WTF::Threading"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.WTF::AtomicStringTable"*, %"class.WTF::AtomicStringTable"** %12, align 8
  %14 = tail call %"class.WTF::StringImpl"* @_ZN3WTF17AtomicStringTable3AddEPNS_10StringImplE(%"class.WTF::AtomicStringTable"* %13, %"class.WTF::StringImpl"* %0) #6
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %33, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %33

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i33
  %25 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %24, i33 1) #6
  %26 = extractvalue { i33, i1 } %25, 1
  %27 = extractvalue { i33, i1 } %25, 0
  %28 = icmp slt i33 %27, 0
  %29 = or i1 %26, %28
  br i1 %29, label %30, label %31, !prof !3

30:                                               ; preds = %21
  tail call void @llvm.trap() #6
  unreachable

31:                                               ; preds = %21
  %32 = trunc i33 %27 to i32
  store i32 %32, i32* %22, align 4
  br label %33

33:                                               ; preds = %10, %16, %31
  ret %"class.WTF::StringImpl"* %14
}

declare %"class.WTF::StringImpl"* @_ZN3WTF17AtomicStringTable3AddEPNS_10StringImplE(%"class.WTF::AtomicStringTable"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString8FromUTF8EPKcm(i8*, i64) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i8* %0, null
  br i1 %3, label %4, label %27

4:                                                ; preds = %2
  %5 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %6 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = ptrtoint %"class.WTF::StringImpl"* %7 to i64
  %9 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %9, label %105, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %105

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #6
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !3

24:                                               ; preds = %15
  tail call void @llvm.trap() #6
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  br label %105

27:                                               ; preds = %2
  %28 = icmp eq i64 %1, 0
  br i1 %28, label %29, label %52

29:                                               ; preds = %27
  %30 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF12g_empty_atomE, align 8
  %31 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = ptrtoint %"class.WTF::StringImpl"* %32 to i64
  %34 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %34, label %105, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %105

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i33
  %44 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %43, i33 1) #6
  %45 = extractvalue { i33, i1 } %44, 1
  %46 = extractvalue { i33, i1 } %44, 0
  %47 = icmp slt i33 %46, 0
  %48 = or i1 %45, %47
  br i1 %48, label %49, label %50, !prof !3

49:                                               ; preds = %40
  tail call void @llvm.trap() #6
  unreachable

50:                                               ; preds = %40
  %51 = trunc i33 %46 to i32
  store i32 %51, i32* %41, align 4
  br label %105

52:                                               ; preds = %27
  %53 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN3WTF9Threading12static_data_E, align 8
  %54 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %53, i64 0, i32 1
  %55 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %54) #6
  %56 = bitcast i8* %55 to %"class.WTF::Threading"*
  %57 = icmp eq i8* %55, null
  br i1 %57, label %58, label %61, !prof !3

58:                                               ; preds = %52
  %59 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 24, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_9ThreadingEEEPKcv, i64 0, i64 0)) #6
  %60 = bitcast i8* %59 to %"class.WTF::Threading"*
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %54, i8* %59) #6
  tail call void @_ZN3WTF9ThreadingC1Ev(%"class.WTF::Threading"* %60) #6
  br label %61

61:                                               ; preds = %52, %58
  %62 = phi %"class.WTF::Threading"* [ %60, %58 ], [ %56, %52 ]
  %63 = getelementptr inbounds %"class.WTF::Threading", %"class.WTF::Threading"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::AtomicStringTable"*, %"class.WTF::AtomicStringTable"** %63, align 8
  %65 = getelementptr inbounds i8, i8* %0, i64 %1
  %66 = tail call %"class.WTF::StringImpl"* @_ZN3WTF17AtomicStringTable7AddUTF8EPKcS2_(%"class.WTF::AtomicStringTable"* %64, i8* nonnull %0, i8* %65) #6
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %105, label %68

68:                                               ; preds = %61
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 acquire, align 4
  %71 = and i32 %70, 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %89, label %73

73:                                               ; preds = %68
  %74 = load atomic i32, i32* %69 monotonic, align 4
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %91

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = zext i32 %79 to i33
  %81 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %80, i33 1) #6
  %82 = extractvalue { i33, i1 } %81, 1
  %83 = extractvalue { i33, i1 } %81, 0
  %84 = icmp slt i33 %83, 0
  %85 = or i1 %82, %84
  br i1 %85, label %86, label %87, !prof !3

86:                                               ; preds = %77
  tail call void @llvm.trap() #6
  unreachable

87:                                               ; preds = %77
  %88 = trunc i33 %83 to i32
  store i32 %88, i32* %78, align 4
  br label %91

89:                                               ; preds = %68
  %90 = tail call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %66) #6
  br label %91

91:                                               ; preds = %73, %87, %89
  %92 = phi %"class.WTF::StringImpl"* [ %66, %87 ], [ %66, %73 ], [ %90, %89 ]
  %93 = ptrtoint %"class.WTF::StringImpl"* %92 to i64
  %94 = load atomic i32, i32* %69 monotonic, align 4
  %95 = and i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %98 = load i32, i32* %97, align 4
  br i1 %96, label %99, label %101

99:                                               ; preds = %91
  %100 = add i32 %98, -1
  store i32 %100, i32* %97, align 4
  br label %101

101:                                              ; preds = %99, %91
  %102 = phi i32 [ %100, %99 ], [ %98, %91 ]
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %105

104:                                              ; preds = %101
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %66) #6
  br label %105

105:                                              ; preds = %61, %104, %101, %50, %35, %29, %25, %10, %4
  %106 = phi i64 [ %8, %4 ], [ %8, %10 ], [ %8, %25 ], [ %33, %29 ], [ %33, %35 ], [ %33, %50 ], [ %93, %101 ], [ %93, %104 ], [ 0, %61 ]
  %107 = inttoptr i64 %106 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %107
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.WTF::StringImpl"* @_ZN3WTF17AtomicStringTable7AddUTF8EPKcS2_(%"class.WTF::AtomicStringTable"*, i8*, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString8FromUTF8EPKc(i8*) local_unnamed_addr #0 align 2 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %3, label %26

3:                                                ; preds = %1
  %4 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %5 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = ptrtoint %"class.WTF::StringImpl"* %6 to i64
  %8 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %8, label %104, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %104

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i33
  %18 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %17, i33 1) #6
  %19 = extractvalue { i33, i1 } %18, 1
  %20 = extractvalue { i33, i1 } %18, 0
  %21 = icmp slt i33 %20, 0
  %22 = or i1 %19, %21
  br i1 %22, label %23, label %24, !prof !3

23:                                               ; preds = %14
  tail call void @llvm.trap() #6
  unreachable

24:                                               ; preds = %14
  %25 = trunc i33 %20 to i32
  store i32 %25, i32* %15, align 4
  br label %104

26:                                               ; preds = %1
  %27 = load i8, i8* %0, align 1
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %52

29:                                               ; preds = %26
  %30 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF12g_empty_atomE, align 8
  %31 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = ptrtoint %"class.WTF::StringImpl"* %32 to i64
  %34 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %34, label %104, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %104

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i33
  %44 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %43, i33 1) #6
  %45 = extractvalue { i33, i1 } %44, 1
  %46 = extractvalue { i33, i1 } %44, 0
  %47 = icmp slt i33 %46, 0
  %48 = or i1 %45, %47
  br i1 %48, label %49, label %50, !prof !3

49:                                               ; preds = %40
  tail call void @llvm.trap() #6
  unreachable

50:                                               ; preds = %40
  %51 = trunc i33 %46 to i32
  store i32 %51, i32* %41, align 4
  br label %104

52:                                               ; preds = %26
  %53 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN3WTF9Threading12static_data_E, align 8
  %54 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %53, i64 0, i32 1
  %55 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %54) #6
  %56 = bitcast i8* %55 to %"class.WTF::Threading"*
  %57 = icmp eq i8* %55, null
  br i1 %57, label %58, label %61, !prof !3

58:                                               ; preds = %52
  %59 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 24, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_9ThreadingEEEPKcv, i64 0, i64 0)) #6
  %60 = bitcast i8* %59 to %"class.WTF::Threading"*
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %54, i8* %59) #6
  tail call void @_ZN3WTF9ThreadingC1Ev(%"class.WTF::Threading"* %60) #6
  br label %61

61:                                               ; preds = %52, %58
  %62 = phi %"class.WTF::Threading"* [ %60, %58 ], [ %56, %52 ]
  %63 = getelementptr inbounds %"class.WTF::Threading", %"class.WTF::Threading"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::AtomicStringTable"*, %"class.WTF::AtomicStringTable"** %63, align 8
  %65 = tail call %"class.WTF::StringImpl"* @_ZN3WTF17AtomicStringTable7AddUTF8EPKcS2_(%"class.WTF::AtomicStringTable"* %64, i8* nonnull %0, i8* null) #6
  %66 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %66, label %104, label %67

67:                                               ; preds = %61
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 acquire, align 4
  %70 = and i32 %69, 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %88, label %72

72:                                               ; preds = %67
  %73 = load atomic i32, i32* %68 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %90

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = zext i32 %78 to i33
  %80 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %79, i33 1) #6
  %81 = extractvalue { i33, i1 } %80, 1
  %82 = extractvalue { i33, i1 } %80, 0
  %83 = icmp slt i33 %82, 0
  %84 = or i1 %81, %83
  br i1 %84, label %85, label %86, !prof !3

85:                                               ; preds = %76
  tail call void @llvm.trap() #6
  unreachable

86:                                               ; preds = %76
  %87 = trunc i33 %82 to i32
  store i32 %87, i32* %77, align 4
  br label %90

88:                                               ; preds = %67
  %89 = tail call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %65) #6
  br label %90

90:                                               ; preds = %72, %86, %88
  %91 = phi %"class.WTF::StringImpl"* [ %65, %86 ], [ %65, %72 ], [ %89, %88 ]
  %92 = ptrtoint %"class.WTF::StringImpl"* %91 to i64
  %93 = load atomic i32, i32* %68 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %97 = load i32, i32* %96, align 4
  br i1 %95, label %98, label %100

98:                                               ; preds = %90
  %99 = add i32 %97, -1
  store i32 %99, i32* %96, align 4
  br label %100

100:                                              ; preds = %98, %90
  %101 = phi i32 [ %99, %98 ], [ %97, %90 ]
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %100
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #6
  br label %104

104:                                              ; preds = %61, %103, %100, %50, %35, %29, %24, %9, %3
  %105 = phi i64 [ %7, %3 ], [ %7, %9 ], [ %7, %24 ], [ %33, %29 ], [ %33, %35 ], [ %33, %50 ], [ %92, %100 ], [ %92, %103 ], [ 0, %61 ]
  %106 = inttoptr i64 %105 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %106
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK3WTF12AtomicString10LowerASCIIEv(%"class.WTF::AtomicString"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %81, label %5, !prof !3

5:                                                ; preds = %1
  %6 = tail call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl10LowerASCIIEv(%"class.WTF::StringImpl"* nonnull %3) #6
  %7 = icmp eq %"class.WTF::StringImpl"* %6, %3
  br i1 %7, label %8, label %29, !prof !2

8:                                                ; preds = %5
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %10 = ptrtoint %"class.WTF::StringImpl"* %9 to i64
  %11 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %11, label %68, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %68

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #6
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !3

26:                                               ; preds = %17
  tail call void @llvm.trap() #6
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %68

29:                                               ; preds = %5
  %30 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %30, label %81, label %31

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 acquire, align 4
  %34 = and i32 %33, 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %52, label %36

36:                                               ; preds = %31
  %37 = load atomic i32, i32* %32 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %54

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i33
  %44 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %43, i33 1) #6
  %45 = extractvalue { i33, i1 } %44, 1
  %46 = extractvalue { i33, i1 } %44, 0
  %47 = icmp slt i33 %46, 0
  %48 = or i1 %45, %47
  br i1 %48, label %49, label %50, !prof !3

49:                                               ; preds = %40
  tail call void @llvm.trap() #6
  unreachable

50:                                               ; preds = %40
  %51 = trunc i33 %46 to i32
  store i32 %51, i32* %41, align 4
  br label %54

52:                                               ; preds = %31
  %53 = tail call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %6) #6
  br label %54

54:                                               ; preds = %36, %50, %52
  %55 = phi %"class.WTF::StringImpl"* [ %6, %50 ], [ %6, %36 ], [ %53, %52 ]
  %56 = ptrtoint %"class.WTF::StringImpl"* %55 to i64
  %57 = load atomic i32, i32* %32 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %54
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %54
  %65 = phi i32 [ %63, %62 ], [ %61, %54 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %81

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %6) #6
  br label %81

68:                                               ; preds = %8, %12, %27
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %77

75:                                               ; preds = %68
  %76 = add i32 %74, -1
  store i32 %76, i32* %73, align 4
  br label %77

77:                                               ; preds = %75, %68
  %78 = phi i32 [ %76, %75 ], [ %74, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #6
  br label %81

81:                                               ; preds = %1, %29, %67, %64, %80, %77
  %82 = phi i64 [ %10, %77 ], [ %10, %80 ], [ %56, %67 ], [ %56, %64 ], [ 0, %29 ], [ 0, %1 ]
  %83 = inttoptr i64 %82 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %83
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl10LowerASCIIEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK3WTF12AtomicString10UpperASCIIEv(%"class.WTF::AtomicString"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %45, label %5, !prof !3

5:                                                ; preds = %1
  %6 = tail call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl10UpperASCIIEv(%"class.WTF::StringImpl"* nonnull %3) #6
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %45, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 acquire, align 4
  %11 = and i32 %10, 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %29, label %13

13:                                               ; preds = %8
  %14 = load atomic i32, i32* %9 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %31

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #6
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !3

26:                                               ; preds = %17
  tail call void @llvm.trap() #6
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %31

29:                                               ; preds = %8
  %30 = tail call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %6) #6
  br label %31

31:                                               ; preds = %13, %27, %29
  %32 = phi %"class.WTF::StringImpl"* [ %6, %27 ], [ %6, %13 ], [ %30, %29 ]
  %33 = ptrtoint %"class.WTF::StringImpl"* %32 to i64
  %34 = load atomic i32, i32* %9 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %41

39:                                               ; preds = %31
  %40 = add i32 %38, -1
  store i32 %40, i32* %37, align 4
  br label %41

41:                                               ; preds = %39, %31
  %42 = phi i32 [ %40, %39 ], [ %38, %31 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %6) #6
  br label %45

45:                                               ; preds = %1, %5, %44, %41
  %46 = phi i64 [ %33, %41 ], [ %33, %44 ], [ 0, %5 ], [ 0, %1 ]
  %47 = inttoptr i64 %46 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %47
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl10UpperASCIIEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString6NumberEdj(double, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca [96 x i8], align 16
  %4 = getelementptr inbounds [96 x i8], [96 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %4) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 -86, i64 96, i1 false)
  %5 = call i8* @_ZN3WTF28NumberToFixedPrecisionStringEdjPc(double %0, i32 %1, i8* nonnull %4) #6
  %6 = icmp eq i8* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %2
  %8 = call i64 @strlen(i8* nonnull %5) #7
  %9 = icmp ult i64 %8, 4294967296
  br i1 %9, label %11, label %10, !prof !2

10:                                               ; preds = %7
  call void @llvm.trap() #6
  unreachable

11:                                               ; preds = %2, %7
  %12 = phi i64 [ %8, %7 ], [ 0, %2 ]
  %13 = trunc i64 %12 to i32
  %14 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN3WTF9Threading12static_data_E, align 8
  %15 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %14, i64 0, i32 1
  %16 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %15) #6
  %17 = bitcast i8* %16 to %"class.WTF::Threading"*
  %18 = icmp eq i8* %16, null
  br i1 %18, label %19, label %22, !prof !3

19:                                               ; preds = %11
  %20 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 24, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_9ThreadingEEEPKcv, i64 0, i64 0)) #6
  %21 = bitcast i8* %20 to %"class.WTF::Threading"*
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %15, i8* %20) #6
  call void @_ZN3WTF9ThreadingC1Ev(%"class.WTF::Threading"* %21) #6
  br label %22

22:                                               ; preds = %11, %19
  %23 = phi %"class.WTF::Threading"* [ %21, %19 ], [ %17, %11 ]
  %24 = getelementptr inbounds %"class.WTF::Threading", %"class.WTF::Threading"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::AtomicStringTable"*, %"class.WTF::AtomicStringTable"** %24, align 8
  %26 = call %"class.WTF::StringImpl"* @_ZN3WTF17AtomicStringTable3AddEPKhj(%"class.WTF::AtomicStringTable"* %25, i8* %5, i32 %13) #6
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %4) #6
  ret %"class.WTF::StringImpl"* %26
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare i8* @_ZN3WTF28NumberToFixedPrecisionStringEdjPc(double, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN3WTFlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_12AtomicStringE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0
  %4 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN3WTFlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_6StringE(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, %"class.WTF::String"* dereferenceable(8) %3) #6
  ret %"class.std::__1::basic_ostream"* %4
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN3WTFlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_6StringE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3WTF12AtomicString14WriteIntoTraceEN8perfetto11TracedValueE(%"class.WTF::AtomicString"*, %"class.perfetto::TracedValue"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.perfetto::TracedValue", align 8
  %4 = bitcast %"class.perfetto::TracedValue"* %1 to i8*
  %5 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %0, i64 0, i32 0
  %6 = bitcast %"class.perfetto::TracedValue"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 8 %4, i64 16, i1 false)
  call void @_ZNK3WTF6String14WriteIntoTraceEN8perfetto11TracedValueE(%"class.WTF::String"* %5, %"class.perfetto::TracedValue"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare void @_ZN3WTF9ThreadingC1Ev(%"class.WTF::Threading"*) unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZNK3WTF6String14WriteIntoTraceEN8perfetto11TracedValueE(%"class.WTF::String"*, %"class.perfetto::TracedValue"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
