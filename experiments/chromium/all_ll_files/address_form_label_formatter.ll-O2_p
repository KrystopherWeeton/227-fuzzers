; ModuleID = '../../components/autofill/core/browser/ui/address_form_label_formatter.cc'
source_filename = "../../components/autofill/core/browser/ui/address_form_label_formatter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.autofill::AddressFormLabelFormatter" = type <{ %"class.autofill::LabelFormatter", i8, [7 x i8] }>
%"class.autofill::LabelFormatter" = type { i32 (...)**, %"class.std::__1::vector"*, %"class.std::__1::basic_string", i32, i32, %"class.std::__1::vector.1" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { i32* }
%"class.std::__1::vector" = type opaque
%"class.std::__1::basic_string.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.10 }
%union.anon.10 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.autofill::AutofillProfile" = type { %"class.autofill::AutofillDataModel", %"class.autofill::NameInfo", %"class.autofill::EmailInfo", %"class.autofill::CompanyInfo", %"class.autofill::PhoneNumber", %"class.autofill::Address", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"class.std::__1::basic_string", %"class.base::Time", i32, i8, i8, %"class.std::__1::map", %"class.std::__1::map", %"class.base::WeakPtrFactory" }
%"class.autofill::AutofillDataModel" = type { %"class.autofill::FormGroup", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i64, %"class.base::Time", %"class.base::Time" }
%"class.autofill::FormGroup" = type { i32 (...)** }
%"class.autofill::NameInfo" = type { %"class.autofill::FormGroup", %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.autofill::structured_address::AddressComponent"* }
%"class.autofill::structured_address::AddressComponent" = type <{ i32 (...)**, %"class.absl::optional", i32, i32, %"class.std::__1::vector.19", %"class.absl::optional.26", %"class.autofill::structured_address::AddressComponent"*, i32, [4 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.18 }
%union.anon.18 = type { %"class.std::__1::basic_string.7" }
%"class.std::__1::vector.19" = type { %"class.std::__1::__vector_base.20" }
%"class.std::__1::__vector_base.20" = type { %"class.autofill::structured_address::AddressComponent"**, %"class.autofill::structured_address::AddressComponent"**, %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.autofill::structured_address::AddressComponent"** }
%"class.absl::optional.26" = type { %"class.absl::optional_internal::optional_data.27" }
%"class.absl::optional_internal::optional_data.27" = type { %"class.absl::optional_internal::optional_data_base.28" }
%"class.absl::optional_internal::optional_data_base.28" = type { %"class.absl::optional_internal::optional_data_dtor_base.29" }
%"class.absl::optional_internal::optional_data_dtor_base.29" = type { i8, %union.anon.30 }
%union.anon.30 = type { %"class.std::__1::vector.31" }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"struct.autofill::structured_address::AddressToken"*, %"struct.autofill::structured_address::AddressToken"*, %"class.std::__1::__compressed_pair.33" }
%"struct.autofill::structured_address::AddressToken" = type opaque
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.autofill::structured_address::AddressToken"* }
%"class.autofill::EmailInfo" = type { %"class.autofill::FormGroup", %"class.std::__1::basic_string.7" }
%"class.autofill::CompanyInfo" = type { %"class.autofill::FormGroup", %"class.std::__1::basic_string.7", %"class.autofill::AutofillProfile"* }
%"class.autofill::PhoneNumber" = type { %"class.autofill::FormGroup", %"class.std::__1::basic_string.7", %"class.autofill::AutofillProfile"*, %"class.autofill::i18n::PhoneObject" }
%"class.autofill::i18n::PhoneObject" = type { %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.39", %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7" }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.i18n::phonenumbers::PhoneNumber"* }
%"class.i18n::phonenumbers::PhoneNumber" = type opaque
%"class.autofill::Address" = type { %"class.autofill::FormGroup", %"class.std::__1::vector.45", %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7", %"class.std::__1::basic_string", %"class.autofill::structured_address::Address" }
%"class.std::__1::vector.45" = type { %"class.std::__1::__vector_base.46" }
%"class.std::__1::__vector_base.46" = type { %"class.std::__1::basic_string.7"*, %"class.std::__1::basic_string.7"*, %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.std::__1::basic_string.7"* }
%"class.autofill::structured_address::Address" = type { %"class.autofill::structured_address::AddressComponent.base", %"class.autofill::structured_address::StreetAddress", %"class.autofill::structured_address::PostalCode", %"class.autofill::structured_address::SortingCode", %"class.autofill::structured_address::DependentLocality", %"class.autofill::structured_address::City", %"class.autofill::structured_address::State", %"class.autofill::structured_address::CountryCode" }
%"class.autofill::structured_address::AddressComponent.base" = type <{ i32 (...)**, %"class.absl::optional", i32, i32, %"class.std::__1::vector.19", %"class.absl::optional.26", %"class.autofill::structured_address::AddressComponent"*, i32 }>
%"class.autofill::structured_address::StreetAddress" = type { %"class.autofill::structured_address::AddressComponentWithRewriter.base", [4 x i8], %"class.autofill::structured_address::StreetAndDependentStreetName", %"class.autofill::structured_address::HouseNumber", %"class.autofill::structured_address::Premise", %"class.autofill::structured_address::SubPremise", %"class.std::__1::vector.45" }
%"class.autofill::structured_address::AddressComponentWithRewriter.base" = type { %"class.autofill::structured_address::AddressComponent.base" }
%"class.autofill::structured_address::StreetAndDependentStreetName" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8], %"class.autofill::structured_address::StreetName", %"class.autofill::structured_address::DependentStreetName" }
%"class.autofill::structured_address::StreetName" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.autofill::structured_address::DependentStreetName" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.autofill::structured_address::HouseNumber" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.autofill::structured_address::Premise" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.autofill::structured_address::SubPremise" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8], %"class.autofill::structured_address::Floor", %"class.autofill::structured_address::Apartment" }
%"class.autofill::structured_address::Floor" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.autofill::structured_address::Apartment" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.autofill::structured_address::PostalCode" = type { %"class.autofill::structured_address::AddressComponentWithRewriter.base", [4 x i8] }
%"class.autofill::structured_address::SortingCode" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.autofill::structured_address::DependentLocality" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.autofill::structured_address::City" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.autofill::structured_address::State" = type { %"class.autofill::structured_address::AddressComponentWithRewriter.base", [4 x i8] }
%"class.autofill::structured_address::CountryCode" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.52", %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { i64 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.60" }
%"struct.std::__1::__atomic_base.60" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.61" }
%"struct.std::__1::atomic.61" = type { %"struct.std::__1::__atomic_base.62" }
%"struct.std::__1::__atomic_base.62" = type { %"struct.std::__1::__atomic_base.63" }
%"struct.std::__1::__atomic_base.63" = type { %"struct.std::__1::__cxx_atomic_impl.64" }
%"struct.std::__1::__cxx_atomic_impl.64" = type { %"struct.std::__1::__cxx_atomic_base_impl.65" }
%"struct.std::__1::__cxx_atomic_base_impl.65" = type { i8 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.11 }
%struct.anon.11 = type { %"struct.std::__1::__padding.12", i8 }
%"struct.std::__1::__padding.12" = type { [1 x i8] }

@_ZTVN8autofill25AddressFormLabelFormatterE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.autofill::AddressFormLabelFormatter"*)* @_ZN8autofill25AddressFormLabelFormatterD2Ev to i8*), i8* bitcast (void (%"class.autofill::AddressFormLabelFormatter"*)* @_ZN8autofill25AddressFormLabelFormatterD0Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_string.7"*, %"class.autofill::AddressFormLabelFormatter"*, %"class.autofill::AutofillProfile"*, i32)* @_ZNK8autofill25AddressFormLabelFormatter18GetLabelForProfileERKNS_15AutofillProfileENS_14FieldTypeGroupE to i8*)] }, align 8

@_ZN8autofill25AddressFormLabelFormatterC1ERKNSt3__16vectorIPNS_15AutofillProfileENS1_9allocatorIS4_EEEERKNS1_12basic_stringIcNS1_11char_traitsIcEENS5_IcEEEENS_15ServerFieldTypeEjRKNS2_ISH_NS5_ISH_EEEE = hidden unnamed_addr alias void (%"class.autofill::AddressFormLabelFormatter"*, %"class.std::__1::vector"*, %"class.std::__1::basic_string"*, i32, i32, %"class.std::__1::vector.1"*), void (%"class.autofill::AddressFormLabelFormatter"*, %"class.std::__1::vector"*, %"class.std::__1::basic_string"*, i32, i32, %"class.std::__1::vector.1"*)* @_ZN8autofill25AddressFormLabelFormatterC2ERKNSt3__16vectorIPNS_15AutofillProfileENS1_9allocatorIS4_EEEERKNS1_12basic_stringIcNS1_11char_traitsIcEENS5_IcEEEENS_15ServerFieldTypeEjRKNS2_ISH_NS5_ISH_EEEE
@_ZN8autofill25AddressFormLabelFormatterD1Ev = hidden unnamed_addr alias void (%"class.autofill::AddressFormLabelFormatter"*), void (%"class.autofill::AddressFormLabelFormatter"*)* @_ZN8autofill25AddressFormLabelFormatterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill25AddressFormLabelFormatterC2ERKNSt3__16vectorIPNS_15AutofillProfileENS1_9allocatorIS4_EEEERKNS1_12basic_stringIcNS1_11char_traitsIcEENS5_IcEEEENS_15ServerFieldTypeEjRKNS2_ISH_NS5_ISH_EEEE(%"class.autofill::AddressFormLabelFormatter"*, %"class.std::__1::vector"*, %"class.std::__1::basic_string"* dereferenceable(24), i32, i32, %"class.std::__1::vector.1"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.autofill::AddressFormLabelFormatter", %"class.autofill::AddressFormLabelFormatter"* %0, i64 0, i32 0
  tail call void @_ZN8autofill14LabelFormatterC2ERKNSt3__16vectorIPNS_15AutofillProfileENS1_9allocatorIS4_EEEERKNS1_12basic_stringIcNS1_11char_traitsIcEENS5_IcEEEENS_15ServerFieldTypeEjRKNS2_ISH_NS5_ISH_EEEE(%"class.autofill::LabelFormatter"* %7, %"class.std::__1::vector"* %1, %"class.std::__1::basic_string"* dereferenceable(24) %2, i32 %3, i32 %4, %"class.std::__1::vector.1"* dereferenceable(24) %5) #5
  %8 = getelementptr inbounds %"class.autofill::AddressFormLabelFormatter", %"class.autofill::AddressFormLabelFormatter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN8autofill25AddressFormLabelFormatterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.autofill::AddressFormLabelFormatter", %"class.autofill::AddressFormLabelFormatter"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.autofill::AddressFormLabelFormatter", %"class.autofill::AddressFormLabelFormatter"* %0, i64 0, i32 0, i32 5
  %11 = tail call zeroext i1 @_ZN8autofill16HasStreetAddressERKNSt3__16vectorINS_15ServerFieldTypeENS0_9allocatorIS2_EEEE(%"class.std::__1::vector.1"* dereferenceable(24) %10) #5
  %12 = zext i1 %11 to i8
  store i8 %12, i8* %9, align 8
  ret void
}

declare void @_ZN8autofill14LabelFormatterC2ERKNSt3__16vectorIPNS_15AutofillProfileENS1_9allocatorIS4_EEEERKNS1_12basic_stringIcNS1_11char_traitsIcEENS5_IcEEEENS_15ServerFieldTypeEjRKNS2_ISH_NS5_ISH_EEEE(%"class.autofill::LabelFormatter"*, %"class.std::__1::vector"*, %"class.std::__1::basic_string"* dereferenceable(24), i32, i32, %"class.std::__1::vector.1"* dereferenceable(24)) unnamed_addr #1

declare zeroext i1 @_ZN8autofill16HasStreetAddressERKNSt3__16vectorINS_15ServerFieldTypeENS0_9allocatorIS2_EEEE(%"class.std::__1::vector.1"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN8autofill14LabelFormatterD2Ev(%"class.autofill::LabelFormatter"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill25AddressFormLabelFormatterD2Ev(%"class.autofill::AddressFormLabelFormatter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.autofill::AddressFormLabelFormatter", %"class.autofill::AddressFormLabelFormatter"* %0, i64 0, i32 0
  tail call void @_ZN8autofill14LabelFormatterD2Ev(%"class.autofill::LabelFormatter"* %2) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill25AddressFormLabelFormatterD0Ev(%"class.autofill::AddressFormLabelFormatter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.autofill::AddressFormLabelFormatter", %"class.autofill::AddressFormLabelFormatter"* %0, i64 0, i32 0
  tail call void @_ZN8autofill14LabelFormatterD2Ev(%"class.autofill::LabelFormatter"* %2) #5
  %3 = bitcast %"class.autofill::AddressFormLabelFormatter"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8autofill25AddressFormLabelFormatter18GetLabelForProfileERKNS_15AutofillProfileENS_14FieldTypeGroupE(%"class.std::__1::basic_string.7"* noalias sret, %"class.autofill::AddressFormLabelFormatter"*, %"class.autofill::AutofillProfile"* dereferenceable(2856), i32) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::vector.45", align 8
  %6 = alloca %"class.std::__1::basic_string.7", align 8
  %7 = alloca %"class.std::__1::basic_string.7", align 8
  %8 = icmp eq i32 %3, 5
  br i1 %8, label %12, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.autofill::AddressFormLabelFormatter", %"class.autofill::AddressFormLabelFormatter"* %1, i64 0, i32 0, i32 5
  %11 = getelementptr inbounds %"class.autofill::AddressFormLabelFormatter", %"class.autofill::AddressFormLabelFormatter"* %1, i64 0, i32 0, i32 2
  tail call void @_ZN8autofill23GetLabelNationalAddressERKNSt3__16vectorINS_15ServerFieldTypeENS0_9allocatorIS2_EEEERKNS_15AutofillProfileERKNS0_12basic_stringIcNS0_11char_traitsIcEENS3_IcEEEE(%"class.std::__1::basic_string.7"* sret %0, %"class.std::__1::vector.1"* dereferenceable(24) %10, %"class.autofill::AutofillProfile"* dereferenceable(2856) %2, %"class.std::__1::basic_string"* dereferenceable(24) %11) #5
  br label %72

12:                                               ; preds = %4
  %13 = bitcast %"class.std::__1::vector.45"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #5
  %14 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %5, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %5, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 24, i1 false) #5
  %16 = getelementptr inbounds %"class.autofill::AddressFormLabelFormatter", %"class.autofill::AddressFormLabelFormatter"* %1, i64 0, i32 0, i32 4
  %17 = load i32, i32* %16, align 4
  %18 = tail call zeroext i1 @_ZN8autofill9data_util12ContainsNameEj(i32 %17) #5
  br i1 %18, label %19, label %31

19:                                               ; preds = %12
  %20 = bitcast %"class.std::__1::basic_string.7"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #5
  %21 = getelementptr inbounds %"class.autofill::AddressFormLabelFormatter", %"class.autofill::AddressFormLabelFormatter"* %1, i64 0, i32 0, i32 5
  %22 = getelementptr inbounds %"class.autofill::AddressFormLabelFormatter", %"class.autofill::AddressFormLabelFormatter"* %1, i64 0, i32 0, i32 2
  call void @_ZN8autofill12GetLabelNameERKNSt3__16vectorINS_15ServerFieldTypeENS0_9allocatorIS2_EEEERKNS_15AutofillProfileERKNS0_12basic_stringIcNS0_11char_traitsIcEENS3_IcEEEE(%"class.std::__1::basic_string.7"* nonnull sret %6, %"class.std::__1::vector.1"* dereferenceable(24) %21, %"class.autofill::AutofillProfile"* dereferenceable(2856) %2, %"class.std::__1::basic_string"* dereferenceable(24) %22) #5
  call void @_ZN8autofill22AddLabelPartIfNotEmptyERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEPNS0_6vectorIS6_NS4_IS6_EEEE(%"class.std::__1::basic_string.7"* nonnull dereferenceable(24) %6, %"class.std::__1::vector.45"* nonnull %5) #5
  %23 = bitcast %"class.std::__1::basic_string.7"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %19
  %28 = bitcast %"class.std::__1::basic_string.7"* %6 to i8**
  %29 = load i8*, i8** %28, align 8
  call void @_ZdlPv(i8* %29) #6
  br label %30

30:                                               ; preds = %19, %27
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #5
  br label %31

31:                                               ; preds = %30, %12
  %32 = bitcast %"class.std::__1::basic_string.7"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #5
  %33 = getelementptr inbounds %"class.autofill::AddressFormLabelFormatter", %"class.autofill::AddressFormLabelFormatter"* %1, i64 0, i32 0, i32 3
  %34 = load i32, i32* %33, align 8
  %35 = getelementptr inbounds %"class.autofill::AddressFormLabelFormatter", %"class.autofill::AddressFormLabelFormatter"* %1, i64 0, i32 1
  %36 = load i8, i8* %35, align 8, !range !2
  %37 = icmp ne i8 %36, 0
  %38 = getelementptr inbounds %"class.autofill::AddressFormLabelFormatter", %"class.autofill::AddressFormLabelFormatter"* %1, i64 0, i32 0, i32 2
  %39 = getelementptr inbounds %"class.autofill::AddressFormLabelFormatter", %"class.autofill::AddressFormLabelFormatter"* %1, i64 0, i32 0, i32 5
  call void @_ZN8autofill25GetLabelForFocusedAddressENS_15ServerFieldTypeEbRKNS_15AutofillProfileERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEERKNS4_6vectorIS0_NS8_IS0_EEEE(%"class.std::__1::basic_string.7"* nonnull sret %7, i32 %34, i1 zeroext %37, %"class.autofill::AutofillProfile"* dereferenceable(2856) %2, %"class.std::__1::basic_string"* dereferenceable(24) %38, %"class.std::__1::vector.1"* dereferenceable(24) %39) #5
  call void @_ZN8autofill22AddLabelPartIfNotEmptyERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEPNS0_6vectorIS6_NS4_IS6_EEEE(%"class.std::__1::basic_string.7"* nonnull dereferenceable(24) %7, %"class.std::__1::vector.45"* nonnull %5) #5
  %40 = bitcast %"class.std::__1::basic_string.7"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %40, i64 0, i32 1, i32 1
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %31
  %45 = bitcast %"class.std::__1::basic_string.7"* %7 to i8**
  %46 = load i8*, i8** %45, align 8
  call void @_ZdlPv(i8* %46) #6
  br label %47

47:                                               ; preds = %31, %44
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #5
  call void @_ZN8autofill18ConstructLabelLineERKNSt3__16vectorINS0_12basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEENS5_IS7_EEEE(%"class.std::__1::basic_string.7"* sret %0, %"class.std::__1::vector.45"* nonnull dereferenceable(24) %5) #5
  %48 = load %"class.std::__1::basic_string.7"*, %"class.std::__1::basic_string.7"** %14, align 8
  %49 = icmp eq %"class.std::__1::basic_string.7"* %48, null
  br i1 %49, label %71, label %50

50:                                               ; preds = %47
  %51 = bitcast %"class.std::__1::basic_string.7"* %48 to i8*
  %52 = load %"class.std::__1::basic_string.7"*, %"class.std::__1::basic_string.7"** %15, align 8
  %53 = icmp eq %"class.std::__1::basic_string.7"* %52, %48
  br i1 %53, label %69, label %54

54:                                               ; preds = %50, %64
  %55 = phi %"class.std::__1::basic_string.7"* [ %56, %64 ], [ %52, %50 ]
  %56 = getelementptr inbounds %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7"* %55, i64 -1
  %57 = bitcast %"class.std::__1::basic_string.7"* %56 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %57, i64 0, i32 1, i32 1
  %59 = load i8, i8* %58, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %64

61:                                               ; preds = %54
  %62 = bitcast %"class.std::__1::basic_string.7"* %56 to i8**
  %63 = load i8*, i8** %62, align 8
  call void @_ZdlPv(i8* %63) #6
  br label %64

64:                                               ; preds = %61, %54
  %65 = icmp eq %"class.std::__1::basic_string.7"* %56, %48
  br i1 %65, label %66, label %54

66:                                               ; preds = %64
  %67 = bitcast %"class.std::__1::vector.45"* %5 to i8**
  %68 = load i8*, i8** %67, align 8
  br label %69

69:                                               ; preds = %66, %50
  %70 = phi i8* [ %68, %66 ], [ %51, %50 ]
  store %"class.std::__1::basic_string.7"* %48, %"class.std::__1::basic_string.7"** %15, align 8
  call void @_ZdlPv(i8* %70) #6
  br label %71

71:                                               ; preds = %47, %69
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #5
  br label %72

72:                                               ; preds = %71, %9
  ret void
}

declare void @_ZN8autofill23GetLabelNationalAddressERKNSt3__16vectorINS_15ServerFieldTypeENS0_9allocatorIS2_EEEERKNS_15AutofillProfileERKNS0_12basic_stringIcNS0_11char_traitsIcEENS3_IcEEEE(%"class.std::__1::basic_string.7"* sret, %"class.std::__1::vector.1"* dereferenceable(24), %"class.autofill::AutofillProfile"* dereferenceable(2856), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare zeroext i1 @_ZN8autofill9data_util12ContainsNameEj(i32) local_unnamed_addr #1

declare void @_ZN8autofill22AddLabelPartIfNotEmptyERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEPNS0_6vectorIS6_NS4_IS6_EEEE(%"class.std::__1::basic_string.7"* dereferenceable(24), %"class.std::__1::vector.45"*) local_unnamed_addr #1

declare void @_ZN8autofill12GetLabelNameERKNSt3__16vectorINS_15ServerFieldTypeENS0_9allocatorIS2_EEEERKNS_15AutofillProfileERKNS0_12basic_stringIcNS0_11char_traitsIcEENS3_IcEEEE(%"class.std::__1::basic_string.7"* sret, %"class.std::__1::vector.1"* dereferenceable(24), %"class.autofill::AutofillProfile"* dereferenceable(2856), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN8autofill25GetLabelForFocusedAddressENS_15ServerFieldTypeEbRKNS_15AutofillProfileERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEERKNS4_6vectorIS0_NS8_IS0_EEEE(%"class.std::__1::basic_string.7"* sret, i32, i1 zeroext, %"class.autofill::AutofillProfile"* dereferenceable(2856), %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::vector.1"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN8autofill18ConstructLabelLineERKNSt3__16vectorINS0_12basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEENS5_IS7_EEEE(%"class.std::__1::basic_string.7"* sret, %"class.std::__1::vector.45"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
