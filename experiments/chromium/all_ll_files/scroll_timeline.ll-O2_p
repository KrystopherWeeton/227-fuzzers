; ModuleID = '../../cc/animation/scroll_timeline.cc'
source_filename = "../../cc/animation/scroll_timeline.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.cc::ScrollTimeline" = type { %"class.cc::AnimationTimeline.base", %"class.absl::optional", %"class.absl::optional", i32, %"class.std::__1::vector", double }
%"class.cc::AnimationTimeline.base" = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8], %"class.std::__1::unordered_map", i32, [4 x i8], %"class.cc::AnimationHost"*, i8, i8 }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.16", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2", %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { i64 }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { float }
%"class.cc::AnimationHost" = type { %"class.cc::MutatorHost", %"class.cc::LayerTreeMutatorClient", %"class.std::__1::unordered_map.19", %"class.std::__1::vector.45", %"class.std::__1::unordered_map.57", %"class.cc::MutatorHostClient"*, %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.87", i32, i8, %"class.std::__1::unique_ptr.93", i64, i8, i8, i8, i8, i8, %"class.std::__1::vector.99", %"class.base::WeakPtrFactory" }
%"class.cc::MutatorHost" = type { i32 (...)** }
%"class.cc::LayerTreeMutatorClient" = type { i32 (...)** }
%"class.std::__1::unordered_map.19" = type { %"class.std::__1::__hash_table.20" }
%"class.std::__1::__hash_table.20" = type <{ %"class.std::__1::unique_ptr.21", %"class.std::__1::__compressed_pair.31", %"class.std::__1::__compressed_pair.36", %"class.std::__1::__compressed_pair.39", [4 x i8] }>
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23", %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"struct.std::__1::__hash_node_base.24"** }
%"struct.std::__1::__hash_node_base.24" = type { %"struct.std::__1::__hash_node_base.24"* }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.std::__1::__bucket_list_deallocator.26" }
%"class.std::__1::__bucket_list_deallocator.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"struct.std::__1::__hash_node_base.24" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.45" = type { %"class.std::__1::__vector_base.46" }
%"class.std::__1::__vector_base.46" = type { %class.scoped_refptr*, %class.scoped_refptr*, %"class.std::__1::__compressed_pair.52" }
%class.scoped_refptr = type { %"class.cc::Animation"* }
%"class.cc::Animation" = type { i32 (...)**, %"class.base::RefCounted.47", %"class.cc::AnimationHost"*, %"class.cc::AnimationTimeline"*, %"class.cc::AnimationDelegate"*, i32, %"class.std::__1::unique_ptr.48" }
%"class.base::RefCounted.47" = type { %"class.base::subtle::RefCountedBase" }
%"class.cc::AnimationTimeline" = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8], %"class.std::__1::unordered_map", i32, [4 x i8], %"class.cc::AnimationHost"*, i8, i8, [6 x i8] }>
%"class.cc::AnimationDelegate" = type opaque
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.cc::KeyframeEffect"* }
%"class.cc::KeyframeEffect" = type opaque
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %class.scoped_refptr* }
%"class.std::__1::unordered_map.57" = type { %"class.std::__1::__hash_table.58" }
%"class.std::__1::__hash_table.58" = type <{ %"class.std::__1::unique_ptr.59", %"class.std::__1::__compressed_pair.69", %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.77", [4 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61", %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"struct.std::__1::__hash_node_base.62"** }
%"struct.std::__1::__hash_node_base.62" = type { %"struct.std::__1::__hash_node_base.62"* }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.std::__1::__bucket_list_deallocator.64" }
%"class.std::__1::__bucket_list_deallocator.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"struct.std::__1::__hash_node_base.62" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.cc::MutatorHostClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.cc::ScrollOffsetAnimations"* }
%"class.cc::ScrollOffsetAnimations" = type opaque
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.cc::ScrollOffsetAnimationsImpl"* }
%"class.cc::ScrollOffsetAnimationsImpl" = type opaque
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.cc::LayerTreeMutator"* }
%"class.cc::LayerTreeMutator" = type { i32 (...)** }
%"class.std::__1::vector.99" = type { %"class.std::__1::__vector_base.100" }
%"class.std::__1::__vector_base.100" = type { %"struct.cc::MutatorHost::PendingThroughputTrackerInfo"*, %"struct.cc::MutatorHost::PendingThroughputTrackerInfo"*, %"class.std::__1::__compressed_pair.101" }
%"struct.cc::MutatorHost::PendingThroughputTrackerInfo" = type <{ i64, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"struct.cc::MutatorHost::PendingThroughputTrackerInfo"* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.106 }
%class.scoped_refptr.106 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.107" }
%"struct.std::__1::__atomic_base.107" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.108" }
%"struct.std::__1::atomic.108" = type { %"struct.std::__1::__atomic_base.109" }
%"struct.std::__1::__atomic_base.109" = type { %"struct.std::__1::__atomic_base.110" }
%"struct.std::__1::__atomic_base.110" = type { %"struct.std::__1::__cxx_atomic_impl.111" }
%"struct.std::__1::__cxx_atomic_impl.111" = type { %"struct.std::__1::__cxx_atomic_base_impl.112" }
%"struct.std::__1::__cxx_atomic_base_impl.112" = type { i8 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { double*, double*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { double* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.cc::ScrollTree" = type { %"class.cc::PropertyTree", i32, %"class.base::flat_map", %"class.base::flat_map.141", %"class.base::WeakPtr" }
%"class.cc::PropertyTree" = type { i32 (...)**, %"class.std::__1::vector.115", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.115" = type { %"class.std::__1::__vector_base.116" }
%"class.std::__1::__vector_base.116" = type { %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"*, %"class.std::__1::__compressed_pair.129" }
%"struct.cc::ScrollNode" = type <{ i32, i32, i32, %"class.gfx::Size", %"class.gfx::Size", i8, [3 x i8], %"class.gfx::Vector2dF", %"struct.cc::ElementId", i32, %"struct.cc::OverscrollBehavior", [4 x i8], %"class.absl::optional.117", i8, [7 x i8] }>
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Vector2dF" = type { float, float }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.117" = type { %"class.absl::optional_internal::optional_data.118" }
%"class.absl::optional_internal::optional_data.118" = type { %"class.absl::optional_internal::optional_data_base.119" }
%"class.absl::optional_internal::optional_data_base.119" = type { %"class.absl::optional_internal::optional_data_dtor_base.120" }
%"class.absl::optional_internal::optional_data_dtor_base.120" = type { i8, %union.anon.121 }
%union.anon.121 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.122", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.122" = type { %"class.std::__1::__vector_base.123" }
%"class.std::__1::__vector_base.123" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.124" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"struct.cc::ScrollNode"* }
%"class.cc::PropertyTrees" = type { %"class.base::flat_map.152", %"class.base::flat_map.152", %"class.base::flat_map.152", %"class.cc::TransformTree", %"class.cc::EffectTree", %"class.cc::ClipTree", %"class.cc::ScrollTree", i8, i8, i8, i32, i8, i8, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", %"struct.cc::PropertyTreesCachedData" }
%"class.base::flat_map.152" = type { %"class.base::internal::flat_tree.153" }
%"class.base::internal::flat_tree.153" = type { %"class.std::__1::vector.154" }
%"class.std::__1::vector.154" = type { %"class.std::__1::__vector_base.155" }
%"class.std::__1::__vector_base.155" = type { %"struct.std::__1::pair.156"*, %"struct.std::__1::pair.156"*, %"class.std::__1::__compressed_pair.157" }
%"struct.std::__1::pair.156" = type opaque
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"struct.std::__1::pair.156"* }
%"class.cc::TransformTree" = type { %"class.cc::PropertyTree.162", float, float, float, %"class.std::__1::vector.170", %"class.std::__1::vector.177", %"class.std::__1::vector.184" }
%"class.cc::PropertyTree.162" = type { i32 (...)**, %"class.std::__1::vector.163", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.163" = type { %"class.std::__1::__vector_base.164" }
%"class.std::__1::__vector_base.164" = type { %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"*, %"class.std::__1::__compressed_pair.165" }
%"struct.cc::TransformNode" = type opaque
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"struct.cc::TransformNode"* }
%"class.std::__1::vector.170" = type { %"class.std::__1::__vector_base.171" }
%"class.std::__1::__vector_base.171" = type { i32*, i32*, %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { i32* }
%"class.std::__1::vector.177" = type { %"class.std::__1::__vector_base.178" }
%"class.std::__1::__vector_base.178" = type { %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"*, %"class.std::__1::__compressed_pair.179" }
%"struct.cc::TransformCachedNodeData" = type opaque
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"struct.cc::TransformCachedNodeData"* }
%"class.std::__1::vector.184" = type { %"class.std::__1::__vector_base.185" }
%"class.std::__1::__vector_base.185" = type { %"struct.cc::StickyPositionNodeData"*, %"struct.cc::StickyPositionNodeData"*, %"class.std::__1::__compressed_pair.186" }
%"struct.cc::StickyPositionNodeData" = type { i32, %"struct.cc::StickyPositionConstraint", i32, i32, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF" }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"struct.cc::StickyPositionNodeData"* }
%"class.cc::EffectTree" = type { %"class.cc::PropertyTree.191", %"class.std::__1::unordered_multimap", %"class.std::__1::vector.222" }
%"class.cc::PropertyTree.191" = type { i32 (...)**, %"class.std::__1::vector.192", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.192" = type { %"class.std::__1::__vector_base.193" }
%"class.std::__1::__vector_base.193" = type { %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"*, %"class.std::__1::__compressed_pair.194" }
%"struct.cc::EffectNode" = type opaque
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"struct.cc::EffectNode"* }
%"class.std::__1::unordered_multimap" = type { %"class.std::__1::__hash_table.199" }
%"class.std::__1::__hash_table.199" = type <{ %"class.std::__1::unique_ptr.200", %"class.std::__1::__compressed_pair.210", %"class.std::__1::__compressed_pair.215", %"class.std::__1::__compressed_pair.218", [4 x i8] }>
%"class.std::__1::unique_ptr.200" = type { %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202", %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"struct.std::__1::__hash_node_base.203"** }
%"struct.std::__1::__hash_node_base.203" = type { %"struct.std::__1::__hash_node_base.203"* }
%"struct.std::__1::__compressed_pair_elem.204" = type { %"class.std::__1::__bucket_list_deallocator.205" }
%"class.std::__1::__bucket_list_deallocator.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"struct.std::__1::__hash_node_base.203" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.222" = type { %"class.std::__1::__vector_base.223" }
%"class.std::__1::__vector_base.223" = type { %"class.std::__1::unique_ptr.224"*, %"class.std::__1::unique_ptr.224"*, %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::unique_ptr.224" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"class.cc::RenderSurfaceImpl"* }
%"class.cc::RenderSurfaceImpl" = type opaque
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.std::__1::unique_ptr.224"* }
%"class.cc::ClipTree" = type { %"class.cc::PropertyTree.235" }
%"class.cc::PropertyTree.235" = type { i32 (...)**, %"class.std::__1::vector.236", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.236" = type { %"class.std::__1::__vector_base.237" }
%"class.std::__1::__vector_base.237" = type { %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"*, %"class.std::__1::__compressed_pair.238" }
%"struct.cc::ClipNode" = type opaque
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"struct.cc::ClipNode"* }
%"struct.cc::PropertyTreesCachedData" = type { i32, %"class.std::__1::vector.243", %"class.std::__1::vector.250" }
%"class.std::__1::vector.243" = type { %"class.std::__1::__vector_base.244" }
%"class.std::__1::__vector_base.244" = type { %"struct.cc::AnimationScaleData"*, %"struct.cc::AnimationScaleData"*, %"class.std::__1::__compressed_pair.245" }
%"struct.cc::AnimationScaleData" = type <{ i32, float, i8, i8, [2 x i8] }>
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"struct.cc::AnimationScaleData"* }
%"class.std::__1::vector.250" = type { %"class.std::__1::__vector_base.251" }
%"class.std::__1::__vector_base.251" = type { %"class.std::__1::vector.252"*, %"class.std::__1::vector.252"*, %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::vector.252" = type opaque
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"class.std::__1::vector.252"* }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.134" }
%"class.std::__1::vector.134" = type { %"class.std::__1::__vector_base.135" }
%"class.std::__1::__vector_base.135" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.136" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"struct.std::__1::pair"* }
%"class.base::flat_map.141" = type { %"class.base::internal::flat_tree.142" }
%"class.base::internal::flat_tree.142" = type { %"class.std::__1::vector.143" }
%"class.std::__1::vector.143" = type { %"class.std::__1::__vector_base.144" }
%"class.std::__1::__vector_base.144" = type { %"struct.std::__1::pair.145"*, %"struct.std::__1::pair.145"*, %"class.std::__1::__compressed_pair.146" }
%"struct.std::__1::pair.145" = type opaque
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"struct.std::__1::pair.145"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.151 }
%class.scoped_refptr.151 = type { %"class.base::internal::WeakReference::Flag"* }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair.263" }
%"struct.std::__1::pair.263" = type { i32, %class.scoped_refptr }
%"class.cc::WorkletAnimation" = type <{ %"class.cc::Animation", %"struct.cc::WorkletAnimationId", %"class.std::__1::basic_string", double, %"class.std::__1::unique_ptr.270", %"class.std::__1::unique_ptr.276", %"class.absl::optional.282", %"class.absl::optional.282", %"class.absl::optional.258", %"class.absl::optional.282", i8, [3 x i8], i32, i8, [7 x i8] }>
%"struct.cc::WorkletAnimationId" = type { i32, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.266 }
%union.anon.266 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr.270" = type { %"class.std::__1::__compressed_pair.271" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"class.cc::AnimationOptions"* }
%"class.cc::AnimationOptions" = type { i32 (...)** }
%"class.std::__1::unique_ptr.276" = type { %"class.std::__1::__compressed_pair.277" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"class.cc::AnimationEffectTimings"* }
%"class.cc::AnimationEffectTimings" = type { i32 (...)** }
%"class.absl::optional.258" = type { %"class.absl::optional_internal::optional_data.259" }
%"class.absl::optional_internal::optional_data.259" = type { %"class.absl::optional_internal::optional_data_base.260" }
%"class.absl::optional_internal::optional_data_base.260" = type { %"class.absl::optional_internal::optional_data_dtor_base.261" }
%"class.absl::optional_internal::optional_data_dtor_base.261" = type { i8, %union.anon.262 }
%union.anon.262 = type { %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.absl::optional.282" = type { %"class.absl::optional_internal::optional_data.283" }
%"class.absl::optional_internal::optional_data.283" = type { %"class.absl::optional_internal::optional_data_base.284" }
%"class.absl::optional_internal::optional_data_base.284" = type { %"class.absl::optional_internal::optional_data_dtor_base.285" }
%"class.absl::optional_internal::optional_data_dtor_base.285" = type { i8, %union.anon.286 }
%union.anon.286 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }

$_ZN2cc15ComputeProgressINSt3__16vectorIdNS1_9allocatorIdEEEEEEddRKT_ = comdat any

$_ZNSt3__16vectorIdNS_9allocatorIdEEE6assignIPdEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIdNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

@_ZTVN2cc14ScrollTimelineE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (%"class.cc::AnimationTimeline"* (%"class.cc::ScrollTimeline"*)* @_ZNK2cc14ScrollTimeline18CreateImplInstanceEv to i8*), i8* bitcast (i1 (%"class.cc::ScrollTimeline"*, %"class.std::__1::vector.45"*, %"class.cc::ScrollTree"*, i1)* @_ZN2cc14ScrollTimeline26TickScrollLinkedAnimationsERKNSt3__16vectorI13scoped_refptrINS_9AnimationEENS1_9allocatorIS5_EEEERKNS_10ScrollTreeEb to i8*), i8* bitcast (void (%"class.cc::ScrollTimeline"*, %"class.cc::AnimationTimeline"*)* @_ZN2cc14ScrollTimeline16PushPropertiesToEPNS_17AnimationTimelineE to i8*), i8* bitcast (void (%"class.cc::ScrollTimeline"*)* @_ZN2cc14ScrollTimeline16ActivateTimelineEv to i8*), i8* bitcast (i1 (%"class.cc::ScrollTimeline"*)* @_ZNK2cc14ScrollTimeline16IsScrollTimelineEv to i8*), i8* bitcast (void (%"class.cc::ScrollTimeline"*)* @_ZN2cc14ScrollTimelineD2Ev to i8*), i8* bitcast (void (%"class.cc::ScrollTimeline"*)* @_ZN2cc14ScrollTimelineD0Ev to i8*), i8* bitcast (i1 (%"class.cc::ScrollTimeline"*, %"class.cc::ScrollTree"*, i1)* @_ZNK2cc14ScrollTimeline8IsActiveERKNS_10ScrollTreeEb to i8*), i8* bitcast ({ i8, i64 } (%"class.cc::ScrollTimeline"*, %"class.cc::ScrollTree"*, i1)* @_ZNK2cc14ScrollTimeline11CurrentTimeERKNS_10ScrollTreeEb to i8*)] }, align 8

@_ZN2cc14ScrollTimelineC1EN4absl8optionalINS_9ElementIdEEENS0_15ScrollDirectionENSt3__16vectorIdNS6_9allocatorIdEEEEdi = hidden unnamed_addr alias void (%"class.cc::ScrollTimeline"*, i8, i64, i32, %"class.std::__1::vector"*, double, i32), void (%"class.cc::ScrollTimeline"*, i8, i64, i32, %"class.std::__1::vector"*, double, i32)* @_ZN2cc14ScrollTimelineC2EN4absl8optionalINS_9ElementIdEEENS0_15ScrollDirectionENSt3__16vectorIdNS6_9allocatorIdEEEEdi
@_ZN2cc14ScrollTimelineD1Ev = hidden unnamed_addr alias void (%"class.cc::ScrollTimeline"*), void (%"class.cc::ScrollTimeline"*)* @_ZN2cc14ScrollTimelineD2Ev

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden double @_ZN2cc15ComputeProgressINSt3__16vectorIdNS1_9allocatorIdEEEEEEddRKT_(double, %"class.std::__1::vector"* dereferenceable(24)) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %4 = bitcast double** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = lshr exact i64 %8, 3
  %10 = trunc i64 %9 to i32
  %11 = add i32 %10, -2
  %12 = icmp sgt i32 %11, 0
  %13 = inttoptr i64 %7 to double*
  br i1 %12, label %14, label %28

14:                                               ; preds = %2
  %15 = sext i32 %11 to i64
  br label %16

16:                                               ; preds = %14, %22
  %17 = phi i64 [ %15, %14 ], [ %23, %22 ]
  %18 = phi i32 [ %11, %14 ], [ %24, %22 ]
  %19 = getelementptr inbounds double, double* %13, i64 %17
  %20 = load double, double* %19, align 8
  %21 = fcmp ogt double %20, %0
  br i1 %21, label %22, label %26

22:                                               ; preds = %16
  %23 = add nsw i64 %17, -1
  %24 = add nsw i32 %18, -1
  %25 = icmp sgt i64 %23, 0
  br i1 %25, label %16, label %28

26:                                               ; preds = %16
  %27 = trunc i64 %17 to i32
  br label %28

28:                                               ; preds = %22, %26, %2
  %29 = phi i32 [ %11, %2 ], [ %27, %26 ], [ %24, %22 ]
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds double, double* %13, i64 %30
  %32 = load double, double* %31, align 8
  %33 = add nsw i32 %29, 1
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds double, double* %13, i64 %34
  %36 = load double, double* %35, align 8
  %37 = add i32 %10, -1
  %38 = uitofp i32 %37 to double
  %39 = fdiv double 1.000000e+00, %38
  %40 = fsub double %0, %32
  %41 = fsub double %36, %32
  %42 = fdiv double %40, %41
  %43 = sitofp i32 %29 to double
  %44 = fadd double %42, %43
  %45 = fmul double %39, %44
  ret double %45
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc14ScrollTimelineC2EN4absl8optionalINS_9ElementIdEEENS0_15ScrollDirectionENSt3__16vectorIdNS6_9allocatorIdEEEEdi(%"class.cc::ScrollTimeline"*, i8, i64, i32, %"class.std::__1::vector"* nocapture readonly, double, i32) unnamed_addr #0 align 2 {
  %8 = bitcast %"class.cc::ScrollTimeline"* %0 to %"class.cc::AnimationTimeline"*
  tail call void @_ZN2cc17AnimationTimelineC2Ei(%"class.cc::AnimationTimeline"* %8, i32 %6) #10
  %9 = getelementptr inbounds %"class.cc::ScrollTimeline", %"class.cc::ScrollTimeline"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN2cc14ScrollTimelineE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.cc::ScrollTimeline", %"class.cc::ScrollTimeline"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %"class.cc::ScrollTimeline", %"class.cc::ScrollTimeline"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 %1, i8* %11, align 8
  %12 = getelementptr inbounds %"class.cc::ScrollTimeline", %"class.cc::ScrollTimeline"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i64 %2, i64* %12, align 8
  %13 = getelementptr inbounds %"class.cc::ScrollTimeline", %"class.cc::ScrollTimeline"* %0, i64 0, i32 3
  store i32 %3, i32* %13, align 8
  %14 = getelementptr inbounds %"class.cc::ScrollTimeline", %"class.cc::ScrollTimeline"* %0, i64 0, i32 4
  %15 = bitcast %"class.std::__1::vector"* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #10
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %17 = bitcast double** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.std::__1::vector"* %4 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %18, %20
  %22 = ashr exact i64 %21, 3
  %23 = icmp eq i64 %21, 0
  br i1 %23, label %51, label %24

24:                                               ; preds = %7
  %25 = icmp ugt i64 %22, 2305843009213693951
  br i1 %25, label %26, label %28

26:                                               ; preds = %24
  %27 = bitcast %"class.std::__1::vector"* %14 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %27) #11
  unreachable

28:                                               ; preds = %24
  %29 = tail call i8* @_Znwm(i64 %21) #12
  %30 = bitcast i8* %29 to double*
  %31 = getelementptr inbounds %"class.cc::ScrollTimeline", %"class.cc::ScrollTimeline"* %0, i64 0, i32 4, i32 0, i32 1
  %32 = bitcast double** %31 to i8**
  store i8* %29, i8** %32, align 8
  %33 = bitcast %"class.std::__1::vector"* %14 to i8**
  store i8* %29, i8** %33, align 8
  %34 = getelementptr inbounds double, double* %30, i64 %22
  %35 = getelementptr inbounds %"class.cc::ScrollTimeline", %"class.cc::ScrollTimeline"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  store double* %34, double** %35, align 8
  %36 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %37 = load double*, double** %36, align 8
  %38 = load i64, i64* %17, align 8
  %39 = bitcast double** %31 to i64*
  %40 = ptrtoint i8* %29 to i64
  %41 = ptrtoint double* %37 to i64
  %42 = sub i64 %38, %41
  %43 = icmp sgt i64 %42, 0
  br i1 %43, label %44, label %49

44:                                               ; preds = %28
  %45 = lshr exact i64 %42, 3
  %46 = bitcast double* %37 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %29, i8* align 8 %46, i64 %42, i1 false) #10
  %47 = getelementptr inbounds double, double* %30, i64 %45
  %48 = ptrtoint double* %47 to i64
  br label %49

49:                                               ; preds = %44, %28
  %50 = phi i64 [ %48, %44 ], [ %40, %28 ]
  store i64 %50, i64* %39, align 8
  br label %51

51:                                               ; preds = %7, %49
  %52 = getelementptr inbounds %"class.cc::ScrollTimeline", %"class.cc::ScrollTimeline"* %0, i64 0, i32 5
  store double %5, double* %52, align 8
  ret void
}

declare void @_ZN2cc17AnimationTimelineC2Ei(%"class.cc::AnimationTimeline"*, i32) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc14ScrollTimelineD2Ev(%"class.cc::ScrollTimeline"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ScrollTimeline", %"class.cc::ScrollTimeline"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN2cc14ScrollTimelineE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::ScrollTimeline", %"class.cc::ScrollTimeline"* %0, i64 0, i32 4, i32 0, i32 0
  %4 = load double*, double** %3, align 8
  %5 = icmp eq double* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint double* %4 to i64
  %8 = getelementptr inbounds %"class.cc::ScrollTimeline", %"class.cc::ScrollTimeline"* %0, i64 0, i32 4, i32 0, i32 1
  %9 = bitcast double** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast double* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.cc::ScrollTimeline"* %0 to %"class.cc::AnimationTimeline"*
  tail call void @_ZN2cc17AnimationTimelineD2Ev(%"class.cc::AnimationTimeline"* %12) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2cc17AnimationTimelineD2Ev(%"class.cc::AnimationTimeline"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc14ScrollTimelineD0Ev(%"class.cc::ScrollTimeline"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ScrollTimeline", %"class.cc::ScrollTimeline"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN2cc14ScrollTimelineE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::ScrollTimeline", %"class.cc::ScrollTimeline"* %0, i64 0, i32 4, i32 0, i32 0
  %4 = load double*, double** %3, align 8
  %5 = icmp eq double* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint double* %4 to i64
  %8 = getelementptr inbounds %"class.cc::ScrollTimeline", %"class.cc::ScrollTimeline"* %0, i64 0, i32 4, i32 0, i32 1
  %9 = bitcast double** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast double* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.cc::ScrollTimeline"* %0 to %"class.cc::AnimationTimeline"*
  tail call void @_ZN2cc17AnimationTimelineD2Ev(%"class.cc::AnimationTimeline"* %12) #10
  %13 = bitcast %"class.cc::ScrollTimeline"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.cc::ScrollTimeline"* @_ZN2cc14ScrollTimeline6CreateEN4absl8optionalINS_9ElementIdEEENS0_15ScrollDirectionENSt3__16vectorIdNS6_9allocatorIdEEEEd(i8, i64, i32, %"class.std::__1::vector"* nocapture readonly, double) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = tail call i8* @_Znwm(i64 152) #12
  %8 = bitcast i8* %7 to %"class.cc::ScrollTimeline"*
  %9 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 24, i1 false) #10
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %11 = bitcast double** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector"* %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = ashr exact i64 %15, 3
  %17 = icmp eq i64 %15, 0
  br i1 %17, label %41, label %18

18:                                               ; preds = %5
  %19 = icmp ugt i64 %16, 2305843009213693951
  br i1 %19, label %20, label %22

20:                                               ; preds = %18
  %21 = bitcast %"class.std::__1::vector"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %21) #11
  unreachable

22:                                               ; preds = %18
  %23 = tail call i8* @_Znwm(i64 %15) #12
  %24 = bitcast i8* %23 to double*
  %25 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %26 = bitcast double** %25 to i8**
  store i8* %23, i8** %26, align 8
  %27 = bitcast %"class.std::__1::vector"* %6 to i8**
  store i8* %23, i8** %27, align 8
  %28 = getelementptr inbounds double, double* %24, i64 %16
  %29 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  store double* %28, double** %29, align 8
  %30 = bitcast double** %25 to i64*
  %31 = ptrtoint i8* %23 to i64
  %32 = icmp sgt i64 %15, 0
  br i1 %32, label %33, label %38

33:                                               ; preds = %22
  %34 = lshr exact i64 %15, 3
  %35 = inttoptr i64 %14 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %23, i8* align 8 %35, i64 %15, i1 false) #10
  %36 = getelementptr inbounds double, double* %24, i64 %34
  %37 = ptrtoint double* %36 to i64
  br label %38

38:                                               ; preds = %33, %22
  %39 = phi i64 [ %37, %33 ], [ %31, %22 ]
  store i64 %39, i64* %30, align 8
  %40 = ptrtoint i8* %23 to i64
  br label %41

41:                                               ; preds = %5, %38
  %42 = phi i8* [ %23, %38 ], [ null, %5 ]
  %43 = phi double* [ %24, %38 ], [ null, %5 ]
  %44 = phi i64 [ %40, %38 ], [ 0, %5 ]
  %45 = phi i64 [ %31, %38 ], [ 0, %5 ]
  %46 = phi i64 [ %39, %38 ], [ 0, %5 ]
  %47 = tail call i32 @_ZN2cc19AnimationIdProvider14NextTimelineIdEv() #10
  %48 = bitcast i8* %7 to %"class.cc::AnimationTimeline"*
  tail call void @_ZN2cc17AnimationTimelineC2Ei(%"class.cc::AnimationTimeline"* nonnull %48, i32 %47) #10
  %49 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN2cc14ScrollTimelineE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %49, align 8
  %50 = getelementptr inbounds i8, i8* %7, i64 80
  store i8 0, i8* %50, align 8
  %51 = getelementptr inbounds i8, i8* %7, i64 96
  store i8 %0, i8* %51, align 8
  %52 = getelementptr inbounds i8, i8* %7, i64 104
  %53 = bitcast i8* %52 to i64*
  store i64 %1, i64* %53, align 8
  %54 = getelementptr inbounds i8, i8* %7, i64 112
  %55 = bitcast i8* %54 to i32*
  store i32 %2, i32* %55, align 8
  %56 = getelementptr inbounds i8, i8* %7, i64 120
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 24, i1 false) #10
  %57 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %58 = bitcast double** %57 to i64*
  %59 = sub i64 %46, %45
  %60 = ashr exact i64 %59, 3
  %61 = icmp eq i64 %59, 0
  br i1 %61, label %85, label %62

62:                                               ; preds = %41
  %63 = icmp ugt i64 %60, 2305843009213693951
  br i1 %63, label %64, label %66

64:                                               ; preds = %62
  %65 = bitcast i8* %56 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %65) #11
  unreachable

66:                                               ; preds = %62
  %67 = tail call i8* @_Znwm(i64 %59) #12
  %68 = bitcast i8* %67 to double*
  %69 = getelementptr inbounds i8, i8* %7, i64 128
  %70 = bitcast i8* %69 to i8**
  store i8* %67, i8** %70, align 8
  %71 = bitcast i8* %56 to i8**
  store i8* %67, i8** %71, align 8
  %72 = getelementptr inbounds double, double* %68, i64 %60
  %73 = getelementptr inbounds i8, i8* %7, i64 136
  %74 = bitcast i8* %73 to double**
  store double* %72, double** %74, align 8
  %75 = bitcast i8* %69 to i64*
  %76 = ptrtoint i8* %67 to i64
  %77 = sub i64 %46, %44
  %78 = icmp sgt i64 %77, 0
  br i1 %78, label %79, label %83

79:                                               ; preds = %66
  %80 = lshr exact i64 %77, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %67, i8* align 8 %42, i64 %77, i1 false) #10
  %81 = getelementptr inbounds double, double* %68, i64 %80
  %82 = ptrtoint double* %81 to i64
  br label %83

83:                                               ; preds = %79, %66
  %84 = phi i64 [ %82, %79 ], [ %76, %66 ]
  store i64 %84, i64* %75, align 8
  br label %85

85:                                               ; preds = %41, %83
  %86 = getelementptr inbounds i8, i8* %7, i64 144
  %87 = bitcast i8* %86 to double*
  store double %4, double* %87, align 8
  %88 = getelementptr inbounds i8, i8* %7, i64 8
  %89 = bitcast i8* %88 to %"class.base::subtle::RefCountedBase"*
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %89) #10
  %90 = icmp eq double* %43, null
  br i1 %90, label %93, label %91

91:                                               ; preds = %85
  %92 = ptrtoint double* %43 to i64
  store i64 %92, i64* %58, align 8
  tail call void @_ZdlPv(i8* %42) #12
  br label %93

93:                                               ; preds = %85, %91
  ret %"class.cc::ScrollTimeline"* %8
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare i32 @_ZN2cc19AnimationIdProvider14NextTimelineIdEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.cc::AnimationTimeline"* @_ZNK2cc14ScrollTimeline18CreateImplInstanceEv(%"class.cc::ScrollTimeline"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector", align 8
  %3 = tail call i8* @_Znwm(i64 152) #12
  %4 = getelementptr inbounds %"class.cc::ScrollTimeline", %"class.cc::ScrollTimeline"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %5 = load i8, i8* %4, align 8
  %6 = getelementptr inbounds %"class.cc::ScrollTimeline", %"class.cc::ScrollTimeline"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.cc::ScrollTimeline", %"class.cc::ScrollTimeline"* %0, i64 0, i32 3
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %"class.cc::ScrollTimeline", %"class.cc::ScrollTimeline"* %0, i64 0, i32 4
  %11 = bitcast %"class.std::__1::vector"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #10
  %12 = getelementptr inbounds %"class.cc::ScrollTimeline", %"class.cc::ScrollTimeline"* %0, i64 0, i32 4, i32 0, i32 1
  %13 = bitcast double** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector"* %10 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = ashr exact i64 %17, 3
  %19 = icmp eq i64 %17, 0
  br i1 %19, label %43, label %20

20:                                               ; preds = %1
  %21 = icmp ugt i64 %18, 2305843009213693951
  br i1 %21, label %22, label %24

22:                                               ; preds = %20
  %23 = bitcast %"class.std::__1::vector"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %23) #11
  unreachable

24:                                               ; preds = %20
  %25 = tail call i8* @_Znwm(i64 %17) #12
  %26 = bitcast i8* %25 to double*
  %27 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %28 = bitcast double** %27 to i8**
  store i8* %25, i8** %28, align 8
  %29 = bitcast %"class.std::__1::vector"* %2 to i8**
  store i8* %25, i8** %29, align 8
  %30 = getelementptr inbounds double, double* %26, i64 %18
  %31 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  store double* %30, double** %31, align 8
  %32 = bitcast double** %27 to i64*
  %33 = ptrtoint i8* %25 to i64
  %34 = icmp sgt i64 %17, 0
  br i1 %34, label %35, label %40

35:                                               ; preds = %24
  %36 = lshr exact i64 %17, 3
  %37 = inttoptr i64 %16 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %25, i8* align 8 %37, i64 %17, i1 false) #10
  %38 = getelementptr inbounds double, double* %26, i64 %36
  %39 = ptrtoint double* %38 to i64
  br label %40

40:                                               ; preds = %35, %24
  %41 = phi i64 [ %39, %35 ], [ %33, %24 ]
  store i64 %41, i64* %32, align 8
  %42 = ptrtoint i8* %25 to i64
  br label %43

43:                                               ; preds = %1, %40
  %44 = phi i8* [ %25, %40 ], [ null, %1 ]
  %45 = phi double* [ %26, %40 ], [ null, %1 ]
  %46 = phi i64 [ %42, %40 ], [ 0, %1 ]
  %47 = phi i64 [ %33, %40 ], [ 0, %1 ]
  %48 = phi i64 [ %41, %40 ], [ 0, %1 ]
  %49 = getelementptr inbounds %"class.cc::ScrollTimeline", %"class.cc::ScrollTimeline"* %0, i64 0, i32 5
  %50 = bitcast double* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"class.cc::ScrollTimeline", %"class.cc::ScrollTimeline"* %0, i64 0, i32 0, i32 4
  %53 = load i32, i32* %52, align 8
  %54 = bitcast i8* %3 to %"class.cc::AnimationTimeline"*
  tail call void @_ZN2cc17AnimationTimelineC2Ei(%"class.cc::AnimationTimeline"* nonnull %54, i32 %53) #10
  %55 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN2cc14ScrollTimelineE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %55, align 8
  %56 = getelementptr inbounds i8, i8* %3, i64 80
  store i8 0, i8* %56, align 8
  %57 = getelementptr inbounds i8, i8* %3, i64 96
  store i8 %5, i8* %57, align 8
  %58 = getelementptr inbounds i8, i8* %3, i64 104
  %59 = bitcast i8* %58 to i64*
  store i64 %7, i64* %59, align 8
  %60 = getelementptr inbounds i8, i8* %3, i64 112
  %61 = bitcast i8* %60 to i32*
  store i32 %9, i32* %61, align 8
  %62 = getelementptr inbounds i8, i8* %3, i64 120
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 24, i1 false) #10
  %63 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %64 = bitcast double** %63 to i64*
  %65 = sub i64 %48, %47
  %66 = ashr exact i64 %65, 3
  %67 = icmp eq i64 %65, 0
  br i1 %67, label %91, label %68

68:                                               ; preds = %43
  %69 = icmp ugt i64 %66, 2305843009213693951
  br i1 %69, label %70, label %72

70:                                               ; preds = %68
  %71 = bitcast i8* %62 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %71) #11
  unreachable

72:                                               ; preds = %68
  %73 = tail call i8* @_Znwm(i64 %65) #12
  %74 = bitcast i8* %73 to double*
  %75 = getelementptr inbounds i8, i8* %3, i64 128
  %76 = bitcast i8* %75 to i8**
  store i8* %73, i8** %76, align 8
  %77 = bitcast i8* %62 to i8**
  store i8* %73, i8** %77, align 8
  %78 = getelementptr inbounds double, double* %74, i64 %66
  %79 = getelementptr inbounds i8, i8* %3, i64 136
  %80 = bitcast i8* %79 to double**
  store double* %78, double** %80, align 8
  %81 = bitcast i8* %75 to i64*
  %82 = ptrtoint i8* %73 to i64
  %83 = sub i64 %48, %46
  %84 = icmp sgt i64 %83, 0
  br i1 %84, label %85, label %89

85:                                               ; preds = %72
  %86 = lshr exact i64 %83, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* align 8 %44, i64 %83, i1 false) #10
  %87 = getelementptr inbounds double, double* %74, i64 %86
  %88 = ptrtoint double* %87 to i64
  br label %89

89:                                               ; preds = %85, %72
  %90 = phi i64 [ %88, %85 ], [ %82, %72 ]
  store i64 %90, i64* %81, align 8
  br label %91

91:                                               ; preds = %89, %43
  %92 = getelementptr inbounds i8, i8* %3, i64 144
  %93 = bitcast i8* %92 to i64*
  store i64 %51, i64* %93, align 8
  %94 = getelementptr inbounds i8, i8* %3, i64 8
  %95 = bitcast i8* %94 to %"class.base::subtle::RefCountedBase"*
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %95) #10
  %96 = icmp eq double* %45, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %91
  %98 = ptrtoint double* %45 to i64
  store i64 %98, i64* %64, align 8
  tail call void @_ZdlPv(i8* %44) #12
  br label %99

99:                                               ; preds = %91, %97
  ret %"class.cc::AnimationTimeline"* %54
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc14ScrollTimeline8IsActiveERKNS_10ScrollTreeEb(%"class.cc::ScrollTimeline"* nocapture readonly, %"class.cc::ScrollTree"* dereferenceable(120), i1 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cc::ScrollTimeline", %"class.cc::ScrollTimeline"* %0, i64 0, i32 4, i32 0, i32 0
  %5 = load double*, double** %4, align 8
  %6 = getelementptr inbounds %"class.cc::ScrollTimeline", %"class.cc::ScrollTimeline"* %0, i64 0, i32 4, i32 0, i32 1
  %7 = load double*, double** %6, align 8
  %8 = icmp eq double* %5, %7
  br i1 %8, label %28, label %9

9:                                                ; preds = %3
  br i1 %2, label %10, label %14

10:                                               ; preds = %9
  %11 = getelementptr inbounds %"class.cc::ScrollTimeline", %"class.cc::ScrollTimeline"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %28, label %18

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.cc::ScrollTimeline", %"class.cc::ScrollTimeline"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %16 = load i8, i8* %15, align 8, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %28, label %20

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.cc::ScrollTimeline", %"class.cc::ScrollTimeline"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  br label %22

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.cc::ScrollTimeline", %"class.cc::ScrollTimeline"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  br label %22

22:                                               ; preds = %20, %18
  %23 = phi %"struct.cc::ElementId"* [ %19, %18 ], [ %21, %20 ]
  %24 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %23, i64 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = tail call %"struct.cc::ScrollNode"* @_ZNK2cc10ScrollTree21FindNodeFromElementIdENS_9ElementIdE(%"class.cc::ScrollTree"* %1, i64 %25) #10
  %27 = icmp ne %"struct.cc::ScrollNode"* %26, null
  br label %28

28:                                               ; preds = %10, %14, %3, %22
  %29 = phi i1 [ %27, %22 ], [ false, %3 ], [ false, %14 ], [ false, %10 ]
  ret i1 %29
}

declare %"struct.cc::ScrollNode"* @_ZNK2cc10ScrollTree21FindNodeFromElementIdENS_9ElementIdE(%"class.cc::ScrollTree"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i8, i64 } @_ZNK2cc14ScrollTimeline11CurrentTimeERKNS_10ScrollTreeEb(%"class.cc::ScrollTimeline"*, %"class.cc::ScrollTree"* dereferenceable(120), i1 zeroext) unnamed_addr #6 align 2 {
  %4 = bitcast %"class.cc::ScrollTimeline"* %0 to i1 (%"class.cc::ScrollTimeline"*, %"class.cc::ScrollTree"*, i1)***
  %5 = load i1 (%"class.cc::ScrollTimeline"*, %"class.cc::ScrollTree"*, i1)**, i1 (%"class.cc::ScrollTimeline"*, %"class.cc::ScrollTree"*, i1)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.cc::ScrollTimeline"*, %"class.cc::ScrollTree"*, i1)*, i1 (%"class.cc::ScrollTimeline"*, %"class.cc::ScrollTree"*, i1)** %5, i64 7
  %7 = load i1 (%"class.cc::ScrollTimeline"*, %"class.cc::ScrollTree"*, i1)*, i1 (%"class.cc::ScrollTimeline"*, %"class.cc::ScrollTree"*, i1)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.cc::ScrollTimeline"* %0, %"class.cc::ScrollTree"* dereferenceable(120) %1, i1 zeroext %2) #10
  br i1 %8, label %9, label %123

9:                                                ; preds = %3
  br i1 %2, label %10, label %17

10:                                               ; preds = %9
  %11 = getelementptr inbounds %"class.cc::ScrollTimeline", %"class.cc::ScrollTimeline"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %10
  tail call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #11
  unreachable

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.cc::ScrollTimeline", %"class.cc::ScrollTimeline"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  br label %24

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.cc::ScrollTimeline", %"class.cc::ScrollTimeline"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %17
  tail call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #11
  unreachable

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.cc::ScrollTimeline", %"class.cc::ScrollTimeline"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  br label %24

24:                                               ; preds = %22, %15
  %25 = phi %"struct.cc::ElementId"* [ %16, %15 ], [ %23, %22 ]
  %26 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %25, i64 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = tail call %"struct.cc::ScrollNode"* @_ZNK2cc10ScrollTree21FindNodeFromElementIdENS_9ElementIdE(%"class.cc::ScrollTree"* %1, i64 %27) #10
  %29 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %28, i64 0, i32 0
  %30 = load i32, i32* %29, align 8
  %31 = tail call <2 x float> @_ZNK2cc10ScrollTree27GetPixelSnappedScrollOffsetEi(%"class.cc::ScrollTree"* %1, i32 %30) #10
  %32 = load i32, i32* %29, align 8
  %33 = tail call <2 x float> @_ZNK2cc10ScrollTree15MaxScrollOffsetEi(%"class.cc::ScrollTree"* %1, i32 %32) #10
  %34 = getelementptr inbounds %"class.cc::ScrollTimeline", %"class.cc::ScrollTimeline"* %0, i64 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = icmp ult i32 %35, 2
  %37 = extractelement <2 x float> %33, i32 1
  %38 = extractelement <2 x float> %31, i32 1
  %39 = extractelement <2 x float> %33, i32 0
  %40 = extractelement <2 x float> %31, i32 0
  %41 = select i1 %36, float %37, float %39
  %42 = select i1 %36, float %38, float %40
  %43 = fpext float %41 to double
  %44 = fpext float %42 to double
  %45 = and i32 %35, -3
  %46 = icmp eq i32 %45, 0
  %47 = fsub double %43, %44
  %48 = select i1 %46, double %47, double %44
  %49 = getelementptr inbounds %"class.cc::ScrollTimeline", %"class.cc::ScrollTimeline"* %0, i64 0, i32 4, i32 0, i32 0
  %50 = load double*, double** %49, align 8
  %51 = load double, double* %50, align 8
  %52 = getelementptr inbounds %"class.cc::ScrollTimeline", %"class.cc::ScrollTimeline"* %0, i64 0, i32 4, i32 0, i32 1
  %53 = bitcast double** %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = ptrtoint double* %50 to i64
  %56 = sub i64 %54, %55
  %57 = fcmp olt double %48, %51
  br i1 %57, label %123, label %58

58:                                               ; preds = %24
  %59 = ashr exact i64 %56, 3
  %60 = add nsw i64 %59, -1
  %61 = getelementptr inbounds double, double* %50, i64 %60
  %62 = load double, double* %61, align 8
  %63 = fcmp ult double %48, %62
  br i1 %63, label %75, label %64

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"class.cc::ScrollTimeline", %"class.cc::ScrollTimeline"* %0, i64 0, i32 5
  %66 = load double, double* %65, align 8
  %67 = fmul double %66, 1.000000e+03
  %68 = fcmp ult double %67, 0xC3E0000000000000
  %69 = fcmp ugt double %67, 0x43DFFFFFFFFFFFFF
  %70 = fcmp ogt double %67, 0xC3E0000000000000
  %71 = select i1 %70, double %67, double 0xC3E0000000000000
  %72 = fptosi double %71 to i64
  %73 = select i1 %68, i64 0, i64 9223372036854775807
  %74 = select i1 %69, i64 %73, i64 %72
  br label %123

75:                                               ; preds = %58
  %76 = lshr exact i64 %56, 3
  %77 = trunc i64 %76 to i32
  %78 = add i32 %77, -2
  %79 = icmp sgt i32 %78, 0
  br i1 %79, label %80, label %94

80:                                               ; preds = %75
  %81 = sext i32 %78 to i64
  br label %82

82:                                               ; preds = %88, %80
  %83 = phi i64 [ %81, %80 ], [ %89, %88 ]
  %84 = phi i32 [ %78, %80 ], [ %90, %88 ]
  %85 = getelementptr inbounds double, double* %50, i64 %83
  %86 = load double, double* %85, align 8
  %87 = fcmp ogt double %86, %48
  br i1 %87, label %88, label %92

88:                                               ; preds = %82
  %89 = add nsw i64 %83, -1
  %90 = add nsw i32 %84, -1
  %91 = icmp sgt i64 %89, 0
  br i1 %91, label %82, label %94

92:                                               ; preds = %82
  %93 = trunc i64 %83 to i32
  br label %94

94:                                               ; preds = %88, %75, %92
  %95 = phi i32 [ %78, %75 ], [ %93, %92 ], [ %90, %88 ]
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds double, double* %50, i64 %96
  %98 = load double, double* %97, align 8
  %99 = add nsw i32 %95, 1
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds double, double* %50, i64 %100
  %102 = load double, double* %101, align 8
  %103 = add i32 %77, -1
  %104 = uitofp i32 %103 to double
  %105 = fdiv double 1.000000e+00, %104
  %106 = fsub double %48, %98
  %107 = fsub double %102, %98
  %108 = fdiv double %106, %107
  %109 = sitofp i32 %95 to double
  %110 = fadd double %108, %109
  %111 = fmul double %105, %110
  %112 = getelementptr inbounds %"class.cc::ScrollTimeline", %"class.cc::ScrollTimeline"* %0, i64 0, i32 5
  %113 = load double, double* %112, align 8
  %114 = fmul double %113, %111
  %115 = fmul double %114, 1.000000e+03
  %116 = fcmp ult double %115, 0xC3E0000000000000
  %117 = fcmp ugt double %115, 0x43DFFFFFFFFFFFFF
  %118 = fcmp ogt double %115, 0xC3E0000000000000
  %119 = select i1 %118, double %115, double 0xC3E0000000000000
  %120 = fptosi double %119 to i64
  %121 = select i1 %116, i64 0, i64 9223372036854775807
  %122 = select i1 %117, i64 %121, i64 %120
  br label %123

123:                                              ; preds = %94, %64, %24, %3
  %124 = phi i8 [ 0, %3 ], [ 1, %24 ], [ 1, %64 ], [ 1, %94 ]
  %125 = phi i64 [ undef, %3 ], [ 0, %24 ], [ %74, %64 ], [ %122, %94 ]
  %126 = insertvalue { i8, i64 } undef, i8 %124, 0
  %127 = insertvalue { i8, i64 } %126, i64 %125, 1
  ret { i8, i64 } %127
}

declare <2 x float> @_ZNK2cc10ScrollTree27GetPixelSnappedScrollOffsetEi(%"class.cc::ScrollTree"*, i32) local_unnamed_addr #1

declare <2 x float> @_ZNK2cc10ScrollTree15MaxScrollOffsetEi(%"class.cc::ScrollTree"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc14ScrollTimeline16PushPropertiesToEPNS_17AnimationTimelineE(%"class.cc::ScrollTimeline"*, %"class.cc::AnimationTimeline"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.cc::ScrollTimeline"* %0 to %"class.cc::AnimationTimeline"*
  tail call void @_ZN2cc17AnimationTimeline16PushPropertiesToEPS0_(%"class.cc::AnimationTimeline"* %3, %"class.cc::AnimationTimeline"* %1) #10
  %4 = getelementptr inbounds %"class.cc::AnimationTimeline", %"class.cc::AnimationTimeline"* %1, i64 1, i32 3
  %5 = bitcast %"class.std::__1::unordered_map"* %4 to i8*
  %6 = getelementptr inbounds %"class.cc::ScrollTimeline", %"class.cc::ScrollTimeline"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 16, i1 false)
  %7 = getelementptr inbounds %"class.cc::ScrollTimeline", %"class.cc::ScrollTimeline"* %0, i64 0, i32 4
  %8 = getelementptr inbounds %"class.cc::AnimationTimeline", %"class.cc::AnimationTimeline"* %1, i64 1, i32 3, i32 0, i32 2
  %9 = bitcast %"class.std::__1::__compressed_pair.14"* %8 to %"class.std::__1::vector"*
  %10 = icmp eq %"class.std::__1::vector"* %7, %9
  br i1 %10, label %16, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %13 = load double*, double** %12, align 8
  %14 = getelementptr inbounds %"class.cc::ScrollTimeline", %"class.cc::ScrollTimeline"* %0, i64 0, i32 4, i32 0, i32 1
  %15 = load double*, double** %14, align 8
  tail call void @_ZNSt3__16vectorIdNS_9allocatorIdEEE6assignIPdEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIdNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"* %9, double* %13, double* %15) #10
  br label %16

16:                                               ; preds = %2, %11
  ret void
}

declare void @_ZN2cc17AnimationTimeline16PushPropertiesToEPS0_(%"class.cc::AnimationTimeline"*, %"class.cc::AnimationTimeline"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc14ScrollTimeline16ActivateTimelineEv(%"class.cc::ScrollTimeline"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ScrollTimeline", %"class.cc::ScrollTimeline"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.cc::ScrollTimeline", %"class.cc::ScrollTimeline"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 16, i1 false)
  %4 = getelementptr inbounds %"class.cc::ScrollTimeline", %"class.cc::ScrollTimeline"* %0, i64 0, i32 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %5 = bitcast %"struct.std::__1::__hash_node_base"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %23, %1
  ret void

9:                                                ; preds = %1, %23
  %10 = phi i64 [ %25, %23 ], [ %6, %1 ]
  %11 = inttoptr i64 %10 to %"struct.std::__1::__hash_node"*
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %11, i64 0, i32 2, i32 0, i32 1, i32 0
  %13 = load %"class.cc::Animation"*, %"class.cc::Animation"** %12, align 8
  %14 = bitcast %"class.cc::Animation"* %13 to i1 (%"class.cc::Animation"*)***
  %15 = load i1 (%"class.cc::Animation"*)**, i1 (%"class.cc::Animation"*)*** %14, align 8
  %16 = getelementptr inbounds i1 (%"class.cc::Animation"*)*, i1 (%"class.cc::Animation"*)** %15, i64 6
  %17 = load i1 (%"class.cc::Animation"*)*, i1 (%"class.cc::Animation"*)** %16, align 8
  %18 = tail call zeroext i1 %17(%"class.cc::Animation"* %13) #10
  br i1 %18, label %19, label %23

19:                                               ; preds = %9
  %20 = bitcast %"class.cc::Animation"** %12 to %"class.cc::WorkletAnimation"**
  %21 = load %"class.cc::WorkletAnimation"*, %"class.cc::WorkletAnimation"** %20, align 8
  %22 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %21, i64 0, i32 10
  store i8 0, i8* %22, align 8
  br label %23

23:                                               ; preds = %19, %9
  %24 = inttoptr i64 %10 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %8, label %9
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2cc14ScrollTimeline26TickScrollLinkedAnimationsERKNSt3__16vectorI13scoped_refptrINS_9AnimationEENS1_9allocatorIS5_EEEERKNS_10ScrollTreeEb(%"class.cc::ScrollTimeline"*, %"class.std::__1::vector.45"* nocapture readonly dereferenceable(24), %"class.cc::ScrollTree"* dereferenceable(120), i1 zeroext) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.cc::ScrollTimeline"* %0 to { i8, i64 } (%"class.cc::ScrollTimeline"*, %"class.cc::ScrollTree"*, i1)***
  %6 = load { i8, i64 } (%"class.cc::ScrollTimeline"*, %"class.cc::ScrollTree"*, i1)**, { i8, i64 } (%"class.cc::ScrollTimeline"*, %"class.cc::ScrollTree"*, i1)*** %5, align 8
  %7 = getelementptr inbounds { i8, i64 } (%"class.cc::ScrollTimeline"*, %"class.cc::ScrollTree"*, i1)*, { i8, i64 } (%"class.cc::ScrollTimeline"*, %"class.cc::ScrollTree"*, i1)** %6, i64 8
  %8 = load { i8, i64 } (%"class.cc::ScrollTimeline"*, %"class.cc::ScrollTree"*, i1)*, { i8, i64 } (%"class.cc::ScrollTimeline"*, %"class.cc::ScrollTree"*, i1)** %7, align 8
  %9 = tail call { i8, i64 } %8(%"class.cc::ScrollTimeline"* %0, %"class.cc::ScrollTree"* dereferenceable(120) %2, i1 zeroext %3) #10
  %10 = extractvalue { i8, i64 } %9, 0
  %11 = extractvalue { i8, i64 } %9, 1
  %12 = icmp eq i8 %10, 0
  br i1 %12, label %52, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %1, i64 0, i32 0, i32 0
  %15 = load %class.scoped_refptr*, %class.scoped_refptr** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %1, i64 0, i32 0, i32 1
  %17 = load %class.scoped_refptr*, %class.scoped_refptr** %16, align 8
  %18 = icmp eq %class.scoped_refptr* %15, %17
  br i1 %18, label %21, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.cc::ScrollTimeline"* %0 to %"class.cc::AnimationTimeline"*
  br label %25

21:                                               ; preds = %48, %13
  %22 = phi i8 [ 0, %13 ], [ %49, %48 ]
  %23 = and i8 %22, 1
  %24 = icmp ne i8 %23, 0
  br label %52

25:                                               ; preds = %19, %48
  %26 = phi i8 [ 0, %19 ], [ %49, %48 ]
  %27 = phi %class.scoped_refptr* [ %15, %19 ], [ %50, %48 ]
  %28 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %27, i64 0, i32 0
  %29 = load %"class.cc::Animation"*, %"class.cc::Animation"** %28, align 8
  %30 = getelementptr inbounds %"class.cc::Animation", %"class.cc::Animation"* %29, i64 0, i32 3
  %31 = load %"class.cc::AnimationTimeline"*, %"class.cc::AnimationTimeline"** %30, align 8
  %32 = icmp eq %"class.cc::AnimationTimeline"* %31, %20
  br i1 %32, label %33, label %48

33:                                               ; preds = %25
  %34 = bitcast %"class.cc::Animation"* %29 to i1 (%"class.cc::Animation"*)***
  %35 = load i1 (%"class.cc::Animation"*)**, i1 (%"class.cc::Animation"*)*** %34, align 8
  %36 = getelementptr inbounds i1 (%"class.cc::Animation"*)*, i1 (%"class.cc::Animation"*)** %35, i64 6
  %37 = load i1 (%"class.cc::Animation"*)*, i1 (%"class.cc::Animation"*)** %36, align 8
  %38 = tail call zeroext i1 %37(%"class.cc::Animation"* %29) #10
  br i1 %38, label %48, label %39

39:                                               ; preds = %33
  %40 = load %"class.cc::Animation"*, %"class.cc::Animation"** %28, align 8
  %41 = tail call zeroext i1 @_ZNK2cc9Animation23IsScrollLinkedAnimationEv(%"class.cc::Animation"* %40) #10
  br i1 %41, label %42, label %48

42:                                               ; preds = %39
  %43 = load %"class.cc::Animation"*, %"class.cc::Animation"** %28, align 8
  %44 = bitcast %"class.cc::Animation"* %43 to void (%"class.cc::Animation"*, i64)***
  %45 = load void (%"class.cc::Animation"*, i64)**, void (%"class.cc::Animation"*, i64)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.cc::Animation"*, i64)*, void (%"class.cc::Animation"*, i64)** %45, i64 5
  %47 = load void (%"class.cc::Animation"*, i64)*, void (%"class.cc::Animation"*, i64)** %46, align 8
  tail call void %47(%"class.cc::Animation"* %43, i64 %11) #10
  br label %48

48:                                               ; preds = %39, %33, %25, %42
  %49 = phi i8 [ 1, %42 ], [ %26, %25 ], [ %26, %33 ], [ %26, %39 ]
  %50 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %27, i64 1
  %51 = icmp eq %class.scoped_refptr* %50, %17
  br i1 %51, label %21, label %25

52:                                               ; preds = %4, %21
  %53 = phi i1 [ %24, %21 ], [ false, %4 ]
  ret i1 %53
}

declare zeroext i1 @_ZNK2cc9Animation23IsScrollLinkedAnimationEv(%"class.cc::Animation"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc14ScrollTimeline32UpdateScrollerIdAndScrollOffsetsEN4absl8optionalINS_9ElementIdEEENSt3__16vectorIdNS5_9allocatorIdEEEE(%"class.cc::ScrollTimeline"*, i8, i64, %"class.std::__1::vector"* readonly) local_unnamed_addr #0 align 2 {
  %5 = alloca [7 x i8], align 1
  %6 = getelementptr inbounds %"class.cc::ScrollTimeline", %"class.cc::ScrollTimeline"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp ne i8 %7, 0
  %9 = icmp ne i8 %1, 0
  %10 = xor i1 %9, %8
  %11 = xor i1 %8, true
  %12 = or i1 %10, %11
  br i1 %12, label %20, label %13

13:                                               ; preds = %4
  %14 = icmp eq i8 %1, 0
  br i1 %14, label %15, label %16, !prof !3

15:                                               ; preds = %13
  tail call void @llvm.trap() #10
  unreachable

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.cc::ScrollTimeline", %"class.cc::ScrollTimeline"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %18, %2
  br i1 %19, label %21, label %52

20:                                               ; preds = %4
  br i1 %10, label %52, label %21

21:                                               ; preds = %20, %16
  %22 = getelementptr inbounds %"class.cc::ScrollTimeline", %"class.cc::ScrollTimeline"* %0, i64 0, i32 4
  %23 = getelementptr inbounds %"class.cc::ScrollTimeline", %"class.cc::ScrollTimeline"* %0, i64 0, i32 4, i32 0, i32 1
  %24 = bitcast double** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.std::__1::vector"* %22 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %25, %27
  %29 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %30 = bitcast double** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::vector"* %3 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %31, %33
  %35 = icmp eq i64 %28, %34
  %36 = inttoptr i64 %27 to double*
  %37 = inttoptr i64 %25 to double*
  br i1 %35, label %38, label %52

38:                                               ; preds = %21
  %39 = icmp eq double* %36, %37
  br i1 %39, label %66, label %40

40:                                               ; preds = %38
  %41 = inttoptr i64 %33 to double*
  br label %42

42:                                               ; preds = %40, %48
  %43 = phi double* [ %50, %48 ], [ %41, %40 ]
  %44 = phi double* [ %49, %48 ], [ %36, %40 ]
  %45 = load double, double* %44, align 8
  %46 = load double, double* %43, align 8
  %47 = fcmp oeq double %45, %46
  br i1 %47, label %48, label %52

48:                                               ; preds = %42
  %49 = getelementptr inbounds double, double* %44, i64 1
  %50 = getelementptr inbounds double, double* %43, i64 1
  %51 = icmp eq double* %49, %37
  br i1 %51, label %66, label %42

52:                                               ; preds = %42, %20, %21, %16
  store i8 %1, i8* %6, align 8
  %53 = bitcast %"class.cc::ScrollTimeline"* %0 to i8*
  %54 = getelementptr inbounds i8, i8* %53, i64 97
  %55 = getelementptr inbounds [7 x i8], [7 x i8]* %5, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %54, i8* nonnull align 1 %55, i64 7, i1 false)
  %56 = getelementptr inbounds %"class.cc::ScrollTimeline", %"class.cc::ScrollTimeline"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i64 %2, i64* %56, align 8
  %57 = getelementptr inbounds %"class.cc::ScrollTimeline", %"class.cc::ScrollTimeline"* %0, i64 0, i32 4
  %58 = icmp eq %"class.std::__1::vector"* %57, %3
  br i1 %58, label %64, label %59

59:                                               ; preds = %52
  %60 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %61 = load double*, double** %60, align 8
  %62 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %63 = load double*, double** %62, align 8
  tail call void @_ZNSt3__16vectorIdNS_9allocatorIdEEE6assignIPdEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIdNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"* %57, double* %61, double* %63) #10
  br label %64

64:                                               ; preds = %52, %59
  %65 = bitcast %"class.cc::ScrollTimeline"* %0 to %"class.cc::AnimationTimeline"*
  tail call void @_ZN2cc17AnimationTimeline22SetNeedsPushPropertiesEv(%"class.cc::AnimationTimeline"* %65) #10
  br label %66

66:                                               ; preds = %48, %38, %64
  ret void
}

declare void @_ZN2cc17AnimationTimeline22SetNeedsPushPropertiesEv(%"class.cc::AnimationTimeline"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK2cc14ScrollTimeline16IsScrollTimelineEv(%"class.cc::ScrollTimeline"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i1 true
}

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #8

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIdNS_9allocatorIdEEE6assignIPdEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIdNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"*, double*, double*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint double* %2 to i64
  %5 = ptrtoint double* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast double** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to double*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast double** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 3
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds double, double* %1, i64 %22
  %25 = select i1 %23, double* %24, double* %2
  %26 = ptrtoint double* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 3
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast double* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %27, i1 false) #10
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 3
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast double* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 %36, i1 false) #10
  %42 = inttoptr i64 %35 to double*
  %43 = getelementptr inbounds double, double* %42, i64 %39
  %44 = ptrtoint double* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds double, double* %16, i64 %28
  store double* %48, double** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %53 = bitcast double** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #12
  %55 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #10
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 2305843009213693951
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #11
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 3
  %63 = icmp ult i64 %62, 1152921504606846975
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 2
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 2305843009213693951
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #11
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 2305843009213693951, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 3
  %74 = tail call i8* @_Znwm(i64 %73) #12
  %75 = bitcast i8* %74 to double*
  %76 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %77 = bitcast double** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds double, double* %75, i64 %72
  store double* %79, double** %8, align 8
  %80 = bitcast double** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 3
  %85 = bitcast double* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %74, i8* align 8 %85, i64 %6, i1 false) #10
  %86 = getelementptr inbounds double, double* %75, i64 %84
  %87 = ptrtoint double* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
