; ModuleID = '../../components/sync/engine/commit_processor.cc'
source_filename = "../../components/sync/engine/commit_processor.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.syncer::CommitProcessor" = type <{ %"class.syncer::EnumSet", %"class.std::__1::map"*, i32, [4 x i8] }>
%"class.syncer::EnumSet" = type { %"class.std::__1::bitset" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::map.4" = type { %"class.std::__1::__tree.5" }
%"class.std::__1::__tree.5" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.6", %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.19" }
%"struct.std::__1::pair.19" = type { i32, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.syncer::CommitContribution"* }
%"class.syncer::CommitContribution" = type { i32 (...)** }
%"class.std::__1::__tree_node.20" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.21" }
%"struct.std::__1::__value_type.21" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, %"class.syncer::CommitContributor"* }
%"class.syncer::CommitContributor" = type { i32 (...)** }

$_ZNSt3__16__treeINS_12__value_typeIN6syncer9ModelTypeENS_10unique_ptrINS2_18CommitContributionENS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

@switch.table._ZN6syncer15CommitProcessor23IncrementGatheringPhaseENS0_14GatheringPhaseE = private unnamed_addr constant [3 x i32] [i32 1, i32 2, i32 2], align 4

@_ZN6syncer15CommitProcessorC1ENS_7EnumSetINS_9ModelTypeELS2_1ELS2_37EEEPNSt3__13mapIS2_PNS_17CommitContributorENS4_4lessIS2_EENS4_9allocatorINS4_4pairIKS2_S7_EEEEEE = hidden unnamed_addr alias void (%"class.syncer::CommitProcessor"*, i64, %"class.std::__1::map"*), void (%"class.syncer::CommitProcessor"*, i64, %"class.std::__1::map"*)* @_ZN6syncer15CommitProcessorC2ENS_7EnumSetINS_9ModelTypeELS2_1ELS2_37EEEPNSt3__13mapIS2_PNS_17CommitContributorENS4_4lessIS2_EENS4_9allocatorINS4_4pairIKS2_S7_EEEEEE
@_ZN6syncer15CommitProcessorD1Ev = hidden unnamed_addr alias void (%"class.syncer::CommitProcessor"*), void (%"class.syncer::CommitProcessor"*)* @_ZN6syncer15CommitProcessorD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6syncer15CommitProcessorC2ENS_7EnumSetINS_9ModelTypeELS2_1ELS2_37EEEPNSt3__13mapIS2_PNS_17CommitContributorENS4_4lessIS2_EENS4_9allocatorINS4_4pairIKS2_S7_EEEEEE(%"class.syncer::CommitProcessor"* nocapture, i64, %"class.std::__1::map"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.syncer::CommitProcessor", %"class.syncer::CommitProcessor"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %4, align 8
  %5 = getelementptr inbounds %"class.syncer::CommitProcessor", %"class.syncer::CommitProcessor"* %0, i64 0, i32 1
  store %"class.std::__1::map"* %2, %"class.std::__1::map"** %5, align 8
  %6 = getelementptr inbounds %"class.syncer::CommitProcessor", %"class.syncer::CommitProcessor"* %0, i64 0, i32 2
  store i32 0, i32* %6, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6syncer15CommitProcessorD2Ev(%"class.syncer::CommitProcessor"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6syncer15CommitProcessor25GatherCommitContributionsEm(%"class.std::__1::map.4"* noalias sret, %"class.syncer::CommitProcessor"* nocapture, i64) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.std::__1::map.4", align 16
  %5 = getelementptr inbounds %"class.syncer::CommitProcessor", %"class.syncer::CommitProcessor"* %1, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 2
  br i1 %7, label %8, label %13

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::map.4", %"class.std::__1::map.4"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::map.4", %"class.std::__1::map.4"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::map.4", %"class.std::__1::map.4"* %0, i64 0, i32 0, i32 0
  %12 = bitcast %"class.std::__1::__tree_node_base"** %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #7
  store %"class.std::__1::__tree_end_node"* %10, %"class.std::__1::__tree_end_node"** %11, align 8
  br label %113

13:                                               ; preds = %3
  %14 = bitcast %"class.std::__1::map.4"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #7
  %15 = getelementptr inbounds %"class.std::__1::map.4", %"class.std::__1::map.4"* %4, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::map.4", %"class.std::__1::map.4"* %4, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::map.4", %"class.std::__1::map.4"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::map.4", %"class.std::__1::map.4"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %19 = bitcast %"class.std::__1::__tree_node_base"** %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #7
  store %"class.std::__1::__tree_end_node"* %18, %"class.std::__1::__tree_end_node"** %15, align 16
  %20 = call i64 @_ZN6syncer15CommitProcessor32GatherCommitContributionsForTypeENS_9ModelTypeEmPNSt3__13mapIS1_NS2_10unique_ptrINS_18CommitContributionENS2_14default_deleteIS5_EEEENS2_4lessIS1_EENS2_9allocatorINS2_4pairIKS1_S8_EEEEEE(%"class.syncer::CommitProcessor"* %1, i32 37, i64 %2, %"class.std::__1::map.4"* nonnull %4)
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %38, label %22

22:                                               ; preds = %13
  %23 = bitcast %"class.std::__1::map.4"* %4 to <2 x i64>*
  %24 = load <2 x i64>, <2 x i64>* %23, align 16
  %25 = bitcast %"class.std::__1::map.4"* %0 to <2 x i64>*
  store <2 x i64> %24, <2 x i64>* %25, align 8
  %26 = getelementptr inbounds %"class.std::__1::map.4", %"class.std::__1::map.4"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %27 = load i64, i64* %17, align 16
  store i64 %27, i64* %26, align 8
  %28 = icmp eq i64 %27, 0
  %29 = getelementptr inbounds %"class.std::__1::map.4", %"class.std::__1::map.4"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %30 = extractelement <2 x i64> %24, i32 1
  br i1 %28, label %31, label %34

31:                                               ; preds = %22
  %32 = inttoptr i64 %30 to %"class.std::__1::__tree_node"*
  %33 = getelementptr inbounds %"class.std::__1::map.4", %"class.std::__1::map.4"* %0, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %29, %"class.std::__1::__tree_end_node"** %33, align 8
  br label %110

34:                                               ; preds = %22
  %35 = inttoptr i64 %30 to %"class.std::__1::__tree_node_base"*
  %36 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %35, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %29, %"class.std::__1::__tree_end_node"** %36, align 8
  store %"class.std::__1::__tree_end_node"* %18, %"class.std::__1::__tree_end_node"** %15, align 16
  %37 = bitcast %"class.std::__1::__tree_end_node"* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 16, i1 false) #7
  br label %110

38:                                               ; preds = %13
  %39 = load i32, i32* %5, align 8
  switch i32 %39, label %41 [
    i32 0, label %42
    i32 1, label %40
    i32 2, label %47
  ]

40:                                               ; preds = %38
  br label %42

41:                                               ; preds = %38
  unreachable

42:                                               ; preds = %38, %40
  %43 = phi i64 [ 55832739583, %40 ], [ 12886737152, %38 ]
  %44 = getelementptr inbounds %"class.syncer::CommitProcessor", %"class.syncer::CommitProcessor"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = and i64 %45, %43
  br label %47

47:                                               ; preds = %42, %38
  %48 = phi i64 [ 0, %38 ], [ %46, %42 ]
  br label %49

49:                                               ; preds = %128, %47
  %50 = phi i64 [ 0, %47 ], [ %129, %128 ]
  %51 = shl i64 1, %50
  %52 = and i64 %51, %48
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %56, label %54

54:                                               ; preds = %123, %118, %114, %49
  %55 = phi i64 [ %50, %49 ], [ %57, %114 ], [ %119, %118 ], [ %124, %123 ]
  br label %59

56:                                               ; preds = %49
  %57 = or i64 %50, 1
  %58 = icmp eq i64 %57, 37
  br i1 %58, label %82, label %114

59:                                               ; preds = %54, %79
  %60 = phi i64 [ %66, %79 ], [ 0, %54 ]
  %61 = phi i64 [ %80, %79 ], [ %55, %54 ]
  %62 = trunc i64 %61 to i32
  %63 = add i32 %62, 1
  %64 = sub i64 %2, %60
  %65 = call i64 @_ZN6syncer15CommitProcessor32GatherCommitContributionsForTypeENS_9ModelTypeEmPNSt3__13mapIS1_NS2_10unique_ptrINS_18CommitContributionENS2_14default_deleteIS5_EEEENS2_4lessIS1_EENS2_9allocatorINS2_4pairIKS1_S8_EEEEEE(%"class.syncer::CommitProcessor"* %1, i32 %63, i64 %64, %"class.std::__1::map.4"* nonnull %4) #7
  %66 = add i64 %65, %60
  %67 = icmp ult i64 %66, %2
  br i1 %67, label %68, label %82

68:                                               ; preds = %59
  %69 = add i64 %61, 1
  %70 = icmp ult i64 %69, 37
  br i1 %70, label %71, label %79

71:                                               ; preds = %68, %76
  %72 = phi i64 [ %77, %76 ], [ %69, %68 ]
  %73 = shl i64 1, %72
  %74 = and i64 %73, %48
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %76, label %79

76:                                               ; preds = %71
  %77 = add i64 %72, 1
  %78 = icmp eq i64 %77, 37
  br i1 %78, label %82, label %71

79:                                               ; preds = %71, %68
  %80 = phi i64 [ %69, %68 ], [ %72, %71 ]
  %81 = icmp eq i64 %80, 37
  br i1 %81, label %82, label %59

82:                                               ; preds = %56, %59, %79, %76
  %83 = phi i64 [ %66, %76 ], [ %66, %79 ], [ %66, %59 ], [ 0, %56 ]
  %84 = icmp ult i64 %83, %2
  br i1 %84, label %85, label %94

85:                                               ; preds = %82
  %86 = load i32, i32* %5, align 8
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN6syncer15CommitProcessor23IncrementGatheringPhaseENS0_14GatheringPhaseE, i64 0, i64 %87
  %89 = load i32, i32* %88, align 4
  store i32 %89, i32* %5, align 8
  %90 = icmp eq i64 %83, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %85
  call void @_ZN6syncer15CommitProcessor25GatherCommitContributionsEm(%"class.std::__1::map.4"* sret %0, %"class.syncer::CommitProcessor"* %1, i64 %2)
  %92 = bitcast %"class.std::__1::__tree_end_node"* %18 to %"class.std::__1::__tree_node"**
  %93 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %92, align 8
  br label %110

94:                                               ; preds = %85, %82
  %95 = bitcast %"class.std::__1::map.4"* %4 to <2 x i64>*
  %96 = load <2 x i64>, <2 x i64>* %95, align 16
  %97 = bitcast %"class.std::__1::map.4"* %0 to <2 x i64>*
  store <2 x i64> %96, <2 x i64>* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::map.4", %"class.std::__1::map.4"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %99 = load i64, i64* %17, align 16
  store i64 %99, i64* %98, align 8
  %100 = icmp eq i64 %99, 0
  %101 = getelementptr inbounds %"class.std::__1::map.4", %"class.std::__1::map.4"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %102 = extractelement <2 x i64> %96, i32 1
  br i1 %100, label %103, label %106

103:                                              ; preds = %94
  %104 = inttoptr i64 %102 to %"class.std::__1::__tree_node"*
  %105 = getelementptr inbounds %"class.std::__1::map.4", %"class.std::__1::map.4"* %0, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %101, %"class.std::__1::__tree_end_node"** %105, align 8
  br label %110

106:                                              ; preds = %94
  %107 = inttoptr i64 %102 to %"class.std::__1::__tree_node_base"*
  %108 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %107, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %101, %"class.std::__1::__tree_end_node"** %108, align 8
  store %"class.std::__1::__tree_end_node"* %18, %"class.std::__1::__tree_end_node"** %15, align 16
  %109 = bitcast %"class.std::__1::__tree_end_node"* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %109, i8 0, i64 16, i1 false) #7
  br label %110

110:                                              ; preds = %106, %103, %34, %31, %91
  %111 = phi %"class.std::__1::__tree_node"* [ null, %106 ], [ %104, %103 ], [ null, %34 ], [ %32, %31 ], [ %93, %91 ]
  %112 = getelementptr inbounds %"class.std::__1::map.4", %"class.std::__1::map.4"* %4, i64 0, i32 0
  call void @_ZNSt3__16__treeINS_12__value_typeIN6syncer9ModelTypeENS_10unique_ptrINS2_18CommitContributionENS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree.5"* nonnull %112, %"class.std::__1::__tree_node"* %111) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #7
  br label %113

113:                                              ; preds = %110, %8
  ret void

114:                                              ; preds = %56
  %115 = shl i64 1, %57
  %116 = and i64 %115, %48
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %54

118:                                              ; preds = %114
  %119 = or i64 %50, 2
  %120 = shl i64 1, %119
  %121 = and i64 %120, %48
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %123, label %54

123:                                              ; preds = %118
  %124 = or i64 %50, 3
  %125 = shl i64 1, %124
  %126 = and i64 %125, %48
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %128, label %54

128:                                              ; preds = %123
  %129 = add nuw nsw i64 %50, 4
  br label %49
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN6syncer15CommitProcessor32GatherCommitContributionsForTypeENS_9ModelTypeEmPNSt3__13mapIS1_NS2_10unique_ptrINS_18CommitContributionENS2_14default_deleteIS5_EEEENS2_4lessIS1_EENS2_9allocatorINS2_4pairIKS1_S8_EEEEEE(%"class.syncer::CommitProcessor"* nocapture readonly, i32, i64, %"class.std::__1::map.4"*) local_unnamed_addr #2 align 2 {
  %5 = icmp eq i64 %2, 0
  br i1 %5, label %125, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.syncer::CommitProcessor", %"class.syncer::CommitProcessor"* %0, i64 0, i32 1
  %8 = load %"class.std::__1::map"*, %"class.std::__1::map"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %8, i64 0, i32 0, i32 1, i32 0, i32 0
  %10 = bitcast %"class.std::__1::__tree_end_node"* %9 to %"class.std::__1::__tree_node.20"**
  %11 = load %"class.std::__1::__tree_node.20"*, %"class.std::__1::__tree_node.20"** %10, align 8
  %12 = icmp eq %"class.std::__1::__tree_node.20"* %11, null
  br i1 %12, label %125, label %13

13:                                               ; preds = %6, %13
  %14 = phi %"class.std::__1::__tree_end_node"* [ %24, %13 ], [ %9, %6 ]
  %15 = phi %"class.std::__1::__tree_node.20"* [ %25, %13 ], [ %11, %6 ]
  %16 = getelementptr inbounds %"class.std::__1::__tree_node.20", %"class.std::__1::__tree_node.20"* %15, i64 0, i32 1, i32 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp slt i32 %17, %1
  %19 = getelementptr inbounds %"class.std::__1::__tree_node.20", %"class.std::__1::__tree_node.20"* %15, i64 0, i32 0, i32 1
  %20 = bitcast %"class.std::__1::__tree_node_base"** %19 to %"class.std::__1::__tree_node.20"**
  %21 = getelementptr inbounds %"class.std::__1::__tree_node.20", %"class.std::__1::__tree_node.20"* %15, i64 0, i32 0, i32 0
  %22 = bitcast %"class.std::__1::__tree_node.20"* %15 to %"class.std::__1::__tree_node.20"**
  %23 = select i1 %18, %"class.std::__1::__tree_node.20"** %20, %"class.std::__1::__tree_node.20"** %22
  %24 = select i1 %18, %"class.std::__1::__tree_end_node"* %14, %"class.std::__1::__tree_end_node"* %21
  %25 = load %"class.std::__1::__tree_node.20"*, %"class.std::__1::__tree_node.20"** %23, align 8
  %26 = icmp eq %"class.std::__1::__tree_node.20"* %25, null
  br i1 %26, label %27, label %13

27:                                               ; preds = %13
  %28 = icmp eq %"class.std::__1::__tree_end_node"* %24, %9
  br i1 %28, label %125, label %29

29:                                               ; preds = %27
  %30 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %24, i64 4
  %31 = bitcast %"class.std::__1::__tree_end_node"* %30 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = icmp sgt i32 %32, %1
  br i1 %33, label %125, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %24, i64 5
  %36 = bitcast %"class.std::__1::__tree_end_node"* %35 to %"class.syncer::CommitContributor"**
  %37 = load %"class.syncer::CommitContributor"*, %"class.syncer::CommitContributor"** %36, align 8
  %38 = bitcast %"class.syncer::CommitContributor"* %37 to %"class.syncer::CommitContribution"* (%"class.syncer::CommitContributor"*, i64)***
  %39 = load %"class.syncer::CommitContribution"* (%"class.syncer::CommitContributor"*, i64)**, %"class.syncer::CommitContribution"* (%"class.syncer::CommitContributor"*, i64)*** %38, align 8
  %40 = getelementptr inbounds %"class.syncer::CommitContribution"* (%"class.syncer::CommitContributor"*, i64)*, %"class.syncer::CommitContribution"* (%"class.syncer::CommitContributor"*, i64)** %39, i64 2
  %41 = load %"class.syncer::CommitContribution"* (%"class.syncer::CommitContributor"*, i64)*, %"class.syncer::CommitContribution"* (%"class.syncer::CommitContributor"*, i64)** %40, align 8
  %42 = tail call %"class.syncer::CommitContribution"* %41(%"class.syncer::CommitContributor"* %37, i64 %2) #7
  %43 = ptrtoint %"class.syncer::CommitContribution"* %42 to i64
  %44 = icmp eq %"class.syncer::CommitContribution"* %42, null
  br i1 %44, label %117, label %45

45:                                               ; preds = %34
  %46 = bitcast %"class.syncer::CommitContribution"* %42 to i64 (%"class.syncer::CommitContribution"*)***
  %47 = load i64 (%"class.syncer::CommitContribution"*)**, i64 (%"class.syncer::CommitContribution"*)*** %46, align 8
  %48 = getelementptr inbounds i64 (%"class.syncer::CommitContribution"*)*, i64 (%"class.syncer::CommitContribution"*)** %47, i64 5
  %49 = load i64 (%"class.syncer::CommitContribution"*)*, i64 (%"class.syncer::CommitContribution"*)** %48, align 8
  %50 = tail call i64 %49(%"class.syncer::CommitContribution"* nonnull %42) #7
  %51 = getelementptr inbounds %"class.std::__1::map.4", %"class.std::__1::map.4"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %52 = bitcast %"class.std::__1::__tree_end_node"* %51 to %"class.std::__1::__tree_node"**
  %53 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node"* %53, null
  br i1 %54, label %83, label %55

55:                                               ; preds = %45
  %56 = getelementptr inbounds %"class.std::__1::map.4", %"class.std::__1::map.4"* %3, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %57

57:                                               ; preds = %79, %55
  %58 = phi %"class.std::__1::__tree_node"* [ %82, %79 ], [ %53, %55 ]
  %59 = phi %"class.std::__1::__tree_node_base"** [ %81, %79 ], [ %56, %55 ]
  %60 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %58, i64 0, i32 1, i32 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = icmp sgt i32 %61, %1
  br i1 %62, label %63, label %69

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %58, i64 0, i32 0, i32 0, i32 0
  %65 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %64, align 8
  %66 = icmp eq %"class.std::__1::__tree_node_base"* %65, null
  br i1 %66, label %67, label %79

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %58, i64 0, i32 0, i32 0
  br label %85

69:                                               ; preds = %57
  %70 = icmp slt i32 %61, %1
  br i1 %70, label %71, label %77

71:                                               ; preds = %69
  %72 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %58, i64 0, i32 0, i32 1
  %73 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %72, align 8
  %74 = icmp eq %"class.std::__1::__tree_node_base"* %73, null
  br i1 %74, label %75, label %79

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %58, i64 0, i32 0, i32 0
  br label %85

77:                                               ; preds = %69
  %78 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %58, i64 0, i32 0, i32 0
  br label %85

79:                                               ; preds = %71, %63
  %80 = phi %"class.std::__1::__tree_node_base"* [ %65, %63 ], [ %73, %71 ]
  %81 = phi %"class.std::__1::__tree_node_base"** [ %64, %63 ], [ %72, %71 ]
  %82 = bitcast %"class.std::__1::__tree_node_base"* %80 to %"class.std::__1::__tree_node"*
  br label %57

83:                                               ; preds = %45
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  br label %85

85:                                               ; preds = %83, %77, %75, %67
  %86 = phi %"class.std::__1::__tree_end_node"* [ %51, %83 ], [ %68, %67 ], [ %76, %75 ], [ %78, %77 ]
  %87 = phi %"class.std::__1::__tree_node_base"** [ %84, %83 ], [ %64, %67 ], [ %72, %75 ], [ %59, %77 ]
  %88 = bitcast %"class.std::__1::__tree_node_base"** %87 to %"class.std::__1::__tree_node"**
  %89 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %88, align 8
  %90 = icmp eq %"class.std::__1::__tree_node"* %89, null
  br i1 %90, label %91, label %117

91:                                               ; preds = %85
  %92 = tail call i8* @_Znwm(i64 48) #8, !noalias !2
  %93 = getelementptr inbounds i8, i8* %92, i64 32
  %94 = bitcast i8* %93 to i32*
  store i32 %1, i32* %94, align 8, !noalias !2
  %95 = getelementptr inbounds i8, i8* %92, i64 40
  %96 = bitcast i8* %95 to i64*
  store i64 %43, i64* %96, align 8, !noalias !2
  %97 = bitcast i8* %92 to %"class.std::__1::__tree_node_base"*
  %98 = getelementptr inbounds i8, i8* %92, i64 16
  %99 = bitcast i8* %98 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %92, i8 0, i64 16, i1 false) #7
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %99, align 8
  %100 = bitcast %"class.std::__1::__tree_node_base"** %87 to i8**
  store i8* %92, i8** %100, align 8
  %101 = getelementptr inbounds %"class.std::__1::map.4", %"class.std::__1::map.4"* %3, i64 0, i32 0, i32 0
  %102 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %101, align 8
  %103 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %102, i64 0, i32 0
  %104 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %103, align 8
  %105 = icmp eq %"class.std::__1::__tree_node_base"* %104, null
  br i1 %105, label %110, label %106

106:                                              ; preds = %91
  %107 = ptrtoint %"class.std::__1::__tree_node_base"* %104 to i64
  %108 = bitcast %"class.std::__1::map.4"* %3 to i64*
  store i64 %107, i64* %108, align 8
  %109 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %87, align 8
  br label %110

110:                                              ; preds = %91, %106
  %111 = phi %"class.std::__1::__tree_node_base"* [ %97, %91 ], [ %109, %106 ]
  %112 = getelementptr inbounds %"class.std::__1::map.4", %"class.std::__1::map.4"* %3, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %112, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"* %111) #7
  %114 = getelementptr inbounds %"class.std::__1::map.4", %"class.std::__1::map.4"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %115 = load i64, i64* %114, align 8
  %116 = add i64 %115, 1
  store i64 %116, i64* %114, align 8
  br label %125

117:                                              ; preds = %85, %34
  %118 = phi i64 [ 0, %34 ], [ %50, %85 ]
  %119 = icmp eq %"class.syncer::CommitContribution"* %42, null
  br i1 %119, label %125, label %120

120:                                              ; preds = %117
  %121 = bitcast %"class.syncer::CommitContribution"* %42 to void (%"class.syncer::CommitContribution"*)***
  %122 = load void (%"class.syncer::CommitContribution"*)**, void (%"class.syncer::CommitContribution"*)*** %121, align 8
  %123 = getelementptr inbounds void (%"class.syncer::CommitContribution"*)*, void (%"class.syncer::CommitContribution"*)** %122, i64 1
  %124 = load void (%"class.syncer::CommitContribution"*)*, void (%"class.syncer::CommitContribution"*)** %123, align 8
  tail call void %124(%"class.syncer::CommitContribution"* nonnull %42) #7
  br label %125

125:                                              ; preds = %110, %29, %27, %6, %117, %120, %4
  %126 = phi i64 [ 0, %4 ], [ %118, %117 ], [ %118, %120 ], [ 0, %6 ], [ 0, %27 ], [ 0, %29 ], [ %50, %110 ]
  ret i64 %126
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN6syncer15CommitProcessor33GatherCommitContributionsForTypesENS_7EnumSetINS_9ModelTypeELS2_1ELS2_37EEEmPNSt3__13mapIS2_NS4_10unique_ptrINS_18CommitContributionENS4_14default_deleteIS7_EEEENS4_4lessIS2_EENS4_9allocatorINS4_4pairIKS2_SA_EEEEEE(%"class.syncer::CommitProcessor"* nocapture readonly, i64, i64, %"class.std::__1::map.4"*) local_unnamed_addr #2 align 2 {
  br label %5

5:                                                ; preds = %54, %4
  %6 = phi i64 [ 0, %4 ], [ %55, %54 ]
  %7 = shl i64 1, %6
  %8 = and i64 %7, %1
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %49, %44, %40, %5
  %11 = phi i64 [ %6, %5 ], [ %13, %40 ], [ %45, %44 ], [ %50, %49 ]
  br label %15

12:                                               ; preds = %5
  %13 = or i64 %6, 1
  %14 = icmp eq i64 %13, 37
  br i1 %14, label %38, label %40

15:                                               ; preds = %10, %35
  %16 = phi i64 [ %22, %35 ], [ 0, %10 ]
  %17 = phi i64 [ %36, %35 ], [ %11, %10 ]
  %18 = trunc i64 %17 to i32
  %19 = add i32 %18, 1
  %20 = sub i64 %2, %16
  %21 = tail call i64 @_ZN6syncer15CommitProcessor32GatherCommitContributionsForTypeENS_9ModelTypeEmPNSt3__13mapIS1_NS2_10unique_ptrINS_18CommitContributionENS2_14default_deleteIS5_EEEENS2_4lessIS1_EENS2_9allocatorINS2_4pairIKS1_S8_EEEEEE(%"class.syncer::CommitProcessor"* %0, i32 %19, i64 %20, %"class.std::__1::map.4"* %3)
  %22 = add i64 %21, %16
  %23 = icmp ult i64 %22, %2
  br i1 %23, label %24, label %38

24:                                               ; preds = %15
  %25 = add i64 %17, 1
  %26 = icmp ult i64 %25, 37
  br i1 %26, label %27, label %35

27:                                               ; preds = %24, %32
  %28 = phi i64 [ %33, %32 ], [ %25, %24 ]
  %29 = shl i64 1, %28
  %30 = and i64 %29, %1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %35

32:                                               ; preds = %27
  %33 = add i64 %28, 1
  %34 = icmp eq i64 %33, 37
  br i1 %34, label %38, label %27

35:                                               ; preds = %27, %24
  %36 = phi i64 [ %25, %24 ], [ %28, %27 ]
  %37 = icmp eq i64 %36, 37
  br i1 %37, label %38, label %15

38:                                               ; preds = %12, %15, %35, %32
  %39 = phi i64 [ %22, %32 ], [ %22, %35 ], [ %22, %15 ], [ 0, %12 ]
  ret i64 %39

40:                                               ; preds = %12
  %41 = shl i64 1, %13
  %42 = and i64 %41, %1
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %10

44:                                               ; preds = %40
  %45 = or i64 %6, 2
  %46 = shl i64 1, %45
  %47 = and i64 %46, %1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %10

49:                                               ; preds = %44
  %50 = or i64 %6, 3
  %51 = shl i64 1, %50
  %52 = and i64 %51, %1
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %54, label %10

54:                                               ; preds = %49
  %55 = add nuw nsw i64 %6, 4
  br label %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK6syncer15CommitProcessor33GetUserTypesForCurrentCommitPhaseEv(%"class.syncer::CommitProcessor"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.syncer::CommitProcessor", %"class.syncer::CommitProcessor"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %5 [
    i32 0, label %6
    i32 1, label %4
    i32 2, label %11
  ]

4:                                                ; preds = %1
  br label %6

5:                                                ; preds = %1
  unreachable

6:                                                ; preds = %1, %4
  %7 = phi i64 [ 55832739583, %4 ], [ 12886737152, %1 ]
  %8 = getelementptr inbounds %"class.syncer::CommitProcessor", %"class.syncer::CommitProcessor"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, %7
  br label %11

11:                                               ; preds = %6, %1
  %12 = phi i64 [ 0, %1 ], [ %10, %6 ]
  ret i64 %12
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN6syncer15CommitProcessor23IncrementGatheringPhaseENS0_14GatheringPhaseE(i32) local_unnamed_addr #1 align 2 {
  %2 = sext i32 %0 to i64
  %3 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN6syncer15CommitProcessor23IncrementGatheringPhaseENS0_14GatheringPhaseE, i64 0, i64 %2
  %4 = load i32, i32* %3, align 4
  ret i32 %4
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIN6syncer9ModelTypeENS_10unique_ptrINS2_18CommitContributionENS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree.5"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN6syncer9ModelTypeENS_10unique_ptrINS2_18CommitContributionENS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree.5"* %0, %"class.std::__1::__tree_node"* %6) #7
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN6syncer9ModelTypeENS_10unique_ptrINS2_18CommitContributionENS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree.5"* %0, %"class.std::__1::__tree_node"* %9) #7
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %"class.syncer::CommitContribution"*, %"class.syncer::CommitContribution"** %10, align 8
  store %"class.syncer::CommitContribution"* null, %"class.syncer::CommitContribution"** %10, align 8
  %12 = icmp eq %"class.syncer::CommitContribution"* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %4
  %14 = bitcast %"class.syncer::CommitContribution"* %11 to void (%"class.syncer::CommitContribution"*)***
  %15 = load void (%"class.syncer::CommitContribution"*)**, void (%"class.syncer::CommitContribution"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.syncer::CommitContribution"*)*, void (%"class.syncer::CommitContribution"*)** %15, i64 1
  %17 = load void (%"class.syncer::CommitContribution"*)*, void (%"class.syncer::CommitContribution"*)** %16, align 8
  tail call void %17(%"class.syncer::CommitContribution"* nonnull %11) #7
  br label %18

18:                                               ; preds = %4, %13
  %19 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #8
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #2 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !5
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !5
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__16__treeINS_12__value_typeIN6syncer9ModelTypeENS_10unique_ptrINS2_18CommitContributionENS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE16__construct_nodeIJRS3_S8_EEENS4_INS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINSE_ISL_EEEEEEDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__16__treeINS_12__value_typeIN6syncer9ModelTypeENS_10unique_ptrINS2_18CommitContributionENS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE16__construct_nodeIJRS3_S8_EEENS4_INS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINSE_ISL_EEEEEEDpOT_"}
!5 = !{i8 0, i8 2}
