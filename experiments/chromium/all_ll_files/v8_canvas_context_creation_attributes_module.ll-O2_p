; ModuleID = 'gen/third_party/blink/renderer/bindings/modules/v8/v8_canvas_context_creation_attributes_module.cc'
source_filename = "gen/third_party/blink/renderer/bindings/modules/v8/v8_canvas_context_creation_attributes_module.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.77", i32, [4 x i8], %"class.std::__1::unique_ptr.213", %"class.std::__1::unique_ptr.213", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.223", %"class.std::__1::unique_ptr.229", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.241", %"class.std::__1::unique_ptr.247", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.254", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.98", %"class.std::__1::unique_ptr.104", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.121", %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.142", %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.156", %"class.std::__1::unique_ptr.163", %"class.std::__1::unique_ptr.170", %"class.std::__1::unique_ptr.193", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, {}* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.113" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.113" = type { %"struct.std::__1::__atomic_base.114" }
%"struct.std::__1::__atomic_base.114" = type { %"struct.std::__1::__atomic_base.115" }
%"struct.std::__1::__atomic_base.115" = type { %"struct.std::__1::__cxx_atomic_impl.116" }
%"struct.std::__1::__cxx_atomic_impl.116" = type { %"struct.std::__1::__cxx_atomic_base_impl.117" }
%"struct.std::__1::__cxx_atomic_base_impl.117" = type { i64 }
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.blink::Worklist.124"* }
%"class.blink::Worklist.124" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.113" }
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.blink::Worklist.131"* }
%"class.blink::Worklist.131" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.113" }
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.blink::Worklist.138"* }
%"class.blink::Worklist.138" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.113" }
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.blink::Worklist.145"* }
%"class.blink::Worklist.145" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.113" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::Worklist.152"* }
%"class.blink::Worklist.152" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.113" }
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.blink::Worklist.159"* }
%"class.blink::Worklist.159" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.113" }
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.blink::Worklist.166"* }
%"class.blink::Worklist.166" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.113" }
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.173", %"class.std::__1::__compressed_pair.180", %"class.std::__1::__compressed_pair.185", %"class.std::__1::__compressed_pair.187", [4 x i8] }>
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175", %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { i64 }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { float }
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.196", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.205" }
%"class.WTF::Vector.205" = type { %"class.WTF::VectorBuffer.206" }
%"class.WTF::VectorBuffer.206" = type { %"class.WTF::VectorBufferBase.207" }
%"class.WTF::VectorBufferBase.207" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.221" }
%"class.WTF::VectorBuffer.221" = type { %"class.WTF::VectorBufferBase.222" }
%"class.WTF::VectorBufferBase.222" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.223" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.235" }
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.124"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.131"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.138"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.145"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.152"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.285" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.247" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.253 }
%class.scoped_refptr.253 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.254" = type { %"struct.std::__1::__atomic_base.255" }
%"struct.std::__1::__atomic_base.255" = type { %"struct.std::__1::__cxx_atomic_impl.256" }
%"struct.std::__1::__cxx_atomic_impl.256" = type { %"struct.std::__1::__cxx_atomic_base_impl.257" }
%"struct.std::__1::__cxx_atomic_base_impl.257" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.v8::Value" = type { i8 }
%"class.blink::CanvasContextCreationAttributesModule" = type <{ %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8], %"class.WTF::String", %"class.WTF::String", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8::internal::Isolate" = type opaque
%"class.blink::V8StringResource" = type { %"class.v8::Local", i32, %"class.WTF::String", %"class.WTF::StringView::StackBackingStore" }
%"class.v8::Local" = type { %"class.v8::Value"* }
%"class.WTF::StringView::StackBackingStore" = type { [64 x i16], %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.v8::Object" = type { i8 }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap", %"class.WTF::HashMap", %"class.WTF::HashMap.24", %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.71", %"class.blink::Persistent", i8, i8, i8, %"class.WTF::Vector.258", %"class.std::__1::unique_ptr.263", %"class.blink::Persistent.269", %"class.blink::Persistent.273", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.8", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.18", i32, i32 }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.WTF::HashMap.24" = type { %"class.WTF::HashTable.25" }
%"class.WTF::HashTable.25" = type <{ %"struct.WTF::KeyValuePair.28"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.28" = type opaque
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.37", %class.scoped_refptr }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.32", i8* }
%"class.WTF::HashMap.32" = type { %"class.WTF::HashTable.33" }
%"class.WTF::HashTable.33" = type <{ %"struct.WTF::KeyValuePair.36"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.36" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.37" = type { %"class.v8::PersistentValueMapBase.38" }
%"class.v8::PersistentValueMapBase.38" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.39", i8* }
%"class.WTF::HashMap.39" = type { %"class.WTF::HashTable.40" }
%"class.WTF::HashTable.40" = type <{ %"struct.WTF::KeyValuePair.43"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.43" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.std::__1::unique_ptr.44" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.47", %"class.std::__1::unique_ptr.55", %"class.WTF::Vector.61", i8, i32 }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.WTF::Vector"* }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.61" = type { %"class.WTF::VectorBuffer.62" }
%"class.WTF::VectorBuffer.62" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type opaque
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.292, %"class.blink::Member.311", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr.292 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.293", i32, i32, %"class.blink::Persistent.295" }
%"class.WTF::RefCounted.293" = type { %"class.base::RefCounted.294" }
%"class.base::RefCounted.294" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.295" = type { %"class.blink::PersistentBase.296" }
%"class.blink::PersistentBase.296" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.301" }
%"class.WTF::HashMap.301" = type { %"class.WTF::HashTable.302" }
%"class.WTF::HashTable.302" = type <{ %"struct.WTF::KeyValuePair.304"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.304" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference.308" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.305" }
%"class.blink::MemberBase.305" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference.308" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference.308" = type { %"class.v8::TracedReference.309" }
%"class.v8::TracedReference.309" = type { %"class.v8::BasicTracedReference.310" }
%"class.v8::BasicTracedReference.310" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::Member.311" = type { %"class.blink::MemberBase.312" }
%"class.blink::MemberBase.312" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.WTF::Vector.258" = type { %"class.WTF::VectorBuffer.259" }
%"class.WTF::VectorBuffer.259" = type { %"class.WTF::VectorBufferBase.260" }
%"class.WTF::VectorBufferBase.260" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type opaque
%"class.std::__1::unique_ptr.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.269" = type { %"class.blink::PersistentBase.270" }
%"class.blink::PersistentBase.270" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.273" = type { %"class.blink::PersistentBase.274" }
%"class.blink::PersistentBase.274" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector", i64 }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.279" }
%"class.WTF::Vector.279" = type { %"class.WTF::VectorBuffer.280" }
%"class.WTF::VectorBuffer.280" = type { %"class.WTF::VectorBufferBase.281" }
%"class.WTF::VectorBufferBase.281" = type { %"struct.std::__1::pair.282"*, i32, i32 }
%"struct.std::__1::pair.282" = type { %"class.blink::UntracedMember", %"class.blink::Member" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase.283" }
%"class.blink::MemberBase.283" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.v8::Eternal" = type { %"class.v8::Name"* }
%"class.v8::Name" = type { i8 }
%"class.base::span.313" = type { %"struct.base::internal::ExtentStorage", i8** }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.v8::Boolean" = type { i8 }
%"class.v8::String" = type { i8 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.335" }
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.v8::Int32" = type { i8 }

$_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE = comdat any

$_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv = comdat any

$_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = comdat any

@_ZZN5blink39V8CanvasContextCreationAttributesModule6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_37CanvasContextCreationAttributesModuleERNS_14ExceptionStateEE12kValidValues = internal constant [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i32 0, i32 0)], align 16
@.str = private unnamed_addr constant [5 x i8] c"srgb\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"rec2020\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"display-p3\00", align 1
@.str.3 = private unnamed_addr constant [21 x i8] c"PredefinedColorSpace\00", align 1
@_ZZN5blink39V8CanvasContextCreationAttributesModule6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_37CanvasContextCreationAttributesModuleERNS_14ExceptionStateEE12kValidValues_0 = internal constant [3 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i32 0, i32 0)], align 16
@.str.4 = private unnamed_addr constant [8 x i8] c"default\00", align 1
@.str.5 = private unnamed_addr constant [10 x i8] c"low-power\00", align 1
@.str.6 = private unnamed_addr constant [17 x i8] c"high-performance\00", align 1
@.str.7 = private unnamed_addr constant [22 x i8] c"CanvasPowerPreference\00", align 1
@_ZZN5blink39V8CanvasContextCreationAttributesModule6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_37CanvasContextCreationAttributesModuleERNS_14ExceptionStateEE12kValidValues_1 = internal constant [2 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i32 0, i32 0)], align 16
@.str.8 = private unnamed_addr constant [6 x i8] c"uint8\00", align 1
@.str.9 = private unnamed_addr constant [8 x i8] c"float16\00", align 1
@.str.10 = private unnamed_addr constant [18 x i8] c"CanvasPixelFormat\00", align 1
@_ZZN5blinkL50eternalV8CanvasContextCreationAttributesModuleKeysEPN2v87IsolateEE5kKeys = internal constant [13 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.23, i32 0, i32 0)], align 16
@.str.11 = private unnamed_addr constant [6 x i8] c"alpha\00", align 1
@.str.12 = private unnamed_addr constant [10 x i8] c"antialias\00", align 1
@.str.13 = private unnamed_addr constant [11 x i8] c"colorSpace\00", align 1
@.str.14 = private unnamed_addr constant [6 x i8] c"depth\00", align 1
@.str.15 = private unnamed_addr constant [15 x i8] c"desynchronized\00", align 1
@.str.16 = private unnamed_addr constant [29 x i8] c"failIfMajorPerformanceCaveat\00", align 1
@.str.17 = private unnamed_addr constant [12 x i8] c"pixelFormat\00", align 1
@.str.18 = private unnamed_addr constant [16 x i8] c"powerPreference\00", align 1
@.str.19 = private unnamed_addr constant [19 x i8] c"premultipliedAlpha\00", align 1
@.str.20 = private unnamed_addr constant [22 x i8] c"preserveDrawingBuffer\00", align 1
@.str.21 = private unnamed_addr constant [8 x i8] c"stencil\00", align 1
@.str.22 = private unnamed_addr constant [19 x i8] c"willReadFrequently\00", align 1
@.str.23 = private unnamed_addr constant [13 x i8] c"xrCompatible\00", align 1
@.ref.tmp = private constant { i64, i8** } { i64 13, i8** getelementptr inbounds ([13 x i8*], [13 x i8*]* @_ZZN5blinkL50eternalV8CanvasContextCreationAttributesModuleKeysEPN2v87IsolateEE5kKeys, i32 0, i32 0) }, align 8
@_ZN5blink26RuntimeEnabledFeaturesBase35is_canvas_color_management_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase29is_new_canvas_2d_api_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase18is_web_xr_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.24 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.25 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.26 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink39V8CanvasContextCreationAttributesModule6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_37CanvasContextCreationAttributesModuleERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::CanvasContextCreationAttributesModule"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = alloca %"class.blink::V8StringResource", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.blink::V8StringResource", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.blink::V8StringResource", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = icmp eq %"class.v8::Value"* %1, null
  br i1 %15, label %1257, label %16

16:                                               ; preds = %4
  %17 = bitcast %"class.v8::Value"* %1 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = and i64 %18, 3
  %20 = icmp eq i64 %19, 1
  br i1 %20, label %21, label %37

21:                                               ; preds = %16
  %22 = add i64 %18, -1
  %23 = inttoptr i64 %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = and i64 %18, -4294967296
  %26 = zext i32 %24 to i64
  %27 = or i64 %25, %26
  %28 = add i64 %27, 7
  %29 = inttoptr i64 %28 to i16*
  %30 = load i16, i16* %29, align 2
  %31 = icmp eq i16 %30, 67
  br i1 %31, label %32, label %37

32:                                               ; preds = %21
  %33 = add i64 %18, 23
  %34 = inttoptr i64 %33 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = ashr i32 %35, 1
  switch i32 %36, label %37 [
    i32 5, label %1257
    i32 3, label %1257
  ]

37:                                               ; preds = %32, %21, %16
  %38 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %1) #7
  br i1 %38, label %39, label %1257

39:                                               ; preds = %37
  %40 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %41 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %42 = add i64 %41, 8
  %43 = inttoptr i64 %42 to %"class.blink::V8PerIsolateData"**
  %44 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %43, align 8
  %45 = tail call { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"* %44, i8* bitcast ([13 x i8*]* @_ZZN5blinkL50eternalV8CanvasContextCreationAttributesModuleKeysEPN2v87IsolateEE5kKeys to i8*), %"class.base::span.313"* dereferenceable(16) bitcast ({ i64, i8** }* @.ref.tmp to %"class.base::span.313"*)) #7
  %46 = extractvalue { i64, %"class.v8::Eternal"* } %45, 1
  %47 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %47) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %0) #7
  %48 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #7
  %49 = bitcast %"class.v8::Eternal"* %46 to %"class.v8::Value"**
  %50 = load %"class.v8::Value"*, %"class.v8::Value"** %49, align 8
  %51 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %40, %"class.v8::Context"* %48, %"class.v8::Value"* %50) #7
  %52 = icmp eq %"class.v8::Value"* %51, null
  br i1 %52, label %53, label %59

53:                                               ; preds = %39
  %54 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %55 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %56 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %55, align 8
  %57 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %56, i64 5
  %58 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %57, align 8
  call void %58(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %54) #7
  br label %1256

59:                                               ; preds = %39
  %60 = bitcast %"class.v8::Value"* %51 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = and i64 %61, 3
  %63 = icmp eq i64 %62, 1
  br i1 %63, label %64, label %81

64:                                               ; preds = %59
  %65 = add i64 %61, -1
  %66 = inttoptr i64 %65 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = and i64 %61, -4294967296
  %69 = zext i32 %67 to i64
  %70 = or i64 %68, %69
  %71 = add i64 %70, 7
  %72 = inttoptr i64 %71 to i16*
  %73 = load i16, i16* %72, align 2
  %74 = icmp eq i16 %73, 67
  br i1 %74, label %75, label %81

75:                                               ; preds = %64
  %76 = add i64 %61, 23
  %77 = inttoptr i64 %76 to i32*
  %78 = load i32, i32* %77, align 4
  %79 = and i32 %78, -2
  %80 = icmp eq i32 %79, 10
  br i1 %80, label %97, label %81

81:                                               ; preds = %64, %59, %75
  %82 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %51) #7
  br i1 %82, label %83, label %86, !prof !2

83:                                               ; preds = %81
  %84 = bitcast %"class.v8::Value"* %51 to %"class.v8::Boolean"*
  %85 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %84) #7
  br label %88

86:                                               ; preds = %81
  %87 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %51, %"class.v8::Isolate"* %0) #7
  br label %88

88:                                               ; preds = %83, %86
  %89 = phi i1 [ %85, %83 ], [ %87, %86 ]
  %90 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %91 = load i32, i32* %90, align 8
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %1256

93:                                               ; preds = %88
  %94 = zext i1 %89 to i8
  %95 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %2, i64 0, i32 11
  store i8 %94, i8* %95, align 2
  %96 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %2, i64 0, i32 1
  store i8 1, i8* %96, align 8
  br label %97

97:                                               ; preds = %93, %75
  %98 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %46, i64 1, i32 0
  %99 = bitcast %"class.v8::Name"** %98 to %"class.v8::Value"**
  %100 = load %"class.v8::Value"*, %"class.v8::Value"** %99, align 8
  %101 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %40, %"class.v8::Context"* %48, %"class.v8::Value"* %100) #7
  %102 = icmp eq %"class.v8::Value"* %101, null
  br i1 %102, label %103, label %109

103:                                              ; preds = %97
  %104 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %105 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %106 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %105, align 8
  %107 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %106, i64 5
  %108 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %107, align 8
  call void %108(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %104) #7
  br label %1256

109:                                              ; preds = %97
  %110 = bitcast %"class.v8::Value"* %101 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = and i64 %111, 3
  %113 = icmp eq i64 %112, 1
  br i1 %113, label %114, label %131

114:                                              ; preds = %109
  %115 = add i64 %111, -1
  %116 = inttoptr i64 %115 to i32*
  %117 = load i32, i32* %116, align 4
  %118 = and i64 %111, -4294967296
  %119 = zext i32 %117 to i64
  %120 = or i64 %118, %119
  %121 = add i64 %120, 7
  %122 = inttoptr i64 %121 to i16*
  %123 = load i16, i16* %122, align 2
  %124 = icmp eq i16 %123, 67
  br i1 %124, label %125, label %131

125:                                              ; preds = %114
  %126 = add i64 %111, 23
  %127 = inttoptr i64 %126 to i32*
  %128 = load i32, i32* %127, align 4
  %129 = and i32 %128, -2
  %130 = icmp eq i32 %129, 10
  br i1 %130, label %147, label %131

131:                                              ; preds = %114, %109, %125
  %132 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %101) #7
  br i1 %132, label %133, label %136, !prof !2

133:                                              ; preds = %131
  %134 = bitcast %"class.v8::Value"* %101 to %"class.v8::Boolean"*
  %135 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %134) #7
  br label %138

136:                                              ; preds = %131
  %137 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %101, %"class.v8::Isolate"* %0) #7
  br label %138

138:                                              ; preds = %133, %136
  %139 = phi i1 [ %135, %133 ], [ %137, %136 ]
  %140 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %141 = load i32, i32* %140, align 8
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %1256

143:                                              ; preds = %138
  %144 = zext i1 %139 to i8
  %145 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %2, i64 0, i32 12
  store i8 %144, i8* %145, align 1
  %146 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %2, i64 0, i32 2
  store i8 1, i8* %146, align 1
  br label %147

147:                                              ; preds = %143, %125
  %148 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %46, i64 2, i32 0
  %149 = bitcast %"class.v8::Name"** %148 to %"class.v8::Value"**
  %150 = load %"class.v8::Value"*, %"class.v8::Value"** %149, align 8
  %151 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %40, %"class.v8::Context"* %48, %"class.v8::Value"* %150) #7
  %152 = icmp eq %"class.v8::Value"* %151, null
  br i1 %152, label %153, label %159

153:                                              ; preds = %147
  %154 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %155 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %156 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %155, align 8
  %157 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %156, i64 5
  %158 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %157, align 8
  call void %158(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %154) #7
  br label %1256

159:                                              ; preds = %147
  %160 = bitcast %"class.v8::Value"* %151 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = and i64 %161, 3
  %163 = icmp eq i64 %162, 1
  br i1 %163, label %164, label %181

164:                                              ; preds = %159
  %165 = add i64 %161, -1
  %166 = inttoptr i64 %165 to i32*
  %167 = load i32, i32* %166, align 4
  %168 = and i64 %161, -4294967296
  %169 = zext i32 %167 to i64
  %170 = or i64 %168, %169
  %171 = add i64 %170, 7
  %172 = inttoptr i64 %171 to i16*
  %173 = load i16, i16* %172, align 2
  %174 = icmp eq i16 %173, 67
  br i1 %174, label %175, label %181

175:                                              ; preds = %164
  %176 = add i64 %161, 23
  %177 = inttoptr i64 %176 to i32*
  %178 = load i32, i32* %177, align 4
  %179 = and i32 %178, -2
  %180 = icmp eq i32 %179, 10
  br i1 %180, label %387, label %181

181:                                              ; preds = %164, %159, %175
  %182 = bitcast %"class.blink::V8StringResource"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %182) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %182, i8 -86, i64 152, i1 false)
  %183 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %151, %"class.v8::Value"** %183, align 8
  %184 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 1
  store i32 0, i32* %184, align 8
  %185 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %185, align 8
  %186 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 3, i32 1
  %187 = bitcast %"class.std::__1::unique_ptr"* %186 to i64*
  store i64 0, i64* %187, align 8
  %188 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %6, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %188, label %189, label %365

189:                                              ; preds = %181
  %190 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %190) #7
  %191 = load %"class.v8::Value"*, %"class.v8::Value"** %183, align 8
  %192 = icmp eq %"class.v8::Value"* %191, null
  br i1 %192, label %197, label %193, !prof !3

193:                                              ; preds = %189
  %194 = bitcast %"class.v8::Value"* %191 to %"class.v8::String"*
  %195 = load i32, i32* %184, align 8
  %196 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %194, i32 %195) #7
  br label %217

197:                                              ; preds = %189
  %198 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %185, align 8
  %199 = icmp eq %"class.WTF::StringImpl"* %198, null
  br i1 %199, label %217, label %200

200:                                              ; preds = %197
  %201 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %198, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %202 = load atomic i32, i32* %201 monotonic, align 4
  %203 = and i32 %202, 2
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %205, label %217

205:                                              ; preds = %200
  %206 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %198, i64 0, i32 0
  %207 = load i32, i32* %206, align 4
  %208 = zext i32 %207 to i33
  %209 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %208, i33 1) #7
  %210 = extractvalue { i33, i1 } %209, 1
  %211 = extractvalue { i33, i1 } %209, 0
  %212 = icmp slt i33 %211, 0
  %213 = or i1 %210, %212
  br i1 %213, label %214, label %215, !prof !3

214:                                              ; preds = %205
  call void @llvm.trap() #7
  unreachable

215:                                              ; preds = %205
  %216 = trunc i33 %211 to i32
  store i32 %216, i32* %206, align 4
  br label %217

217:                                              ; preds = %193, %197, %200, %215
  %218 = phi %"class.WTF::StringImpl"* [ %196, %193 ], [ null, %197 ], [ %198, %200 ], [ %198, %215 ]
  %219 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %218, %"class.WTF::StringImpl"** %219, align 8
  %220 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %220) #7
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0), i64 20) #7
  %221 = call zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* nonnull dereferenceable(8) %7, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @_ZZN5blink39V8CanvasContextCreationAttributesModule6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_37CanvasContextCreationAttributesModuleERNS_14ExceptionStateEE12kValidValues, i64 0, i64 0), i64 3, %"class.WTF::String"* nonnull dereferenceable(8) %8, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %222 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %223 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %222, align 8
  %224 = icmp eq %"class.WTF::StringImpl"* %223, null
  br i1 %224, label %238, label %225

225:                                              ; preds = %217
  %226 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %223, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %227 = load atomic i32, i32* %226 monotonic, align 4
  %228 = and i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %223, i64 0, i32 0
  %231 = load i32, i32* %230, align 4
  br i1 %229, label %232, label %234

232:                                              ; preds = %225
  %233 = add i32 %231, -1
  store i32 %233, i32* %230, align 4
  br label %234

234:                                              ; preds = %232, %225
  %235 = phi i32 [ %233, %232 ], [ %231, %225 ]
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %237, label %238

237:                                              ; preds = %234
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %223) #7
  br label %238

238:                                              ; preds = %217, %234, %237
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %220) #7
  %239 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %219, align 8
  %240 = icmp eq %"class.WTF::StringImpl"* %239, null
  br i1 %240, label %254, label %241

241:                                              ; preds = %238
  %242 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %239, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %243 = load atomic i32, i32* %242 monotonic, align 4
  %244 = and i32 %243, 2
  %245 = icmp eq i32 %244, 0
  %246 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %239, i64 0, i32 0
  %247 = load i32, i32* %246, align 4
  br i1 %245, label %248, label %250

248:                                              ; preds = %241
  %249 = add i32 %247, -1
  store i32 %249, i32* %246, align 4
  br label %250

250:                                              ; preds = %248, %241
  %251 = phi i32 [ %249, %248 ], [ %247, %241 ]
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %253, label %254

253:                                              ; preds = %250
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %239) #7
  br label %254

254:                                              ; preds = %238, %250, %253
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %190) #7
  br i1 %221, label %255, label %365

255:                                              ; preds = %254
  %256 = load %"class.v8::Value"*, %"class.v8::Value"** %183, align 8
  %257 = icmp eq %"class.v8::Value"* %256, null
  br i1 %257, label %258, label %282, !prof !3

258:                                              ; preds = %255
  %259 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %185, align 8
  %260 = icmp eq %"class.WTF::StringImpl"* %259, null
  br i1 %260, label %261, label %263

261:                                              ; preds = %258
  %262 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %2, i64 0, i32 14
  br label %307

263:                                              ; preds = %258
  %264 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %259, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %265 = load atomic i32, i32* %264 monotonic, align 4
  %266 = and i32 %265, 2
  %267 = icmp eq i32 %266, 0
  br i1 %267, label %268, label %280

268:                                              ; preds = %263
  %269 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %259, i64 0, i32 0
  %270 = load i32, i32* %269, align 4
  %271 = zext i32 %270 to i33
  %272 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %271, i33 1) #7
  %273 = extractvalue { i33, i1 } %272, 1
  %274 = extractvalue { i33, i1 } %272, 0
  %275 = icmp slt i33 %274, 0
  %276 = or i1 %273, %275
  br i1 %276, label %277, label %278, !prof !3

277:                                              ; preds = %268
  call void @llvm.trap() #7
  unreachable

278:                                              ; preds = %268
  %279 = trunc i33 %274 to i32
  store i32 %279, i32* %269, align 4
  br label %280

280:                                              ; preds = %263, %278
  %281 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %2, i64 0, i32 14
  br label %288

282:                                              ; preds = %255
  %283 = bitcast %"class.v8::Value"* %256 to %"class.v8::String"*
  %284 = load i32, i32* %184, align 8
  %285 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %283, i32 %284) #7
  %286 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %2, i64 0, i32 14
  %287 = icmp eq %"class.WTF::StringImpl"* %285, null
  br i1 %287, label %307, label %288

288:                                              ; preds = %280, %282
  %289 = phi %"class.WTF::String"* [ %281, %280 ], [ %286, %282 ]
  %290 = phi %"class.WTF::StringImpl"* [ %259, %280 ], [ %285, %282 ]
  %291 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %290, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %292 = load atomic i32, i32* %291 monotonic, align 4
  %293 = and i32 %292, 2
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %295, label %307

295:                                              ; preds = %288
  %296 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %290, i64 0, i32 0
  %297 = load i32, i32* %296, align 4
  %298 = zext i32 %297 to i33
  %299 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %298, i33 1) #7
  %300 = extractvalue { i33, i1 } %299, 1
  %301 = extractvalue { i33, i1 } %299, 0
  %302 = icmp slt i33 %301, 0
  %303 = or i1 %300, %302
  br i1 %303, label %304, label %305, !prof !3

304:                                              ; preds = %295
  call void @llvm.trap() #7
  unreachable

305:                                              ; preds = %295
  %306 = trunc i33 %301 to i32
  store i32 %306, i32* %296, align 4
  br label %307

307:                                              ; preds = %261, %305, %288, %282
  %308 = phi i1 [ false, %305 ], [ false, %288 ], [ true, %282 ], [ true, %261 ]
  %309 = phi %"class.WTF::String"* [ %289, %305 ], [ %289, %288 ], [ %286, %282 ], [ %262, %261 ]
  %310 = phi %"class.WTF::StringImpl"* [ %290, %305 ], [ %290, %288 ], [ null, %282 ], [ null, %261 ]
  %311 = ptrtoint %"class.WTF::StringImpl"* %310 to i64
  %312 = bitcast %"class.WTF::String"* %309 to i64*
  %313 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %309, i64 0, i32 0, i32 0
  %314 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %313, align 8
  store i64 %311, i64* %312, align 8
  %315 = icmp eq %"class.WTF::StringImpl"* %314, null
  br i1 %315, label %329, label %316

316:                                              ; preds = %307
  %317 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %314, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %318 = load atomic i32, i32* %317 monotonic, align 4
  %319 = and i32 %318, 2
  %320 = icmp eq i32 %319, 0
  %321 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %314, i64 0, i32 0
  %322 = load i32, i32* %321, align 4
  br i1 %320, label %323, label %325

323:                                              ; preds = %316
  %324 = add i32 %322, -1
  store i32 %324, i32* %321, align 4
  br label %325

325:                                              ; preds = %323, %316
  %326 = phi i32 [ %324, %323 ], [ %322, %316 ]
  %327 = icmp eq i32 %326, 0
  br i1 %327, label %328, label %329

328:                                              ; preds = %325
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %314) #7
  br label %329

329:                                              ; preds = %307, %325, %328
  br i1 %308, label %343, label %330

330:                                              ; preds = %329
  %331 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %310, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %332 = load atomic i32, i32* %331 monotonic, align 4
  %333 = and i32 %332, 2
  %334 = icmp eq i32 %333, 0
  %335 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %310, i64 0, i32 0
  %336 = load i32, i32* %335, align 4
  br i1 %334, label %337, label %339

337:                                              ; preds = %330
  %338 = add i32 %336, -1
  store i32 %338, i32* %335, align 4
  br label %339

339:                                              ; preds = %337, %330
  %340 = phi i32 [ %338, %337 ], [ %336, %330 ]
  %341 = icmp eq i32 %340, 0
  br i1 %341, label %342, label %343

342:                                              ; preds = %339
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %310) #7
  br label %343

343:                                              ; preds = %329, %339, %342
  %344 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %345 = load i8*, i8** %344, align 8
  store i8* null, i8** %344, align 8
  %346 = icmp eq i8* %345, null
  br i1 %346, label %348, label %347

347:                                              ; preds = %343
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %345) #7
  br label %348

348:                                              ; preds = %347, %343
  %349 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %185, align 8
  %350 = icmp eq %"class.WTF::StringImpl"* %349, null
  br i1 %350, label %364, label %351

351:                                              ; preds = %348
  %352 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %349, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %353 = load atomic i32, i32* %352 monotonic, align 4
  %354 = and i32 %353, 2
  %355 = icmp eq i32 %354, 0
  %356 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %349, i64 0, i32 0
  %357 = load i32, i32* %356, align 4
  br i1 %355, label %358, label %360

358:                                              ; preds = %351
  %359 = add i32 %357, -1
  store i32 %359, i32* %356, align 4
  br label %360

360:                                              ; preds = %358, %351
  %361 = phi i32 [ %359, %358 ], [ %357, %351 ]
  %362 = icmp eq i32 %361, 0
  br i1 %362, label %363, label %364

363:                                              ; preds = %360
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %349) #7
  br label %364

364:                                              ; preds = %348, %360, %363
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %182) #7
  br label %387

365:                                              ; preds = %254, %181
  %366 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %367 = load i8*, i8** %366, align 8
  store i8* null, i8** %366, align 8
  %368 = icmp eq i8* %367, null
  br i1 %368, label %370, label %369

369:                                              ; preds = %365
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %367) #7
  br label %370

370:                                              ; preds = %369, %365
  %371 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %185, align 8
  %372 = icmp eq %"class.WTF::StringImpl"* %371, null
  br i1 %372, label %386, label %373

373:                                              ; preds = %370
  %374 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %371, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %375 = load atomic i32, i32* %374 monotonic, align 4
  %376 = and i32 %375, 2
  %377 = icmp eq i32 %376, 0
  %378 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %371, i64 0, i32 0
  %379 = load i32, i32* %378, align 4
  br i1 %377, label %380, label %382

380:                                              ; preds = %373
  %381 = add i32 %379, -1
  store i32 %381, i32* %378, align 4
  br label %382

382:                                              ; preds = %380, %373
  %383 = phi i32 [ %381, %380 ], [ %379, %373 ]
  %384 = icmp eq i32 %383, 0
  br i1 %384, label %385, label %386

385:                                              ; preds = %382
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %371) #7
  br label %386

386:                                              ; preds = %370, %382, %385
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %182) #7
  br label %1256

387:                                              ; preds = %364, %175
  %388 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %46, i64 3, i32 0
  %389 = bitcast %"class.v8::Name"** %388 to %"class.v8::Value"**
  %390 = load %"class.v8::Value"*, %"class.v8::Value"** %389, align 8
  %391 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %40, %"class.v8::Context"* %48, %"class.v8::Value"* %390) #7
  %392 = icmp eq %"class.v8::Value"* %391, null
  br i1 %392, label %393, label %399

393:                                              ; preds = %387
  %394 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %395 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %396 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %395, align 8
  %397 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %396, i64 5
  %398 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %397, align 8
  call void %398(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %394) #7
  br label %1256

399:                                              ; preds = %387
  %400 = bitcast %"class.v8::Value"* %391 to i64*
  %401 = load i64, i64* %400, align 8
  %402 = and i64 %401, 3
  %403 = icmp eq i64 %402, 1
  br i1 %403, label %404, label %421

404:                                              ; preds = %399
  %405 = add i64 %401, -1
  %406 = inttoptr i64 %405 to i32*
  %407 = load i32, i32* %406, align 4
  %408 = and i64 %401, -4294967296
  %409 = zext i32 %407 to i64
  %410 = or i64 %408, %409
  %411 = add i64 %410, 7
  %412 = inttoptr i64 %411 to i16*
  %413 = load i16, i16* %412, align 2
  %414 = icmp eq i16 %413, 67
  br i1 %414, label %415, label %421

415:                                              ; preds = %404
  %416 = add i64 %401, 23
  %417 = inttoptr i64 %416 to i32*
  %418 = load i32, i32* %417, align 4
  %419 = and i32 %418, -2
  %420 = icmp eq i32 %419, 10
  br i1 %420, label %437, label %421

421:                                              ; preds = %404, %399, %415
  %422 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %391) #7
  br i1 %422, label %423, label %426, !prof !2

423:                                              ; preds = %421
  %424 = bitcast %"class.v8::Value"* %391 to %"class.v8::Boolean"*
  %425 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %424) #7
  br label %428

426:                                              ; preds = %421
  %427 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %391, %"class.v8::Isolate"* %0) #7
  br label %428

428:                                              ; preds = %423, %426
  %429 = phi i1 [ %425, %423 ], [ %427, %426 ]
  %430 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %431 = load i32, i32* %430, align 8
  %432 = icmp eq i32 %431, 0
  br i1 %432, label %433, label %1256

433:                                              ; preds = %428
  %434 = zext i1 %429 to i8
  %435 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %2, i64 0, i32 15
  store i8 %434, i8* %435, align 8
  %436 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %2, i64 0, i32 3
  store i8 1, i8* %436, align 2
  br label %437

437:                                              ; preds = %433, %415
  %438 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %46, i64 4, i32 0
  %439 = bitcast %"class.v8::Name"** %438 to %"class.v8::Value"**
  %440 = load %"class.v8::Value"*, %"class.v8::Value"** %439, align 8
  %441 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %40, %"class.v8::Context"* %48, %"class.v8::Value"* %440) #7
  %442 = icmp eq %"class.v8::Value"* %441, null
  br i1 %442, label %443, label %449

443:                                              ; preds = %437
  %444 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %445 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %446 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %445, align 8
  %447 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %446, i64 5
  %448 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %447, align 8
  call void %448(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %444) #7
  br label %1256

449:                                              ; preds = %437
  %450 = bitcast %"class.v8::Value"* %441 to i64*
  %451 = load i64, i64* %450, align 8
  %452 = and i64 %451, 3
  %453 = icmp eq i64 %452, 1
  br i1 %453, label %454, label %471

454:                                              ; preds = %449
  %455 = add i64 %451, -1
  %456 = inttoptr i64 %455 to i32*
  %457 = load i32, i32* %456, align 4
  %458 = and i64 %451, -4294967296
  %459 = zext i32 %457 to i64
  %460 = or i64 %458, %459
  %461 = add i64 %460, 7
  %462 = inttoptr i64 %461 to i16*
  %463 = load i16, i16* %462, align 2
  %464 = icmp eq i16 %463, 67
  br i1 %464, label %465, label %471

465:                                              ; preds = %454
  %466 = add i64 %451, 23
  %467 = inttoptr i64 %466 to i32*
  %468 = load i32, i32* %467, align 4
  %469 = and i32 %468, -2
  %470 = icmp eq i32 %469, 10
  br i1 %470, label %487, label %471

471:                                              ; preds = %454, %449, %465
  %472 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %441) #7
  br i1 %472, label %473, label %476, !prof !2

473:                                              ; preds = %471
  %474 = bitcast %"class.v8::Value"* %441 to %"class.v8::Boolean"*
  %475 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %474) #7
  br label %478

476:                                              ; preds = %471
  %477 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %441, %"class.v8::Isolate"* %0) #7
  br label %478

478:                                              ; preds = %473, %476
  %479 = phi i1 [ %475, %473 ], [ %477, %476 ]
  %480 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %481 = load i32, i32* %480, align 8
  %482 = icmp eq i32 %481, 0
  br i1 %482, label %483, label %1256

483:                                              ; preds = %478
  %484 = zext i1 %479 to i8
  %485 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %2, i64 0, i32 16
  store i8 %484, i8* %485, align 1
  %486 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %2, i64 0, i32 4
  store i8 1, i8* %486, align 1
  br label %487

487:                                              ; preds = %483, %465
  %488 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %46, i64 5, i32 0
  %489 = bitcast %"class.v8::Name"** %488 to %"class.v8::Value"**
  %490 = load %"class.v8::Value"*, %"class.v8::Value"** %489, align 8
  %491 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %40, %"class.v8::Context"* %48, %"class.v8::Value"* %490) #7
  %492 = icmp eq %"class.v8::Value"* %491, null
  br i1 %492, label %493, label %499

493:                                              ; preds = %487
  %494 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %495 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %496 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %495, align 8
  %497 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %496, i64 5
  %498 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %497, align 8
  call void %498(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %494) #7
  br label %1256

499:                                              ; preds = %487
  %500 = bitcast %"class.v8::Value"* %491 to i64*
  %501 = load i64, i64* %500, align 8
  %502 = and i64 %501, 3
  %503 = icmp eq i64 %502, 1
  br i1 %503, label %504, label %521

504:                                              ; preds = %499
  %505 = add i64 %501, -1
  %506 = inttoptr i64 %505 to i32*
  %507 = load i32, i32* %506, align 4
  %508 = and i64 %501, -4294967296
  %509 = zext i32 %507 to i64
  %510 = or i64 %508, %509
  %511 = add i64 %510, 7
  %512 = inttoptr i64 %511 to i16*
  %513 = load i16, i16* %512, align 2
  %514 = icmp eq i16 %513, 67
  br i1 %514, label %515, label %521

515:                                              ; preds = %504
  %516 = add i64 %501, 23
  %517 = inttoptr i64 %516 to i32*
  %518 = load i32, i32* %517, align 4
  %519 = and i32 %518, -2
  %520 = icmp eq i32 %519, 10
  br i1 %520, label %537, label %521

521:                                              ; preds = %504, %499, %515
  %522 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %491) #7
  br i1 %522, label %523, label %526, !prof !2

523:                                              ; preds = %521
  %524 = bitcast %"class.v8::Value"* %491 to %"class.v8::Boolean"*
  %525 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %524) #7
  br label %528

526:                                              ; preds = %521
  %527 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %491, %"class.v8::Isolate"* %0) #7
  br label %528

528:                                              ; preds = %523, %526
  %529 = phi i1 [ %525, %523 ], [ %527, %526 ]
  %530 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %531 = load i32, i32* %530, align 8
  %532 = icmp eq i32 %531, 0
  br i1 %532, label %533, label %1256

533:                                              ; preds = %528
  %534 = zext i1 %529 to i8
  %535 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %2, i64 0, i32 17
  store i8 %534, i8* %535, align 2
  %536 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %2, i64 0, i32 5
  store i8 1, i8* %536, align 4
  br label %537

537:                                              ; preds = %533, %515
  %538 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %46, i64 7, i32 0
  %539 = bitcast %"class.v8::Name"** %538 to %"class.v8::Value"**
  %540 = load %"class.v8::Value"*, %"class.v8::Value"** %539, align 8
  %541 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %40, %"class.v8::Context"* %48, %"class.v8::Value"* %540) #7
  %542 = icmp eq %"class.v8::Value"* %541, null
  br i1 %542, label %543, label %549

543:                                              ; preds = %537
  %544 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %545 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %546 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %545, align 8
  %547 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %546, i64 5
  %548 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %547, align 8
  call void %548(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %544) #7
  br label %1256

549:                                              ; preds = %537
  %550 = bitcast %"class.v8::Value"* %541 to i64*
  %551 = load i64, i64* %550, align 8
  %552 = and i64 %551, 3
  %553 = icmp eq i64 %552, 1
  br i1 %553, label %554, label %571

554:                                              ; preds = %549
  %555 = add i64 %551, -1
  %556 = inttoptr i64 %555 to i32*
  %557 = load i32, i32* %556, align 4
  %558 = and i64 %551, -4294967296
  %559 = zext i32 %557 to i64
  %560 = or i64 %558, %559
  %561 = add i64 %560, 7
  %562 = inttoptr i64 %561 to i16*
  %563 = load i16, i16* %562, align 2
  %564 = icmp eq i16 %563, 67
  br i1 %564, label %565, label %571

565:                                              ; preds = %554
  %566 = add i64 %551, 23
  %567 = inttoptr i64 %566 to i32*
  %568 = load i32, i32* %567, align 4
  %569 = and i32 %568, -2
  %570 = icmp eq i32 %569, 10
  br i1 %570, label %777, label %571

571:                                              ; preds = %554, %549, %565
  %572 = bitcast %"class.blink::V8StringResource"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %572) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %572, i8 -86, i64 152, i1 false)
  %573 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %541, %"class.v8::Value"** %573, align 8
  %574 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 1
  store i32 0, i32* %574, align 8
  %575 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %575, align 8
  %576 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 3, i32 1
  %577 = bitcast %"class.std::__1::unique_ptr"* %576 to i64*
  store i64 0, i64* %577, align 8
  %578 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %9, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %578, label %579, label %755

579:                                              ; preds = %571
  %580 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %580) #7
  %581 = load %"class.v8::Value"*, %"class.v8::Value"** %573, align 8
  %582 = icmp eq %"class.v8::Value"* %581, null
  br i1 %582, label %587, label %583, !prof !3

583:                                              ; preds = %579
  %584 = bitcast %"class.v8::Value"* %581 to %"class.v8::String"*
  %585 = load i32, i32* %574, align 8
  %586 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %584, i32 %585) #7
  br label %607

587:                                              ; preds = %579
  %588 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %575, align 8
  %589 = icmp eq %"class.WTF::StringImpl"* %588, null
  br i1 %589, label %607, label %590

590:                                              ; preds = %587
  %591 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %588, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %592 = load atomic i32, i32* %591 monotonic, align 4
  %593 = and i32 %592, 2
  %594 = icmp eq i32 %593, 0
  br i1 %594, label %595, label %607

595:                                              ; preds = %590
  %596 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %588, i64 0, i32 0
  %597 = load i32, i32* %596, align 4
  %598 = zext i32 %597 to i33
  %599 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %598, i33 1) #7
  %600 = extractvalue { i33, i1 } %599, 1
  %601 = extractvalue { i33, i1 } %599, 0
  %602 = icmp slt i33 %601, 0
  %603 = or i1 %600, %602
  br i1 %603, label %604, label %605, !prof !3

604:                                              ; preds = %595
  call void @llvm.trap() #7
  unreachable

605:                                              ; preds = %595
  %606 = trunc i33 %601 to i32
  store i32 %606, i32* %596, align 4
  br label %607

607:                                              ; preds = %583, %587, %590, %605
  %608 = phi %"class.WTF::StringImpl"* [ %586, %583 ], [ null, %587 ], [ %588, %590 ], [ %588, %605 ]
  %609 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %608, %"class.WTF::StringImpl"** %609, align 8
  %610 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %610) #7
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %11, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7, i64 0, i64 0), i64 21) #7
  %611 = call zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* nonnull dereferenceable(8) %10, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @_ZZN5blink39V8CanvasContextCreationAttributesModule6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_37CanvasContextCreationAttributesModuleERNS_14ExceptionStateEE12kValidValues_0, i64 0, i64 0), i64 3, %"class.WTF::String"* nonnull dereferenceable(8) %11, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %612 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %613 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %612, align 8
  %614 = icmp eq %"class.WTF::StringImpl"* %613, null
  br i1 %614, label %628, label %615

615:                                              ; preds = %607
  %616 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %613, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %617 = load atomic i32, i32* %616 monotonic, align 4
  %618 = and i32 %617, 2
  %619 = icmp eq i32 %618, 0
  %620 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %613, i64 0, i32 0
  %621 = load i32, i32* %620, align 4
  br i1 %619, label %622, label %624

622:                                              ; preds = %615
  %623 = add i32 %621, -1
  store i32 %623, i32* %620, align 4
  br label %624

624:                                              ; preds = %622, %615
  %625 = phi i32 [ %623, %622 ], [ %621, %615 ]
  %626 = icmp eq i32 %625, 0
  br i1 %626, label %627, label %628

627:                                              ; preds = %624
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %613) #7
  br label %628

628:                                              ; preds = %607, %624, %627
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %610) #7
  %629 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %609, align 8
  %630 = icmp eq %"class.WTF::StringImpl"* %629, null
  br i1 %630, label %644, label %631

631:                                              ; preds = %628
  %632 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %629, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %633 = load atomic i32, i32* %632 monotonic, align 4
  %634 = and i32 %633, 2
  %635 = icmp eq i32 %634, 0
  %636 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %629, i64 0, i32 0
  %637 = load i32, i32* %636, align 4
  br i1 %635, label %638, label %640

638:                                              ; preds = %631
  %639 = add i32 %637, -1
  store i32 %639, i32* %636, align 4
  br label %640

640:                                              ; preds = %638, %631
  %641 = phi i32 [ %639, %638 ], [ %637, %631 ]
  %642 = icmp eq i32 %641, 0
  br i1 %642, label %643, label %644

643:                                              ; preds = %640
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %629) #7
  br label %644

644:                                              ; preds = %628, %640, %643
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %580) #7
  br i1 %611, label %645, label %755

645:                                              ; preds = %644
  %646 = load %"class.v8::Value"*, %"class.v8::Value"** %573, align 8
  %647 = icmp eq %"class.v8::Value"* %646, null
  br i1 %647, label %648, label %672, !prof !3

648:                                              ; preds = %645
  %649 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %575, align 8
  %650 = icmp eq %"class.WTF::StringImpl"* %649, null
  br i1 %650, label %651, label %653

651:                                              ; preds = %648
  %652 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %2, i64 0, i32 20
  br label %697

653:                                              ; preds = %648
  %654 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %649, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %655 = load atomic i32, i32* %654 monotonic, align 4
  %656 = and i32 %655, 2
  %657 = icmp eq i32 %656, 0
  br i1 %657, label %658, label %670

658:                                              ; preds = %653
  %659 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %649, i64 0, i32 0
  %660 = load i32, i32* %659, align 4
  %661 = zext i32 %660 to i33
  %662 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %661, i33 1) #7
  %663 = extractvalue { i33, i1 } %662, 1
  %664 = extractvalue { i33, i1 } %662, 0
  %665 = icmp slt i33 %664, 0
  %666 = or i1 %663, %665
  br i1 %666, label %667, label %668, !prof !3

667:                                              ; preds = %658
  call void @llvm.trap() #7
  unreachable

668:                                              ; preds = %658
  %669 = trunc i33 %664 to i32
  store i32 %669, i32* %659, align 4
  br label %670

670:                                              ; preds = %653, %668
  %671 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %2, i64 0, i32 20
  br label %678

672:                                              ; preds = %645
  %673 = bitcast %"class.v8::Value"* %646 to %"class.v8::String"*
  %674 = load i32, i32* %574, align 8
  %675 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %673, i32 %674) #7
  %676 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %2, i64 0, i32 20
  %677 = icmp eq %"class.WTF::StringImpl"* %675, null
  br i1 %677, label %697, label %678

678:                                              ; preds = %670, %672
  %679 = phi %"class.WTF::String"* [ %671, %670 ], [ %676, %672 ]
  %680 = phi %"class.WTF::StringImpl"* [ %649, %670 ], [ %675, %672 ]
  %681 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %680, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %682 = load atomic i32, i32* %681 monotonic, align 4
  %683 = and i32 %682, 2
  %684 = icmp eq i32 %683, 0
  br i1 %684, label %685, label %697

685:                                              ; preds = %678
  %686 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %680, i64 0, i32 0
  %687 = load i32, i32* %686, align 4
  %688 = zext i32 %687 to i33
  %689 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %688, i33 1) #7
  %690 = extractvalue { i33, i1 } %689, 1
  %691 = extractvalue { i33, i1 } %689, 0
  %692 = icmp slt i33 %691, 0
  %693 = or i1 %690, %692
  br i1 %693, label %694, label %695, !prof !3

694:                                              ; preds = %685
  call void @llvm.trap() #7
  unreachable

695:                                              ; preds = %685
  %696 = trunc i33 %691 to i32
  store i32 %696, i32* %686, align 4
  br label %697

697:                                              ; preds = %651, %695, %678, %672
  %698 = phi i1 [ false, %695 ], [ false, %678 ], [ true, %672 ], [ true, %651 ]
  %699 = phi %"class.WTF::String"* [ %679, %695 ], [ %679, %678 ], [ %676, %672 ], [ %652, %651 ]
  %700 = phi %"class.WTF::StringImpl"* [ %680, %695 ], [ %680, %678 ], [ null, %672 ], [ null, %651 ]
  %701 = ptrtoint %"class.WTF::StringImpl"* %700 to i64
  %702 = bitcast %"class.WTF::String"* %699 to i64*
  %703 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %699, i64 0, i32 0, i32 0
  %704 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %703, align 8
  store i64 %701, i64* %702, align 8
  %705 = icmp eq %"class.WTF::StringImpl"* %704, null
  br i1 %705, label %719, label %706

706:                                              ; preds = %697
  %707 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %704, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %708 = load atomic i32, i32* %707 monotonic, align 4
  %709 = and i32 %708, 2
  %710 = icmp eq i32 %709, 0
  %711 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %704, i64 0, i32 0
  %712 = load i32, i32* %711, align 4
  br i1 %710, label %713, label %715

713:                                              ; preds = %706
  %714 = add i32 %712, -1
  store i32 %714, i32* %711, align 4
  br label %715

715:                                              ; preds = %713, %706
  %716 = phi i32 [ %714, %713 ], [ %712, %706 ]
  %717 = icmp eq i32 %716, 0
  br i1 %717, label %718, label %719

718:                                              ; preds = %715
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %704) #7
  br label %719

719:                                              ; preds = %697, %715, %718
  br i1 %698, label %733, label %720

720:                                              ; preds = %719
  %721 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %700, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %722 = load atomic i32, i32* %721 monotonic, align 4
  %723 = and i32 %722, 2
  %724 = icmp eq i32 %723, 0
  %725 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %700, i64 0, i32 0
  %726 = load i32, i32* %725, align 4
  br i1 %724, label %727, label %729

727:                                              ; preds = %720
  %728 = add i32 %726, -1
  store i32 %728, i32* %725, align 4
  br label %729

729:                                              ; preds = %727, %720
  %730 = phi i32 [ %728, %727 ], [ %726, %720 ]
  %731 = icmp eq i32 %730, 0
  br i1 %731, label %732, label %733

732:                                              ; preds = %729
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %700) #7
  br label %733

733:                                              ; preds = %719, %729, %732
  %734 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %735 = load i8*, i8** %734, align 8
  store i8* null, i8** %734, align 8
  %736 = icmp eq i8* %735, null
  br i1 %736, label %738, label %737

737:                                              ; preds = %733
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %735) #7
  br label %738

738:                                              ; preds = %737, %733
  %739 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %575, align 8
  %740 = icmp eq %"class.WTF::StringImpl"* %739, null
  br i1 %740, label %754, label %741

741:                                              ; preds = %738
  %742 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %739, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %743 = load atomic i32, i32* %742 monotonic, align 4
  %744 = and i32 %743, 2
  %745 = icmp eq i32 %744, 0
  %746 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %739, i64 0, i32 0
  %747 = load i32, i32* %746, align 4
  br i1 %745, label %748, label %750

748:                                              ; preds = %741
  %749 = add i32 %747, -1
  store i32 %749, i32* %746, align 4
  br label %750

750:                                              ; preds = %748, %741
  %751 = phi i32 [ %749, %748 ], [ %747, %741 ]
  %752 = icmp eq i32 %751, 0
  br i1 %752, label %753, label %754

753:                                              ; preds = %750
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %739) #7
  br label %754

754:                                              ; preds = %738, %750, %753
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %572) #7
  br label %777

755:                                              ; preds = %644, %571
  %756 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %757 = load i8*, i8** %756, align 8
  store i8* null, i8** %756, align 8
  %758 = icmp eq i8* %757, null
  br i1 %758, label %760, label %759

759:                                              ; preds = %755
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %757) #7
  br label %760

760:                                              ; preds = %759, %755
  %761 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %575, align 8
  %762 = icmp eq %"class.WTF::StringImpl"* %761, null
  br i1 %762, label %776, label %763

763:                                              ; preds = %760
  %764 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %761, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %765 = load atomic i32, i32* %764 monotonic, align 4
  %766 = and i32 %765, 2
  %767 = icmp eq i32 %766, 0
  %768 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %761, i64 0, i32 0
  %769 = load i32, i32* %768, align 4
  br i1 %767, label %770, label %772

770:                                              ; preds = %763
  %771 = add i32 %769, -1
  store i32 %771, i32* %768, align 4
  br label %772

772:                                              ; preds = %770, %763
  %773 = phi i32 [ %771, %770 ], [ %769, %763 ]
  %774 = icmp eq i32 %773, 0
  br i1 %774, label %775, label %776

775:                                              ; preds = %772
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %761) #7
  br label %776

776:                                              ; preds = %760, %772, %775
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %572) #7
  br label %1256

777:                                              ; preds = %754, %565
  %778 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %46, i64 8, i32 0
  %779 = bitcast %"class.v8::Name"** %778 to %"class.v8::Value"**
  %780 = load %"class.v8::Value"*, %"class.v8::Value"** %779, align 8
  %781 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %40, %"class.v8::Context"* %48, %"class.v8::Value"* %780) #7
  %782 = icmp eq %"class.v8::Value"* %781, null
  br i1 %782, label %783, label %789

783:                                              ; preds = %777
  %784 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %785 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %786 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %785, align 8
  %787 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %786, i64 5
  %788 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %787, align 8
  call void %788(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %784) #7
  br label %1256

789:                                              ; preds = %777
  %790 = bitcast %"class.v8::Value"* %781 to i64*
  %791 = load i64, i64* %790, align 8
  %792 = and i64 %791, 3
  %793 = icmp eq i64 %792, 1
  br i1 %793, label %794, label %811

794:                                              ; preds = %789
  %795 = add i64 %791, -1
  %796 = inttoptr i64 %795 to i32*
  %797 = load i32, i32* %796, align 4
  %798 = and i64 %791, -4294967296
  %799 = zext i32 %797 to i64
  %800 = or i64 %798, %799
  %801 = add i64 %800, 7
  %802 = inttoptr i64 %801 to i16*
  %803 = load i16, i16* %802, align 2
  %804 = icmp eq i16 %803, 67
  br i1 %804, label %805, label %811

805:                                              ; preds = %794
  %806 = add i64 %791, 23
  %807 = inttoptr i64 %806 to i32*
  %808 = load i32, i32* %807, align 4
  %809 = and i32 %808, -2
  %810 = icmp eq i32 %809, 10
  br i1 %810, label %827, label %811

811:                                              ; preds = %794, %789, %805
  %812 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %781) #7
  br i1 %812, label %813, label %816, !prof !2

813:                                              ; preds = %811
  %814 = bitcast %"class.v8::Value"* %781 to %"class.v8::Boolean"*
  %815 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %814) #7
  br label %818

816:                                              ; preds = %811
  %817 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %781, %"class.v8::Isolate"* %0) #7
  br label %818

818:                                              ; preds = %813, %816
  %819 = phi i1 [ %815, %813 ], [ %817, %816 ]
  %820 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %821 = load i32, i32* %820, align 8
  %822 = icmp eq i32 %821, 0
  br i1 %822, label %823, label %1256

823:                                              ; preds = %818
  %824 = zext i1 %819 to i8
  %825 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %2, i64 0, i32 21
  store i8 %824, i8* %825, align 8
  %826 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %2, i64 0, i32 6
  store i8 1, i8* %826, align 1
  br label %827

827:                                              ; preds = %823, %805
  %828 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %46, i64 9, i32 0
  %829 = bitcast %"class.v8::Name"** %828 to %"class.v8::Value"**
  %830 = load %"class.v8::Value"*, %"class.v8::Value"** %829, align 8
  %831 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %40, %"class.v8::Context"* %48, %"class.v8::Value"* %830) #7
  %832 = icmp eq %"class.v8::Value"* %831, null
  br i1 %832, label %833, label %839

833:                                              ; preds = %827
  %834 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %835 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %836 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %835, align 8
  %837 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %836, i64 5
  %838 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %837, align 8
  call void %838(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %834) #7
  br label %1256

839:                                              ; preds = %827
  %840 = bitcast %"class.v8::Value"* %831 to i64*
  %841 = load i64, i64* %840, align 8
  %842 = and i64 %841, 3
  %843 = icmp eq i64 %842, 1
  br i1 %843, label %844, label %861

844:                                              ; preds = %839
  %845 = add i64 %841, -1
  %846 = inttoptr i64 %845 to i32*
  %847 = load i32, i32* %846, align 4
  %848 = and i64 %841, -4294967296
  %849 = zext i32 %847 to i64
  %850 = or i64 %848, %849
  %851 = add i64 %850, 7
  %852 = inttoptr i64 %851 to i16*
  %853 = load i16, i16* %852, align 2
  %854 = icmp eq i16 %853, 67
  br i1 %854, label %855, label %861

855:                                              ; preds = %844
  %856 = add i64 %841, 23
  %857 = inttoptr i64 %856 to i32*
  %858 = load i32, i32* %857, align 4
  %859 = and i32 %858, -2
  %860 = icmp eq i32 %859, 10
  br i1 %860, label %877, label %861

861:                                              ; preds = %844, %839, %855
  %862 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %831) #7
  br i1 %862, label %863, label %866, !prof !2

863:                                              ; preds = %861
  %864 = bitcast %"class.v8::Value"* %831 to %"class.v8::Boolean"*
  %865 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %864) #7
  br label %868

866:                                              ; preds = %861
  %867 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %831, %"class.v8::Isolate"* %0) #7
  br label %868

868:                                              ; preds = %863, %866
  %869 = phi i1 [ %865, %863 ], [ %867, %866 ]
  %870 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %871 = load i32, i32* %870, align 8
  %872 = icmp eq i32 %871, 0
  br i1 %872, label %873, label %1256

873:                                              ; preds = %868
  %874 = zext i1 %869 to i8
  %875 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %2, i64 0, i32 22
  store i8 %874, i8* %875, align 1
  %876 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %2, i64 0, i32 7
  store i8 1, i8* %876, align 2
  br label %877

877:                                              ; preds = %873, %855
  %878 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %46, i64 10, i32 0
  %879 = bitcast %"class.v8::Name"** %878 to %"class.v8::Value"**
  %880 = load %"class.v8::Value"*, %"class.v8::Value"** %879, align 8
  %881 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %40, %"class.v8::Context"* %48, %"class.v8::Value"* %880) #7
  %882 = icmp eq %"class.v8::Value"* %881, null
  br i1 %882, label %883, label %889

883:                                              ; preds = %877
  %884 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %885 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %886 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %885, align 8
  %887 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %886, i64 5
  %888 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %887, align 8
  call void %888(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %884) #7
  br label %1256

889:                                              ; preds = %877
  %890 = bitcast %"class.v8::Value"* %881 to i64*
  %891 = load i64, i64* %890, align 8
  %892 = and i64 %891, 3
  %893 = icmp eq i64 %892, 1
  br i1 %893, label %894, label %911

894:                                              ; preds = %889
  %895 = add i64 %891, -1
  %896 = inttoptr i64 %895 to i32*
  %897 = load i32, i32* %896, align 4
  %898 = and i64 %891, -4294967296
  %899 = zext i32 %897 to i64
  %900 = or i64 %898, %899
  %901 = add i64 %900, 7
  %902 = inttoptr i64 %901 to i16*
  %903 = load i16, i16* %902, align 2
  %904 = icmp eq i16 %903, 67
  br i1 %904, label %905, label %911

905:                                              ; preds = %894
  %906 = add i64 %891, 23
  %907 = inttoptr i64 %906 to i32*
  %908 = load i32, i32* %907, align 4
  %909 = and i32 %908, -2
  %910 = icmp eq i32 %909, 10
  br i1 %910, label %927, label %911

911:                                              ; preds = %894, %889, %905
  %912 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %881) #7
  br i1 %912, label %913, label %916, !prof !2

913:                                              ; preds = %911
  %914 = bitcast %"class.v8::Value"* %881 to %"class.v8::Boolean"*
  %915 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %914) #7
  br label %918

916:                                              ; preds = %911
  %917 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %881, %"class.v8::Isolate"* %0) #7
  br label %918

918:                                              ; preds = %913, %916
  %919 = phi i1 [ %915, %913 ], [ %917, %916 ]
  %920 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %921 = load i32, i32* %920, align 8
  %922 = icmp eq i32 %921, 0
  br i1 %922, label %923, label %1256

923:                                              ; preds = %918
  %924 = zext i1 %919 to i8
  %925 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %2, i64 0, i32 23
  store i8 %924, i8* %925, align 2
  %926 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %2, i64 0, i32 8
  store i8 1, i8* %926, align 1
  br label %927

927:                                              ; preds = %923, %905
  %928 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase35is_canvas_color_management_enabled_E, align 1, !range !4
  %929 = icmp eq i8 %928, 0
  br i1 %929, label %1150, label %930

930:                                              ; preds = %927
  %931 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %46, i64 6, i32 0
  %932 = bitcast %"class.v8::Name"** %931 to %"class.v8::Value"**
  %933 = load %"class.v8::Value"*, %"class.v8::Value"** %932, align 8
  %934 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %40, %"class.v8::Context"* %48, %"class.v8::Value"* %933) #7
  %935 = icmp eq %"class.v8::Value"* %934, null
  br i1 %935, label %936, label %942

936:                                              ; preds = %930
  %937 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %938 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %939 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %938, align 8
  %940 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %939, i64 5
  %941 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %940, align 8
  call void %941(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %937) #7
  br label %1256

942:                                              ; preds = %930
  %943 = bitcast %"class.v8::Value"* %934 to i64*
  %944 = load i64, i64* %943, align 8
  %945 = and i64 %944, 3
  %946 = icmp eq i64 %945, 1
  br i1 %946, label %947, label %964

947:                                              ; preds = %942
  %948 = add i64 %944, -1
  %949 = inttoptr i64 %948 to i32*
  %950 = load i32, i32* %949, align 4
  %951 = and i64 %944, -4294967296
  %952 = zext i32 %950 to i64
  %953 = or i64 %951, %952
  %954 = add i64 %953, 7
  %955 = inttoptr i64 %954 to i16*
  %956 = load i16, i16* %955, align 2
  %957 = icmp eq i16 %956, 67
  br i1 %957, label %958, label %964

958:                                              ; preds = %947
  %959 = add i64 %944, 23
  %960 = inttoptr i64 %959 to i32*
  %961 = load i32, i32* %960, align 4
  %962 = and i32 %961, -2
  %963 = icmp eq i32 %962, 10
  br i1 %963, label %1150, label %964

964:                                              ; preds = %947, %942, %958
  %965 = bitcast %"class.blink::V8StringResource"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %965) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %965, i8 -86, i64 152, i1 false)
  %966 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %12, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %934, %"class.v8::Value"** %966, align 8
  %967 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %12, i64 0, i32 1
  store i32 0, i32* %967, align 8
  %968 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %12, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %968, align 8
  %969 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %12, i64 0, i32 3, i32 1
  %970 = bitcast %"class.std::__1::unique_ptr"* %969 to i64*
  store i64 0, i64* %970, align 8
  %971 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %12, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %971, label %972, label %1126

972:                                              ; preds = %964
  %973 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %973) #7
  %974 = load %"class.v8::Value"*, %"class.v8::Value"** %966, align 8
  %975 = icmp eq %"class.v8::Value"* %974, null
  br i1 %975, label %980, label %976, !prof !3

976:                                              ; preds = %972
  %977 = bitcast %"class.v8::Value"* %974 to %"class.v8::String"*
  %978 = load i32, i32* %967, align 8
  %979 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %977, i32 %978) #7
  br label %1000

980:                                              ; preds = %972
  %981 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %968, align 8
  %982 = icmp eq %"class.WTF::StringImpl"* %981, null
  br i1 %982, label %1000, label %983

983:                                              ; preds = %980
  %984 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %981, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %985 = load atomic i32, i32* %984 monotonic, align 4
  %986 = and i32 %985, 2
  %987 = icmp eq i32 %986, 0
  br i1 %987, label %988, label %1000

988:                                              ; preds = %983
  %989 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %981, i64 0, i32 0
  %990 = load i32, i32* %989, align 4
  %991 = zext i32 %990 to i33
  %992 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %991, i33 1) #7
  %993 = extractvalue { i33, i1 } %992, 1
  %994 = extractvalue { i33, i1 } %992, 0
  %995 = icmp slt i33 %994, 0
  %996 = or i1 %993, %995
  br i1 %996, label %997, label %998, !prof !3

997:                                              ; preds = %988
  call void @llvm.trap() #7
  unreachable

998:                                              ; preds = %988
  %999 = trunc i33 %994 to i32
  store i32 %999, i32* %989, align 4
  br label %1000

1000:                                             ; preds = %976, %980, %983, %998
  %1001 = phi %"class.WTF::StringImpl"* [ %979, %976 ], [ null, %980 ], [ %981, %983 ], [ %981, %998 ]
  %1002 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1001, %"class.WTF::StringImpl"** %1002, align 8
  %1003 = bitcast %"class.WTF::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1003) #7
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %14, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i64 17) #7
  %1004 = call zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* nonnull dereferenceable(8) %13, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @_ZZN5blink39V8CanvasContextCreationAttributesModule6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_37CanvasContextCreationAttributesModuleERNS_14ExceptionStateEE12kValidValues_1, i64 0, i64 0), i64 2, %"class.WTF::String"* nonnull dereferenceable(8) %14, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %1005 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  %1006 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1005, align 8
  %1007 = icmp eq %"class.WTF::StringImpl"* %1006, null
  br i1 %1007, label %1021, label %1008

1008:                                             ; preds = %1000
  %1009 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1006, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1010 = load atomic i32, i32* %1009 monotonic, align 4
  %1011 = and i32 %1010, 2
  %1012 = icmp eq i32 %1011, 0
  %1013 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1006, i64 0, i32 0
  %1014 = load i32, i32* %1013, align 4
  br i1 %1012, label %1015, label %1017

1015:                                             ; preds = %1008
  %1016 = add i32 %1014, -1
  store i32 %1016, i32* %1013, align 4
  br label %1017

1017:                                             ; preds = %1015, %1008
  %1018 = phi i32 [ %1016, %1015 ], [ %1014, %1008 ]
  %1019 = icmp eq i32 %1018, 0
  br i1 %1019, label %1020, label %1021

1020:                                             ; preds = %1017
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1006) #7
  br label %1021

1021:                                             ; preds = %1000, %1017, %1020
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1003) #7
  %1022 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1002, align 8
  %1023 = icmp eq %"class.WTF::StringImpl"* %1022, null
  br i1 %1023, label %1037, label %1024

1024:                                             ; preds = %1021
  %1025 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1022, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1026 = load atomic i32, i32* %1025 monotonic, align 4
  %1027 = and i32 %1026, 2
  %1028 = icmp eq i32 %1027, 0
  %1029 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1022, i64 0, i32 0
  %1030 = load i32, i32* %1029, align 4
  br i1 %1028, label %1031, label %1033

1031:                                             ; preds = %1024
  %1032 = add i32 %1030, -1
  store i32 %1032, i32* %1029, align 4
  br label %1033

1033:                                             ; preds = %1031, %1024
  %1034 = phi i32 [ %1032, %1031 ], [ %1030, %1024 ]
  %1035 = icmp eq i32 %1034, 0
  br i1 %1035, label %1036, label %1037

1036:                                             ; preds = %1033
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1022) #7
  br label %1037

1037:                                             ; preds = %1021, %1033, %1036
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %973) #7
  br i1 %1004, label %1038, label %1126

1038:                                             ; preds = %1037
  %1039 = load %"class.v8::Value"*, %"class.v8::Value"** %966, align 8
  %1040 = icmp eq %"class.v8::Value"* %1039, null
  br i1 %1040, label %1041, label %1065, !prof !3

1041:                                             ; preds = %1038
  %1042 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %968, align 8
  %1043 = icmp eq %"class.WTF::StringImpl"* %1042, null
  br i1 %1043, label %1044, label %1046

1044:                                             ; preds = %1041
  %1045 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %2, i64 0, i32 19
  br label %1090

1046:                                             ; preds = %1041
  %1047 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1042, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1048 = load atomic i32, i32* %1047 monotonic, align 4
  %1049 = and i32 %1048, 2
  %1050 = icmp eq i32 %1049, 0
  br i1 %1050, label %1051, label %1063

1051:                                             ; preds = %1046
  %1052 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1042, i64 0, i32 0
  %1053 = load i32, i32* %1052, align 4
  %1054 = zext i32 %1053 to i33
  %1055 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1054, i33 1) #7
  %1056 = extractvalue { i33, i1 } %1055, 1
  %1057 = extractvalue { i33, i1 } %1055, 0
  %1058 = icmp slt i33 %1057, 0
  %1059 = or i1 %1056, %1058
  br i1 %1059, label %1060, label %1061, !prof !3

1060:                                             ; preds = %1051
  call void @llvm.trap() #7
  unreachable

1061:                                             ; preds = %1051
  %1062 = trunc i33 %1057 to i32
  store i32 %1062, i32* %1052, align 4
  br label %1063

1063:                                             ; preds = %1046, %1061
  %1064 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %2, i64 0, i32 19
  br label %1071

1065:                                             ; preds = %1038
  %1066 = bitcast %"class.v8::Value"* %1039 to %"class.v8::String"*
  %1067 = load i32, i32* %967, align 8
  %1068 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %1066, i32 %1067) #7
  %1069 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %2, i64 0, i32 19
  %1070 = icmp eq %"class.WTF::StringImpl"* %1068, null
  br i1 %1070, label %1090, label %1071

1071:                                             ; preds = %1063, %1065
  %1072 = phi %"class.WTF::String"* [ %1064, %1063 ], [ %1069, %1065 ]
  %1073 = phi %"class.WTF::StringImpl"* [ %1042, %1063 ], [ %1068, %1065 ]
  %1074 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1073, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1075 = load atomic i32, i32* %1074 monotonic, align 4
  %1076 = and i32 %1075, 2
  %1077 = icmp eq i32 %1076, 0
  br i1 %1077, label %1078, label %1090

1078:                                             ; preds = %1071
  %1079 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1073, i64 0, i32 0
  %1080 = load i32, i32* %1079, align 4
  %1081 = zext i32 %1080 to i33
  %1082 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1081, i33 1) #7
  %1083 = extractvalue { i33, i1 } %1082, 1
  %1084 = extractvalue { i33, i1 } %1082, 0
  %1085 = icmp slt i33 %1084, 0
  %1086 = or i1 %1083, %1085
  br i1 %1086, label %1087, label %1088, !prof !3

1087:                                             ; preds = %1078
  call void @llvm.trap() #7
  unreachable

1088:                                             ; preds = %1078
  %1089 = trunc i33 %1084 to i32
  store i32 %1089, i32* %1079, align 4
  br label %1090

1090:                                             ; preds = %1044, %1088, %1071, %1065
  %1091 = phi i1 [ false, %1088 ], [ false, %1071 ], [ true, %1065 ], [ true, %1044 ]
  %1092 = phi %"class.WTF::String"* [ %1072, %1088 ], [ %1072, %1071 ], [ %1069, %1065 ], [ %1045, %1044 ]
  %1093 = phi %"class.WTF::StringImpl"* [ %1073, %1088 ], [ %1073, %1071 ], [ null, %1065 ], [ null, %1044 ]
  %1094 = ptrtoint %"class.WTF::StringImpl"* %1093 to i64
  %1095 = bitcast %"class.WTF::String"* %1092 to i64*
  %1096 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1092, i64 0, i32 0, i32 0
  %1097 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1096, align 8
  store i64 %1094, i64* %1095, align 8
  %1098 = icmp eq %"class.WTF::StringImpl"* %1097, null
  br i1 %1098, label %1112, label %1099

1099:                                             ; preds = %1090
  %1100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1097, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1101 = load atomic i32, i32* %1100 monotonic, align 4
  %1102 = and i32 %1101, 2
  %1103 = icmp eq i32 %1102, 0
  %1104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1097, i64 0, i32 0
  %1105 = load i32, i32* %1104, align 4
  br i1 %1103, label %1106, label %1108

1106:                                             ; preds = %1099
  %1107 = add i32 %1105, -1
  store i32 %1107, i32* %1104, align 4
  br label %1108

1108:                                             ; preds = %1106, %1099
  %1109 = phi i32 [ %1107, %1106 ], [ %1105, %1099 ]
  %1110 = icmp eq i32 %1109, 0
  br i1 %1110, label %1111, label %1112

1111:                                             ; preds = %1108
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1097) #7
  br label %1112

1112:                                             ; preds = %1090, %1108, %1111
  br i1 %1091, label %1126, label %1113

1113:                                             ; preds = %1112
  %1114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1093, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1115 = load atomic i32, i32* %1114 monotonic, align 4
  %1116 = and i32 %1115, 2
  %1117 = icmp eq i32 %1116, 0
  %1118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1093, i64 0, i32 0
  %1119 = load i32, i32* %1118, align 4
  br i1 %1117, label %1120, label %1122

1120:                                             ; preds = %1113
  %1121 = add i32 %1119, -1
  store i32 %1121, i32* %1118, align 4
  br label %1122

1122:                                             ; preds = %1120, %1113
  %1123 = phi i32 [ %1121, %1120 ], [ %1119, %1113 ]
  %1124 = icmp eq i32 %1123, 0
  br i1 %1124, label %1125, label %1126

1125:                                             ; preds = %1122
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1093) #7
  br label %1126

1126:                                             ; preds = %1125, %1122, %1112, %1037, %964
  %1127 = phi i32 [ 1, %964 ], [ 1, %1037 ], [ 0, %1112 ], [ 0, %1122 ], [ 0, %1125 ]
  %1128 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %12, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %1129 = load i8*, i8** %1128, align 8
  store i8* null, i8** %1128, align 8
  %1130 = icmp eq i8* %1129, null
  br i1 %1130, label %1132, label %1131

1131:                                             ; preds = %1126
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %1129) #7
  br label %1132

1132:                                             ; preds = %1131, %1126
  %1133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %968, align 8
  %1134 = icmp eq %"class.WTF::StringImpl"* %1133, null
  br i1 %1134, label %1148, label %1135

1135:                                             ; preds = %1132
  %1136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1137 = load atomic i32, i32* %1136 monotonic, align 4
  %1138 = and i32 %1137, 2
  %1139 = icmp eq i32 %1138, 0
  %1140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1133, i64 0, i32 0
  %1141 = load i32, i32* %1140, align 4
  br i1 %1139, label %1142, label %1144

1142:                                             ; preds = %1135
  %1143 = add i32 %1141, -1
  store i32 %1143, i32* %1140, align 4
  br label %1144

1144:                                             ; preds = %1142, %1135
  %1145 = phi i32 [ %1143, %1142 ], [ %1141, %1135 ]
  %1146 = icmp eq i32 %1145, 0
  br i1 %1146, label %1147, label %1148

1147:                                             ; preds = %1144
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1133) #7
  br label %1148

1148:                                             ; preds = %1132, %1144, %1147
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %965) #7
  %1149 = icmp eq i32 %1127, 0
  br i1 %1149, label %1150, label %1256

1150:                                             ; preds = %927, %1148, %958
  %1151 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase29is_new_canvas_2d_api_enabled_E, align 1, !range !4
  %1152 = icmp eq i8 %1151, 0
  br i1 %1152, label %1203, label %1153

1153:                                             ; preds = %1150
  %1154 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %46, i64 11, i32 0
  %1155 = bitcast %"class.v8::Name"** %1154 to %"class.v8::Value"**
  %1156 = load %"class.v8::Value"*, %"class.v8::Value"** %1155, align 8
  %1157 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %40, %"class.v8::Context"* %48, %"class.v8::Value"* %1156) #7
  %1158 = icmp eq %"class.v8::Value"* %1157, null
  br i1 %1158, label %1159, label %1165

1159:                                             ; preds = %1153
  %1160 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %1161 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1162 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1161, align 8
  %1163 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1162, i64 5
  %1164 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1163, align 8
  call void %1164(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1160) #7
  br label %1256

1165:                                             ; preds = %1153
  %1166 = bitcast %"class.v8::Value"* %1157 to i64*
  %1167 = load i64, i64* %1166, align 8
  %1168 = and i64 %1167, 3
  %1169 = icmp eq i64 %1168, 1
  br i1 %1169, label %1170, label %1187

1170:                                             ; preds = %1165
  %1171 = add i64 %1167, -1
  %1172 = inttoptr i64 %1171 to i32*
  %1173 = load i32, i32* %1172, align 4
  %1174 = and i64 %1167, -4294967296
  %1175 = zext i32 %1173 to i64
  %1176 = or i64 %1174, %1175
  %1177 = add i64 %1176, 7
  %1178 = inttoptr i64 %1177 to i16*
  %1179 = load i16, i16* %1178, align 2
  %1180 = icmp eq i16 %1179, 67
  br i1 %1180, label %1181, label %1187

1181:                                             ; preds = %1170
  %1182 = add i64 %1167, 23
  %1183 = inttoptr i64 %1182 to i32*
  %1184 = load i32, i32* %1183, align 4
  %1185 = and i32 %1184, -2
  %1186 = icmp eq i32 %1185, 10
  br i1 %1186, label %1203, label %1187

1187:                                             ; preds = %1170, %1165, %1181
  %1188 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %1157) #7
  br i1 %1188, label %1189, label %1192, !prof !2

1189:                                             ; preds = %1187
  %1190 = bitcast %"class.v8::Value"* %1157 to %"class.v8::Boolean"*
  %1191 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %1190) #7
  br label %1194

1192:                                             ; preds = %1187
  %1193 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %1157, %"class.v8::Isolate"* %0) #7
  br label %1194

1194:                                             ; preds = %1189, %1192
  %1195 = phi i1 [ %1191, %1189 ], [ %1193, %1192 ]
  %1196 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %1197 = load i32, i32* %1196, align 8
  %1198 = icmp eq i32 %1197, 0
  br i1 %1198, label %1199, label %1256

1199:                                             ; preds = %1194
  %1200 = zext i1 %1195 to i8
  %1201 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %2, i64 0, i32 24
  store i8 %1200, i8* %1201, align 1
  %1202 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %2, i64 0, i32 9
  store i8 1, i8* %1202, align 8
  br label %1203

1203:                                             ; preds = %1150, %1181, %1199
  %1204 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase18is_web_xr_enabled_E, align 1, !range !4
  %1205 = icmp eq i8 %1204, 0
  br i1 %1205, label %1256, label %1206

1206:                                             ; preds = %1203
  %1207 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %46, i64 12, i32 0
  %1208 = bitcast %"class.v8::Name"** %1207 to %"class.v8::Value"**
  %1209 = load %"class.v8::Value"*, %"class.v8::Value"** %1208, align 8
  %1210 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %40, %"class.v8::Context"* %48, %"class.v8::Value"* %1209) #7
  %1211 = icmp eq %"class.v8::Value"* %1210, null
  br i1 %1211, label %1212, label %1218

1212:                                             ; preds = %1206
  %1213 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %1214 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1215 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1214, align 8
  %1216 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1215, i64 5
  %1217 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1216, align 8
  call void %1217(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1213) #7
  br label %1256

1218:                                             ; preds = %1206
  %1219 = bitcast %"class.v8::Value"* %1210 to i64*
  %1220 = load i64, i64* %1219, align 8
  %1221 = and i64 %1220, 3
  %1222 = icmp eq i64 %1221, 1
  br i1 %1222, label %1223, label %1240

1223:                                             ; preds = %1218
  %1224 = add i64 %1220, -1
  %1225 = inttoptr i64 %1224 to i32*
  %1226 = load i32, i32* %1225, align 4
  %1227 = and i64 %1220, -4294967296
  %1228 = zext i32 %1226 to i64
  %1229 = or i64 %1227, %1228
  %1230 = add i64 %1229, 7
  %1231 = inttoptr i64 %1230 to i16*
  %1232 = load i16, i16* %1231, align 2
  %1233 = icmp eq i16 %1232, 67
  br i1 %1233, label %1234, label %1240

1234:                                             ; preds = %1223
  %1235 = add i64 %1220, 23
  %1236 = inttoptr i64 %1235 to i32*
  %1237 = load i32, i32* %1236, align 4
  %1238 = and i32 %1237, -2
  %1239 = icmp eq i32 %1238, 10
  br i1 %1239, label %1256, label %1240

1240:                                             ; preds = %1223, %1218, %1234
  %1241 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %1210) #7
  br i1 %1241, label %1242, label %1245, !prof !2

1242:                                             ; preds = %1240
  %1243 = bitcast %"class.v8::Value"* %1210 to %"class.v8::Boolean"*
  %1244 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %1243) #7
  br label %1247

1245:                                             ; preds = %1240
  %1246 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %1210, %"class.v8::Isolate"* %0) #7
  br label %1247

1247:                                             ; preds = %1242, %1245
  %1248 = phi i1 [ %1244, %1242 ], [ %1246, %1245 ]
  %1249 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %1250 = load i32, i32* %1249, align 8
  %1251 = icmp eq i32 %1250, 0
  br i1 %1251, label %1252, label %1256

1252:                                             ; preds = %1247
  %1253 = zext i1 %1248 to i8
  %1254 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %2, i64 0, i32 25
  store i8 %1253, i8* %1254, align 4
  %1255 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %2, i64 0, i32 10
  store i8 1, i8* %1255, align 1
  br label %1256

1256:                                             ; preds = %1194, %1247, %1203, %918, %868, %818, %528, %478, %428, %138, %88, %1148, %936, %103, %393, %493, %783, %883, %1159, %1252, %1234, %1212, %833, %776, %543, %443, %386, %153, %53
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %47) #7
  br label %1257

1257:                                             ; preds = %32, %32, %4, %37, %1256
  ret void
}

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #1

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Value"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.v8::TryCatch", align 8
  %4 = tail call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"* %0)
  br i1 %4, label %23, label %5

5:                                                ; preds = %2
  %6 = tail call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #7
  %7 = bitcast %"class.v8::TryCatch"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 48, i1 false) #7
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %3, %"class.v8::Isolate"* %6) #7
  %8 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 0, i32 0
  %9 = load %"class.v8::Value"*, %"class.v8::Value"** %8, align 8
  %10 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %6) #7
  %11 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %9, %"class.v8::Context"* %10) #7
  %12 = ptrtoint %"class.v8::String"* %11 to i64
  %13 = bitcast %"class.blink::V8StringResource"* %0 to i64*
  store i64 %12, i64* %13, align 8
  %14 = icmp eq %"class.v8::String"* %11, null
  br i1 %14, label %15, label %21

15:                                               ; preds = %5
  %16 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %3) #7
  %17 = bitcast %"class.blink::ExceptionState"* %1 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %18 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %18, i64 5
  %20 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %19, align 8
  call void %20(%"class.blink::ExceptionState"* %1, %"class.v8::Value"* %16) #7
  br label %21

21:                                               ; preds = %5, %15
  %22 = phi i1 [ false, %15 ], [ true, %5 ]
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #7
  br label %23

23:                                               ; preds = %21, %2
  %24 = phi i1 [ true, %2 ], [ %22, %21 ]
  ret i1 %24
}

declare zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* dereferenceable(8), i8**, i64, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Value"* @_ZNK5blink37CanvasContextCreationAttributesModule8ToV8ImplEN2v85LocalINS1_6ObjectEEEPNS1_7IsolateE(%"class.blink::CanvasContextCreationAttributesModule"*, %"class.v8::Object"* nocapture readnone, %"class.v8::Isolate"*) unnamed_addr #0 align 2 {
  %4 = tail call %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"* %2) #7
  %5 = tail call zeroext i1 @_ZN5blink41toV8CanvasContextCreationAttributesModuleEPKNS_37CanvasContextCreationAttributesModuleEN2v85LocalINS3_6ObjectEEES6_PNS3_7IsolateE(%"class.blink::CanvasContextCreationAttributesModule"* %0, %"class.v8::Object"* %4, %"class.v8::Object"* undef, %"class.v8::Isolate"* %2)
  %6 = bitcast %"class.v8::Object"* %4 to %"class.v8::Value"*
  %7 = ptrtoint %"class.v8::Isolate"* %2 to i64
  %8 = add i64 %7, 160
  %9 = inttoptr i64 %8 to %"class.v8::Value"*
  %10 = select i1 %5, %"class.v8::Value"* %6, %"class.v8::Value"* %9
  ret %"class.v8::Value"* %10
}

declare %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink41toV8CanvasContextCreationAttributesModuleEPKNS_37CanvasContextCreationAttributesModuleEN2v85LocalINS3_6ObjectEEES6_PNS3_7IsolateE(%"class.blink::CanvasContextCreationAttributesModule"* readonly, %"class.v8::Object"*, %"class.v8::Object"* nocapture readnone, %"class.v8::Isolate"*) local_unnamed_addr #0 {
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = ptrtoint %"class.v8::Isolate"* %3 to i64
  %9 = add i64 %8, 8
  %10 = inttoptr i64 %9 to %"class.blink::V8PerIsolateData"**
  %11 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %10, align 8
  %12 = tail call { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"* %11, i8* bitcast ([13 x i8*]* @_ZZN5blinkL50eternalV8CanvasContextCreationAttributesModuleKeysEPN2v87IsolateEE5kKeys to i8*), %"class.base::span.313"* dereferenceable(16) bitcast ({ i64, i8** }* @.ref.tmp to %"class.base::span.313"*)) #7
  %13 = extractvalue { i64, %"class.v8::Eternal"* } %12, 1
  %14 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %3) #7
  %15 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %0, i64 0, i32 1
  %16 = load i8, i8* %15, align 8, !range !4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %0, i64 0, i32 11
  %20 = load i8, i8* %19, align 2, !range !4
  %21 = icmp eq i8 %20, 0
  %22 = select i1 %21, i64 192, i64 184
  %23 = add i64 %22, %8
  br label %26

24:                                               ; preds = %4
  %25 = add i64 %8, 184
  br label %26

26:                                               ; preds = %18, %24
  %27 = phi i64 [ %23, %18 ], [ %25, %24 ]
  %28 = inttoptr i64 %27 to %"class.v8::Value"*
  %29 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %13, i64 0, i32 0
  %30 = load %"class.v8::Name"*, %"class.v8::Name"** %29, align 8
  %31 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %14, %"class.v8::Name"* %30, %"class.v8::Value"* %28) #7
  %32 = trunc i16 %31 to i8
  %33 = icmp ne i8 %32, 0
  %34 = icmp ugt i16 %31, 255
  %35 = and i1 %34, %33
  br i1 %35, label %36, label %328

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %0, i64 0, i32 2
  %38 = load i8, i8* %37, align 1, !range !4
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %46, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %0, i64 0, i32 12
  %42 = load i8, i8* %41, align 1, !range !4
  %43 = icmp eq i8 %42, 0
  %44 = select i1 %43, i64 192, i64 184
  %45 = add i64 %44, %8
  br label %48

46:                                               ; preds = %36
  %47 = add i64 %8, 184
  br label %48

48:                                               ; preds = %40, %46
  %49 = phi i64 [ %45, %40 ], [ %47, %46 ]
  %50 = inttoptr i64 %49 to %"class.v8::Value"*
  %51 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %13, i64 1, i32 0
  %52 = load %"class.v8::Name"*, %"class.v8::Name"** %51, align 8
  %53 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %14, %"class.v8::Name"* %52, %"class.v8::Value"* %50) #7
  %54 = trunc i16 %53 to i8
  %55 = icmp ne i8 %54, 0
  %56 = icmp ugt i16 %53, 255
  %57 = and i1 %56, %55
  br i1 %57, label %58, label %328

58:                                               ; preds = %48
  %59 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %0, i64 0, i32 14, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %72, label %62

62:                                               ; preds = %58
  %63 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #7
  %64 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %60, %"class.WTF::StringImpl"** %64, align 8
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 1
  %68 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %69 = bitcast i8** %68 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %67, %"class.WTF::StringImpl"** %69, align 8
  %70 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %66, i32* %70, align 8
  %71 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #7
  br label %76

72:                                               ; preds = %58
  %73 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %3, i8* nonnull getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i32 0, i32 4) #7
  %74 = icmp eq %"class.v8::String"* %73, null
  br i1 %74, label %75, label %76, !prof !3

75:                                               ; preds = %72
  tail call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %76

76:                                               ; preds = %75, %72, %62
  %77 = phi %"class.v8::String"* [ %71, %62 ], [ %73, %72 ], [ null, %75 ]
  %78 = bitcast %"class.v8::String"* %77 to %"class.v8::Value"*
  %79 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %13, i64 2, i32 0
  %80 = load %"class.v8::Name"*, %"class.v8::Name"** %79, align 8
  %81 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %14, %"class.v8::Name"* %80, %"class.v8::Value"* %78) #7
  %82 = trunc i16 %81 to i8
  %83 = icmp ne i8 %82, 0
  %84 = icmp ugt i16 %81, 255
  %85 = and i1 %84, %83
  br i1 %85, label %86, label %328

86:                                               ; preds = %76
  %87 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %0, i64 0, i32 3
  %88 = load i8, i8* %87, align 2, !range !4
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %96, label %90

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %0, i64 0, i32 15
  %92 = load i8, i8* %91, align 8, !range !4
  %93 = icmp eq i8 %92, 0
  %94 = select i1 %93, i64 192, i64 184
  %95 = add i64 %94, %8
  br label %98

96:                                               ; preds = %86
  %97 = add i64 %8, 184
  br label %98

98:                                               ; preds = %90, %96
  %99 = phi i64 [ %95, %90 ], [ %97, %96 ]
  %100 = inttoptr i64 %99 to %"class.v8::Value"*
  %101 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %13, i64 3, i32 0
  %102 = load %"class.v8::Name"*, %"class.v8::Name"** %101, align 8
  %103 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %14, %"class.v8::Name"* %102, %"class.v8::Value"* %100) #7
  %104 = trunc i16 %103 to i8
  %105 = icmp ne i8 %104, 0
  %106 = icmp ugt i16 %103, 255
  %107 = and i1 %106, %105
  br i1 %107, label %108, label %328

108:                                              ; preds = %98
  %109 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %0, i64 0, i32 4
  %110 = load i8, i8* %109, align 1, !range !4
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %118, label %112

112:                                              ; preds = %108
  %113 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %0, i64 0, i32 16
  %114 = load i8, i8* %113, align 1, !range !4
  %115 = icmp eq i8 %114, 0
  %116 = select i1 %115, i64 192, i64 184
  %117 = add i64 %116, %8
  br label %120

118:                                              ; preds = %108
  %119 = add i64 %8, 192
  br label %120

120:                                              ; preds = %112, %118
  %121 = phi i64 [ %117, %112 ], [ %119, %118 ]
  %122 = inttoptr i64 %121 to %"class.v8::Value"*
  %123 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %13, i64 4, i32 0
  %124 = load %"class.v8::Name"*, %"class.v8::Name"** %123, align 8
  %125 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %14, %"class.v8::Name"* %124, %"class.v8::Value"* %122) #7
  %126 = trunc i16 %125 to i8
  %127 = icmp ne i8 %126, 0
  %128 = icmp ugt i16 %125, 255
  %129 = and i1 %128, %127
  br i1 %129, label %130, label %328

130:                                              ; preds = %120
  %131 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %0, i64 0, i32 5
  %132 = load i8, i8* %131, align 4, !range !4
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %140, label %134

134:                                              ; preds = %130
  %135 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %0, i64 0, i32 17
  %136 = load i8, i8* %135, align 2, !range !4
  %137 = icmp eq i8 %136, 0
  %138 = select i1 %137, i64 192, i64 184
  %139 = add i64 %138, %8
  br label %142

140:                                              ; preds = %130
  %141 = add i64 %8, 192
  br label %142

142:                                              ; preds = %134, %140
  %143 = phi i64 [ %139, %134 ], [ %141, %140 ]
  %144 = inttoptr i64 %143 to %"class.v8::Value"*
  %145 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %13, i64 5, i32 0
  %146 = load %"class.v8::Name"*, %"class.v8::Name"** %145, align 8
  %147 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %14, %"class.v8::Name"* %146, %"class.v8::Value"* %144) #7
  %148 = trunc i16 %147 to i8
  %149 = icmp ne i8 %148, 0
  %150 = icmp ugt i16 %147, 255
  %151 = and i1 %150, %149
  br i1 %151, label %152, label %328

152:                                              ; preds = %142
  %153 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %0, i64 0, i32 20, i32 0, i32 0
  %154 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %153, align 8
  %155 = icmp eq %"class.WTF::StringImpl"* %154, null
  br i1 %155, label %166, label %156

156:                                              ; preds = %152
  %157 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %157) #7
  %158 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %154, %"class.WTF::StringImpl"** %158, align 8
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 1
  %160 = load i32, i32* %159, align 4
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 1
  %162 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %163 = bitcast i8** %162 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %161, %"class.WTF::StringImpl"** %163, align 8
  %164 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %160, i32* %164, align 8
  %165 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %157) #7
  br label %170

166:                                              ; preds = %152
  %167 = call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %3, i8* nonnull getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i64 0, i64 0), i32 0, i32 7) #7
  %168 = icmp eq %"class.v8::String"* %167, null
  br i1 %168, label %169, label %170, !prof !3

169:                                              ; preds = %166
  call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %170

170:                                              ; preds = %169, %166, %156
  %171 = phi %"class.v8::String"* [ %165, %156 ], [ %167, %166 ], [ null, %169 ]
  %172 = bitcast %"class.v8::String"* %171 to %"class.v8::Value"*
  %173 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %13, i64 7, i32 0
  %174 = load %"class.v8::Name"*, %"class.v8::Name"** %173, align 8
  %175 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %14, %"class.v8::Name"* %174, %"class.v8::Value"* %172) #7
  %176 = trunc i16 %175 to i8
  %177 = icmp ne i8 %176, 0
  %178 = icmp ugt i16 %175, 255
  %179 = and i1 %178, %177
  br i1 %179, label %180, label %328

180:                                              ; preds = %170
  %181 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %0, i64 0, i32 6
  %182 = load i8, i8* %181, align 1, !range !4
  %183 = icmp eq i8 %182, 0
  br i1 %183, label %190, label %184

184:                                              ; preds = %180
  %185 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %0, i64 0, i32 21
  %186 = load i8, i8* %185, align 8, !range !4
  %187 = icmp eq i8 %186, 0
  %188 = select i1 %187, i64 192, i64 184
  %189 = add i64 %188, %8
  br label %192

190:                                              ; preds = %180
  %191 = add i64 %8, 184
  br label %192

192:                                              ; preds = %184, %190
  %193 = phi i64 [ %189, %184 ], [ %191, %190 ]
  %194 = inttoptr i64 %193 to %"class.v8::Value"*
  %195 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %13, i64 8, i32 0
  %196 = load %"class.v8::Name"*, %"class.v8::Name"** %195, align 8
  %197 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %14, %"class.v8::Name"* %196, %"class.v8::Value"* %194) #7
  %198 = trunc i16 %197 to i8
  %199 = icmp ne i8 %198, 0
  %200 = icmp ugt i16 %197, 255
  %201 = and i1 %200, %199
  br i1 %201, label %202, label %328

202:                                              ; preds = %192
  %203 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %0, i64 0, i32 7
  %204 = load i8, i8* %203, align 2, !range !4
  %205 = icmp eq i8 %204, 0
  br i1 %205, label %212, label %206

206:                                              ; preds = %202
  %207 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %0, i64 0, i32 22
  %208 = load i8, i8* %207, align 1, !range !4
  %209 = icmp eq i8 %208, 0
  %210 = select i1 %209, i64 192, i64 184
  %211 = add i64 %210, %8
  br label %214

212:                                              ; preds = %202
  %213 = add i64 %8, 192
  br label %214

214:                                              ; preds = %206, %212
  %215 = phi i64 [ %211, %206 ], [ %213, %212 ]
  %216 = inttoptr i64 %215 to %"class.v8::Value"*
  %217 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %13, i64 9, i32 0
  %218 = load %"class.v8::Name"*, %"class.v8::Name"** %217, align 8
  %219 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %14, %"class.v8::Name"* %218, %"class.v8::Value"* %216) #7
  %220 = trunc i16 %219 to i8
  %221 = icmp ne i8 %220, 0
  %222 = icmp ugt i16 %219, 255
  %223 = and i1 %222, %221
  br i1 %223, label %224, label %328

224:                                              ; preds = %214
  %225 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %0, i64 0, i32 8
  %226 = load i8, i8* %225, align 1, !range !4
  %227 = icmp eq i8 %226, 0
  br i1 %227, label %234, label %228

228:                                              ; preds = %224
  %229 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %0, i64 0, i32 23
  %230 = load i8, i8* %229, align 2, !range !4
  %231 = icmp eq i8 %230, 0
  %232 = select i1 %231, i64 192, i64 184
  %233 = add i64 %232, %8
  br label %236

234:                                              ; preds = %224
  %235 = add i64 %8, 192
  br label %236

236:                                              ; preds = %228, %234
  %237 = phi i64 [ %233, %228 ], [ %235, %234 ]
  %238 = inttoptr i64 %237 to %"class.v8::Value"*
  %239 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %13, i64 10, i32 0
  %240 = load %"class.v8::Name"*, %"class.v8::Name"** %239, align 8
  %241 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %14, %"class.v8::Name"* %240, %"class.v8::Value"* %238) #7
  %242 = trunc i16 %241 to i8
  %243 = icmp ne i8 %242, 0
  %244 = icmp ugt i16 %241, 255
  %245 = and i1 %244, %243
  br i1 %245, label %246, label %328

246:                                              ; preds = %236
  %247 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase35is_canvas_color_management_enabled_E, align 1, !range !4
  %248 = icmp eq i8 %247, 0
  br i1 %248, label %277, label %249

249:                                              ; preds = %246
  %250 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %0, i64 0, i32 19, i32 0, i32 0
  %251 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %250, align 8
  %252 = icmp eq %"class.WTF::StringImpl"* %251, null
  br i1 %252, label %263, label %253

253:                                              ; preds = %249
  %254 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %254) #7
  %255 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %251, %"class.WTF::StringImpl"** %255, align 8
  %256 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %251, i64 0, i32 1
  %257 = load i32, i32* %256, align 4
  %258 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %251, i64 1
  %259 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %260 = bitcast i8** %259 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %258, %"class.WTF::StringImpl"** %260, align 8
  %261 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %257, i32* %261, align 8
  %262 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %254) #7
  br label %267

263:                                              ; preds = %249
  %264 = call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %3, i8* nonnull getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0), i32 0, i32 5) #7
  %265 = icmp eq %"class.v8::String"* %264, null
  br i1 %265, label %266, label %267, !prof !3

266:                                              ; preds = %263
  call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %267

267:                                              ; preds = %266, %263, %253
  %268 = phi %"class.v8::String"* [ %262, %253 ], [ %264, %263 ], [ null, %266 ]
  %269 = bitcast %"class.v8::String"* %268 to %"class.v8::Value"*
  %270 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %13, i64 6, i32 0
  %271 = load %"class.v8::Name"*, %"class.v8::Name"** %270, align 8
  %272 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %14, %"class.v8::Name"* %271, %"class.v8::Value"* %269) #7
  %273 = trunc i16 %272 to i8
  %274 = icmp ne i8 %273, 0
  %275 = icmp ugt i16 %272, 255
  %276 = and i1 %275, %274
  br i1 %276, label %277, label %328

277:                                              ; preds = %246, %267
  %278 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase29is_new_canvas_2d_api_enabled_E, align 1, !range !4
  %279 = icmp eq i8 %278, 0
  br i1 %279, label %302, label %280

280:                                              ; preds = %277
  %281 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %0, i64 0, i32 9
  %282 = load i8, i8* %281, align 8, !range !4
  %283 = icmp eq i8 %282, 0
  br i1 %283, label %290, label %284

284:                                              ; preds = %280
  %285 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %0, i64 0, i32 24
  %286 = load i8, i8* %285, align 1, !range !4
  %287 = icmp eq i8 %286, 0
  %288 = select i1 %287, i64 192, i64 184
  %289 = add i64 %288, %8
  br label %292

290:                                              ; preds = %280
  %291 = add i64 %8, 192
  br label %292

292:                                              ; preds = %284, %290
  %293 = phi i64 [ %289, %284 ], [ %291, %290 ]
  %294 = inttoptr i64 %293 to %"class.v8::Value"*
  %295 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %13, i64 11, i32 0
  %296 = load %"class.v8::Name"*, %"class.v8::Name"** %295, align 8
  %297 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %14, %"class.v8::Name"* %296, %"class.v8::Value"* %294) #7
  %298 = trunc i16 %297 to i8
  %299 = icmp ne i8 %298, 0
  %300 = icmp ugt i16 %297, 255
  %301 = and i1 %300, %299
  br i1 %301, label %302, label %328

302:                                              ; preds = %277, %292
  %303 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase18is_web_xr_enabled_E, align 1, !range !4
  %304 = icmp eq i8 %303, 0
  br i1 %304, label %327, label %305

305:                                              ; preds = %302
  %306 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %0, i64 0, i32 10
  %307 = load i8, i8* %306, align 1, !range !4
  %308 = icmp eq i8 %307, 0
  br i1 %308, label %315, label %309

309:                                              ; preds = %305
  %310 = getelementptr inbounds %"class.blink::CanvasContextCreationAttributesModule", %"class.blink::CanvasContextCreationAttributesModule"* %0, i64 0, i32 25
  %311 = load i8, i8* %310, align 4, !range !4
  %312 = icmp eq i8 %311, 0
  %313 = select i1 %312, i64 192, i64 184
  %314 = add i64 %313, %8
  br label %317

315:                                              ; preds = %305
  %316 = add i64 %8, 192
  br label %317

317:                                              ; preds = %309, %315
  %318 = phi i64 [ %314, %309 ], [ %316, %315 ]
  %319 = inttoptr i64 %318 to %"class.v8::Value"*
  %320 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %13, i64 12, i32 0
  %321 = load %"class.v8::Name"*, %"class.v8::Name"** %320, align 8
  %322 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %14, %"class.v8::Name"* %321, %"class.v8::Value"* %319) #7
  %323 = trunc i16 %322 to i8
  %324 = icmp ne i8 %323, 0
  %325 = icmp ugt i16 %322, 255
  %326 = and i1 %325, %324
  br i1 %326, label %327, label %328

327:                                              ; preds = %302, %317
  br label %328

328:                                              ; preds = %48, %98, %142, %192, %327, %317, %292, %267, %236, %214, %170, %120, %76, %26
  %329 = phi i1 [ false, %26 ], [ false, %48 ], [ false, %76 ], [ false, %98 ], [ false, %120 ], [ false, %142 ], [ false, %170 ], [ false, %192 ], [ false, %214 ], [ true, %327 ], [ false, %317 ], [ false, %292 ], [ false, %267 ], [ false, %236 ]
  ret i1 %329
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  %6 = bitcast i8* %4 to i16*
  br i1 %5, label %7, label %11

7:                                                ; preds = %2
  %8 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %9 = add i64 %8, 200
  %10 = inttoptr i64 %9 to %"class.v8::String"*
  br label %63

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 1
  %15 = bitcast %"class.WTF::StringImpl"* %14 to i8*
  %16 = icmp eq i8* %4, %15
  br i1 %16, label %17, label %48

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp ne i32 %19, %21
  %23 = icmp eq %"class.WTF::StringImpl"* %13, null
  %24 = or i1 %23, %22
  br i1 %24, label %48, label %25

25:                                               ; preds = %17
  %26 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %27 = add i64 %26, 8
  %28 = inttoptr i64 %27 to %"class.blink::V8PerIsolateData"**
  %29 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %29, i64 0, i32 5, i32 0, i32 0, i32 0
  %31 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 3, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, %13
  br i1 %34, label %35, label %46

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 1
  %37 = bitcast %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference"* %36 to %"class.v8::String"**
  %38 = load %"class.v8::String"*, %"class.v8::String"** %37, align 8
  %39 = icmp eq %"class.v8::String"* %38, null
  br i1 %39, label %63, label %40

40:                                               ; preds = %35
  %41 = bitcast %"class.v8::String"* %38 to i64*
  %42 = bitcast %"class.v8::Isolate"* %0 to %"class.v8::internal::Isolate"*
  %43 = load i64, i64* %41, align 8
  %44 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %42, i64 %43) #7
  %45 = bitcast i64* %44 to %"class.v8::String"*
  br label %63

46:                                               ; preds = %25
  %47 = tail call %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"* %31, %"class.v8::Isolate"* %0, %"class.WTF::StringImpl"* nonnull %13) #7
  br label %63

48:                                               ; preds = %17, %11
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %54 = load i32, i32* %53, align 8
  br i1 %52, label %59, label %55

55:                                               ; preds = %48
  %56 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i8* nonnull %4, i32 0, i32 %54) #7
  %57 = icmp eq %"class.v8::String"* %56, null
  br i1 %57, label %58, label %63, !prof !3

58:                                               ; preds = %55
  tail call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %63

59:                                               ; preds = %48
  %60 = tail call %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i16* nonnull %6, i32 0, i32 %54) #7
  %61 = icmp eq %"class.v8::String"* %60, null
  br i1 %61, label %62, label %63, !prof !3

62:                                               ; preds = %59
  tail call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %63

63:                                               ; preds = %46, %40, %35, %62, %59, %58, %55, %7
  %64 = phi %"class.v8::String"* [ %10, %7 ], [ %56, %55 ], [ null, %58 ], [ %60, %59 ], [ null, %62 ], [ null, %35 ], [ %45, %40 ], [ %47, %46 ]
  ret %"class.v8::String"* %64
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CanvasContextCreationAttributesModule"* @_ZN5blink17NativeValueTraitsINS_37CanvasContextCreationAttributesModuleEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 64) #7
  %5 = bitcast i8* %4 to %"class.blink::CanvasContextCreationAttributesModule"*
  tail call void @_ZN5blink37CanvasContextCreationAttributesModuleC1Ev(%"class.blink::CanvasContextCreationAttributesModule"* %5) #7
  %6 = getelementptr inbounds i8, i8* %4, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  tail call void @_ZN5blink39V8CanvasContextCreationAttributesModule6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_37CanvasContextCreationAttributesModuleERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %1, %"class.blink::CanvasContextCreationAttributesModule"* %5, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  ret %"class.blink::CanvasContextCreationAttributesModule"* %5
}

declare { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"*, i8*, %"class.base::span.313"* dereferenceable(16)) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"*, %"class.v8::Isolate"*) local_unnamed_addr #1

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZN3WTF10Partitions10BufferFreeEPv(i8*) local_unnamed_addr #1

declare i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Name"*, %"class.v8::Value"*) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"*, i16*, i32, i32) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"*, %"class.v8::Isolate"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #1

declare void @_ZN5blink37CanvasContextCreationAttributesModuleC1Ev(%"class.blink::CanvasContextCreationAttributesModule"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #7
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #7
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #7
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #7
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #7
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.24, i64 0, i64 0), i8* %40, i8* %41) #7
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.25, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #7
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #7
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #7
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !3

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #7
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDLDictionaryBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IDLDictionaryBase"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::IDLDictionaryBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::IDLDictionaryBase"*)***
  %4 = load void (%"class.blink::IDLDictionaryBase"*)**, void (%"class.blink::IDLDictionaryBase"*)*** %3, align 8
  %5 = load void (%"class.blink::IDLDictionaryBase"*)*, void (%"class.blink::IDLDictionaryBase"*)** %4, align 8
  tail call void %5(%"class.blink::IDLDictionaryBase"* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.26, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.v8::Value"*, %"class.v8::Value"** %2, align 8
  %4 = icmp eq %"class.v8::Value"* %3, null
  br i1 %4, label %82, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.v8::Value"* %3 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %21, !prof !5

10:                                               ; preds = %5
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 64
  br i1 %20, label %82, label %21, !prof !2

21:                                               ; preds = %5, %10
  %22 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %3) #7
  br i1 %22, label %23, label %80, !prof !2

23:                                               ; preds = %21
  %24 = bitcast %"class.blink::V8StringResource"* %0 to %"class.v8::Int32"**
  %25 = load %"class.v8::Int32"*, %"class.v8::Int32"** %24, align 8
  %26 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %25) #7
  %27 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %26) #7
  %28 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 2
  %29 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %29, label %47, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %47

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #7
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !3

44:                                               ; preds = %35
  tail call void @llvm.trap() #7
  unreachable

45:                                               ; preds = %35
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %36, align 4
  br label %47

47:                                               ; preds = %45, %30, %23
  %48 = ptrtoint %"class.WTF::StringImpl"* %27 to i64
  %49 = bitcast %"class.WTF::String"* %28 to i64*
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  store i64 %48, i64* %49, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %66, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %53
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %53
  %63 = phi i32 [ %61, %60 ], [ %59, %53 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %51) #7
  br label %66

66:                                               ; preds = %47, %62, %65
  store %"class.v8::Value"* null, %"class.v8::Value"** %2, align 8
  br i1 %29, label %82, label %67

67:                                               ; preds = %66
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %76
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #7
  br label %82

80:                                               ; preds = %21
  %81 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 1
  store i32 1, i32* %81, align 8
  br label %82

82:                                               ; preds = %79, %76, %66, %10, %1, %80
  %83 = phi i1 [ false, %80 ], [ true, %1 ], [ true, %10 ], [ true, %66 ], [ true, %76 ], [ true, %79 ]
  ret i1 %83
}

declare %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32) local_unnamed_addr #1

declare i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"*) local_unnamed_addr #1

declare %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = !{!"branch_weights", i32 2146410443, i32 1073205}
