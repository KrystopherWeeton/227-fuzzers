; ModuleID = '../../third_party/pdfium/third_party/libtiff/tif_color.c'
source_filename = "../../third_party/pdfium/third_party/libtiff/tif_color.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.TIFFCIELabToRGB = type { i32, float, float, float, float, float, float, %struct.TIFFDisplay, [1501 x float], [1501 x float], [1501 x float] }
%struct.TIFFDisplay = type { [3 x [3 x float]], float, float, float, i32, i32, i32, float, float, float, float, float, float }
%struct.TIFFYCbCrToRGB = type { i8*, i32*, i32*, i32*, i32*, i32* }

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @TIFFCIELabToXYZ(%struct.TIFFCIELabToRGB* nocapture readonly, i32, i32, i32, float* nocapture, float* nocapture, float* nocapture) local_unnamed_addr #0 {
  %8 = uitofp i32 %1 to float
  %9 = fmul float %8, 1.000000e+02
  %10 = fdiv float %9, 2.550000e+02
  %11 = fcmp olt float %10, 0x4021B645A0000000
  br i1 %11, label %12, label %21

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.TIFFCIELabToRGB, %struct.TIFFCIELabToRGB* %0, i64 0, i32 5
  %14 = load float, float* %13, align 4
  %15 = fmul float %10, %14
  %16 = fdiv float %15, 0x408C3A5600000000
  store float %16, float* %5, align 4
  %17 = load float, float* %13, align 4
  %18 = fdiv float %16, %17
  %19 = fmul float %18, 0x401F25E360000000
  %20 = fadd float %19, 0x3FC1A7B960000000
  br label %29

21:                                               ; preds = %7
  %22 = fadd float %10, 1.600000e+01
  %23 = fdiv float %22, 1.160000e+02
  %24 = getelementptr inbounds %struct.TIFFCIELabToRGB, %struct.TIFFCIELabToRGB* %0, i64 0, i32 5
  %25 = load float, float* %24, align 4
  %26 = fmul float %23, %25
  %27 = fmul float %23, %26
  %28 = fmul float %23, %27
  store float %28, float* %5, align 4
  br label %29

29:                                               ; preds = %21, %12
  %30 = phi float [ %20, %12 ], [ %23, %21 ]
  %31 = sitofp i32 %2 to float
  %32 = fdiv float %31, 5.000000e+02
  %33 = fadd float %32, %30
  %34 = fcmp olt float %33, 0x3FCA7BB300000000
  %35 = getelementptr inbounds %struct.TIFFCIELabToRGB, %struct.TIFFCIELabToRGB* %0, i64 0, i32 4
  %36 = load float, float* %35, align 4
  br i1 %34, label %37, label %41

37:                                               ; preds = %29
  %38 = fadd float %33, 0xBFC1A7B0C0000000
  %39 = fmul float %36, %38
  %40 = fdiv float %39, 0x401F25E360000000
  br label %45

41:                                               ; preds = %29
  %42 = fmul float %36, %33
  %43 = fmul float %33, %42
  %44 = fmul float %33, %43
  br label %45

45:                                               ; preds = %41, %37
  %46 = phi float [ %44, %41 ], [ %40, %37 ]
  store float %46, float* %4, align 4
  %47 = sitofp i32 %3 to float
  %48 = fdiv float %47, 2.000000e+02
  %49 = fsub float %30, %48
  %50 = fcmp olt float %49, 0x3FCA7BB300000000
  %51 = getelementptr inbounds %struct.TIFFCIELabToRGB, %struct.TIFFCIELabToRGB* %0, i64 0, i32 6
  %52 = load float, float* %51, align 4
  br i1 %50, label %53, label %57

53:                                               ; preds = %45
  %54 = fadd float %49, 0xBFC1A7B0C0000000
  %55 = fmul float %54, %52
  %56 = fdiv float %55, 0x401F25E360000000
  br label %61

57:                                               ; preds = %45
  %58 = fmul float %49, %52
  %59 = fmul float %49, %58
  %60 = fmul float %49, %59
  br label %61

61:                                               ; preds = %57, %53
  %62 = phi float [ %60, %57 ], [ %56, %53 ]
  store float %62, float* %6, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @TIFFXYZToRGB(%struct.TIFFCIELabToRGB* readonly, float, float, float, i32* nocapture, i32* nocapture, i32* nocapture) local_unnamed_addr #0 {
  %8 = getelementptr inbounds %struct.TIFFCIELabToRGB, %struct.TIFFCIELabToRGB* %0, i64 0, i32 7, i32 0, i64 0, i64 0
  %9 = load float, float* %8, align 4
  %10 = fmul float %9, %1
  %11 = getelementptr inbounds %struct.TIFFCIELabToRGB, %struct.TIFFCIELabToRGB* %0, i64 0, i32 7, i32 0, i64 0, i64 1
  %12 = bitcast float* %11 to <2 x float>*
  %13 = load <2 x float>, <2 x float>* %12, align 4
  %14 = insertelement <2 x float> undef, float %2, i32 0
  %15 = insertelement <2 x float> %14, float %3, i32 1
  %16 = fmul <2 x float> %13, %15
  %17 = extractelement <2 x float> %16, i32 0
  %18 = fadd float %10, %17
  %19 = extractelement <2 x float> %16, i32 1
  %20 = fadd float %18, %19
  %21 = getelementptr inbounds %struct.TIFFCIELabToRGB, %struct.TIFFCIELabToRGB* %0, i64 0, i32 7, i32 0, i64 0, i64 3
  %22 = load float, float* %21, align 4
  %23 = fmul float %22, %1
  %24 = getelementptr inbounds %struct.TIFFCIELabToRGB, %struct.TIFFCIELabToRGB* %0, i64 0, i32 7, i32 0, i64 0, i64 4
  %25 = bitcast float* %24 to <2 x float>*
  %26 = load <2 x float>, <2 x float>* %25, align 4
  %27 = fmul <2 x float> %26, %15
  %28 = extractelement <2 x float> %27, i32 0
  %29 = fadd float %23, %28
  %30 = extractelement <2 x float> %27, i32 1
  %31 = fadd float %29, %30
  %32 = getelementptr inbounds %struct.TIFFCIELabToRGB, %struct.TIFFCIELabToRGB* %0, i64 0, i32 7, i32 0, i64 0, i64 6
  %33 = load float, float* %32, align 4
  %34 = fmul float %33, %1
  %35 = getelementptr inbounds %struct.TIFFCIELabToRGB, %struct.TIFFCIELabToRGB* %0, i64 0, i32 7, i32 0, i64 0, i64 7
  %36 = bitcast float* %35 to <2 x float>*
  %37 = load <2 x float>, <2 x float>* %36, align 4
  %38 = fmul <2 x float> %37, %15
  %39 = extractelement <2 x float> %38, i32 0
  %40 = fadd float %34, %39
  %41 = extractelement <2 x float> %38, i32 1
  %42 = fadd float %40, %41
  %43 = getelementptr inbounds %struct.TIFFCIELabToRGB, %struct.TIFFCIELabToRGB* %0, i64 0, i32 7, i32 7
  %44 = load float, float* %43, align 4
  %45 = fcmp ogt float %20, %44
  %46 = select i1 %45, float %20, float %44
  %47 = getelementptr inbounds %struct.TIFFCIELabToRGB, %struct.TIFFCIELabToRGB* %0, i64 0, i32 7, i32 8
  %48 = load float, float* %47, align 4
  %49 = fcmp ogt float %31, %48
  %50 = select i1 %49, float %31, float %48
  %51 = getelementptr inbounds %struct.TIFFCIELabToRGB, %struct.TIFFCIELabToRGB* %0, i64 0, i32 7, i32 9
  %52 = load float, float* %51, align 4
  %53 = fcmp ogt float %42, %52
  %54 = select i1 %53, float %42, float %52
  %55 = getelementptr inbounds %struct.TIFFCIELabToRGB, %struct.TIFFCIELabToRGB* %0, i64 0, i32 7, i32 1
  %56 = load float, float* %55, align 4
  %57 = fcmp olt float %46, %56
  %58 = select i1 %57, float %46, float %56
  %59 = getelementptr inbounds %struct.TIFFCIELabToRGB, %struct.TIFFCIELabToRGB* %0, i64 0, i32 7, i32 2
  %60 = load float, float* %59, align 4
  %61 = fcmp olt float %50, %60
  %62 = select i1 %61, float %50, float %60
  %63 = getelementptr inbounds %struct.TIFFCIELabToRGB, %struct.TIFFCIELabToRGB* %0, i64 0, i32 7, i32 3
  %64 = load float, float* %63, align 4
  %65 = fcmp olt float %54, %64
  %66 = select i1 %65, float %54, float %64
  %67 = fsub float %58, %44
  %68 = getelementptr inbounds %struct.TIFFCIELabToRGB, %struct.TIFFCIELabToRGB* %0, i64 0, i32 1
  %69 = load float, float* %68, align 4
  %70 = fdiv float %67, %69
  %71 = fptosi float %70 to i32
  %72 = getelementptr inbounds %struct.TIFFCIELabToRGB, %struct.TIFFCIELabToRGB* %0, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = icmp slt i32 %73, %71
  %75 = select i1 %74, i32 %73, i32 %71
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds %struct.TIFFCIELabToRGB, %struct.TIFFCIELabToRGB* %0, i64 0, i32 8, i64 %76
  %78 = load float, float* %77, align 4
  %79 = fcmp ogt float %78, 0.000000e+00
  %80 = fpext float %78 to double
  %81 = select i1 %79, double 5.000000e-01, double -5.000000e-01
  %82 = fadd double %81, %80
  %83 = fptoui double %82 to i32
  store i32 %83, i32* %4, align 4
  %84 = load float, float* %47, align 4
  %85 = fsub float %62, %84
  %86 = getelementptr inbounds %struct.TIFFCIELabToRGB, %struct.TIFFCIELabToRGB* %0, i64 0, i32 2
  %87 = load float, float* %86, align 4
  %88 = fdiv float %85, %87
  %89 = fptosi float %88 to i32
  %90 = load i32, i32* %72, align 4
  %91 = icmp slt i32 %90, %89
  %92 = select i1 %91, i32 %90, i32 %89
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds %struct.TIFFCIELabToRGB, %struct.TIFFCIELabToRGB* %0, i64 0, i32 9, i64 %93
  %95 = load float, float* %94, align 4
  %96 = fcmp ogt float %95, 0.000000e+00
  %97 = fpext float %95 to double
  %98 = select i1 %96, double 5.000000e-01, double -5.000000e-01
  %99 = fadd double %98, %97
  %100 = fptoui double %99 to i32
  store i32 %100, i32* %5, align 4
  %101 = load float, float* %51, align 4
  %102 = fsub float %66, %101
  %103 = getelementptr inbounds %struct.TIFFCIELabToRGB, %struct.TIFFCIELabToRGB* %0, i64 0, i32 3
  %104 = load float, float* %103, align 4
  %105 = fdiv float %102, %104
  %106 = fptosi float %105 to i32
  %107 = load i32, i32* %72, align 4
  %108 = icmp slt i32 %107, %106
  %109 = select i1 %108, i32 %107, i32 %106
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds %struct.TIFFCIELabToRGB, %struct.TIFFCIELabToRGB* %0, i64 0, i32 10, i64 %110
  %112 = load float, float* %111, align 4
  %113 = fcmp ogt float %112, 0.000000e+00
  %114 = fpext float %112 to double
  %115 = select i1 %113, double 5.000000e-01, double -5.000000e-01
  %116 = fadd double %115, %114
  %117 = fptoui double %116 to i32
  store i32 %117, i32* %6, align 4
  %118 = load i32, i32* %4, align 4
  %119 = getelementptr inbounds %struct.TIFFCIELabToRGB, %struct.TIFFCIELabToRGB* %0, i64 0, i32 7, i32 4
  %120 = load i32, i32* %119, align 4
  %121 = icmp ult i32 %118, %120
  %122 = select i1 %121, i32 %118, i32 %120
  store i32 %122, i32* %4, align 4
  %123 = load i32, i32* %5, align 4
  %124 = getelementptr inbounds %struct.TIFFCIELabToRGB, %struct.TIFFCIELabToRGB* %0, i64 0, i32 7, i32 5
  %125 = load i32, i32* %124, align 4
  %126 = icmp ult i32 %123, %125
  %127 = select i1 %126, i32 %123, i32 %125
  store i32 %127, i32* %5, align 4
  %128 = load i32, i32* %6, align 4
  %129 = getelementptr inbounds %struct.TIFFCIELabToRGB, %struct.TIFFCIELabToRGB* %0, i64 0, i32 7, i32 6
  %130 = load i32, i32* %129, align 4
  %131 = icmp ult i32 %128, %130
  %132 = select i1 %131, i32 %128, i32 %130
  store i32 %132, i32* %6, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @TIFFCIELabToRGBInit(%struct.TIFFCIELabToRGB*, %struct.TIFFDisplay*, float* nocapture readonly) local_unnamed_addr #1 {
  %4 = getelementptr inbounds %struct.TIFFCIELabToRGB, %struct.TIFFCIELabToRGB* %0, i64 0, i32 0
  store i32 1500, i32* %4, align 4
  %5 = getelementptr inbounds %struct.TIFFCIELabToRGB, %struct.TIFFCIELabToRGB* %0, i64 0, i32 7
  %6 = bitcast %struct.TIFFDisplay* %5 to i8*
  %7 = bitcast %struct.TIFFDisplay* %1 to i8*
  tail call void @_TIFFmemcpy(i8* %6, i8* %7, i64 84) #4
  %8 = getelementptr inbounds %struct.TIFFCIELabToRGB, %struct.TIFFCIELabToRGB* %0, i64 0, i32 7, i32 10
  %9 = load float, float* %8, align 4
  %10 = fpext float %9 to double
  %11 = fdiv double 1.000000e+00, %10
  %12 = getelementptr inbounds %struct.TIFFCIELabToRGB, %struct.TIFFCIELabToRGB* %0, i64 0, i32 7, i32 1
  %13 = load float, float* %12, align 4
  %14 = getelementptr inbounds %struct.TIFFCIELabToRGB, %struct.TIFFCIELabToRGB* %0, i64 0, i32 7, i32 7
  %15 = load float, float* %14, align 4
  %16 = fsub float %13, %15
  %17 = load i32, i32* %4, align 4
  %18 = sitofp i32 %17 to float
  %19 = fdiv float %16, %18
  %20 = getelementptr inbounds %struct.TIFFCIELabToRGB, %struct.TIFFCIELabToRGB* %0, i64 0, i32 1
  store float %19, float* %20, align 4
  %21 = icmp slt i32 %17, 0
  br i1 %21, label %47, label %22

22:                                               ; preds = %3
  %23 = getelementptr inbounds %struct.TIFFCIELabToRGB, %struct.TIFFCIELabToRGB* %0, i64 0, i32 7, i32 4
  br label %24

24:                                               ; preds = %24, %22
  %25 = phi i64 [ %37, %24 ], [ 0, %22 ]
  %26 = phi i32 [ %38, %24 ], [ %17, %22 ]
  %27 = load i32, i32* %23, align 4
  %28 = uitofp i32 %27 to float
  %29 = trunc i64 %25 to i32
  %30 = sitofp i32 %29 to double
  %31 = sitofp i32 %26 to double
  %32 = fdiv double %30, %31
  %33 = tail call double @pow(double %32, double %11) #4
  %34 = fptrunc double %33 to float
  %35 = fmul float %28, %34
  %36 = getelementptr inbounds %struct.TIFFCIELabToRGB, %struct.TIFFCIELabToRGB* %0, i64 0, i32 8, i64 %25
  store float %35, float* %36, align 4
  %37 = add nuw nsw i64 %25, 1
  %38 = load i32, i32* %4, align 4
  %39 = sext i32 %38 to i64
  %40 = icmp slt i64 %25, %39
  br i1 %40, label %24, label %41

41:                                               ; preds = %24
  %42 = load float, float* %12, align 4
  %43 = load float, float* %14, align 4
  %44 = fsub float %42, %43
  %45 = sitofp i32 %38 to float
  %46 = fdiv float %44, %45
  br label %47

47:                                               ; preds = %41, %3
  %48 = phi float [ %46, %41 ], [ %19, %3 ]
  %49 = phi i32 [ %38, %41 ], [ %17, %3 ]
  %50 = getelementptr inbounds %struct.TIFFCIELabToRGB, %struct.TIFFCIELabToRGB* %0, i64 0, i32 7, i32 11
  %51 = load float, float* %50, align 4
  %52 = fpext float %51 to double
  %53 = fdiv double 1.000000e+00, %52
  %54 = getelementptr inbounds %struct.TIFFCIELabToRGB, %struct.TIFFCIELabToRGB* %0, i64 0, i32 2
  store float %48, float* %54, align 4
  %55 = icmp slt i32 %49, 0
  br i1 %55, label %81, label %56

56:                                               ; preds = %47
  %57 = getelementptr inbounds %struct.TIFFCIELabToRGB, %struct.TIFFCIELabToRGB* %0, i64 0, i32 7, i32 5
  br label %58

58:                                               ; preds = %58, %56
  %59 = phi i64 [ %71, %58 ], [ 0, %56 ]
  %60 = phi i32 [ %72, %58 ], [ %49, %56 ]
  %61 = load i32, i32* %57, align 4
  %62 = uitofp i32 %61 to float
  %63 = trunc i64 %59 to i32
  %64 = sitofp i32 %63 to double
  %65 = sitofp i32 %60 to double
  %66 = fdiv double %64, %65
  %67 = tail call double @pow(double %66, double %53) #4
  %68 = fptrunc double %67 to float
  %69 = fmul float %62, %68
  %70 = getelementptr inbounds %struct.TIFFCIELabToRGB, %struct.TIFFCIELabToRGB* %0, i64 0, i32 9, i64 %59
  store float %69, float* %70, align 4
  %71 = add nuw nsw i64 %59, 1
  %72 = load i32, i32* %4, align 4
  %73 = sext i32 %72 to i64
  %74 = icmp slt i64 %59, %73
  br i1 %74, label %58, label %75

75:                                               ; preds = %58
  %76 = load float, float* %12, align 4
  %77 = load float, float* %14, align 4
  %78 = fsub float %76, %77
  %79 = sitofp i32 %72 to float
  %80 = fdiv float %78, %79
  br label %81

81:                                               ; preds = %75, %47
  %82 = phi float [ %80, %75 ], [ %48, %47 ]
  %83 = phi i32 [ %72, %75 ], [ %49, %47 ]
  %84 = getelementptr inbounds %struct.TIFFCIELabToRGB, %struct.TIFFCIELabToRGB* %0, i64 0, i32 7, i32 12
  %85 = load float, float* %84, align 4
  %86 = fpext float %85 to double
  %87 = fdiv double 1.000000e+00, %86
  %88 = getelementptr inbounds %struct.TIFFCIELabToRGB, %struct.TIFFCIELabToRGB* %0, i64 0, i32 3
  store float %82, float* %88, align 4
  %89 = icmp slt i32 %83, 0
  br i1 %89, label %109, label %90

90:                                               ; preds = %81
  %91 = getelementptr inbounds %struct.TIFFCIELabToRGB, %struct.TIFFCIELabToRGB* %0, i64 0, i32 7, i32 6
  br label %92

92:                                               ; preds = %92, %90
  %93 = phi i64 [ %105, %92 ], [ 0, %90 ]
  %94 = phi i32 [ %106, %92 ], [ %83, %90 ]
  %95 = load i32, i32* %91, align 4
  %96 = uitofp i32 %95 to float
  %97 = trunc i64 %93 to i32
  %98 = sitofp i32 %97 to double
  %99 = sitofp i32 %94 to double
  %100 = fdiv double %98, %99
  %101 = tail call double @pow(double %100, double %87) #4
  %102 = fptrunc double %101 to float
  %103 = fmul float %96, %102
  %104 = getelementptr inbounds %struct.TIFFCIELabToRGB, %struct.TIFFCIELabToRGB* %0, i64 0, i32 10, i64 %93
  store float %103, float* %104, align 4
  %105 = add nuw nsw i64 %93, 1
  %106 = load i32, i32* %4, align 4
  %107 = sext i32 %106 to i64
  %108 = icmp slt i64 %93, %107
  br i1 %108, label %92, label %109

109:                                              ; preds = %92, %81
  %110 = bitcast float* %2 to i32*
  %111 = load i32, i32* %110, align 4
  %112 = getelementptr inbounds %struct.TIFFCIELabToRGB, %struct.TIFFCIELabToRGB* %0, i64 0, i32 4
  %113 = bitcast float* %112 to i32*
  store i32 %111, i32* %113, align 4
  %114 = getelementptr inbounds float, float* %2, i64 1
  %115 = bitcast float* %114 to i32*
  %116 = load i32, i32* %115, align 4
  %117 = getelementptr inbounds %struct.TIFFCIELabToRGB, %struct.TIFFCIELabToRGB* %0, i64 0, i32 5
  %118 = bitcast float* %117 to i32*
  store i32 %116, i32* %118, align 4
  %119 = getelementptr inbounds float, float* %2, i64 2
  %120 = bitcast float* %119 to i32*
  %121 = load i32, i32* %120, align 4
  %122 = getelementptr inbounds %struct.TIFFCIELabToRGB, %struct.TIFFCIELabToRGB* %0, i64 0, i32 6
  %123 = bitcast float* %122 to i32*
  store i32 %121, i32* %123, align 4
  ret i32 0
}

declare void @_TIFFmemcpy(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare double @pow(double, double) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* nocapture readonly, i32, i32, i32, i32* nocapture, i32* nocapture, i32* nocapture) local_unnamed_addr #0 {
  %8 = icmp ult i32 %1, 255
  %9 = select i1 %8, i32 %1, i32 255
  %10 = icmp slt i32 %2, 0
  br i1 %10, label %15, label %11

11:                                               ; preds = %7
  %12 = icmp slt i32 %2, 255
  %13 = select i1 %12, i32 %2, i32 255
  %14 = sext i32 %13 to i64
  br label %15

15:                                               ; preds = %11, %7
  %16 = phi i64 [ 0, %7 ], [ %14, %11 ]
  %17 = icmp slt i32 %3, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %15
  %19 = icmp slt i32 %3, 255
  %20 = select i1 %19, i32 %3, i32 255
  %21 = sext i32 %20 to i64
  br label %22

22:                                               ; preds = %18, %15
  %23 = phi i64 [ 0, %15 ], [ %21, %18 ]
  %24 = getelementptr inbounds %struct.TIFFYCbCrToRGB, %struct.TIFFYCbCrToRGB* %0, i64 0, i32 5
  %25 = load i32*, i32** %24, align 8
  %26 = zext i32 %9 to i64
  %27 = getelementptr inbounds i32, i32* %25, i64 %26
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %struct.TIFFYCbCrToRGB, %struct.TIFFYCbCrToRGB* %0, i64 0, i32 1
  %30 = load i32*, i32** %29, align 8
  %31 = getelementptr inbounds i32, i32* %30, i64 %23
  %32 = load i32, i32* %31, align 4
  %33 = add nsw i32 %32, %28
  %34 = icmp slt i32 %33, 255
  %35 = select i1 %34, i32 %33, i32 255
  %36 = icmp sgt i32 %35, 0
  %37 = select i1 %36, i32 %35, i32 0
  store i32 %37, i32* %4, align 4
  %38 = load i32*, i32** %24, align 8
  %39 = getelementptr inbounds i32, i32* %38, i64 %26
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %struct.TIFFYCbCrToRGB, %struct.TIFFYCbCrToRGB* %0, i64 0, i32 4
  %42 = load i32*, i32** %41, align 8
  %43 = getelementptr inbounds i32, i32* %42, i64 %16
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %struct.TIFFYCbCrToRGB, %struct.TIFFYCbCrToRGB* %0, i64 0, i32 3
  %46 = load i32*, i32** %45, align 8
  %47 = getelementptr inbounds i32, i32* %46, i64 %23
  %48 = load i32, i32* %47, align 4
  %49 = add nsw i32 %48, %44
  %50 = ashr i32 %49, 16
  %51 = add nsw i32 %50, %40
  %52 = icmp slt i32 %51, 255
  %53 = select i1 %52, i32 %51, i32 255
  %54 = icmp sgt i32 %53, 0
  %55 = select i1 %54, i32 %53, i32 0
  store i32 %55, i32* %5, align 4
  %56 = load i32*, i32** %24, align 8
  %57 = getelementptr inbounds i32, i32* %56, i64 %26
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %struct.TIFFYCbCrToRGB, %struct.TIFFYCbCrToRGB* %0, i64 0, i32 2
  %60 = load i32*, i32** %59, align 8
  %61 = getelementptr inbounds i32, i32* %60, i64 %16
  %62 = load i32, i32* %61, align 4
  %63 = add nsw i32 %62, %58
  %64 = icmp slt i32 %63, 255
  %65 = select i1 %64, i32 %63, i32 255
  %66 = icmp sgt i32 %65, 0
  %67 = select i1 %66, i32 %65, i32 0
  store i32 %67, i32* %6, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @TIFFYCbCrToRGBInit(%struct.TIFFYCbCrToRGB*, float* nocapture readonly, float* nocapture readonly) local_unnamed_addr #1 {
  %4 = getelementptr inbounds %struct.TIFFYCbCrToRGB, %struct.TIFFYCbCrToRGB* %0, i64 1
  %5 = bitcast %struct.TIFFYCbCrToRGB* %4 to i8*
  tail call void @_TIFFmemset(i8* %5, i32 0, i64 256) #4
  %6 = getelementptr inbounds %struct.TIFFYCbCrToRGB, %struct.TIFFYCbCrToRGB* %0, i64 6, i32 2
  %7 = bitcast %struct.TIFFYCbCrToRGB* %0 to i32***
  store i32** %6, i32*** %7, align 8
  %8 = bitcast i32** %6 to <16 x i8>*
  store <16 x i8> <i8 0, i8 1, i8 2, i8 3, i8 4, i8 5, i8 6, i8 7, i8 8, i8 9, i8 10, i8 11, i8 12, i8 13, i8 14, i8 15>, <16 x i8>* %8, align 1
  %9 = getelementptr inbounds i32*, i32** %6, i64 2
  %10 = bitcast i32** %9 to <16 x i8>*
  store <16 x i8> <i8 16, i8 17, i8 18, i8 19, i8 20, i8 21, i8 22, i8 23, i8 24, i8 25, i8 26, i8 27, i8 28, i8 29, i8 30, i8 31>, <16 x i8>* %10, align 1
  %11 = getelementptr inbounds i32*, i32** %6, i64 4
  %12 = bitcast i32** %11 to <16 x i8>*
  store <16 x i8> <i8 32, i8 33, i8 34, i8 35, i8 36, i8 37, i8 38, i8 39, i8 40, i8 41, i8 42, i8 43, i8 44, i8 45, i8 46, i8 47>, <16 x i8>* %12, align 1
  %13 = getelementptr inbounds i32*, i32** %6, i64 6
  %14 = bitcast i32** %13 to <16 x i8>*
  store <16 x i8> <i8 48, i8 49, i8 50, i8 51, i8 52, i8 53, i8 54, i8 55, i8 56, i8 57, i8 58, i8 59, i8 60, i8 61, i8 62, i8 63>, <16 x i8>* %14, align 1
  %15 = getelementptr inbounds i32*, i32** %6, i64 8
  %16 = bitcast i32** %15 to <16 x i8>*
  store <16 x i8> <i8 64, i8 65, i8 66, i8 67, i8 68, i8 69, i8 70, i8 71, i8 72, i8 73, i8 74, i8 75, i8 76, i8 77, i8 78, i8 79>, <16 x i8>* %16, align 1
  %17 = getelementptr inbounds i32*, i32** %6, i64 10
  %18 = bitcast i32** %17 to <16 x i8>*
  store <16 x i8> <i8 80, i8 81, i8 82, i8 83, i8 84, i8 85, i8 86, i8 87, i8 88, i8 89, i8 90, i8 91, i8 92, i8 93, i8 94, i8 95>, <16 x i8>* %18, align 1
  %19 = getelementptr inbounds i32*, i32** %6, i64 12
  %20 = bitcast i32** %19 to <16 x i8>*
  store <16 x i8> <i8 96, i8 97, i8 98, i8 99, i8 100, i8 101, i8 102, i8 103, i8 104, i8 105, i8 106, i8 107, i8 108, i8 109, i8 110, i8 111>, <16 x i8>* %20, align 1
  %21 = getelementptr inbounds i32*, i32** %6, i64 14
  %22 = bitcast i32** %21 to <16 x i8>*
  store <16 x i8> <i8 112, i8 113, i8 114, i8 115, i8 116, i8 117, i8 118, i8 119, i8 120, i8 121, i8 122, i8 123, i8 124, i8 125, i8 126, i8 127>, <16 x i8>* %22, align 1
  %23 = getelementptr inbounds i32*, i32** %6, i64 16
  %24 = bitcast i32** %23 to <16 x i8>*
  store <16 x i8> <i8 -128, i8 -127, i8 -126, i8 -125, i8 -124, i8 -123, i8 -122, i8 -121, i8 -120, i8 -119, i8 -118, i8 -117, i8 -116, i8 -115, i8 -114, i8 -113>, <16 x i8>* %24, align 1
  %25 = getelementptr inbounds i32*, i32** %6, i64 18
  %26 = bitcast i32** %25 to <16 x i8>*
  store <16 x i8> <i8 -112, i8 -111, i8 -110, i8 -109, i8 -108, i8 -107, i8 -106, i8 -105, i8 -104, i8 -103, i8 -102, i8 -101, i8 -100, i8 -99, i8 -98, i8 -97>, <16 x i8>* %26, align 1
  %27 = getelementptr inbounds i32*, i32** %6, i64 20
  %28 = bitcast i32** %27 to <16 x i8>*
  store <16 x i8> <i8 -96, i8 -95, i8 -94, i8 -93, i8 -92, i8 -91, i8 -90, i8 -89, i8 -88, i8 -87, i8 -86, i8 -85, i8 -84, i8 -83, i8 -82, i8 -81>, <16 x i8>* %28, align 1
  %29 = getelementptr inbounds i32*, i32** %6, i64 22
  %30 = bitcast i32** %29 to <16 x i8>*
  store <16 x i8> <i8 -80, i8 -79, i8 -78, i8 -77, i8 -76, i8 -75, i8 -74, i8 -73, i8 -72, i8 -71, i8 -70, i8 -69, i8 -68, i8 -67, i8 -66, i8 -65>, <16 x i8>* %30, align 1
  %31 = getelementptr inbounds i32*, i32** %6, i64 24
  %32 = bitcast i32** %31 to <16 x i8>*
  store <16 x i8> <i8 -64, i8 -63, i8 -62, i8 -61, i8 -60, i8 -59, i8 -58, i8 -57, i8 -56, i8 -55, i8 -54, i8 -53, i8 -52, i8 -51, i8 -50, i8 -49>, <16 x i8>* %32, align 1
  %33 = getelementptr inbounds i32*, i32** %6, i64 26
  %34 = bitcast i32** %33 to <16 x i8>*
  store <16 x i8> <i8 -48, i8 -47, i8 -46, i8 -45, i8 -44, i8 -43, i8 -42, i8 -41, i8 -40, i8 -39, i8 -38, i8 -37, i8 -36, i8 -35, i8 -34, i8 -33>, <16 x i8>* %34, align 1
  %35 = getelementptr inbounds i32*, i32** %6, i64 28
  %36 = bitcast i32** %35 to <16 x i8>*
  store <16 x i8> <i8 -32, i8 -31, i8 -30, i8 -29, i8 -28, i8 -27, i8 -26, i8 -25, i8 -24, i8 -23, i8 -22, i8 -21, i8 -20, i8 -19, i8 -18, i8 -17>, <16 x i8>* %36, align 1
  %37 = getelementptr inbounds i32*, i32** %6, i64 30
  %38 = bitcast i32** %37 to <16 x i8>*
  store <16 x i8> <i8 -16, i8 -15, i8 -14, i8 -13, i8 -12, i8 -11, i8 -10, i8 -9, i8 -8, i8 -7, i8 -6, i8 -5, i8 -4, i8 -3, i8 -2, i8 -1>, <16 x i8>* %38, align 1
  %39 = getelementptr inbounds i32*, i32** %6, i64 32
  %40 = bitcast i32** %39 to i8*
  tail call void @_TIFFmemset(i8* %40, i32 255, i64 512) #4
  %41 = getelementptr inbounds i32*, i32** %6, i64 96
  %42 = getelementptr inbounds %struct.TIFFYCbCrToRGB, %struct.TIFFYCbCrToRGB* %0, i64 0, i32 1
  %43 = bitcast i32** %42 to i32***
  store i32** %41, i32*** %43, align 8
  %44 = getelementptr inbounds %struct.TIFFYCbCrToRGB, %struct.TIFFYCbCrToRGB* %0, i64 0, i32 2
  %45 = insertelement <2 x i32**> undef, i32** %6, i32 0
  %46 = shufflevector <2 x i32**> %45, <2 x i32**> undef, <2 x i32> zeroinitializer
  %47 = getelementptr i32*, <2 x i32**> %46, <2 x i64> <i64 224, i64 352>
  %48 = getelementptr inbounds %struct.TIFFYCbCrToRGB, %struct.TIFFYCbCrToRGB* %0, i64 0, i32 3
  %49 = bitcast i32** %44 to <2 x i32**>*
  store <2 x i32**> %47, <2 x i32**>* %49, align 8
  %50 = getelementptr inbounds %struct.TIFFYCbCrToRGB, %struct.TIFFYCbCrToRGB* %0, i64 0, i32 4
  %51 = getelementptr i32*, <2 x i32**> %46, <2 x i64> <i64 480, i64 608>
  %52 = getelementptr inbounds %struct.TIFFYCbCrToRGB, %struct.TIFFYCbCrToRGB* %0, i64 0, i32 5
  %53 = bitcast i32** %50 to <2 x i32**>*
  store <2 x i32**> %51, <2 x i32**>* %53, align 8
  %54 = load float, float* %1, align 4
  %55 = fmul float %54, 2.000000e+00
  %56 = fsub float 2.000000e+00, %55
  %57 = fcmp olt float %56, 0.000000e+00
  %58 = bitcast i32** %41 to i32*
  br i1 %57, label %66, label %59

59:                                               ; preds = %3
  %60 = fcmp ogt float %56, 2.000000e+00
  %61 = select i1 %60, float 2.000000e+00, float %56
  %62 = fmul float %61, 6.553600e+04
  %63 = fpext float %62 to double
  %64 = fadd double %63, 5.000000e-01
  %65 = fptosi double %64 to i32
  br label %66

66:                                               ; preds = %59, %3
  %67 = phi i32 [ 0, %3 ], [ %65, %59 ]
  %68 = fmul float %54, %56
  %69 = getelementptr inbounds float, float* %1, i64 1
  %70 = load float, float* %69, align 4
  %71 = fdiv float %68, %70
  %72 = fcmp olt float %71, 0.000000e+00
  br i1 %72, label %81, label %73

73:                                               ; preds = %66
  %74 = fcmp ogt float %71, 2.000000e+00
  %75 = select i1 %74, float 2.000000e+00, float %71
  %76 = fmul float %75, 6.553600e+04
  %77 = fpext float %76 to double
  %78 = fadd double %77, 5.000000e-01
  %79 = fptosi double %78 to i32
  %80 = sub i32 0, %79
  br label %81

81:                                               ; preds = %73, %66
  %82 = phi i32 [ 0, %66 ], [ %80, %73 ]
  %83 = getelementptr inbounds float, float* %1, i64 2
  %84 = load float, float* %83, align 4
  %85 = fmul float %84, 2.000000e+00
  %86 = fsub float 2.000000e+00, %85
  %87 = fcmp olt float %86, 0.000000e+00
  br i1 %87, label %95, label %88

88:                                               ; preds = %81
  %89 = fcmp ogt float %86, 2.000000e+00
  %90 = select i1 %89, float 2.000000e+00, float %86
  %91 = fmul float %90, 6.553600e+04
  %92 = fpext float %91 to double
  %93 = fadd double %92, 5.000000e-01
  %94 = fptosi double %93 to i32
  br label %95

95:                                               ; preds = %88, %81
  %96 = phi i32 [ 0, %81 ], [ %94, %88 ]
  %97 = fmul float %84, %86
  %98 = fdiv float %97, %70
  %99 = fcmp olt float %98, 0.000000e+00
  br i1 %99, label %108, label %100

100:                                              ; preds = %95
  %101 = fcmp ogt float %98, 2.000000e+00
  %102 = select i1 %101, float 2.000000e+00, float %98
  %103 = fmul float %102, 6.553600e+04
  %104 = fpext float %103 to double
  %105 = fadd double %104, 5.000000e-01
  %106 = fptosi double %105 to i32
  %107 = sub i32 0, %106
  br label %108

108:                                              ; preds = %100, %95
  %109 = phi i32 [ 0, %95 ], [ %107, %100 ]
  %110 = getelementptr inbounds float, float* %2, i64 4
  %111 = getelementptr inbounds float, float* %2, i64 2
  %112 = getelementptr inbounds float, float* %2, i64 1
  %113 = bitcast float* %110 to <2 x float>*
  %114 = bitcast float* %111 to <2 x float>*
  br label %115

115:                                              ; preds = %189, %108
  %116 = phi i32* [ %58, %108 ], [ %191, %189 ]
  %117 = phi i64 [ 0, %108 ], [ %187, %189 ]
  %118 = phi i32 [ -128, %108 ], [ %190, %189 ]
  %119 = load <2 x float>, <2 x float>* %113, align 4
  %120 = fadd <2 x float> %119, <float -1.280000e+02, float -1.280000e+02>
  %121 = extractelement <2 x float> %120, i32 0
  %122 = fptosi float %121 to i32
  %123 = sub nsw i32 %118, %122
  %124 = sitofp i32 %123 to float
  %125 = fmul float %124, 1.270000e+02
  %126 = extractelement <2 x float> %120, i32 1
  %127 = fsub float %126, %121
  %128 = fcmp une float %127, 0.000000e+00
  %129 = select i1 %128, float %127, float 1.000000e+00
  %130 = fdiv float %125, %129
  %131 = fcmp olt float %130, -4.096000e+03
  %132 = fcmp ogt float %130, 4.096000e+03
  %133 = select i1 %132, float 4.096000e+03, float %130
  %134 = select i1 %131, float -4.096000e+03, float %133
  %135 = fptosi float %134 to i32
  %136 = load <2 x float>, <2 x float>* %114, align 4
  %137 = fadd <2 x float> %136, <float -1.280000e+02, float -1.280000e+02>
  %138 = extractelement <2 x float> %137, i32 0
  %139 = fptosi float %138 to i32
  %140 = sub nsw i32 %118, %139
  %141 = sitofp i32 %140 to float
  %142 = fmul float %141, 1.270000e+02
  %143 = extractelement <2 x float> %137, i32 1
  %144 = fsub float %143, %138
  %145 = fcmp une float %144, 0.000000e+00
  %146 = select i1 %145, float %144, float 1.000000e+00
  %147 = fdiv float %142, %146
  %148 = fcmp olt float %147, -4.096000e+03
  %149 = fcmp ogt float %147, 4.096000e+03
  %150 = select i1 %149, float 4.096000e+03, float %147
  %151 = select i1 %148, float -4.096000e+03, float %150
  %152 = fptosi float %151 to i32
  %153 = mul nsw i32 %67, %135
  %154 = add nsw i32 %153, 32768
  %155 = ashr i32 %154, 16
  %156 = getelementptr inbounds i32, i32* %116, i64 %117
  store i32 %155, i32* %156, align 4
  %157 = mul nsw i32 %96, %152
  %158 = add nsw i32 %157, 32768
  %159 = ashr i32 %158, 16
  %160 = load i32*, i32** %44, align 8
  %161 = getelementptr inbounds i32, i32* %160, i64 %117
  store i32 %159, i32* %161, align 4
  %162 = mul nsw i32 %82, %135
  %163 = load i32*, i32** %48, align 8
  %164 = getelementptr inbounds i32, i32* %163, i64 %117
  store i32 %162, i32* %164, align 4
  %165 = mul nsw i32 %109, %152
  %166 = add nsw i32 %165, 32768
  %167 = load i32*, i32** %50, align 8
  %168 = getelementptr inbounds i32, i32* %167, i64 %117
  store i32 %166, i32* %168, align 4
  %169 = add nsw i32 %118, 128
  %170 = load float, float* %2, align 4
  %171 = fptosi float %170 to i32
  %172 = sub i32 %169, %171
  %173 = sitofp i32 %172 to float
  %174 = fmul float %173, 2.550000e+02
  %175 = load float, float* %112, align 4
  %176 = fsub float %175, %170
  %177 = fcmp une float %176, 0.000000e+00
  %178 = select i1 %177, float %176, float 1.000000e+00
  %179 = fdiv float %174, %178
  %180 = fcmp olt float %179, -4.096000e+03
  %181 = fcmp ogt float %179, 4.096000e+03
  %182 = select i1 %181, float 4.096000e+03, float %179
  %183 = select i1 %180, float -4.096000e+03, float %182
  %184 = fptosi float %183 to i32
  %185 = load i32*, i32** %52, align 8
  %186 = getelementptr inbounds i32, i32* %185, i64 %117
  store i32 %184, i32* %186, align 4
  %187 = add nuw nsw i64 %117, 1
  %188 = icmp eq i64 %187, 256
  br i1 %188, label %192, label %189

189:                                              ; preds = %115
  %190 = add nsw i32 %118, 1
  %191 = load i32*, i32** %42, align 8
  br label %115

192:                                              ; preds = %115
  ret i32 0
}

declare void @_TIFFmemset(i8*, i32, i64) local_unnamed_addr #2

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
