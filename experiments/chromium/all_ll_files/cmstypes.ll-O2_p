; ModuleID = '../../third_party/pdfium/third_party/lcms/src/cmstypes.c'
source_filename = "../../third_party/pdfium/third_party/lcms/src/cmstypes.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct._cmsTagTypePluginChunkType = type { %struct._cmsTagTypeLinkedList_st* }
%struct._cmsTagTypeLinkedList_st = type { %struct._cms_typehandler_struct, %struct._cmsTagTypeLinkedList_st* }
%struct._cms_typehandler_struct = type { i32, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)*, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)*, i8* (%struct._cms_typehandler_struct*, i8*, i32)*, void (%struct._cms_typehandler_struct*, i8*)*, %struct._cmsContext_struct*, i32 }
%struct._cms_io_handler = type { i8*, %struct._cmsContext_struct*, i32, i32, [256 x i8], i32 (%struct._cms_io_handler*, i8*, i32, i32)*, i32 (%struct._cms_io_handler*, i32)*, i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*, i32, i8*)* }
%struct._cmsContext_struct = type { %struct._cmsContext_struct*, %struct._cmsSubAllocator*, [15 x i8*], %struct._cmsMemPluginChunkType }
%struct._cmsSubAllocator = type { %struct._cmsContext_struct*, %struct._cmsSubAllocator_chunk_st* }
%struct._cmsSubAllocator_chunk_st = type { i8*, i32, i32, %struct._cmsSubAllocator_chunk_st* }
%struct._cmsMemPluginChunkType = type { i8* (%struct._cmsContext_struct*, i32)*, i8* (%struct._cmsContext_struct*, i32)*, void (%struct._cmsContext_struct*, i8*)*, i8* (%struct._cmsContext_struct*, i8*, i32)*, i8* (%struct._cmsContext_struct*, i32, i32)*, i8* (%struct._cmsContext_struct*, i8*, i32)* }
%struct._cmsTagPluginChunkType = type { %struct._cmsTagLinkedList_st* }
%struct._cmsTagLinkedList_st = type { i32, %struct.cmsTagDescriptor, %struct._cmsTagLinkedList_st* }
%struct.cmsTagDescriptor = type { i32, i32, [20 x i32], i32 (double, i8*)* }
%struct._cmsPluginBaseStruct = type { i32, i32, i32, %struct._cmsPluginBaseStruct* }
%struct._cms_MLU_struct = type { %struct._cmsContext_struct*, i32, i32, %struct._cmsMLUentry*, i32, i32, i8* }
%struct._cmsMLUentry = type { i16, i16, i32, i32 }
%struct._cms_curve_struct = type { %struct._cms_interp_struc*, i32, %struct.cmsCurveSegment*, %struct._cms_interp_struc**, double (i32, double*, double)**, i32, i16* }
%struct._cms_interp_struc = type { %struct._cmsContext_struct*, i32, i32, i32, [8 x i32], [8 x i32], [8 x i32], i8*, %union.cmsInterpFunction }
%union.cmsInterpFunction = type { void (i16*, i16*, %struct._cms_interp_struc*)* }
%struct.cmsCurveSegment = type { float, float, i32, [10 x double], i32, float* }
%struct.cmsDateTimeNumber = type { i16, i16, i16, i16, i16, i16 }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }
%struct._cmsPipeline_struct = type { %struct._cmsStage_struct*, i32, i32, i8*, void (i16*, i16*, i8*)*, void (float*, float*, i8*)*, void (%struct._cmsContext_struct*, i8*)*, i8* (%struct._cmsContext_struct*, i8*)*, %struct._cmsContext_struct*, i32 }
%struct._cmsStage_struct = type { %struct._cmsContext_struct*, i32, i32, i32, i32, void (float*, float*, %struct._cmsStage_struct*)*, i8* (%struct._cmsStage_struct*)*, void (%struct._cmsStage_struct*)*, i8*, %struct._cmsStage_struct* }
%struct.cmsMAT3 = type { [3 x %struct.cmsVEC3] }
%struct.cmsVEC3 = type { [3 x double] }
%struct._cmsStageMatrixData = type { double*, double* }
%struct._cmsStageToneCurvesData = type { i32, %struct._cms_curve_struct** }
%struct._cmsStageCLutData = type { %union.anon, %struct._cms_interp_struc*, i32, i32 }
%union.anon = type { i16* }
%struct._cms_NAMEDCOLORLIST_struct = type { i32, i32, i32, [33 x i8], [33 x i8], %struct._cmsNAMEDCOLOR*, %struct._cmsContext_struct* }
%struct._cmsNAMEDCOLOR = type { [256 x i8], [3 x i16], [16 x i16] }
%struct.cmsSEQ = type { i32, %struct._cmsContext_struct*, %struct.cmsPSEQDESC* }
%struct.cmsPSEQDESC = type { i32, i32, i64, i32, %union.cmsProfileID, %struct._cms_MLU_struct*, %struct._cms_MLU_struct*, %struct._cms_MLU_struct* }
%union.cmsProfileID = type { [4 x i32] }
%struct.cmsICCMeasurementConditions = type { i32, %struct.cmsCIEXYZ, i32, double, i32 }
%struct.cmsCIEXYZ = type { double, double, double }
%struct.cmsScreeningChannel = type { double, double, i32 }
%struct._cmsDICarray = type { %struct._cmsDICelem, %struct._cmsDICelem, %struct._cmsDICelem, %struct._cmsDICelem }
%struct._cmsDICelem = type { %struct._cmsContext_struct*, i32*, i32* }
%struct._cmsDICTentry_struct = type { %struct._cmsDICTentry_struct*, %struct._cms_MLU_struct*, %struct._cms_MLU_struct*, i32*, i32* }
%struct._cmsVCGTGAMMA = type { double, double, double }

@_cmsMPETypePluginChunk = hidden local_unnamed_addr global %struct._cmsTagTypePluginChunkType zeroinitializer, align 8
@_cmsTagTypePluginChunk = hidden local_unnamed_addr global %struct._cmsTagTypePluginChunkType zeroinitializer, align 8
@_cmsAllocTagTypePluginChunk.TagTypePluginChunk = internal global %struct._cmsTagTypePluginChunkType zeroinitializer, align 8
@_cmsAllocMPETypePluginChunk.TagTypePluginChunk = internal global %struct._cmsTagTypePluginChunkType zeroinitializer, align 8
@SupportedTagTypes = internal constant [31 x %struct._cmsTagTypeLinkedList_st] [%struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1667789421, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_Chromaticity_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_Chromaticity_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_Chromaticity_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_Chromaticity_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 64) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1668051567, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_ColorantOrderType_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_ColorantOrderType_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_ColorantOrderType_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_ColorantOrderType_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 128) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1936077618, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_S15Fixed16_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_S15Fixed16_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_S15Fixed16_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_S15Fixed16_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 192) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1969632050, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_U16Fixed16_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_U16Fixed16_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_U16Fixed16_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_U16Fixed16_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 256) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1952807028, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_Text_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_Text_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_Text_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_Text_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 320) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1684370275, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_Text_Description_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_Text_Description_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_Text_Description_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_Text_Description_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 384) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1668641398, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_Curve_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_Curve_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_Curve_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_Curve_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 448) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1885434465, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_ParametricCurve_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_ParametricCurve_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_ParametricCurve_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_ParametricCurve_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 512) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1685350765, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_DateTime_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_DateTime_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_DateTime_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_DateTime_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 576) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1835430961, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_LUT8_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_LUT8_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_LUT8_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_LUT8_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 640) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1835430962, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_LUT16_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_LUT16_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_LUT16_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_LUT16_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 704) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1668051572, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_ColorantTable_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_ColorantTable_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_ColorantTable_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_ColorantTable_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 768) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1852009522, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_NamedColor_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_NamedColor_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_NamedColor_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_NamedColor_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 832) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1835824483, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_MLU_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_MLU_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_MLU_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_MLU_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 896) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1886610801, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_ProfileSequenceDesc_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_ProfileSequenceDesc_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_ProfileSequenceDesc_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_ProfileSequenceDesc_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 960) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1936287520, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_Signature_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_Signature_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_Signature_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_Signature_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 1024) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1835360627, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_Measurement_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_Measurement_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_Measurement_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_Measurement_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 1088) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1684108385, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_Data_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_Data_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_Data_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_Data_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 1152) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1832993312, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_LUTA2B_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_LUTA2B_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_LUTA2B_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_LUTA2B_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 1216) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1833058592, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_LUTB2A_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_LUTB2A_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_LUTB2A_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_LUTB2A_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 1280) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1650877472, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_UcrBg_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_UcrBg_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_UcrBg_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_UcrBg_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 1344) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1668441193, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_CrdInfo_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_CrdInfo_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_CrdInfo_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_CrdInfo_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 1408) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1836082548, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_MPE_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_MPE_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_MPE_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_MPE_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 1472) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1935897198, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_Screening_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_Screening_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_Screening_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_Screening_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 1536) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1986618743, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_ViewingConditions_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_ViewingConditions_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_ViewingConditions_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_ViewingConditions_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 1600) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1482250784, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_XYZ_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_XYZ_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_XYZ_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_XYZ_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 1664) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 396690872, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_XYZ_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_XYZ_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_XYZ_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_XYZ_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 1728) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 -1804014080, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_Curve_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_Curve_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_Curve_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_Curve_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 1792) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1886611812, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_ProfileSequenceId_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_ProfileSequenceId_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_ProfileSequenceId_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_ProfileSequenceId_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 1856) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1684628340, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_Dictionary_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_Dictionary_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_Dictionary_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_Dictionary_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes to i8*), i64 1920) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1986226036, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_vcgt_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_vcgt_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @Type_vcgt_Dup, void (%struct._cms_typehandler_struct*, i8*)* @Type_vcgt_Free, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* null }], align 16
@_cmsTagPluginChunk = hidden local_unnamed_addr global %struct._cmsTagPluginChunkType zeroinitializer, align 8
@_cmsAllocTagPluginChunk.TagPluginChunk = internal global %struct._cmsTagPluginChunkType zeroinitializer, align 8
@.str = private unnamed_addr constant [3 x i8] zeroinitializer, align 1
@.str.1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.2 = private unnamed_addr constant [1 x i32] zeroinitializer, align 4
@Type_ParametricCurve_Read.ParamsByType = internal unnamed_addr constant [5 x i32] [i32 1, i32 3, i32 4, i32 5, i32 7], align 16
@.str.3 = private unnamed_addr constant [35 x i8] c"Unknown parametric curve type '%d'\00", align 1
@Type_ParametricCurve_Write.ParamsByType = internal unnamed_addr constant [6 x i32] [i32 0, i32 1, i32 3, i32 4, i32 5, i32 7], align 16
@.str.4 = private unnamed_addr constant [61 x i8] c"Multisegment or Inverted parametric curves cannot be written\00", align 1
@.str.5 = private unnamed_addr constant [29 x i8] c"Unsupported parametric curve\00", align 1
@.str.6 = private unnamed_addr constant [40 x i8] c"LUT is not suitable to be saved as LUT8\00", align 1
@.str.7 = private unnamed_addr constant [43 x i8] c"LUT8 needs 256 entries on prelinearization\00", align 1
@.str.8 = private unnamed_addr constant [41 x i8] c"LUT is not suitable to be saved as LUT16\00", align 1
@.str.9 = private unnamed_addr constant [24 x i8] c"Too many colorants '%d'\00", align 1
@.str.10 = private unnamed_addr constant [27 x i8] c"Too many named colors '%d'\00", align 1
@.str.11 = private unnamed_addr constant [33 x i8] c"Too many device coordinates '%d'\00", align 1
@.str.12 = private unnamed_addr constant [57 x i8] c"multiLocalizedUnicodeType of len != 12 is not supported.\00", align 1
@.str.13 = private unnamed_addr constant [24 x i8] c"Unknown curve type '%s'\00", align 1
@.str.14 = private unnamed_addr constant [26 x i8] c"Unknown precision of '%d'\00", align 1
@.str.15 = private unnamed_addr constant [43 x i8] c"LUT is not suitable to be saved as LutAToB\00", align 1
@.str.16 = private unnamed_addr constant [59 x i8] c"Cannot save floating point data, CLUT are 8 or 16 bit only\00", align 1
@.str.17 = private unnamed_addr constant [43 x i8] c"LUT is not suitable to be saved as LutBToA\00", align 1
@.str.18 = private unnamed_addr constant [3 x i8] c"nm\00", align 1
@.str.19 = private unnamed_addr constant [3 x i8] c"#0\00", align 1
@.str.20 = private unnamed_addr constant [3 x i8] c"#1\00", align 1
@.str.21 = private unnamed_addr constant [3 x i8] c"#2\00", align 1
@.str.22 = private unnamed_addr constant [3 x i8] c"#3\00", align 1
@.str.23 = private unnamed_addr constant [3 x i8] c"PS\00", align 1
@SupportedMPEtypes = internal global [5 x %struct._cmsTagTypeLinkedList_st] [%struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1648444243, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* null, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* null, i8* (%struct._cms_typehandler_struct*, i8*, i32)* null, void (%struct._cms_typehandler_struct*, i8*)* null, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([5 x %struct._cmsTagTypeLinkedList_st]* @SupportedMPEtypes to i8*), i64 64) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1698775891, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* null, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* null, i8* (%struct._cms_typehandler_struct*, i8*, i32)* null, void (%struct._cms_typehandler_struct*, i8*)* null, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([5 x %struct._cmsTagTypeLinkedList_st]* @SupportedMPEtypes to i8*), i64 128) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1668707188, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_MPEcurve_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_MPEcurve_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @GenericMPEdup, void (%struct._cms_typehandler_struct*, i8*)* @GenericMPEfree, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([5 x %struct._cmsTagTypeLinkedList_st]* @SupportedMPEtypes to i8*), i64 192) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1835103334, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_MPEmatrix_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_MPEmatrix_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @GenericMPEdup, void (%struct._cms_typehandler_struct*, i8*)* @GenericMPEfree, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast ([5 x %struct._cmsTagTypeLinkedList_st]* @SupportedMPEtypes to i8*), i64 256) to %struct._cmsTagTypeLinkedList_st*) }, %struct._cmsTagTypeLinkedList_st { %struct._cms_typehandler_struct { i32 1668052340, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* @Type_MPEclut_Read, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)* @Type_MPEclut_Write, i8* (%struct._cms_typehandler_struct*, i8*, i32)* @GenericMPEdup, void (%struct._cms_typehandler_struct*, i8*)* @GenericMPEfree, %struct._cmsContext_struct* null, i32 0 }, %struct._cmsTagTypeLinkedList_st* null }], align 16
@.str.24 = private unnamed_addr constant [29 x i8] c"Unknown MPE type '%s' found.\00", align 1
@.str.25 = private unnamed_addr constant [39 x i8] c"Unknown curve element type '%s' found.\00", align 1
@__const.WriteSegmentedCurve.ParamsByType = private unnamed_addr constant [3 x i32] [i32 4, i32 5, i32 5], align 4
@.str.26 = private unnamed_addr constant [28 x i8] c"Found unknown MPE type '%s'\00", align 1
@.str.27 = private unnamed_addr constant [41 x i8] c"Unknown record length in dictionary '%d'\00", align 1
@.str.28 = private unnamed_addr constant [26 x i8] c"Bad dictionary Name/Value\00", align 1
@.str.29 = private unnamed_addr constant [45 x i8] c"Unsupported number of channels for VCGT '%d'\00", align 1
@.str.30 = private unnamed_addr constant [36 x i8] c"Unsupported bit depth for VCGT '%d'\00", align 1
@.str.31 = private unnamed_addr constant [35 x i8] c"Unsupported tag type for VCGT '%d'\00", align 1
@SupportedTags = internal global <{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }> <{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1093812784, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* } { i32 1, i32 3, <{ i32, i32, i32, [17 x i32] }> <{ i32 1835430962, i32 1832993312, i32 1835430961, [17 x i32] zeroinitializer }>, i32 (double, i8*)* @DecideLUTtypeA2B }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 112) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1093812785, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* } { i32 1, i32 3, <{ i32, i32, i32, [17 x i32] }> <{ i32 1835430962, i32 1832993312, i32 1835430961, [17 x i32] zeroinitializer }>, i32 (double, i8*)* @DecideLUTtypeA2B }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 224) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1093812786, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* } { i32 1, i32 3, <{ i32, i32, i32, [17 x i32] }> <{ i32 1835430962, i32 1832993312, i32 1835430961, [17 x i32] zeroinitializer }>, i32 (double, i8*)* @DecideLUTtypeA2B }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 336) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1110589744, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* } { i32 1, i32 3, <{ i32, i32, i32, [17 x i32] }> <{ i32 1835430962, i32 1833058592, i32 1835430961, [17 x i32] zeroinitializer }>, i32 (double, i8*)* @DecideLUTtypeB2A }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 448) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1110589745, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* } { i32 1, i32 3, <{ i32, i32, i32, [17 x i32] }> <{ i32 1835430962, i32 1833058592, i32 1835430961, [17 x i32] zeroinitializer }>, i32 (double, i8*)* @DecideLUTtypeB2A }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 560) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1110589746, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* } { i32 1, i32 3, <{ i32, i32, i32, [17 x i32] }> <{ i32 1835430962, i32 1833058592, i32 1835430961, [17 x i32] zeroinitializer }>, i32 (double, i8*)* @DecideLUTtypeB2A }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 672) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1918392666, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* } { i32 1, i32 2, <{ i32, i32, [18 x i32] }> <{ i32 1482250784, i32 396690872, [18 x i32] zeroinitializer }>, i32 (double, i8*)* @DecideXYZtype }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 784) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1733843290, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* } { i32 1, i32 2, <{ i32, i32, [18 x i32] }> <{ i32 1482250784, i32 396690872, [18 x i32] zeroinitializer }>, i32 (double, i8*)* @DecideXYZtype }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 896) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1649957210, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* } { i32 1, i32 2, <{ i32, i32, [18 x i32] }> <{ i32 1482250784, i32 396690872, [18 x i32] zeroinitializer }>, i32 (double, i8*)* @DecideXYZtype }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 1008) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1918128707, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* } { i32 1, i32 3, <{ i32, i32, i32, [17 x i32] }> <{ i32 1668641398, i32 1885434465, i32 -1804014080, [17 x i32] zeroinitializer }>, i32 (double, i8*)* @DecideCurveType }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 1120) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1733579331, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* } { i32 1, i32 3, <{ i32, i32, i32, [17 x i32] }> <{ i32 1668641398, i32 1885434465, i32 -1804014080, [17 x i32] zeroinitializer }>, i32 (double, i8*)* @DecideCurveType }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 1232) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1649693251, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* } { i32 1, i32 3, <{ i32, i32, i32, [17 x i32] }> <{ i32 1668641398, i32 1885434465, i32 -1804014080, [17 x i32] zeroinitializer }>, i32 (double, i8*)* @DecideCurveType }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 1344) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1667329140, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* } { i32 1, i32 1, <{ i32, [19 x i32] }> <{ i32 1685350765, [19 x i32] zeroinitializer }>, i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 1456) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1952543335, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* } { i32 1, i32 1, <{ i32, [19 x i32] }> <{ i32 1952807028, [19 x i32] zeroinitializer }>, i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 1568) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1667785060, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* } { i32 9, i32 1, <{ i32, [19 x i32] }> <{ i32 1936077618, [19 x i32] zeroinitializer }>, i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 1680) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1667789421, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* } { i32 1, i32 1, <{ i32, [19 x i32] }> <{ i32 1667789421, [19 x i32] zeroinitializer }>, i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 1792) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1668051567, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* } { i32 1, i32 1, <{ i32, [19 x i32] }> <{ i32 1668051567, [19 x i32] zeroinitializer }>, i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 1904) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1668051572, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* } { i32 1, i32 1, <{ i32, [19 x i32] }> <{ i32 1668051572, [19 x i32] zeroinitializer }>, i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 2016) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1668050804, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* } { i32 1, i32 1, <{ i32, [19 x i32] }> <{ i32 1668051572, [19 x i32] zeroinitializer }>, i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 2128) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1668313716, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* } { i32 1, i32 3, <{ i32, i32, i32, [17 x i32] }> <{ i32 1952807028, i32 1835824483, i32 1684370275, [17 x i32] zeroinitializer }>, i32 (double, i8*)* @DecideTextType }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 2240) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1685350765, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* } { i32 1, i32 1, <{ i32, [19 x i32] }> <{ i32 1685350765, [19 x i32] zeroinitializer }>, i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 2352) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1684893284, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* } { i32 1, i32 3, <{ i32, i32, i32, [17 x i32] }> <{ i32 1684370275, i32 1835824483, i32 1952807028, [17 x i32] zeroinitializer }>, i32 (double, i8*)* @DecideTextDescType }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 2464) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1684890724, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* } { i32 1, i32 3, <{ i32, i32, i32, [17 x i32] }> <{ i32 1684370275, i32 1835824483, i32 1952807028, [17 x i32] zeroinitializer }>, i32 (double, i8*)* @DecideTextDescType }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 2576) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1734438260, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* } { i32 1, i32 3, <{ i32, i32, i32, [17 x i32] }> <{ i32 1835430962, i32 1833058592, i32 1835430961, [17 x i32] zeroinitializer }>, i32 (double, i8*)* @DecideLUTtypeB2A }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 2688) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1800688195, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* } { i32 1, i32 2, <{ i32, i32, [18 x i32] }> <{ i32 1668641398, i32 1885434465, [18 x i32] zeroinitializer }>, i32 (double, i8*)* @DecideCurveType }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 2800) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1819635049, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* } { i32 1, i32 1, <{ i32, [19 x i32] }> <{ i32 1482250784, [19 x i32] zeroinitializer }>, i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 2912) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1651208308, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* } { i32 1, i32 2, <{ i32, i32, [18 x i32] }> <{ i32 1482250784, i32 396690872, [18 x i32] zeroinitializer }>, i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 3024) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 2004119668, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* } { i32 1, i32 2, <{ i32, i32, [18 x i32] }> <{ i32 1482250784, i32 396690872, [18 x i32] zeroinitializer }>, i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 3136) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1852009522, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* } { i32 1, i32 1, <{ i32, [19 x i32] }> <{ i32 1852009522, [19 x i32] zeroinitializer }>, i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 3248) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1886545200, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* } { i32 1, i32 3, <{ i32, i32, i32, [17 x i32] }> <{ i32 1835430962, i32 1833058592, i32 1835430961, [17 x i32] zeroinitializer }>, i32 (double, i8*)* @DecideLUTtypeB2A }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 3360) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1886545201, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* } { i32 1, i32 3, <{ i32, i32, i32, [17 x i32] }> <{ i32 1835430962, i32 1833058592, i32 1835430961, [17 x i32] zeroinitializer }>, i32 (double, i8*)* @DecideLUTtypeB2A }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 3472) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1886545202, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* } { i32 1, i32 3, <{ i32, i32, i32, [17 x i32] }> <{ i32 1835430962, i32 1833058592, i32 1835430961, [17 x i32] zeroinitializer }>, i32 (double, i8*)* @DecideLUTtypeB2A }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 3584) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1684370275, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* } { i32 1, i32 3, <{ i32, i32, i32, [17 x i32] }> <{ i32 1684370275, i32 1835824483, i32 1952807028, [17 x i32] zeroinitializer }>, i32 (double, i8*)* @DecideTextDescType }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 3696) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1886610801, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* } { i32 1, i32 1, <{ i32, [19 x i32] }> <{ i32 1886610801, [19 x i32] zeroinitializer }>, i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 3808) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1952801640, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* } { i32 1, i32 1, <{ i32, [19 x i32] }> <{ i32 1936287520, [19 x i32] zeroinitializer }>, i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 3920) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1667852659, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* } { i32 1, i32 1, <{ i32, [19 x i32] }> <{ i32 1936287520, [19 x i32] zeroinitializer }>, i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 4032) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1919510320, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* } { i32 1, i32 1, <{ i32, [19 x i32] }> <{ i32 1936287520, [19 x i32] zeroinitializer }>, i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 4144) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1919510322, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* } { i32 1, i32 1, <{ i32, [19 x i32] }> <{ i32 1936287520, [19 x i32] zeroinitializer }>, i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 4256) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1835360627, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* } { i32 1, i32 1, <{ i32, [19 x i32] }> <{ i32 1835360627, [19 x i32] zeroinitializer }>, i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 4368) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1886610480, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* } { i32 1, i32 1, <{ i32, [19 x i32] }> <{ i32 1684108385, [19 x i32] zeroinitializer }>, i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 4480) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1886610481, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* } { i32 1, i32 1, <{ i32, [19 x i32] }> <{ i32 1684108385, [19 x i32] zeroinitializer }>, i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 4592) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1886610482, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* } { i32 1, i32 1, <{ i32, [19 x i32] }> <{ i32 1684108385, [19 x i32] zeroinitializer }>, i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 4704) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1886610483, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* } { i32 1, i32 1, <{ i32, [19 x i32] }> <{ i32 1684108385, [19 x i32] zeroinitializer }>, i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 4816) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1886597747, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* } { i32 1, i32 1, <{ i32, [19 x i32] }> <{ i32 1684108385, [19 x i32] zeroinitializer }>, i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 4928) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1886597737, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* } { i32 1, i32 1, <{ i32, [19 x i32] }> <{ i32 1684108385, [19 x i32] zeroinitializer }>, i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 5040) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1987405156, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* } { i32 1, i32 3, <{ i32, i32, i32, [17 x i32] }> <{ i32 1684370275, i32 1835824483, i32 1952807028, [17 x i32] zeroinitializer }>, i32 (double, i8*)* @DecideTextDescType }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 5152) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1650877472, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* } { i32 1, i32 1, <{ i32, [19 x i32] }> <{ i32 1650877472, [19 x i32] zeroinitializer }>, i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 5264) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1668441193, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* } { i32 1, i32 1, <{ i32, [19 x i32] }> <{ i32 1668441193, [19 x i32] zeroinitializer }>, i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 5376) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1144144432, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* } { i32 1, i32 1, <{ i32, [19 x i32] }> <{ i32 1836082548, [19 x i32] zeroinitializer }>, i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 5488) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1144144433, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* } { i32 1, i32 1, <{ i32, [19 x i32] }> <{ i32 1836082548, [19 x i32] zeroinitializer }>, i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 5600) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1144144434, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* } { i32 1, i32 1, <{ i32, [19 x i32] }> <{ i32 1836082548, [19 x i32] zeroinitializer }>, i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 5712) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1144144435, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* } { i32 1, i32 1, <{ i32, [19 x i32] }> <{ i32 1836082548, [19 x i32] zeroinitializer }>, i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 5824) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1110590512, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* } { i32 1, i32 1, <{ i32, [19 x i32] }> <{ i32 1836082548, [19 x i32] zeroinitializer }>, i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 5936) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1110590513, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* } { i32 1, i32 1, <{ i32, [19 x i32] }> <{ i32 1836082548, [19 x i32] zeroinitializer }>, i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 6048) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1110590514, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* } { i32 1, i32 1, <{ i32, [19 x i32] }> <{ i32 1836082548, [19 x i32] zeroinitializer }>, i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 6160) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1110590515, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* } { i32 1, i32 1, <{ i32, [19 x i32] }> <{ i32 1836082548, [19 x i32] zeroinitializer }>, i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 6272) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1935897188, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* } { i32 1, i32 1, <{ i32, [19 x i32] }> <{ i32 1684370275, [19 x i32] zeroinitializer }>, i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 6384) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1986618743, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* } { i32 1, i32 1, <{ i32, [19 x i32] }> <{ i32 1986618743, [19 x i32] zeroinitializer }>, i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 6496) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1935897198, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* } { i32 1, i32 1, <{ i32, [19 x i32] }> <{ i32 1935897198, [19 x i32] zeroinitializer }>, i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 6608) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1986226036, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* } { i32 1, i32 1, <{ i32, [19 x i32] }> <{ i32 1986226036, [19 x i32] zeroinitializer }>, i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 6720) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1835365473, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* } { i32 1, i32 1, <{ i32, [19 x i32] }> <{ i32 1684628340, [19 x i32] zeroinitializer }>, i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 6832) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1886611812, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* } { i32 1, i32 1, <{ i32, [19 x i32] }> <{ i32 1886611812, [19 x i32] zeroinitializer }>, i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 6944) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1685283693, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* } { i32 1, i32 1, <{ i32, [19 x i32] }> <{ i32 1835824483, [19 x i32] zeroinitializer }>, i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* bitcast (i8* getelementptr (i8, i8* bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to i8*), i64 7056) to %struct._cmsTagLinkedList_st*) }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } { i32 1634890867, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* } { i32 9, i32 1, <{ i32, [19 x i32] }> <{ i32 1936077618, [19 x i32] zeroinitializer }>, i32 (double, i8*)* null }, %struct._cmsTagLinkedList_st* null } }>, align 16

; Function Attrs: nounwind ssp uwtable
define hidden void @_cmsAllocTagTypePluginChunk(%struct._cmsContext_struct* nocapture, %struct._cmsContext_struct* readonly) local_unnamed_addr #0 {
  %3 = alloca %struct._cmsTagTypePluginChunkType, align 8
  %4 = icmp eq %struct._cmsContext_struct* %1, null
  br i1 %4, label %48, label %5

5:                                                ; preds = %2
  %6 = bitcast %struct._cmsTagTypePluginChunkType* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = bitcast %struct._cmsTagTypePluginChunkType* %3 to i64*
  store i64 0, i64* %7, align 8
  %8 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %1, i64 0, i32 2, i64 8
  %9 = bitcast i8** %8 to %struct._cmsTagTypePluginChunkType**
  %10 = load %struct._cmsTagTypePluginChunkType*, %struct._cmsTagTypePluginChunkType** %9, align 8
  %11 = getelementptr inbounds %struct._cmsTagTypePluginChunkType, %struct._cmsTagTypePluginChunkType* %10, i64 0, i32 0
  %12 = load %struct._cmsTagTypeLinkedList_st*, %struct._cmsTagTypeLinkedList_st** %11, align 8
  %13 = icmp eq %struct._cmsTagTypeLinkedList_st* %12, null
  %14 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %0, i64 0, i32 1
  %15 = load %struct._cmsSubAllocator*, %struct._cmsSubAllocator** %14, align 8
  br i1 %13, label %43, label %16

16:                                               ; preds = %5
  %17 = bitcast %struct._cmsTagTypePluginChunkType* %3 to i8**
  br label %18

18:                                               ; preds = %37, %16
  %19 = phi %struct._cmsTagTypeLinkedList_st* [ null, %16 ], [ %38, %37 ]
  %20 = phi %struct._cmsSubAllocator* [ %15, %16 ], [ %42, %37 ]
  %21 = phi %struct._cmsTagTypeLinkedList_st* [ %12, %16 ], [ %40, %37 ]
  %22 = phi %struct._cmsTagTypeLinkedList_st* [ null, %16 ], [ %25, %37 ]
  %23 = bitcast %struct._cmsTagTypeLinkedList_st* %21 to i8*
  %24 = tail call i8* @_cmsSubAllocDup(%struct._cmsSubAllocator* %20, i8* nonnull %23, i32 64) #8
  %25 = bitcast i8* %24 to %struct._cmsTagTypeLinkedList_st*
  %26 = icmp eq i8* %24, null
  br i1 %26, label %47, label %27

27:                                               ; preds = %18
  %28 = getelementptr inbounds i8, i8* %24, i64 56
  %29 = bitcast i8* %28 to %struct._cmsTagTypeLinkedList_st**
  store %struct._cmsTagTypeLinkedList_st* null, %struct._cmsTagTypeLinkedList_st** %29, align 8
  %30 = icmp eq %struct._cmsTagTypeLinkedList_st* %22, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %struct._cmsTagTypeLinkedList_st, %struct._cmsTagTypeLinkedList_st* %22, i64 0, i32 1
  %33 = bitcast %struct._cmsTagTypeLinkedList_st** %32 to i8**
  store i8* %24, i8** %33, align 8
  br label %34

34:                                               ; preds = %31, %27
  %35 = icmp eq %struct._cmsTagTypeLinkedList_st* %19, null
  br i1 %35, label %36, label %37

36:                                               ; preds = %34
  store i8* %24, i8** %17, align 8
  br label %37

37:                                               ; preds = %36, %34
  %38 = phi %struct._cmsTagTypeLinkedList_st* [ %25, %36 ], [ %19, %34 ]
  %39 = getelementptr inbounds %struct._cmsTagTypeLinkedList_st, %struct._cmsTagTypeLinkedList_st* %21, i64 0, i32 1
  %40 = load %struct._cmsTagTypeLinkedList_st*, %struct._cmsTagTypeLinkedList_st** %39, align 8
  %41 = icmp eq %struct._cmsTagTypeLinkedList_st* %40, null
  %42 = load %struct._cmsSubAllocator*, %struct._cmsSubAllocator** %14, align 8
  br i1 %41, label %43, label %18

43:                                               ; preds = %37, %5
  %44 = phi %struct._cmsSubAllocator* [ %15, %5 ], [ %42, %37 ]
  %45 = call i8* @_cmsSubAllocDup(%struct._cmsSubAllocator* %44, i8* nonnull %6, i32 8) #8
  %46 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %0, i64 0, i32 2, i64 8
  store i8* %45, i8** %46, align 8
  br label %47

47:                                               ; preds = %18, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  br label %53

48:                                               ; preds = %2
  %49 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %0, i64 0, i32 1
  %50 = load %struct._cmsSubAllocator*, %struct._cmsSubAllocator** %49, align 8
  %51 = tail call i8* @_cmsSubAllocDup(%struct._cmsSubAllocator* %50, i8* bitcast (%struct._cmsTagTypePluginChunkType* @_cmsAllocTagTypePluginChunk.TagTypePluginChunk to i8*), i32 8) #8
  %52 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %0, i64 0, i32 2, i64 8
  store i8* %51, i8** %52, align 8
  br label %53

53:                                               ; preds = %48, %47
  ret void
}

declare i8* @_cmsSubAllocDup(%struct._cmsSubAllocator*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_cmsAllocMPETypePluginChunk(%struct._cmsContext_struct* nocapture, %struct._cmsContext_struct* readonly) local_unnamed_addr #0 {
  %3 = alloca %struct._cmsTagTypePluginChunkType, align 8
  %4 = icmp eq %struct._cmsContext_struct* %1, null
  br i1 %4, label %48, label %5

5:                                                ; preds = %2
  %6 = bitcast %struct._cmsTagTypePluginChunkType* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = bitcast %struct._cmsTagTypePluginChunkType* %3 to i64*
  store i64 0, i64* %7, align 8
  %8 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %1, i64 0, i32 2, i64 11
  %9 = bitcast i8** %8 to %struct._cmsTagTypePluginChunkType**
  %10 = load %struct._cmsTagTypePluginChunkType*, %struct._cmsTagTypePluginChunkType** %9, align 8
  %11 = getelementptr inbounds %struct._cmsTagTypePluginChunkType, %struct._cmsTagTypePluginChunkType* %10, i64 0, i32 0
  %12 = load %struct._cmsTagTypeLinkedList_st*, %struct._cmsTagTypeLinkedList_st** %11, align 8
  %13 = icmp eq %struct._cmsTagTypeLinkedList_st* %12, null
  %14 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %0, i64 0, i32 1
  %15 = load %struct._cmsSubAllocator*, %struct._cmsSubAllocator** %14, align 8
  br i1 %13, label %43, label %16

16:                                               ; preds = %5
  %17 = bitcast %struct._cmsTagTypePluginChunkType* %3 to i8**
  br label %18

18:                                               ; preds = %37, %16
  %19 = phi %struct._cmsTagTypeLinkedList_st* [ null, %16 ], [ %38, %37 ]
  %20 = phi %struct._cmsSubAllocator* [ %15, %16 ], [ %42, %37 ]
  %21 = phi %struct._cmsTagTypeLinkedList_st* [ %12, %16 ], [ %40, %37 ]
  %22 = phi %struct._cmsTagTypeLinkedList_st* [ null, %16 ], [ %25, %37 ]
  %23 = bitcast %struct._cmsTagTypeLinkedList_st* %21 to i8*
  %24 = tail call i8* @_cmsSubAllocDup(%struct._cmsSubAllocator* %20, i8* nonnull %23, i32 64) #8
  %25 = bitcast i8* %24 to %struct._cmsTagTypeLinkedList_st*
  %26 = icmp eq i8* %24, null
  br i1 %26, label %47, label %27

27:                                               ; preds = %18
  %28 = getelementptr inbounds i8, i8* %24, i64 56
  %29 = bitcast i8* %28 to %struct._cmsTagTypeLinkedList_st**
  store %struct._cmsTagTypeLinkedList_st* null, %struct._cmsTagTypeLinkedList_st** %29, align 8
  %30 = icmp eq %struct._cmsTagTypeLinkedList_st* %22, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %struct._cmsTagTypeLinkedList_st, %struct._cmsTagTypeLinkedList_st* %22, i64 0, i32 1
  %33 = bitcast %struct._cmsTagTypeLinkedList_st** %32 to i8**
  store i8* %24, i8** %33, align 8
  br label %34

34:                                               ; preds = %31, %27
  %35 = icmp eq %struct._cmsTagTypeLinkedList_st* %19, null
  br i1 %35, label %36, label %37

36:                                               ; preds = %34
  store i8* %24, i8** %17, align 8
  br label %37

37:                                               ; preds = %36, %34
  %38 = phi %struct._cmsTagTypeLinkedList_st* [ %25, %36 ], [ %19, %34 ]
  %39 = getelementptr inbounds %struct._cmsTagTypeLinkedList_st, %struct._cmsTagTypeLinkedList_st* %21, i64 0, i32 1
  %40 = load %struct._cmsTagTypeLinkedList_st*, %struct._cmsTagTypeLinkedList_st** %39, align 8
  %41 = icmp eq %struct._cmsTagTypeLinkedList_st* %40, null
  %42 = load %struct._cmsSubAllocator*, %struct._cmsSubAllocator** %14, align 8
  br i1 %41, label %43, label %18

43:                                               ; preds = %37, %5
  %44 = phi %struct._cmsSubAllocator* [ %15, %5 ], [ %42, %37 ]
  %45 = call i8* @_cmsSubAllocDup(%struct._cmsSubAllocator* %44, i8* nonnull %6, i32 8) #8
  %46 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %0, i64 0, i32 2, i64 11
  store i8* %45, i8** %46, align 8
  br label %47

47:                                               ; preds = %18, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  br label %53

48:                                               ; preds = %2
  %49 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %0, i64 0, i32 1
  %50 = load %struct._cmsSubAllocator*, %struct._cmsSubAllocator** %49, align 8
  %51 = tail call i8* @_cmsSubAllocDup(%struct._cmsSubAllocator* %50, i8* bitcast (%struct._cmsTagTypePluginChunkType* @_cmsAllocMPETypePluginChunk.TagTypePluginChunk to i8*), i32 8) #8
  %52 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %0, i64 0, i32 2, i64 11
  store i8* %51, i8** %52, align 8
  br label %53

53:                                               ; preds = %48, %47
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_cmsRegisterTagTypePlugin(%struct._cmsContext_struct*, %struct._cmsPluginBaseStruct* readonly) local_unnamed_addr #0 {
  %3 = tail call i8* @_cmsContextGetClientChunk(%struct._cmsContext_struct* %0, i32 8) #8
  %4 = icmp eq %struct._cmsPluginBaseStruct* %1, null
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = bitcast i8* %3 to %struct._cmsTagTypeLinkedList_st**
  store %struct._cmsTagTypeLinkedList_st* null, %struct._cmsTagTypeLinkedList_st** %6, align 8
  br label %18

7:                                                ; preds = %2
  %8 = tail call i8* @_cmsPluginMalloc(%struct._cmsContext_struct* %0, i32 64) #8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct._cmsPluginBaseStruct, %struct._cmsPluginBaseStruct* %1, i64 1
  %12 = bitcast %struct._cmsPluginBaseStruct* %11 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 %12, i64 56, i1 false) #8
  %13 = bitcast i8* %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds i8, i8* %8, i64 56
  %16 = bitcast i8* %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast i8* %3 to i8**
  store i8* %8, i8** %17, align 8
  br label %18

18:                                               ; preds = %5, %7, %10
  %19 = phi i32 [ 1, %5 ], [ 1, %10 ], [ 0, %7 ]
  ret i32 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_cmsRegisterMultiProcessElementPlugin(%struct._cmsContext_struct*, %struct._cmsPluginBaseStruct* readonly) local_unnamed_addr #0 {
  %3 = tail call i8* @_cmsContextGetClientChunk(%struct._cmsContext_struct* %0, i32 11) #8
  %4 = icmp eq %struct._cmsPluginBaseStruct* %1, null
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = bitcast i8* %3 to %struct._cmsTagTypeLinkedList_st**
  store %struct._cmsTagTypeLinkedList_st* null, %struct._cmsTagTypeLinkedList_st** %6, align 8
  br label %18

7:                                                ; preds = %2
  %8 = tail call i8* @_cmsPluginMalloc(%struct._cmsContext_struct* %0, i32 64) #8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct._cmsPluginBaseStruct, %struct._cmsPluginBaseStruct* %1, i64 1
  %12 = bitcast %struct._cmsPluginBaseStruct* %11 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 %12, i64 56, i1 false) #8
  %13 = bitcast i8* %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds i8, i8* %8, i64 56
  %16 = bitcast i8* %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast i8* %3 to i8**
  store i8* %8, i8** %17, align 8
  br label %18

18:                                               ; preds = %5, %7, %10
  %19 = phi i32 [ 1, %5 ], [ 1, %10 ], [ 0, %7 ]
  ret i32 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._cms_typehandler_struct* @_cmsGetTagTypeHandler(%struct._cmsContext_struct*, i32) local_unnamed_addr #0 {
  %3 = tail call i8* @_cmsContextGetClientChunk(%struct._cmsContext_struct* %0, i32 8) #8
  %4 = bitcast i8* %3 to %struct._cmsTagTypeLinkedList_st**
  %5 = load %struct._cmsTagTypeLinkedList_st*, %struct._cmsTagTypeLinkedList_st** %4, align 8
  %6 = icmp eq %struct._cmsTagTypeLinkedList_st* %5, null
  br i1 %6, label %18, label %7

7:                                                ; preds = %2, %14
  %8 = phi %struct._cmsTagTypeLinkedList_st* [ %16, %14 ], [ %5, %2 ]
  %9 = getelementptr inbounds %struct._cmsTagTypeLinkedList_st, %struct._cmsTagTypeLinkedList_st* %8, i64 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, %1
  br i1 %11, label %12, label %14

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct._cmsTagTypeLinkedList_st, %struct._cmsTagTypeLinkedList_st* %8, i64 0, i32 0
  br label %30

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct._cmsTagTypeLinkedList_st, %struct._cmsTagTypeLinkedList_st* %8, i64 0, i32 1
  %16 = load %struct._cmsTagTypeLinkedList_st*, %struct._cmsTagTypeLinkedList_st** %15, align 8
  %17 = icmp eq %struct._cmsTagTypeLinkedList_st* %16, null
  br i1 %17, label %18, label %7

18:                                               ; preds = %14, %2
  br label %19

19:                                               ; preds = %18, %26
  %20 = phi %struct._cmsTagTypeLinkedList_st* [ %28, %26 ], [ getelementptr inbounds ([31 x %struct._cmsTagTypeLinkedList_st], [31 x %struct._cmsTagTypeLinkedList_st]* @SupportedTagTypes, i64 0, i64 0), %18 ]
  %21 = getelementptr inbounds %struct._cmsTagTypeLinkedList_st, %struct._cmsTagTypeLinkedList_st* %20, i64 0, i32 0, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, %1
  br i1 %23, label %24, label %26

24:                                               ; preds = %19
  %25 = getelementptr inbounds %struct._cmsTagTypeLinkedList_st, %struct._cmsTagTypeLinkedList_st* %20, i64 0, i32 0
  br label %30

26:                                               ; preds = %19
  %27 = getelementptr inbounds %struct._cmsTagTypeLinkedList_st, %struct._cmsTagTypeLinkedList_st* %20, i64 0, i32 1
  %28 = load %struct._cmsTagTypeLinkedList_st*, %struct._cmsTagTypeLinkedList_st** %27, align 8
  %29 = icmp eq %struct._cmsTagTypeLinkedList_st* %28, null
  br i1 %29, label %30, label %19

30:                                               ; preds = %26, %12, %24
  %31 = phi %struct._cms_typehandler_struct* [ %13, %12 ], [ %25, %24 ], [ null, %26 ]
  ret %struct._cms_typehandler_struct* %31
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare i8* @_cmsContextGetClientChunk(%struct._cmsContext_struct*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_cmsAllocTagPluginChunk(%struct._cmsContext_struct* nocapture, %struct._cmsContext_struct* readonly) local_unnamed_addr #0 {
  %3 = alloca %struct._cmsTagPluginChunkType, align 8
  %4 = icmp eq %struct._cmsContext_struct* %1, null
  br i1 %4, label %48, label %5

5:                                                ; preds = %2
  %6 = bitcast %struct._cmsTagPluginChunkType* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = bitcast %struct._cmsTagPluginChunkType* %3 to i64*
  store i64 0, i64* %7, align 8
  %8 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %1, i64 0, i32 2, i64 9
  %9 = bitcast i8** %8 to %struct._cmsTagPluginChunkType**
  %10 = load %struct._cmsTagPluginChunkType*, %struct._cmsTagPluginChunkType** %9, align 8
  %11 = getelementptr inbounds %struct._cmsTagPluginChunkType, %struct._cmsTagPluginChunkType* %10, i64 0, i32 0
  %12 = load %struct._cmsTagLinkedList_st*, %struct._cmsTagLinkedList_st** %11, align 8
  %13 = icmp eq %struct._cmsTagLinkedList_st* %12, null
  %14 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %0, i64 0, i32 1
  %15 = load %struct._cmsSubAllocator*, %struct._cmsSubAllocator** %14, align 8
  br i1 %13, label %43, label %16

16:                                               ; preds = %5
  %17 = bitcast %struct._cmsTagPluginChunkType* %3 to i8**
  br label %18

18:                                               ; preds = %37, %16
  %19 = phi %struct._cmsTagLinkedList_st* [ null, %16 ], [ %38, %37 ]
  %20 = phi %struct._cmsSubAllocator* [ %15, %16 ], [ %42, %37 ]
  %21 = phi %struct._cmsTagLinkedList_st* [ %12, %16 ], [ %40, %37 ]
  %22 = phi %struct._cmsTagLinkedList_st* [ null, %16 ], [ %25, %37 ]
  %23 = bitcast %struct._cmsTagLinkedList_st* %21 to i8*
  %24 = tail call i8* @_cmsSubAllocDup(%struct._cmsSubAllocator* %20, i8* nonnull %23, i32 112) #8
  %25 = bitcast i8* %24 to %struct._cmsTagLinkedList_st*
  %26 = icmp eq i8* %24, null
  br i1 %26, label %47, label %27

27:                                               ; preds = %18
  %28 = getelementptr inbounds i8, i8* %24, i64 104
  %29 = bitcast i8* %28 to %struct._cmsTagLinkedList_st**
  store %struct._cmsTagLinkedList_st* null, %struct._cmsTagLinkedList_st** %29, align 8
  %30 = icmp eq %struct._cmsTagLinkedList_st* %22, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %struct._cmsTagLinkedList_st, %struct._cmsTagLinkedList_st* %22, i64 0, i32 2
  %33 = bitcast %struct._cmsTagLinkedList_st** %32 to i8**
  store i8* %24, i8** %33, align 8
  br label %34

34:                                               ; preds = %31, %27
  %35 = icmp eq %struct._cmsTagLinkedList_st* %19, null
  br i1 %35, label %36, label %37

36:                                               ; preds = %34
  store i8* %24, i8** %17, align 8
  br label %37

37:                                               ; preds = %36, %34
  %38 = phi %struct._cmsTagLinkedList_st* [ %25, %36 ], [ %19, %34 ]
  %39 = getelementptr inbounds %struct._cmsTagLinkedList_st, %struct._cmsTagLinkedList_st* %21, i64 0, i32 2
  %40 = load %struct._cmsTagLinkedList_st*, %struct._cmsTagLinkedList_st** %39, align 8
  %41 = icmp eq %struct._cmsTagLinkedList_st* %40, null
  %42 = load %struct._cmsSubAllocator*, %struct._cmsSubAllocator** %14, align 8
  br i1 %41, label %43, label %18

43:                                               ; preds = %37, %5
  %44 = phi %struct._cmsSubAllocator* [ %15, %5 ], [ %42, %37 ]
  %45 = call i8* @_cmsSubAllocDup(%struct._cmsSubAllocator* %44, i8* nonnull %6, i32 8) #8
  %46 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %0, i64 0, i32 2, i64 9
  store i8* %45, i8** %46, align 8
  br label %47

47:                                               ; preds = %18, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  br label %53

48:                                               ; preds = %2
  %49 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %0, i64 0, i32 1
  %50 = load %struct._cmsSubAllocator*, %struct._cmsSubAllocator** %49, align 8
  %51 = tail call i8* @_cmsSubAllocDup(%struct._cmsSubAllocator* %50, i8* bitcast (%struct._cmsTagPluginChunkType* @_cmsAllocTagPluginChunk.TagPluginChunk to i8*), i32 8) #8
  %52 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %0, i64 0, i32 2, i64 9
  store i8* %51, i8** %52, align 8
  br label %53

53:                                               ; preds = %48, %47
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_cmsRegisterTagPlugin(%struct._cmsContext_struct*, %struct._cmsPluginBaseStruct* readonly) local_unnamed_addr #0 {
  %3 = tail call i8* @_cmsContextGetClientChunk(%struct._cmsContext_struct* %0, i32 9) #8
  %4 = icmp eq %struct._cmsPluginBaseStruct* %1, null
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = bitcast i8* %3 to %struct._cmsTagLinkedList_st**
  store %struct._cmsTagLinkedList_st* null, %struct._cmsTagLinkedList_st** %6, align 8
  br label %22

7:                                                ; preds = %2
  %8 = tail call i8* @_cmsPluginMalloc(%struct._cmsContext_struct* %0, i32 112) #8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %22, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct._cmsPluginBaseStruct, %struct._cmsPluginBaseStruct* %1, i64 1, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = bitcast i8* %8 to i32*
  store i32 %12, i32* %13, align 8
  %14 = getelementptr inbounds i8, i8* %8, i64 8
  %15 = getelementptr inbounds %struct._cmsPluginBaseStruct, %struct._cmsPluginBaseStruct* %1, i64 1, i32 2
  %16 = bitcast i32* %15 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %16, i64 96, i1 false)
  %17 = bitcast i8* %3 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds i8, i8* %8, i64 104
  %20 = bitcast i8* %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = bitcast i8* %3 to i8**
  store i8* %8, i8** %21, align 8
  br label %22

22:                                               ; preds = %7, %10, %5
  %23 = phi i32 [ 1, %5 ], [ 1, %10 ], [ 0, %7 ]
  ret i32 %23
}

declare i8* @_cmsPluginMalloc(%struct._cmsContext_struct*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.cmsTagDescriptor* @_cmsGetTagDescriptor(%struct._cmsContext_struct*, i32) local_unnamed_addr #0 {
  %3 = tail call i8* @_cmsContextGetClientChunk(%struct._cmsContext_struct* %0, i32 9) #8
  %4 = bitcast i8* %3 to %struct._cmsTagLinkedList_st**
  %5 = load %struct._cmsTagLinkedList_st*, %struct._cmsTagLinkedList_st** %4, align 8
  %6 = icmp eq %struct._cmsTagLinkedList_st* %5, null
  br i1 %6, label %18, label %7

7:                                                ; preds = %2, %14
  %8 = phi %struct._cmsTagLinkedList_st* [ %16, %14 ], [ %5, %2 ]
  %9 = getelementptr inbounds %struct._cmsTagLinkedList_st, %struct._cmsTagLinkedList_st* %8, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, %1
  br i1 %11, label %12, label %14

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct._cmsTagLinkedList_st, %struct._cmsTagLinkedList_st* %8, i64 0, i32 1
  br label %30

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct._cmsTagLinkedList_st, %struct._cmsTagLinkedList_st* %8, i64 0, i32 2
  %16 = load %struct._cmsTagLinkedList_st*, %struct._cmsTagLinkedList_st** %15, align 8
  %17 = icmp eq %struct._cmsTagLinkedList_st* %16, null
  br i1 %17, label %18, label %7

18:                                               ; preds = %14, %2
  br label %19

19:                                               ; preds = %18, %26
  %20 = phi %struct._cmsTagLinkedList_st* [ %28, %26 ], [ bitcast (<{ { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, [18 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, i32, i32, [17 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* }, { i32, { i32, i32, <{ i32, [19 x i32] }>, i32 (double, i8*)* }, %struct._cmsTagLinkedList_st* } }>* @SupportedTags to %struct._cmsTagLinkedList_st*), %18 ]
  %21 = getelementptr inbounds %struct._cmsTagLinkedList_st, %struct._cmsTagLinkedList_st* %20, i64 0, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, %1
  br i1 %23, label %24, label %26

24:                                               ; preds = %19
  %25 = getelementptr inbounds %struct._cmsTagLinkedList_st, %struct._cmsTagLinkedList_st* %20, i64 0, i32 1
  br label %30

26:                                               ; preds = %19
  %27 = getelementptr inbounds %struct._cmsTagLinkedList_st, %struct._cmsTagLinkedList_st* %20, i64 0, i32 2
  %28 = load %struct._cmsTagLinkedList_st*, %struct._cmsTagLinkedList_st** %27, align 8
  %29 = icmp eq %struct._cmsTagLinkedList_st* %28, null
  br i1 %29, label %30, label %19

30:                                               ; preds = %26, %24, %12
  %31 = phi %struct.cmsTagDescriptor* [ %13, %12 ], [ %25, %24 ], [ null, %26 ]
  ret %struct.cmsTagDescriptor* %31
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_Chromaticity_Read(%struct._cms_typehandler_struct* nocapture readonly, %struct._cms_io_handler*, i32* nocapture, i32) #0 {
  %5 = alloca i16, align 2
  %6 = alloca i16, align 2
  %7 = bitcast i16* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %7) #8
  store i16 -21846, i16* %5, align 2
  %8 = bitcast i16* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %8) #8
  store i16 -21846, i16* %6, align 2
  store i32 0, i32* %2, align 4
  %9 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %10 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %9, align 8
  %11 = tail call i8* @_cmsMallocZero(%struct._cmsContext_struct* %10, i32 72) #8
  %12 = icmp eq i8* %11, null
  br i1 %12, label %73, label %13

13:                                               ; preds = %4
  %14 = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %1, i16* nonnull %5) #8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %71, label %16

16:                                               ; preds = %13
  %17 = load i16, i16* %5, align 2
  %18 = icmp eq i16 %17, 0
  %19 = icmp eq i32 %3, 32
  %20 = and i1 %19, %18
  br i1 %20, label %21, label %29

21:                                               ; preds = %16
  %22 = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %1, i16* null) #8
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %71, label %24

24:                                               ; preds = %21
  %25 = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %1, i16* nonnull %5) #8
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %71, label %27

27:                                               ; preds = %24
  %28 = load i16, i16* %5, align 2
  br label %29

29:                                               ; preds = %27, %16
  %30 = phi i16 [ %28, %27 ], [ %17, %16 ]
  %31 = icmp eq i16 %30, 3
  br i1 %31, label %32, label %71

32:                                               ; preds = %29
  %33 = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %1, i16* nonnull %6) #8
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %71, label %35

35:                                               ; preds = %32
  %36 = bitcast i8* %11 to double*
  %37 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %1, double* nonnull %36) #8
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %71, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds i8, i8* %11, i64 8
  %41 = bitcast i8* %40 to double*
  %42 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %1, double* %41) #8
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %71, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds i8, i8* %11, i64 16
  %46 = bitcast i8* %45 to double*
  store double 1.000000e+00, double* %46, align 8
  %47 = getelementptr inbounds i8, i8* %11, i64 24
  %48 = bitcast i8* %47 to double*
  %49 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %1, double* %48) #8
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %71, label %51

51:                                               ; preds = %44
  %52 = getelementptr inbounds i8, i8* %11, i64 32
  %53 = bitcast i8* %52 to double*
  %54 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %1, double* %53) #8
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %71, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds i8, i8* %11, i64 40
  %58 = bitcast i8* %57 to double*
  store double 1.000000e+00, double* %58, align 8
  %59 = getelementptr inbounds i8, i8* %11, i64 48
  %60 = bitcast i8* %59 to double*
  %61 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %1, double* %60) #8
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %71, label %63

63:                                               ; preds = %56
  %64 = getelementptr inbounds i8, i8* %11, i64 56
  %65 = bitcast i8* %64 to double*
  %66 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %1, double* %65) #8
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %71, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds i8, i8* %11, i64 64
  %70 = bitcast i8* %69 to double*
  store double 1.000000e+00, double* %70, align 8
  store i32 1, i32* %2, align 4
  br label %73

71:                                               ; preds = %24, %21, %63, %56, %51, %44, %39, %35, %32, %29, %13
  %72 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %9, align 8
  call void @_cmsFree(%struct._cmsContext_struct* %72, i8* nonnull %11) #8
  br label %73

73:                                               ; preds = %4, %71, %68
  %74 = phi i8* [ null, %71 ], [ %11, %68 ], [ null, %4 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %7) #8
  ret i8* %74
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @Type_Chromaticity_Write(%struct._cms_typehandler_struct* nocapture readnone, %struct._cms_io_handler*, i8* nocapture readonly, i32) #0 {
  %5 = tail call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %1, i16 zeroext 3) #8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %52, label %7

7:                                                ; preds = %4
  %8 = tail call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %1, i16 zeroext 0) #8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %52, label %10

10:                                               ; preds = %7
  %11 = bitcast i8* %2 to double*
  %12 = load double, double* %11, align 8
  %13 = getelementptr inbounds i8, i8* %2, i64 8
  %14 = bitcast i8* %13 to double*
  %15 = load double, double* %14, align 8
  %16 = tail call i32 @_cmsDoubleTo15Fixed16(double %12) #8
  %17 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %16) #8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %52, label %19

19:                                               ; preds = %10
  %20 = tail call i32 @_cmsDoubleTo15Fixed16(double %15) #8
  %21 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %20) #8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %52, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds i8, i8* %2, i64 24
  %25 = bitcast i8* %24 to double*
  %26 = load double, double* %25, align 8
  %27 = getelementptr inbounds i8, i8* %2, i64 32
  %28 = bitcast i8* %27 to double*
  %29 = load double, double* %28, align 8
  %30 = tail call i32 @_cmsDoubleTo15Fixed16(double %26) #8
  %31 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %30) #8
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %52, label %33

33:                                               ; preds = %23
  %34 = tail call i32 @_cmsDoubleTo15Fixed16(double %29) #8
  %35 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %34) #8
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %52, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds i8, i8* %2, i64 48
  %39 = bitcast i8* %38 to double*
  %40 = load double, double* %39, align 8
  %41 = getelementptr inbounds i8, i8* %2, i64 56
  %42 = bitcast i8* %41 to double*
  %43 = load double, double* %42, align 8
  %44 = tail call i32 @_cmsDoubleTo15Fixed16(double %40) #8
  %45 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %44) #8
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %37
  %48 = tail call i32 @_cmsDoubleTo15Fixed16(double %43) #8
  %49 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %48) #8
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %37, %47
  br label %52

52:                                               ; preds = %23, %10, %51, %47, %33, %19, %7, %4
  %53 = phi i32 [ 0, %4 ], [ 0, %7 ], [ 0, %19 ], [ 0, %33 ], [ 0, %51 ], [ 1, %47 ], [ 0, %10 ], [ 0, %23 ]
  ret i32 %53
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_Chromaticity_Dup(%struct._cms_typehandler_struct* nocapture readonly, i8*, i32) #0 {
  %4 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %5 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %4, align 8
  %6 = tail call i8* @_cmsDupMem(%struct._cmsContext_struct* %5, i8* %1, i32 72) #8
  ret i8* %6
}

; Function Attrs: nounwind ssp uwtable
define internal void @Type_Chromaticity_Free(%struct._cms_typehandler_struct* nocapture readonly, i8*) #0 {
  %3 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %4 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %3, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %4, i8* %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_ColorantOrderType_Read(%struct._cms_typehandler_struct* nocapture readonly, %struct._cms_io_handler*, i32* nocapture, i32) #0 {
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #8
  store i32 -1431655766, i32* %5, align 4
  store i32 0, i32* %2, align 4
  %7 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* nonnull %5) #8
  %8 = icmp eq i32 %7, 0
  %9 = load i32, i32* %5, align 4
  %10 = icmp ugt i32 %9, 16
  %11 = or i1 %8, %10
  br i1 %11, label %27, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %14 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %13, align 8
  %15 = call i8* @_cmsCalloc(%struct._cmsContext_struct* %14, i32 16, i32 1) #8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %27, label %17

17:                                               ; preds = %12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %15, i8 -1, i64 16, i1 false)
  %18 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %1, i64 0, i32 5
  %19 = load i32 (%struct._cms_io_handler*, i8*, i32, i32)*, i32 (%struct._cms_io_handler*, i8*, i32, i32)** %18, align 8
  %20 = load i32, i32* %5, align 4
  %21 = call i32 %19(%struct._cms_io_handler* %1, i8* nonnull %15, i32 1, i32 %20) #8
  %22 = load i32, i32* %5, align 4
  %23 = icmp eq i32 %21, %22
  br i1 %23, label %26, label %24

24:                                               ; preds = %17
  %25 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %13, align 8
  call void @_cmsFree(%struct._cmsContext_struct* %25, i8* nonnull %15) #8
  br label %27

26:                                               ; preds = %17
  store i32 1, i32* %2, align 4
  br label %27

27:                                               ; preds = %12, %4, %26, %24
  %28 = phi i8* [ null, %24 ], [ %15, %26 ], [ null, %4 ], [ null, %12 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #8
  ret i8* %28
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @Type_ColorantOrderType_Write(%struct._cms_typehandler_struct* nocapture readnone, %struct._cms_io_handler*, i8*, i32) #0 {
  %5 = bitcast i8* %2 to <16 x i8>*
  %6 = load <16 x i8>, <16 x i8>* %5, align 1
  %7 = icmp ne <16 x i8> %6, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %8 = zext <16 x i1> %7 to <16 x i32>
  %9 = shufflevector <16 x i32> %8, <16 x i32> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %10 = add nuw nsw <16 x i32> %9, %8
  %11 = shufflevector <16 x i32> %10, <16 x i32> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %12 = add nuw nsw <16 x i32> %10, %11
  %13 = shufflevector <16 x i32> %12, <16 x i32> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %14 = add nuw nsw <16 x i32> %12, %13
  %15 = shufflevector <16 x i32> %14, <16 x i32> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %16 = add nuw nsw <16 x i32> %14, %15
  %17 = extractelement <16 x i32> %16, i32 0
  %18 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %17) #8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %26, label %20

20:                                               ; preds = %4
  %21 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %1, i64 0, i32 9
  %22 = load i32 (%struct._cms_io_handler*, i32, i8*)*, i32 (%struct._cms_io_handler*, i32, i8*)** %21, align 8
  %23 = tail call i32 %22(%struct._cms_io_handler* %1, i32 %17, i8* %2) #8
  %24 = icmp ne i32 %23, 0
  %25 = zext i1 %24 to i32
  br label %26

26:                                               ; preds = %20, %4
  %27 = phi i32 [ 0, %4 ], [ %25, %20 ]
  ret i32 %27
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_ColorantOrderType_Dup(%struct._cms_typehandler_struct* nocapture readonly, i8*, i32) #0 {
  %4 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %5 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %4, align 8
  %6 = tail call i8* @_cmsDupMem(%struct._cmsContext_struct* %5, i8* %1, i32 16) #8
  ret i8* %6
}

; Function Attrs: nounwind ssp uwtable
define internal void @Type_ColorantOrderType_Free(%struct._cms_typehandler_struct* nocapture readonly, i8*) #0 {
  %3 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %4 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %3, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %4, i8* %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_S15Fixed16_Read(%struct._cms_typehandler_struct* nocapture readonly, %struct._cms_io_handler*, i32* nocapture, i32) #0 {
  store i32 0, i32* %2, align 4
  %5 = lshr i32 %3, 2
  %6 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %7 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %6, align 8
  %8 = tail call i8* @_cmsCalloc(%struct._cmsContext_struct* %7, i32 %5, i32 8) #8
  %9 = bitcast i8* %8 to double*
  %10 = icmp eq i8* %8, null
  br i1 %10, label %26, label %11

11:                                               ; preds = %4
  %12 = icmp eq i32 %5, 0
  br i1 %12, label %25, label %13

13:                                               ; preds = %11
  %14 = zext i32 %5 to i64
  br label %17

15:                                               ; preds = %17
  %16 = icmp eq i64 %22, %14
  br i1 %16, label %25, label %17

17:                                               ; preds = %15, %13
  %18 = phi i64 [ 0, %13 ], [ %22, %15 ]
  %19 = getelementptr inbounds double, double* %9, i64 %18
  %20 = tail call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %1, double* %19) #8
  %21 = icmp eq i32 %20, 0
  %22 = add nuw nsw i64 %18, 1
  br i1 %21, label %23, label %15

23:                                               ; preds = %17
  %24 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %6, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %24, i8* nonnull %8) #8
  br label %26

25:                                               ; preds = %15, %11
  store i32 %5, i32* %2, align 4
  br label %26

26:                                               ; preds = %4, %25, %23
  %27 = phi i8* [ null, %23 ], [ %8, %25 ], [ null, %4 ]
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @Type_S15Fixed16_Write(%struct._cms_typehandler_struct* nocapture readnone, %struct._cms_io_handler*, i8* nocapture readonly, i32) #0 {
  %5 = bitcast i8* %2 to double*
  %6 = icmp eq i32 %3, 0
  br i1 %6, label %18, label %7

7:                                                ; preds = %4
  %8 = zext i32 %3 to i64
  br label %11

9:                                                ; preds = %11
  %10 = icmp eq i64 %17, %8
  br i1 %10, label %18, label %11

11:                                               ; preds = %9, %7
  %12 = phi i64 [ 0, %7 ], [ %17, %9 ]
  %13 = getelementptr inbounds double, double* %5, i64 %12
  %14 = load double, double* %13, align 8
  %15 = tail call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %1, double %14) #8
  %16 = icmp eq i32 %15, 0
  %17 = add nuw nsw i64 %12, 1
  br i1 %16, label %18, label %9

18:                                               ; preds = %11, %9, %4
  %19 = phi i32 [ 1, %4 ], [ 1, %9 ], [ 0, %11 ]
  ret i32 %19
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_S15Fixed16_Dup(%struct._cms_typehandler_struct* nocapture readonly, i8*, i32) #0 {
  %4 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %5 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %4, align 8
  %6 = shl i32 %2, 3
  %7 = tail call i8* @_cmsDupMem(%struct._cmsContext_struct* %5, i8* %1, i32 %6) #8
  ret i8* %7
}

; Function Attrs: nounwind ssp uwtable
define internal void @Type_S15Fixed16_Free(%struct._cms_typehandler_struct* nocapture readonly, i8*) #0 {
  %3 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %4 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %3, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %4, i8* %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_U16Fixed16_Read(%struct._cms_typehandler_struct* nocapture readonly, %struct._cms_io_handler*, i32* nocapture, i32) #0 {
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #8
  store i32 -1431655766, i32* %5, align 4
  store i32 0, i32* %2, align 4
  %7 = lshr i32 %3, 2
  %8 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %9 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %8, align 8
  %10 = tail call i8* @_cmsCalloc(%struct._cmsContext_struct* %9, i32 %7, i32 8) #8
  %11 = bitcast i8* %10 to double*
  %12 = icmp eq i8* %10, null
  br i1 %12, label %31, label %13

13:                                               ; preds = %4
  %14 = icmp eq i32 %7, 0
  br i1 %14, label %30, label %15

15:                                               ; preds = %13
  %16 = zext i32 %7 to i64
  br label %17

17:                                               ; preds = %23, %15
  %18 = phi i64 [ 0, %15 ], [ %28, %23 ]
  %19 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* nonnull %5) #8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %17
  %22 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %8, align 8
  call void @_cmsFree(%struct._cmsContext_struct* %22, i8* nonnull %10) #8
  br label %31

23:                                               ; preds = %17
  %24 = load i32, i32* %5, align 4
  %25 = uitofp i32 %24 to double
  %26 = fmul double %25, 0x3EF0000000000000
  %27 = getelementptr inbounds double, double* %11, i64 %18
  store double %26, double* %27, align 8
  %28 = add nuw nsw i64 %18, 1
  %29 = icmp eq i64 %28, %16
  br i1 %29, label %30, label %17

30:                                               ; preds = %23, %13
  store i32 %7, i32* %2, align 4
  br label %31

31:                                               ; preds = %4, %30, %21
  %32 = phi i8* [ null, %21 ], [ %10, %30 ], [ null, %4 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #8
  ret i8* %32
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @Type_U16Fixed16_Write(%struct._cms_typehandler_struct* nocapture readnone, %struct._cms_io_handler*, i8* nocapture readonly, i32) #0 {
  %5 = bitcast i8* %2 to double*
  %6 = icmp eq i32 %3, 0
  br i1 %6, label %22, label %7

7:                                                ; preds = %4
  %8 = zext i32 %3 to i64
  br label %11

9:                                                ; preds = %11
  %10 = icmp eq i64 %21, %8
  br i1 %10, label %22, label %11

11:                                               ; preds = %9, %7
  %12 = phi i64 [ 0, %7 ], [ %21, %9 ]
  %13 = getelementptr inbounds double, double* %5, i64 %12
  %14 = load double, double* %13, align 8
  %15 = fmul double %14, 6.553600e+04
  %16 = fadd double %15, 5.000000e-01
  %17 = tail call double @llvm.floor.f64(double %16)
  %18 = fptoui double %17 to i32
  %19 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %18) #8
  %20 = icmp eq i32 %19, 0
  %21 = add nuw nsw i64 %12, 1
  br i1 %20, label %22, label %9

22:                                               ; preds = %11, %9, %4
  %23 = phi i32 [ 1, %4 ], [ 0, %11 ], [ 1, %9 ]
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_U16Fixed16_Dup(%struct._cms_typehandler_struct* nocapture readonly, i8*, i32) #0 {
  %4 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %5 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %4, align 8
  %6 = shl i32 %2, 3
  %7 = tail call i8* @_cmsDupMem(%struct._cmsContext_struct* %5, i8* %1, i32 %6) #8
  ret i8* %7
}

; Function Attrs: nounwind ssp uwtable
define internal void @Type_U16Fixed16_Free(%struct._cms_typehandler_struct* nocapture readonly, i8*) #0 {
  %3 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %4 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %3, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %4, i8* %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_Text_Read(%struct._cms_typehandler_struct* nocapture readonly, %struct._cms_io_handler*, i32* nocapture, i32) #0 {
  %5 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %6 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %5, align 8
  %7 = tail call %struct._cms_MLU_struct* @cmsMLUalloc(%struct._cmsContext_struct* %6, i32 1) #8
  %8 = icmp eq %struct._cms_MLU_struct* %7, null
  br i1 %8, label %32, label %9

9:                                                ; preds = %4
  store i32 0, i32* %2, align 4
  %10 = icmp eq i32 %3, -1
  br i1 %10, label %29, label %11

11:                                               ; preds = %9
  %12 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %5, align 8
  %13 = add nuw i32 %3, 1
  %14 = tail call i8* @_cmsMalloc(%struct._cmsContext_struct* %12, i32 %13) #8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %1, i64 0, i32 5
  %18 = load i32 (%struct._cms_io_handler*, i8*, i32, i32)*, i32 (%struct._cms_io_handler*, i8*, i32, i32)** %17, align 8
  %19 = tail call i32 %18(%struct._cms_io_handler* %1, i8* nonnull %14, i32 1, i32 %3) #8
  %20 = icmp eq i32 %19, %3
  br i1 %20, label %21, label %30

21:                                               ; preds = %16
  %22 = zext i32 %3 to i64
  %23 = getelementptr inbounds i8, i8* %14, i64 %22
  store i8 0, i8* %23, align 1
  store i32 1, i32* %2, align 4
  %24 = tail call i32 @cmsMLUsetASCII(%struct._cms_MLU_struct* nonnull %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8* nonnull %14) #8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %30, label %26

26:                                               ; preds = %21
  %27 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %5, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %27, i8* nonnull %14) #8
  %28 = bitcast %struct._cms_MLU_struct* %7 to i8*
  br label %32

29:                                               ; preds = %9, %11
  tail call void @cmsMLUfree(%struct._cms_MLU_struct* nonnull %7) #8
  br label %32

30:                                               ; preds = %21, %16
  tail call void @cmsMLUfree(%struct._cms_MLU_struct* nonnull %7) #8
  %31 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %5, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %31, i8* nonnull %14) #8
  br label %32

32:                                               ; preds = %29, %30, %4, %26
  %33 = phi i8* [ %28, %26 ], [ null, %4 ], [ null, %30 ], [ null, %29 ]
  ret i8* %33
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @Type_Text_Write(%struct._cms_typehandler_struct* nocapture readonly, %struct._cms_io_handler*, i8*, i32) #0 {
  %5 = bitcast i8* %2 to %struct._cms_MLU_struct*
  %6 = tail call i32 @cmsMLUgetASCII(%struct._cms_MLU_struct* %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8* null, i32 0) #8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %19, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %10 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %9, align 8
  %11 = tail call i8* @_cmsMalloc(%struct._cmsContext_struct* %10, i32 %6) #8
  %12 = icmp eq i8* %11, null
  br i1 %12, label %19, label %13

13:                                               ; preds = %8
  %14 = tail call i32 @cmsMLUgetASCII(%struct._cms_MLU_struct* %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8* nonnull %11, i32 %6) #8
  %15 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %1, i64 0, i32 9
  %16 = load i32 (%struct._cms_io_handler*, i32, i8*)*, i32 (%struct._cms_io_handler*, i32, i8*)** %15, align 8
  %17 = tail call i32 %16(%struct._cms_io_handler* %1, i32 %6, i8* nonnull %11) #8
  %18 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %9, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %18, i8* nonnull %11) #8
  br label %19

19:                                               ; preds = %8, %4, %13
  %20 = phi i32 [ %17, %13 ], [ 0, %4 ], [ 0, %8 ]
  ret i32 %20
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_Text_Dup(%struct._cms_typehandler_struct* nocapture readnone, i8*, i32) #0 {
  %4 = bitcast i8* %1 to %struct._cms_MLU_struct*
  %5 = tail call %struct._cms_MLU_struct* @cmsMLUdup(%struct._cms_MLU_struct* %4) #8
  %6 = bitcast %struct._cms_MLU_struct* %5 to i8*
  ret i8* %6
}

; Function Attrs: nounwind ssp uwtable
define internal void @Type_Text_Free(%struct._cms_typehandler_struct* nocapture readnone, i8*) #0 {
  %3 = bitcast i8* %1 to %struct._cms_MLU_struct*
  tail call void @cmsMLUfree(%struct._cms_MLU_struct* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_Text_Description_Read(%struct._cms_typehandler_struct* nocapture readonly, %struct._cms_io_handler*, i32* nocapture, i32) #0 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i16, align 2
  %9 = alloca i16, align 2
  %10 = alloca i8, align 1
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #8
  store i32 -1431655766, i32* %5, align 4
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #8
  store i32 -1431655766, i32* %6, align 4
  %13 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #8
  store i32 -1431655766, i32* %7, align 4
  %14 = bitcast i16* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %14) #8
  store i16 -21846, i16* %8, align 2
  %15 = bitcast i16* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %15) #8
  store i16 -21846, i16* %9, align 2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #8
  store i8 -86, i8* %10, align 1
  store i32 0, i32* %2, align 4
  %16 = icmp ult i32 %3, 4
  br i1 %16, label %100, label %17

17:                                               ; preds = %4
  %18 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* nonnull %5) #8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %100, label %20

20:                                               ; preds = %17
  %21 = add i32 %3, -4
  %22 = load i32, i32* %5, align 4
  %23 = icmp ult i32 %21, %22
  br i1 %23, label %100, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %26 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %25, align 8
  %27 = call %struct._cms_MLU_struct* @cmsMLUalloc(%struct._cmsContext_struct* %26, i32 1) #8
  %28 = icmp eq %struct._cms_MLU_struct* %27, null
  br i1 %28, label %100, label %29

29:                                               ; preds = %24
  %30 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %25, align 8
  %31 = load i32, i32* %5, align 4
  %32 = add i32 %31, 1
  %33 = call i8* @_cmsMalloc(%struct._cmsContext_struct* %30, i32 %32) #8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %99, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %1, i64 0, i32 5
  %37 = load i32 (%struct._cms_io_handler*, i8*, i32, i32)*, i32 (%struct._cms_io_handler*, i8*, i32, i32)** %36, align 8
  %38 = load i32, i32* %5, align 4
  %39 = call i32 %37(%struct._cms_io_handler* %1, i8* nonnull %33, i32 1, i32 %38) #8
  %40 = load i32, i32* %5, align 4
  %41 = icmp eq i32 %39, %40
  br i1 %41, label %42, label %97

42:                                               ; preds = %35
  %43 = zext i32 %39 to i64
  %44 = getelementptr inbounds i8, i8* %33, i64 %43
  store i8 0, i8* %44, align 1
  %45 = call i32 @cmsMLUsetASCII(%struct._cms_MLU_struct* nonnull %27, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8* nonnull %33) #8
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %97, label %47

47:                                               ; preds = %42
  %48 = sub i32 %21, %39
  %49 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %25, align 8
  call void @_cmsFree(%struct._cmsContext_struct* %49, i8* nonnull %33) #8
  %50 = icmp ult i32 %48, 8
  br i1 %50, label %95, label %51

51:                                               ; preds = %47
  %52 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* nonnull %6) #8
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %95, label %54

54:                                               ; preds = %51
  %55 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* nonnull %7) #8
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %95, label %57

57:                                               ; preds = %54
  %58 = add i32 %48, -8
  %59 = zext i32 %58 to i64
  %60 = load i32, i32* %7, align 4
  %61 = zext i32 %60 to i64
  %62 = shl nuw nsw i64 %61, 1
  %63 = icmp ugt i64 %62, %59
  br i1 %63, label %95, label %64

64:                                               ; preds = %57
  %65 = icmp eq i32 %60, 0
  br i1 %65, label %77, label %69

66:                                               ; preds = %69
  %67 = load i32, i32* %7, align 4
  %68 = icmp ult i32 %74, %67
  br i1 %68, label %69, label %75

69:                                               ; preds = %64, %66
  %70 = phi i32 [ %74, %66 ], [ 0, %64 ]
  %71 = load i32 (%struct._cms_io_handler*, i8*, i32, i32)*, i32 (%struct._cms_io_handler*, i8*, i32, i32)** %36, align 8
  %72 = call i32 %71(%struct._cms_io_handler* %1, i8* nonnull %15, i32 2, i32 1) #8
  %73 = icmp eq i32 %72, 0
  %74 = add nuw i32 %70, 1
  br i1 %73, label %95, label %66

75:                                               ; preds = %66
  %76 = shl i32 %67, 1
  br label %77

77:                                               ; preds = %75, %64
  %78 = phi i32 [ 0, %64 ], [ %76, %75 ]
  %79 = sub i32 %58, %78
  %80 = icmp ugt i32 %79, 69
  br i1 %80, label %81, label %95

81:                                               ; preds = %77
  %82 = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %1, i16* nonnull %8) #8
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %95, label %84

84:                                               ; preds = %81
  %85 = call i32 @_cmsReadUInt8Number(%struct._cms_io_handler* %1, i8* nonnull %10) #8
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %95, label %89

87:                                               ; preds = %89
  %88 = icmp eq i32 %94, 67
  br i1 %88, label %95, label %89

89:                                               ; preds = %84, %87
  %90 = phi i32 [ %94, %87 ], [ 0, %84 ]
  %91 = load i32 (%struct._cms_io_handler*, i8*, i32, i32)*, i32 (%struct._cms_io_handler*, i8*, i32, i32)** %36, align 8
  %92 = call i32 %91(%struct._cms_io_handler* %1, i8* nonnull %15, i32 1, i32 1) #8
  %93 = icmp eq i32 %92, 0
  %94 = add nuw nsw i32 %90, 1
  br i1 %93, label %99, label %87

95:                                               ; preds = %69, %87, %84, %81, %54, %51, %77, %57, %47
  store i32 1, i32* %2, align 4
  %96 = bitcast %struct._cms_MLU_struct* %27 to i8*
  br label %100

97:                                               ; preds = %35, %42
  %98 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %25, align 8
  call void @_cmsFree(%struct._cmsContext_struct* %98, i8* nonnull %33) #8
  br label %99

99:                                               ; preds = %89, %29, %97
  call void @cmsMLUfree(%struct._cms_MLU_struct* nonnull %27) #8
  br label %100

100:                                              ; preds = %24, %20, %17, %4, %99, %95
  %101 = phi i8* [ null, %99 ], [ %96, %95 ], [ null, %4 ], [ null, %17 ], [ null, %20 ], [ null, %24 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %15) #8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %14) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #8
  ret i8* %101
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @Type_Text_Description_Write(%struct._cms_typehandler_struct* nocapture readonly, %struct._cms_io_handler*, i8*, i32) #0 {
  %5 = alloca [68 x i8], align 16
  %6 = bitcast i8* %2 to %struct._cms_MLU_struct*
  %7 = getelementptr inbounds [68 x i8], [68 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %7) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 0, i64 68, i1 false)
  %8 = tail call i32 @cmsMLUgetASCII(%struct._cms_MLU_struct* %6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8* null, i32 0) #8
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %11 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %10, align 8
  br i1 %9, label %12, label %17

12:                                               ; preds = %4
  %13 = tail call i8* @_cmsDupMem(%struct._cmsContext_struct* %11, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i32 1) #8
  %14 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %10, align 8
  %15 = tail call i8* @_cmsDupMem(%struct._cmsContext_struct* %14, i8* bitcast ([1 x i32]* @.str.2 to i8*), i32 4) #8
  %16 = bitcast i8* %15 to i32*
  br label %29

17:                                               ; preds = %4
  %18 = tail call i8* @_cmsCalloc(%struct._cmsContext_struct* %11, i32 %8, i32 1) #8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %103, label %20

20:                                               ; preds = %17
  %21 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %10, align 8
  %22 = tail call i8* @_cmsCalloc(%struct._cmsContext_struct* %21, i32 %8, i32 4) #8
  %23 = bitcast i8* %22 to i32*
  %24 = icmp eq i8* %22, null
  br i1 %24, label %90, label %25

25:                                               ; preds = %20
  %26 = tail call i32 @cmsMLUgetASCII(%struct._cms_MLU_struct* %6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8* nonnull %18, i32 %8) #8
  %27 = shl i32 %8, 2
  %28 = tail call i32 @cmsMLUgetWide(%struct._cms_MLU_struct* %6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull %23, i32 %27) #8
  br label %29

29:                                               ; preds = %25, %12
  %30 = phi i8* [ %13, %12 ], [ %18, %25 ]
  %31 = phi i8* [ %15, %12 ], [ %22, %25 ]
  %32 = phi i32* [ %16, %12 ], [ %23, %25 ]
  %33 = tail call i64 @strlen(i8* %30) #9
  %34 = trunc i64 %33 to i32
  %35 = add i32 %34, 1
  %36 = add i32 %34, 21
  %37 = shl i32 %35, 1
  %38 = add i32 %36, %37
  %39 = add i32 %38, 73
  %40 = and i32 %39, -4
  %41 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %35) #8
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %87, label %43

43:                                               ; preds = %29
  %44 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %1, i64 0, i32 9
  %45 = load i32 (%struct._cms_io_handler*, i32, i8*)*, i32 (%struct._cms_io_handler*, i32, i8*)** %44, align 8
  %46 = tail call i32 %45(%struct._cms_io_handler* %1, i32 %35, i8* %30) #8
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %87, label %48

48:                                               ; preds = %43
  %49 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 0) #8
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %87, label %51

51:                                               ; preds = %48
  %52 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %35) #8
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %87, label %54

54:                                               ; preds = %51
  %55 = icmp eq i32 %35, 0
  br i1 %55, label %68, label %56

56:                                               ; preds = %54
  %57 = zext i32 %35 to i64
  br label %60

58:                                               ; preds = %60
  %59 = icmp eq i64 %67, %57
  br i1 %59, label %68, label %60

60:                                               ; preds = %58, %56
  %61 = phi i64 [ 0, %56 ], [ %67, %58 ]
  %62 = getelementptr inbounds i32, i32* %32, i64 %61
  %63 = load i32, i32* %62, align 4
  %64 = trunc i32 %63 to i16
  %65 = tail call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %1, i16 zeroext %64) #8
  %66 = icmp eq i32 %65, 0
  %67 = add nuw nsw i64 %61, 1
  br i1 %66, label %87, label %58

68:                                               ; preds = %58, %54
  %69 = tail call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %1, i16 zeroext 0) #8
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %87, label %71

71:                                               ; preds = %68
  %72 = tail call i32 @_cmsWriteUInt8Number(%struct._cms_io_handler* %1, i8 zeroext 0) #8
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %87, label %74

74:                                               ; preds = %71
  %75 = load i32 (%struct._cms_io_handler*, i32, i8*)*, i32 (%struct._cms_io_handler*, i32, i8*)** %44, align 8
  %76 = call i32 %75(%struct._cms_io_handler* %1, i32 67, i8* nonnull %7) #8
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %87, label %78

78:                                               ; preds = %74
  %79 = sub i32 -70, %38
  %80 = add i32 %79, %40
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %86, label %82

82:                                               ; preds = %78
  %83 = load i32 (%struct._cms_io_handler*, i32, i8*)*, i32 (%struct._cms_io_handler*, i32, i8*)** %44, align 8
  %84 = call i32 %83(%struct._cms_io_handler* %1, i32 %80, i8* nonnull %7) #8
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %87, label %86

86:                                               ; preds = %82, %78
  br label %87

87:                                               ; preds = %60, %82, %74, %71, %68, %51, %48, %43, %29, %86
  %88 = phi i32 [ 1, %86 ], [ 0, %82 ], [ 0, %74 ], [ 0, %71 ], [ 0, %68 ], [ 0, %51 ], [ 0, %48 ], [ 0, %43 ], [ 0, %29 ], [ 0, %60 ]
  %89 = icmp eq i8* %30, null
  br i1 %89, label %96, label %90

90:                                               ; preds = %20, %87
  %91 = phi i32 [ %88, %87 ], [ 0, %20 ]
  %92 = phi i32* [ %32, %87 ], [ null, %20 ]
  %93 = phi i8* [ %31, %87 ], [ null, %20 ]
  %94 = phi i8* [ %30, %87 ], [ %18, %20 ]
  %95 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %10, align 8
  call void @_cmsFree(%struct._cmsContext_struct* %95, i8* nonnull %94) #8
  br label %96

96:                                               ; preds = %87, %90
  %97 = phi i32 [ %88, %87 ], [ %91, %90 ]
  %98 = phi i32* [ %32, %87 ], [ %92, %90 ]
  %99 = phi i8* [ %31, %87 ], [ %93, %90 ]
  %100 = icmp eq i32* %98, null
  br i1 %100, label %103, label %101

101:                                              ; preds = %96
  %102 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %10, align 8
  call void @_cmsFree(%struct._cmsContext_struct* %102, i8* %99) #8
  br label %103

103:                                              ; preds = %17, %96, %101
  %104 = phi i32 [ %97, %96 ], [ %97, %101 ], [ 0, %17 ]
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %7) #8
  ret i32 %104
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_Text_Description_Dup(%struct._cms_typehandler_struct* nocapture readnone, i8*, i32) #0 {
  %4 = bitcast i8* %1 to %struct._cms_MLU_struct*
  %5 = tail call %struct._cms_MLU_struct* @cmsMLUdup(%struct._cms_MLU_struct* %4) #8
  %6 = bitcast %struct._cms_MLU_struct* %5 to i8*
  ret i8* %6
}

; Function Attrs: nounwind ssp uwtable
define internal void @Type_Text_Description_Free(%struct._cms_typehandler_struct* nocapture readnone, i8*) #0 {
  %3 = bitcast i8* %1 to %struct._cms_MLU_struct*
  tail call void @cmsMLUfree(%struct._cms_MLU_struct* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_Curve_Read(%struct._cms_typehandler_struct* nocapture readonly, %struct._cms_io_handler*, i32* nocapture, i32) #0 {
  %5 = alloca i32, align 4
  %6 = alloca double, align 8
  %7 = alloca i16, align 2
  %8 = alloca double, align 8
  %9 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #8
  store i32 -1431655766, i32* %5, align 4
  store i32 0, i32* %2, align 4
  %10 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* nonnull %5) #8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %54, label %12

12:                                               ; preds = %4
  %13 = load i32, i32* %5, align 4
  switch i32 %13, label %38 [
    i32 0, label %14
    i32 1, label %24
  ]

14:                                               ; preds = %12
  %15 = bitcast double* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #8
  store double 1.000000e+00, double* %6, align 8
  %16 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %17 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %16, align 8
  %18 = call %struct._cms_curve_struct* @cmsBuildParametricToneCurve(%struct._cmsContext_struct* %17, i32 1, double* nonnull %6) #8
  %19 = icmp eq %struct._cms_curve_struct* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %14
  store i32 1, i32* %2, align 4
  %21 = bitcast %struct._cms_curve_struct* %18 to i8*
  br label %22

22:                                               ; preds = %14, %20
  %23 = phi i8* [ %21, %20 ], [ null, %14 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #8
  br label %54

24:                                               ; preds = %12
  %25 = bitcast i16* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %25) #8
  store i16 -21846, i16* %7, align 2
  %26 = bitcast double* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #8
  store double 0xFFFFFFFFFFFFFFFF, double* %8, align 8
  %27 = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %1, i16* nonnull %7) #8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %36, label %29

29:                                               ; preds = %24
  %30 = load i16, i16* %7, align 2
  %31 = call double @_cms8Fixed8toDouble(i16 zeroext %30) #8
  store double %31, double* %8, align 8
  store i32 1, i32* %2, align 4
  %32 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %33 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %32, align 8
  %34 = call %struct._cms_curve_struct* @cmsBuildParametricToneCurve(%struct._cmsContext_struct* %33, i32 1, double* nonnull %8) #8
  %35 = bitcast %struct._cms_curve_struct* %34 to i8*
  br label %36

36:                                               ; preds = %24, %29
  %37 = phi i8* [ %35, %29 ], [ null, %24 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %25) #8
  br label %54

38:                                               ; preds = %12
  %39 = icmp ugt i32 %13, 32767
  br i1 %39, label %54, label %40

40:                                               ; preds = %38
  %41 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %42 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %41, align 8
  %43 = call %struct._cms_curve_struct* @cmsBuildTabulatedToneCurve16(%struct._cmsContext_struct* %42, i32 %13, i16* null) #8
  %44 = icmp eq %struct._cms_curve_struct* %43, null
  br i1 %44, label %54, label %45

45:                                               ; preds = %40
  %46 = load i32, i32* %5, align 4
  %47 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %43, i64 0, i32 6
  %48 = load i16*, i16** %47, align 8
  %49 = call i32 @_cmsReadUInt16Array(%struct._cms_io_handler* %1, i32 %46, i16* %48) #8
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %45
  call void @cmsFreeToneCurve(%struct._cms_curve_struct* nonnull %43) #8
  br label %54

52:                                               ; preds = %45
  store i32 1, i32* %2, align 4
  %53 = bitcast %struct._cms_curve_struct* %43 to i8*
  br label %54

54:                                               ; preds = %40, %38, %4, %52, %51, %36, %22
  %55 = phi i8* [ %53, %52 ], [ null, %51 ], [ %37, %36 ], [ %23, %22 ], [ null, %4 ], [ null, %38 ], [ null, %40 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #8
  ret i8* %55
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @Type_Curve_Write(%struct._cms_typehandler_struct* nocapture readnone, %struct._cms_io_handler*, i8* nocapture readonly, i32) #0 {
  %5 = getelementptr inbounds i8, i8* %2, i64 8
  %6 = bitcast i8* %5 to i32*
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %26

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %2, i64 16
  %11 = bitcast i8* %10 to %struct.cmsCurveSegment**
  %12 = load %struct.cmsCurveSegment*, %struct.cmsCurveSegment** %11, align 8
  %13 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %12, i64 0, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %26

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %12, i64 0, i32 3, i64 0
  %18 = load double, double* %17, align 8
  %19 = tail call zeroext i16 @_cmsDoubleTo8Fixed8(double %18) #8
  %20 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 1) #8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %38, label %22

22:                                               ; preds = %16
  %23 = tail call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %1, i16 zeroext %19) #8
  %24 = icmp ne i32 %23, 0
  %25 = zext i1 %24 to i32
  br label %38

26:                                               ; preds = %9, %4
  %27 = getelementptr inbounds i8, i8* %2, i64 40
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 8
  %30 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %29) #8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %38, label %32

32:                                               ; preds = %26
  %33 = load i32, i32* %28, align 8
  %34 = getelementptr inbounds i8, i8* %2, i64 48
  %35 = bitcast i8* %34 to i16**
  %36 = load i16*, i16** %35, align 8
  %37 = tail call i32 @_cmsWriteUInt16Array(%struct._cms_io_handler* %1, i32 %33, i16* %36) #8
  br label %38

38:                                               ; preds = %26, %16, %22, %32
  %39 = phi i32 [ %37, %32 ], [ 0, %16 ], [ %25, %22 ], [ 0, %26 ]
  ret i32 %39
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_Curve_Dup(%struct._cms_typehandler_struct* nocapture readnone, i8*, i32) #0 {
  %4 = bitcast i8* %1 to %struct._cms_curve_struct*
  %5 = tail call %struct._cms_curve_struct* @cmsDupToneCurve(%struct._cms_curve_struct* %4) #8
  %6 = bitcast %struct._cms_curve_struct* %5 to i8*
  ret i8* %6
}

; Function Attrs: nounwind ssp uwtable
define internal void @Type_Curve_Free(%struct._cms_typehandler_struct* nocapture readnone, i8*) #0 {
  %3 = bitcast i8* %1 to %struct._cms_curve_struct*
  tail call void @cmsFreeToneCurve(%struct._cms_curve_struct* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_ParametricCurve_Read(%struct._cms_typehandler_struct* nocapture readonly, %struct._cms_io_handler*, i32* nocapture, i32) #0 {
  %5 = alloca [10 x double], align 16
  %6 = alloca i16, align 2
  %7 = bitcast [10 x double]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %7) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -1, i64 80, i1 false)
  %8 = bitcast i16* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %8) #8
  store i16 -21846, i16* %6, align 2
  %9 = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %1, i16* nonnull %6) #8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %43, label %11

11:                                               ; preds = %4
  %12 = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %1, i16* null) #8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %43, label %14

14:                                               ; preds = %11
  %15 = load i16, i16* %6, align 2
  %16 = icmp ugt i16 %15, 4
  br i1 %16, label %17, label %21

17:                                               ; preds = %14
  %18 = zext i16 %15 to i32
  %19 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %20 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %19, align 8
  call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %20, i32 8, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.3, i64 0, i64 0), i32 %18) #8
  br label %43

21:                                               ; preds = %14
  %22 = getelementptr inbounds [10 x double], [10 x double]* %5, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 0, i64 80, i1 false)
  %23 = zext i16 %15 to i64
  %24 = getelementptr inbounds [5 x i32], [5 x i32]* @Type_ParametricCurve_Read.ParamsByType, i64 0, i64 %23
  %25 = load i32, i32* %24, align 4
  %26 = sext i32 %25 to i64
  br label %29

27:                                               ; preds = %29
  %28 = icmp slt i64 %34, %26
  br i1 %28, label %29, label %35

29:                                               ; preds = %21, %27
  %30 = phi i64 [ 0, %21 ], [ %34, %27 ]
  %31 = getelementptr inbounds [10 x double], [10 x double]* %5, i64 0, i64 %30
  %32 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %1, double* %31) #8
  %33 = icmp eq i32 %32, 0
  %34 = add nuw nsw i64 %30, 1
  br i1 %33, label %43, label %27

35:                                               ; preds = %27
  %36 = load i16, i16* %6, align 2
  %37 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %38 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %37, align 8
  %39 = zext i16 %36 to i32
  %40 = add nuw nsw i32 %39, 1
  %41 = call %struct._cms_curve_struct* @cmsBuildParametricToneCurve(%struct._cmsContext_struct* %38, i32 %40, double* nonnull %22) #8
  store i32 1, i32* %2, align 4
  %42 = bitcast %struct._cms_curve_struct* %41 to i8*
  br label %43

43:                                               ; preds = %29, %11, %4, %35, %17
  %44 = phi i8* [ null, %17 ], [ %42, %35 ], [ null, %4 ], [ null, %11 ], [ null, %29 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %7) #8
  ret i8* %44
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @Type_ParametricCurve_Write(%struct._cms_typehandler_struct* nocapture readonly, %struct._cms_io_handler*, i8* nocapture readonly, i32) #0 {
  %5 = getelementptr inbounds i8, i8* %2, i64 16
  %6 = bitcast i8* %5 to %struct.cmsCurveSegment**
  %7 = load %struct.cmsCurveSegment*, %struct.cmsCurveSegment** %6, align 8
  %8 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %7, i64 0, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds i8, i8* %2, i64 8
  %11 = bitcast i8* %10 to i32*
  %12 = load i32, i32* %11, align 8
  %13 = icmp ugt i32 %12, 1
  %14 = icmp slt i32 %9, 1
  %15 = or i1 %14, %13
  br i1 %15, label %16, label %19

16:                                               ; preds = %4
  %17 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %18 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %17, align 8
  tail call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %18, i32 8, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.4, i64 0, i64 0)) #8
  br label %47

19:                                               ; preds = %4
  %20 = icmp sgt i32 %9, 5
  br i1 %20, label %21, label %24

21:                                               ; preds = %19
  %22 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %23 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %22, align 8
  tail call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %23, i32 8, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5, i64 0, i64 0)) #8
  br label %47

24:                                               ; preds = %19
  %25 = sext i32 %9 to i64
  %26 = getelementptr inbounds [6 x i32], [6 x i32]* @Type_ParametricCurve_Write.ParamsByType, i64 0, i64 %25
  %27 = load i32, i32* %26, align 4
  %28 = trunc i32 %9 to i16
  %29 = add nsw i16 %28, -1
  %30 = tail call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %1, i16 zeroext %29) #8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %47, label %32

32:                                               ; preds = %24
  %33 = tail call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %1, i16 zeroext 0) #8
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %47, label %35

35:                                               ; preds = %32
  %36 = sext i32 %27 to i64
  br label %39

37:                                               ; preds = %39
  %38 = icmp slt i64 %46, %36
  br i1 %38, label %39, label %47

39:                                               ; preds = %35, %37
  %40 = phi i64 [ 0, %35 ], [ %46, %37 ]
  %41 = load %struct.cmsCurveSegment*, %struct.cmsCurveSegment** %6, align 8
  %42 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %41, i64 0, i32 3, i64 %40
  %43 = load double, double* %42, align 8
  %44 = tail call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %1, double %43) #8
  %45 = icmp eq i32 %44, 0
  %46 = add nuw nsw i64 %40, 1
  br i1 %45, label %47, label %37

47:                                               ; preds = %39, %37, %32, %24, %21, %16
  %48 = phi i32 [ 0, %16 ], [ 0, %21 ], [ 0, %24 ], [ 0, %32 ], [ 0, %39 ], [ 1, %37 ]
  ret i32 %48
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_ParametricCurve_Dup(%struct._cms_typehandler_struct* nocapture readnone, i8*, i32) #0 {
  %4 = bitcast i8* %1 to %struct._cms_curve_struct*
  %5 = tail call %struct._cms_curve_struct* @cmsDupToneCurve(%struct._cms_curve_struct* %4) #8
  %6 = bitcast %struct._cms_curve_struct* %5 to i8*
  ret i8* %6
}

; Function Attrs: nounwind ssp uwtable
define internal void @Type_ParametricCurve_Free(%struct._cms_typehandler_struct* nocapture readnone, i8*) #0 {
  %3 = bitcast i8* %1 to %struct._cms_curve_struct*
  tail call void @cmsFreeToneCurve(%struct._cms_curve_struct* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_DateTime_Read(%struct._cms_typehandler_struct* nocapture readonly, %struct._cms_io_handler*, i32* nocapture, i32) #0 {
  %5 = alloca %struct.cmsDateTimeNumber, align 2
  %6 = bitcast %struct.cmsDateTimeNumber* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #8
  %7 = bitcast %struct.cmsDateTimeNumber* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %7, i8 -86, i64 12, i1 false)
  store i32 0, i32* %2, align 4
  %8 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %9 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %8, align 8
  %10 = tail call i8* @_cmsMalloc(%struct._cmsContext_struct* %9, i32 56) #8
  %11 = bitcast i8* %10 to %struct.tm*
  %12 = icmp eq i8* %10, null
  br i1 %12, label %19, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %1, i64 0, i32 5
  %15 = load i32 (%struct._cms_io_handler*, i8*, i32, i32)*, i32 (%struct._cms_io_handler*, i8*, i32, i32)** %14, align 8
  %16 = call i32 %15(%struct._cms_io_handler* %1, i8* nonnull %6, i32 12, i32 1) #8
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %18, label %19

18:                                               ; preds = %13
  call void @_cmsDecodeDateTimeNumber(%struct.cmsDateTimeNumber* nonnull %5, %struct.tm* nonnull %11) #8
  store i32 1, i32* %2, align 4
  br label %19

19:                                               ; preds = %13, %4, %18
  %20 = phi i8* [ %10, %18 ], [ null, %4 ], [ null, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #8
  ret i8* %20
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @Type_DateTime_Write(%struct._cms_typehandler_struct* nocapture readnone, %struct._cms_io_handler*, i8*, i32) #0 {
  %5 = alloca %struct.cmsDateTimeNumber, align 2
  %6 = bitcast i8* %2 to %struct.tm*
  %7 = bitcast %struct.cmsDateTimeNumber* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %7) #8
  %8 = bitcast %struct.cmsDateTimeNumber* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %8, i8 -86, i64 12, i1 false)
  call void @_cmsEncodeDateTimeNumber(%struct.cmsDateTimeNumber* nonnull %5, %struct.tm* %6) #8
  %9 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %1, i64 0, i32 9
  %10 = load i32 (%struct._cms_io_handler*, i32, i8*)*, i32 (%struct._cms_io_handler*, i32, i8*)** %9, align 8
  %11 = call i32 %10(%struct._cms_io_handler* %1, i32 12, i8* nonnull %7) #8
  %12 = icmp ne i32 %11, 0
  %13 = zext i1 %12 to i32
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %7) #8
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_DateTime_Dup(%struct._cms_typehandler_struct* nocapture readonly, i8*, i32) #0 {
  %4 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %5 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %4, align 8
  %6 = tail call i8* @_cmsDupMem(%struct._cmsContext_struct* %5, i8* %1, i32 56) #8
  ret i8* %6
}

; Function Attrs: nounwind ssp uwtable
define internal void @Type_DateTime_Free(%struct._cms_typehandler_struct* nocapture readonly, i8*) #0 {
  %3 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %4 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %3, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %4, i8* %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_LUT8_Read(%struct._cms_typehandler_struct* nocapture readonly, %struct._cms_io_handler*, i32* nocapture, i32) #0 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca [9 x double], align 16
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #8
  store i8 -86, i8* %5, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #8
  store i8 -86, i8* %6, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #8
  store i8 -86, i8* %7, align 1
  %9 = bitcast [9 x double]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -1, i64 72, i1 false)
  store i32 0, i32* %2, align 4
  %10 = call i32 @_cmsReadUInt8Number(%struct._cms_io_handler* %1, i8* nonnull %5) #8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %301, label %12

12:                                               ; preds = %4
  %13 = call i32 @_cmsReadUInt8Number(%struct._cms_io_handler* %1, i8* nonnull %6) #8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %301, label %15

15:                                               ; preds = %12
  %16 = call i32 @_cmsReadUInt8Number(%struct._cms_io_handler* %1, i8* nonnull %7) #8
  %17 = icmp eq i32 %16, 0
  %18 = load i8, i8* %7, align 1
  %19 = icmp eq i8 %18, 1
  %20 = or i1 %17, %19
  br i1 %20, label %301, label %21

21:                                               ; preds = %15
  %22 = call i32 @_cmsReadUInt8Number(%struct._cms_io_handler* %1, i8* null) #8
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %301, label %24

24:                                               ; preds = %21
  %25 = load i8, i8* %5, align 1
  %26 = zext i8 %25 to i32
  %27 = add i8 %25, -1
  %28 = icmp ugt i8 %27, 15
  br i1 %28, label %301, label %29

29:                                               ; preds = %24
  %30 = load i8, i8* %6, align 1
  %31 = add i8 %30, -1
  %32 = icmp ugt i8 %31, 15
  br i1 %32, label %301, label %33

33:                                               ; preds = %29
  %34 = zext i8 %30 to i32
  %35 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %36 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %35, align 8
  %37 = call %struct._cmsPipeline_struct* @cmsPipelineAlloc(%struct._cmsContext_struct* %36, i32 %26, i32 %34) #8
  %38 = icmp eq %struct._cmsPipeline_struct* %37, null
  br i1 %38, label %301, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds [9 x double], [9 x double]* %8, i64 0, i64 0
  %41 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %1, double* nonnull %40) #8
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %300, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds [9 x double], [9 x double]* %8, i64 0, i64 1
  %45 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %1, double* %44) #8
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %300, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds [9 x double], [9 x double]* %8, i64 0, i64 2
  %49 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %1, double* %48) #8
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %300, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds [9 x double], [9 x double]* %8, i64 0, i64 3
  %53 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %1, double* %52) #8
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %300, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds [9 x double], [9 x double]* %8, i64 0, i64 4
  %57 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %1, double* %56) #8
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %300, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds [9 x double], [9 x double]* %8, i64 0, i64 5
  %61 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %1, double* %60) #8
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %300, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds [9 x double], [9 x double]* %8, i64 0, i64 6
  %65 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %1, double* %64) #8
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %300, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds [9 x double], [9 x double]* %8, i64 0, i64 7
  %69 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %1, double* %68) #8
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %300, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds [9 x double], [9 x double]* %8, i64 0, i64 8
  %73 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %1, double* %72) #8
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %300, label %75

75:                                               ; preds = %71
  %76 = load i8, i8* %5, align 1
  %77 = icmp eq i8 %76, 3
  br i1 %77, label %78, label %87

78:                                               ; preds = %75
  %79 = bitcast [9 x double]* %8 to %struct.cmsMAT3*
  %80 = call i32 @_cmsMAT3isIdentity(%struct.cmsMAT3* nonnull %79) #8
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %87

82:                                               ; preds = %78
  %83 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %35, align 8
  %84 = call %struct._cmsStage_struct* @cmsStageAllocMatrix(%struct._cmsContext_struct* %83, i32 3, i32 3, double* nonnull %40, double* null) #8
  %85 = call i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct* nonnull %37, i32 0, %struct._cmsStage_struct* %84) #8
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %300, label %87

87:                                               ; preds = %82, %78, %75
  %88 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %35, align 8
  %89 = load i8, i8* %5, align 1
  %90 = zext i8 %89 to i32
  %91 = call fastcc i32 @Read8bitTables(%struct._cmsContext_struct* %88, %struct._cms_io_handler* %1, %struct._cmsPipeline_struct* nonnull %37, i32 %90)
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %300, label %93

93:                                               ; preds = %87
  %94 = load i8, i8* %6, align 1
  %95 = zext i8 %94 to i32
  %96 = load i8, i8* %7, align 1
  %97 = zext i8 %96 to i32
  %98 = load i8, i8* %5, align 1
  %99 = zext i8 %98 to i32
  %100 = icmp eq i8 %96, 0
  %101 = icmp eq i8 %94, 0
  %102 = or i1 %101, %100
  br i1 %102, label %293, label %103

103:                                              ; preds = %93
  %104 = icmp eq i8 %98, 0
  br i1 %104, label %115, label %105

105:                                              ; preds = %103
  %106 = udiv i32 -1, %97
  br label %109

107:                                              ; preds = %109
  %108 = icmp eq i32 %114, 0
  br i1 %108, label %115, label %109

109:                                              ; preds = %107, %105
  %110 = phi i32 [ 1, %105 ], [ %112, %107 ]
  %111 = phi i32 [ %99, %105 ], [ %114, %107 ]
  %112 = mul i32 %110, %97
  %113 = icmp ugt i32 %112, %106
  %114 = add nsw i32 %111, -1
  br i1 %113, label %300, label %107

115:                                              ; preds = %107, %103
  %116 = phi i32 [ 1, %103 ], [ %112, %107 ]
  %117 = mul i32 %116, %95
  %118 = udiv i32 %117, %95
  %119 = icmp eq i32 %116, %118
  br i1 %119, label %120, label %300

120:                                              ; preds = %115
  switch i32 %117, label %121 [
    i32 -1, label %300
    i32 0, label %293
  ]

121:                                              ; preds = %120
  %122 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %35, align 8
  %123 = call i8* @_cmsCalloc(%struct._cmsContext_struct* %122, i32 %117, i32 2) #8
  %124 = bitcast i8* %123 to i16*
  %125 = icmp eq i8* %123, null
  br i1 %125, label %300, label %126

126:                                              ; preds = %121
  %127 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %35, align 8
  %128 = call i8* @_cmsMalloc(%struct._cmsContext_struct* %127, i32 %117) #8
  %129 = icmp eq i8* %128, null
  br i1 %129, label %130, label %132

130:                                              ; preds = %126
  %131 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %35, align 8
  call void @_cmsFree(%struct._cmsContext_struct* %131, i8* nonnull %123) #8
  br label %300

132:                                              ; preds = %126
  %133 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %1, i64 0, i32 5
  %134 = load i32 (%struct._cms_io_handler*, i8*, i32, i32)*, i32 (%struct._cms_io_handler*, i8*, i32, i32)** %133, align 8
  %135 = call i32 %134(%struct._cms_io_handler* %1, i8* nonnull %128, i32 %117, i32 1) #8
  %136 = icmp eq i32 %135, 1
  br i1 %136, label %137, label %242

137:                                              ; preds = %132
  %138 = zext i32 %117 to i64
  %139 = icmp ult i32 %117, 16
  br i1 %139, label %140, label %164

140:                                              ; preds = %240, %164, %137
  %141 = phi i64 [ 0, %164 ], [ 0, %137 ], [ %172, %240 ]
  %142 = phi i16* [ %124, %164 ], [ %124, %137 ], [ %173, %240 ]
  %143 = xor i64 %141, -1
  %144 = add nsw i64 %143, %138
  %145 = and i64 %138, 3
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %160, label %147

147:                                              ; preds = %140, %147
  %148 = phi i64 [ %157, %147 ], [ %141, %140 ]
  %149 = phi i16* [ %156, %147 ], [ %142, %140 ]
  %150 = phi i64 [ %158, %147 ], [ %145, %140 ]
  %151 = getelementptr inbounds i8, i8* %128, i64 %148
  %152 = load i8, i8* %151, align 1
  %153 = zext i8 %152 to i16
  %154 = shl nuw i16 %153, 8
  %155 = or i16 %154, %153
  %156 = getelementptr inbounds i16, i16* %149, i64 1
  store i16 %155, i16* %149, align 2
  %157 = add nuw nsw i64 %148, 1
  %158 = add i64 %150, -1
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %160, label %147, !llvm.loop !2

160:                                              ; preds = %147, %140
  %161 = phi i64 [ %141, %140 ], [ %157, %147 ]
  %162 = phi i16* [ %142, %140 ], [ %156, %147 ]
  %163 = icmp ult i64 %144, 3
  br i1 %163, label %277, label %245

164:                                              ; preds = %137
  %165 = shl nuw nsw i64 %138, 1
  %166 = getelementptr i8, i8* %123, i64 %165
  %167 = getelementptr i8, i8* %128, i64 %138
  %168 = icmp ult i8* %123, %167
  %169 = icmp ult i8* %128, %166
  %170 = and i1 %168, %169
  br i1 %170, label %140, label %171

171:                                              ; preds = %164
  %172 = and i64 %138, 4294967280
  %173 = getelementptr i16, i16* %124, i64 %172
  %174 = add nsw i64 %172, -16
  %175 = lshr exact i64 %174, 4
  %176 = add nuw nsw i64 %175, 1
  %177 = and i64 %176, 1
  %178 = icmp eq i64 %174, 0
  br i1 %178, label %220, label %179

179:                                              ; preds = %171
  %180 = sub nuw nsw i64 %176, %177
  br label %181

181:                                              ; preds = %181, %179
  %182 = phi i64 [ 0, %179 ], [ %217, %181 ]
  %183 = phi i64 [ %180, %179 ], [ %218, %181 ]
  %184 = getelementptr i16, i16* %124, i64 %182
  %185 = getelementptr inbounds i8, i8* %128, i64 %182
  %186 = bitcast i8* %185 to <8 x i8>*
  %187 = load <8 x i8>, <8 x i8>* %186, align 1, !alias.scope !4
  %188 = getelementptr inbounds i8, i8* %185, i64 8
  %189 = bitcast i8* %188 to <8 x i8>*
  %190 = load <8 x i8>, <8 x i8>* %189, align 1, !alias.scope !4
  %191 = zext <8 x i8> %187 to <8 x i16>
  %192 = zext <8 x i8> %190 to <8 x i16>
  %193 = shl nuw <8 x i16> %191, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %194 = shl nuw <8 x i16> %192, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %195 = or <8 x i16> %193, %191
  %196 = or <8 x i16> %194, %192
  %197 = bitcast i16* %184 to <8 x i16>*
  store <8 x i16> %195, <8 x i16>* %197, align 2, !alias.scope !7, !noalias !4
  %198 = getelementptr i16, i16* %184, i64 8
  %199 = bitcast i16* %198 to <8 x i16>*
  store <8 x i16> %196, <8 x i16>* %199, align 2, !alias.scope !7, !noalias !4
  %200 = or i64 %182, 16
  %201 = getelementptr i16, i16* %124, i64 %200
  %202 = getelementptr inbounds i8, i8* %128, i64 %200
  %203 = bitcast i8* %202 to <8 x i8>*
  %204 = load <8 x i8>, <8 x i8>* %203, align 1, !alias.scope !4
  %205 = getelementptr inbounds i8, i8* %202, i64 8
  %206 = bitcast i8* %205 to <8 x i8>*
  %207 = load <8 x i8>, <8 x i8>* %206, align 1, !alias.scope !4
  %208 = zext <8 x i8> %204 to <8 x i16>
  %209 = zext <8 x i8> %207 to <8 x i16>
  %210 = shl nuw <8 x i16> %208, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %211 = shl nuw <8 x i16> %209, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %212 = or <8 x i16> %210, %208
  %213 = or <8 x i16> %211, %209
  %214 = bitcast i16* %201 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %214, align 2, !alias.scope !7, !noalias !4
  %215 = getelementptr i16, i16* %201, i64 8
  %216 = bitcast i16* %215 to <8 x i16>*
  store <8 x i16> %213, <8 x i16>* %216, align 2, !alias.scope !7, !noalias !4
  %217 = add i64 %182, 32
  %218 = add i64 %183, -2
  %219 = icmp eq i64 %218, 0
  br i1 %219, label %220, label %181, !llvm.loop !9

220:                                              ; preds = %181, %171
  %221 = phi i64 [ 0, %171 ], [ %217, %181 ]
  %222 = icmp eq i64 %177, 0
  br i1 %222, label %240, label %223

223:                                              ; preds = %220
  %224 = getelementptr i16, i16* %124, i64 %221
  %225 = getelementptr inbounds i8, i8* %128, i64 %221
  %226 = bitcast i8* %225 to <8 x i8>*
  %227 = load <8 x i8>, <8 x i8>* %226, align 1, !alias.scope !4
  %228 = getelementptr inbounds i8, i8* %225, i64 8
  %229 = bitcast i8* %228 to <8 x i8>*
  %230 = load <8 x i8>, <8 x i8>* %229, align 1, !alias.scope !4
  %231 = zext <8 x i8> %227 to <8 x i16>
  %232 = zext <8 x i8> %230 to <8 x i16>
  %233 = shl nuw <8 x i16> %231, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %234 = shl nuw <8 x i16> %232, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %235 = or <8 x i16> %233, %231
  %236 = or <8 x i16> %234, %232
  %237 = bitcast i16* %224 to <8 x i16>*
  store <8 x i16> %235, <8 x i16>* %237, align 2, !alias.scope !7, !noalias !4
  %238 = getelementptr i16, i16* %224, i64 8
  %239 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %236, <8 x i16>* %239, align 2, !alias.scope !7, !noalias !4
  br label %240

240:                                              ; preds = %220, %223
  %241 = icmp eq i64 %172, %138
  br i1 %241, label %277, label %140

242:                                              ; preds = %132
  %243 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %35, align 8
  call void @_cmsFree(%struct._cmsContext_struct* %243, i8* nonnull %123) #8
  %244 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %35, align 8
  call void @_cmsFree(%struct._cmsContext_struct* %244, i8* nonnull %128) #8
  br label %300

245:                                              ; preds = %160, %245
  %246 = phi i64 [ %275, %245 ], [ %161, %160 ]
  %247 = phi i16* [ %274, %245 ], [ %162, %160 ]
  %248 = getelementptr inbounds i8, i8* %128, i64 %246
  %249 = load i8, i8* %248, align 1
  %250 = zext i8 %249 to i16
  %251 = shl nuw i16 %250, 8
  %252 = or i16 %251, %250
  %253 = getelementptr inbounds i16, i16* %247, i64 1
  store i16 %252, i16* %247, align 2
  %254 = add nuw nsw i64 %246, 1
  %255 = getelementptr inbounds i8, i8* %128, i64 %254
  %256 = load i8, i8* %255, align 1
  %257 = zext i8 %256 to i16
  %258 = shl nuw i16 %257, 8
  %259 = or i16 %258, %257
  %260 = getelementptr inbounds i16, i16* %247, i64 2
  store i16 %259, i16* %253, align 2
  %261 = add nuw nsw i64 %246, 2
  %262 = getelementptr inbounds i8, i8* %128, i64 %261
  %263 = load i8, i8* %262, align 1
  %264 = zext i8 %263 to i16
  %265 = shl nuw i16 %264, 8
  %266 = or i16 %265, %264
  %267 = getelementptr inbounds i16, i16* %247, i64 3
  store i16 %266, i16* %260, align 2
  %268 = add nuw nsw i64 %246, 3
  %269 = getelementptr inbounds i8, i8* %128, i64 %268
  %270 = load i8, i8* %269, align 1
  %271 = zext i8 %270 to i16
  %272 = shl nuw i16 %271, 8
  %273 = or i16 %272, %271
  %274 = getelementptr inbounds i16, i16* %247, i64 4
  store i16 %273, i16* %267, align 2
  %275 = add nuw nsw i64 %246, 4
  %276 = icmp eq i64 %275, %138
  br i1 %276, label %277, label %245, !llvm.loop !11

277:                                              ; preds = %160, %245, %240
  %278 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %35, align 8
  call void @_cmsFree(%struct._cmsContext_struct* %278, i8* nonnull %128) #8
  %279 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %35, align 8
  %280 = load i8, i8* %7, align 1
  %281 = zext i8 %280 to i32
  %282 = load i8, i8* %5, align 1
  %283 = zext i8 %282 to i32
  %284 = load i8, i8* %6, align 1
  %285 = zext i8 %284 to i32
  %286 = call %struct._cmsStage_struct* @cmsStageAllocCLut16bit(%struct._cmsContext_struct* %279, i32 %281, i32 %283, i32 %285, i16* nonnull %124) #8
  %287 = call i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct* nonnull %37, i32 1, %struct._cmsStage_struct* %286) #8
  %288 = icmp eq i32 %287, 0
  %289 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %35, align 8
  call void @_cmsFree(%struct._cmsContext_struct* %289, i8* nonnull %123) #8
  br i1 %288, label %300, label %290

290:                                              ; preds = %277
  %291 = load i8, i8* %6, align 1
  %292 = zext i8 %291 to i32
  br label %293

293:                                              ; preds = %290, %93, %120
  %294 = phi i32 [ %292, %290 ], [ %95, %93 ], [ %95, %120 ]
  %295 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %35, align 8
  %296 = call fastcc i32 @Read8bitTables(%struct._cmsContext_struct* %295, %struct._cms_io_handler* %1, %struct._cmsPipeline_struct* nonnull %37, i32 %294)
  %297 = icmp eq i32 %296, 0
  br i1 %297, label %300, label %298

298:                                              ; preds = %293
  store i32 1, i32* %2, align 4
  %299 = bitcast %struct._cmsPipeline_struct* %37 to i8*
  br label %301

300:                                              ; preds = %109, %293, %120, %115, %130, %242, %121, %277, %39, %43, %47, %51, %55, %59, %63, %67, %71, %82, %87
  call void @cmsPipelineFree(%struct._cmsPipeline_struct* nonnull %37) #8
  br label %301

301:                                              ; preds = %4, %12, %15, %21, %33, %29, %24, %300, %298
  %302 = phi i8* [ %299, %298 ], [ null, %300 ], [ null, %24 ], [ null, %29 ], [ null, %33 ], [ null, %21 ], [ null, %15 ], [ null, %12 ], [ null, %4 ]
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #8
  ret i8* %302
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @Type_LUT8_Write(%struct._cms_typehandler_struct* nocapture readonly, %struct._cms_io_handler*, i8* nocapture readonly, i32) #0 {
  %5 = bitcast i8* %2 to %struct._cmsStage_struct**
  %6 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %5, align 8
  %7 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %6, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 1835103334
  br i1 %9, label %10, label %16

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %6, i64 0, i32 8
  %12 = bitcast i8** %11 to %struct._cmsStageMatrixData**
  %13 = load %struct._cmsStageMatrixData*, %struct._cmsStageMatrixData** %12, align 8
  %14 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %6, i64 0, i32 9
  %15 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %14, align 8
  br label %16

16:                                               ; preds = %10, %4
  %17 = phi %struct._cmsStage_struct* [ %15, %10 ], [ %6, %4 ]
  %18 = phi %struct._cmsStageMatrixData* [ %13, %10 ], [ null, %4 ]
  %19 = icmp eq %struct._cmsStage_struct* %17, null
  br i1 %19, label %74, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %17, i64 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 1668707188
  br i1 %23, label %24, label %34

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %17, i64 0, i32 8
  %26 = bitcast i8** %25 to %struct._cmsStageToneCurvesData**
  %27 = load %struct._cmsStageToneCurvesData*, %struct._cmsStageToneCurvesData** %26, align 8
  %28 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %17, i64 0, i32 9
  %29 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %28, align 8
  %30 = icmp eq %struct._cmsStage_struct* %29, null
  br i1 %30, label %74, label %31

31:                                               ; preds = %24
  %32 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %29, i64 0, i32 1
  %33 = load i32, i32* %32, align 8
  br label %34

34:                                               ; preds = %31, %20
  %35 = phi i32 [ %33, %31 ], [ %22, %20 ]
  %36 = phi %struct._cmsStageToneCurvesData* [ %27, %31 ], [ null, %20 ]
  %37 = phi %struct._cmsStage_struct* [ %29, %31 ], [ %17, %20 ]
  %38 = icmp eq i32 %35, 1668052340
  br i1 %38, label %39, label %49

39:                                               ; preds = %34
  %40 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %37, i64 0, i32 8
  %41 = bitcast i8** %40 to %struct._cmsStageCLutData**
  %42 = load %struct._cmsStageCLutData*, %struct._cmsStageCLutData** %41, align 8
  %43 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %37, i64 0, i32 9
  %44 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %43, align 8
  %45 = icmp eq %struct._cmsStage_struct* %44, null
  br i1 %45, label %65, label %46

46:                                               ; preds = %39
  %47 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %44, i64 0, i32 1
  %48 = load i32, i32* %47, align 8
  br label %49

49:                                               ; preds = %46, %34
  %50 = phi i32 [ %48, %46 ], [ %35, %34 ]
  %51 = phi %struct._cmsStageCLutData* [ %42, %46 ], [ null, %34 ]
  %52 = phi %struct._cmsStage_struct* [ %44, %46 ], [ %37, %34 ]
  %53 = icmp eq i32 %50, 1668707188
  br i1 %53, label %54, label %61

54:                                               ; preds = %49
  %55 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %52, i64 0, i32 8
  %56 = bitcast i8** %55 to %struct._cmsStageToneCurvesData**
  %57 = load %struct._cmsStageToneCurvesData*, %struct._cmsStageToneCurvesData** %56, align 8
  %58 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %52, i64 0, i32 9
  %59 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %58, align 8
  %60 = icmp eq %struct._cmsStage_struct* %59, null
  br i1 %60, label %65, label %61

61:                                               ; preds = %49, %54
  %62 = phi %struct._cmsStage_struct* [ %59, %54 ], [ %52, %49 ]
  %63 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %62, i64 0, i32 0
  %64 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %63, align 8
  tail call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %64, i32 8, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.6, i64 0, i64 0)) #8
  br label %209

65:                                               ; preds = %39, %54
  %66 = phi %struct._cmsStageToneCurvesData* [ %57, %54 ], [ null, %39 ]
  %67 = phi %struct._cmsStageCLutData* [ %51, %54 ], [ %42, %39 ]
  %68 = icmp eq %struct._cmsStageCLutData* %67, null
  br i1 %68, label %74, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %struct._cmsStageCLutData, %struct._cmsStageCLutData* %67, i64 0, i32 1
  %71 = load %struct._cms_interp_struc*, %struct._cms_interp_struc** %70, align 8
  %72 = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %71, i64 0, i32 4, i64 0
  %73 = load i32, i32* %72, align 4
  br label %74

74:                                               ; preds = %16, %24, %65, %69
  %75 = phi %struct._cmsStageCLutData* [ %67, %69 ], [ null, %65 ], [ null, %24 ], [ null, %16 ]
  %76 = phi %struct._cmsStageToneCurvesData* [ %36, %69 ], [ %36, %65 ], [ %27, %24 ], [ null, %16 ]
  %77 = phi %struct._cmsStageToneCurvesData* [ %66, %69 ], [ %66, %65 ], [ null, %24 ], [ null, %16 ]
  %78 = phi i32 [ %73, %69 ], [ 0, %65 ], [ 0, %24 ], [ 0, %16 ]
  %79 = getelementptr inbounds i8, i8* %2, i64 8
  %80 = bitcast i8* %79 to i32*
  %81 = load i32, i32* %80, align 8
  %82 = trunc i32 %81 to i8
  %83 = tail call i32 @_cmsWriteUInt8Number(%struct._cms_io_handler* %1, i8 zeroext %82) #8
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %209, label %85

85:                                               ; preds = %74
  %86 = getelementptr inbounds i8, i8* %2, i64 12
  %87 = bitcast i8* %86 to i32*
  %88 = load i32, i32* %87, align 4
  %89 = trunc i32 %88 to i8
  %90 = tail call i32 @_cmsWriteUInt8Number(%struct._cms_io_handler* %1, i8 zeroext %89) #8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %209, label %92

92:                                               ; preds = %85
  %93 = trunc i32 %78 to i8
  %94 = tail call i32 @_cmsWriteUInt8Number(%struct._cms_io_handler* %1, i8 zeroext %93) #8
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %209, label %96

96:                                               ; preds = %92
  %97 = tail call i32 @_cmsWriteUInt8Number(%struct._cms_io_handler* %1, i8 zeroext 0) #8
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %209, label %99

99:                                               ; preds = %96
  %100 = load i32, i32* %80, align 8
  %101 = load i32, i32* %87, align 4
  %102 = mul i32 %101, %100
  %103 = icmp eq %struct._cmsStageMatrixData* %18, null
  br i1 %103, label %119, label %104

104:                                              ; preds = %99
  %105 = icmp eq i32 %102, 0
  br i1 %105, label %148, label %106

106:                                              ; preds = %104
  %107 = getelementptr inbounds %struct._cmsStageMatrixData, %struct._cmsStageMatrixData* %18, i64 0, i32 0
  %108 = zext i32 %102 to i64
  br label %111

109:                                              ; preds = %111
  %110 = icmp eq i64 %118, %108
  br i1 %110, label %148, label %111

111:                                              ; preds = %109, %106
  %112 = phi i64 [ 0, %106 ], [ %118, %109 ]
  %113 = load double*, double** %107, align 8
  %114 = getelementptr inbounds double, double* %113, i64 %112
  %115 = load double, double* %114, align 8
  %116 = tail call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %1, double %115) #8
  %117 = icmp eq i32 %116, 0
  %118 = add nuw nsw i64 %112, 1
  br i1 %117, label %209, label %109

119:                                              ; preds = %99
  %120 = icmp eq i32 %102, 9
  br i1 %120, label %121, label %209

121:                                              ; preds = %119
  %122 = tail call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %1, double 1.000000e+00) #8
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %209, label %124

124:                                              ; preds = %121
  %125 = tail call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %1, double 0.000000e+00) #8
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %209, label %127

127:                                              ; preds = %124
  %128 = tail call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %1, double 0.000000e+00) #8
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %209, label %130

130:                                              ; preds = %127
  %131 = tail call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %1, double 0.000000e+00) #8
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %209, label %133

133:                                              ; preds = %130
  %134 = tail call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %1, double 1.000000e+00) #8
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %209, label %136

136:                                              ; preds = %133
  %137 = tail call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %1, double 0.000000e+00) #8
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %209, label %139

139:                                              ; preds = %136
  %140 = tail call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %1, double 0.000000e+00) #8
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %209, label %142

142:                                              ; preds = %139
  %143 = tail call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %1, double 0.000000e+00) #8
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %209, label %145

145:                                              ; preds = %142
  %146 = tail call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %1, double 1.000000e+00) #8
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %209, label %148

148:                                              ; preds = %109, %104, %145
  %149 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %150 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %149, align 8
  %151 = load i32, i32* %80, align 8
  %152 = tail call fastcc i32 @Write8bitTables(%struct._cmsContext_struct* %150, %struct._cms_io_handler* %1, i32 %151, %struct._cmsStageToneCurvesData* %76)
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %209, label %154

154:                                              ; preds = %148
  %155 = load i32, i32* %87, align 4
  %156 = load i32, i32* %80, align 8
  %157 = icmp eq i32 %78, 0
  %158 = icmp eq i32 %155, 0
  %159 = or i1 %157, %158
  br i1 %159, label %203, label %160

160:                                              ; preds = %154
  %161 = icmp eq i32 %156, 0
  br i1 %161, label %172, label %162

162:                                              ; preds = %160
  %163 = udiv i32 -1, %78
  br label %166

164:                                              ; preds = %166
  %165 = icmp eq i32 %171, 0
  br i1 %165, label %172, label %166

166:                                              ; preds = %164, %162
  %167 = phi i32 [ 1, %162 ], [ %169, %164 ]
  %168 = phi i32 [ %156, %162 ], [ %171, %164 ]
  %169 = mul i32 %167, %78
  %170 = icmp ugt i32 %169, %163
  %171 = add i32 %168, -1
  br i1 %170, label %209, label %164

172:                                              ; preds = %164, %160
  %173 = phi i32 [ 1, %160 ], [ %169, %164 ]
  %174 = mul i32 %173, %155
  %175 = udiv i32 %174, %155
  %176 = icmp ne i32 %173, %175
  %177 = icmp eq i32 %174, -1
  %178 = or i1 %176, %177
  br i1 %178, label %209, label %179

179:                                              ; preds = %172
  %180 = icmp ne i32 %174, 0
  %181 = icmp ne %struct._cmsStageCLutData* %75, null
  %182 = and i1 %181, %180
  br i1 %182, label %183, label %203

183:                                              ; preds = %179
  %184 = getelementptr inbounds %struct._cmsStageCLutData, %struct._cmsStageCLutData* %75, i64 0, i32 0, i32 0
  %185 = zext i32 %174 to i64
  br label %188

186:                                              ; preds = %188
  %187 = icmp eq i64 %200, %185
  br i1 %187, label %201, label %188

188:                                              ; preds = %186, %183
  %189 = phi i64 [ 0, %183 ], [ %200, %186 ]
  %190 = load i16*, i16** %184, align 8
  %191 = getelementptr inbounds i16, i16* %190, i64 %189
  %192 = load i16, i16* %191, align 2
  %193 = zext i16 %192 to i32
  %194 = mul nuw i32 %193, 65281
  %195 = add nuw i32 %194, 8388608
  %196 = lshr i32 %195, 24
  %197 = trunc i32 %196 to i8
  %198 = tail call i32 @_cmsWriteUInt8Number(%struct._cms_io_handler* %1, i8 zeroext %197) #8
  %199 = icmp eq i32 %198, 0
  %200 = add nuw nsw i64 %189, 1
  br i1 %199, label %209, label %186

201:                                              ; preds = %186
  %202 = load i32, i32* %87, align 4
  br label %203

203:                                              ; preds = %201, %154, %179
  %204 = phi i32 [ %202, %201 ], [ %155, %154 ], [ %155, %179 ]
  %205 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %149, align 8
  %206 = tail call fastcc i32 @Write8bitTables(%struct._cmsContext_struct* %205, %struct._cms_io_handler* %1, i32 %204, %struct._cmsStageToneCurvesData* %77)
  %207 = icmp ne i32 %206, 0
  %208 = zext i1 %207 to i32
  br label %209

209:                                              ; preds = %111, %166, %188, %172, %203, %148, %145, %142, %139, %136, %133, %130, %127, %124, %121, %119, %96, %92, %85, %74, %61
  %210 = phi i32 [ 0, %61 ], [ 0, %74 ], [ 0, %85 ], [ 0, %92 ], [ 0, %96 ], [ 0, %119 ], [ 0, %121 ], [ 0, %124 ], [ 0, %127 ], [ 0, %130 ], [ 0, %133 ], [ 0, %136 ], [ 0, %139 ], [ 0, %142 ], [ 0, %145 ], [ 0, %148 ], [ %208, %203 ], [ 0, %172 ], [ 0, %188 ], [ 0, %166 ], [ 0, %111 ]
  ret i32 %210
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_LUT8_Dup(%struct._cms_typehandler_struct* nocapture readnone, i8*, i32) #0 {
  %4 = bitcast i8* %1 to %struct._cmsPipeline_struct*
  %5 = tail call %struct._cmsPipeline_struct* @cmsPipelineDup(%struct._cmsPipeline_struct* %4) #8
  %6 = bitcast %struct._cmsPipeline_struct* %5 to i8*
  ret i8* %6
}

; Function Attrs: nounwind ssp uwtable
define internal void @Type_LUT8_Free(%struct._cms_typehandler_struct* nocapture readnone, i8*) #0 {
  %3 = bitcast i8* %1 to %struct._cmsPipeline_struct*
  tail call void @cmsPipelineFree(%struct._cmsPipeline_struct* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_LUT16_Read(%struct._cms_typehandler_struct* nocapture readonly, %struct._cms_io_handler*, i32* nocapture, i32) #0 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca [9 x double], align 16
  %9 = alloca i16, align 2
  %10 = alloca i16, align 2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #8
  store i8 -86, i8* %5, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #8
  store i8 -86, i8* %6, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #8
  store i8 -86, i8* %7, align 1
  %11 = bitcast [9 x double]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %11) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -1, i64 72, i1 false)
  %12 = bitcast i16* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %12) #8
  store i16 -21846, i16* %9, align 2
  %13 = bitcast i16* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %13) #8
  store i16 -21846, i16* %10, align 2
  store i32 0, i32* %2, align 4
  %14 = call i32 @_cmsReadUInt8Number(%struct._cms_io_handler* %1, i8* nonnull %5) #8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %171, label %16

16:                                               ; preds = %4
  %17 = call i32 @_cmsReadUInt8Number(%struct._cms_io_handler* %1, i8* nonnull %6) #8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %171, label %19

19:                                               ; preds = %16
  %20 = call i32 @_cmsReadUInt8Number(%struct._cms_io_handler* %1, i8* nonnull %7) #8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %171, label %22

22:                                               ; preds = %19
  %23 = call i32 @_cmsReadUInt8Number(%struct._cms_io_handler* %1, i8* null) #8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %171, label %25

25:                                               ; preds = %22
  %26 = load i8, i8* %5, align 1
  %27 = zext i8 %26 to i32
  %28 = add i8 %26, -1
  %29 = icmp ugt i8 %28, 15
  br i1 %29, label %171, label %30

30:                                               ; preds = %25
  %31 = load i8, i8* %6, align 1
  %32 = add i8 %31, -1
  %33 = icmp ugt i8 %32, 15
  br i1 %33, label %171, label %34

34:                                               ; preds = %30
  %35 = zext i8 %31 to i32
  %36 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %37 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %36, align 8
  %38 = call %struct._cmsPipeline_struct* @cmsPipelineAlloc(%struct._cmsContext_struct* %37, i32 %27, i32 %35) #8
  %39 = icmp eq %struct._cmsPipeline_struct* %38, null
  br i1 %39, label %171, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds [9 x double], [9 x double]* %8, i64 0, i64 0
  %42 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %1, double* nonnull %41) #8
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %170, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds [9 x double], [9 x double]* %8, i64 0, i64 1
  %46 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %1, double* %45) #8
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %170, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds [9 x double], [9 x double]* %8, i64 0, i64 2
  %50 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %1, double* %49) #8
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %170, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds [9 x double], [9 x double]* %8, i64 0, i64 3
  %54 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %1, double* %53) #8
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %170, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds [9 x double], [9 x double]* %8, i64 0, i64 4
  %58 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %1, double* %57) #8
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %170, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds [9 x double], [9 x double]* %8, i64 0, i64 5
  %62 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %1, double* %61) #8
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %170, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds [9 x double], [9 x double]* %8, i64 0, i64 6
  %66 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %1, double* %65) #8
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %170, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds [9 x double], [9 x double]* %8, i64 0, i64 7
  %70 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %1, double* %69) #8
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %170, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds [9 x double], [9 x double]* %8, i64 0, i64 8
  %74 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %1, double* %73) #8
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %170, label %76

76:                                               ; preds = %72
  %77 = load i8, i8* %5, align 1
  %78 = icmp eq i8 %77, 3
  br i1 %78, label %79, label %88

79:                                               ; preds = %76
  %80 = bitcast [9 x double]* %8 to %struct.cmsMAT3*
  %81 = call i32 @_cmsMAT3isIdentity(%struct.cmsMAT3* nonnull %80) #8
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %79
  %84 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %36, align 8
  %85 = call %struct._cmsStage_struct* @cmsStageAllocMatrix(%struct._cmsContext_struct* %84, i32 3, i32 3, double* nonnull %41, double* null) #8
  %86 = call i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct* nonnull %38, i32 1, %struct._cmsStage_struct* %85) #8
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %170, label %88

88:                                               ; preds = %83, %79, %76
  %89 = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %1, i16* nonnull %9) #8
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %170, label %91

91:                                               ; preds = %88
  %92 = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %1, i16* nonnull %10) #8
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %170, label %94

94:                                               ; preds = %91
  %95 = load i16, i16* %9, align 2
  %96 = load i16, i16* %10, align 2
  %97 = or i16 %96, %95
  %98 = icmp slt i16 %97, 0
  %99 = load i8, i8* %7, align 1
  %100 = icmp eq i8 %99, 1
  %101 = or i1 %98, %100
  br i1 %101, label %170, label %102

102:                                              ; preds = %94
  %103 = zext i16 %95 to i32
  %104 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %36, align 8
  %105 = load i8, i8* %5, align 1
  %106 = zext i8 %105 to i32
  %107 = call fastcc i32 @Read16bitTables(%struct._cmsContext_struct* %104, %struct._cms_io_handler* %1, %struct._cmsPipeline_struct* nonnull %38, i32 %106, i32 %103)
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %170, label %109

109:                                              ; preds = %102
  %110 = load i8, i8* %6, align 1
  %111 = zext i8 %110 to i32
  %112 = load i8, i8* %7, align 1
  %113 = zext i8 %112 to i32
  %114 = load i8, i8* %5, align 1
  %115 = zext i8 %114 to i32
  %116 = icmp eq i8 %112, 0
  %117 = icmp eq i8 %110, 0
  %118 = or i1 %117, %116
  br i1 %118, label %161, label %119

119:                                              ; preds = %109
  %120 = icmp eq i8 %114, 0
  br i1 %120, label %131, label %121

121:                                              ; preds = %119
  %122 = udiv i32 -1, %113
  br label %125

123:                                              ; preds = %125
  %124 = icmp eq i32 %130, 0
  br i1 %124, label %131, label %125

125:                                              ; preds = %123, %121
  %126 = phi i32 [ 1, %121 ], [ %128, %123 ]
  %127 = phi i32 [ %115, %121 ], [ %130, %123 ]
  %128 = mul i32 %126, %113
  %129 = icmp ugt i32 %128, %122
  %130 = add nsw i32 %127, -1
  br i1 %129, label %170, label %123

131:                                              ; preds = %123, %119
  %132 = phi i32 [ 1, %119 ], [ %128, %123 ]
  %133 = mul i32 %132, %111
  %134 = udiv i32 %133, %111
  %135 = icmp eq i32 %132, %134
  br i1 %135, label %136, label %170

136:                                              ; preds = %131
  switch i32 %133, label %137 [
    i32 -1, label %170
    i32 0, label %161
  ]

137:                                              ; preds = %136
  %138 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %36, align 8
  %139 = call i8* @_cmsCalloc(%struct._cmsContext_struct* %138, i32 %133, i32 2) #8
  %140 = bitcast i8* %139 to i16*
  %141 = icmp eq i8* %139, null
  br i1 %141, label %170, label %142

142:                                              ; preds = %137
  %143 = call i32 @_cmsReadUInt16Array(%struct._cms_io_handler* %1, i32 %133, i16* nonnull %140) #8
  %144 = icmp eq i32 %143, 0
  %145 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %36, align 8
  br i1 %144, label %146, label %147

146:                                              ; preds = %142
  call void @_cmsFree(%struct._cmsContext_struct* %145, i8* nonnull %139) #8
  br label %170

147:                                              ; preds = %142
  %148 = load i8, i8* %7, align 1
  %149 = zext i8 %148 to i32
  %150 = load i8, i8* %5, align 1
  %151 = zext i8 %150 to i32
  %152 = load i8, i8* %6, align 1
  %153 = zext i8 %152 to i32
  %154 = call %struct._cmsStage_struct* @cmsStageAllocCLut16bit(%struct._cmsContext_struct* %145, i32 %149, i32 %151, i32 %153, i16* nonnull %140) #8
  %155 = call i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct* nonnull %38, i32 1, %struct._cmsStage_struct* %154) #8
  %156 = icmp eq i32 %155, 0
  %157 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %36, align 8
  call void @_cmsFree(%struct._cmsContext_struct* %157, i8* nonnull %139) #8
  br i1 %156, label %170, label %158

158:                                              ; preds = %147
  %159 = load i8, i8* %6, align 1
  %160 = zext i8 %159 to i32
  br label %161

161:                                              ; preds = %158, %109, %136
  %162 = phi i32 [ %160, %158 ], [ %111, %109 ], [ %111, %136 ]
  %163 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %36, align 8
  %164 = load i16, i16* %10, align 2
  %165 = zext i16 %164 to i32
  %166 = call fastcc i32 @Read16bitTables(%struct._cmsContext_struct* %163, %struct._cms_io_handler* %1, %struct._cmsPipeline_struct* nonnull %38, i32 %162, i32 %165)
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %170, label %168

168:                                              ; preds = %161
  store i32 1, i32* %2, align 4
  %169 = bitcast %struct._cmsPipeline_struct* %38 to i8*
  br label %171

170:                                              ; preds = %125, %161, %136, %131, %146, %137, %147, %40, %44, %48, %52, %56, %60, %64, %68, %72, %83, %88, %91, %102, %94
  call void @cmsPipelineFree(%struct._cmsPipeline_struct* nonnull %38) #8
  br label %171

171:                                              ; preds = %34, %30, %25, %170, %22, %19, %16, %4, %168
  %172 = phi i8* [ %169, %168 ], [ null, %4 ], [ null, %16 ], [ null, %19 ], [ null, %22 ], [ null, %170 ], [ null, %25 ], [ null, %30 ], [ null, %34 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #8
  ret i8* %172
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @Type_LUT16_Write(%struct._cms_typehandler_struct* nocapture readnone, %struct._cms_io_handler*, i8*, i32) #0 {
  %5 = bitcast i8* %2 to %struct._cmsPipeline_struct*
  %6 = bitcast i8* %2 to %struct._cmsStage_struct**
  %7 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %6, align 8
  %8 = icmp eq %struct._cmsStage_struct* %7, null
  br i1 %8, label %77, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %7, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 1835103334
  br i1 %12, label %13, label %31

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %7, i64 0, i32 8
  %15 = bitcast i8** %14 to %struct._cmsStageMatrixData**
  %16 = load %struct._cmsStageMatrixData*, %struct._cmsStageMatrixData** %15, align 8
  %17 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %7, i64 0, i32 3
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 3
  br i1 %19, label %20, label %304

20:                                               ; preds = %13
  %21 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %7, i64 0, i32 4
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 3
  br i1 %23, label %24, label %304

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %7, i64 0, i32 9
  %26 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %25, align 8
  %27 = icmp eq %struct._cmsStage_struct* %26, null
  br i1 %27, label %77, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %26, i64 0, i32 1
  %30 = load i32, i32* %29, align 8
  br label %31

31:                                               ; preds = %28, %9
  %32 = phi i32 [ %30, %28 ], [ %11, %9 ]
  %33 = phi %struct._cmsStageMatrixData* [ %16, %28 ], [ null, %9 ]
  %34 = phi %struct._cmsStage_struct* [ %26, %28 ], [ %7, %9 ]
  %35 = icmp eq i32 %32, 1668707188
  br i1 %35, label %36, label %46

36:                                               ; preds = %31
  %37 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %34, i64 0, i32 8
  %38 = bitcast i8** %37 to %struct._cmsStageToneCurvesData**
  %39 = load %struct._cmsStageToneCurvesData*, %struct._cmsStageToneCurvesData** %38, align 8
  %40 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %34, i64 0, i32 9
  %41 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %40, align 8
  %42 = icmp eq %struct._cmsStage_struct* %41, null
  br i1 %42, label %77, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %41, i64 0, i32 1
  %45 = load i32, i32* %44, align 8
  br label %46

46:                                               ; preds = %43, %31
  %47 = phi i32 [ %45, %43 ], [ %32, %31 ]
  %48 = phi %struct._cmsStageToneCurvesData* [ %39, %43 ], [ null, %31 ]
  %49 = phi %struct._cmsStage_struct* [ %41, %43 ], [ %34, %31 ]
  %50 = icmp eq i32 %47, 1668052340
  br i1 %50, label %51, label %61

51:                                               ; preds = %46
  %52 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %49, i64 0, i32 8
  %53 = bitcast i8** %52 to %struct._cmsStageCLutData**
  %54 = load %struct._cmsStageCLutData*, %struct._cmsStageCLutData** %53, align 8
  %55 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %49, i64 0, i32 9
  %56 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %55, align 8
  %57 = icmp eq %struct._cmsStage_struct* %56, null
  br i1 %57, label %77, label %58

58:                                               ; preds = %51
  %59 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %56, i64 0, i32 1
  %60 = load i32, i32* %59, align 8
  br label %61

61:                                               ; preds = %58, %46
  %62 = phi i32 [ %60, %58 ], [ %47, %46 ]
  %63 = phi %struct._cmsStageCLutData* [ %54, %58 ], [ null, %46 ]
  %64 = phi %struct._cmsStage_struct* [ %56, %58 ], [ %49, %46 ]
  %65 = icmp eq i32 %62, 1668707188
  br i1 %65, label %66, label %73

66:                                               ; preds = %61
  %67 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %64, i64 0, i32 8
  %68 = bitcast i8** %67 to %struct._cmsStageToneCurvesData**
  %69 = load %struct._cmsStageToneCurvesData*, %struct._cmsStageToneCurvesData** %68, align 8
  %70 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %64, i64 0, i32 9
  %71 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %70, align 8
  %72 = icmp eq %struct._cmsStage_struct* %71, null
  br i1 %72, label %77, label %73

73:                                               ; preds = %61, %66
  %74 = phi %struct._cmsStage_struct* [ %71, %66 ], [ %64, %61 ]
  %75 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %74, i64 0, i32 0
  %76 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %75, align 8
  tail call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %76, i32 8, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.8, i64 0, i64 0)) #8
  br label %304

77:                                               ; preds = %4, %24, %36, %51, %66
  %78 = phi %struct._cmsStageToneCurvesData* [ %69, %66 ], [ null, %51 ], [ null, %36 ], [ null, %24 ], [ null, %4 ]
  %79 = phi %struct._cmsStageToneCurvesData* [ %48, %66 ], [ %48, %51 ], [ %39, %36 ], [ null, %24 ], [ null, %4 ]
  %80 = phi %struct._cmsStageMatrixData* [ %33, %66 ], [ %33, %51 ], [ %33, %36 ], [ %16, %24 ], [ null, %4 ]
  %81 = phi %struct._cmsStageCLutData* [ %63, %66 ], [ %54, %51 ], [ null, %36 ], [ null, %24 ], [ null, %4 ]
  %82 = tail call i32 @cmsPipelineInputChannels(%struct._cmsPipeline_struct* %5) #8
  %83 = tail call i32 @cmsPipelineOutputChannels(%struct._cmsPipeline_struct* %5) #8
  %84 = icmp eq %struct._cmsStageCLutData* %81, null
  br i1 %84, label %90, label %85

85:                                               ; preds = %77
  %86 = getelementptr inbounds %struct._cmsStageCLutData, %struct._cmsStageCLutData* %81, i64 0, i32 1
  %87 = load %struct._cms_interp_struc*, %struct._cms_interp_struc** %86, align 8
  %88 = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %87, i64 0, i32 4, i64 0
  %89 = load i32, i32* %88, align 4
  br label %90

90:                                               ; preds = %77, %85
  %91 = phi i32 [ %89, %85 ], [ 0, %77 ]
  %92 = trunc i32 %82 to i8
  %93 = tail call i32 @_cmsWriteUInt8Number(%struct._cms_io_handler* %1, i8 zeroext %92) #8
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %304, label %95

95:                                               ; preds = %90
  %96 = trunc i32 %83 to i8
  %97 = tail call i32 @_cmsWriteUInt8Number(%struct._cms_io_handler* %1, i8 zeroext %96) #8
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %304, label %99

99:                                               ; preds = %95
  %100 = trunc i32 %91 to i8
  %101 = tail call i32 @_cmsWriteUInt8Number(%struct._cms_io_handler* %1, i8 zeroext %100) #8
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %304, label %103

103:                                              ; preds = %99
  %104 = tail call i32 @_cmsWriteUInt8Number(%struct._cms_io_handler* %1, i8 zeroext 0) #8
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %304, label %106

106:                                              ; preds = %103
  %107 = icmp eq %struct._cmsStageMatrixData* %80, null
  br i1 %107, label %120, label %108

108:                                              ; preds = %106
  %109 = getelementptr inbounds %struct._cmsStageMatrixData, %struct._cmsStageMatrixData* %80, i64 0, i32 0
  %110 = load double*, double** %109, align 8
  %111 = load double, double* %110, align 8
  %112 = tail call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %1, double %111) #8
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %304, label %114

114:                                              ; preds = %108
  %115 = load double*, double** %109, align 8
  %116 = getelementptr inbounds double, double* %115, i64 1
  %117 = load double, double* %116, align 8
  %118 = tail call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %1, double %117) #8
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %304, label %306

120:                                              ; preds = %106
  %121 = tail call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %1, double 1.000000e+00) #8
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %304, label %123

123:                                              ; preds = %120
  %124 = tail call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %1, double 0.000000e+00) #8
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %304, label %126

126:                                              ; preds = %123
  %127 = tail call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %1, double 0.000000e+00) #8
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %304, label %129

129:                                              ; preds = %126
  %130 = tail call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %1, double 0.000000e+00) #8
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %304, label %132

132:                                              ; preds = %129
  %133 = tail call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %1, double 1.000000e+00) #8
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %304, label %135

135:                                              ; preds = %132
  %136 = tail call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %1, double 0.000000e+00) #8
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %304, label %138

138:                                              ; preds = %135
  %139 = tail call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %1, double 0.000000e+00) #8
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %304, label %141

141:                                              ; preds = %138
  %142 = tail call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %1, double 0.000000e+00) #8
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %304, label %144

144:                                              ; preds = %141
  %145 = tail call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %1, double 1.000000e+00) #8
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %304, label %147

147:                                              ; preds = %342, %144
  %148 = icmp ne %struct._cmsStageToneCurvesData* %79, null
  br i1 %148, label %149, label %158

149:                                              ; preds = %147
  %150 = getelementptr inbounds %struct._cmsStageToneCurvesData, %struct._cmsStageToneCurvesData* %79, i64 0, i32 1
  %151 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %150, align 8
  %152 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %151, align 8
  %153 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %152, i64 0, i32 5
  %154 = load i32, i32* %153, align 8
  %155 = trunc i32 %154 to i16
  %156 = tail call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %1, i16 zeroext %155) #8
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %304, label %161

158:                                              ; preds = %147
  %159 = tail call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %1, i16 zeroext 2) #8
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %304, label %161

161:                                              ; preds = %149, %158
  %162 = icmp ne %struct._cmsStageToneCurvesData* %78, null
  br i1 %162, label %163, label %172

163:                                              ; preds = %161
  %164 = getelementptr inbounds %struct._cmsStageToneCurvesData, %struct._cmsStageToneCurvesData* %78, i64 0, i32 1
  %165 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %164, align 8
  %166 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %165, align 8
  %167 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %166, i64 0, i32 5
  %168 = load i32, i32* %167, align 8
  %169 = trunc i32 %168 to i16
  %170 = tail call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %1, i16 zeroext %169) #8
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %304, label %175

172:                                              ; preds = %161
  %173 = tail call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %1, i16 zeroext 2) #8
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %304, label %175

175:                                              ; preds = %163, %172
  br i1 %148, label %178, label %176

176:                                              ; preds = %175
  %177 = icmp eq i32 %82, 0
  br i1 %177, label %224, label %216

178:                                              ; preds = %175
  %179 = getelementptr inbounds %struct._cmsStageToneCurvesData, %struct._cmsStageToneCurvesData* %79, i64 0, i32 1
  %180 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %179, align 8
  %181 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %180, align 8
  %182 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %181, i64 0, i32 5
  %183 = load i32, i32* %182, align 8
  %184 = getelementptr inbounds %struct._cmsStageToneCurvesData, %struct._cmsStageToneCurvesData* %79, i64 0, i32 0
  %185 = load i32, i32* %184, align 8
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %224, label %187

187:                                              ; preds = %178
  %188 = icmp eq i32 %183, 0
  %189 = zext i32 %183 to i64
  br label %190

190:                                              ; preds = %209, %187
  %191 = phi i32 [ %185, %187 ], [ %210, %209 ]
  %192 = phi i64 [ 0, %187 ], [ %211, %209 ]
  br i1 %188, label %209, label %195

193:                                              ; preds = %195
  %194 = icmp eq i64 %206, %189
  br i1 %194, label %207, label %195

195:                                              ; preds = %190, %193
  %196 = phi i64 [ %206, %193 ], [ 0, %190 ]
  %197 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %179, align 8
  %198 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %197, i64 %192
  %199 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %198, align 8
  %200 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %199, i64 0, i32 6
  %201 = load i16*, i16** %200, align 8
  %202 = getelementptr inbounds i16, i16* %201, i64 %196
  %203 = load i16, i16* %202, align 2
  %204 = tail call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %1, i16 zeroext %203) #8
  %205 = icmp eq i32 %204, 0
  %206 = add nuw nsw i64 %196, 1
  br i1 %205, label %304, label %193

207:                                              ; preds = %193
  %208 = load i32, i32* %184, align 8
  br label %209

209:                                              ; preds = %207, %190
  %210 = phi i32 [ %208, %207 ], [ %191, %190 ]
  %211 = add nuw nsw i64 %192, 1
  %212 = zext i32 %210 to i64
  %213 = icmp ult i64 %211, %212
  br i1 %213, label %190, label %224

214:                                              ; preds = %220
  %215 = icmp eq i32 %223, %82
  br i1 %215, label %224, label %216

216:                                              ; preds = %176, %214
  %217 = phi i32 [ %223, %214 ], [ 0, %176 ]
  %218 = tail call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %1, i16 zeroext 0) #8
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %304, label %220

220:                                              ; preds = %216
  %221 = tail call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %1, i16 zeroext -1) #8
  %222 = icmp eq i32 %221, 0
  %223 = add nuw i32 %217, 1
  br i1 %222, label %304, label %214

224:                                              ; preds = %214, %209, %176, %178
  %225 = icmp eq i32 %91, 0
  %226 = icmp eq i32 %83, 0
  %227 = or i1 %226, %225
  br i1 %227, label %256, label %228

228:                                              ; preds = %224
  %229 = icmp eq i32 %82, 0
  br i1 %229, label %240, label %230

230:                                              ; preds = %228
  %231 = udiv i32 -1, %91
  br label %234

232:                                              ; preds = %234
  %233 = icmp eq i32 %239, 0
  br i1 %233, label %240, label %234

234:                                              ; preds = %232, %230
  %235 = phi i32 [ 1, %230 ], [ %237, %232 ]
  %236 = phi i32 [ %82, %230 ], [ %239, %232 ]
  %237 = mul i32 %235, %91
  %238 = icmp ugt i32 %237, %231
  %239 = add i32 %236, -1
  br i1 %238, label %304, label %232

240:                                              ; preds = %232, %228
  %241 = phi i32 [ 1, %228 ], [ %237, %232 ]
  %242 = mul i32 %241, %83
  %243 = udiv i32 %242, %83
  %244 = icmp ne i32 %241, %243
  %245 = icmp eq i32 %242, -1
  %246 = or i1 %244, %245
  br i1 %246, label %304, label %247

247:                                              ; preds = %240
  %248 = icmp ne i32 %242, 0
  %249 = icmp ne %struct._cmsStageCLutData* %81, null
  %250 = and i1 %249, %248
  br i1 %250, label %251, label %256

251:                                              ; preds = %247
  %252 = getelementptr inbounds %struct._cmsStageCLutData, %struct._cmsStageCLutData* %81, i64 0, i32 0, i32 0
  %253 = load i16*, i16** %252, align 8
  %254 = tail call i32 @_cmsWriteUInt16Array(%struct._cms_io_handler* %1, i32 %242, i16* %253) #8
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %304, label %256

256:                                              ; preds = %224, %251, %247
  br i1 %162, label %258, label %257

257:                                              ; preds = %256
  br i1 %226, label %304, label %296

258:                                              ; preds = %256
  %259 = getelementptr inbounds %struct._cmsStageToneCurvesData, %struct._cmsStageToneCurvesData* %78, i64 0, i32 1
  %260 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %259, align 8
  %261 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %260, align 8
  %262 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %261, i64 0, i32 5
  %263 = load i32, i32* %262, align 8
  %264 = getelementptr inbounds %struct._cmsStageToneCurvesData, %struct._cmsStageToneCurvesData* %78, i64 0, i32 0
  %265 = load i32, i32* %264, align 8
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %304, label %267

267:                                              ; preds = %258
  %268 = icmp eq i32 %263, 0
  %269 = zext i32 %263 to i64
  br label %270

270:                                              ; preds = %289, %267
  %271 = phi i32 [ %265, %267 ], [ %290, %289 ]
  %272 = phi i64 [ 0, %267 ], [ %291, %289 ]
  br i1 %268, label %289, label %275

273:                                              ; preds = %275
  %274 = icmp eq i64 %286, %269
  br i1 %274, label %287, label %275

275:                                              ; preds = %270, %273
  %276 = phi i64 [ %286, %273 ], [ 0, %270 ]
  %277 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %259, align 8
  %278 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %277, i64 %272
  %279 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %278, align 8
  %280 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %279, i64 0, i32 6
  %281 = load i16*, i16** %280, align 8
  %282 = getelementptr inbounds i16, i16* %281, i64 %276
  %283 = load i16, i16* %282, align 2
  %284 = tail call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %1, i16 zeroext %283) #8
  %285 = icmp eq i32 %284, 0
  %286 = add nuw nsw i64 %276, 1
  br i1 %285, label %304, label %273

287:                                              ; preds = %273
  %288 = load i32, i32* %264, align 8
  br label %289

289:                                              ; preds = %287, %270
  %290 = phi i32 [ %288, %287 ], [ %271, %270 ]
  %291 = add nuw nsw i64 %272, 1
  %292 = zext i32 %290 to i64
  %293 = icmp ult i64 %291, %292
  br i1 %293, label %270, label %304

294:                                              ; preds = %300
  %295 = icmp eq i32 %303, %83
  br i1 %295, label %304, label %296

296:                                              ; preds = %257, %294
  %297 = phi i32 [ %303, %294 ], [ 0, %257 ]
  %298 = tail call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %1, i16 zeroext 0) #8
  %299 = icmp eq i32 %298, 0
  br i1 %299, label %304, label %300

300:                                              ; preds = %296
  %301 = tail call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %1, i16 zeroext -1) #8
  %302 = icmp eq i32 %301, 0
  %303 = add nuw i32 %297, 1
  br i1 %302, label %304, label %294

304:                                              ; preds = %220, %216, %195, %234, %296, %300, %294, %289, %275, %108, %114, %306, %312, %318, %324, %330, %336, %342, %257, %240, %258, %251, %172, %163, %158, %149, %144, %141, %138, %135, %132, %129, %126, %123, %120, %103, %99, %95, %90, %13, %20, %73
  %305 = phi i32 [ 0, %73 ], [ 0, %20 ], [ 0, %13 ], [ 0, %90 ], [ 0, %95 ], [ 0, %99 ], [ 0, %103 ], [ 0, %120 ], [ 0, %123 ], [ 0, %126 ], [ 0, %129 ], [ 0, %132 ], [ 0, %135 ], [ 0, %138 ], [ 0, %141 ], [ 0, %144 ], [ 0, %149 ], [ 0, %158 ], [ 0, %163 ], [ 0, %172 ], [ 0, %251 ], [ 0, %240 ], [ 1, %258 ], [ 1, %257 ], [ 0, %342 ], [ 0, %336 ], [ 0, %330 ], [ 0, %324 ], [ 0, %318 ], [ 0, %312 ], [ 0, %306 ], [ 0, %114 ], [ 0, %108 ], [ 0, %275 ], [ 1, %289 ], [ 0, %296 ], [ 0, %300 ], [ 1, %294 ], [ 0, %234 ], [ 0, %195 ], [ 0, %216 ], [ 0, %220 ]
  ret i32 %305

306:                                              ; preds = %114
  %307 = load double*, double** %109, align 8
  %308 = getelementptr inbounds double, double* %307, i64 2
  %309 = load double, double* %308, align 8
  %310 = tail call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %1, double %309) #8
  %311 = icmp eq i32 %310, 0
  br i1 %311, label %304, label %312

312:                                              ; preds = %306
  %313 = load double*, double** %109, align 8
  %314 = getelementptr inbounds double, double* %313, i64 3
  %315 = load double, double* %314, align 8
  %316 = tail call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %1, double %315) #8
  %317 = icmp eq i32 %316, 0
  br i1 %317, label %304, label %318

318:                                              ; preds = %312
  %319 = load double*, double** %109, align 8
  %320 = getelementptr inbounds double, double* %319, i64 4
  %321 = load double, double* %320, align 8
  %322 = tail call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %1, double %321) #8
  %323 = icmp eq i32 %322, 0
  br i1 %323, label %304, label %324

324:                                              ; preds = %318
  %325 = load double*, double** %109, align 8
  %326 = getelementptr inbounds double, double* %325, i64 5
  %327 = load double, double* %326, align 8
  %328 = tail call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %1, double %327) #8
  %329 = icmp eq i32 %328, 0
  br i1 %329, label %304, label %330

330:                                              ; preds = %324
  %331 = load double*, double** %109, align 8
  %332 = getelementptr inbounds double, double* %331, i64 6
  %333 = load double, double* %332, align 8
  %334 = tail call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %1, double %333) #8
  %335 = icmp eq i32 %334, 0
  br i1 %335, label %304, label %336

336:                                              ; preds = %330
  %337 = load double*, double** %109, align 8
  %338 = getelementptr inbounds double, double* %337, i64 7
  %339 = load double, double* %338, align 8
  %340 = tail call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %1, double %339) #8
  %341 = icmp eq i32 %340, 0
  br i1 %341, label %304, label %342

342:                                              ; preds = %336
  %343 = load double*, double** %109, align 8
  %344 = getelementptr inbounds double, double* %343, i64 8
  %345 = load double, double* %344, align 8
  %346 = tail call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %1, double %345) #8
  %347 = icmp eq i32 %346, 0
  br i1 %347, label %304, label %147
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_LUT16_Dup(%struct._cms_typehandler_struct* nocapture readnone, i8*, i32) #0 {
  %4 = bitcast i8* %1 to %struct._cmsPipeline_struct*
  %5 = tail call %struct._cmsPipeline_struct* @cmsPipelineDup(%struct._cmsPipeline_struct* %4) #8
  %6 = bitcast %struct._cmsPipeline_struct* %5 to i8*
  ret i8* %6
}

; Function Attrs: nounwind ssp uwtable
define internal void @Type_LUT16_Free(%struct._cms_typehandler_struct* nocapture readnone, i8*) #0 {
  %3 = bitcast i8* %1 to %struct._cmsPipeline_struct*
  tail call void @cmsPipelineFree(%struct._cmsPipeline_struct* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_ColorantTable_Read(%struct._cms_typehandler_struct* nocapture readonly, %struct._cms_io_handler*, i32* nocapture, i32) #0 {
  %5 = alloca i32, align 4
  %6 = alloca [34 x i8], align 16
  %7 = alloca [3 x i16], align 2
  %8 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #8
  store i32 -1431655766, i32* %5, align 4
  %9 = getelementptr inbounds [34 x i8], [34 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 34, i8* nonnull %9) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 34, i1 false)
  %10 = bitcast [3 x i16]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %10) #8
  %11 = getelementptr inbounds [3 x i16], [3 x i16]* %7, i64 0, i64 0
  store i16 -21846, i16* %11, align 2
  %12 = getelementptr inbounds [3 x i16], [3 x i16]* %7, i64 0, i64 1
  store i16 -21846, i16* %12, align 2
  %13 = getelementptr inbounds [3 x i16], [3 x i16]* %7, i64 0, i64 2
  store i16 -21846, i16* %13, align 2
  %14 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* nonnull %5) #8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %47, label %16

16:                                               ; preds = %4
  %17 = load i32, i32* %5, align 4
  %18 = icmp ugt i32 %17, 16
  %19 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %20 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %19, align 8
  br i1 %18, label %21, label %22

21:                                               ; preds = %16
  call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %20, i32 2, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.9, i64 0, i64 0), i32 %17) #8
  br label %47

22:                                               ; preds = %16
  %23 = call %struct._cms_NAMEDCOLORLIST_struct* @cmsAllocNamedColorList(%struct._cmsContext_struct* %20, i32 %17, i32 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0)) #8
  %24 = load i32, i32* %5, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %44, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %1, i64 0, i32 5
  %28 = getelementptr inbounds [34 x i8], [34 x i8]* %6, i64 0, i64 32
  br label %32

29:                                               ; preds = %40
  %30 = load i32, i32* %5, align 4
  %31 = icmp ult i32 %43, %30
  br i1 %31, label %32, label %44

32:                                               ; preds = %26, %29
  %33 = phi i32 [ 0, %26 ], [ %43, %29 ]
  %34 = load i32 (%struct._cms_io_handler*, i8*, i32, i32)*, i32 (%struct._cms_io_handler*, i8*, i32, i32)** %27, align 8
  %35 = call i32 %34(%struct._cms_io_handler* %1, i8* nonnull %9, i32 32, i32 1) #8
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %37, label %46

37:                                               ; preds = %32
  store i8 0, i8* %28, align 16
  %38 = call i32 @_cmsReadUInt16Array(%struct._cms_io_handler* %1, i32 3, i16* nonnull %11) #8
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %46, label %40

40:                                               ; preds = %37
  %41 = call i32 @cmsAppendNamedColor(%struct._cms_NAMEDCOLORLIST_struct* %23, i8* nonnull %9, i16* nonnull %11, i16* null) #8
  %42 = icmp eq i32 %41, 0
  %43 = add nuw i32 %33, 1
  br i1 %42, label %46, label %29

44:                                               ; preds = %29, %22
  store i32 1, i32* %2, align 4
  %45 = bitcast %struct._cms_NAMEDCOLORLIST_struct* %23 to i8*
  br label %47

46:                                               ; preds = %40, %37, %32
  store i32 0, i32* %2, align 4
  call void @cmsFreeNamedColorList(%struct._cms_NAMEDCOLORLIST_struct* %23) #8
  br label %47

47:                                               ; preds = %4, %46, %44, %21
  %48 = phi i8* [ null, %21 ], [ null, %46 ], [ %45, %44 ], [ null, %4 ]
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %10) #8
  call void @llvm.lifetime.end.p0i8(i64 34, i8* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #8
  ret i8* %48
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @Type_ColorantTable_Write(%struct._cms_typehandler_struct* nocapture readnone, %struct._cms_io_handler*, i8*, i32) #0 {
  %5 = alloca [256 x i8], align 16
  %6 = alloca [3 x i16], align 2
  %7 = bitcast i8* %2 to %struct._cms_NAMEDCOLORLIST_struct*
  %8 = tail call i32 @cmsNamedColorCount(%struct._cms_NAMEDCOLORLIST_struct* %7) #8
  %9 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %8) #8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %37, label %11

11:                                               ; preds = %4
  %12 = icmp eq i32 %8, 0
  br i1 %12, label %37, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 0
  %15 = bitcast [3 x i16]* %6 to i8*
  %16 = getelementptr inbounds [3 x i16], [3 x i16]* %6, i64 0, i64 0
  %17 = getelementptr inbounds [3 x i16], [3 x i16]* %6, i64 0, i64 1
  %18 = getelementptr inbounds [3 x i16], [3 x i16]* %6, i64 0, i64 2
  %19 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 32
  %20 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %1, i64 0, i32 9
  br label %23

21:                                               ; preds = %31
  %22 = icmp eq i32 %34, %8
  br i1 %22, label %37, label %23

23:                                               ; preds = %21, %13
  %24 = phi i32 [ 0, %13 ], [ %34, %21 ]
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %14) #8
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %15) #8
  store i16 -21846, i16* %16, align 2
  store i16 -21846, i16* %17, align 2
  store i16 -21846, i16* %18, align 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %14, i8 0, i64 256, i1 false)
  %25 = call i32 @cmsNamedColorInfo(%struct._cms_NAMEDCOLORLIST_struct* %7, i32 %24, i8* nonnull %14, i8* null, i8* null, i16* nonnull %16, i16* null) #8
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %23
  store i8 0, i8* %19, align 16
  %28 = load i32 (%struct._cms_io_handler*, i32, i8*)*, i32 (%struct._cms_io_handler*, i32, i8*)** %20, align 8
  %29 = call i32 %28(%struct._cms_io_handler* %1, i32 32, i8* nonnull %14) #8
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %27
  %32 = call i32 @_cmsWriteUInt16Array(%struct._cms_io_handler* %1, i32 3, i16* nonnull %16) #8
  %33 = icmp eq i32 %32, 0
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %15) #8
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %14) #8
  %34 = add nuw i32 %24, 1
  br i1 %33, label %37, label %21

35:                                               ; preds = %23
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %15) #8
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %14) #8
  br label %37

36:                                               ; preds = %27
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %15) #8
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %14) #8
  br label %37

37:                                               ; preds = %31, %21, %11, %36, %35, %4
  %38 = phi i32 [ 0, %4 ], [ 0, %35 ], [ 0, %36 ], [ 1, %11 ], [ 1, %21 ], [ 0, %31 ]
  ret i32 %38
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_ColorantTable_Dup(%struct._cms_typehandler_struct* nocapture readnone, i8*, i32) #0 {
  %4 = bitcast i8* %1 to %struct._cms_NAMEDCOLORLIST_struct*
  %5 = tail call %struct._cms_NAMEDCOLORLIST_struct* @cmsDupNamedColorList(%struct._cms_NAMEDCOLORLIST_struct* %4) #8
  %6 = bitcast %struct._cms_NAMEDCOLORLIST_struct* %5 to i8*
  ret i8* %6
}

; Function Attrs: nounwind ssp uwtable
define internal void @Type_ColorantTable_Free(%struct._cms_typehandler_struct* nocapture readnone, i8*) #0 {
  %3 = bitcast i8* %1 to %struct._cms_NAMEDCOLORLIST_struct*
  tail call void @cmsFreeNamedColorList(%struct._cms_NAMEDCOLORLIST_struct* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_NamedColor_Read(%struct._cms_typehandler_struct* nocapture readonly, %struct._cms_io_handler*, i32* nocapture, i32) #0 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca [32 x i8], align 16
  %9 = alloca [32 x i8], align 16
  %10 = alloca [3 x i16], align 2
  %11 = alloca [16 x i16], align 16
  %12 = alloca [33 x i8], align 16
  %13 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #8
  store i32 -1431655766, i32* %5, align 4
  %14 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #8
  store i32 -1431655766, i32* %6, align 4
  %15 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #8
  store i32 -1431655766, i32* %7, align 4
  %16 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #8
  %17 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i64 0, i64 31
  %18 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %16, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #8
  %19 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i64 0, i64 31
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %18, i8 -86, i64 32, i1 false)
  store i32 0, i32* %2, align 4
  %20 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* nonnull %5) #8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %90, label %22

22:                                               ; preds = %4
  %23 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* nonnull %6) #8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %90, label %25

25:                                               ; preds = %22
  %26 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* nonnull %7) #8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %90, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %1, i64 0, i32 5
  %30 = load i32 (%struct._cms_io_handler*, i8*, i32, i32)*, i32 (%struct._cms_io_handler*, i8*, i32, i32)** %29, align 8
  %31 = call i32 %30(%struct._cms_io_handler* %1, i8* nonnull %16, i32 32, i32 1) #8
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %90

33:                                               ; preds = %28
  %34 = load i32 (%struct._cms_io_handler*, i8*, i32, i32)*, i32 (%struct._cms_io_handler*, i8*, i32, i32)** %29, align 8
  %35 = call i32 %34(%struct._cms_io_handler* %1, i8* nonnull %18, i32 32, i32 1) #8
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %37, label %90

37:                                               ; preds = %33
  store i8 0, i8* %19, align 1
  store i8 0, i8* %17, align 1
  %38 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %39 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %38, align 8
  %40 = load i32, i32* %6, align 4
  %41 = load i32, i32* %7, align 4
  %42 = call %struct._cms_NAMEDCOLORLIST_struct* @cmsAllocNamedColorList(%struct._cmsContext_struct* %39, i32 %40, i32 %41, i8* nonnull %16, i8* nonnull %18) #8
  %43 = icmp eq %struct._cms_NAMEDCOLORLIST_struct* %42, null
  br i1 %43, label %44, label %47

44:                                               ; preds = %37
  %45 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %38, align 8
  %46 = load i32, i32* %6, align 4
  call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %45, i32 2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10, i64 0, i64 0), i32 %46) #8
  br label %90

47:                                               ; preds = %37
  %48 = load i32, i32* %7, align 4
  %49 = icmp ugt i32 %48, 16
  br i1 %49, label %62, label %50

50:                                               ; preds = %47
  %51 = load i32, i32* %6, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %87, label %53

53:                                               ; preds = %50
  %54 = bitcast [3 x i16]* %10 to i8*
  %55 = getelementptr inbounds [3 x i16], [3 x i16]* %10, i64 0, i64 0
  %56 = getelementptr inbounds [3 x i16], [3 x i16]* %10, i64 0, i64 1
  %57 = getelementptr inbounds [3 x i16], [3 x i16]* %10, i64 0, i64 2
  %58 = bitcast [16 x i16]* %11 to i8*
  %59 = getelementptr inbounds [16 x i16], [16 x i16]* %11, i64 0, i64 0
  %60 = getelementptr inbounds [33 x i8], [33 x i8]* %12, i64 0, i64 0
  %61 = getelementptr inbounds [33 x i8], [33 x i8]* %12, i64 0, i64 32
  br label %67

62:                                               ; preds = %47
  %63 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %38, align 8
  call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %63, i32 2, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.11, i64 0, i64 0), i32 %48) #8
  br label %89

64:                                               ; preds = %83
  %65 = load i32, i32* %6, align 4
  %66 = icmp ult i32 %86, %65
  br i1 %66, label %67, label %87

67:                                               ; preds = %53, %64
  %68 = phi i32 [ 0, %53 ], [ %86, %64 ]
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %54) #8
  store i16 -21846, i16* %55, align 2
  store i16 -21846, i16* %56, align 2
  store i16 -21846, i16* %57, align 2
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %58) #8
  call void @llvm.lifetime.start.p0i8(i64 33, i8* nonnull %60) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %60, i8 -86, i64 33, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %58, i8 0, i64 32, i1 false)
  %69 = load i32 (%struct._cms_io_handler*, i8*, i32, i32)*, i32 (%struct._cms_io_handler*, i8*, i32, i32)** %29, align 8
  %70 = call i32 %69(%struct._cms_io_handler* %1, i8* nonnull %60, i32 32, i32 1) #8
  %71 = icmp eq i32 %70, 1
  br i1 %71, label %72, label %83

72:                                               ; preds = %67
  store i8 0, i8* %61, align 16
  %73 = call i32 @_cmsReadUInt16Array(%struct._cms_io_handler* %1, i32 3, i16* nonnull %55) #8
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %83, label %75

75:                                               ; preds = %72
  %76 = load i32, i32* %7, align 4
  %77 = call i32 @_cmsReadUInt16Array(%struct._cms_io_handler* %1, i32 %76, i16* nonnull %59) #8
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %83, label %79

79:                                               ; preds = %75
  %80 = call i32 @cmsAppendNamedColor(%struct._cms_NAMEDCOLORLIST_struct* nonnull %42, i8* nonnull %60, i16* nonnull %55, i16* nonnull %59) #8
  %81 = icmp eq i32 %80, 0
  %82 = select i1 %81, i32 2, i32 0
  br label %83

83:                                               ; preds = %79, %75, %72, %67
  %84 = phi i32 [ 2, %67 ], [ 2, %72 ], [ 2, %75 ], [ %82, %79 ]
  call void @llvm.lifetime.end.p0i8(i64 33, i8* nonnull %60) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %58) #8
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %54) #8
  %85 = icmp eq i32 %84, 0
  %86 = add nuw i32 %68, 1
  br i1 %85, label %64, label %89

87:                                               ; preds = %64, %50
  store i32 1, i32* %2, align 4
  %88 = bitcast %struct._cms_NAMEDCOLORLIST_struct* %42 to i8*
  br label %90

89:                                               ; preds = %83, %62
  call void @cmsFreeNamedColorList(%struct._cms_NAMEDCOLORLIST_struct* nonnull %42) #8
  br label %90

90:                                               ; preds = %33, %28, %25, %22, %4, %89, %87, %44
  %91 = phi i8* [ null, %44 ], [ null, %89 ], [ %88, %87 ], [ null, %4 ], [ null, %22 ], [ null, %25 ], [ null, %28 ], [ null, %33 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #8
  ret i8* %91
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @Type_NamedColor_Write(%struct._cms_typehandler_struct* nocapture readnone, %struct._cms_io_handler*, i8*, i32) #0 {
  %5 = alloca [33 x i8], align 16
  %6 = alloca [33 x i8], align 16
  %7 = alloca [3 x i16], align 2
  %8 = alloca [16 x i16], align 16
  %9 = alloca [256 x i8], align 16
  %10 = bitcast i8* %2 to %struct._cms_NAMEDCOLORLIST_struct*
  %11 = getelementptr inbounds [33 x i8], [33 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 33, i8* nonnull %11) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 33, i1 false)
  %12 = getelementptr inbounds [33 x i8], [33 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 33, i8* nonnull %12) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 -86, i64 33, i1 false)
  %13 = tail call i32 @cmsNamedColorCount(%struct._cms_NAMEDCOLORLIST_struct* %10) #8
  %14 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 0) #8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %73, label %16

16:                                               ; preds = %4
  %17 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %13) #8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %73, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %2, i64 8
  %21 = bitcast i8* %20 to i32*
  %22 = load i32, i32* %21, align 8
  %23 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %22) #8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %73, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds i8, i8* %2, i64 12
  %27 = call i8* @strncpy(i8* nonnull %11, i8* %26, i64 32) #8
  %28 = getelementptr inbounds i8, i8* %2, i64 45
  %29 = call i8* @strncpy(i8* nonnull %12, i8* %28, i64 32) #8
  %30 = getelementptr inbounds [33 x i8], [33 x i8]* %5, i64 0, i64 32
  store i8 0, i8* %30, align 16
  %31 = getelementptr inbounds [33 x i8], [33 x i8]* %6, i64 0, i64 32
  store i8 0, i8* %31, align 16
  %32 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %1, i64 0, i32 9
  %33 = load i32 (%struct._cms_io_handler*, i32, i8*)*, i32 (%struct._cms_io_handler*, i32, i8*)** %32, align 8
  %34 = call i32 %33(%struct._cms_io_handler* %1, i32 32, i8* nonnull %11) #8
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %73, label %36

36:                                               ; preds = %25
  %37 = load i32 (%struct._cms_io_handler*, i32, i8*)*, i32 (%struct._cms_io_handler*, i32, i8*)** %32, align 8
  %38 = call i32 %37(%struct._cms_io_handler* %1, i32 32, i8* nonnull %12) #8
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %73, label %40

40:                                               ; preds = %36
  %41 = icmp eq i32 %13, 0
  br i1 %41, label %73, label %42

42:                                               ; preds = %40
  %43 = bitcast [3 x i16]* %7 to i8*
  %44 = getelementptr inbounds [3 x i16], [3 x i16]* %7, i64 0, i64 0
  %45 = getelementptr inbounds [3 x i16], [3 x i16]* %7, i64 0, i64 1
  %46 = getelementptr inbounds [3 x i16], [3 x i16]* %7, i64 0, i64 2
  %47 = bitcast [16 x i16]* %8 to i8*
  %48 = getelementptr inbounds [16 x i16], [16 x i16]* %8, i64 0, i64 0
  %49 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %50 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 32
  %51 = bitcast [16 x i16]* %8 to i8*
  br label %54

52:                                               ; preds = %65
  %53 = icmp eq i32 %69, %13
  br i1 %53, label %73, label %54

54:                                               ; preds = %52, %42
  %55 = phi i32 [ 0, %42 ], [ %69, %52 ]
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %43) #8
  store i16 -21846, i16* %44, align 2
  store i16 -21846, i16* %45, align 2
  store i16 -21846, i16* %46, align 2
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %47) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %51, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %49) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %49, i8 -86, i64 256, i1 false)
  %56 = call i32 @cmsNamedColorInfo(%struct._cms_NAMEDCOLORLIST_struct* %10, i32 %55, i8* nonnull %49, i8* null, i8* null, i16* nonnull %44, i16* nonnull %48) #8
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %70, label %58

58:                                               ; preds = %54
  store i8 0, i8* %50, align 16
  %59 = load i32 (%struct._cms_io_handler*, i32, i8*)*, i32 (%struct._cms_io_handler*, i32, i8*)** %32, align 8
  %60 = call i32 %59(%struct._cms_io_handler* %1, i32 32, i8* nonnull %49) #8
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %71, label %62

62:                                               ; preds = %58
  %63 = call i32 @_cmsWriteUInt16Array(%struct._cms_io_handler* %1, i32 3, i16* nonnull %44) #8
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %72, label %65

65:                                               ; preds = %62
  %66 = load i32, i32* %21, align 8
  %67 = call i32 @_cmsWriteUInt16Array(%struct._cms_io_handler* %1, i32 %66, i16* nonnull %48) #8
  %68 = icmp eq i32 %67, 0
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %49) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %47) #8
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %43) #8
  %69 = add nuw i32 %55, 1
  br i1 %68, label %73, label %52

70:                                               ; preds = %54
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %49) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %47) #8
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %43) #8
  br label %73

71:                                               ; preds = %58
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %49) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %47) #8
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %43) #8
  br label %73

72:                                               ; preds = %62
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %49) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %47) #8
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %43) #8
  br label %73

73:                                               ; preds = %65, %52, %40, %72, %71, %70, %36, %25, %19, %16, %4
  %74 = phi i32 [ 0, %4 ], [ 0, %16 ], [ 0, %19 ], [ 0, %25 ], [ 0, %36 ], [ 0, %70 ], [ 0, %71 ], [ 0, %72 ], [ 1, %40 ], [ 1, %52 ], [ 0, %65 ]
  call void @llvm.lifetime.end.p0i8(i64 33, i8* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 33, i8* nonnull %11) #8
  ret i32 %74
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_NamedColor_Dup(%struct._cms_typehandler_struct* nocapture readnone, i8*, i32) #0 {
  %4 = bitcast i8* %1 to %struct._cms_NAMEDCOLORLIST_struct*
  %5 = tail call %struct._cms_NAMEDCOLORLIST_struct* @cmsDupNamedColorList(%struct._cms_NAMEDCOLORLIST_struct* %4) #8
  %6 = bitcast %struct._cms_NAMEDCOLORLIST_struct* %5 to i8*
  ret i8* %6
}

; Function Attrs: nounwind ssp uwtable
define internal void @Type_NamedColor_Free(%struct._cms_typehandler_struct* nocapture readnone, i8*) #0 {
  %3 = bitcast i8* %1 to %struct._cms_NAMEDCOLORLIST_struct*
  tail call void @cmsFreeNamedColorList(%struct._cms_NAMEDCOLORLIST_struct* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_MLU_Read(%struct._cms_typehandler_struct* nocapture readonly, %struct._cms_io_handler*, i32* nocapture, i32) #0 {
  %5 = alloca i16, align 2
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #8
  store i32 -1431655766, i32* %6, align 4
  %11 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #8
  store i32 -1431655766, i32* %7, align 4
  %12 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #8
  store i32 -1431655766, i32* %8, align 4
  %13 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #8
  store i32 -1431655766, i32* %9, align 4
  store i32 0, i32* %2, align 4
  %14 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* nonnull %6) #8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %118, label %16

16:                                               ; preds = %4
  %17 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* nonnull %7) #8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %118, label %19

19:                                               ; preds = %16
  %20 = load i32, i32* %7, align 4
  %21 = icmp eq i32 %20, 12
  %22 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %23 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %22, align 8
  br i1 %21, label %25, label %24

24:                                               ; preds = %19
  call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %23, i32 8, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.12, i64 0, i64 0)) #8
  br label %118

25:                                               ; preds = %19
  %26 = load i32, i32* %6, align 4
  %27 = call %struct._cms_MLU_struct* @cmsMLUalloc(%struct._cmsContext_struct* %23, i32 %26) #8
  %28 = icmp eq %struct._cms_MLU_struct* %27, null
  br i1 %28, label %118, label %29

29:                                               ; preds = %25
  %30 = load i32, i32* %6, align 4
  %31 = getelementptr inbounds %struct._cms_MLU_struct, %struct._cms_MLU_struct* %27, i64 0, i32 2
  store i32 %30, i32* %31, align 4
  %32 = mul i32 %30, 12
  %33 = icmp eq i32 %30, 0
  br i1 %33, label %109, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %struct._cms_MLU_struct, %struct._cms_MLU_struct* %27, i64 0, i32 3
  %36 = add i32 %32, 16
  %37 = add i32 %3, 8
  %38 = sub i32 -16, %32
  br label %39

39:                                               ; preds = %34, %66
  %40 = phi i64 [ 0, %34 ], [ %78, %66 ]
  %41 = phi i32 [ 0, %34 ], [ %77, %66 ]
  %42 = load %struct._cmsMLUentry*, %struct._cmsMLUentry** %35, align 8
  %43 = getelementptr inbounds %struct._cmsMLUentry, %struct._cmsMLUentry* %42, i64 %40, i32 0
  %44 = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %1, i16* %43) #8
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %117, label %46

46:                                               ; preds = %39
  %47 = load %struct._cmsMLUentry*, %struct._cmsMLUentry** %35, align 8
  %48 = getelementptr inbounds %struct._cmsMLUentry, %struct._cmsMLUentry* %47, i64 %40, i32 1
  %49 = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %1, i16* %48) #8
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %117, label %51

51:                                               ; preds = %46
  %52 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* nonnull %8) #8
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %117, label %54

54:                                               ; preds = %51
  %55 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* nonnull %9) #8
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %117, label %57

57:                                               ; preds = %54
  %58 = load i32, i32* %9, align 4
  %59 = icmp ult i32 %58, %36
  br i1 %59, label %117, label %60

60:                                               ; preds = %57
  %61 = load i32, i32* %8, align 4
  %62 = add i32 %61, %58
  %63 = icmp ult i32 %62, %61
  %64 = icmp ugt i32 %62, %37
  %65 = or i1 %63, %64
  br i1 %65, label %117, label %66

66:                                               ; preds = %60
  %67 = add i32 %38, %58
  %68 = shl i32 %61, 1
  %69 = load %struct._cmsMLUentry*, %struct._cmsMLUentry** %35, align 8
  %70 = getelementptr inbounds %struct._cmsMLUentry, %struct._cmsMLUentry* %69, i64 %40, i32 3
  store i32 %68, i32* %70, align 4
  %71 = shl i32 %67, 1
  %72 = load %struct._cmsMLUentry*, %struct._cmsMLUentry** %35, align 8
  %73 = getelementptr inbounds %struct._cmsMLUentry, %struct._cmsMLUentry* %72, i64 %40, i32 2
  store i32 %71, i32* %73, align 4
  %74 = load i32, i32* %8, align 4
  %75 = add i32 %74, %67
  %76 = icmp ugt i32 %75, %41
  %77 = select i1 %76, i32 %75, i32 %41
  %78 = add nuw nsw i64 %40, 1
  %79 = load i32, i32* %6, align 4
  %80 = zext i32 %79 to i64
  %81 = icmp ult i64 %78, %80
  br i1 %81, label %39, label %82

82:                                               ; preds = %66
  %83 = shl i32 %77, 1
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %109, label %85

85:                                               ; preds = %82
  %86 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %22, align 8
  %87 = call i8* @_cmsMalloc(%struct._cmsContext_struct* %86, i32 %83) #8
  %88 = bitcast i8* %87 to i32*
  %89 = icmp eq i8* %87, null
  br i1 %89, label %117, label %90

90:                                               ; preds = %85
  %91 = lshr i32 %77, 1
  %92 = and i32 %91, 1073741823
  %93 = bitcast i16* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %93) #8
  store i16 -21846, i16* %5, align 2
  %94 = icmp eq i32 %92, 0
  br i1 %94, label %107, label %95

95:                                               ; preds = %90
  %96 = zext i32 %92 to i64
  br label %97

97:                                               ; preds = %95, %101
  %98 = phi i64 [ 0, %95 ], [ %105, %101 ]
  %99 = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %1, i16* nonnull %5) #8
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %108, label %101

101:                                              ; preds = %97
  %102 = load i16, i16* %5, align 2
  %103 = zext i16 %102 to i32
  %104 = getelementptr inbounds i32, i32* %88, i64 %98
  store i32 %103, i32* %104, align 4
  %105 = add nuw nsw i64 %98, 1
  %106 = icmp eq i64 %105, %96
  br i1 %106, label %107, label %97

107:                                              ; preds = %101, %90
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %93) #8
  br label %109

108:                                              ; preds = %97
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %93) #8
  br label %117

109:                                              ; preds = %29, %107, %82
  %110 = phi i32 [ 0, %82 ], [ %83, %107 ], [ 0, %29 ]
  %111 = phi i32* [ null, %82 ], [ %88, %107 ], [ null, %29 ]
  %112 = getelementptr inbounds %struct._cms_MLU_struct, %struct._cms_MLU_struct* %27, i64 0, i32 6
  %113 = bitcast i8** %112 to i32**
  store i32* %111, i32** %113, align 8
  %114 = getelementptr inbounds %struct._cms_MLU_struct, %struct._cms_MLU_struct* %27, i64 0, i32 4
  store i32 %110, i32* %114, align 8
  %115 = getelementptr inbounds %struct._cms_MLU_struct, %struct._cms_MLU_struct* %27, i64 0, i32 5
  store i32 %110, i32* %115, align 4
  store i32 1, i32* %2, align 4
  %116 = bitcast %struct._cms_MLU_struct* %27 to i8*
  br label %118

117:                                              ; preds = %57, %60, %39, %46, %51, %54, %108, %85
  call void @cmsMLUfree(%struct._cms_MLU_struct* nonnull %27) #8
  br label %118

118:                                              ; preds = %25, %16, %4, %117, %109, %24
  %119 = phi i8* [ null, %24 ], [ null, %117 ], [ %116, %109 ], [ null, %4 ], [ null, %16 ], [ null, %25 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #8
  ret i8* %119
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @Type_MLU_Write(%struct._cms_typehandler_struct* nocapture readnone, %struct._cms_io_handler*, i8* readonly, i32) #0 {
  %5 = icmp eq i8* %2, null
  br i1 %5, label %6, label %13

6:                                                ; preds = %4
  %7 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 0) #8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %82, label %9

9:                                                ; preds = %6
  %10 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 12) #8
  %11 = icmp ne i32 %10, 0
  %12 = zext i1 %11 to i32
  br label %82

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %2, i64 12
  %15 = bitcast i8* %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %16) #8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %82, label %19

19:                                               ; preds = %13
  %20 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 12) #8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %82, label %22

22:                                               ; preds = %19
  %23 = load i32, i32* %15, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %61, label %25

25:                                               ; preds = %22
  %26 = mul i32 %23, 12
  %27 = getelementptr inbounds i8, i8* %2, i64 16
  %28 = bitcast i8* %27 to %struct._cmsMLUentry**
  %29 = add i32 %26, 16
  br label %34

30:                                               ; preds = %57
  %31 = load i32, i32* %15, align 4
  %32 = zext i32 %31 to i64
  %33 = icmp ult i64 %60, %32
  br i1 %33, label %34, label %61

34:                                               ; preds = %25, %30
  %35 = phi i64 [ 0, %25 ], [ %60, %30 ]
  %36 = load %struct._cmsMLUentry*, %struct._cmsMLUentry** %28, align 8
  %37 = getelementptr inbounds %struct._cmsMLUentry, %struct._cmsMLUentry* %36, i64 %35, i32 3
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %struct._cmsMLUentry, %struct._cmsMLUentry* %36, i64 %35, i32 2
  %40 = load i32, i32* %39, align 4
  %41 = lshr i32 %38, 1
  %42 = lshr i32 %40, 1
  %43 = add i32 %29, %42
  %44 = getelementptr inbounds %struct._cmsMLUentry, %struct._cmsMLUentry* %36, i64 %35, i32 0
  %45 = load i16, i16* %44, align 4
  %46 = tail call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %1, i16 zeroext %45) #8
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %82, label %48

48:                                               ; preds = %34
  %49 = load %struct._cmsMLUentry*, %struct._cmsMLUentry** %28, align 8
  %50 = getelementptr inbounds %struct._cmsMLUentry, %struct._cmsMLUentry* %49, i64 %35, i32 1
  %51 = load i16, i16* %50, align 2
  %52 = tail call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %1, i16 zeroext %51) #8
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %82, label %54

54:                                               ; preds = %48
  %55 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %41) #8
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %82, label %57

57:                                               ; preds = %54
  %58 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %43) #8
  %59 = icmp eq i32 %58, 0
  %60 = add nuw nsw i64 %35, 1
  br i1 %59, label %82, label %30

61:                                               ; preds = %30, %22
  %62 = getelementptr inbounds i8, i8* %2, i64 28
  %63 = bitcast i8* %62 to i32*
  %64 = load i32, i32* %63, align 4
  %65 = lshr i32 %64, 2
  %66 = getelementptr inbounds i8, i8* %2, i64 32
  %67 = bitcast i8* %66 to i32**
  %68 = load i32*, i32** %67, align 8
  %69 = icmp eq i32 %65, 0
  br i1 %69, label %82, label %70

70:                                               ; preds = %61
  %71 = zext i32 %65 to i64
  br label %74

72:                                               ; preds = %74
  %73 = icmp eq i64 %81, %71
  br i1 %73, label %82, label %74

74:                                               ; preds = %72, %70
  %75 = phi i64 [ 0, %70 ], [ %81, %72 ]
  %76 = getelementptr inbounds i32, i32* %68, i64 %75
  %77 = load i32, i32* %76, align 4
  %78 = trunc i32 %77 to i16
  %79 = tail call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %1, i16 zeroext %78) #8
  %80 = icmp eq i32 %79, 0
  %81 = add nuw nsw i64 %75, 1
  br i1 %80, label %82, label %72

82:                                               ; preds = %57, %54, %48, %34, %72, %74, %61, %19, %13, %9, %6
  %83 = phi i32 [ 0, %6 ], [ %12, %9 ], [ 0, %13 ], [ 0, %19 ], [ 1, %61 ], [ 1, %72 ], [ 0, %74 ], [ 0, %34 ], [ 0, %48 ], [ 0, %54 ], [ 0, %57 ]
  ret i32 %83
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_MLU_Dup(%struct._cms_typehandler_struct* nocapture readnone, i8*, i32) #0 {
  %4 = bitcast i8* %1 to %struct._cms_MLU_struct*
  %5 = tail call %struct._cms_MLU_struct* @cmsMLUdup(%struct._cms_MLU_struct* %4) #8
  %6 = bitcast %struct._cms_MLU_struct* %5 to i8*
  ret i8* %6
}

; Function Attrs: nounwind ssp uwtable
define internal void @Type_MLU_Free(%struct._cms_typehandler_struct* nocapture readnone, i8*) #0 {
  %3 = bitcast i8* %1 to %struct._cms_MLU_struct*
  tail call void @cmsMLUfree(%struct._cms_MLU_struct* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_ProfileSequenceDesc_Read(%struct._cms_typehandler_struct* nocapture readonly, %struct._cms_io_handler*, i32* nocapture, i32) #0 {
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #8
  store i32 -1431655766, i32* %5, align 4
  store i32 0, i32* %2, align 4
  %7 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* nonnull %5) #8
  %8 = icmp eq i32 %7, 0
  %9 = icmp ult i32 %3, 4
  %10 = or i1 %9, %8
  br i1 %10, label %71, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %13 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %12, align 8
  %14 = load i32, i32* %5, align 4
  %15 = call %struct.cmsSEQ* @cmsAllocProfileSequenceDescription(%struct._cmsContext_struct* %13, i32 %14) #8
  %16 = icmp eq %struct.cmsSEQ* %15, null
  br i1 %16, label %71, label %17

17:                                               ; preds = %11
  %18 = load i32, i32* %5, align 4
  %19 = getelementptr inbounds %struct.cmsSEQ, %struct.cmsSEQ* %15, i64 0, i32 0
  store i32 %18, i32* %19, align 8
  %20 = load i32, i32* %5, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %68, label %22

22:                                               ; preds = %17
  %23 = add i32 %3, -4
  %24 = getelementptr inbounds %struct.cmsSEQ, %struct.cmsSEQ* %15, i64 0, i32 2
  br label %29

25:                                               ; preds = %63
  %26 = load i32, i32* %5, align 4
  %27 = zext i32 %26 to i64
  %28 = icmp ult i64 %67, %27
  br i1 %28, label %29, label %68

29:                                               ; preds = %22, %25
  %30 = phi i64 [ 0, %22 ], [ %67, %25 ]
  %31 = phi i32 [ %23, %22 ], [ %59, %25 ]
  %32 = load %struct.cmsPSEQDESC*, %struct.cmsPSEQDESC** %24, align 8
  %33 = getelementptr inbounds %struct.cmsPSEQDESC, %struct.cmsPSEQDESC* %32, i64 %30, i32 0
  %34 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* %33) #8
  %35 = icmp eq i32 %34, 0
  %36 = icmp ult i32 %31, 4
  %37 = or i1 %36, %35
  br i1 %37, label %70, label %38

38:                                               ; preds = %29
  %39 = getelementptr inbounds %struct.cmsPSEQDESC, %struct.cmsPSEQDESC* %32, i64 %30, i32 1
  %40 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* %39) #8
  %41 = icmp eq i32 %40, 0
  %42 = and i32 %31, -4
  %43 = icmp eq i32 %42, 4
  %44 = or i1 %43, %41
  br i1 %44, label %70, label %45

45:                                               ; preds = %38
  %46 = getelementptr inbounds %struct.cmsPSEQDESC, %struct.cmsPSEQDESC* %32, i64 %30, i32 2
  %47 = call i32 @_cmsReadUInt64Number(%struct._cms_io_handler* %1, i64* %46) #8
  %48 = icmp eq i32 %47, 0
  %49 = and i32 %31, -8
  %50 = icmp eq i32 %49, 8
  %51 = or i1 %50, %48
  br i1 %51, label %70, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds %struct.cmsPSEQDESC, %struct.cmsPSEQDESC* %32, i64 %30, i32 3
  %54 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* %53) #8
  %55 = icmp eq i32 %54, 0
  %56 = icmp eq i32 %42, 16
  %57 = or i1 %56, %55
  br i1 %57, label %70, label %58

58:                                               ; preds = %52
  %59 = add i32 %31, -20
  %60 = getelementptr inbounds %struct.cmsPSEQDESC, %struct.cmsPSEQDESC* %32, i64 %30, i32 5
  %61 = call fastcc i32 @ReadEmbeddedText(%struct._cms_typehandler_struct* %0, %struct._cms_io_handler* %1, %struct._cms_MLU_struct** %60, i32 %59)
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %70, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %struct.cmsPSEQDESC, %struct.cmsPSEQDESC* %32, i64 %30, i32 6
  %65 = call fastcc i32 @ReadEmbeddedText(%struct._cms_typehandler_struct* %0, %struct._cms_io_handler* %1, %struct._cms_MLU_struct** %64, i32 %59)
  %66 = icmp eq i32 %65, 0
  %67 = add nuw nsw i64 %30, 1
  br i1 %66, label %70, label %25

68:                                               ; preds = %25, %17
  store i32 1, i32* %2, align 4
  %69 = bitcast %struct.cmsSEQ* %15 to i8*
  br label %71

70:                                               ; preds = %63, %29, %38, %45, %52, %58
  call void @cmsFreeProfileSequenceDescription(%struct.cmsSEQ* nonnull %15) #8
  br label %71

71:                                               ; preds = %11, %4, %70, %68
  %72 = phi i8* [ null, %70 ], [ %69, %68 ], [ null, %4 ], [ null, %11 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #8
  ret i8* %72
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @Type_ProfileSequenceDesc_Write(%struct._cms_typehandler_struct* nocapture readonly, %struct._cms_io_handler*, i8* nocapture readonly, i32) #0 {
  %5 = bitcast i8* %2 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %6) #8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %82, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %2, i64 16
  %11 = bitcast i8* %10 to %struct.cmsPSEQDESC**
  %12 = load i32, i32* %5, align 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %82, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 6
  br label %20

16:                                               ; preds = %78
  %17 = load i32, i32* %5, align 8
  %18 = zext i32 %17 to i64
  %19 = icmp ult i64 %81, %18
  br i1 %19, label %20, label %82

20:                                               ; preds = %14, %16
  %21 = phi i64 [ 0, %14 ], [ %81, %16 ]
  %22 = load %struct.cmsPSEQDESC*, %struct.cmsPSEQDESC** %11, align 8
  %23 = getelementptr inbounds %struct.cmsPSEQDESC, %struct.cmsPSEQDESC* %22, i64 %21, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %24) #8
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %82, label %27

27:                                               ; preds = %20
  %28 = getelementptr inbounds %struct.cmsPSEQDESC, %struct.cmsPSEQDESC* %22, i64 %21, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %29) #8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %82, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %struct.cmsPSEQDESC, %struct.cmsPSEQDESC* %22, i64 %21, i32 2
  %34 = tail call i32 @_cmsWriteUInt64Number(%struct._cms_io_handler* %1, i64* %33) #8
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %82, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.cmsPSEQDESC, %struct.cmsPSEQDESC* %22, i64 %21, i32 3
  %38 = load i32, i32* %37, align 8
  %39 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %38) #8
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %82, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %struct.cmsPSEQDESC, %struct.cmsPSEQDESC* %22, i64 %21, i32 5
  %43 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %42, align 8
  %44 = load i32, i32* %15, align 8
  %45 = icmp ult i32 %44, 67108864
  br i1 %45, label %46, label %52

46:                                               ; preds = %41
  %47 = tail call i32 @_cmsWriteTypeBase(%struct._cms_io_handler* %1, i32 1684370275) #8
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %82, label %49

49:                                               ; preds = %46
  %50 = bitcast %struct._cms_MLU_struct* %43 to i8*
  %51 = tail call i32 @Type_Text_Description_Write(%struct._cms_typehandler_struct* %0, %struct._cms_io_handler* %1, i8* %50, i32 1) #8
  br label %58

52:                                               ; preds = %41
  %53 = tail call i32 @_cmsWriteTypeBase(%struct._cms_io_handler* %1, i32 1835824483) #8
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %82, label %55

55:                                               ; preds = %52
  %56 = bitcast %struct._cms_MLU_struct* %43 to i8*
  %57 = tail call i32 @Type_MLU_Write(%struct._cms_typehandler_struct* %0, %struct._cms_io_handler* %1, i8* %56, i32 1) #8
  br label %58

58:                                               ; preds = %49, %55
  %59 = phi i32 [ %51, %49 ], [ %57, %55 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %82, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %struct.cmsPSEQDESC, %struct.cmsPSEQDESC* %22, i64 %21, i32 6
  %63 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %62, align 8
  %64 = load i32, i32* %15, align 8
  %65 = icmp ult i32 %64, 67108864
  br i1 %65, label %66, label %72

66:                                               ; preds = %61
  %67 = tail call i32 @_cmsWriteTypeBase(%struct._cms_io_handler* %1, i32 1684370275) #8
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %82, label %69

69:                                               ; preds = %66
  %70 = bitcast %struct._cms_MLU_struct* %63 to i8*
  %71 = tail call i32 @Type_Text_Description_Write(%struct._cms_typehandler_struct* %0, %struct._cms_io_handler* %1, i8* %70, i32 1) #8
  br label %78

72:                                               ; preds = %61
  %73 = tail call i32 @_cmsWriteTypeBase(%struct._cms_io_handler* %1, i32 1835824483) #8
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %82, label %75

75:                                               ; preds = %72
  %76 = bitcast %struct._cms_MLU_struct* %63 to i8*
  %77 = tail call i32 @Type_MLU_Write(%struct._cms_typehandler_struct* %0, %struct._cms_io_handler* %1, i8* %76, i32 1) #8
  br label %78

78:                                               ; preds = %69, %75
  %79 = phi i32 [ %71, %69 ], [ %77, %75 ]
  %80 = icmp eq i32 %79, 0
  %81 = add nuw nsw i64 %21, 1
  br i1 %80, label %82, label %16

82:                                               ; preds = %16, %20, %27, %32, %36, %58, %78, %46, %52, %66, %72, %9, %4
  %83 = phi i32 [ 0, %4 ], [ 1, %9 ], [ 1, %16 ], [ 0, %20 ], [ 0, %27 ], [ 0, %32 ], [ 0, %36 ], [ 0, %58 ], [ 0, %78 ], [ 0, %46 ], [ 0, %52 ], [ 0, %66 ], [ 0, %72 ]
  ret i32 %83
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_ProfileSequenceDesc_Dup(%struct._cms_typehandler_struct* nocapture readnone, i8*, i32) #0 {
  %4 = bitcast i8* %1 to %struct.cmsSEQ*
  %5 = tail call %struct.cmsSEQ* @cmsDupProfileSequenceDescription(%struct.cmsSEQ* %4) #8
  %6 = bitcast %struct.cmsSEQ* %5 to i8*
  ret i8* %6
}

; Function Attrs: nounwind ssp uwtable
define internal void @Type_ProfileSequenceDesc_Free(%struct._cms_typehandler_struct* nocapture readnone, i8*) #0 {
  %3 = bitcast i8* %1 to %struct.cmsSEQ*
  tail call void @cmsFreeProfileSequenceDescription(%struct.cmsSEQ* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_Signature_Read(%struct._cms_typehandler_struct* nocapture readonly, %struct._cms_io_handler*, i32* nocapture, i32) #0 {
  %5 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %6 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %5, align 8
  %7 = tail call i8* @_cmsMalloc(%struct._cmsContext_struct* %6, i32 4) #8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = bitcast i8* %7 to i32*
  %11 = tail call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* nonnull %10) #8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %9
  store i32 1, i32* %2, align 4
  br label %14

14:                                               ; preds = %9, %4, %13
  %15 = phi i8* [ %7, %13 ], [ null, %4 ], [ null, %9 ]
  ret i8* %15
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @Type_Signature_Write(%struct._cms_typehandler_struct* nocapture readnone, %struct._cms_io_handler*, i8* nocapture readonly, i32) #0 {
  %5 = bitcast i8* %2 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %6) #8
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_Signature_Dup(%struct._cms_typehandler_struct* nocapture readonly, i8*, i32) #0 {
  %4 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %5 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %4, align 8
  %6 = shl i32 %2, 2
  %7 = tail call i8* @_cmsDupMem(%struct._cmsContext_struct* %5, i8* %1, i32 %6) #8
  ret i8* %7
}

; Function Attrs: nounwind ssp uwtable
define internal void @Type_Signature_Free(%struct._cms_typehandler_struct* nocapture readonly, i8*) #0 {
  %3 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %4 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %3, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %4, i8* %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_Measurement_Read(%struct._cms_typehandler_struct* nocapture readonly, %struct._cms_io_handler*, i32* nocapture, i32) #0 {
  %5 = alloca %struct.cmsICCMeasurementConditions, align 8
  %6 = bitcast %struct.cmsICCMeasurementConditions* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %6) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 56, i1 false)
  %7 = getelementptr inbounds %struct.cmsICCMeasurementConditions, %struct.cmsICCMeasurementConditions* %5, i64 0, i32 0
  %8 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* nonnull %7) #8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %30, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.cmsICCMeasurementConditions, %struct.cmsICCMeasurementConditions* %5, i64 0, i32 1
  %12 = call i32 @_cmsReadXYZNumber(%struct._cms_io_handler* %1, %struct.cmsCIEXYZ* %11) #8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %30, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.cmsICCMeasurementConditions, %struct.cmsICCMeasurementConditions* %5, i64 0, i32 2
  %16 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* %15) #8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %30, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.cmsICCMeasurementConditions, %struct.cmsICCMeasurementConditions* %5, i64 0, i32 3
  %20 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %1, double* %19) #8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %30, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.cmsICCMeasurementConditions, %struct.cmsICCMeasurementConditions* %5, i64 0, i32 4
  %24 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* %23) #8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %30, label %26

26:                                               ; preds = %22
  store i32 1, i32* %2, align 4
  %27 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %28 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %27, align 8
  %29 = call i8* @_cmsDupMem(%struct._cmsContext_struct* %28, i8* nonnull %6, i32 56) #8
  br label %30

30:                                               ; preds = %22, %18, %14, %10, %4, %26
  %31 = phi i8* [ %29, %26 ], [ null, %4 ], [ null, %10 ], [ null, %14 ], [ null, %18 ], [ null, %22 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %6) #8
  ret i8* %31
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @Type_Measurement_Write(%struct._cms_typehandler_struct* nocapture readnone, %struct._cms_io_handler*, i8*, i32) #0 {
  %5 = bitcast i8* %2 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %6) #8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %33, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %2, i64 8
  %11 = bitcast i8* %10 to %struct.cmsCIEXYZ*
  %12 = tail call i32 @_cmsWriteXYZNumber(%struct._cms_io_handler* %1, %struct.cmsCIEXYZ* %11) #8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %33, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds i8, i8* %2, i64 32
  %16 = bitcast i8* %15 to i32*
  %17 = load i32, i32* %16, align 8
  %18 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %17) #8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %33, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds i8, i8* %2, i64 40
  %22 = bitcast i8* %21 to double*
  %23 = load double, double* %22, align 8
  %24 = tail call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %1, double %23) #8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %33, label %26

26:                                               ; preds = %20
  %27 = getelementptr inbounds i8, i8* %2, i64 48
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 8
  %30 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %29) #8
  %31 = icmp ne i32 %30, 0
  %32 = zext i1 %31 to i32
  br label %33

33:                                               ; preds = %26, %20, %14, %9, %4
  %34 = phi i32 [ 0, %4 ], [ 0, %9 ], [ 0, %14 ], [ 0, %20 ], [ %32, %26 ]
  ret i32 %34
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_Measurement_Dup(%struct._cms_typehandler_struct* nocapture readonly, i8*, i32) #0 {
  %4 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %5 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %4, align 8
  %6 = tail call i8* @_cmsDupMem(%struct._cmsContext_struct* %5, i8* %1, i32 56) #8
  ret i8* %6
}

; Function Attrs: nounwind ssp uwtable
define internal void @Type_Measurement_Free(%struct._cms_typehandler_struct* nocapture readonly, i8*) #0 {
  %3 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %4 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %3, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %4, i8* %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_Data_Read(%struct._cms_typehandler_struct* nocapture readonly, %struct._cms_io_handler*, i32* nocapture, i32) #0 {
  store i32 0, i32* %2, align 4
  %5 = icmp ult i32 %3, 4
  br i1 %5, label %32, label %6

6:                                                ; preds = %4
  %7 = add i32 %3, -4
  %8 = icmp slt i32 %7, 0
  br i1 %8, label %32, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %11 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %10, align 8
  %12 = add nuw i32 %3, 7
  %13 = tail call i8* @_cmsMalloc(%struct._cmsContext_struct* %11, i32 %12) #8
  %14 = icmp eq i8* %13, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %9
  %16 = bitcast i8* %13 to i32*
  store i32 %7, i32* %16, align 4
  %17 = getelementptr inbounds i8, i8* %13, i64 4
  %18 = bitcast i8* %17 to i32*
  %19 = tail call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* %18) #8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %15
  %22 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %10, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %22, i8* nonnull %13) #8
  br label %32

23:                                               ; preds = %15
  %24 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %1, i64 0, i32 5
  %25 = load i32 (%struct._cms_io_handler*, i8*, i32, i32)*, i32 (%struct._cms_io_handler*, i8*, i32, i32)** %24, align 8
  %26 = getelementptr inbounds i8, i8* %13, i64 8
  %27 = tail call i32 %25(%struct._cms_io_handler* %1, i8* %26, i32 1, i32 %7) #8
  %28 = icmp eq i32 %27, %7
  br i1 %28, label %31, label %29

29:                                               ; preds = %23
  %30 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %10, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %30, i8* nonnull %13) #8
  br label %32

31:                                               ; preds = %23
  store i32 1, i32* %2, align 4
  br label %32

32:                                               ; preds = %9, %6, %4, %31, %29, %21
  %33 = phi i8* [ null, %29 ], [ %13, %31 ], [ null, %21 ], [ null, %4 ], [ null, %6 ], [ null, %9 ]
  ret i8* %33
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @Type_Data_Write(%struct._cms_typehandler_struct* nocapture readnone, %struct._cms_io_handler*, i8*, i32) #0 {
  %5 = getelementptr inbounds i8, i8* %2, i64 4
  %6 = bitcast i8* %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %7) #8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %17, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %1, i64 0, i32 9
  %12 = load i32 (%struct._cms_io_handler*, i32, i8*)*, i32 (%struct._cms_io_handler*, i32, i8*)** %11, align 8
  %13 = bitcast i8* %2 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds i8, i8* %2, i64 8
  %16 = tail call i32 %12(%struct._cms_io_handler* %1, i32 %14, i8* %15) #8
  br label %17

17:                                               ; preds = %4, %10
  %18 = phi i32 [ %16, %10 ], [ 0, %4 ]
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_Data_Dup(%struct._cms_typehandler_struct* nocapture readonly, i8*, i32) #0 {
  %4 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %5 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %4, align 8
  %6 = bitcast i8* %1 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = add i32 %7, 11
  %9 = tail call i8* @_cmsDupMem(%struct._cmsContext_struct* %5, i8* %1, i32 %8) #8
  ret i8* %9
}

; Function Attrs: nounwind ssp uwtable
define internal void @Type_Data_Free(%struct._cms_typehandler_struct* nocapture readonly, i8*) #0 {
  %3 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %4 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %3, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %4, i8* %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_LUTA2B_Read(%struct._cms_typehandler_struct* nocapture readonly, %struct._cms_io_handler*, i32* nocapture, i32) #0 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #8
  store i8 -86, i8* %5, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #8
  store i8 -86, i8* %6, align 1
  %12 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #8
  store i32 -1431655766, i32* %7, align 4
  %13 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #8
  store i32 -1431655766, i32* %8, align 4
  %14 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #8
  store i32 -1431655766, i32* %9, align 4
  %15 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #8
  store i32 -1431655766, i32* %10, align 4
  %16 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #8
  store i32 -1431655766, i32* %11, align 4
  %17 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %1, i64 0, i32 8
  %18 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %17, align 8
  %19 = tail call i32 %18(%struct._cms_io_handler* %1) #8
  %20 = add i32 %19, -8
  %21 = call i32 @_cmsReadUInt8Number(%struct._cms_io_handler* %1, i8* nonnull %5) #8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %112, label %23

23:                                               ; preds = %4
  %24 = call i32 @_cmsReadUInt8Number(%struct._cms_io_handler* %1, i8* nonnull %6) #8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %112, label %26

26:                                               ; preds = %23
  %27 = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %1, i16* null) #8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %112, label %29

29:                                               ; preds = %26
  %30 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* nonnull %7) #8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %112, label %32

32:                                               ; preds = %29
  %33 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* nonnull %8) #8
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %112, label %35

35:                                               ; preds = %32
  %36 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* nonnull %9) #8
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %112, label %38

38:                                               ; preds = %35
  %39 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* nonnull %10) #8
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %112, label %41

41:                                               ; preds = %38
  %42 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* nonnull %11) #8
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %112, label %44

44:                                               ; preds = %41
  %45 = load i8, i8* %5, align 1
  %46 = zext i8 %45 to i32
  %47 = add i8 %45, -1
  %48 = icmp ugt i8 %47, 14
  br i1 %48, label %112, label %49

49:                                               ; preds = %44
  %50 = load i8, i8* %6, align 1
  %51 = add i8 %50, -1
  %52 = icmp ugt i8 %51, 14
  br i1 %52, label %112, label %53

53:                                               ; preds = %49
  %54 = zext i8 %50 to i32
  %55 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %56 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %55, align 8
  %57 = call %struct._cmsPipeline_struct* @cmsPipelineAlloc(%struct._cmsContext_struct* %56, i32 %46, i32 %54) #8
  %58 = icmp eq %struct._cmsPipeline_struct* %57, null
  br i1 %58, label %112, label %59

59:                                               ; preds = %53
  %60 = load i32, i32* %11, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %69, label %62

62:                                               ; preds = %59
  %63 = add i32 %60, %20
  %64 = load i8, i8* %5, align 1
  %65 = zext i8 %64 to i32
  %66 = call fastcc %struct._cmsStage_struct* @ReadSetOfCurves(%struct._cms_typehandler_struct* %0, %struct._cms_io_handler* %1, i32 %63, i32 %65)
  %67 = call i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct* nonnull %57, i32 1, %struct._cmsStage_struct* %66) #8
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %111, label %69

69:                                               ; preds = %62, %59
  %70 = load i32, i32* %10, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %81, label %72

72:                                               ; preds = %69
  %73 = add i32 %70, %20
  %74 = load i8, i8* %5, align 1
  %75 = zext i8 %74 to i32
  %76 = load i8, i8* %6, align 1
  %77 = zext i8 %76 to i32
  %78 = call fastcc %struct._cmsStage_struct* @ReadCLUT(%struct._cms_typehandler_struct* %0, %struct._cms_io_handler* %1, i32 %73, i32 %75, i32 %77)
  %79 = call i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct* nonnull %57, i32 1, %struct._cmsStage_struct* %78) #8
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %111, label %81

81:                                               ; preds = %72, %69
  %82 = load i32, i32* %9, align 4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %91, label %84

84:                                               ; preds = %81
  %85 = add i32 %82, %20
  %86 = load i8, i8* %6, align 1
  %87 = zext i8 %86 to i32
  %88 = call fastcc %struct._cmsStage_struct* @ReadSetOfCurves(%struct._cms_typehandler_struct* %0, %struct._cms_io_handler* %1, i32 %85, i32 %87)
  %89 = call i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct* nonnull %57, i32 1, %struct._cmsStage_struct* %88) #8
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %111, label %91

91:                                               ; preds = %84, %81
  %92 = load i32, i32* %8, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %99, label %94

94:                                               ; preds = %91
  %95 = add i32 %92, %20
  %96 = call fastcc %struct._cmsStage_struct* @ReadMatrix(%struct._cms_typehandler_struct* %0, %struct._cms_io_handler* %1, i32 %95)
  %97 = call i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct* nonnull %57, i32 1, %struct._cmsStage_struct* %96) #8
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %111, label %99

99:                                               ; preds = %94, %91
  %100 = load i32, i32* %7, align 4
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %109, label %102

102:                                              ; preds = %99
  %103 = add i32 %100, %20
  %104 = load i8, i8* %6, align 1
  %105 = zext i8 %104 to i32
  %106 = call fastcc %struct._cmsStage_struct* @ReadSetOfCurves(%struct._cms_typehandler_struct* %0, %struct._cms_io_handler* %1, i32 %103, i32 %105)
  %107 = call i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct* nonnull %57, i32 1, %struct._cmsStage_struct* %106) #8
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %111, label %109

109:                                              ; preds = %102, %99
  store i32 1, i32* %2, align 4
  %110 = bitcast %struct._cmsPipeline_struct* %57 to i8*
  br label %112

111:                                              ; preds = %62, %72, %84, %94, %102
  call void @cmsPipelineFree(%struct._cmsPipeline_struct* nonnull %57) #8
  br label %112

112:                                              ; preds = %53, %49, %44, %41, %38, %35, %32, %29, %26, %23, %4, %111, %109
  %113 = phi i8* [ %110, %109 ], [ null, %111 ], [ null, %4 ], [ null, %23 ], [ null, %26 ], [ null, %29 ], [ null, %32 ], [ null, %35 ], [ null, %38 ], [ null, %41 ], [ null, %44 ], [ null, %49 ], [ null, %53 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #8
  ret i8* %113
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @Type_LUTA2B_Write(%struct._cms_typehandler_struct* nocapture readonly, %struct._cms_io_handler*, i8*, i32) #0 {
  %5 = alloca %struct._cmsStage_struct*, align 8
  %6 = alloca %struct._cmsStage_struct*, align 8
  %7 = alloca %struct._cmsStage_struct*, align 8
  %8 = alloca %struct._cmsStage_struct*, align 8
  %9 = alloca %struct._cmsStage_struct*, align 8
  %10 = bitcast i8* %2 to %struct._cmsPipeline_struct*
  %11 = bitcast %struct._cmsStage_struct** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #8
  store %struct._cmsStage_struct* null, %struct._cmsStage_struct** %5, align 8
  %12 = bitcast %struct._cmsStage_struct** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #8
  store %struct._cmsStage_struct* null, %struct._cmsStage_struct** %6, align 8
  %13 = bitcast %struct._cmsStage_struct** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #8
  store %struct._cmsStage_struct* null, %struct._cmsStage_struct** %7, align 8
  %14 = bitcast %struct._cmsStage_struct** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #8
  store %struct._cmsStage_struct* null, %struct._cmsStage_struct** %8, align 8
  %15 = bitcast %struct._cmsStage_struct** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #8
  store %struct._cmsStage_struct* null, %struct._cmsStage_struct** %9, align 8
  %16 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %1, i64 0, i32 8
  %17 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %16, align 8
  %18 = tail call i32 %17(%struct._cms_io_handler* %1) #8
  %19 = add i32 %18, -8
  %20 = bitcast i8* %2 to %struct._cmsStage_struct**
  %21 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %20, align 8
  %22 = icmp eq %struct._cmsStage_struct* %21, null
  br i1 %22, label %38, label %23

23:                                               ; preds = %4
  %24 = call i32 (%struct._cmsPipeline_struct*, i32, ...) @cmsPipelineCheckAndRetreiveStages(%struct._cmsPipeline_struct* %10, i32 1, i32 1668707188, %struct._cmsStage_struct** nonnull %6) #8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %38

26:                                               ; preds = %23
  %27 = call i32 (%struct._cmsPipeline_struct*, i32, ...) @cmsPipelineCheckAndRetreiveStages(%struct._cmsPipeline_struct* %10, i32 3, i32 1668707188, i32 1835103334, i32 1668707188, %struct._cmsStage_struct** nonnull %7, %struct._cmsStage_struct** nonnull %8, %struct._cmsStage_struct** nonnull %6) #8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %38

29:                                               ; preds = %26
  %30 = call i32 (%struct._cmsPipeline_struct*, i32, ...) @cmsPipelineCheckAndRetreiveStages(%struct._cmsPipeline_struct* %10, i32 3, i32 1668707188, i32 1668052340, i32 1668707188, %struct._cmsStage_struct** nonnull %5, %struct._cmsStage_struct** nonnull %9, %struct._cmsStage_struct** nonnull %6) #8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %38

32:                                               ; preds = %29
  %33 = call i32 (%struct._cmsPipeline_struct*, i32, ...) @cmsPipelineCheckAndRetreiveStages(%struct._cmsPipeline_struct* %10, i32 5, i32 1668707188, i32 1668052340, i32 1668707188, i32 1835103334, i32 1668707188, %struct._cmsStage_struct** nonnull %5, %struct._cmsStage_struct** nonnull %9, %struct._cmsStage_struct** nonnull %7, %struct._cmsStage_struct** nonnull %8, %struct._cmsStage_struct** nonnull %6) #8
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %32
  %36 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %37 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %36, align 8
  call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %37, i32 13, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.15, i64 0, i64 0)) #8
  br label %155

38:                                               ; preds = %32, %29, %26, %23, %4
  %39 = call i32 @cmsPipelineInputChannels(%struct._cmsPipeline_struct* %10) #8
  %40 = call i32 @cmsPipelineOutputChannels(%struct._cmsPipeline_struct* %10) #8
  %41 = trunc i32 %39 to i8
  %42 = call i32 @_cmsWriteUInt8Number(%struct._cms_io_handler* %1, i8 zeroext %41) #8
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %155, label %44

44:                                               ; preds = %38
  %45 = trunc i32 %40 to i8
  %46 = call i32 @_cmsWriteUInt8Number(%struct._cms_io_handler* %1, i8 zeroext %45) #8
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %155, label %48

48:                                               ; preds = %44
  %49 = call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %1, i16 zeroext 0) #8
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %155, label %51

51:                                               ; preds = %48
  %52 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %16, align 8
  %53 = call i32 %52(%struct._cms_io_handler* %1) #8
  %54 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 0) #8
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %155, label %56

56:                                               ; preds = %51
  %57 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 0) #8
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %155, label %59

59:                                               ; preds = %56
  %60 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 0) #8
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %155, label %62

62:                                               ; preds = %59
  %63 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 0) #8
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %155, label %65

65:                                               ; preds = %62
  %66 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 0) #8
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %155, label %68

68:                                               ; preds = %65
  %69 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %5, align 8
  %70 = icmp eq %struct._cmsStage_struct* %69, null
  br i1 %70, label %78, label %71

71:                                               ; preds = %68
  %72 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %16, align 8
  %73 = call i32 %72(%struct._cms_io_handler* %1) #8
  %74 = sub i32 %73, %19
  %75 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %5, align 8
  %76 = call fastcc i32 @WriteSetOfCurves(%struct._cms_typehandler_struct* %0, %struct._cms_io_handler* %1, %struct._cmsStage_struct* %75)
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %155, label %78

78:                                               ; preds = %71, %68
  %79 = phi i32 [ %74, %71 ], [ 0, %68 ]
  %80 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %9, align 8
  %81 = icmp eq %struct._cmsStage_struct* %80, null
  br i1 %81, label %94, label %82

82:                                               ; preds = %78
  %83 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %16, align 8
  %84 = call i32 %83(%struct._cms_io_handler* %1) #8
  %85 = sub i32 %84, %19
  %86 = getelementptr inbounds i8, i8* %2, i64 64
  %87 = bitcast i8* %86 to i32*
  %88 = load i32, i32* %87, align 8
  %89 = icmp eq i32 %88, 0
  %90 = select i1 %89, i8 2, i8 1
  %91 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %9, align 8
  %92 = call fastcc i32 @WriteCLUT(%struct._cms_typehandler_struct* %0, %struct._cms_io_handler* %1, i8 zeroext %90, %struct._cmsStage_struct* %91)
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %155, label %94

94:                                               ; preds = %82, %78
  %95 = phi i32 [ %85, %82 ], [ 0, %78 ]
  %96 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %7, align 8
  %97 = icmp eq %struct._cmsStage_struct* %96, null
  br i1 %97, label %105, label %98

98:                                               ; preds = %94
  %99 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %16, align 8
  %100 = call i32 %99(%struct._cms_io_handler* %1) #8
  %101 = sub i32 %100, %19
  %102 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %7, align 8
  %103 = call fastcc i32 @WriteSetOfCurves(%struct._cms_typehandler_struct* %0, %struct._cms_io_handler* %1, %struct._cmsStage_struct* %102)
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %155, label %105

105:                                              ; preds = %98, %94
  %106 = phi i32 [ %101, %98 ], [ 0, %94 ]
  %107 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %8, align 8
  %108 = icmp eq %struct._cmsStage_struct* %107, null
  br i1 %108, label %116, label %109

109:                                              ; preds = %105
  %110 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %16, align 8
  %111 = call i32 %110(%struct._cms_io_handler* %1) #8
  %112 = sub i32 %111, %19
  %113 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %8, align 8
  %114 = call fastcc i32 @WriteMatrix(%struct._cms_io_handler* %1, %struct._cmsStage_struct* %113)
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %155, label %116

116:                                              ; preds = %109, %105
  %117 = phi i32 [ %112, %109 ], [ 0, %105 ]
  %118 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %6, align 8
  %119 = icmp eq %struct._cmsStage_struct* %118, null
  br i1 %119, label %127, label %120

120:                                              ; preds = %116
  %121 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %16, align 8
  %122 = call i32 %121(%struct._cms_io_handler* %1) #8
  %123 = sub i32 %122, %19
  %124 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %6, align 8
  %125 = call fastcc i32 @WriteSetOfCurves(%struct._cms_typehandler_struct* %0, %struct._cms_io_handler* %1, %struct._cmsStage_struct* %124)
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %155, label %127

127:                                              ; preds = %120, %116
  %128 = phi i32 [ %123, %120 ], [ 0, %116 ]
  %129 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %16, align 8
  %130 = call i32 %129(%struct._cms_io_handler* %1) #8
  %131 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %1, i64 0, i32 6
  %132 = load i32 (%struct._cms_io_handler*, i32)*, i32 (%struct._cms_io_handler*, i32)** %131, align 8
  %133 = call i32 %132(%struct._cms_io_handler* %1, i32 %53) #8
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %155, label %135

135:                                              ; preds = %127
  %136 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %128) #8
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %155, label %138

138:                                              ; preds = %135
  %139 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %117) #8
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %155, label %141

141:                                              ; preds = %138
  %142 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %106) #8
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %155, label %144

144:                                              ; preds = %141
  %145 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %95) #8
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %155, label %147

147:                                              ; preds = %144
  %148 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %79) #8
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %155, label %150

150:                                              ; preds = %147
  %151 = load i32 (%struct._cms_io_handler*, i32)*, i32 (%struct._cms_io_handler*, i32)** %131, align 8
  %152 = call i32 %151(%struct._cms_io_handler* %1, i32 %130) #8
  %153 = icmp ne i32 %152, 0
  %154 = zext i1 %153 to i32
  br label %155

155:                                              ; preds = %150, %147, %144, %141, %138, %135, %127, %120, %109, %98, %82, %71, %65, %62, %59, %56, %51, %48, %44, %38, %35
  %156 = phi i32 [ 0, %35 ], [ 0, %38 ], [ 0, %44 ], [ 0, %48 ], [ 0, %51 ], [ 0, %56 ], [ 0, %59 ], [ 0, %62 ], [ 0, %65 ], [ 0, %71 ], [ 0, %82 ], [ 0, %98 ], [ 0, %109 ], [ 0, %120 ], [ 0, %127 ], [ 0, %135 ], [ 0, %138 ], [ 0, %141 ], [ 0, %144 ], [ 0, %147 ], [ %154, %150 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #8
  ret i32 %156
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_LUTA2B_Dup(%struct._cms_typehandler_struct* nocapture readnone, i8*, i32) #0 {
  %4 = bitcast i8* %1 to %struct._cmsPipeline_struct*
  %5 = tail call %struct._cmsPipeline_struct* @cmsPipelineDup(%struct._cmsPipeline_struct* %4) #8
  %6 = bitcast %struct._cmsPipeline_struct* %5 to i8*
  ret i8* %6
}

; Function Attrs: nounwind ssp uwtable
define internal void @Type_LUTA2B_Free(%struct._cms_typehandler_struct* nocapture readnone, i8*) #0 {
  %3 = bitcast i8* %1 to %struct._cmsPipeline_struct*
  tail call void @cmsPipelineFree(%struct._cmsPipeline_struct* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_LUTB2A_Read(%struct._cms_typehandler_struct* nocapture readonly, %struct._cms_io_handler*, i32* nocapture, i32) #0 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #8
  store i8 -86, i8* %5, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #8
  store i8 -86, i8* %6, align 1
  %12 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #8
  store i32 -1431655766, i32* %7, align 4
  %13 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #8
  store i32 -1431655766, i32* %8, align 4
  %14 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #8
  store i32 -1431655766, i32* %9, align 4
  %15 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #8
  store i32 -1431655766, i32* %10, align 4
  %16 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #8
  store i32 -1431655766, i32* %11, align 4
  %17 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %1, i64 0, i32 8
  %18 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %17, align 8
  %19 = tail call i32 %18(%struct._cms_io_handler* %1) #8
  %20 = add i32 %19, -8
  %21 = call i32 @_cmsReadUInt8Number(%struct._cms_io_handler* %1, i8* nonnull %5) #8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %114, label %23

23:                                               ; preds = %4
  %24 = call i32 @_cmsReadUInt8Number(%struct._cms_io_handler* %1, i8* nonnull %6) #8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %114, label %26

26:                                               ; preds = %23
  %27 = load i8, i8* %5, align 1
  %28 = add i8 %27, -1
  %29 = icmp ugt i8 %28, 14
  br i1 %29, label %114, label %30

30:                                               ; preds = %26
  %31 = load i8, i8* %6, align 1
  %32 = add i8 %31, -1
  %33 = icmp ugt i8 %32, 14
  br i1 %33, label %114, label %34

34:                                               ; preds = %30
  %35 = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %1, i16* null) #8
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %114, label %37

37:                                               ; preds = %34
  %38 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* nonnull %7) #8
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %114, label %40

40:                                               ; preds = %37
  %41 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* nonnull %8) #8
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %114, label %43

43:                                               ; preds = %40
  %44 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* nonnull %9) #8
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %114, label %46

46:                                               ; preds = %43
  %47 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* nonnull %10) #8
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %114, label %49

49:                                               ; preds = %46
  %50 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* nonnull %11) #8
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %114, label %52

52:                                               ; preds = %49
  %53 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %54 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %53, align 8
  %55 = load i8, i8* %5, align 1
  %56 = zext i8 %55 to i32
  %57 = load i8, i8* %6, align 1
  %58 = zext i8 %57 to i32
  %59 = call %struct._cmsPipeline_struct* @cmsPipelineAlloc(%struct._cmsContext_struct* %54, i32 %56, i32 %58) #8
  %60 = icmp eq %struct._cmsPipeline_struct* %59, null
  br i1 %60, label %114, label %61

61:                                               ; preds = %52
  %62 = load i32, i32* %7, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %71, label %64

64:                                               ; preds = %61
  %65 = add i32 %62, %20
  %66 = load i8, i8* %5, align 1
  %67 = zext i8 %66 to i32
  %68 = call fastcc %struct._cmsStage_struct* @ReadSetOfCurves(%struct._cms_typehandler_struct* %0, %struct._cms_io_handler* %1, i32 %65, i32 %67)
  %69 = call i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct* nonnull %59, i32 1, %struct._cmsStage_struct* %68) #8
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %113, label %71

71:                                               ; preds = %64, %61
  %72 = load i32, i32* %8, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %79, label %74

74:                                               ; preds = %71
  %75 = add i32 %72, %20
  %76 = call fastcc %struct._cmsStage_struct* @ReadMatrix(%struct._cms_typehandler_struct* %0, %struct._cms_io_handler* %1, i32 %75)
  %77 = call i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct* nonnull %59, i32 1, %struct._cmsStage_struct* %76) #8
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %113, label %79

79:                                               ; preds = %74, %71
  %80 = load i32, i32* %9, align 4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %89, label %82

82:                                               ; preds = %79
  %83 = add i32 %80, %20
  %84 = load i8, i8* %5, align 1
  %85 = zext i8 %84 to i32
  %86 = call fastcc %struct._cmsStage_struct* @ReadSetOfCurves(%struct._cms_typehandler_struct* %0, %struct._cms_io_handler* %1, i32 %83, i32 %85)
  %87 = call i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct* nonnull %59, i32 1, %struct._cmsStage_struct* %86) #8
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %113, label %89

89:                                               ; preds = %82, %79
  %90 = load i32, i32* %10, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %101, label %92

92:                                               ; preds = %89
  %93 = add i32 %90, %20
  %94 = load i8, i8* %5, align 1
  %95 = zext i8 %94 to i32
  %96 = load i8, i8* %6, align 1
  %97 = zext i8 %96 to i32
  %98 = call fastcc %struct._cmsStage_struct* @ReadCLUT(%struct._cms_typehandler_struct* %0, %struct._cms_io_handler* %1, i32 %93, i32 %95, i32 %97)
  %99 = call i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct* nonnull %59, i32 1, %struct._cmsStage_struct* %98) #8
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %113, label %101

101:                                              ; preds = %92, %89
  %102 = load i32, i32* %11, align 4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %111, label %104

104:                                              ; preds = %101
  %105 = add i32 %102, %20
  %106 = load i8, i8* %6, align 1
  %107 = zext i8 %106 to i32
  %108 = call fastcc %struct._cmsStage_struct* @ReadSetOfCurves(%struct._cms_typehandler_struct* %0, %struct._cms_io_handler* %1, i32 %105, i32 %107)
  %109 = call i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct* nonnull %59, i32 1, %struct._cmsStage_struct* %108) #8
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %113, label %111

111:                                              ; preds = %104, %101
  store i32 1, i32* %2, align 4
  %112 = bitcast %struct._cmsPipeline_struct* %59 to i8*
  br label %114

113:                                              ; preds = %64, %74, %82, %92, %104
  call void @cmsPipelineFree(%struct._cmsPipeline_struct* nonnull %59) #8
  br label %114

114:                                              ; preds = %52, %49, %46, %43, %40, %37, %34, %30, %26, %23, %4, %113, %111
  %115 = phi i8* [ %112, %111 ], [ null, %113 ], [ null, %4 ], [ null, %23 ], [ null, %26 ], [ null, %30 ], [ null, %34 ], [ null, %37 ], [ null, %40 ], [ null, %43 ], [ null, %46 ], [ null, %49 ], [ null, %52 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #8
  ret i8* %115
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @Type_LUTB2A_Write(%struct._cms_typehandler_struct* nocapture readonly, %struct._cms_io_handler*, i8*, i32) #0 {
  %5 = alloca %struct._cmsStage_struct*, align 8
  %6 = alloca %struct._cmsStage_struct*, align 8
  %7 = alloca %struct._cmsStage_struct*, align 8
  %8 = alloca %struct._cmsStage_struct*, align 8
  %9 = alloca %struct._cmsStage_struct*, align 8
  %10 = bitcast i8* %2 to %struct._cmsPipeline_struct*
  %11 = bitcast %struct._cmsStage_struct** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #8
  store %struct._cmsStage_struct* null, %struct._cmsStage_struct** %5, align 8
  %12 = bitcast %struct._cmsStage_struct** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #8
  store %struct._cmsStage_struct* null, %struct._cmsStage_struct** %6, align 8
  %13 = bitcast %struct._cmsStage_struct** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #8
  store %struct._cmsStage_struct* null, %struct._cmsStage_struct** %7, align 8
  %14 = bitcast %struct._cmsStage_struct** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #8
  store %struct._cmsStage_struct* null, %struct._cmsStage_struct** %8, align 8
  %15 = bitcast %struct._cmsStage_struct** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #8
  store %struct._cmsStage_struct* null, %struct._cmsStage_struct** %9, align 8
  %16 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %1, i64 0, i32 8
  %17 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %16, align 8
  %18 = tail call i32 %17(%struct._cms_io_handler* %1) #8
  %19 = add i32 %18, -8
  %20 = call i32 (%struct._cmsPipeline_struct*, i32, ...) @cmsPipelineCheckAndRetreiveStages(%struct._cmsPipeline_struct* %10, i32 1, i32 1668707188, %struct._cmsStage_struct** nonnull %6) #8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %34

22:                                               ; preds = %4
  %23 = call i32 (%struct._cmsPipeline_struct*, i32, ...) @cmsPipelineCheckAndRetreiveStages(%struct._cmsPipeline_struct* %10, i32 3, i32 1668707188, i32 1835103334, i32 1668707188, %struct._cmsStage_struct** nonnull %6, %struct._cmsStage_struct** nonnull %8, %struct._cmsStage_struct** nonnull %7) #8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %34

25:                                               ; preds = %22
  %26 = call i32 (%struct._cmsPipeline_struct*, i32, ...) @cmsPipelineCheckAndRetreiveStages(%struct._cmsPipeline_struct* %10, i32 3, i32 1668707188, i32 1668052340, i32 1668707188, %struct._cmsStage_struct** nonnull %6, %struct._cmsStage_struct** nonnull %9, %struct._cmsStage_struct** nonnull %5) #8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %34

28:                                               ; preds = %25
  %29 = call i32 (%struct._cmsPipeline_struct*, i32, ...) @cmsPipelineCheckAndRetreiveStages(%struct._cmsPipeline_struct* %10, i32 5, i32 1668707188, i32 1835103334, i32 1668707188, i32 1668052340, i32 1668707188, %struct._cmsStage_struct** nonnull %6, %struct._cmsStage_struct** nonnull %8, %struct._cmsStage_struct** nonnull %7, %struct._cmsStage_struct** nonnull %9, %struct._cmsStage_struct** nonnull %5) #8
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %28
  %32 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %33 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %32, align 8
  call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %33, i32 13, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.17, i64 0, i64 0)) #8
  br label %151

34:                                               ; preds = %28, %25, %22, %4
  %35 = call i32 @cmsPipelineInputChannels(%struct._cmsPipeline_struct* %10) #8
  %36 = call i32 @cmsPipelineOutputChannels(%struct._cmsPipeline_struct* %10) #8
  %37 = trunc i32 %35 to i8
  %38 = call i32 @_cmsWriteUInt8Number(%struct._cms_io_handler* %1, i8 zeroext %37) #8
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %151, label %40

40:                                               ; preds = %34
  %41 = trunc i32 %36 to i8
  %42 = call i32 @_cmsWriteUInt8Number(%struct._cms_io_handler* %1, i8 zeroext %41) #8
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %151, label %44

44:                                               ; preds = %40
  %45 = call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %1, i16 zeroext 0) #8
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %151, label %47

47:                                               ; preds = %44
  %48 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %16, align 8
  %49 = call i32 %48(%struct._cms_io_handler* %1) #8
  %50 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 0) #8
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %151, label %52

52:                                               ; preds = %47
  %53 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 0) #8
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %151, label %55

55:                                               ; preds = %52
  %56 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 0) #8
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %151, label %58

58:                                               ; preds = %55
  %59 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 0) #8
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %151, label %61

61:                                               ; preds = %58
  %62 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 0) #8
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %151, label %64

64:                                               ; preds = %61
  %65 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %5, align 8
  %66 = icmp eq %struct._cmsStage_struct* %65, null
  br i1 %66, label %74, label %67

67:                                               ; preds = %64
  %68 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %16, align 8
  %69 = call i32 %68(%struct._cms_io_handler* %1) #8
  %70 = sub i32 %69, %19
  %71 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %5, align 8
  %72 = call fastcc i32 @WriteSetOfCurves(%struct._cms_typehandler_struct* %0, %struct._cms_io_handler* %1, %struct._cmsStage_struct* %71)
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %151, label %74

74:                                               ; preds = %67, %64
  %75 = phi i32 [ %70, %67 ], [ 0, %64 ]
  %76 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %9, align 8
  %77 = icmp eq %struct._cmsStage_struct* %76, null
  br i1 %77, label %90, label %78

78:                                               ; preds = %74
  %79 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %16, align 8
  %80 = call i32 %79(%struct._cms_io_handler* %1) #8
  %81 = sub i32 %80, %19
  %82 = getelementptr inbounds i8, i8* %2, i64 64
  %83 = bitcast i8* %82 to i32*
  %84 = load i32, i32* %83, align 8
  %85 = icmp eq i32 %84, 0
  %86 = select i1 %85, i8 2, i8 1
  %87 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %9, align 8
  %88 = call fastcc i32 @WriteCLUT(%struct._cms_typehandler_struct* %0, %struct._cms_io_handler* %1, i8 zeroext %86, %struct._cmsStage_struct* %87)
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %151, label %90

90:                                               ; preds = %78, %74
  %91 = phi i32 [ %81, %78 ], [ 0, %74 ]
  %92 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %7, align 8
  %93 = icmp eq %struct._cmsStage_struct* %92, null
  br i1 %93, label %101, label %94

94:                                               ; preds = %90
  %95 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %16, align 8
  %96 = call i32 %95(%struct._cms_io_handler* %1) #8
  %97 = sub i32 %96, %19
  %98 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %7, align 8
  %99 = call fastcc i32 @WriteSetOfCurves(%struct._cms_typehandler_struct* %0, %struct._cms_io_handler* %1, %struct._cmsStage_struct* %98)
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %151, label %101

101:                                              ; preds = %94, %90
  %102 = phi i32 [ %97, %94 ], [ 0, %90 ]
  %103 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %8, align 8
  %104 = icmp eq %struct._cmsStage_struct* %103, null
  br i1 %104, label %112, label %105

105:                                              ; preds = %101
  %106 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %16, align 8
  %107 = call i32 %106(%struct._cms_io_handler* %1) #8
  %108 = sub i32 %107, %19
  %109 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %8, align 8
  %110 = call fastcc i32 @WriteMatrix(%struct._cms_io_handler* %1, %struct._cmsStage_struct* %109)
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %151, label %112

112:                                              ; preds = %105, %101
  %113 = phi i32 [ %108, %105 ], [ 0, %101 ]
  %114 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %6, align 8
  %115 = icmp eq %struct._cmsStage_struct* %114, null
  br i1 %115, label %123, label %116

116:                                              ; preds = %112
  %117 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %16, align 8
  %118 = call i32 %117(%struct._cms_io_handler* %1) #8
  %119 = sub i32 %118, %19
  %120 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %6, align 8
  %121 = call fastcc i32 @WriteSetOfCurves(%struct._cms_typehandler_struct* %0, %struct._cms_io_handler* %1, %struct._cmsStage_struct* %120)
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %151, label %123

123:                                              ; preds = %116, %112
  %124 = phi i32 [ %119, %116 ], [ 0, %112 ]
  %125 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %16, align 8
  %126 = call i32 %125(%struct._cms_io_handler* %1) #8
  %127 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %1, i64 0, i32 6
  %128 = load i32 (%struct._cms_io_handler*, i32)*, i32 (%struct._cms_io_handler*, i32)** %127, align 8
  %129 = call i32 %128(%struct._cms_io_handler* %1, i32 %49) #8
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %151, label %131

131:                                              ; preds = %123
  %132 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %124) #8
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %151, label %134

134:                                              ; preds = %131
  %135 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %113) #8
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %151, label %137

137:                                              ; preds = %134
  %138 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %102) #8
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %151, label %140

140:                                              ; preds = %137
  %141 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %91) #8
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %151, label %143

143:                                              ; preds = %140
  %144 = call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %75) #8
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %151, label %146

146:                                              ; preds = %143
  %147 = load i32 (%struct._cms_io_handler*, i32)*, i32 (%struct._cms_io_handler*, i32)** %127, align 8
  %148 = call i32 %147(%struct._cms_io_handler* %1, i32 %126) #8
  %149 = icmp ne i32 %148, 0
  %150 = zext i1 %149 to i32
  br label %151

151:                                              ; preds = %146, %143, %140, %137, %134, %131, %123, %116, %105, %94, %78, %67, %61, %58, %55, %52, %47, %44, %40, %34, %31
  %152 = phi i32 [ 0, %31 ], [ 0, %34 ], [ 0, %40 ], [ 0, %44 ], [ 0, %47 ], [ 0, %52 ], [ 0, %55 ], [ 0, %58 ], [ 0, %61 ], [ 0, %67 ], [ 0, %78 ], [ 0, %94 ], [ 0, %105 ], [ 0, %116 ], [ 0, %123 ], [ 0, %131 ], [ 0, %134 ], [ 0, %137 ], [ 0, %140 ], [ 0, %143 ], [ %150, %146 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #8
  ret i32 %152
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_LUTB2A_Dup(%struct._cms_typehandler_struct* nocapture readnone, i8*, i32) #0 {
  %4 = bitcast i8* %1 to %struct._cmsPipeline_struct*
  %5 = tail call %struct._cmsPipeline_struct* @cmsPipelineDup(%struct._cmsPipeline_struct* %4) #8
  %6 = bitcast %struct._cmsPipeline_struct* %5 to i8*
  ret i8* %6
}

; Function Attrs: nounwind ssp uwtable
define internal void @Type_LUTB2A_Free(%struct._cms_typehandler_struct* nocapture readnone, i8*) #0 {
  %3 = bitcast i8* %1 to %struct._cmsPipeline_struct*
  tail call void @cmsPipelineFree(%struct._cmsPipeline_struct* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_UcrBg_Read(%struct._cms_typehandler_struct* nocapture readonly, %struct._cms_io_handler*, i32* nocapture, i32) #0 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %8 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %7, align 8
  %9 = tail call i8* @_cmsMallocZero(%struct._cmsContext_struct* %8, i32 24) #8
  %10 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #8
  store i32 -1431655766, i32* %5, align 4
  %11 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #8
  store i32 -1431655766, i32* %6, align 4
  store i32 0, i32* %2, align 4
  %12 = icmp eq i8* %9, null
  br i1 %12, label %85, label %13

13:                                               ; preds = %4
  %14 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* nonnull %5) #8
  %15 = icmp eq i32 %14, 0
  %16 = icmp ult i32 %3, 4
  %17 = or i1 %16, %15
  br i1 %17, label %85, label %18

18:                                               ; preds = %13
  %19 = add i32 %3, -4
  %20 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %7, align 8
  %21 = load i32, i32* %5, align 4
  %22 = call %struct._cms_curve_struct* @cmsBuildTabulatedToneCurve16(%struct._cmsContext_struct* %20, i32 %21, i16* null) #8
  %23 = bitcast i8* %9 to %struct._cms_curve_struct**
  store %struct._cms_curve_struct* %22, %struct._cms_curve_struct** %23, align 8
  %24 = icmp eq %struct._cms_curve_struct* %22, null
  br i1 %24, label %85, label %25

25:                                               ; preds = %18
  %26 = load i32, i32* %5, align 4
  %27 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %22, i64 0, i32 6
  %28 = load i16*, i16** %27, align 8
  %29 = call i32 @_cmsReadUInt16Array(%struct._cms_io_handler* %1, i32 %26, i16* %28) #8
  %30 = icmp eq i32 %29, 0
  %31 = icmp ult i32 %19, 4
  %32 = or i1 %31, %30
  br i1 %32, label %85, label %33

33:                                               ; preds = %25
  %34 = load i32, i32* %5, align 4
  %35 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* nonnull %6) #8
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %85, label %37

37:                                               ; preds = %33
  %38 = shl i32 %34, 1
  %39 = sub i32 %19, %38
  %40 = icmp ult i32 %39, 4
  br i1 %40, label %85, label %41

41:                                               ; preds = %37
  %42 = add i32 %39, -4
  %43 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %7, align 8
  %44 = load i32, i32* %6, align 4
  %45 = call %struct._cms_curve_struct* @cmsBuildTabulatedToneCurve16(%struct._cmsContext_struct* %43, i32 %44, i16* null) #8
  %46 = getelementptr inbounds i8, i8* %9, i64 8
  %47 = bitcast i8* %46 to %struct._cms_curve_struct**
  store %struct._cms_curve_struct* %45, %struct._cms_curve_struct** %47, align 8
  %48 = icmp eq %struct._cms_curve_struct* %45, null
  br i1 %48, label %85, label %49

49:                                               ; preds = %41
  %50 = load i32, i32* %6, align 4
  %51 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %45, i64 0, i32 6
  %52 = load i16*, i16** %51, align 8
  %53 = call i32 @_cmsReadUInt16Array(%struct._cms_io_handler* %1, i32 %50, i16* %52) #8
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %85, label %55

55:                                               ; preds = %49
  %56 = zext i32 %42 to i64
  %57 = load i32, i32* %6, align 4
  %58 = zext i32 %57 to i64
  %59 = shl nuw nsw i64 %58, 1
  %60 = icmp ugt i64 %59, %56
  br i1 %60, label %85, label %61

61:                                               ; preds = %55
  %62 = trunc i64 %59 to i32
  %63 = sub i32 %42, %62
  %64 = icmp eq i32 %63, -1
  br i1 %64, label %85, label %65

65:                                               ; preds = %61
  %66 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %7, align 8
  %67 = call %struct._cms_MLU_struct* @cmsMLUalloc(%struct._cmsContext_struct* %66, i32 1) #8
  %68 = getelementptr inbounds i8, i8* %9, i64 16
  %69 = bitcast i8* %68 to %struct._cms_MLU_struct**
  store %struct._cms_MLU_struct* %67, %struct._cms_MLU_struct** %69, align 8
  %70 = icmp eq %struct._cms_MLU_struct* %67, null
  br i1 %70, label %85, label %71

71:                                               ; preds = %65
  %72 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %7, align 8
  %73 = add nuw i32 %63, 1
  %74 = call i8* @_cmsMalloc(%struct._cmsContext_struct* %72, i32 %73) #8
  %75 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %1, i64 0, i32 5
  %76 = load i32 (%struct._cms_io_handler*, i8*, i32, i32)*, i32 (%struct._cms_io_handler*, i8*, i32, i32)** %75, align 8
  %77 = call i32 %76(%struct._cms_io_handler* %1, i8* %74, i32 1, i32 %63) #8
  %78 = icmp eq i32 %77, %63
  br i1 %78, label %79, label %85

79:                                               ; preds = %71
  %80 = zext i32 %63 to i64
  %81 = getelementptr inbounds i8, i8* %74, i64 %80
  store i8 0, i8* %81, align 1
  %82 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %69, align 8
  %83 = call i32 @cmsMLUsetASCII(%struct._cms_MLU_struct* %82, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8* %74) #8
  %84 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %7, align 8
  call void @_cmsFree(%struct._cmsContext_struct* %84, i8* %74) #8
  store i32 1, i32* %2, align 4
  br label %85

85:                                               ; preds = %71, %65, %61, %55, %49, %41, %37, %33, %25, %18, %13, %4, %79
  %86 = phi i8* [ %9, %79 ], [ null, %4 ], [ null, %13 ], [ null, %18 ], [ null, %25 ], [ null, %33 ], [ null, %37 ], [ null, %41 ], [ null, %49 ], [ null, %55 ], [ null, %61 ], [ null, %65 ], [ null, %71 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #8
  ret i8* %86
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @Type_UcrBg_Write(%struct._cms_typehandler_struct* nocapture readonly, %struct._cms_io_handler*, i8* nocapture readonly, i32) #0 {
  %5 = bitcast i8* %2 to %struct._cms_curve_struct**
  %6 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %5, align 8
  %7 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %6, i64 0, i32 5
  %8 = load i32, i32* %7, align 8
  %9 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %8) #8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %53, label %11

11:                                               ; preds = %4
  %12 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %5, align 8
  %13 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %12, i64 0, i32 5
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %12, i64 0, i32 6
  %16 = load i16*, i16** %15, align 8
  %17 = tail call i32 @_cmsWriteUInt16Array(%struct._cms_io_handler* %1, i32 %14, i16* %16) #8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %53, label %19

19:                                               ; preds = %11
  %20 = getelementptr inbounds i8, i8* %2, i64 8
  %21 = bitcast i8* %20 to %struct._cms_curve_struct**
  %22 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %21, align 8
  %23 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %22, i64 0, i32 5
  %24 = load i32, i32* %23, align 8
  %25 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %24) #8
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %53, label %27

27:                                               ; preds = %19
  %28 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %21, align 8
  %29 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %28, i64 0, i32 5
  %30 = load i32, i32* %29, align 8
  %31 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %28, i64 0, i32 6
  %32 = load i16*, i16** %31, align 8
  %33 = tail call i32 @_cmsWriteUInt16Array(%struct._cms_io_handler* %1, i32 %30, i16* %32) #8
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %53, label %35

35:                                               ; preds = %27
  %36 = getelementptr inbounds i8, i8* %2, i64 16
  %37 = bitcast i8* %36 to %struct._cms_MLU_struct**
  %38 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %37, align 8
  %39 = tail call i32 @cmsMLUgetASCII(%struct._cms_MLU_struct* %38, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8* null, i32 0) #8
  %40 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %41 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %40, align 8
  %42 = tail call i8* @_cmsMalloc(%struct._cmsContext_struct* %41, i32 %39) #8
  %43 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %37, align 8
  %44 = tail call i32 @cmsMLUgetASCII(%struct._cms_MLU_struct* %43, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8* %42, i32 %39) #8
  %45 = icmp eq i32 %44, %39
  br i1 %45, label %46, label %53

46:                                               ; preds = %35
  %47 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %1, i64 0, i32 9
  %48 = load i32 (%struct._cms_io_handler*, i32, i8*)*, i32 (%struct._cms_io_handler*, i32, i8*)** %47, align 8
  %49 = tail call i32 %48(%struct._cms_io_handler* %1, i32 %39, i8* %42) #8
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %46
  %52 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %40, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %52, i8* %42) #8
  br label %53

53:                                               ; preds = %46, %35, %27, %19, %11, %4, %51
  %54 = phi i32 [ 1, %51 ], [ 0, %4 ], [ 0, %11 ], [ 0, %19 ], [ 0, %27 ], [ 0, %35 ], [ 0, %46 ]
  ret i32 %54
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_UcrBg_Dup(%struct._cms_typehandler_struct* nocapture readonly, i8* nocapture readonly, i32) #0 {
  %4 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %5 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %4, align 8
  %6 = tail call i8* @_cmsMallocZero(%struct._cmsContext_struct* %5, i32 24) #8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds i8, i8* %1, i64 8
  %10 = bitcast i8* %9 to %struct._cms_curve_struct**
  %11 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %10, align 8
  %12 = tail call %struct._cms_curve_struct* @cmsDupToneCurve(%struct._cms_curve_struct* %11) #8
  %13 = getelementptr inbounds i8, i8* %6, i64 8
  %14 = bitcast i8* %13 to %struct._cms_curve_struct**
  store %struct._cms_curve_struct* %12, %struct._cms_curve_struct** %14, align 8
  %15 = bitcast i8* %1 to %struct._cms_curve_struct**
  %16 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %15, align 8
  %17 = tail call %struct._cms_curve_struct* @cmsDupToneCurve(%struct._cms_curve_struct* %16) #8
  %18 = bitcast i8* %6 to %struct._cms_curve_struct**
  store %struct._cms_curve_struct* %17, %struct._cms_curve_struct** %18, align 8
  %19 = getelementptr inbounds i8, i8* %1, i64 16
  %20 = bitcast i8* %19 to %struct._cms_MLU_struct**
  %21 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %20, align 8
  %22 = tail call %struct._cms_MLU_struct* @cmsMLUdup(%struct._cms_MLU_struct* %21) #8
  %23 = getelementptr inbounds i8, i8* %6, i64 16
  %24 = bitcast i8* %23 to %struct._cms_MLU_struct**
  store %struct._cms_MLU_struct* %22, %struct._cms_MLU_struct** %24, align 8
  br label %25

25:                                               ; preds = %3, %8
  ret i8* %6
}

; Function Attrs: nounwind ssp uwtable
define internal void @Type_UcrBg_Free(%struct._cms_typehandler_struct* nocapture readonly, i8*) #0 {
  %3 = bitcast i8* %1 to %struct._cms_curve_struct**
  %4 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %3, align 8
  %5 = icmp eq %struct._cms_curve_struct* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @cmsFreeToneCurve(%struct._cms_curve_struct* nonnull %4) #8
  br label %7

7:                                                ; preds = %2, %6
  %8 = getelementptr inbounds i8, i8* %1, i64 8
  %9 = bitcast i8* %8 to %struct._cms_curve_struct**
  %10 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %9, align 8
  %11 = icmp eq %struct._cms_curve_struct* %10, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %7
  tail call void @cmsFreeToneCurve(%struct._cms_curve_struct* nonnull %10) #8
  br label %13

13:                                               ; preds = %7, %12
  %14 = getelementptr inbounds i8, i8* %1, i64 16
  %15 = bitcast i8* %14 to %struct._cms_MLU_struct**
  %16 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %15, align 8
  %17 = icmp eq %struct._cms_MLU_struct* %16, null
  br i1 %17, label %19, label %18

18:                                               ; preds = %13
  tail call void @cmsMLUfree(%struct._cms_MLU_struct* nonnull %16) #8
  br label %19

19:                                               ; preds = %13, %18
  %20 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %21 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %20, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %21, i8* %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_CrdInfo_Read(%struct._cms_typehandler_struct* nocapture readonly, %struct._cms_io_handler*, i32* nocapture, i32) #0 {
  %5 = alloca i32, align 4
  store i32 %3, i32* %5, align 4
  %6 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %7 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %6, align 8
  %8 = tail call %struct._cms_MLU_struct* @cmsMLUalloc(%struct._cmsContext_struct* %7, i32 5) #8
  store i32 0, i32* %2, align 4
  %9 = call fastcc i32 @ReadCountAndSting(%struct._cms_typehandler_struct* %0, %struct._cms_io_handler* %1, %struct._cms_MLU_struct* %8, i32* nonnull %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i64 0, i64 0))
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %25, label %11

11:                                               ; preds = %4
  %12 = call fastcc i32 @ReadCountAndSting(%struct._cms_typehandler_struct* %0, %struct._cms_io_handler* %1, %struct._cms_MLU_struct* %8, i32* nonnull %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19, i64 0, i64 0))
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %25, label %14

14:                                               ; preds = %11
  %15 = call fastcc i32 @ReadCountAndSting(%struct._cms_typehandler_struct* %0, %struct._cms_io_handler* %1, %struct._cms_MLU_struct* %8, i32* nonnull %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0))
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %25, label %17

17:                                               ; preds = %14
  %18 = call fastcc i32 @ReadCountAndSting(%struct._cms_typehandler_struct* %0, %struct._cms_io_handler* %1, %struct._cms_MLU_struct* %8, i32* nonnull %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0))
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = call fastcc i32 @ReadCountAndSting(%struct._cms_typehandler_struct* %0, %struct._cms_io_handler* %1, %struct._cms_MLU_struct* %8, i32* nonnull %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22, i64 0, i64 0))
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %20
  store i32 1, i32* %2, align 4
  %24 = bitcast %struct._cms_MLU_struct* %8 to i8*
  br label %26

25:                                               ; preds = %20, %17, %14, %11, %4
  tail call void @cmsMLUfree(%struct._cms_MLU_struct* %8) #8
  br label %26

26:                                               ; preds = %25, %23
  %27 = phi i8* [ %24, %23 ], [ null, %25 ]
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @Type_CrdInfo_Write(%struct._cms_typehandler_struct* nocapture readonly, %struct._cms_io_handler*, i8*, i32) #0 {
  %5 = bitcast i8* %2 to %struct._cms_MLU_struct*
  %6 = tail call fastcc i32 @WriteCountAndSting(%struct._cms_typehandler_struct* %0, %struct._cms_io_handler* %1, %struct._cms_MLU_struct* %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i64 0, i64 0))
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %20, label %8

8:                                                ; preds = %4
  %9 = tail call fastcc i32 @WriteCountAndSting(%struct._cms_typehandler_struct* %0, %struct._cms_io_handler* %1, %struct._cms_MLU_struct* %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19, i64 0, i64 0))
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %20, label %11

11:                                               ; preds = %8
  %12 = tail call fastcc i32 @WriteCountAndSting(%struct._cms_typehandler_struct* %0, %struct._cms_io_handler* %1, %struct._cms_MLU_struct* %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0))
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %11
  %15 = tail call fastcc i32 @WriteCountAndSting(%struct._cms_typehandler_struct* %0, %struct._cms_io_handler* %1, %struct._cms_MLU_struct* %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0))
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %14
  %18 = tail call fastcc i32 @WriteCountAndSting(%struct._cms_typehandler_struct* %0, %struct._cms_io_handler* %1, %struct._cms_MLU_struct* %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22, i64 0, i64 0))
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %17, %14, %11, %8, %4
  br label %21

21:                                               ; preds = %17, %20
  %22 = phi i32 [ 0, %20 ], [ 1, %17 ]
  ret i32 %22
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_CrdInfo_Dup(%struct._cms_typehandler_struct* nocapture readnone, i8*, i32) #0 {
  %4 = bitcast i8* %1 to %struct._cms_MLU_struct*
  %5 = tail call %struct._cms_MLU_struct* @cmsMLUdup(%struct._cms_MLU_struct* %4) #8
  %6 = bitcast %struct._cms_MLU_struct* %5 to i8*
  ret i8* %6
}

; Function Attrs: nounwind ssp uwtable
define internal void @Type_CrdInfo_Free(%struct._cms_typehandler_struct* nocapture readnone, i8*) #0 {
  %3 = bitcast i8* %1 to %struct._cms_MLU_struct*
  tail call void @cmsMLUfree(%struct._cms_MLU_struct* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_MPE_Read(%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32* nocapture, i32) #0 {
  %5 = alloca i16, align 2
  %6 = alloca i16, align 2
  %7 = alloca i32, align 4
  %8 = bitcast i16* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %8) #8
  store i16 -21846, i16* %5, align 2
  %9 = bitcast i16* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %9) #8
  store i16 -21846, i16* %6, align 2
  %10 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #8
  store i32 -1431655766, i32* %7, align 4
  %11 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %1, i64 0, i32 8
  %12 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %11, align 8
  %13 = tail call i32 %12(%struct._cms_io_handler* %1) #8
  %14 = add i32 %13, -8
  %15 = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %1, i16* nonnull %5) #8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %57, label %17

17:                                               ; preds = %4
  %18 = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %1, i16* nonnull %6) #8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %57, label %20

20:                                               ; preds = %17
  %21 = load i16, i16* %5, align 2
  %22 = zext i16 %21 to i32
  %23 = add i16 %21, -1
  %24 = icmp ugt i16 %23, 14
  br i1 %24, label %57, label %25

25:                                               ; preds = %20
  %26 = load i16, i16* %6, align 2
  %27 = add i16 %26, -1
  %28 = icmp ugt i16 %27, 14
  br i1 %28, label %57, label %29

29:                                               ; preds = %25
  %30 = zext i16 %26 to i32
  %31 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %32 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %31, align 8
  %33 = call %struct._cmsPipeline_struct* @cmsPipelineAlloc(%struct._cmsContext_struct* %32, i32 %22, i32 %30) #8
  %34 = icmp eq %struct._cmsPipeline_struct* %33, null
  br i1 %34, label %57, label %35

35:                                               ; preds = %29
  %36 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* nonnull %7) #8
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %56, label %38

38:                                               ; preds = %35
  %39 = load i32, i32* %7, align 4
  %40 = bitcast %struct._cmsPipeline_struct* %33 to i8*
  %41 = call fastcc i32 @ReadPositionTable(%struct._cms_typehandler_struct* %0, %struct._cms_io_handler* %1, i32 %39, i32 %14, i8* nonnull %40, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32, i32)* nonnull @ReadMPEElem)
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %56, label %43

43:                                               ; preds = %38
  %44 = load i16, i16* %5, align 2
  %45 = zext i16 %44 to i32
  %46 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %33, i64 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %47, %45
  br i1 %48, label %49, label %56

49:                                               ; preds = %43
  %50 = load i16, i16* %6, align 2
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %33, i64 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %51
  br i1 %54, label %55, label %56

55:                                               ; preds = %49
  store i32 1, i32* %2, align 4
  br label %57

56:                                               ; preds = %35, %38, %43, %49
  call void @cmsPipelineFree(%struct._cmsPipeline_struct* nonnull %33) #8
  store i32 0, i32* %2, align 4
  br label %57

57:                                               ; preds = %29, %25, %20, %17, %4, %56, %55
  %58 = phi i8* [ null, %56 ], [ %40, %55 ], [ null, %4 ], [ null, %17 ], [ null, %20 ], [ null, %25 ], [ null, %29 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %8) #8
  ret i8* %58
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @Type_MPE_Write(%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32) #0 {
  %5 = alloca [5 x i8], align 1
  %6 = bitcast i8* %2 to %struct._cmsPipeline_struct*
  %7 = bitcast i8* %2 to %struct._cmsStage_struct**
  %8 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %7, align 8
  %9 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %10 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %9, align 8
  %11 = tail call i8* @_cmsContextGetClientChunk(%struct._cmsContext_struct* %10, i32 11) #8
  %12 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %1, i64 0, i32 8
  %13 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %12, align 8
  %14 = tail call i32 %13(%struct._cms_io_handler* %1) #8
  %15 = tail call i32 @cmsPipelineInputChannels(%struct._cmsPipeline_struct* %6) #8
  %16 = tail call i32 @cmsPipelineOutputChannels(%struct._cmsPipeline_struct* %6) #8
  %17 = tail call i32 @cmsPipelineStageCount(%struct._cmsPipeline_struct* %6) #8
  %18 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %9, align 8
  %19 = tail call i8* @_cmsCalloc(%struct._cmsContext_struct* %18, i32 %17, i32 4) #8
  %20 = bitcast i8* %19 to i32*
  %21 = icmp eq i8* %19, null
  br i1 %21, label %161, label %22

22:                                               ; preds = %4
  %23 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %9, align 8
  %24 = tail call i8* @_cmsCalloc(%struct._cmsContext_struct* %23, i32 %17, i32 4) #8
  %25 = bitcast i8* %24 to i32*
  %26 = icmp eq i8* %24, null
  br i1 %26, label %27, label %29

27:                                               ; preds = %22
  %28 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %9, align 8
  call void @_cmsFree(%struct._cmsContext_struct* %28, i8* nonnull %19) #8
  br label %161

29:                                               ; preds = %22
  %30 = trunc i32 %15 to i16
  %31 = tail call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %1, i16 zeroext %30) #8
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %158, label %33

33:                                               ; preds = %29
  %34 = trunc i32 %16 to i16
  %35 = tail call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %1, i16 zeroext %34) #8
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %158, label %37

37:                                               ; preds = %33
  %38 = and i32 %17, 65535
  %39 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %38) #8
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %158, label %41

41:                                               ; preds = %37
  %42 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %12, align 8
  %43 = tail call i32 %42(%struct._cms_io_handler* %1) #8
  %44 = icmp eq i32 %17, 0
  br i1 %44, label %45, label %57

45:                                               ; preds = %41
  %46 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %12, align 8
  %47 = tail call i32 %46(%struct._cms_io_handler* %1) #8
  br label %128

48:                                               ; preds = %61
  %49 = icmp eq i32 %64, %17
  br i1 %49, label %50, label %57

50:                                               ; preds = %48
  %51 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %12, align 8
  %52 = tail call i32 %51(%struct._cms_io_handler* %1) #8
  br i1 %44, label %128, label %53

53:                                               ; preds = %50
  %54 = sub i32 8, %14
  %55 = bitcast i8* %11 to %struct._cmsTagTypeLinkedList_st**
  %56 = zext i32 %17 to i64
  br label %65

57:                                               ; preds = %41, %48
  %58 = phi i32 [ %64, %48 ], [ 0, %41 ]
  %59 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 0) #8
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %158, label %61

61:                                               ; preds = %57
  %62 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 0) #8
  %63 = icmp eq i32 %62, 0
  %64 = add nuw i32 %58, 1
  br i1 %63, label %158, label %48

65:                                               ; preds = %117, %53
  %66 = phi i64 [ 0, %53 ], [ %124, %117 ]
  %67 = phi i32 [ %52, %53 ], [ %126, %117 ]
  %68 = phi %struct._cmsStage_struct* [ %8, %53 ], [ %123, %117 ]
  %69 = bitcast %struct._cmsStage_struct* %68 to i8*
  %70 = add i32 %54, %67
  %71 = getelementptr inbounds i32, i32* %20, i64 %66
  store i32 %70, i32* %71, align 4
  %72 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %68, i64 0, i32 1
  %73 = load i32, i32* %72, align 8
  %74 = load %struct._cmsTagTypeLinkedList_st*, %struct._cmsTagTypeLinkedList_st** %55, align 8
  %75 = icmp eq %struct._cmsTagTypeLinkedList_st* %74, null
  br i1 %75, label %85, label %76

76:                                               ; preds = %65, %81
  %77 = phi %struct._cmsTagTypeLinkedList_st* [ %83, %81 ], [ %74, %65 ]
  %78 = getelementptr inbounds %struct._cmsTagTypeLinkedList_st, %struct._cmsTagTypeLinkedList_st* %77, i64 0, i32 0, i32 0
  %79 = load i32, i32* %78, align 8
  %80 = icmp eq i32 %79, %73
  br i1 %80, label %100, label %81

81:                                               ; preds = %76
  %82 = getelementptr inbounds %struct._cmsTagTypeLinkedList_st, %struct._cmsTagTypeLinkedList_st* %77, i64 0, i32 1
  %83 = load %struct._cmsTagTypeLinkedList_st*, %struct._cmsTagTypeLinkedList_st** %82, align 8
  %84 = icmp eq %struct._cmsTagTypeLinkedList_st* %83, null
  br i1 %84, label %85, label %76

85:                                               ; preds = %81, %65
  br label %86

86:                                               ; preds = %85, %91
  %87 = phi %struct._cmsTagTypeLinkedList_st* [ %93, %91 ], [ getelementptr inbounds ([5 x %struct._cmsTagTypeLinkedList_st], [5 x %struct._cmsTagTypeLinkedList_st]* @SupportedMPEtypes, i64 0, i64 0), %85 ]
  %88 = getelementptr inbounds %struct._cmsTagTypeLinkedList_st, %struct._cmsTagTypeLinkedList_st* %87, i64 0, i32 0, i32 0
  %89 = load i32, i32* %88, align 8
  %90 = icmp eq i32 %89, %73
  br i1 %90, label %95, label %91

91:                                               ; preds = %86
  %92 = getelementptr inbounds %struct._cmsTagTypeLinkedList_st, %struct._cmsTagTypeLinkedList_st* %87, i64 0, i32 1
  %93 = load %struct._cmsTagTypeLinkedList_st*, %struct._cmsTagTypeLinkedList_st** %92, align 8
  %94 = icmp eq %struct._cmsTagTypeLinkedList_st* %93, null
  br i1 %94, label %97, label %86

95:                                               ; preds = %86
  %96 = icmp eq %struct._cmsTagTypeLinkedList_st* %87, null
  br i1 %96, label %97, label %100

97:                                               ; preds = %95, %91
  %98 = getelementptr inbounds [5 x i8], [5 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %98) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %98, i8 -86, i64 5, i1 false)
  call void @_cmsTagSignature2String(i8* nonnull %98, i32 %73) #8
  %99 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %9, align 8
  call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %99, i32 8, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.26, i64 0, i64 0), i8* nonnull %98) #8
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %98) #8
  br label %158

100:                                              ; preds = %76, %95
  %101 = phi %struct._cmsTagTypeLinkedList_st* [ %87, %95 ], [ %77, %76 ]
  %102 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %73) #8
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %158, label %104

104:                                              ; preds = %100
  %105 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 0) #8
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %158, label %107

107:                                              ; preds = %104
  %108 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %12, align 8
  %109 = tail call i32 %108(%struct._cms_io_handler* %1) #8
  %110 = getelementptr inbounds %struct._cmsTagTypeLinkedList_st, %struct._cmsTagTypeLinkedList_st* %101, i64 0, i32 0, i32 2
  %111 = load i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)*, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32)** %110, align 8
  %112 = tail call i32 %111(%struct._cms_typehandler_struct* %0, %struct._cms_io_handler* %1, i8* %69, i32 1) #8
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %158, label %114

114:                                              ; preds = %107
  %115 = tail call i32 @_cmsWriteAlignment(%struct._cms_io_handler* %1) #8
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %158, label %117

117:                                              ; preds = %114
  %118 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %12, align 8
  %119 = tail call i32 %118(%struct._cms_io_handler* %1) #8
  %120 = sub i32 %119, %109
  %121 = getelementptr inbounds i32, i32* %25, i64 %66
  store i32 %120, i32* %121, align 4
  %122 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %68, i64 0, i32 9
  %123 = load %struct._cmsStage_struct*, %struct._cmsStage_struct** %122, align 8
  %124 = add nuw nsw i64 %66, 1
  %125 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %12, align 8
  %126 = tail call i32 %125(%struct._cms_io_handler* %1) #8
  %127 = icmp eq i64 %124, %56
  br i1 %127, label %128, label %65

128:                                              ; preds = %117, %45, %50
  %129 = phi i32 [ %52, %50 ], [ %47, %45 ], [ %126, %117 ]
  %130 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %1, i64 0, i32 6
  %131 = load i32 (%struct._cms_io_handler*, i32)*, i32 (%struct._cms_io_handler*, i32)** %130, align 8
  %132 = tail call i32 %131(%struct._cms_io_handler* %1, i32 %43) #8
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %158, label %134

134:                                              ; preds = %128
  br i1 %44, label %151, label %135

135:                                              ; preds = %134
  %136 = zext i32 %17 to i64
  br label %139

137:                                              ; preds = %145
  %138 = icmp eq i64 %150, %136
  br i1 %138, label %151, label %139

139:                                              ; preds = %137, %135
  %140 = phi i64 [ 0, %135 ], [ %150, %137 ]
  %141 = getelementptr inbounds i32, i32* %20, i64 %140
  %142 = load i32, i32* %141, align 4
  %143 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %142) #8
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %158, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds i32, i32* %25, i64 %140
  %147 = load i32, i32* %146, align 4
  %148 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %147) #8
  %149 = icmp eq i32 %148, 0
  %150 = add nuw nsw i64 %140, 1
  br i1 %149, label %158, label %137

151:                                              ; preds = %137, %134
  %152 = load i32 (%struct._cms_io_handler*, i32)*, i32 (%struct._cms_io_handler*, i32)** %130, align 8
  %153 = tail call i32 %152(%struct._cms_io_handler* %1, i32 %129) #8
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %158, label %155

155:                                              ; preds = %151
  %156 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %9, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %156, i8* nonnull %19) #8
  %157 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %9, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %157, i8* nonnull %24) #8
  br label %161

158:                                              ; preds = %61, %57, %114, %107, %104, %100, %145, %139, %37, %33, %29, %151, %128, %97
  %159 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %9, align 8
  call void @_cmsFree(%struct._cmsContext_struct* %159, i8* nonnull %19) #8
  %160 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %9, align 8
  call void @_cmsFree(%struct._cmsContext_struct* %160, i8* nonnull %24) #8
  br label %161

161:                                              ; preds = %27, %4, %158, %155
  %162 = phi i32 [ 1, %155 ], [ 0, %158 ], [ 0, %4 ], [ 0, %27 ]
  ret i32 %162
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_MPE_Dup(%struct._cms_typehandler_struct* nocapture readnone, i8*, i32) #0 {
  %4 = bitcast i8* %1 to %struct._cmsPipeline_struct*
  %5 = tail call %struct._cmsPipeline_struct* @cmsPipelineDup(%struct._cmsPipeline_struct* %4) #8
  %6 = bitcast %struct._cmsPipeline_struct* %5 to i8*
  ret i8* %6
}

; Function Attrs: nounwind ssp uwtable
define internal void @Type_MPE_Free(%struct._cms_typehandler_struct* nocapture readnone, i8*) #0 {
  %3 = bitcast i8* %1 to %struct._cmsPipeline_struct*
  tail call void @cmsPipelineFree(%struct._cmsPipeline_struct* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_Screening_Read(%struct._cms_typehandler_struct* nocapture readonly, %struct._cms_io_handler*, i32* nocapture, i32) #0 {
  %5 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %6 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %5, align 8
  %7 = tail call i8* @_cmsMallocZero(%struct._cmsContext_struct* %6, i32 392) #8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %48, label %9

9:                                                ; preds = %4
  store i32 0, i32* %2, align 4
  %10 = bitcast i8* %7 to i32*
  %11 = tail call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* nonnull %10) #8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %46, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds i8, i8* %7, i64 4
  %15 = bitcast i8* %14 to i32*
  %16 = tail call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* %15) #8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %46, label %18

18:                                               ; preds = %13
  %19 = load i32, i32* %15, align 4
  %20 = icmp ugt i32 %19, 15
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  store i32 15, i32* %15, align 4
  br label %24

22:                                               ; preds = %18
  %23 = icmp eq i32 %19, 0
  br i1 %23, label %45, label %24

24:                                               ; preds = %21, %22
  %25 = getelementptr inbounds i8, i8* %7, i64 8
  %26 = bitcast i8* %25 to [16 x %struct.cmsScreeningChannel]*
  br label %31

27:                                               ; preds = %40
  %28 = load i32, i32* %15, align 4
  %29 = zext i32 %28 to i64
  %30 = icmp ult i64 %44, %29
  br i1 %30, label %31, label %45

31:                                               ; preds = %24, %27
  %32 = phi i64 [ 0, %24 ], [ %44, %27 ]
  %33 = getelementptr inbounds [16 x %struct.cmsScreeningChannel], [16 x %struct.cmsScreeningChannel]* %26, i64 0, i64 %32, i32 0
  %34 = tail call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %1, double* %33) #8
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %46, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds [16 x %struct.cmsScreeningChannel], [16 x %struct.cmsScreeningChannel]* %26, i64 0, i64 %32, i32 1
  %38 = tail call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %1, double* %37) #8
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %46, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds [16 x %struct.cmsScreeningChannel], [16 x %struct.cmsScreeningChannel]* %26, i64 0, i64 %32, i32 2
  %42 = tail call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* %41) #8
  %43 = icmp eq i32 %42, 0
  %44 = add nuw nsw i64 %32, 1
  br i1 %43, label %46, label %27

45:                                               ; preds = %27, %22
  store i32 1, i32* %2, align 4
  br label %48

46:                                               ; preds = %31, %36, %40, %9, %13
  %47 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %5, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %47, i8* nonnull %7) #8
  br label %48

48:                                               ; preds = %4, %46, %45
  %49 = phi i8* [ null, %46 ], [ %7, %45 ], [ null, %4 ]
  ret i8* %49
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @Type_Screening_Write(%struct._cms_typehandler_struct* nocapture readnone, %struct._cms_io_handler*, i8* nocapture readonly, i32) #0 {
  %5 = bitcast i8* %2 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %6) #8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %41, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %2, i64 4
  %11 = bitcast i8* %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %12) #8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %41, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds i8, i8* %2, i64 8
  %17 = bitcast i8* %16 to [16 x %struct.cmsScreeningChannel]*
  %18 = load i32, i32* %11, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %41, label %24

20:                                               ; preds = %35
  %21 = load i32, i32* %11, align 4
  %22 = zext i32 %21 to i64
  %23 = icmp ult i64 %40, %22
  br i1 %23, label %24, label %41

24:                                               ; preds = %15, %20
  %25 = phi i64 [ %40, %20 ], [ 0, %15 ]
  %26 = getelementptr inbounds [16 x %struct.cmsScreeningChannel], [16 x %struct.cmsScreeningChannel]* %17, i64 0, i64 %25, i32 0
  %27 = load double, double* %26, align 8
  %28 = tail call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %1, double %27) #8
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %41, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds [16 x %struct.cmsScreeningChannel], [16 x %struct.cmsScreeningChannel]* %17, i64 0, i64 %25, i32 1
  %32 = load double, double* %31, align 8
  %33 = tail call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %1, double %32) #8
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %41, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds [16 x %struct.cmsScreeningChannel], [16 x %struct.cmsScreeningChannel]* %17, i64 0, i64 %25, i32 2
  %37 = load i32, i32* %36, align 8
  %38 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %37) #8
  %39 = icmp eq i32 %38, 0
  %40 = add nuw nsw i64 %25, 1
  br i1 %39, label %41, label %20

41:                                               ; preds = %24, %30, %35, %20, %15, %9, %4
  %42 = phi i32 [ 0, %4 ], [ 0, %9 ], [ 1, %15 ], [ 0, %24 ], [ 0, %30 ], [ 0, %35 ], [ 1, %20 ]
  ret i32 %42
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_Screening_Dup(%struct._cms_typehandler_struct* nocapture readonly, i8*, i32) #0 {
  %4 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %5 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %4, align 8
  %6 = tail call i8* @_cmsDupMem(%struct._cmsContext_struct* %5, i8* %1, i32 392) #8
  ret i8* %6
}

; Function Attrs: nounwind ssp uwtable
define internal void @Type_Screening_Free(%struct._cms_typehandler_struct* nocapture readonly, i8*) #0 {
  %3 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %4 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %3, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %4, i8* %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_ViewingConditions_Read(%struct._cms_typehandler_struct* nocapture readonly, %struct._cms_io_handler*, i32* nocapture, i32) #0 {
  %5 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %6 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %5, align 8
  %7 = tail call i8* @_cmsMallocZero(%struct._cmsContext_struct* %6, i32 56) #8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %26, label %9

9:                                                ; preds = %4
  store i32 0, i32* %2, align 4
  %10 = bitcast i8* %7 to %struct.cmsCIEXYZ*
  %11 = tail call i32 @_cmsReadXYZNumber(%struct._cms_io_handler* %1, %struct.cmsCIEXYZ* nonnull %10) #8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds i8, i8* %7, i64 24
  %15 = bitcast i8* %14 to %struct.cmsCIEXYZ*
  %16 = tail call i32 @_cmsReadXYZNumber(%struct._cms_io_handler* %1, %struct.cmsCIEXYZ* %15) #8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds i8, i8* %7, i64 48
  %20 = bitcast i8* %19 to i32*
  %21 = tail call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* %20) #8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %24, label %23

23:                                               ; preds = %18
  store i32 1, i32* %2, align 4
  br label %26

24:                                               ; preds = %9, %13, %18
  %25 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %5, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %25, i8* nonnull %7) #8
  br label %26

26:                                               ; preds = %4, %24, %23
  %27 = phi i8* [ %7, %23 ], [ null, %24 ], [ null, %4 ]
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @Type_ViewingConditions_Write(%struct._cms_typehandler_struct* nocapture readnone, %struct._cms_io_handler*, i8*, i32) #0 {
  %5 = bitcast i8* %2 to %struct.cmsCIEXYZ*
  %6 = tail call i32 @_cmsWriteXYZNumber(%struct._cms_io_handler* %1, %struct.cmsCIEXYZ* %5) #8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %20, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds i8, i8* %2, i64 24
  %10 = bitcast i8* %9 to %struct.cmsCIEXYZ*
  %11 = tail call i32 @_cmsWriteXYZNumber(%struct._cms_io_handler* %1, %struct.cmsCIEXYZ* %10) #8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %20, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds i8, i8* %2, i64 48
  %15 = bitcast i8* %14 to i32*
  %16 = load i32, i32* %15, align 8
  %17 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %16) #8
  %18 = icmp ne i32 %17, 0
  %19 = zext i1 %18 to i32
  br label %20

20:                                               ; preds = %13, %8, %4
  %21 = phi i32 [ 0, %4 ], [ 0, %8 ], [ %19, %13 ]
  ret i32 %21
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_ViewingConditions_Dup(%struct._cms_typehandler_struct* nocapture readonly, i8*, i32) #0 {
  %4 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %5 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %4, align 8
  %6 = tail call i8* @_cmsDupMem(%struct._cmsContext_struct* %5, i8* %1, i32 56) #8
  ret i8* %6
}

; Function Attrs: nounwind ssp uwtable
define internal void @Type_ViewingConditions_Free(%struct._cms_typehandler_struct* nocapture readonly, i8*) #0 {
  %3 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %4 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %3, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %4, i8* %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_XYZ_Read(%struct._cms_typehandler_struct* nocapture readonly, %struct._cms_io_handler*, i32* nocapture, i32) #0 {
  store i32 0, i32* %2, align 4
  %5 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %6 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %5, align 8
  %7 = tail call i8* @_cmsMallocZero(%struct._cmsContext_struct* %6, i32 24) #8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %4
  %10 = bitcast i8* %7 to %struct.cmsCIEXYZ*
  %11 = tail call i32 @_cmsReadXYZNumber(%struct._cms_io_handler* %1, %struct.cmsCIEXYZ* nonnull %10) #8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %15

13:                                               ; preds = %9
  %14 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %5, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %14, i8* nonnull %7) #8
  br label %16

15:                                               ; preds = %9
  store i32 1, i32* %2, align 4
  br label %16

16:                                               ; preds = %4, %15, %13
  %17 = phi i8* [ %7, %15 ], [ null, %13 ], [ null, %4 ]
  ret i8* %17
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @Type_XYZ_Write(%struct._cms_typehandler_struct* nocapture readnone, %struct._cms_io_handler*, i8*, i32) #0 {
  %5 = bitcast i8* %2 to %struct.cmsCIEXYZ*
  %6 = tail call i32 @_cmsWriteXYZNumber(%struct._cms_io_handler* %1, %struct.cmsCIEXYZ* %5) #8
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_XYZ_Dup(%struct._cms_typehandler_struct* nocapture readonly, i8*, i32) #0 {
  %4 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %5 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %4, align 8
  %6 = tail call i8* @_cmsDupMem(%struct._cmsContext_struct* %5, i8* %1, i32 24) #8
  ret i8* %6
}

; Function Attrs: nounwind ssp uwtable
define internal void @Type_XYZ_Free(%struct._cms_typehandler_struct* nocapture readonly, i8*) #0 {
  %3 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %4 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %3, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %4, i8* %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_ProfileSequenceId_Read(%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32* nocapture, i32) #0 {
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #8
  store i32 -1431655766, i32* %5, align 4
  store i32 0, i32* %2, align 4
  %7 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %1, i64 0, i32 8
  %8 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %7, align 8
  %9 = tail call i32 %8(%struct._cms_io_handler* %1) #8
  %10 = add i32 %9, -8
  %11 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* nonnull %5) #8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %26, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %15 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %14, align 8
  %16 = load i32, i32* %5, align 4
  %17 = call %struct.cmsSEQ* @cmsAllocProfileSequenceDescription(%struct._cmsContext_struct* %15, i32 %16) #8
  %18 = icmp eq %struct.cmsSEQ* %17, null
  br i1 %18, label %26, label %19

19:                                               ; preds = %13
  %20 = load i32, i32* %5, align 4
  %21 = bitcast %struct.cmsSEQ* %17 to i8*
  %22 = call fastcc i32 @ReadPositionTable(%struct._cms_typehandler_struct* %0, %struct._cms_io_handler* %1, i32 %20, i32 %10, i8* nonnull %21, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32, i32)* nonnull @ReadSeqID)
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %19
  call void @cmsFreeProfileSequenceDescription(%struct.cmsSEQ* nonnull %17) #8
  br label %26

25:                                               ; preds = %19
  store i32 1, i32* %2, align 4
  br label %26

26:                                               ; preds = %13, %4, %25, %24
  %27 = phi i8* [ %21, %25 ], [ null, %24 ], [ null, %4 ], [ null, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #8
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @Type_ProfileSequenceId_Write(%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32) #0 {
  %5 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %1, i64 0, i32 8
  %6 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %5, align 8
  %7 = tail call i32 %6(%struct._cms_io_handler* %1) #8
  %8 = bitcast i8* %2 to i32*
  %9 = load i32, i32* %8, align 8
  %10 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %9) #8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %18, label %12

12:                                               ; preds = %4
  %13 = add i32 %7, -8
  %14 = load i32, i32* %8, align 8
  %15 = tail call fastcc i32 @WritePositionTable(%struct._cms_typehandler_struct* %0, %struct._cms_io_handler* %1, i32 %14, i32 %13, i8* %2, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32, i32)* nonnull @WriteSeqID)
  %16 = icmp ne i32 %15, 0
  %17 = zext i1 %16 to i32
  br label %18

18:                                               ; preds = %12, %4
  %19 = phi i32 [ 0, %4 ], [ %17, %12 ]
  ret i32 %19
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_ProfileSequenceId_Dup(%struct._cms_typehandler_struct* nocapture readnone, i8*, i32) #0 {
  %4 = bitcast i8* %1 to %struct.cmsSEQ*
  %5 = tail call %struct.cmsSEQ* @cmsDupProfileSequenceDescription(%struct.cmsSEQ* %4) #8
  %6 = bitcast %struct.cmsSEQ* %5 to i8*
  ret i8* %6
}

; Function Attrs: nounwind ssp uwtable
define internal void @Type_ProfileSequenceId_Free(%struct._cms_typehandler_struct* nocapture readnone, i8*) #0 {
  %3 = bitcast i8* %1 to %struct.cmsSEQ*
  tail call void @cmsFreeProfileSequenceDescription(%struct.cmsSEQ* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_Dictionary_Read(%struct._cms_typehandler_struct* nocapture readonly, %struct._cms_io_handler*, i32* nocapture, i32) #0 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i16, align 2
  %8 = alloca i16, align 2
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct._cmsDICarray, align 8
  %12 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #8
  store i32 -1431655766, i32* %9, align 4
  %13 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #8
  store i32 -1431655766, i32* %10, align 4
  %14 = bitcast %struct._cmsDICarray* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %14) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 96, i1 false)
  store i32 0, i32* %2, align 4
  %15 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %1, i64 0, i32 8
  %16 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %15, align 8
  %17 = tail call i32 %16(%struct._cms_io_handler* %1) #8
  %18 = add i32 %17, -8
  %19 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* nonnull %9) #8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %447, label %21

21:                                               ; preds = %4
  %22 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* nonnull %10) #8
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %447, label %24

24:                                               ; preds = %21
  %25 = load i32, i32* %10, align 4
  %26 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %27 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %26, align 8
  switch i32 %25, label %28 [
    i32 32, label %29
    i32 24, label %29
    i32 16, label %29
  ]

28:                                               ; preds = %24
  call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %27, i32 8, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.27, i64 0, i64 0), i32 %25) #8
  br label %447

29:                                               ; preds = %24, %24, %24
  %30 = call i8* @cmsDictAlloc(%struct._cmsContext_struct* %27) #8
  %31 = icmp eq i8* %30, null
  br i1 %31, label %447, label %32

32:                                               ; preds = %29
  %33 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %26, align 8
  %34 = load i32, i32* %9, align 4
  %35 = load i32, i32* %10, align 4
  %36 = call fastcc i32 @AllocArray(%struct._cmsContext_struct* %33, %struct._cmsDICarray* nonnull %11, i32 %34, i32 %35)
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %375, label %38

38:                                               ; preds = %32
  %39 = load i32, i32* %9, align 4
  %40 = load i32, i32* %10, align 4
  %41 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %11, i64 0, i32 0, i32 1
  %42 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %11, i64 0, i32 0, i32 2
  %43 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %11, i64 0, i32 1, i32 2
  %44 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %11, i64 0, i32 2, i32 1
  %45 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %11, i64 0, i32 2, i32 2
  %46 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %11, i64 0, i32 3, i32 1
  %47 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %11, i64 0, i32 3, i32 2
  %48 = icmp eq i32 %39, 0
  br i1 %48, label %310, label %49

49:                                               ; preds = %38
  %50 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %11, i64 0, i32 1, i32 1
  %51 = icmp ugt i32 %40, 16
  %52 = icmp ugt i32 %40, 24
  %53 = zext i32 %39 to i64
  br label %54

54:                                               ; preds = %125, %49
  %55 = phi i64 [ 0, %49 ], [ %126, %125 ]
  %56 = load i32*, i32** %41, align 8
  %57 = getelementptr inbounds i32, i32* %56, i64 %55
  %58 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* %57) #8
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %375, label %60

60:                                               ; preds = %54
  %61 = load i32*, i32** %42, align 8
  %62 = getelementptr inbounds i32, i32* %61, i64 %55
  %63 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* %62) #8
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %375, label %65

65:                                               ; preds = %60
  %66 = load i32*, i32** %41, align 8
  %67 = getelementptr inbounds i32, i32* %66, i64 %55
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %65
  %71 = add i32 %68, %18
  store i32 %71, i32* %67, align 4
  br label %72

72:                                               ; preds = %70, %65
  %73 = load i32*, i32** %50, align 8
  %74 = getelementptr inbounds i32, i32* %73, i64 %55
  %75 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* %74) #8
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %375, label %77

77:                                               ; preds = %72
  %78 = load i32*, i32** %43, align 8
  %79 = getelementptr inbounds i32, i32* %78, i64 %55
  %80 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* %79) #8
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %375, label %82

82:                                               ; preds = %77
  %83 = load i32*, i32** %50, align 8
  %84 = getelementptr inbounds i32, i32* %83, i64 %55
  %85 = load i32, i32* %84, align 4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %89, label %87

87:                                               ; preds = %82
  %88 = add i32 %85, %18
  store i32 %88, i32* %84, align 4
  br label %89

89:                                               ; preds = %87, %82
  br i1 %51, label %90, label %125

90:                                               ; preds = %89
  %91 = load i32*, i32** %44, align 8
  %92 = getelementptr inbounds i32, i32* %91, i64 %55
  %93 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* %92) #8
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %375, label %95

95:                                               ; preds = %90
  %96 = load i32*, i32** %45, align 8
  %97 = getelementptr inbounds i32, i32* %96, i64 %55
  %98 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* %97) #8
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %375, label %100

100:                                              ; preds = %95
  %101 = load i32*, i32** %44, align 8
  %102 = getelementptr inbounds i32, i32* %101, i64 %55
  %103 = load i32, i32* %102, align 4
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %107, label %105

105:                                              ; preds = %100
  %106 = add i32 %103, %18
  store i32 %106, i32* %102, align 4
  br label %107

107:                                              ; preds = %105, %100
  br i1 %52, label %108, label %125

108:                                              ; preds = %107
  %109 = load i32*, i32** %46, align 8
  %110 = getelementptr inbounds i32, i32* %109, i64 %55
  %111 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* %110) #8
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %375, label %113

113:                                              ; preds = %108
  %114 = load i32*, i32** %47, align 8
  %115 = getelementptr inbounds i32, i32* %114, i64 %55
  %116 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* %115) #8
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %375, label %118

118:                                              ; preds = %113
  %119 = load i32*, i32** %46, align 8
  %120 = getelementptr inbounds i32, i32* %119, i64 %55
  %121 = load i32, i32* %120, align 4
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %125, label %123

123:                                              ; preds = %118
  %124 = add i32 %121, %18
  store i32 %124, i32* %120, align 4
  br label %125

125:                                              ; preds = %123, %118, %107, %89
  %126 = add nuw nsw i64 %55, 1
  %127 = icmp eq i64 %126, %53
  br i1 %127, label %128, label %54

128:                                              ; preds = %125
  %129 = load i32, i32* %9, align 4
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %310, label %131

131:                                              ; preds = %128
  %132 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %1, i64 0, i32 6
  %133 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %11, i64 0, i32 0, i32 0
  %134 = bitcast i16* %8 to i8*
  %135 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %11, i64 0, i32 1, i32 1
  %136 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %11, i64 0, i32 1, i32 0
  %137 = bitcast i16* %7 to i8*
  %138 = bitcast i32* %6 to i8*
  %139 = bitcast i32* %5 to i8*
  br label %144

140:                                              ; preds = %307
  %141 = load i32, i32* %9, align 4
  %142 = zext i32 %141 to i64
  %143 = icmp ult i64 %309, %142
  br i1 %143, label %144, label %310

144:                                              ; preds = %131, %140
  %145 = phi i64 [ 0, %131 ], [ %309, %140 ]
  %146 = phi %struct._cms_MLU_struct* [ null, %131 ], [ %286, %140 ]
  %147 = phi %struct._cms_MLU_struct* [ null, %131 ], [ %285, %140 ]
  %148 = load i32*, i32** %41, align 8
  %149 = getelementptr inbounds i32, i32* %148, i64 %145
  %150 = load i32, i32* %149, align 4
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %186, label %152

152:                                              ; preds = %144
  %153 = load i32 (%struct._cms_io_handler*, i32)*, i32 (%struct._cms_io_handler*, i32)** %132, align 8
  %154 = call i32 %153(%struct._cms_io_handler* %1, i32 %150) #8
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %375, label %156

156:                                              ; preds = %152
  %157 = load i32*, i32** %42, align 8
  %158 = getelementptr inbounds i32, i32* %157, i64 %145
  %159 = load i32, i32* %158, align 4
  %160 = lshr i32 %159, 1
  %161 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %133, align 8
  %162 = shl i32 %160, 2
  %163 = add i32 %162, 4
  %164 = call i8* @_cmsMallocZero(%struct._cmsContext_struct* %161, i32 %163) #8
  %165 = bitcast i8* %164 to i32*
  %166 = icmp eq i8* %164, null
  br i1 %166, label %375, label %167

167:                                              ; preds = %156
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %134) #8
  store i16 -21846, i16* %8, align 2
  %168 = icmp eq i32 %160, 0
  br i1 %168, label %183, label %169

169:                                              ; preds = %167
  %170 = zext i32 %160 to i64
  br label %171

171:                                              ; preds = %175, %169
  %172 = phi i64 [ 0, %169 ], [ %179, %175 ]
  %173 = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %1, i16* nonnull %8) #8
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %181, label %175

175:                                              ; preds = %171
  %176 = load i16, i16* %8, align 2
  %177 = zext i16 %176 to i32
  %178 = getelementptr inbounds i32, i32* %165, i64 %172
  store i32 %177, i32* %178, align 4
  %179 = add nuw nsw i64 %172, 1
  %180 = icmp eq i64 %179, %170
  br i1 %180, label %183, label %171

181:                                              ; preds = %171
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %134) #8
  %182 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %133, align 8
  call void @_cmsFree(%struct._cmsContext_struct* %182, i8* nonnull %164) #8
  br label %375

183:                                              ; preds = %175, %167
  %184 = phi i64 [ 0, %167 ], [ %170, %175 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %134) #8
  %185 = getelementptr inbounds i32, i32* %165, i64 %184
  store i32 0, i32* %185, align 4
  br label %186

186:                                              ; preds = %183, %144
  %187 = phi i8* [ %164, %183 ], [ null, %144 ]
  %188 = phi i32* [ %165, %183 ], [ null, %144 ]
  %189 = load i32*, i32** %135, align 8
  %190 = getelementptr inbounds i32, i32* %189, i64 %145
  %191 = load i32, i32* %190, align 4
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %227, label %193

193:                                              ; preds = %186
  %194 = load i32 (%struct._cms_io_handler*, i32)*, i32 (%struct._cms_io_handler*, i32)** %132, align 8
  %195 = call i32 %194(%struct._cms_io_handler* %1, i32 %191) #8
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %375, label %197

197:                                              ; preds = %193
  %198 = load i32*, i32** %43, align 8
  %199 = getelementptr inbounds i32, i32* %198, i64 %145
  %200 = load i32, i32* %199, align 4
  %201 = lshr i32 %200, 1
  %202 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %136, align 8
  %203 = shl i32 %201, 2
  %204 = add i32 %203, 4
  %205 = call i8* @_cmsMallocZero(%struct._cmsContext_struct* %202, i32 %204) #8
  %206 = bitcast i8* %205 to i32*
  %207 = icmp eq i8* %205, null
  br i1 %207, label %375, label %208

208:                                              ; preds = %197
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %137) #8
  store i16 -21846, i16* %7, align 2
  %209 = icmp eq i32 %201, 0
  br i1 %209, label %224, label %210

210:                                              ; preds = %208
  %211 = zext i32 %201 to i64
  br label %212

212:                                              ; preds = %216, %210
  %213 = phi i64 [ 0, %210 ], [ %220, %216 ]
  %214 = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %1, i16* nonnull %7) #8
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %222, label %216

216:                                              ; preds = %212
  %217 = load i16, i16* %7, align 2
  %218 = zext i16 %217 to i32
  %219 = getelementptr inbounds i32, i32* %206, i64 %213
  store i32 %218, i32* %219, align 4
  %220 = add nuw nsw i64 %213, 1
  %221 = icmp eq i64 %220, %211
  br i1 %221, label %224, label %212

222:                                              ; preds = %212
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %137) #8
  %223 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %136, align 8
  call void @_cmsFree(%struct._cmsContext_struct* %223, i8* nonnull %205) #8
  br label %375

224:                                              ; preds = %216, %208
  %225 = phi i64 [ 0, %208 ], [ %211, %216 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %137) #8
  %226 = getelementptr inbounds i32, i32* %206, i64 %225
  store i32 0, i32* %226, align 4
  br label %227

227:                                              ; preds = %224, %186
  %228 = phi i8* [ %205, %224 ], [ null, %186 ]
  %229 = phi i32* [ %206, %224 ], [ null, %186 ]
  %230 = load i32, i32* %10, align 4
  %231 = icmp ugt i32 %230, 16
  br i1 %231, label %232, label %284

232:                                              ; preds = %227
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %138) #8
  store i32 0, i32* %6, align 4
  %233 = load i32*, i32** %44, align 8
  %234 = getelementptr inbounds i32, i32* %233, i64 %145
  %235 = load i32, i32* %234, align 4
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %247, label %237

237:                                              ; preds = %232
  %238 = load i32*, i32** %45, align 8
  %239 = getelementptr inbounds i32, i32* %238, i64 %145
  %240 = load i32, i32* %239, align 4
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %247, label %242

242:                                              ; preds = %237
  %243 = load i32 (%struct._cms_io_handler*, i32)*, i32 (%struct._cms_io_handler*, i32)** %132, align 8
  %244 = call i32 %243(%struct._cms_io_handler* %1, i32 %235) #8
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %246, label %248

246:                                              ; preds = %242
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %138) #8
  br label %375

247:                                              ; preds = %237, %232
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %138) #8
  br label %257

248:                                              ; preds = %242
  %249 = load i32*, i32** %45, align 8
  %250 = getelementptr inbounds i32, i32* %249, i64 %145
  %251 = load i32, i32* %250, align 4
  %252 = call i8* @Type_MLU_Read(%struct._cms_typehandler_struct* %0, %struct._cms_io_handler* %1, i32* nonnull %6, i32 %251) #8
  %253 = icmp eq i8* %252, null
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %138) #8
  br i1 %253, label %375, label %254

254:                                              ; preds = %248
  %255 = bitcast i8* %252 to %struct._cms_MLU_struct*
  %256 = load i32, i32* %10, align 4
  br label %257

257:                                              ; preds = %254, %247
  %258 = phi i32 [ %230, %247 ], [ %256, %254 ]
  %259 = phi %struct._cms_MLU_struct* [ null, %247 ], [ %255, %254 ]
  %260 = icmp ugt i32 %258, 24
  br i1 %260, label %261, label %284

261:                                              ; preds = %257
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %139) #8
  store i32 0, i32* %5, align 4
  %262 = load i32*, i32** %46, align 8
  %263 = getelementptr inbounds i32, i32* %262, i64 %145
  %264 = load i32, i32* %263, align 4
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %276, label %266

266:                                              ; preds = %261
  %267 = load i32*, i32** %47, align 8
  %268 = getelementptr inbounds i32, i32* %267, i64 %145
  %269 = load i32, i32* %268, align 4
  %270 = icmp eq i32 %269, 0
  br i1 %270, label %276, label %271

271:                                              ; preds = %266
  %272 = load i32 (%struct._cms_io_handler*, i32)*, i32 (%struct._cms_io_handler*, i32)** %132, align 8
  %273 = call i32 %272(%struct._cms_io_handler* %1, i32 %264) #8
  %274 = icmp eq i32 %273, 0
  br i1 %274, label %275, label %277

275:                                              ; preds = %271
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %139) #8
  br label %375

276:                                              ; preds = %266, %261
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %139) #8
  br label %284

277:                                              ; preds = %271
  %278 = load i32*, i32** %47, align 8
  %279 = getelementptr inbounds i32, i32* %278, i64 %145
  %280 = load i32, i32* %279, align 4
  %281 = call i8* @Type_MLU_Read(%struct._cms_typehandler_struct* %0, %struct._cms_io_handler* %1, i32* nonnull %5, i32 %280) #8
  %282 = bitcast i8* %281 to %struct._cms_MLU_struct*
  %283 = icmp eq i8* %281, null
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %139) #8
  br i1 %283, label %375, label %284

284:                                              ; preds = %227, %276, %277, %257
  %285 = phi %struct._cms_MLU_struct* [ %259, %277 ], [ %259, %257 ], [ %259, %276 ], [ %147, %227 ]
  %286 = phi %struct._cms_MLU_struct* [ %282, %277 ], [ %146, %257 ], [ null, %276 ], [ %146, %227 ]
  %287 = icmp eq i32* %188, null
  %288 = icmp eq i32* %229, null
  %289 = or i1 %287, %288
  br i1 %289, label %290, label %292

290:                                              ; preds = %284
  %291 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %26, align 8
  call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %291, i32 12, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.28, i64 0, i64 0)) #8
  br label %294

292:                                              ; preds = %284
  %293 = call i32 @cmsDictAddEntry(i8* nonnull %30, i32* nonnull %188, i32* nonnull %229, %struct._cms_MLU_struct* %285, %struct._cms_MLU_struct* %286) #8
  br label %294

294:                                              ; preds = %292, %290
  %295 = phi i32 [ 0, %290 ], [ %293, %292 ]
  br i1 %287, label %298, label %296

296:                                              ; preds = %294
  %297 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %26, align 8
  call void @_cmsFree(%struct._cmsContext_struct* %297, i8* nonnull %187) #8
  br label %298

298:                                              ; preds = %294, %296
  br i1 %288, label %301, label %299

299:                                              ; preds = %298
  %300 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %26, align 8
  call void @_cmsFree(%struct._cmsContext_struct* %300, i8* nonnull %228) #8
  br label %301

301:                                              ; preds = %298, %299
  %302 = icmp eq %struct._cms_MLU_struct* %285, null
  br i1 %302, label %304, label %303

303:                                              ; preds = %301
  call void @cmsMLUfree(%struct._cms_MLU_struct* nonnull %285) #8
  br label %304

304:                                              ; preds = %301, %303
  %305 = icmp eq %struct._cms_MLU_struct* %286, null
  br i1 %305, label %307, label %306

306:                                              ; preds = %304
  call void @cmsMLUfree(%struct._cms_MLU_struct* nonnull %286) #8
  br label %307

307:                                              ; preds = %304, %306
  %308 = icmp eq i32 %295, 0
  %309 = add nuw nsw i64 %145, 1
  br i1 %308, label %375, label %140

310:                                              ; preds = %140, %38, %128
  %311 = load i32*, i32** %41, align 8
  %312 = icmp eq i32* %311, null
  br i1 %312, label %325, label %313

313:                                              ; preds = %310
  %314 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %11, i64 0, i32 0, i32 0
  %315 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %314, align 8
  %316 = bitcast i32* %311 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %315, i8* nonnull %316) #8
  %317 = load i32*, i32** %42, align 8
  %318 = icmp eq i32* %317, null
  br i1 %318, label %323, label %319

319:                                              ; preds = %313
  %320 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %11, i64 0, i32 0, i32 0
  %321 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %320, align 8
  %322 = bitcast i32* %317 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %321, i8* nonnull %322) #8
  br label %323

323:                                              ; preds = %313, %319
  %324 = bitcast i32** %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %324, i8 0, i64 16, i1 false) #8
  br label %325

325:                                              ; preds = %323, %310
  %326 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %11, i64 0, i32 1, i32 1
  %327 = load i32*, i32** %326, align 8
  %328 = icmp eq i32* %327, null
  br i1 %328, label %342, label %329

329:                                              ; preds = %325
  %330 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %11, i64 0, i32 1
  %331 = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %330, i64 0, i32 0
  %332 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %331, align 8
  %333 = bitcast i32* %327 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %332, i8* nonnull %333) #8
  %334 = load i32*, i32** %43, align 8
  %335 = icmp eq i32* %334, null
  br i1 %335, label %340, label %336

336:                                              ; preds = %329
  %337 = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %330, i64 0, i32 0
  %338 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %337, align 8
  %339 = bitcast i32* %334 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %338, i8* nonnull %339) #8
  br label %340

340:                                              ; preds = %329, %336
  %341 = bitcast i32** %326 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %341, i8 0, i64 16, i1 false) #8
  br label %342

342:                                              ; preds = %340, %325
  %343 = load i32*, i32** %44, align 8
  %344 = icmp eq i32* %343, null
  br i1 %344, label %358, label %345

345:                                              ; preds = %342
  %346 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %11, i64 0, i32 2
  %347 = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %346, i64 0, i32 0
  %348 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %347, align 8
  %349 = bitcast i32* %343 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %348, i8* nonnull %349) #8
  %350 = load i32*, i32** %45, align 8
  %351 = icmp eq i32* %350, null
  br i1 %351, label %356, label %352

352:                                              ; preds = %345
  %353 = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %346, i64 0, i32 0
  %354 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %353, align 8
  %355 = bitcast i32* %350 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %354, i8* nonnull %355) #8
  br label %356

356:                                              ; preds = %345, %352
  %357 = bitcast i32** %44 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %357, i8 0, i64 16, i1 false) #8
  br label %358

358:                                              ; preds = %356, %342
  %359 = load i32*, i32** %46, align 8
  %360 = icmp eq i32* %359, null
  br i1 %360, label %374, label %361

361:                                              ; preds = %358
  %362 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %11, i64 0, i32 3
  %363 = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %362, i64 0, i32 0
  %364 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %363, align 8
  %365 = bitcast i32* %359 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %364, i8* nonnull %365) #8
  %366 = load i32*, i32** %47, align 8
  %367 = icmp eq i32* %366, null
  br i1 %367, label %372, label %368

368:                                              ; preds = %361
  %369 = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %362, i64 0, i32 0
  %370 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %369, align 8
  %371 = bitcast i32* %366 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %370, i8* nonnull %371) #8
  br label %372

372:                                              ; preds = %361, %368
  %373 = bitcast i32** %46 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %373, i8 0, i64 16, i1 false) #8
  br label %374

374:                                              ; preds = %358, %372
  store i32 1, i32* %2, align 4
  br label %447

375:                                              ; preds = %54, %60, %72, %77, %90, %95, %108, %113, %197, %193, %156, %152, %248, %277, %307, %222, %181, %275, %246, %32
  %376 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %11, i64 0, i32 0, i32 1
  %377 = load i32*, i32** %376, align 8
  %378 = icmp eq i32* %377, null
  br i1 %378, label %392, label %379

379:                                              ; preds = %375
  %380 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %11, i64 0, i32 0, i32 0
  %381 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %380, align 8
  %382 = bitcast i32* %377 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %381, i8* nonnull %382) #8
  %383 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %11, i64 0, i32 0, i32 2
  %384 = load i32*, i32** %383, align 8
  %385 = icmp eq i32* %384, null
  br i1 %385, label %390, label %386

386:                                              ; preds = %379
  %387 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %11, i64 0, i32 0, i32 0
  %388 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %387, align 8
  %389 = bitcast i32* %384 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %388, i8* nonnull %389) #8
  br label %390

390:                                              ; preds = %379, %386
  %391 = bitcast i32** %376 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %391, i8 0, i64 16, i1 false) #8
  br label %392

392:                                              ; preds = %390, %375
  %393 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %11, i64 0, i32 1, i32 1
  %394 = load i32*, i32** %393, align 8
  %395 = icmp eq i32* %394, null
  br i1 %395, label %410, label %396

396:                                              ; preds = %392
  %397 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %11, i64 0, i32 1
  %398 = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %397, i64 0, i32 0
  %399 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %398, align 8
  %400 = bitcast i32* %394 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %399, i8* nonnull %400) #8
  %401 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %11, i64 0, i32 1, i32 2
  %402 = load i32*, i32** %401, align 8
  %403 = icmp eq i32* %402, null
  br i1 %403, label %408, label %404

404:                                              ; preds = %396
  %405 = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %397, i64 0, i32 0
  %406 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %405, align 8
  %407 = bitcast i32* %402 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %406, i8* nonnull %407) #8
  br label %408

408:                                              ; preds = %396, %404
  %409 = bitcast i32** %393 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %409, i8 0, i64 16, i1 false) #8
  br label %410

410:                                              ; preds = %408, %392
  %411 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %11, i64 0, i32 2, i32 1
  %412 = load i32*, i32** %411, align 8
  %413 = icmp eq i32* %412, null
  br i1 %413, label %428, label %414

414:                                              ; preds = %410
  %415 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %11, i64 0, i32 2
  %416 = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %415, i64 0, i32 0
  %417 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %416, align 8
  %418 = bitcast i32* %412 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %417, i8* nonnull %418) #8
  %419 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %11, i64 0, i32 2, i32 2
  %420 = load i32*, i32** %419, align 8
  %421 = icmp eq i32* %420, null
  br i1 %421, label %426, label %422

422:                                              ; preds = %414
  %423 = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %415, i64 0, i32 0
  %424 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %423, align 8
  %425 = bitcast i32* %420 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %424, i8* nonnull %425) #8
  br label %426

426:                                              ; preds = %414, %422
  %427 = bitcast i32** %411 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %427, i8 0, i64 16, i1 false) #8
  br label %428

428:                                              ; preds = %426, %410
  %429 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %11, i64 0, i32 3, i32 1
  %430 = load i32*, i32** %429, align 8
  %431 = icmp eq i32* %430, null
  br i1 %431, label %446, label %432

432:                                              ; preds = %428
  %433 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %11, i64 0, i32 3
  %434 = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %433, i64 0, i32 0
  %435 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %434, align 8
  %436 = bitcast i32* %430 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %435, i8* nonnull %436) #8
  %437 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %11, i64 0, i32 3, i32 2
  %438 = load i32*, i32** %437, align 8
  %439 = icmp eq i32* %438, null
  br i1 %439, label %444, label %440

440:                                              ; preds = %432
  %441 = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %433, i64 0, i32 0
  %442 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %441, align 8
  %443 = bitcast i32* %438 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %442, i8* nonnull %443) #8
  br label %444

444:                                              ; preds = %432, %440
  %445 = bitcast i32** %429 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %445, i8 0, i64 16, i1 false) #8
  br label %446

446:                                              ; preds = %428, %444
  call void @cmsDictFree(i8* nonnull %30) #8
  br label %447

447:                                              ; preds = %29, %21, %4, %446, %374, %28
  %448 = phi i8* [ null, %28 ], [ null, %446 ], [ %30, %374 ], [ null, %4 ], [ null, %21 ], [ null, %29 ]
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %14) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #8
  ret i8* %448
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @Type_Dictionary_Write(%struct._cms_typehandler_struct* nocapture readonly, %struct._cms_io_handler*, i8*, i32) #0 {
  %5 = alloca %struct._cmsDICarray, align 8
  %6 = bitcast %struct._cmsDICarray* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %6) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 96, i1 false)
  %7 = icmp eq i8* %2, null
  br i1 %7, label %489, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %1, i64 0, i32 8
  %10 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %9, align 8
  %11 = tail call i32 %10(%struct._cms_io_handler* %1) #8
  %12 = add i32 %11, -8
  %13 = tail call %struct._cmsDICTentry_struct* @cmsDictGetEntryList(i8* nonnull %2) #8
  %14 = icmp eq %struct._cmsDICTentry_struct* %13, null
  br i1 %14, label %33, label %15

15:                                               ; preds = %8, %15
  %16 = phi i32 [ %28, %15 ], [ 0, %8 ]
  %17 = phi i32 [ %27, %15 ], [ 0, %8 ]
  %18 = phi i32 [ %23, %15 ], [ 0, %8 ]
  %19 = phi %struct._cmsDICTentry_struct* [ %29, %15 ], [ %13, %8 ]
  %20 = getelementptr inbounds %struct._cmsDICTentry_struct, %struct._cmsDICTentry_struct* %19, i64 0, i32 1
  %21 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %20, align 8
  %22 = icmp eq %struct._cms_MLU_struct* %21, null
  %23 = select i1 %22, i32 %18, i32 1
  %24 = getelementptr inbounds %struct._cmsDICTentry_struct, %struct._cmsDICTentry_struct* %19, i64 0, i32 2
  %25 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %24, align 8
  %26 = icmp eq %struct._cms_MLU_struct* %25, null
  %27 = select i1 %26, i32 %17, i32 1
  %28 = add i32 %16, 1
  %29 = tail call %struct._cmsDICTentry_struct* @cmsDictNextEntry(%struct._cmsDICTentry_struct* nonnull %19) #8
  %30 = icmp eq %struct._cmsDICTentry_struct* %29, null
  br i1 %30, label %31, label %15

31:                                               ; preds = %15
  %32 = icmp eq i32 %23, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %8, %31
  %34 = phi i32 [ %28, %31 ], [ 0, %8 ]
  %35 = phi i32 [ %27, %31 ], [ 0, %8 ]
  br label %36

36:                                               ; preds = %31, %33
  %37 = phi i32 [ %34, %33 ], [ %28, %31 ]
  %38 = phi i32 [ %35, %33 ], [ %27, %31 ]
  %39 = phi i32 [ 16, %33 ], [ 24, %31 ]
  %40 = icmp eq i32 %38, 0
  %41 = add nuw nsw i32 %39, 8
  %42 = select i1 %40, i32 %39, i32 %41
  %43 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %37) #8
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %489, label %45

45:                                               ; preds = %36
  %46 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %42) #8
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %489, label %48

48:                                               ; preds = %45
  %49 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %9, align 8
  %50 = tail call i32 %49(%struct._cms_io_handler* %1) #8
  %51 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %52 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %51, align 8
  %53 = call fastcc i32 @AllocArray(%struct._cmsContext_struct* %52, %struct._cmsDICarray* nonnull %5, i32 %37, i32 %42)
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %418, label %55

55:                                               ; preds = %48
  %56 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %5, i64 0, i32 1
  %57 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %5, i64 0, i32 2
  %58 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %5, i64 0, i32 3
  %59 = icmp eq i32 %37, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %55
  %61 = tail call %struct._cmsDICTentry_struct* @cmsDictGetEntryList(i8* nonnull %2) #8
  br label %272

62:                                               ; preds = %55
  %63 = icmp ugt i32 %42, 16
  %64 = icmp ugt i32 %42, 24
  %65 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %5, i64 0, i32 0, i32 1
  %66 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %5, i64 0, i32 0, i32 2
  %67 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %5, i64 0, i32 1, i32 1
  %68 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %5, i64 0, i32 1, i32 2
  %69 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %5, i64 0, i32 2, i32 1
  %70 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %5, i64 0, i32 2, i32 2
  %71 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %5, i64 0, i32 3, i32 1
  %72 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %5, i64 0, i32 3, i32 2
  %73 = zext i32 %37 to i64
  %74 = load i32*, i32** %65, align 8
  br label %75

75:                                               ; preds = %125, %62
  %76 = phi i64 [ %126, %125 ], [ 0, %62 ]
  %77 = getelementptr inbounds i32, i32* %74, i64 %76
  %78 = load i32, i32* %77, align 4
  %79 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %78) #8
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %418, label %81

81:                                               ; preds = %75
  %82 = load i32*, i32** %66, align 8
  %83 = getelementptr inbounds i32, i32* %82, i64 %76
  %84 = load i32, i32* %83, align 4
  %85 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %84) #8
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %418, label %87

87:                                               ; preds = %81
  %88 = load i32*, i32** %67, align 8
  %89 = getelementptr inbounds i32, i32* %88, i64 %76
  %90 = load i32, i32* %89, align 4
  %91 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %90) #8
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %418, label %93

93:                                               ; preds = %87
  %94 = load i32*, i32** %68, align 8
  %95 = getelementptr inbounds i32, i32* %94, i64 %76
  %96 = load i32, i32* %95, align 4
  %97 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %96) #8
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %418, label %99

99:                                               ; preds = %93
  br i1 %63, label %100, label %125

100:                                              ; preds = %99
  %101 = load i32*, i32** %69, align 8
  %102 = getelementptr inbounds i32, i32* %101, i64 %76
  %103 = load i32, i32* %102, align 4
  %104 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %103) #8
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %418, label %106

106:                                              ; preds = %100
  %107 = load i32*, i32** %70, align 8
  %108 = getelementptr inbounds i32, i32* %107, i64 %76
  %109 = load i32, i32* %108, align 4
  %110 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %109) #8
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %418, label %112

112:                                              ; preds = %106
  br i1 %64, label %113, label %125

113:                                              ; preds = %112
  %114 = load i32*, i32** %71, align 8
  %115 = getelementptr inbounds i32, i32* %114, i64 %76
  %116 = load i32, i32* %115, align 4
  %117 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %116) #8
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %418, label %119

119:                                              ; preds = %113
  %120 = load i32*, i32** %72, align 8
  %121 = getelementptr inbounds i32, i32* %120, i64 %76
  %122 = load i32, i32* %121, align 4
  %123 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %122) #8
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %418, label %125

125:                                              ; preds = %119, %112, %99
  %126 = add nuw nsw i64 %76, 1
  %127 = icmp eq i64 %126, %73
  br i1 %127, label %128, label %75

128:                                              ; preds = %125
  %129 = tail call %struct._cmsDICTentry_struct* @cmsDictGetEntryList(i8* nonnull %2) #8
  br i1 %59, label %272, label %130

130:                                              ; preds = %128
  %131 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %5, i64 0, i32 0, i32 1
  %132 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %5, i64 0, i32 0, i32 2
  %133 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %5, i64 0, i32 1, i32 1
  %134 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %5, i64 0, i32 1, i32 2
  %135 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %5, i64 0, i32 2, i32 1
  %136 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %5, i64 0, i32 2, i32 2
  %137 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %5, i64 0, i32 3, i32 1
  %138 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %5, i64 0, i32 3, i32 2
  %139 = zext i32 %37 to i64
  br label %140

140:                                              ; preds = %268, %130
  %141 = phi i64 [ 0, %130 ], [ %270, %268 ]
  %142 = phi %struct._cmsDICTentry_struct* [ %129, %130 ], [ %269, %268 ]
  %143 = getelementptr inbounds %struct._cmsDICTentry_struct, %struct._cmsDICTentry_struct* %142, i64 0, i32 3
  %144 = load i32*, i32** %143, align 8
  %145 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %9, align 8
  %146 = tail call i32 %145(%struct._cms_io_handler* %1) #8
  %147 = sub i32 %146, %12
  %148 = load i32*, i32** %131, align 8
  %149 = getelementptr inbounds i32, i32* %148, i64 %141
  store i32 %147, i32* %149, align 4
  %150 = icmp eq i32* %144, null
  br i1 %150, label %151, label %154

151:                                              ; preds = %140
  %152 = load i32*, i32** %132, align 8
  %153 = getelementptr inbounds i32, i32* %152, i64 %141
  store i32 0, i32* %153, align 4
  br label %182

154:                                              ; preds = %140, %154
  %155 = phi i32* [ %158, %154 ], [ %144, %140 ]
  %156 = load i32, i32* %155, align 4
  %157 = icmp eq i32 %156, 0
  %158 = getelementptr inbounds i32, i32* %155, i64 1
  br i1 %157, label %159, label %154

159:                                              ; preds = %154
  %160 = ptrtoint i32* %155 to i64
  %161 = ptrtoint i32* %144 to i64
  %162 = sub i64 %160, %161
  %163 = lshr exact i64 %162, 2
  %164 = trunc i64 %163 to i32
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %178, label %166

166:                                              ; preds = %159
  %167 = and i64 %163, 4294967295
  br label %170

168:                                              ; preds = %170
  %169 = icmp eq i64 %177, %167
  br i1 %169, label %178, label %170

170:                                              ; preds = %168, %166
  %171 = phi i64 [ 0, %166 ], [ %177, %168 ]
  %172 = getelementptr inbounds i32, i32* %144, i64 %171
  %173 = load i32, i32* %172, align 4
  %174 = trunc i32 %173 to i16
  %175 = tail call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %1, i16 zeroext %174) #8
  %176 = icmp eq i32 %175, 0
  %177 = add nuw nsw i64 %171, 1
  br i1 %176, label %418, label %168

178:                                              ; preds = %168, %159
  %179 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %9, align 8
  %180 = tail call i32 %179(%struct._cms_io_handler* %1) #8
  %181 = sub i32 %180, %146
  br label %182

182:                                              ; preds = %151, %178
  %183 = phi i32** [ %131, %151 ], [ %132, %178 ]
  %184 = phi i32 [ 0, %151 ], [ %181, %178 ]
  %185 = load i32*, i32** %183, align 8
  %186 = getelementptr inbounds i32, i32* %185, i64 %141
  store i32 %184, i32* %186, align 4
  %187 = getelementptr inbounds %struct._cmsDICTentry_struct, %struct._cmsDICTentry_struct* %142, i64 0, i32 4
  %188 = load i32*, i32** %187, align 8
  %189 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %9, align 8
  %190 = tail call i32 %189(%struct._cms_io_handler* %1) #8
  %191 = sub i32 %190, %12
  %192 = load i32*, i32** %133, align 8
  %193 = getelementptr inbounds i32, i32* %192, i64 %141
  store i32 %191, i32* %193, align 4
  %194 = icmp eq i32* %188, null
  br i1 %194, label %195, label %198

195:                                              ; preds = %182
  %196 = load i32*, i32** %134, align 8
  %197 = getelementptr inbounds i32, i32* %196, i64 %141
  store i32 0, i32* %197, align 4
  br label %226

198:                                              ; preds = %182, %198
  %199 = phi i32* [ %202, %198 ], [ %188, %182 ]
  %200 = load i32, i32* %199, align 4
  %201 = icmp eq i32 %200, 0
  %202 = getelementptr inbounds i32, i32* %199, i64 1
  br i1 %201, label %203, label %198

203:                                              ; preds = %198
  %204 = ptrtoint i32* %199 to i64
  %205 = ptrtoint i32* %188 to i64
  %206 = sub i64 %204, %205
  %207 = lshr exact i64 %206, 2
  %208 = trunc i64 %207 to i32
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %222, label %210

210:                                              ; preds = %203
  %211 = and i64 %207, 4294967295
  br label %214

212:                                              ; preds = %214
  %213 = icmp eq i64 %221, %211
  br i1 %213, label %222, label %214

214:                                              ; preds = %212, %210
  %215 = phi i64 [ 0, %210 ], [ %221, %212 ]
  %216 = getelementptr inbounds i32, i32* %188, i64 %215
  %217 = load i32, i32* %216, align 4
  %218 = trunc i32 %217 to i16
  %219 = tail call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %1, i16 zeroext %218) #8
  %220 = icmp eq i32 %219, 0
  %221 = add nuw nsw i64 %215, 1
  br i1 %220, label %418, label %212

222:                                              ; preds = %212, %203
  %223 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %9, align 8
  %224 = tail call i32 %223(%struct._cms_io_handler* %1) #8
  %225 = sub i32 %224, %190
  br label %226

226:                                              ; preds = %195, %222
  %227 = phi i32** [ %133, %195 ], [ %134, %222 ]
  %228 = phi i32 [ 0, %195 ], [ %225, %222 ]
  %229 = load i32*, i32** %227, align 8
  %230 = getelementptr inbounds i32, i32* %229, i64 %141
  store i32 %228, i32* %230, align 4
  %231 = getelementptr inbounds %struct._cmsDICTentry_struct, %struct._cmsDICTentry_struct* %142, i64 0, i32 1
  %232 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %231, align 8
  %233 = icmp eq %struct._cms_MLU_struct* %232, null
  br i1 %233, label %249, label %234

234:                                              ; preds = %226
  %235 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %9, align 8
  %236 = tail call i32 %235(%struct._cms_io_handler* %1) #8
  %237 = sub i32 %236, %12
  %238 = load i32*, i32** %135, align 8
  %239 = getelementptr inbounds i32, i32* %238, i64 %141
  store i32 %237, i32* %239, align 4
  %240 = bitcast %struct._cms_MLU_struct* %232 to i8*
  %241 = tail call i32 @Type_MLU_Write(%struct._cms_typehandler_struct* %0, %struct._cms_io_handler* %1, i8* nonnull %240, i32 1) #8
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %418, label %243

243:                                              ; preds = %234
  %244 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %9, align 8
  %245 = tail call i32 %244(%struct._cms_io_handler* %1) #8
  %246 = sub i32 %245, %236
  %247 = load i32*, i32** %136, align 8
  %248 = getelementptr inbounds i32, i32* %247, i64 %141
  store i32 %246, i32* %248, align 4
  br label %249

249:                                              ; preds = %243, %226
  %250 = getelementptr inbounds %struct._cmsDICTentry_struct, %struct._cmsDICTentry_struct* %142, i64 0, i32 2
  %251 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %250, align 8
  %252 = icmp eq %struct._cms_MLU_struct* %251, null
  br i1 %252, label %268, label %253

253:                                              ; preds = %249
  %254 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %9, align 8
  %255 = tail call i32 %254(%struct._cms_io_handler* %1) #8
  %256 = sub i32 %255, %12
  %257 = load i32*, i32** %137, align 8
  %258 = getelementptr inbounds i32, i32* %257, i64 %141
  store i32 %256, i32* %258, align 4
  %259 = bitcast %struct._cms_MLU_struct* %251 to i8*
  %260 = tail call i32 @Type_MLU_Write(%struct._cms_typehandler_struct* %0, %struct._cms_io_handler* %1, i8* nonnull %259, i32 1) #8
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %418, label %262

262:                                              ; preds = %253
  %263 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %9, align 8
  %264 = tail call i32 %263(%struct._cms_io_handler* %1) #8
  %265 = sub i32 %264, %255
  %266 = load i32*, i32** %138, align 8
  %267 = getelementptr inbounds i32, i32* %266, i64 %141
  store i32 %265, i32* %267, align 4
  br label %268

268:                                              ; preds = %262, %249
  %269 = tail call %struct._cmsDICTentry_struct* @cmsDictNextEntry(%struct._cmsDICTentry_struct* %142) #8
  %270 = add nuw nsw i64 %141, 1
  %271 = icmp eq i64 %270, %139
  br i1 %271, label %272, label %140

272:                                              ; preds = %268, %60, %128
  %273 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %9, align 8
  %274 = tail call i32 %273(%struct._cms_io_handler* %1) #8
  %275 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %1, i64 0, i32 6
  %276 = load i32 (%struct._cms_io_handler*, i32)*, i32 (%struct._cms_io_handler*, i32)** %275, align 8
  %277 = tail call i32 %276(%struct._cms_io_handler* %1, i32 %50) #8
  %278 = icmp eq i32 %277, 0
  br i1 %278, label %418, label %279

279:                                              ; preds = %272
  br i1 %59, label %346, label %280

280:                                              ; preds = %279
  %281 = icmp ugt i32 %42, 16
  %282 = icmp ugt i32 %42, 24
  %283 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %5, i64 0, i32 0, i32 1
  %284 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %5, i64 0, i32 0, i32 2
  %285 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %5, i64 0, i32 1, i32 1
  %286 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %5, i64 0, i32 1, i32 2
  %287 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %5, i64 0, i32 2, i32 1
  %288 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %5, i64 0, i32 2, i32 2
  %289 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %5, i64 0, i32 3, i32 1
  %290 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %5, i64 0, i32 3, i32 2
  %291 = zext i32 %37 to i64
  %292 = load i32*, i32** %283, align 8
  br label %293

293:                                              ; preds = %343, %280
  %294 = phi i64 [ %344, %343 ], [ 0, %280 ]
  %295 = getelementptr inbounds i32, i32* %292, i64 %294
  %296 = load i32, i32* %295, align 4
  %297 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %296) #8
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %418, label %299

299:                                              ; preds = %293
  %300 = load i32*, i32** %284, align 8
  %301 = getelementptr inbounds i32, i32* %300, i64 %294
  %302 = load i32, i32* %301, align 4
  %303 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %302) #8
  %304 = icmp eq i32 %303, 0
  br i1 %304, label %418, label %305

305:                                              ; preds = %299
  %306 = load i32*, i32** %285, align 8
  %307 = getelementptr inbounds i32, i32* %306, i64 %294
  %308 = load i32, i32* %307, align 4
  %309 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %308) #8
  %310 = icmp eq i32 %309, 0
  br i1 %310, label %418, label %311

311:                                              ; preds = %305
  %312 = load i32*, i32** %286, align 8
  %313 = getelementptr inbounds i32, i32* %312, i64 %294
  %314 = load i32, i32* %313, align 4
  %315 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %314) #8
  %316 = icmp eq i32 %315, 0
  br i1 %316, label %418, label %317

317:                                              ; preds = %311
  br i1 %281, label %318, label %343

318:                                              ; preds = %317
  %319 = load i32*, i32** %287, align 8
  %320 = getelementptr inbounds i32, i32* %319, i64 %294
  %321 = load i32, i32* %320, align 4
  %322 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %321) #8
  %323 = icmp eq i32 %322, 0
  br i1 %323, label %418, label %324

324:                                              ; preds = %318
  %325 = load i32*, i32** %288, align 8
  %326 = getelementptr inbounds i32, i32* %325, i64 %294
  %327 = load i32, i32* %326, align 4
  %328 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %327) #8
  %329 = icmp eq i32 %328, 0
  br i1 %329, label %418, label %330

330:                                              ; preds = %324
  br i1 %282, label %331, label %343

331:                                              ; preds = %330
  %332 = load i32*, i32** %289, align 8
  %333 = getelementptr inbounds i32, i32* %332, i64 %294
  %334 = load i32, i32* %333, align 4
  %335 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %334) #8
  %336 = icmp eq i32 %335, 0
  br i1 %336, label %418, label %337

337:                                              ; preds = %331
  %338 = load i32*, i32** %290, align 8
  %339 = getelementptr inbounds i32, i32* %338, i64 %294
  %340 = load i32, i32* %339, align 4
  %341 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %340) #8
  %342 = icmp eq i32 %341, 0
  br i1 %342, label %418, label %343

343:                                              ; preds = %337, %330, %317
  %344 = add nuw nsw i64 %294, 1
  %345 = icmp eq i64 %344, %291
  br i1 %345, label %346, label %293

346:                                              ; preds = %343, %279
  %347 = load i32 (%struct._cms_io_handler*, i32)*, i32 (%struct._cms_io_handler*, i32)** %275, align 8
  %348 = tail call i32 %347(%struct._cms_io_handler* %1, i32 %274) #8
  %349 = icmp eq i32 %348, 0
  br i1 %349, label %418, label %350

350:                                              ; preds = %346
  %351 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %5, i64 0, i32 0, i32 1
  %352 = load i32*, i32** %351, align 8
  %353 = icmp eq i32* %352, null
  br i1 %353, label %367, label %354

354:                                              ; preds = %350
  %355 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %5, i64 0, i32 0, i32 0
  %356 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %355, align 8
  %357 = bitcast i32* %352 to i8*
  tail call void @_cmsFree(%struct._cmsContext_struct* %356, i8* nonnull %357) #8
  %358 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %5, i64 0, i32 0, i32 2
  %359 = load i32*, i32** %358, align 8
  %360 = icmp eq i32* %359, null
  br i1 %360, label %365, label %361

361:                                              ; preds = %354
  %362 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %5, i64 0, i32 0, i32 0
  %363 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %362, align 8
  %364 = bitcast i32* %359 to i8*
  tail call void @_cmsFree(%struct._cmsContext_struct* %363, i8* nonnull %364) #8
  br label %365

365:                                              ; preds = %354, %361
  %366 = bitcast i32** %351 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %366, i8 0, i64 16, i1 false) #8
  br label %367

367:                                              ; preds = %365, %350
  %368 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %5, i64 0, i32 1, i32 1
  %369 = load i32*, i32** %368, align 8
  %370 = icmp eq i32* %369, null
  br i1 %370, label %384, label %371

371:                                              ; preds = %367
  %372 = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %56, i64 0, i32 0
  %373 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %372, align 8
  %374 = bitcast i32* %369 to i8*
  tail call void @_cmsFree(%struct._cmsContext_struct* %373, i8* nonnull %374) #8
  %375 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %5, i64 0, i32 1, i32 2
  %376 = load i32*, i32** %375, align 8
  %377 = icmp eq i32* %376, null
  br i1 %377, label %382, label %378

378:                                              ; preds = %371
  %379 = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %56, i64 0, i32 0
  %380 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %379, align 8
  %381 = bitcast i32* %376 to i8*
  tail call void @_cmsFree(%struct._cmsContext_struct* %380, i8* nonnull %381) #8
  br label %382

382:                                              ; preds = %371, %378
  %383 = bitcast i32** %368 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %383, i8 0, i64 16, i1 false) #8
  br label %384

384:                                              ; preds = %382, %367
  %385 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %5, i64 0, i32 2, i32 1
  %386 = load i32*, i32** %385, align 8
  %387 = icmp eq i32* %386, null
  br i1 %387, label %401, label %388

388:                                              ; preds = %384
  %389 = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %57, i64 0, i32 0
  %390 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %389, align 8
  %391 = bitcast i32* %386 to i8*
  tail call void @_cmsFree(%struct._cmsContext_struct* %390, i8* nonnull %391) #8
  %392 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %5, i64 0, i32 2, i32 2
  %393 = load i32*, i32** %392, align 8
  %394 = icmp eq i32* %393, null
  br i1 %394, label %399, label %395

395:                                              ; preds = %388
  %396 = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %57, i64 0, i32 0
  %397 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %396, align 8
  %398 = bitcast i32* %393 to i8*
  tail call void @_cmsFree(%struct._cmsContext_struct* %397, i8* nonnull %398) #8
  br label %399

399:                                              ; preds = %388, %395
  %400 = bitcast i32** %385 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %400, i8 0, i64 16, i1 false) #8
  br label %401

401:                                              ; preds = %399, %384
  %402 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %5, i64 0, i32 3, i32 1
  %403 = load i32*, i32** %402, align 8
  %404 = icmp eq i32* %403, null
  br i1 %404, label %489, label %405

405:                                              ; preds = %401
  %406 = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %58, i64 0, i32 0
  %407 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %406, align 8
  %408 = bitcast i32* %403 to i8*
  tail call void @_cmsFree(%struct._cmsContext_struct* %407, i8* nonnull %408) #8
  %409 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %5, i64 0, i32 3, i32 2
  %410 = load i32*, i32** %409, align 8
  %411 = icmp eq i32* %410, null
  br i1 %411, label %416, label %412

412:                                              ; preds = %405
  %413 = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %58, i64 0, i32 0
  %414 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %413, align 8
  %415 = bitcast i32* %410 to i8*
  tail call void @_cmsFree(%struct._cmsContext_struct* %414, i8* nonnull %415) #8
  br label %416

416:                                              ; preds = %405, %412
  %417 = bitcast i32** %402 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %417, i8 0, i64 16, i1 false) #8
  br label %489

418:                                              ; preds = %113, %100, %87, %75, %81, %93, %106, %119, %253, %234, %170, %214, %331, %318, %305, %293, %299, %311, %324, %337, %346, %272, %48
  %419 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %5, i64 0, i32 0, i32 1
  %420 = load i32*, i32** %419, align 8
  %421 = icmp eq i32* %420, null
  br i1 %421, label %435, label %422

422:                                              ; preds = %418
  %423 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %5, i64 0, i32 0, i32 0
  %424 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %423, align 8
  %425 = bitcast i32* %420 to i8*
  tail call void @_cmsFree(%struct._cmsContext_struct* %424, i8* nonnull %425) #8
  %426 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %5, i64 0, i32 0, i32 2
  %427 = load i32*, i32** %426, align 8
  %428 = icmp eq i32* %427, null
  br i1 %428, label %433, label %429

429:                                              ; preds = %422
  %430 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %5, i64 0, i32 0, i32 0
  %431 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %430, align 8
  %432 = bitcast i32* %427 to i8*
  tail call void @_cmsFree(%struct._cmsContext_struct* %431, i8* nonnull %432) #8
  br label %433

433:                                              ; preds = %422, %429
  %434 = bitcast i32** %419 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %434, i8 0, i64 16, i1 false) #8
  br label %435

435:                                              ; preds = %433, %418
  %436 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %5, i64 0, i32 1, i32 1
  %437 = load i32*, i32** %436, align 8
  %438 = icmp eq i32* %437, null
  br i1 %438, label %453, label %439

439:                                              ; preds = %435
  %440 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %5, i64 0, i32 1
  %441 = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %440, i64 0, i32 0
  %442 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %441, align 8
  %443 = bitcast i32* %437 to i8*
  tail call void @_cmsFree(%struct._cmsContext_struct* %442, i8* nonnull %443) #8
  %444 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %5, i64 0, i32 1, i32 2
  %445 = load i32*, i32** %444, align 8
  %446 = icmp eq i32* %445, null
  br i1 %446, label %451, label %447

447:                                              ; preds = %439
  %448 = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %440, i64 0, i32 0
  %449 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %448, align 8
  %450 = bitcast i32* %445 to i8*
  tail call void @_cmsFree(%struct._cmsContext_struct* %449, i8* nonnull %450) #8
  br label %451

451:                                              ; preds = %439, %447
  %452 = bitcast i32** %436 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %452, i8 0, i64 16, i1 false) #8
  br label %453

453:                                              ; preds = %451, %435
  %454 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %5, i64 0, i32 2, i32 1
  %455 = load i32*, i32** %454, align 8
  %456 = icmp eq i32* %455, null
  br i1 %456, label %471, label %457

457:                                              ; preds = %453
  %458 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %5, i64 0, i32 2
  %459 = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %458, i64 0, i32 0
  %460 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %459, align 8
  %461 = bitcast i32* %455 to i8*
  tail call void @_cmsFree(%struct._cmsContext_struct* %460, i8* nonnull %461) #8
  %462 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %5, i64 0, i32 2, i32 2
  %463 = load i32*, i32** %462, align 8
  %464 = icmp eq i32* %463, null
  br i1 %464, label %469, label %465

465:                                              ; preds = %457
  %466 = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %458, i64 0, i32 0
  %467 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %466, align 8
  %468 = bitcast i32* %463 to i8*
  tail call void @_cmsFree(%struct._cmsContext_struct* %467, i8* nonnull %468) #8
  br label %469

469:                                              ; preds = %457, %465
  %470 = bitcast i32** %454 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %470, i8 0, i64 16, i1 false) #8
  br label %471

471:                                              ; preds = %469, %453
  %472 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %5, i64 0, i32 3, i32 1
  %473 = load i32*, i32** %472, align 8
  %474 = icmp eq i32* %473, null
  br i1 %474, label %489, label %475

475:                                              ; preds = %471
  %476 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %5, i64 0, i32 3
  %477 = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %476, i64 0, i32 0
  %478 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %477, align 8
  %479 = bitcast i32* %473 to i8*
  tail call void @_cmsFree(%struct._cmsContext_struct* %478, i8* nonnull %479) #8
  %480 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %5, i64 0, i32 3, i32 2
  %481 = load i32*, i32** %480, align 8
  %482 = icmp eq i32* %481, null
  br i1 %482, label %487, label %483

483:                                              ; preds = %475
  %484 = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %476, i64 0, i32 0
  %485 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %484, align 8
  %486 = bitcast i32* %481 to i8*
  tail call void @_cmsFree(%struct._cmsContext_struct* %485, i8* nonnull %486) #8
  br label %487

487:                                              ; preds = %475, %483
  %488 = bitcast i32** %472 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %488, i8 0, i64 16, i1 false) #8
  br label %489

489:                                              ; preds = %487, %471, %416, %401, %45, %36, %4
  %490 = phi i32 [ 0, %4 ], [ 0, %36 ], [ 0, %45 ], [ 1, %401 ], [ 1, %416 ], [ 0, %471 ], [ 0, %487 ]
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %6) #8
  ret i32 %490
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_Dictionary_Dup(%struct._cms_typehandler_struct* nocapture readnone, i8*, i32) #0 {
  %4 = tail call i8* @cmsDictDup(i8* %1) #8
  ret i8* %4
}

; Function Attrs: nounwind ssp uwtable
define internal void @Type_Dictionary_Free(%struct._cms_typehandler_struct* nocapture readnone, i8*) #0 {
  tail call void @cmsDictFree(i8* %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_vcgt_Read(%struct._cms_typehandler_struct* nocapture readonly, %struct._cms_io_handler*, i32* nocapture, i32) #0 {
  %5 = alloca i32, align 4
  %6 = alloca i16, align 2
  %7 = alloca i16, align 2
  %8 = alloca i16, align 2
  %9 = alloca i8, align 1
  %10 = alloca [3 x %struct._cmsVCGTGAMMA], align 16
  %11 = alloca [10 x double], align 16
  %12 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #8
  store i32 -1431655766, i32* %5, align 4
  store i32 0, i32* %2, align 4
  %13 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* nonnull %5) #8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %147, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %17 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %16, align 8
  %18 = call i8* @_cmsCalloc(%struct._cmsContext_struct* %17, i32 3, i32 8) #8
  %19 = bitcast i8* %18 to %struct._cms_curve_struct**
  %20 = icmp eq i8* %18, null
  br i1 %20, label %147, label %21

21:                                               ; preds = %15
  %22 = load i32, i32* %5, align 4
  switch i32 %22, label %142 [
    i32 0, label %23
    i32 1, label %101
  ]

23:                                               ; preds = %21
  %24 = bitcast i16* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %24) #8
  store i16 -21846, i16* %6, align 2
  %25 = bitcast i16* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %25) #8
  store i16 -21846, i16* %7, align 2
  %26 = bitcast i16* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %26) #8
  store i16 -21846, i16* %8, align 2
  %27 = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %1, i16* nonnull %6) #8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %100, label %29

29:                                               ; preds = %23
  %30 = load i16, i16* %6, align 2
  %31 = icmp eq i16 %30, 3
  br i1 %31, label %35, label %32

32:                                               ; preds = %29
  %33 = zext i16 %30 to i32
  %34 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %16, align 8
  call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %34, i32 8, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.29, i64 0, i64 0), i32 %33) #8
  br label %100

35:                                               ; preds = %29
  %36 = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %1, i16* nonnull %7) #8
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %100, label %38

38:                                               ; preds = %35
  %39 = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %1, i16* nonnull %8) #8
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %100, label %41

41:                                               ; preds = %38
  %42 = load i16, i16* %7, align 2
  %43 = icmp eq i16 %42, 256
  br i1 %43, label %44, label %50

44:                                               ; preds = %41
  %45 = load i16, i16* %8, align 2
  %46 = icmp eq i16 %45, 1
  %47 = icmp eq i32 %3, 1576
  %48 = and i1 %47, %46
  br i1 %48, label %49, label %50

49:                                               ; preds = %44
  store i16 2, i16* %8, align 2
  br label %50

50:                                               ; preds = %49, %44, %41
  %51 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %16, align 8
  %52 = zext i16 %42 to i32
  %53 = call %struct._cms_curve_struct* @cmsBuildTabulatedToneCurve16(%struct._cmsContext_struct* %51, i32 %52, i16* null) #8
  store %struct._cms_curve_struct* %53, %struct._cms_curve_struct** %19, align 8
  %54 = icmp eq %struct._cms_curve_struct* %53, null
  br i1 %54, label %100, label %55

55:                                               ; preds = %50
  %56 = load i16, i16* %8, align 2
  switch i16 %56, label %87 [
    i16 1, label %57
    i16 2, label %78
  ]

57:                                               ; preds = %55
  %58 = load i16, i16* %7, align 2
  %59 = icmp eq i16 %58, 0
  br i1 %59, label %92, label %60

60:                                               ; preds = %57, %65
  %61 = phi i64 [ %74, %65 ], [ 0, %57 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #8
  store i8 -86, i8* %9, align 1
  %62 = call i32 @_cmsReadUInt8Number(%struct._cms_io_handler* %1, i8* nonnull %9) #8
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %60, %163, %200
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #8
  br label %100

65:                                               ; preds = %60
  %66 = load i8, i8* %9, align 1
  %67 = zext i8 %66 to i16
  %68 = shl nuw i16 %67, 8
  %69 = or i16 %68, %67
  %70 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %19, align 8
  %71 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %70, i64 0, i32 6
  %72 = load i16*, i16** %71, align 8
  %73 = getelementptr inbounds i16, i16* %72, i64 %61
  store i16 %69, i16* %73, align 2
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #8
  %74 = add nuw nsw i64 %61, 1
  %75 = load i16, i16* %7, align 2
  %76 = zext i16 %75 to i64
  %77 = icmp ult i64 %74, %76
  br i1 %77, label %60, label %92

78:                                               ; preds = %55
  %79 = load i16, i16* %7, align 2
  %80 = zext i16 %79 to i32
  %81 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %53, i64 0, i32 6
  %82 = load i16*, i16** %81, align 8
  %83 = call i32 @_cmsReadUInt16Array(%struct._cms_io_handler* %1, i32 %80, i16* %82) #8
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %100, label %85

85:                                               ; preds = %78
  %86 = load i16, i16* %7, align 2
  br label %92

87:                                               ; preds = %188, %149, %55
  %88 = phi i16 [ %56, %55 ], [ %150, %149 ], [ %189, %188 ]
  %89 = zext i16 %88 to i32
  %90 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %16, align 8
  %91 = shl nuw nsw i32 %89, 3
  call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %90, i32 8, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.30, i64 0, i64 0), i32 %91) #8
  br label %100

92:                                               ; preds = %65, %85, %57
  %93 = phi i16 [ %86, %85 ], [ 0, %57 ], [ %75, %65 ]
  %94 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %16, align 8
  %95 = zext i16 %93 to i32
  %96 = call %struct._cms_curve_struct* @cmsBuildTabulatedToneCurve16(%struct._cmsContext_struct* %94, i32 %95, i16* null) #8
  %97 = getelementptr inbounds i8, i8* %18, i64 8
  %98 = bitcast i8* %97 to %struct._cms_curve_struct**
  store %struct._cms_curve_struct* %96, %struct._cms_curve_struct** %98, align 8
  %99 = icmp eq %struct._cms_curve_struct* %96, null
  br i1 %99, label %100, label %149

100:                                              ; preds = %50, %78, %92, %151, %180, %190, %32, %87, %64, %23, %35, %38
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %26) #8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %25) #8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %24) #8
  br label %145

101:                                              ; preds = %21
  %102 = bitcast [3 x %struct._cmsVCGTGAMMA]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %102) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %102, i8 -1, i64 72, i1 false)
  %103 = bitcast [10 x double]* %11 to i8*
  %104 = getelementptr inbounds [10 x double], [10 x double]* %11, i64 0, i64 0
  %105 = bitcast [10 x double]* %11 to i64*
  %106 = getelementptr inbounds [10 x double], [10 x double]* %11, i64 0, i64 1
  %107 = getelementptr inbounds [10 x double], [10 x double]* %11, i64 0, i64 2
  %108 = getelementptr inbounds [10 x double], [10 x double]* %11, i64 0, i64 5
  %109 = bitcast double* %108 to i64*
  %110 = getelementptr inbounds [10 x double], [10 x double]* %11, i64 0, i64 6
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %103) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %103, i8 -1, i64 80, i1 false)
  %111 = getelementptr inbounds [3 x %struct._cmsVCGTGAMMA], [3 x %struct._cmsVCGTGAMMA]* %10, i64 0, i64 0, i32 0
  %112 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %1, double* nonnull %111) #8
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %141, label %114

114:                                              ; preds = %101
  %115 = getelementptr inbounds [3 x %struct._cmsVCGTGAMMA], [3 x %struct._cmsVCGTGAMMA]* %10, i64 0, i64 0, i32 1
  %116 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %1, double* %115) #8
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %141, label %118

118:                                              ; preds = %114
  %119 = getelementptr inbounds [3 x %struct._cmsVCGTGAMMA], [3 x %struct._cmsVCGTGAMMA]* %10, i64 0, i64 0, i32 2
  %120 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %1, double* %119) #8
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %141, label %122

122:                                              ; preds = %118
  %123 = bitcast [3 x %struct._cmsVCGTGAMMA]* %10 to i64*
  %124 = load i64, i64* %123, align 16
  store i64 %124, i64* %105, align 16
  %125 = load double, double* %119, align 16
  %126 = load double, double* %115, align 8
  %127 = fsub double %125, %126
  %128 = bitcast i64 %124 to double
  %129 = fdiv double 1.000000e+00, %128
  %130 = call double @pow(double %127, double %129) #8
  store double %130, double* %106, align 8
  %131 = bitcast double* %115 to i64*
  %132 = bitcast double* %107 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %132, i8 0, i64 24, i1 false)
  %133 = load i64, i64* %131, align 8
  store i64 %133, i64* %109, align 8
  store double 0.000000e+00, double* %110, align 16
  %134 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %16, align 8
  %135 = call %struct._cms_curve_struct* @cmsBuildParametricToneCurve(%struct._cmsContext_struct* %134, i32 5, double* nonnull %104) #8
  store %struct._cms_curve_struct* %135, %struct._cms_curve_struct** %19, align 8
  %136 = icmp eq %struct._cms_curve_struct* %135, null
  br i1 %136, label %141, label %137

137:                                              ; preds = %122
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %103) #8
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %103) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %103, i8 -1, i64 80, i1 false)
  %138 = getelementptr inbounds [3 x %struct._cmsVCGTGAMMA], [3 x %struct._cmsVCGTGAMMA]* %10, i64 0, i64 1, i32 0
  %139 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %1, double* %138) #8
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %218

141:                                              ; preds = %255, %251, %247, %243, %226, %222, %218, %137, %122, %101, %114, %118
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %103) #8
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %102) #8
  br label %145

142:                                              ; preds = %21
  %143 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %16, align 8
  call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %143, i32 8, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.31, i64 0, i64 0), i32 %22) #8
  br label %145

144:                                              ; preds = %272, %217
  store i32 1, i32* %2, align 4
  br label %147

145:                                              ; preds = %141, %100, %142
  call void @cmsFreeToneCurveTriple(%struct._cms_curve_struct** nonnull %19) #8
  %146 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %16, align 8
  call void @_cmsFree(%struct._cmsContext_struct* %146, i8* nonnull %18) #8
  br label %147

147:                                              ; preds = %15, %4, %145, %144
  %148 = phi i8* [ null, %145 ], [ %18, %144 ], [ null, %4 ], [ null, %15 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #8
  ret i8* %148

149:                                              ; preds = %92
  %150 = load i16, i16* %8, align 2
  switch i16 %150, label %87 [
    i16 1, label %160
    i16 2, label %151
  ]

151:                                              ; preds = %149
  %152 = load i16, i16* %7, align 2
  %153 = zext i16 %152 to i32
  %154 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %96, i64 0, i32 6
  %155 = load i16*, i16** %154, align 8
  %156 = call i32 @_cmsReadUInt16Array(%struct._cms_io_handler* %1, i32 %153, i16* %155) #8
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %100, label %158

158:                                              ; preds = %151
  %159 = load i16, i16* %7, align 2
  br label %180

160:                                              ; preds = %149
  %161 = load i16, i16* %7, align 2
  %162 = icmp eq i16 %161, 0
  br i1 %162, label %180, label %163

163:                                              ; preds = %160, %167
  %164 = phi i64 [ %176, %167 ], [ 0, %160 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #8
  store i8 -86, i8* %9, align 1
  %165 = call i32 @_cmsReadUInt8Number(%struct._cms_io_handler* %1, i8* nonnull %9) #8
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %64, label %167

167:                                              ; preds = %163
  %168 = load i8, i8* %9, align 1
  %169 = zext i8 %168 to i16
  %170 = shl nuw i16 %169, 8
  %171 = or i16 %170, %169
  %172 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %98, align 8
  %173 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %172, i64 0, i32 6
  %174 = load i16*, i16** %173, align 8
  %175 = getelementptr inbounds i16, i16* %174, i64 %164
  store i16 %171, i16* %175, align 2
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #8
  %176 = add nuw nsw i64 %164, 1
  %177 = load i16, i16* %7, align 2
  %178 = zext i16 %177 to i64
  %179 = icmp ult i64 %176, %178
  br i1 %179, label %163, label %180

180:                                              ; preds = %167, %158, %160
  %181 = phi i16 [ %159, %158 ], [ 0, %160 ], [ %177, %167 ]
  %182 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %16, align 8
  %183 = zext i16 %181 to i32
  %184 = call %struct._cms_curve_struct* @cmsBuildTabulatedToneCurve16(%struct._cmsContext_struct* %182, i32 %183, i16* null) #8
  %185 = getelementptr inbounds i8, i8* %18, i64 16
  %186 = bitcast i8* %185 to %struct._cms_curve_struct**
  store %struct._cms_curve_struct* %184, %struct._cms_curve_struct** %186, align 8
  %187 = icmp eq %struct._cms_curve_struct* %184, null
  br i1 %187, label %100, label %188

188:                                              ; preds = %180
  %189 = load i16, i16* %8, align 2
  switch i16 %189, label %87 [
    i16 1, label %197
    i16 2, label %190
  ]

190:                                              ; preds = %188
  %191 = load i16, i16* %7, align 2
  %192 = zext i16 %191 to i32
  %193 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %184, i64 0, i32 6
  %194 = load i16*, i16** %193, align 8
  %195 = call i32 @_cmsReadUInt16Array(%struct._cms_io_handler* %1, i32 %192, i16* %194) #8
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %100, label %217

197:                                              ; preds = %188
  %198 = load i16, i16* %7, align 2
  %199 = icmp eq i16 %198, 0
  br i1 %199, label %217, label %200

200:                                              ; preds = %197, %204
  %201 = phi i64 [ %213, %204 ], [ 0, %197 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #8
  store i8 -86, i8* %9, align 1
  %202 = call i32 @_cmsReadUInt8Number(%struct._cms_io_handler* %1, i8* nonnull %9) #8
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %64, label %204

204:                                              ; preds = %200
  %205 = load i8, i8* %9, align 1
  %206 = zext i8 %205 to i16
  %207 = shl nuw i16 %206, 8
  %208 = or i16 %207, %206
  %209 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %186, align 8
  %210 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %209, i64 0, i32 6
  %211 = load i16*, i16** %210, align 8
  %212 = getelementptr inbounds i16, i16* %211, i64 %201
  store i16 %208, i16* %212, align 2
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #8
  %213 = add nuw nsw i64 %201, 1
  %214 = load i16, i16* %7, align 2
  %215 = zext i16 %214 to i64
  %216 = icmp ult i64 %213, %215
  br i1 %216, label %200, label %217

217:                                              ; preds = %204, %197, %190
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %26) #8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %25) #8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %24) #8
  br label %144

218:                                              ; preds = %137
  %219 = getelementptr inbounds [3 x %struct._cmsVCGTGAMMA], [3 x %struct._cmsVCGTGAMMA]* %10, i64 0, i64 1, i32 1
  %220 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %1, double* %219) #8
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %141, label %222

222:                                              ; preds = %218
  %223 = getelementptr inbounds [3 x %struct._cmsVCGTGAMMA], [3 x %struct._cmsVCGTGAMMA]* %10, i64 0, i64 1, i32 2
  %224 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %1, double* %223) #8
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %141, label %226

226:                                              ; preds = %222
  %227 = bitcast double* %138 to i64*
  %228 = load i64, i64* %227, align 8
  store i64 %228, i64* %105, align 16
  %229 = load double, double* %223, align 8
  %230 = load double, double* %219, align 8
  %231 = fsub double %229, %230
  %232 = bitcast i64 %228 to double
  %233 = fdiv double 1.000000e+00, %232
  %234 = call double @pow(double %231, double %233) #8
  store double %234, double* %106, align 8
  %235 = bitcast double* %219 to i64*
  %236 = bitcast double* %107 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %236, i8 0, i64 24, i1 false)
  %237 = load i64, i64* %235, align 8
  store i64 %237, i64* %109, align 8
  store double 0.000000e+00, double* %110, align 16
  %238 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %16, align 8
  %239 = call %struct._cms_curve_struct* @cmsBuildParametricToneCurve(%struct._cmsContext_struct* %238, i32 5, double* nonnull %104) #8
  %240 = getelementptr inbounds i8, i8* %18, i64 8
  %241 = bitcast i8* %240 to %struct._cms_curve_struct**
  store %struct._cms_curve_struct* %239, %struct._cms_curve_struct** %241, align 8
  %242 = icmp eq %struct._cms_curve_struct* %239, null
  br i1 %242, label %141, label %243

243:                                              ; preds = %226
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %103) #8
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %103) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %103, i8 -1, i64 80, i1 false)
  %244 = getelementptr inbounds [3 x %struct._cmsVCGTGAMMA], [3 x %struct._cmsVCGTGAMMA]* %10, i64 0, i64 2, i32 0
  %245 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %1, double* %244) #8
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %141, label %247

247:                                              ; preds = %243
  %248 = getelementptr inbounds [3 x %struct._cmsVCGTGAMMA], [3 x %struct._cmsVCGTGAMMA]* %10, i64 0, i64 2, i32 1
  %249 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %1, double* %248) #8
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %141, label %251

251:                                              ; preds = %247
  %252 = getelementptr inbounds [3 x %struct._cmsVCGTGAMMA], [3 x %struct._cmsVCGTGAMMA]* %10, i64 0, i64 2, i32 2
  %253 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %1, double* %252) #8
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %141, label %255

255:                                              ; preds = %251
  %256 = bitcast double* %244 to i64*
  %257 = load i64, i64* %256, align 16
  store i64 %257, i64* %105, align 16
  %258 = load double, double* %252, align 16
  %259 = load double, double* %248, align 8
  %260 = fsub double %258, %259
  %261 = bitcast i64 %257 to double
  %262 = fdiv double 1.000000e+00, %261
  %263 = call double @pow(double %260, double %262) #8
  store double %263, double* %106, align 8
  %264 = bitcast double* %248 to i64*
  %265 = bitcast double* %107 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %265, i8 0, i64 24, i1 false)
  %266 = load i64, i64* %264, align 8
  store i64 %266, i64* %109, align 8
  store double 0.000000e+00, double* %110, align 16
  %267 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %16, align 8
  %268 = call %struct._cms_curve_struct* @cmsBuildParametricToneCurve(%struct._cmsContext_struct* %267, i32 5, double* nonnull %104) #8
  %269 = getelementptr inbounds i8, i8* %18, i64 16
  %270 = bitcast i8* %269 to %struct._cms_curve_struct**
  store %struct._cms_curve_struct* %268, %struct._cms_curve_struct** %270, align 8
  %271 = icmp eq %struct._cms_curve_struct* %268, null
  br i1 %271, label %141, label %272

272:                                              ; preds = %255
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %103) #8
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %102) #8
  br label %144
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @Type_vcgt_Write(%struct._cms_typehandler_struct* nocapture readnone, %struct._cms_io_handler*, i8* nocapture readonly, i32) #0 {
  %5 = bitcast i8* %2 to %struct._cms_curve_struct**
  %6 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %5, align 8
  %7 = tail call i32 @cmsGetToneCurveParametricType(%struct._cms_curve_struct* %6) #8
  %8 = icmp eq i32 %7, 5
  br i1 %8, label %9, label %60

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %2, i64 8
  %11 = bitcast i8* %10 to %struct._cms_curve_struct**
  %12 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %11, align 8
  %13 = tail call i32 @cmsGetToneCurveParametricType(%struct._cms_curve_struct* %12) #8
  %14 = icmp eq i32 %13, 5
  br i1 %14, label %15, label %60

15:                                               ; preds = %9
  %16 = getelementptr inbounds i8, i8* %2, i64 16
  %17 = bitcast i8* %16 to %struct._cms_curve_struct**
  %18 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %17, align 8
  %19 = tail call i32 @cmsGetToneCurveParametricType(%struct._cms_curve_struct* %18) #8
  %20 = icmp eq i32 %19, 5
  br i1 %20, label %21, label %60

21:                                               ; preds = %15
  %22 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 1) #8
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %101, label %24

24:                                               ; preds = %21
  %25 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %5, align 8
  %26 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %25, i64 0, i32 2
  %27 = load %struct.cmsCurveSegment*, %struct.cmsCurveSegment** %26, align 8
  %28 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %27, i64 0, i32 3, i64 0
  %29 = load double, double* %28, align 8
  %30 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %27, i64 0, i32 3, i64 5
  %31 = load double, double* %30, align 8
  %32 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %27, i64 0, i32 3, i64 1
  %33 = load double, double* %32, align 8
  %34 = tail call double @pow(double %33, double %29) #8
  %35 = fadd double %31, %34
  %36 = tail call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %1, double %29) #8
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %101, label %54

38:                                               ; preds = %57
  %39 = getelementptr inbounds i8, i8* %2, i64 8
  %40 = bitcast i8* %39 to %struct._cms_curve_struct**
  %41 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %40, align 8
  %42 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %41, i64 0, i32 2
  %43 = load %struct.cmsCurveSegment*, %struct.cmsCurveSegment** %42, align 8
  %44 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %43, i64 0, i32 3, i64 0
  %45 = load double, double* %44, align 8
  %46 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %43, i64 0, i32 3, i64 5
  %47 = load double, double* %46, align 8
  %48 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %43, i64 0, i32 3, i64 1
  %49 = load double, double* %48, align 8
  %50 = tail call double @pow(double %49, double %45) #8
  %51 = fadd double %47, %50
  %52 = tail call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %1, double %45) #8
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %101, label %103

54:                                               ; preds = %24
  %55 = tail call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %1, double %31) #8
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %101, label %57

57:                                               ; preds = %54
  %58 = tail call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %1, double %35) #8
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %101, label %38

60:                                               ; preds = %15, %9, %4
  %61 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 0) #8
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %101, label %63

63:                                               ; preds = %60
  %64 = tail call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %1, i16 zeroext 3) #8
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %101, label %66

66:                                               ; preds = %63
  %67 = tail call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %1, i16 zeroext 256) #8
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %101, label %69

69:                                               ; preds = %66
  %70 = tail call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %1, i16 zeroext 2) #8
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %101, label %74

72:                                               ; preds = %93
  %73 = icmp eq i32 %97, 256
  br i1 %73, label %98, label %74

74:                                               ; preds = %69, %72
  %75 = phi i32 [ %97, %72 ], [ 0, %69 ]
  %76 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %5, align 8
  %77 = uitofp i32 %75 to double
  %78 = fdiv double %77, 2.550000e+02
  %79 = fptrunc double %78 to float
  %80 = tail call float @cmsEvalToneCurveFloat(%struct._cms_curve_struct* %76, float %79) #8
  %81 = fpext float %80 to double
  %82 = fmul double %81, 6.553500e+04
  %83 = fadd double %82, 5.000000e-01
  %84 = fcmp ugt double %83, 0.000000e+00
  br i1 %84, label %85, label %93

85:                                               ; preds = %74
  %86 = fcmp ult double %83, 6.553500e+04
  br i1 %86, label %87, label %93

87:                                               ; preds = %85
  %88 = fadd double %83, -3.276700e+04
  %89 = tail call double @llvm.floor.f64(double %88) #8
  %90 = fptosi double %89 to i32
  %91 = trunc i32 %90 to i16
  %92 = add i16 %91, 32767
  br label %93

93:                                               ; preds = %74, %85, %87
  %94 = phi i16 [ %92, %87 ], [ 0, %74 ], [ -1, %85 ]
  %95 = tail call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %1, i16 zeroext %94) #8
  %96 = icmp eq i32 %95, 0
  %97 = add nuw nsw i32 %75, 1
  br i1 %96, label %101, label %72

98:                                               ; preds = %72
  %99 = getelementptr inbounds i8, i8* %2, i64 8
  %100 = bitcast i8* %99 to %struct._cms_curve_struct**
  br label %132

101:                                              ; preds = %93, %151, %185, %180, %57, %54, %24, %38, %103, %106, %109, %125, %69, %66, %63, %60, %21
  %102 = phi i32 [ 0, %21 ], [ 0, %60 ], [ 0, %63 ], [ 0, %66 ], [ 0, %69 ], [ 0, %57 ], [ 0, %24 ], [ 0, %54 ], [ 0, %38 ], [ 0, %103 ], [ 0, %106 ], [ 0, %109 ], [ 0, %125 ], [ 1, %185 ], [ 0, %180 ], [ 0, %151 ], [ 0, %93 ]
  ret i32 %102

103:                                              ; preds = %38
  %104 = tail call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %1, double %47) #8
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %101, label %106

106:                                              ; preds = %103
  %107 = tail call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %1, double %51) #8
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %101, label %109

109:                                              ; preds = %106
  %110 = getelementptr inbounds i8, i8* %2, i64 16
  %111 = bitcast i8* %110 to %struct._cms_curve_struct**
  %112 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %111, align 8
  %113 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %112, i64 0, i32 2
  %114 = load %struct.cmsCurveSegment*, %struct.cmsCurveSegment** %113, align 8
  %115 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %114, i64 0, i32 3, i64 0
  %116 = load double, double* %115, align 8
  %117 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %114, i64 0, i32 3, i64 5
  %118 = load double, double* %117, align 8
  %119 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %114, i64 0, i32 3, i64 1
  %120 = load double, double* %119, align 8
  %121 = tail call double @pow(double %120, double %116) #8
  %122 = fadd double %118, %121
  %123 = tail call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %1, double %116) #8
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %101, label %125

125:                                              ; preds = %109
  %126 = tail call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %1, double %118) #8
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %101, label %128

128:                                              ; preds = %125
  %129 = tail call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %1, double %122) #8
  %130 = icmp ne i32 %129, 0
  %131 = zext i1 %130 to i32
  ret i32 %131

132:                                              ; preds = %156, %98
  %133 = phi i32 [ 0, %98 ], [ %155, %156 ]
  %134 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %100, align 8
  %135 = uitofp i32 %133 to double
  %136 = fdiv double %135, 2.550000e+02
  %137 = fptrunc double %136 to float
  %138 = tail call float @cmsEvalToneCurveFloat(%struct._cms_curve_struct* %134, float %137) #8
  %139 = fpext float %138 to double
  %140 = fmul double %139, 6.553500e+04
  %141 = fadd double %140, 5.000000e-01
  %142 = fcmp ugt double %141, 0.000000e+00
  br i1 %142, label %143, label %151

143:                                              ; preds = %132
  %144 = fcmp ult double %141, 6.553500e+04
  br i1 %144, label %145, label %151

145:                                              ; preds = %143
  %146 = fadd double %141, -3.276700e+04
  %147 = tail call double @llvm.floor.f64(double %146) #8
  %148 = fptosi double %147 to i32
  %149 = trunc i32 %148 to i16
  %150 = add i16 %149, 32767
  br label %151

151:                                              ; preds = %145, %143, %132
  %152 = phi i16 [ %150, %145 ], [ 0, %132 ], [ -1, %143 ]
  %153 = tail call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %1, i16 zeroext %152) #8
  %154 = icmp eq i32 %153, 0
  %155 = add nuw nsw i32 %133, 1
  br i1 %154, label %101, label %156

156:                                              ; preds = %151
  %157 = icmp eq i32 %155, 256
  br i1 %157, label %158, label %132

158:                                              ; preds = %156
  %159 = getelementptr inbounds i8, i8* %2, i64 16
  %160 = bitcast i8* %159 to %struct._cms_curve_struct**
  br label %161

161:                                              ; preds = %185, %158
  %162 = phi i32 [ 0, %158 ], [ %184, %185 ]
  %163 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %160, align 8
  %164 = uitofp i32 %162 to double
  %165 = fdiv double %164, 2.550000e+02
  %166 = fptrunc double %165 to float
  %167 = tail call float @cmsEvalToneCurveFloat(%struct._cms_curve_struct* %163, float %166) #8
  %168 = fpext float %167 to double
  %169 = fmul double %168, 6.553500e+04
  %170 = fadd double %169, 5.000000e-01
  %171 = fcmp ugt double %170, 0.000000e+00
  br i1 %171, label %172, label %180

172:                                              ; preds = %161
  %173 = fcmp ult double %170, 6.553500e+04
  br i1 %173, label %174, label %180

174:                                              ; preds = %172
  %175 = fadd double %170, -3.276700e+04
  %176 = tail call double @llvm.floor.f64(double %175) #8
  %177 = fptosi double %176 to i32
  %178 = trunc i32 %177 to i16
  %179 = add i16 %178, 32767
  br label %180

180:                                              ; preds = %174, %172, %161
  %181 = phi i16 [ %179, %174 ], [ 0, %161 ], [ -1, %172 ]
  %182 = tail call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %1, i16 zeroext %181) #8
  %183 = icmp eq i32 %182, 0
  %184 = add nuw nsw i32 %162, 1
  br i1 %183, label %101, label %185

185:                                              ; preds = %180
  %186 = icmp eq i32 %184, 256
  br i1 %186, label %101, label %161
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_vcgt_Dup(%struct._cms_typehandler_struct* nocapture readonly, i8* nocapture readonly, i32) #0 {
  %4 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %5 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %4, align 8
  %6 = tail call i8* @_cmsCalloc(%struct._cmsContext_struct* %5, i32 3, i32 8) #8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %3
  %9 = bitcast i8* %6 to %struct._cms_curve_struct**
  %10 = bitcast i8* %1 to %struct._cms_curve_struct**
  %11 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %10, align 8
  %12 = tail call %struct._cms_curve_struct* @cmsDupToneCurve(%struct._cms_curve_struct* %11) #8
  store %struct._cms_curve_struct* %12, %struct._cms_curve_struct** %9, align 8
  %13 = getelementptr inbounds i8, i8* %1, i64 8
  %14 = bitcast i8* %13 to %struct._cms_curve_struct**
  %15 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %14, align 8
  %16 = tail call %struct._cms_curve_struct* @cmsDupToneCurve(%struct._cms_curve_struct* %15) #8
  %17 = getelementptr inbounds i8, i8* %6, i64 8
  %18 = bitcast i8* %17 to %struct._cms_curve_struct**
  store %struct._cms_curve_struct* %16, %struct._cms_curve_struct** %18, align 8
  %19 = getelementptr inbounds i8, i8* %1, i64 16
  %20 = bitcast i8* %19 to %struct._cms_curve_struct**
  %21 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %20, align 8
  %22 = tail call %struct._cms_curve_struct* @cmsDupToneCurve(%struct._cms_curve_struct* %21) #8
  %23 = getelementptr inbounds i8, i8* %6, i64 16
  %24 = bitcast i8* %23 to %struct._cms_curve_struct**
  store %struct._cms_curve_struct* %22, %struct._cms_curve_struct** %24, align 8
  br label %25

25:                                               ; preds = %3, %8
  ret i8* %6
}

; Function Attrs: nounwind ssp uwtable
define internal void @Type_vcgt_Free(%struct._cms_typehandler_struct* nocapture readonly, i8*) #0 {
  %3 = bitcast i8* %1 to %struct._cms_curve_struct**
  tail call void @cmsFreeToneCurveTriple(%struct._cms_curve_struct** %3) #8
  %4 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %5 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %4, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %5, i8* %1) #8
  ret void
}

declare i8* @_cmsMallocZero(%struct._cmsContext_struct*, i32) local_unnamed_addr #1

declare i32 @_cmsReadUInt16Number(%struct._cms_io_handler*, i16*) local_unnamed_addr #1

declare i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler*, double*) local_unnamed_addr #1

declare void @_cmsFree(%struct._cmsContext_struct*, i8*) local_unnamed_addr #1

declare i32 @_cmsWriteUInt16Number(%struct._cms_io_handler*, i16 zeroext) local_unnamed_addr #1

declare i32 @_cmsWriteUInt32Number(%struct._cms_io_handler*, i32) local_unnamed_addr #1

declare i32 @_cmsDoubleTo15Fixed16(double) local_unnamed_addr #1

declare i8* @_cmsDupMem(%struct._cmsContext_struct*, i8*, i32) local_unnamed_addr #1

declare i32 @_cmsReadUInt32Number(%struct._cms_io_handler*, i32*) local_unnamed_addr #1

declare i8* @_cmsCalloc(%struct._cmsContext_struct*, i32, i32) local_unnamed_addr #1

declare i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler*, double) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare double @llvm.floor.f64(double) #3

declare %struct._cms_MLU_struct* @cmsMLUalloc(%struct._cmsContext_struct*, i32) local_unnamed_addr #1

declare i8* @_cmsMalloc(%struct._cmsContext_struct*, i32) local_unnamed_addr #1

declare i32 @cmsMLUsetASCII(%struct._cms_MLU_struct*, i8*, i8*, i8*) local_unnamed_addr #1

declare void @cmsMLUfree(%struct._cms_MLU_struct*) local_unnamed_addr #1

declare i32 @cmsMLUgetASCII(%struct._cms_MLU_struct*, i8*, i8*, i8*, i32) local_unnamed_addr #1

declare %struct._cms_MLU_struct* @cmsMLUdup(%struct._cms_MLU_struct*) local_unnamed_addr #1

declare i32 @_cmsReadUInt8Number(%struct._cms_io_handler*, i8*) local_unnamed_addr #1

declare i32 @cmsMLUgetWide(%struct._cms_MLU_struct*, i8*, i8*, i32*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

declare i32 @_cmsWriteUInt8Number(%struct._cms_io_handler*, i8 zeroext) local_unnamed_addr #1

declare %struct._cms_curve_struct* @cmsBuildParametricToneCurve(%struct._cmsContext_struct*, i32, double*) local_unnamed_addr #1

declare double @_cms8Fixed8toDouble(i16 zeroext) local_unnamed_addr #1

declare %struct._cms_curve_struct* @cmsBuildTabulatedToneCurve16(%struct._cmsContext_struct*, i32, i16*) local_unnamed_addr #1

declare i32 @_cmsReadUInt16Array(%struct._cms_io_handler*, i32, i16*) local_unnamed_addr #1

declare void @cmsFreeToneCurve(%struct._cms_curve_struct*) local_unnamed_addr #1

declare zeroext i16 @_cmsDoubleTo8Fixed8(double) local_unnamed_addr #1

declare i32 @_cmsWriteUInt16Array(%struct._cms_io_handler*, i32, i16*) local_unnamed_addr #1

declare %struct._cms_curve_struct* @cmsDupToneCurve(%struct._cms_curve_struct*) local_unnamed_addr #1

declare void @cmsSignalError(%struct._cmsContext_struct*, i32, i8*, ...) local_unnamed_addr #1

declare void @_cmsDecodeDateTimeNumber(%struct.cmsDateTimeNumber*, %struct.tm*) local_unnamed_addr #1

declare void @_cmsEncodeDateTimeNumber(%struct.cmsDateTimeNumber*, %struct.tm*) local_unnamed_addr #1

declare %struct._cmsPipeline_struct* @cmsPipelineAlloc(%struct._cmsContext_struct*, i32, i32) local_unnamed_addr #1

declare i32 @_cmsMAT3isIdentity(%struct.cmsMAT3*) local_unnamed_addr #1

declare i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct*, i32, %struct._cmsStage_struct*) local_unnamed_addr #1

declare %struct._cmsStage_struct* @cmsStageAllocMatrix(%struct._cmsContext_struct*, i32, i32, double*, double*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @Read8bitTables(%struct._cmsContext_struct*, %struct._cms_io_handler*, %struct._cmsPipeline_struct*, i32) unnamed_addr #0 {
  %5 = alloca [16 x %struct._cms_curve_struct*], align 16
  %6 = bitcast [16 x %struct._cms_curve_struct*]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %6) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 128, i1 false)
  %7 = add i32 %3, -1
  %8 = icmp ugt i32 %7, 15
  br i1 %8, label %86, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds [16 x %struct._cms_curve_struct*], [16 x %struct._cms_curve_struct*]* %5, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 0, i64 128, i1 false)
  %11 = tail call i8* @_cmsMalloc(%struct._cmsContext_struct* %0, i32 256) #8
  %12 = icmp eq i8* %11, null
  br i1 %12, label %86, label %13

13:                                               ; preds = %9
  %14 = zext i32 %3 to i64
  br label %20

15:                                               ; preds = %20
  %16 = icmp eq i64 %25, %14
  br i1 %16, label %17, label %20

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %1, i64 0, i32 5
  %19 = zext i32 %3 to i64
  br label %26

20:                                               ; preds = %15, %13
  %21 = phi i64 [ 0, %13 ], [ %25, %15 ]
  %22 = tail call %struct._cms_curve_struct* @cmsBuildTabulatedToneCurve16(%struct._cmsContext_struct* %0, i32 256, i16* null) #8
  %23 = getelementptr inbounds [16 x %struct._cms_curve_struct*], [16 x %struct._cms_curve_struct*]* %5, i64 0, i64 %21
  store %struct._cms_curve_struct* %22, %struct._cms_curve_struct** %23, align 8
  %24 = icmp eq %struct._cms_curve_struct* %22, null
  %25 = add nuw nsw i64 %21, 1
  br i1 %24, label %71, label %15

26:                                               ; preds = %56, %17
  %27 = phi i64 [ 0, %17 ], [ %57, %56 ]
  %28 = load i32 (%struct._cms_io_handler*, i8*, i32, i32)*, i32 (%struct._cms_io_handler*, i8*, i32, i32)** %18, align 8
  %29 = tail call i32 %28(%struct._cms_io_handler* %1, i8* nonnull %11, i32 256, i32 1) #8
  %30 = icmp eq i32 %29, 1
  br i1 %30, label %31, label %71

31:                                               ; preds = %26
  %32 = getelementptr inbounds [16 x %struct._cms_curve_struct*], [16 x %struct._cms_curve_struct*]* %5, i64 0, i64 %27
  br label %33

33:                                               ; preds = %33, %31
  %34 = phi i64 [ 0, %31 ], [ %54, %33 ]
  %35 = getelementptr inbounds i8, i8* %11, i64 %34
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i16
  %38 = shl nuw i16 %37, 8
  %39 = or i16 %38, %37
  %40 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %32, align 8
  %41 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %40, i64 0, i32 6
  %42 = load i16*, i16** %41, align 8
  %43 = getelementptr inbounds i16, i16* %42, i64 %34
  store i16 %39, i16* %43, align 2
  %44 = or i64 %34, 1
  %45 = getelementptr inbounds i8, i8* %11, i64 %44
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i16
  %48 = shl nuw i16 %47, 8
  %49 = or i16 %48, %47
  %50 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %32, align 8
  %51 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %50, i64 0, i32 6
  %52 = load i16*, i16** %51, align 8
  %53 = getelementptr inbounds i16, i16* %52, i64 %44
  store i16 %49, i16* %53, align 2
  %54 = add nuw nsw i64 %34, 2
  %55 = icmp eq i64 %54, 256
  br i1 %55, label %56, label %33

56:                                               ; preds = %33
  %57 = add nuw nsw i64 %27, 1
  %58 = icmp eq i64 %57, %19
  br i1 %58, label %59, label %26

59:                                               ; preds = %56
  tail call void @_cmsFree(%struct._cmsContext_struct* %0, i8* nonnull %11) #8
  %60 = call %struct._cmsStage_struct* @cmsStageAllocToneCurves(%struct._cmsContext_struct* %0, i32 %3, %struct._cms_curve_struct** nonnull %10) #8
  %61 = call i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct* %2, i32 1, %struct._cmsStage_struct* %60) #8
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %71, label %63

63:                                               ; preds = %59
  %64 = zext i32 %3 to i64
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %69, %65 ]
  %67 = getelementptr inbounds [16 x %struct._cms_curve_struct*], [16 x %struct._cms_curve_struct*]* %5, i64 0, i64 %66
  %68 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %67, align 8
  call void @cmsFreeToneCurve(%struct._cms_curve_struct* %68) #8
  %69 = add nuw nsw i64 %66, 1
  %70 = icmp eq i64 %69, %64
  br i1 %70, label %86, label %65

71:                                               ; preds = %20, %26, %59
  %72 = phi i8* [ null, %59 ], [ %11, %26 ], [ %11, %20 ]
  %73 = zext i32 %3 to i64
  br label %74

74:                                               ; preds = %80, %71
  %75 = phi i64 [ 0, %71 ], [ %81, %80 ]
  %76 = getelementptr inbounds [16 x %struct._cms_curve_struct*], [16 x %struct._cms_curve_struct*]* %5, i64 0, i64 %75
  %77 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %76, align 8
  %78 = icmp eq %struct._cms_curve_struct* %77, null
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  call void @cmsFreeToneCurve(%struct._cms_curve_struct* nonnull %77) #8
  br label %80

80:                                               ; preds = %74, %79
  %81 = add nuw nsw i64 %75, 1
  %82 = icmp eq i64 %81, %73
  br i1 %82, label %83, label %74

83:                                               ; preds = %80
  %84 = icmp eq i8* %72, null
  br i1 %84, label %86, label %85

85:                                               ; preds = %83
  call void @_cmsFree(%struct._cmsContext_struct* %0, i8* nonnull %72) #8
  br label %86

86:                                               ; preds = %65, %85, %83, %9, %4
  %87 = phi i32 [ 0, %4 ], [ 0, %9 ], [ 0, %83 ], [ 0, %85 ], [ 1, %65 ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %6) #8
  ret i32 %87
}

declare %struct._cmsStage_struct* @cmsStageAllocCLut16bit(%struct._cmsContext_struct*, i32, i32, i32, i16*) local_unnamed_addr #1

declare void @cmsPipelineFree(%struct._cmsPipeline_struct*) local_unnamed_addr #1

declare %struct._cmsStage_struct* @cmsStageAllocToneCurves(%struct._cmsContext_struct*, i32, %struct._cms_curve_struct**) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @Write8bitTables(%struct._cmsContext_struct*, %struct._cms_io_handler*, i32, %struct._cmsStageToneCurvesData* readonly) unnamed_addr #0 {
  %5 = icmp eq i32 %2, 0
  br i1 %5, label %69, label %6

6:                                                ; preds = %4
  %7 = icmp eq %struct._cmsStageToneCurvesData* %3, null
  %8 = getelementptr inbounds %struct._cmsStageToneCurvesData, %struct._cmsStageToneCurvesData* %3, i64 0, i32 1
  %9 = zext i32 %2 to i64
  br label %10

10:                                               ; preds = %66, %6
  %11 = phi i64 [ 0, %6 ], [ %67, %66 ]
  br i1 %7, label %66, label %12

12:                                               ; preds = %10
  %13 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %8, align 8
  %14 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %13, i64 %11
  %15 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %14, align 8
  %16 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %15, i64 0, i32 5
  %17 = load i32, i32* %16, align 8
  switch i32 %17, label %46 [
    i32 2, label %29
    i32 256, label %18
  ]

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %15, i64 0, i32 6
  %20 = load i16*, i16** %19, align 8
  %21 = load i16, i16* %20, align 2
  %22 = zext i16 %21 to i32
  %23 = mul nuw i32 %22, 65281
  %24 = add nuw i32 %23, 8388608
  %25 = lshr i32 %24, 24
  %26 = trunc i32 %25 to i8
  %27 = tail call i32 @_cmsWriteUInt8Number(%struct._cms_io_handler* %1, i8 zeroext %26) #8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %69, label %47

29:                                               ; preds = %12
  %30 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %15, i64 0, i32 6
  %31 = load i16*, i16** %30, align 8
  %32 = load i16, i16* %31, align 2
  %33 = icmp eq i16 %32, 0
  br i1 %33, label %34, label %46

34:                                               ; preds = %29
  %35 = getelementptr inbounds i16, i16* %31, i64 1
  %36 = load i16, i16* %35, align 2
  %37 = icmp eq i16 %36, -1
  br i1 %37, label %40, label %46

38:                                               ; preds = %40
  %39 = icmp eq i32 %45, 256
  br i1 %39, label %66, label %40

40:                                               ; preds = %34, %38
  %41 = phi i32 [ %45, %38 ], [ 0, %34 ]
  %42 = trunc i32 %41 to i8
  %43 = tail call i32 @_cmsWriteUInt8Number(%struct._cms_io_handler* %1, i8 zeroext %42) #8
  %44 = icmp eq i32 %43, 0
  %45 = add nuw nsw i32 %41, 1
  br i1 %44, label %69, label %38

46:                                               ; preds = %12, %29, %34
  tail call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %0, i32 2, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.7, i64 0, i64 0)) #8
  br label %69

47:                                               ; preds = %18, %50
  %48 = phi i64 [ %65, %50 ], [ 1, %18 ]
  %49 = icmp eq i64 %48, 256
  br i1 %49, label %66, label %50

50:                                               ; preds = %47
  %51 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %8, align 8
  %52 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %51, i64 %11
  %53 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %52, align 8
  %54 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %53, i64 0, i32 6
  %55 = load i16*, i16** %54, align 8
  %56 = getelementptr inbounds i16, i16* %55, i64 %48
  %57 = load i16, i16* %56, align 2
  %58 = zext i16 %57 to i32
  %59 = mul nuw i32 %58, 65281
  %60 = add nuw i32 %59, 8388608
  %61 = lshr i32 %60, 24
  %62 = trunc i32 %61 to i8
  %63 = tail call i32 @_cmsWriteUInt8Number(%struct._cms_io_handler* %1, i8 zeroext %62) #8
  %64 = icmp eq i32 %63, 0
  %65 = add nuw nsw i64 %48, 1
  br i1 %64, label %69, label %47

66:                                               ; preds = %47, %38, %10
  %67 = add nuw nsw i64 %11, 1
  %68 = icmp eq i64 %67, %9
  br i1 %68, label %69, label %10

69:                                               ; preds = %66, %18, %50, %40, %4, %46
  %70 = phi i32 [ 0, %46 ], [ 1, %4 ], [ 0, %40 ], [ 0, %50 ], [ 1, %66 ], [ 0, %18 ]
  ret i32 %70
}

declare %struct._cmsPipeline_struct* @cmsPipelineDup(%struct._cmsPipeline_struct*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @Read16bitTables(%struct._cmsContext_struct*, %struct._cms_io_handler*, %struct._cmsPipeline_struct*, i32, i32) unnamed_addr #0 {
  %6 = alloca [16 x %struct._cms_curve_struct*], align 16
  %7 = bitcast [16 x %struct._cms_curve_struct*]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %7) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 128, i1 false)
  switch i32 %4, label %9 [
    i32 0, label %54
    i32 1, label %8
  ]

8:                                                ; preds = %5
  br label %54

9:                                                ; preds = %5
  %10 = icmp ugt i32 %3, 16
  br i1 %10, label %54, label %11

11:                                               ; preds = %9
  %12 = getelementptr inbounds [16 x %struct._cms_curve_struct*], [16 x %struct._cms_curve_struct*]* %6, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 0, i64 128, i1 false)
  %13 = icmp eq i32 %3, 0
  br i1 %13, label %29, label %14

14:                                               ; preds = %11
  %15 = zext i32 %3 to i64
  br label %18

16:                                               ; preds = %23
  %17 = icmp eq i64 %28, %15
  br i1 %17, label %29, label %18

18:                                               ; preds = %16, %14
  %19 = phi i64 [ 0, %14 ], [ %28, %16 ]
  %20 = tail call %struct._cms_curve_struct* @cmsBuildTabulatedToneCurve16(%struct._cmsContext_struct* %0, i32 %4, i16* null) #8
  %21 = getelementptr inbounds [16 x %struct._cms_curve_struct*], [16 x %struct._cms_curve_struct*]* %6, i64 0, i64 %19
  store %struct._cms_curve_struct* %20, %struct._cms_curve_struct** %21, align 8
  %22 = icmp eq %struct._cms_curve_struct* %20, null
  br i1 %22, label %42, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %20, i64 0, i32 6
  %25 = load i16*, i16** %24, align 8
  %26 = tail call i32 @_cmsReadUInt16Array(%struct._cms_io_handler* %1, i32 %4, i16* %25) #8
  %27 = icmp eq i32 %26, 0
  %28 = add nuw nsw i64 %19, 1
  br i1 %27, label %42, label %16

29:                                               ; preds = %16, %11
  %30 = call %struct._cmsStage_struct* @cmsStageAllocToneCurves(%struct._cmsContext_struct* %0, i32 %3, %struct._cms_curve_struct** nonnull %12) #8
  %31 = call i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct* %2, i32 1, %struct._cmsStage_struct* %30) #8
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %42, label %33

33:                                               ; preds = %29
  br i1 %13, label %54, label %34

34:                                               ; preds = %33
  %35 = zext i32 %3 to i64
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ 0, %34 ], [ %40, %36 ]
  %38 = getelementptr inbounds [16 x %struct._cms_curve_struct*], [16 x %struct._cms_curve_struct*]* %6, i64 0, i64 %37
  %39 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %38, align 8
  call void @cmsFreeToneCurve(%struct._cms_curve_struct* %39) #8
  %40 = add nuw nsw i64 %37, 1
  %41 = icmp eq i64 %40, %35
  br i1 %41, label %54, label %36

42:                                               ; preds = %23, %18, %29
  br i1 %13, label %54, label %43

43:                                               ; preds = %42
  %44 = zext i32 %3 to i64
  br label %45

45:                                               ; preds = %51, %43
  %46 = phi i64 [ 0, %43 ], [ %52, %51 ]
  %47 = getelementptr inbounds [16 x %struct._cms_curve_struct*], [16 x %struct._cms_curve_struct*]* %6, i64 0, i64 %46
  %48 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %47, align 8
  %49 = icmp eq %struct._cms_curve_struct* %48, null
  br i1 %49, label %51, label %50

50:                                               ; preds = %45
  call void @cmsFreeToneCurve(%struct._cms_curve_struct* nonnull %48) #8
  br label %51

51:                                               ; preds = %45, %50
  %52 = add nuw nsw i64 %46, 1
  %53 = icmp eq i64 %52, %44
  br i1 %53, label %54, label %45

54:                                               ; preds = %36, %51, %42, %33, %9, %5, %8
  %55 = phi i32 [ 0, %8 ], [ 1, %5 ], [ 0, %9 ], [ 0, %42 ], [ 1, %33 ], [ 0, %51 ], [ 1, %36 ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %7) #8
  ret i32 %55
}

declare i32 @cmsPipelineInputChannels(%struct._cmsPipeline_struct*) local_unnamed_addr #1

declare i32 @cmsPipelineOutputChannels(%struct._cmsPipeline_struct*) local_unnamed_addr #1

declare %struct._cms_NAMEDCOLORLIST_struct* @cmsAllocNamedColorList(%struct._cmsContext_struct*, i32, i32, i8*, i8*) local_unnamed_addr #1

declare i32 @cmsAppendNamedColor(%struct._cms_NAMEDCOLORLIST_struct*, i8*, i16*, i16*) local_unnamed_addr #1

declare void @cmsFreeNamedColorList(%struct._cms_NAMEDCOLORLIST_struct*) local_unnamed_addr #1

declare i32 @cmsNamedColorCount(%struct._cms_NAMEDCOLORLIST_struct*) local_unnamed_addr #1

declare i32 @cmsNamedColorInfo(%struct._cms_NAMEDCOLORLIST_struct*, i32, i8*, i8*, i8*, i16*, i16*) local_unnamed_addr #1

declare %struct._cms_NAMEDCOLORLIST_struct* @cmsDupNamedColorList(%struct._cms_NAMEDCOLORLIST_struct*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare i8* @strncpy(i8* returned, i8* nocapture readonly, i64) local_unnamed_addr #5

declare %struct.cmsSEQ* @cmsAllocProfileSequenceDescription(%struct._cmsContext_struct*, i32) local_unnamed_addr #1

declare i32 @_cmsReadUInt64Number(%struct._cms_io_handler*, i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @ReadEmbeddedText(%struct._cms_typehandler_struct* nocapture readonly, %struct._cms_io_handler*, %struct._cms_MLU_struct** nocapture, i32) unnamed_addr #0 {
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #8
  store i32 -1431655766, i32* %5, align 4
  %7 = tail call i32 @_cmsReadTypeBase(%struct._cms_io_handler* %1) #8
  switch i32 %7, label %31 [
    i32 1952807028, label %8
    i32 1684370275, label %14
    i32 1835824483, label %20
  ]

8:                                                ; preds = %4
  %9 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %2, align 8
  %10 = icmp eq %struct._cms_MLU_struct* %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %8
  tail call void @cmsMLUfree(%struct._cms_MLU_struct* nonnull %9) #8
  br label %12

12:                                               ; preds = %8, %11
  %13 = call i8* @Type_Text_Read(%struct._cms_typehandler_struct* %0, %struct._cms_io_handler* %1, i32* nonnull %5, i32 %3)
  br label %26

14:                                               ; preds = %4
  %15 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %2, align 8
  %16 = icmp eq %struct._cms_MLU_struct* %15, null
  br i1 %16, label %18, label %17

17:                                               ; preds = %14
  tail call void @cmsMLUfree(%struct._cms_MLU_struct* nonnull %15) #8
  br label %18

18:                                               ; preds = %14, %17
  %19 = call i8* @Type_Text_Description_Read(%struct._cms_typehandler_struct* %0, %struct._cms_io_handler* %1, i32* nonnull %5, i32 %3)
  br label %26

20:                                               ; preds = %4
  %21 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %2, align 8
  %22 = icmp eq %struct._cms_MLU_struct* %21, null
  br i1 %22, label %24, label %23

23:                                               ; preds = %20
  tail call void @cmsMLUfree(%struct._cms_MLU_struct* nonnull %21) #8
  br label %24

24:                                               ; preds = %20, %23
  %25 = call i8* @Type_MLU_Read(%struct._cms_typehandler_struct* %0, %struct._cms_io_handler* %1, i32* nonnull %5, i32 %3)
  br label %26

26:                                               ; preds = %12, %18, %24
  %27 = phi i8* [ %25, %24 ], [ %19, %18 ], [ %13, %12 ]
  %28 = bitcast %struct._cms_MLU_struct** %2 to i8**
  store i8* %27, i8** %28, align 8
  %29 = icmp ne i8* %27, null
  %30 = zext i1 %29 to i32
  br label %31

31:                                               ; preds = %26, %4
  %32 = phi i32 [ 0, %4 ], [ %30, %26 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #8
  ret i32 %32
}

declare void @cmsFreeProfileSequenceDescription(%struct.cmsSEQ*) local_unnamed_addr #1

declare i32 @_cmsReadTypeBase(%struct._cms_io_handler*) local_unnamed_addr #1

declare i32 @_cmsWriteUInt64Number(%struct._cms_io_handler*, i64*) local_unnamed_addr #1

declare i32 @_cmsWriteTypeBase(%struct._cms_io_handler*, i32) local_unnamed_addr #1

declare %struct.cmsSEQ* @cmsDupProfileSequenceDescription(%struct.cmsSEQ*) local_unnamed_addr #1

declare i32 @_cmsReadXYZNumber(%struct._cms_io_handler*, %struct.cmsCIEXYZ*) local_unnamed_addr #1

declare i32 @_cmsWriteXYZNumber(%struct._cms_io_handler*, %struct.cmsCIEXYZ*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc %struct._cmsStage_struct* @ReadSetOfCurves(%struct._cms_typehandler_struct* nocapture readonly, %struct._cms_io_handler*, i32, i32) unnamed_addr #0 {
  %5 = alloca i32, align 4
  %6 = alloca [5 x i8], align 1
  %7 = alloca [16 x %struct._cms_curve_struct*], align 16
  %8 = bitcast [16 x %struct._cms_curve_struct*]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %8) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 128, i1 false)
  %9 = icmp ugt i32 %3, 16
  br i1 %9, label %61, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %1, i64 0, i32 6
  %12 = load i32 (%struct._cms_io_handler*, i32)*, i32 (%struct._cms_io_handler*, i32)** %11, align 8
  %13 = tail call i32 %12(%struct._cms_io_handler* %1, i32 %2) #8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %61, label %15

15:                                               ; preds = %10
  %16 = icmp eq i32 %3, 0
  br i1 %16, label %46, label %17

17:                                               ; preds = %15
  %18 = zext i32 %3 to i64
  %19 = shl nuw nsw i64 %18, 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 0, i64 %19, i1 false)
  %20 = bitcast i32* %5 to i8*
  %21 = zext i32 %3 to i64
  br label %22

22:                                               ; preds = %43, %17
  %23 = phi i64 [ 0, %17 ], [ %44, %43 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #8
  store i32 -1431655766, i32* %5, align 4
  %24 = tail call i32 @_cmsReadTypeBase(%struct._cms_io_handler* %1) #8
  switch i32 %24, label %29 [
    i32 1668641398, label %25
    i32 1885434465, label %27
  ]

25:                                               ; preds = %22
  %26 = call i8* @Type_Curve_Read(%struct._cms_typehandler_struct* %0, %struct._cms_io_handler* %1, i32* nonnull %5, i32 0) #8
  br label %35

27:                                               ; preds = %22
  %28 = call i8* @Type_ParametricCurve_Read(%struct._cms_typehandler_struct* %0, %struct._cms_io_handler* %1, i32* nonnull %5, i32 0) #8
  br label %35

29:                                               ; preds = %22
  %30 = getelementptr inbounds [5 x i8], [5 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %30) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %30, i8 -86, i64 5, i1 false) #8
  call void @_cmsTagSignature2String(i8* nonnull %30, i32 %24) #8
  %31 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %32 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %31, align 8
  call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %32, i32 8, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.13, i64 0, i64 0), i8* nonnull %30) #8
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %30) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #8
  %33 = and i64 %23, 4294967295
  %34 = getelementptr inbounds [16 x %struct._cms_curve_struct*], [16 x %struct._cms_curve_struct*]* %7, i64 0, i64 %33
  store %struct._cms_curve_struct* null, %struct._cms_curve_struct** %34, align 8
  br label %51

35:                                               ; preds = %25, %27
  %36 = phi i8* [ %28, %27 ], [ %26, %25 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #8
  %37 = getelementptr inbounds [16 x %struct._cms_curve_struct*], [16 x %struct._cms_curve_struct*]* %7, i64 0, i64 %23
  %38 = bitcast %struct._cms_curve_struct** %37 to i8**
  store i8* %36, i8** %38, align 8
  %39 = icmp eq i8* %36, null
  br i1 %39, label %51, label %40

40:                                               ; preds = %35
  %41 = tail call i32 @_cmsReadAlignment(%struct._cms_io_handler* %1) #8
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %51, label %43

43:                                               ; preds = %40
  %44 = add nuw nsw i64 %23, 1
  %45 = icmp eq i64 %44, %21
  br i1 %45, label %46, label %22

46:                                               ; preds = %43, %15
  %47 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %48 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %47, align 8
  %49 = getelementptr inbounds [16 x %struct._cms_curve_struct*], [16 x %struct._cms_curve_struct*]* %7, i64 0, i64 0
  %50 = call %struct._cmsStage_struct* @cmsStageAllocToneCurves(%struct._cmsContext_struct* %48, i32 %3, %struct._cms_curve_struct** nonnull %49) #8
  br label %51

51:                                               ; preds = %40, %35, %29, %46
  %52 = phi %struct._cmsStage_struct* [ %50, %46 ], [ null, %29 ], [ null, %35 ], [ null, %40 ]
  br i1 %16, label %61, label %53

53:                                               ; preds = %51
  %54 = zext i32 %3 to i64
  br label %55

55:                                               ; preds = %55, %53
  %56 = phi i64 [ 0, %53 ], [ %59, %55 ]
  %57 = getelementptr inbounds [16 x %struct._cms_curve_struct*], [16 x %struct._cms_curve_struct*]* %7, i64 0, i64 %56
  %58 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %57, align 8
  call void @cmsFreeToneCurve(%struct._cms_curve_struct* %58) #8
  %59 = add nuw nsw i64 %56, 1
  %60 = icmp eq i64 %59, %54
  br i1 %60, label %61, label %55

61:                                               ; preds = %55, %51, %10, %4
  %62 = phi %struct._cmsStage_struct* [ null, %4 ], [ null, %10 ], [ %52, %51 ], [ %52, %55 ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %8) #8
  ret %struct._cmsStage_struct* %62
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %struct._cmsStage_struct* @ReadCLUT(%struct._cms_typehandler_struct* nocapture readonly, %struct._cms_io_handler*, i32, i32, i32) unnamed_addr #0 {
  %6 = alloca [16 x i8], align 16
  %7 = alloca [16 x i32], align 16
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #8
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i64 0, i64 1
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i64 0, i64 2
  %13 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i64 0, i64 3
  %14 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i64 0, i64 4
  %15 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i64 0, i64 5
  %16 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i64 0, i64 6
  %17 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i64 0, i64 7
  %18 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i64 0, i64 8
  %19 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i64 0, i64 9
  %20 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i64 0, i64 10
  %21 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i64 0, i64 11
  %22 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i64 0, i64 12
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i64 0, i64 13
  %24 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i64 0, i64 14
  %25 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i64 0, i64 15
  %26 = bitcast [16 x i32]* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %26) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %26, i8 -86, i64 64, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #8
  store i8 -86, i8* %8, align 1
  %27 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %1, i64 0, i32 6
  %28 = load i32 (%struct._cms_io_handler*, i32)*, i32 (%struct._cms_io_handler*, i32)** %27, align 8
  %29 = tail call i32 %28(%struct._cms_io_handler* %1, i32 %2) #8
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %99, label %31

31:                                               ; preds = %5
  %32 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %1, i64 0, i32 5
  %33 = load i32 (%struct._cms_io_handler*, i8*, i32, i32)*, i32 (%struct._cms_io_handler*, i8*, i32, i32)** %32, align 8
  %34 = call i32 %33(%struct._cms_io_handler* %1, i8* nonnull %10, i32 16, i32 1) #8
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %99

36:                                               ; preds = %31
  %37 = load i8, i8* %10, align 16
  %38 = icmp eq i8 %37, 1
  br i1 %38, label %99, label %39

39:                                               ; preds = %36
  %40 = zext i8 %37 to i32
  %41 = getelementptr inbounds [16 x i32], [16 x i32]* %7, i64 0, i64 0
  store i32 %40, i32* %41, align 16
  %42 = load i8, i8* %11, align 1
  %43 = icmp eq i8 %42, 1
  br i1 %43, label %99, label %101

44:                                               ; preds = %171
  %45 = call i32 @_cmsReadUInt8Number(%struct._cms_io_handler* %1, i8* null) #8
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %99, label %47

47:                                               ; preds = %44
  %48 = call i32 @_cmsReadUInt8Number(%struct._cms_io_handler* %1, i8* null) #8
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %99, label %50

50:                                               ; preds = %47
  %51 = call i32 @_cmsReadUInt8Number(%struct._cms_io_handler* %1, i8* null) #8
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %99, label %53

53:                                               ; preds = %50
  %54 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %55 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %54, align 8
  %56 = call %struct._cmsStage_struct* @cmsStageAllocCLut16bitGranular(%struct._cmsContext_struct* %55, i32* nonnull %41, i32 %3, i32 %4, i16* null) #8
  %57 = icmp eq %struct._cmsStage_struct* %56, null
  br i1 %57, label %99, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %56, i64 0, i32 8
  %60 = bitcast i8** %59 to %struct._cmsStageCLutData**
  %61 = load %struct._cmsStageCLutData*, %struct._cmsStageCLutData** %60, align 8
  %62 = load i8, i8* %8, align 1
  switch i8 %62, label %95 [
    i8 1, label %63
    i8 2, label %87
  ]

63:                                               ; preds = %58
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #8
  store i8 -86, i8* %9, align 1
  %64 = getelementptr inbounds %struct._cmsStageCLutData, %struct._cmsStageCLutData* %61, i64 0, i32 2
  %65 = load i32, i32* %64, align 8
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %86, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %struct._cmsStageCLutData, %struct._cmsStageCLutData* %61, i64 0, i32 0, i32 0
  br label %69

69:                                               ; preds = %67, %75
  %70 = phi i64 [ 0, %67 ], [ %82, %75 ]
  %71 = load i32 (%struct._cms_io_handler*, i8*, i32, i32)*, i32 (%struct._cms_io_handler*, i8*, i32, i32)** %32, align 8
  %72 = call i32 %71(%struct._cms_io_handler* %1, i8* nonnull %9, i32 1, i32 1) #8
  %73 = icmp eq i32 %72, 1
  br i1 %73, label %75, label %74

74:                                               ; preds = %69
  call void @cmsStageFree(%struct._cmsStage_struct* nonnull %56) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #8
  br label %99

75:                                               ; preds = %69
  %76 = load i8, i8* %9, align 1
  %77 = zext i8 %76 to i16
  %78 = shl nuw i16 %77, 8
  %79 = or i16 %78, %77
  %80 = load i16*, i16** %68, align 8
  %81 = getelementptr inbounds i16, i16* %80, i64 %70
  store i16 %79, i16* %81, align 2
  %82 = add nuw nsw i64 %70, 1
  %83 = load i32, i32* %64, align 8
  %84 = zext i32 %83 to i64
  %85 = icmp ult i64 %82, %84
  br i1 %85, label %69, label %86

86:                                               ; preds = %75, %63
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #8
  br label %99

87:                                               ; preds = %58
  %88 = getelementptr inbounds %struct._cmsStageCLutData, %struct._cmsStageCLutData* %61, i64 0, i32 2
  %89 = load i32, i32* %88, align 8
  %90 = getelementptr inbounds %struct._cmsStageCLutData, %struct._cmsStageCLutData* %61, i64 0, i32 0, i32 0
  %91 = load i16*, i16** %90, align 8
  %92 = call i32 @_cmsReadUInt16Array(%struct._cms_io_handler* %1, i32 %89, i16* %91) #8
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %99

94:                                               ; preds = %87
  call void @cmsStageFree(%struct._cmsStage_struct* nonnull %56) #8
  br label %99

95:                                               ; preds = %58
  call void @cmsStageFree(%struct._cmsStage_struct* nonnull %56) #8
  %96 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %54, align 8
  %97 = load i8, i8* %8, align 1
  %98 = zext i8 %97 to i32
  call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %96, i32 8, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.14, i64 0, i64 0), i32 %98) #8
  br label %99

99:                                               ; preds = %36, %39, %101, %106, %111, %116, %121, %126, %131, %136, %141, %146, %151, %156, %161, %166, %87, %86, %74, %53, %50, %47, %44, %171, %31, %5, %95, %94
  %100 = phi %struct._cmsStage_struct* [ null, %94 ], [ null, %95 ], [ null, %5 ], [ null, %31 ], [ null, %171 ], [ null, %44 ], [ null, %47 ], [ null, %50 ], [ null, %53 ], [ null, %74 ], [ %56, %86 ], [ %56, %87 ], [ null, %166 ], [ null, %161 ], [ null, %156 ], [ null, %151 ], [ null, %146 ], [ null, %141 ], [ null, %136 ], [ null, %131 ], [ null, %126 ], [ null, %121 ], [ null, %116 ], [ null, %111 ], [ null, %106 ], [ null, %101 ], [ null, %39 ], [ null, %36 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %26) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #8
  ret %struct._cmsStage_struct* %100

101:                                              ; preds = %39
  %102 = zext i8 %42 to i32
  %103 = getelementptr inbounds [16 x i32], [16 x i32]* %7, i64 0, i64 1
  store i32 %102, i32* %103, align 4
  %104 = load i8, i8* %12, align 2
  %105 = icmp eq i8 %104, 1
  br i1 %105, label %99, label %106

106:                                              ; preds = %101
  %107 = zext i8 %104 to i32
  %108 = getelementptr inbounds [16 x i32], [16 x i32]* %7, i64 0, i64 2
  store i32 %107, i32* %108, align 8
  %109 = load i8, i8* %13, align 1
  %110 = icmp eq i8 %109, 1
  br i1 %110, label %99, label %111

111:                                              ; preds = %106
  %112 = zext i8 %109 to i32
  %113 = getelementptr inbounds [16 x i32], [16 x i32]* %7, i64 0, i64 3
  store i32 %112, i32* %113, align 4
  %114 = load i8, i8* %14, align 4
  %115 = icmp eq i8 %114, 1
  br i1 %115, label %99, label %116

116:                                              ; preds = %111
  %117 = zext i8 %114 to i32
  %118 = getelementptr inbounds [16 x i32], [16 x i32]* %7, i64 0, i64 4
  store i32 %117, i32* %118, align 16
  %119 = load i8, i8* %15, align 1
  %120 = icmp eq i8 %119, 1
  br i1 %120, label %99, label %121

121:                                              ; preds = %116
  %122 = zext i8 %119 to i32
  %123 = getelementptr inbounds [16 x i32], [16 x i32]* %7, i64 0, i64 5
  store i32 %122, i32* %123, align 4
  %124 = load i8, i8* %16, align 2
  %125 = icmp eq i8 %124, 1
  br i1 %125, label %99, label %126

126:                                              ; preds = %121
  %127 = zext i8 %124 to i32
  %128 = getelementptr inbounds [16 x i32], [16 x i32]* %7, i64 0, i64 6
  store i32 %127, i32* %128, align 8
  %129 = load i8, i8* %17, align 1
  %130 = icmp eq i8 %129, 1
  br i1 %130, label %99, label %131

131:                                              ; preds = %126
  %132 = zext i8 %129 to i32
  %133 = getelementptr inbounds [16 x i32], [16 x i32]* %7, i64 0, i64 7
  store i32 %132, i32* %133, align 4
  %134 = load i8, i8* %18, align 8
  %135 = icmp eq i8 %134, 1
  br i1 %135, label %99, label %136

136:                                              ; preds = %131
  %137 = zext i8 %134 to i32
  %138 = getelementptr inbounds [16 x i32], [16 x i32]* %7, i64 0, i64 8
  store i32 %137, i32* %138, align 16
  %139 = load i8, i8* %19, align 1
  %140 = icmp eq i8 %139, 1
  br i1 %140, label %99, label %141

141:                                              ; preds = %136
  %142 = zext i8 %139 to i32
  %143 = getelementptr inbounds [16 x i32], [16 x i32]* %7, i64 0, i64 9
  store i32 %142, i32* %143, align 4
  %144 = load i8, i8* %20, align 2
  %145 = icmp eq i8 %144, 1
  br i1 %145, label %99, label %146

146:                                              ; preds = %141
  %147 = zext i8 %144 to i32
  %148 = getelementptr inbounds [16 x i32], [16 x i32]* %7, i64 0, i64 10
  store i32 %147, i32* %148, align 8
  %149 = load i8, i8* %21, align 1
  %150 = icmp eq i8 %149, 1
  br i1 %150, label %99, label %151

151:                                              ; preds = %146
  %152 = zext i8 %149 to i32
  %153 = getelementptr inbounds [16 x i32], [16 x i32]* %7, i64 0, i64 11
  store i32 %152, i32* %153, align 4
  %154 = load i8, i8* %22, align 4
  %155 = icmp eq i8 %154, 1
  br i1 %155, label %99, label %156

156:                                              ; preds = %151
  %157 = zext i8 %154 to i32
  %158 = getelementptr inbounds [16 x i32], [16 x i32]* %7, i64 0, i64 12
  store i32 %157, i32* %158, align 16
  %159 = load i8, i8* %23, align 1
  %160 = icmp eq i8 %159, 1
  br i1 %160, label %99, label %161

161:                                              ; preds = %156
  %162 = zext i8 %159 to i32
  %163 = getelementptr inbounds [16 x i32], [16 x i32]* %7, i64 0, i64 13
  store i32 %162, i32* %163, align 4
  %164 = load i8, i8* %24, align 2
  %165 = icmp eq i8 %164, 1
  br i1 %165, label %99, label %166

166:                                              ; preds = %161
  %167 = zext i8 %164 to i32
  %168 = getelementptr inbounds [16 x i32], [16 x i32]* %7, i64 0, i64 14
  store i32 %167, i32* %168, align 8
  %169 = load i8, i8* %25, align 1
  %170 = icmp eq i8 %169, 1
  br i1 %170, label %99, label %171

171:                                              ; preds = %166
  %172 = zext i8 %169 to i32
  %173 = getelementptr inbounds [16 x i32], [16 x i32]* %7, i64 0, i64 15
  store i32 %172, i32* %173, align 4
  %174 = call i32 @_cmsReadUInt8Number(%struct._cms_io_handler* %1, i8* nonnull %8) #8
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %99, label %44
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %struct._cmsStage_struct* @ReadMatrix(%struct._cms_typehandler_struct* nocapture readonly, %struct._cms_io_handler*, i32) unnamed_addr #0 {
  %4 = alloca [9 x double], align 16
  %5 = alloca [3 x double], align 16
  %6 = bitcast [9 x double]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %6) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -1, i64 72, i1 false)
  %7 = bitcast [3 x double]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #8
  %8 = getelementptr inbounds [3 x double], [3 x double]* %5, i64 0, i64 0
  %9 = getelementptr inbounds [3 x double], [3 x double]* %5, i64 0, i64 1
  %10 = getelementptr inbounds [3 x double], [3 x double]* %5, i64 0, i64 2
  %11 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %1, i64 0, i32 6
  %12 = bitcast [3 x double]* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 -1, i64 24, i1 false)
  %13 = load i32 (%struct._cms_io_handler*, i32)*, i32 (%struct._cms_io_handler*, i32)** %11, align 8
  %14 = tail call i32 %13(%struct._cms_io_handler* %1, i32 %2) #8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %65, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds [9 x double], [9 x double]* %4, i64 0, i64 0
  %18 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %1, double* nonnull %17) #8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %65, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds [9 x double], [9 x double]* %4, i64 0, i64 1
  %22 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %1, double* %21) #8
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %65, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds [9 x double], [9 x double]* %4, i64 0, i64 2
  %26 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %1, double* %25) #8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %65, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds [9 x double], [9 x double]* %4, i64 0, i64 3
  %30 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %1, double* %29) #8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %65, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds [9 x double], [9 x double]* %4, i64 0, i64 4
  %34 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %1, double* %33) #8
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %65, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds [9 x double], [9 x double]* %4, i64 0, i64 5
  %38 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %1, double* %37) #8
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %65, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds [9 x double], [9 x double]* %4, i64 0, i64 6
  %42 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %1, double* %41) #8
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %65, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds [9 x double], [9 x double]* %4, i64 0, i64 7
  %46 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %1, double* %45) #8
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %65, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds [9 x double], [9 x double]* %4, i64 0, i64 8
  %50 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %1, double* %49) #8
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %65, label %52

52:                                               ; preds = %48
  %53 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %1, double* nonnull %8) #8
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %65, label %55

55:                                               ; preds = %52
  %56 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %1, double* %9) #8
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %65, label %58

58:                                               ; preds = %55
  %59 = call i32 @_cmsRead15Fixed16Number(%struct._cms_io_handler* %1, double* %10) #8
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %65, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %63 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %62, align 8
  %64 = call %struct._cmsStage_struct* @cmsStageAllocMatrix(%struct._cmsContext_struct* %63, i32 3, i32 3, double* nonnull %17, double* nonnull %8) #8
  br label %65

65:                                               ; preds = %58, %55, %52, %48, %44, %40, %36, %32, %28, %24, %20, %16, %3, %61
  %66 = phi %struct._cmsStage_struct* [ %64, %61 ], [ null, %3 ], [ null, %16 ], [ null, %20 ], [ null, %24 ], [ null, %28 ], [ null, %32 ], [ null, %36 ], [ null, %40 ], [ null, %44 ], [ null, %48 ], [ null, %52 ], [ null, %55 ], [ null, %58 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %6) #8
  ret %struct._cmsStage_struct* %66
}

declare i32 @_cmsReadAlignment(%struct._cms_io_handler*) local_unnamed_addr #1

declare void @_cmsTagSignature2String(i8*, i32) local_unnamed_addr #1

declare %struct._cmsStage_struct* @cmsStageAllocCLut16bitGranular(%struct._cmsContext_struct*, i32*, i32, i32, i16*) local_unnamed_addr #1

declare void @cmsStageFree(%struct._cmsStage_struct*) local_unnamed_addr #1

declare i32 @cmsPipelineCheckAndRetreiveStages(%struct._cmsPipeline_struct*, i32, ...) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @WriteSetOfCurves(%struct._cms_typehandler_struct* nocapture readonly, %struct._cms_io_handler*, %struct._cmsStage_struct*) unnamed_addr #0 {
  %4 = alloca [5 x i8], align 1
  %5 = tail call i32 @cmsStageOutputChannels(%struct._cmsStage_struct* %2) #8
  %6 = tail call %struct._cms_curve_struct** @_cmsStageGetPtrToCurveSet(%struct._cmsStage_struct* %2) #8
  %7 = icmp eq i32 %5, 0
  br i1 %7, label %56, label %8

8:                                                ; preds = %3
  %9 = zext i32 %5 to i64
  br label %12

10:                                               ; preds = %52
  %11 = icmp eq i64 %55, %9
  br i1 %11, label %56, label %12

12:                                               ; preds = %10, %8
  %13 = phi i64 [ 0, %8 ], [ %55, %10 ]
  %14 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %6, i64 %13
  %15 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %14, align 8
  %16 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %15, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  switch i32 %17, label %18 [
    i32 0, label %33
    i32 2, label %21
  ]

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %15, i64 0, i32 2
  %20 = load %struct.cmsCurveSegment*, %struct.cmsCurveSegment** %19, align 8
  br label %27

21:                                               ; preds = %12
  %22 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %15, i64 0, i32 2
  %23 = load %struct.cmsCurveSegment*, %struct.cmsCurveSegment** %22, align 8
  %24 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %23, i64 1, i32 2
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %33, label %27

27:                                               ; preds = %18, %21
  %28 = phi %struct.cmsCurveSegment* [ %20, %18 ], [ %23, %21 ]
  %29 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %28, i64 0, i32 2
  %30 = load i32, i32* %29, align 8
  %31 = icmp slt i32 %30, 0
  %32 = select i1 %31, i32 1668641398, i32 1885434465
  br label %33

33:                                               ; preds = %27, %21, %12
  %34 = phi i32 [ 1668641398, %12 ], [ 1668641398, %21 ], [ %32, %27 ]
  %35 = tail call i32 @_cmsWriteTypeBase(%struct._cms_io_handler* %1, i32 %34) #8
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %56, label %37

37:                                               ; preds = %33
  switch i32 %34, label %48 [
    i32 1668641398, label %38
    i32 1885434465, label %43
  ]

38:                                               ; preds = %37
  %39 = bitcast %struct._cms_curve_struct** %14 to i8**
  %40 = load i8*, i8** %39, align 8
  %41 = tail call i32 @Type_Curve_Write(%struct._cms_typehandler_struct* %0, %struct._cms_io_handler* %1, i8* %40, i32 1)
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %56, label %52

43:                                               ; preds = %37
  %44 = bitcast %struct._cms_curve_struct** %14 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = tail call i32 @Type_ParametricCurve_Write(%struct._cms_typehandler_struct* %0, %struct._cms_io_handler* %1, i8* %45, i32 1)
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %56, label %52

48:                                               ; preds = %37
  %49 = getelementptr inbounds [5 x i8], [5 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %49) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 -86, i64 5, i1 false)
  call void @_cmsTagSignature2String(i8* nonnull %49, i32 1885434465) #8
  %50 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %51 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %50, align 8
  call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %51, i32 8, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.13, i64 0, i64 0), i8* nonnull %49) #8
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %49) #8
  br label %56

52:                                               ; preds = %38, %43
  %53 = tail call i32 @_cmsWriteAlignment(%struct._cms_io_handler* %1) #8
  %54 = icmp eq i32 %53, 0
  %55 = add nuw nsw i64 %13, 1
  br i1 %54, label %56, label %10

56:                                               ; preds = %33, %38, %43, %52, %10, %3, %48
  %57 = phi i32 [ 0, %48 ], [ 1, %3 ], [ 0, %33 ], [ 0, %38 ], [ 0, %43 ], [ 0, %52 ], [ 1, %10 ]
  ret i32 %57
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @WriteCLUT(%struct._cms_typehandler_struct* nocapture readonly, %struct._cms_io_handler*, i8 zeroext, %struct._cmsStage_struct* nocapture readonly) unnamed_addr #0 {
  %5 = alloca [16 x i8], align 16
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8
  %7 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %3, i64 0, i32 8
  %8 = bitcast i8** %7 to %struct._cmsStageCLutData**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 16, i1 false)
  %9 = load %struct._cmsStageCLutData*, %struct._cmsStageCLutData** %8, align 8
  %10 = getelementptr inbounds %struct._cmsStageCLutData, %struct._cmsStageCLutData* %9, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %15 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %14, align 8
  tail call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %15, i32 13, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.16, i64 0, i64 0)) #8
  br label %91

16:                                               ; preds = %4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 0, i64 16, i1 false)
  %17 = getelementptr inbounds %struct._cmsStageCLutData, %struct._cmsStageCLutData* %9, i64 0, i32 1
  %18 = load %struct._cms_interp_struc*, %struct._cms_interp_struc** %17, align 8
  %19 = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %18, i64 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %35, label %22

22:                                               ; preds = %16, %22
  %23 = phi i64 [ %29, %22 ], [ 0, %16 ]
  %24 = phi %struct._cms_interp_struc* [ %30, %22 ], [ %18, %16 ]
  %25 = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %24, i64 0, i32 4, i64 %23
  %26 = load i32, i32* %25, align 4
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds [16 x i8], [16 x i8]* %5, i64 0, i64 %23
  store i8 %27, i8* %28, align 1
  %29 = add nuw nsw i64 %23, 1
  %30 = load %struct._cms_interp_struc*, %struct._cms_interp_struc** %17, align 8
  %31 = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %30, i64 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = zext i32 %32 to i64
  %34 = icmp ult i64 %29, %33
  br i1 %34, label %22, label %35

35:                                               ; preds = %22, %16
  %36 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %1, i64 0, i32 9
  %37 = load i32 (%struct._cms_io_handler*, i32, i8*)*, i32 (%struct._cms_io_handler*, i32, i8*)** %36, align 8
  %38 = call i32 %37(%struct._cms_io_handler* %1, i32 16, i8* nonnull %6) #8
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %91, label %40

40:                                               ; preds = %35
  %41 = call i32 @_cmsWriteUInt8Number(%struct._cms_io_handler* %1, i8 zeroext %2) #8
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %91, label %43

43:                                               ; preds = %40
  %44 = call i32 @_cmsWriteUInt8Number(%struct._cms_io_handler* %1, i8 zeroext 0) #8
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %91, label %46

46:                                               ; preds = %43
  %47 = call i32 @_cmsWriteUInt8Number(%struct._cms_io_handler* %1, i8 zeroext 0) #8
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %91, label %49

49:                                               ; preds = %46
  %50 = call i32 @_cmsWriteUInt8Number(%struct._cms_io_handler* %1, i8 zeroext 0) #8
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %91, label %52

52:                                               ; preds = %49
  switch i8 %2, label %83 [
    i8 1, label %53
    i8 2, label %76
  ]

53:                                               ; preds = %52
  %54 = getelementptr inbounds %struct._cmsStageCLutData, %struct._cmsStageCLutData* %9, i64 0, i32 2
  %55 = load i32, i32* %54, align 8
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %87, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %struct._cmsStageCLutData, %struct._cmsStageCLutData* %9, i64 0, i32 0, i32 0
  br label %63

59:                                               ; preds = %63
  %60 = load i32, i32* %54, align 8
  %61 = zext i32 %60 to i64
  %62 = icmp ult i64 %75, %61
  br i1 %62, label %63, label %87

63:                                               ; preds = %57, %59
  %64 = phi i64 [ 0, %57 ], [ %75, %59 ]
  %65 = load i16*, i16** %58, align 8
  %66 = getelementptr inbounds i16, i16* %65, i64 %64
  %67 = load i16, i16* %66, align 2
  %68 = zext i16 %67 to i32
  %69 = mul nuw i32 %68, 65281
  %70 = add nuw i32 %69, 8388608
  %71 = lshr i32 %70, 24
  %72 = trunc i32 %71 to i8
  %73 = call i32 @_cmsWriteUInt8Number(%struct._cms_io_handler* %1, i8 zeroext %72) #8
  %74 = icmp eq i32 %73, 0
  %75 = add nuw nsw i64 %64, 1
  br i1 %74, label %91, label %59

76:                                               ; preds = %52
  %77 = getelementptr inbounds %struct._cmsStageCLutData, %struct._cmsStageCLutData* %9, i64 0, i32 2
  %78 = load i32, i32* %77, align 8
  %79 = getelementptr inbounds %struct._cmsStageCLutData, %struct._cmsStageCLutData* %9, i64 0, i32 0, i32 0
  %80 = load i16*, i16** %79, align 8
  %81 = call i32 @_cmsWriteUInt16Array(%struct._cms_io_handler* %1, i32 %78, i16* %80) #8
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %91, label %87

83:                                               ; preds = %52
  %84 = zext i8 %2 to i32
  %85 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %86 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %85, align 8
  call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %86, i32 8, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.14, i64 0, i64 0), i32 %84) #8
  br label %91

87:                                               ; preds = %59, %53, %76
  %88 = call i32 @_cmsWriteAlignment(%struct._cms_io_handler* %1) #8
  %89 = icmp ne i32 %88, 0
  %90 = zext i1 %89 to i32
  br label %91

91:                                               ; preds = %63, %87, %76, %49, %46, %43, %40, %35, %83, %13
  %92 = phi i32 [ 0, %13 ], [ 0, %83 ], [ 0, %35 ], [ 0, %40 ], [ 0, %43 ], [ 0, %46 ], [ 0, %49 ], [ 0, %76 ], [ %90, %87 ], [ 0, %63 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8
  ret i32 %92
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @WriteMatrix(%struct._cms_io_handler*, %struct._cmsStage_struct* nocapture readonly) unnamed_addr #0 {
  %3 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %1, i64 0, i32 8
  %4 = bitcast i8** %3 to %struct._cmsStageMatrixData**
  %5 = load %struct._cmsStageMatrixData*, %struct._cmsStageMatrixData** %4, align 8
  %6 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %1, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %1, i64 0, i32 4
  %9 = load i32, i32* %8, align 4
  %10 = mul i32 %9, %7
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %27, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct._cmsStageMatrixData, %struct._cmsStageMatrixData* %5, i64 0, i32 0
  %14 = zext i32 %10 to i64
  br label %17

15:                                               ; preds = %17
  %16 = icmp eq i64 %24, %14
  br i1 %16, label %25, label %17

17:                                               ; preds = %15, %12
  %18 = phi i64 [ 0, %12 ], [ %24, %15 ]
  %19 = load double*, double** %13, align 8
  %20 = getelementptr inbounds double, double* %19, i64 %18
  %21 = load double, double* %20, align 8
  %22 = tail call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %0, double %21) #8
  %23 = icmp eq i32 %22, 0
  %24 = add nuw nsw i64 %18, 1
  br i1 %23, label %59, label %15

25:                                               ; preds = %15
  %26 = load i32, i32* %8, align 4
  br label %27

27:                                               ; preds = %25, %2
  %28 = phi i32 [ %26, %25 ], [ %9, %2 ]
  %29 = getelementptr inbounds %struct._cmsStageMatrixData, %struct._cmsStageMatrixData* %5, i64 0, i32 1
  %30 = load double*, double** %29, align 8
  %31 = icmp eq double* %30, null
  %32 = icmp ne i32 %28, 0
  br i1 %31, label %38, label %33

33:                                               ; preds = %27
  br i1 %32, label %34, label %59

34:                                               ; preds = %33
  %35 = load double, double* %30, align 8
  %36 = tail call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %0, double %35) #8
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %59, label %39

38:                                               ; preds = %27
  br i1 %32, label %54, label %59

39:                                               ; preds = %34, %44
  %40 = phi i64 [ %50, %44 ], [ 1, %34 ]
  %41 = load i32, i32* %8, align 4
  %42 = zext i32 %41 to i64
  %43 = icmp ult i64 %40, %42
  br i1 %43, label %44, label %59

44:                                               ; preds = %39
  %45 = load double*, double** %29, align 8
  %46 = getelementptr inbounds double, double* %45, i64 %40
  %47 = load double, double* %46, align 8
  %48 = tail call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %0, double %47) #8
  %49 = icmp eq i32 %48, 0
  %50 = add nuw nsw i64 %40, 1
  br i1 %49, label %59, label %39

51:                                               ; preds = %54
  %52 = load i32, i32* %8, align 4
  %53 = icmp ult i32 %58, %52
  br i1 %53, label %54, label %59

54:                                               ; preds = %38, %51
  %55 = phi i32 [ %58, %51 ], [ 0, %38 ]
  %56 = tail call i32 @_cmsWrite15Fixed16Number(%struct._cms_io_handler* %0, double 0.000000e+00) #8
  %57 = icmp eq i32 %56, 0
  %58 = add nuw i32 %55, 1
  br i1 %57, label %59, label %51

59:                                               ; preds = %17, %39, %44, %54, %51, %34, %33, %38
  %60 = phi i32 [ 1, %38 ], [ 1, %33 ], [ 0, %34 ], [ 0, %54 ], [ 1, %51 ], [ 0, %44 ], [ 1, %39 ], [ 0, %17 ]
  ret i32 %60
}

declare i32 @cmsStageOutputChannels(%struct._cmsStage_struct*) local_unnamed_addr #1

declare %struct._cms_curve_struct** @_cmsStageGetPtrToCurveSet(%struct._cmsStage_struct*) local_unnamed_addr #1

declare i32 @_cmsWriteAlignment(%struct._cms_io_handler*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @ReadCountAndSting(%struct._cms_typehandler_struct* nocapture readonly, %struct._cms_io_handler*, %struct._cms_MLU_struct*, i32* nocapture, i8*) unnamed_addr #0 {
  %6 = alloca i32, align 4
  %7 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #8
  store i32 -1431655766, i32* %6, align 4
  %8 = load i32, i32* %3, align 4
  %9 = icmp ult i32 %8, 4
  br i1 %9, label %46, label %10

10:                                               ; preds = %5
  %11 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* nonnull %6) #8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %46, label %13

13:                                               ; preds = %10
  %14 = load i32, i32* %6, align 4
  %15 = icmp ugt i32 %14, -5
  br i1 %15, label %46, label %16

16:                                               ; preds = %13
  %17 = zext i32 %14 to i64
  %18 = load i32, i32* %3, align 4
  %19 = zext i32 %18 to i64
  %20 = add nuw nsw i64 %17, 4
  %21 = icmp ugt i64 %20, %19
  br i1 %21, label %46, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %24 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %23, align 8
  %25 = add nuw i32 %14, 1
  %26 = call i8* @_cmsMalloc(%struct._cmsContext_struct* %24, i32 %25) #8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %46, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %1, i64 0, i32 5
  %30 = load i32 (%struct._cms_io_handler*, i8*, i32, i32)*, i32 (%struct._cms_io_handler*, i8*, i32, i32)** %29, align 8
  %31 = load i32, i32* %6, align 4
  %32 = call i32 %30(%struct._cms_io_handler* %1, i8* nonnull %26, i32 1, i32 %31) #8
  %33 = load i32, i32* %6, align 4
  %34 = icmp eq i32 %32, %33
  br i1 %34, label %37, label %35

35:                                               ; preds = %28
  %36 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %23, align 8
  call void @_cmsFree(%struct._cmsContext_struct* %36, i8* nonnull %26) #8
  br label %46

37:                                               ; preds = %28
  %38 = zext i32 %32 to i64
  %39 = getelementptr inbounds i8, i8* %26, i64 %38
  store i8 0, i8* %39, align 1
  %40 = call i32 @cmsMLUsetASCII(%struct._cms_MLU_struct* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23, i64 0, i64 0), i8* %4, i8* nonnull %26) #8
  %41 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %23, align 8
  call void @_cmsFree(%struct._cmsContext_struct* %41, i8* nonnull %26) #8
  %42 = load i32, i32* %6, align 4
  %43 = load i32, i32* %3, align 4
  %44 = sub i32 -4, %42
  %45 = add i32 %44, %43
  store i32 %45, i32* %3, align 4
  br label %46

46:                                               ; preds = %22, %16, %13, %10, %5, %37, %35
  %47 = phi i32 [ 0, %35 ], [ 1, %37 ], [ 0, %5 ], [ 0, %10 ], [ 0, %13 ], [ 0, %16 ], [ 0, %22 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #8
  ret i32 %47
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @WriteCountAndSting(%struct._cms_typehandler_struct* nocapture readonly, %struct._cms_io_handler*, %struct._cms_MLU_struct*, i8*) unnamed_addr #0 {
  %5 = tail call i32 @cmsMLUgetASCII(%struct._cms_MLU_struct* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23, i64 0, i64 0), i8* %3, i8* null, i32 0) #8
  %6 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %7 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %6, align 8
  %8 = tail call i8* @_cmsMalloc(%struct._cmsContext_struct* %7, i32 %5) #8
  %9 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %5) #8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %21, label %11

11:                                               ; preds = %4
  %12 = tail call i32 @cmsMLUgetASCII(%struct._cms_MLU_struct* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23, i64 0, i64 0), i8* %3, i8* %8, i32 %5) #8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %21, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %1, i64 0, i32 9
  %16 = load i32 (%struct._cms_io_handler*, i32, i8*)*, i32 (%struct._cms_io_handler*, i32, i8*)** %15, align 8
  %17 = tail call i32 %16(%struct._cms_io_handler* %1, i32 %5, i8* %8) #8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %14
  %20 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %6, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %20, i8* %8) #8
  br label %21

21:                                               ; preds = %14, %11, %4, %19
  %22 = phi i32 [ 1, %19 ], [ 0, %4 ], [ 0, %11 ], [ 0, %14 ]
  ret i32 %22
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @ReadPositionTable(%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32, i32, i8*, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32, i32)* nocapture) unnamed_addr #0 {
  %7 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %1, i64 0, i32 8
  %8 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %7, align 8
  %9 = tail call i32 %8(%struct._cms_io_handler* %1) #8
  %10 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %1, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = sub i32 %11, %9
  %13 = lshr i32 %12, 3
  %14 = icmp ult i32 %13, %2
  br i1 %14, label %72, label %15

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %1, i64 0, i32 1
  %17 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %16, align 8
  %18 = tail call i8* @_cmsCalloc(%struct._cmsContext_struct* %17, i32 %2, i32 4) #8
  %19 = bitcast i8* %18 to i32*
  %20 = icmp eq i8* %18, null
  br i1 %20, label %72, label %21

21:                                               ; preds = %15
  %22 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %16, align 8
  %23 = tail call i8* @_cmsCalloc(%struct._cmsContext_struct* %22, i32 %2, i32 4) #8
  %24 = bitcast i8* %23 to i32*
  %25 = icmp eq i8* %23, null
  br i1 %25, label %26, label %28

26:                                               ; preds = %21
  %27 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %16, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %27, i8* nonnull %18) #8
  br label %72

28:                                               ; preds = %21
  %29 = icmp eq i32 %2, 0
  br i1 %29, label %66, label %30

30:                                               ; preds = %28
  %31 = zext i32 %2 to i64
  br label %36

32:                                               ; preds = %45
  br i1 %29, label %66, label %33

33:                                               ; preds = %32
  %34 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %1, i64 0, i32 6
  %35 = zext i32 %2 to i64
  br label %52

36:                                               ; preds = %45, %30
  %37 = phi i64 [ 0, %30 ], [ %48, %45 ]
  %38 = getelementptr inbounds i32, i32* %19, i64 %37
  %39 = tail call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* %38) #8
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %69, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds i32, i32* %24, i64 %37
  %43 = tail call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* %42) #8
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %69, label %45

45:                                               ; preds = %41
  %46 = load i32, i32* %38, align 4
  %47 = add i32 %46, %3
  store i32 %47, i32* %38, align 4
  %48 = add nuw nsw i64 %37, 1
  %49 = icmp eq i64 %48, %31
  br i1 %49, label %32, label %36

50:                                               ; preds = %59
  %51 = icmp eq i64 %65, %35
  br i1 %51, label %66, label %52

52:                                               ; preds = %50, %33
  %53 = phi i64 [ 0, %33 ], [ %65, %50 ]
  %54 = load i32 (%struct._cms_io_handler*, i32)*, i32 (%struct._cms_io_handler*, i32)** %34, align 8
  %55 = getelementptr inbounds i32, i32* %19, i64 %53
  %56 = load i32, i32* %55, align 4
  %57 = tail call i32 %54(%struct._cms_io_handler* %1, i32 %56) #8
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %69, label %59

59:                                               ; preds = %52
  %60 = getelementptr inbounds i32, i32* %24, i64 %53
  %61 = load i32, i32* %60, align 4
  %62 = trunc i64 %53 to i32
  %63 = tail call i32 %5(%struct._cms_typehandler_struct* %0, %struct._cms_io_handler* %1, i8* %4, i32 %62, i32 %61) #8, !callees !12
  %64 = icmp eq i32 %63, 0
  %65 = add nuw nsw i64 %53, 1
  br i1 %64, label %69, label %50

66:                                               ; preds = %50, %28, %32
  %67 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %16, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %67, i8* nonnull %18) #8
  %68 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %16, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %68, i8* nonnull %23) #8
  br label %72

69:                                               ; preds = %41, %36, %59, %52
  %70 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %16, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %70, i8* nonnull %18) #8
  %71 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %16, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %71, i8* nonnull %23) #8
  br label %72

72:                                               ; preds = %26, %15, %69, %6, %66
  %73 = phi i32 [ 1, %66 ], [ 0, %6 ], [ 0, %69 ], [ 0, %15 ], [ 0, %26 ]
  ret i32 %73
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ReadMPEElem(%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32, i32) #0 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca [5 x i8], align 1
  %9 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #8
  store i32 -1431655766, i32* %6, align 4
  %10 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #8
  store i32 -1431655766, i32* %7, align 4
  %11 = bitcast i8* %2 to %struct._cmsPipeline_struct*
  %12 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %13 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %12, align 8
  %14 = tail call i8* @_cmsContextGetClientChunk(%struct._cmsContext_struct* %13, i32 11) #8
  %15 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* nonnull %6) #8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %60, label %17

17:                                               ; preds = %5
  %18 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* null) #8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %60, label %20

20:                                               ; preds = %17
  %21 = load i32, i32* %6, align 4
  %22 = bitcast i8* %14 to %struct._cmsTagTypeLinkedList_st**
  %23 = load %struct._cmsTagTypeLinkedList_st*, %struct._cmsTagTypeLinkedList_st** %22, align 8
  %24 = icmp eq %struct._cmsTagTypeLinkedList_st* %23, null
  br i1 %24, label %34, label %25

25:                                               ; preds = %20, %30
  %26 = phi %struct._cmsTagTypeLinkedList_st* [ %32, %30 ], [ %23, %20 ]
  %27 = getelementptr inbounds %struct._cmsTagTypeLinkedList_st, %struct._cmsTagTypeLinkedList_st* %26, i64 0, i32 0, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, %21
  br i1 %29, label %49, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct._cmsTagTypeLinkedList_st, %struct._cmsTagTypeLinkedList_st* %26, i64 0, i32 1
  %32 = load %struct._cmsTagTypeLinkedList_st*, %struct._cmsTagTypeLinkedList_st** %31, align 8
  %33 = icmp eq %struct._cmsTagTypeLinkedList_st* %32, null
  br i1 %33, label %34, label %25

34:                                               ; preds = %30, %20
  br label %35

35:                                               ; preds = %34, %40
  %36 = phi %struct._cmsTagTypeLinkedList_st* [ %42, %40 ], [ getelementptr inbounds ([5 x %struct._cmsTagTypeLinkedList_st], [5 x %struct._cmsTagTypeLinkedList_st]* @SupportedMPEtypes, i64 0, i64 0), %34 ]
  %37 = getelementptr inbounds %struct._cmsTagTypeLinkedList_st, %struct._cmsTagTypeLinkedList_st* %36, i64 0, i32 0, i32 0
  %38 = load i32, i32* %37, align 8
  %39 = icmp eq i32 %38, %21
  br i1 %39, label %44, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %struct._cmsTagTypeLinkedList_st, %struct._cmsTagTypeLinkedList_st* %36, i64 0, i32 1
  %42 = load %struct._cmsTagTypeLinkedList_st*, %struct._cmsTagTypeLinkedList_st** %41, align 8
  %43 = icmp eq %struct._cmsTagTypeLinkedList_st* %42, null
  br i1 %43, label %46, label %35

44:                                               ; preds = %35
  %45 = icmp eq %struct._cmsTagTypeLinkedList_st* %36, null
  br i1 %45, label %46, label %49

46:                                               ; preds = %40, %44
  %47 = getelementptr inbounds [5 x i8], [5 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %47) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %47, i8 -86, i64 5, i1 false)
  call void @_cmsTagSignature2String(i8* nonnull %47, i32 %21) #8
  %48 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %12, align 8
  call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %48, i32 8, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.24, i64 0, i64 0), i8* nonnull %47) #8
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %47) #8
  br label %60

49:                                               ; preds = %25, %44
  %50 = phi %struct._cmsTagTypeLinkedList_st* [ %36, %44 ], [ %26, %25 ]
  %51 = getelementptr inbounds %struct._cmsTagTypeLinkedList_st, %struct._cmsTagTypeLinkedList_st* %50, i64 0, i32 0, i32 1
  %52 = load i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)*, i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)** %51, align 8
  %53 = icmp eq i8* (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32*, i32)* %52, null
  br i1 %53, label %59, label %54

54:                                               ; preds = %49
  %55 = call i8* %52(%struct._cms_typehandler_struct* %0, %struct._cms_io_handler* %1, i32* nonnull %7, i32 %4) #8
  %56 = bitcast i8* %55 to %struct._cmsStage_struct*
  %57 = call i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct* %11, i32 1, %struct._cmsStage_struct* %56) #8
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %60, label %59

59:                                               ; preds = %54, %49
  br label %60

60:                                               ; preds = %54, %17, %5, %59, %46
  %61 = phi i32 [ 0, %46 ], [ 1, %59 ], [ 0, %5 ], [ 0, %17 ], [ 0, %54 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #8
  ret i32 %61
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_MPEcurve_Read(%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32* nocapture, i32) #0 {
  %5 = alloca i16, align 2
  %6 = alloca i16, align 2
  %7 = bitcast i16* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %7) #8
  store i16 -21846, i16* %5, align 2
  %8 = bitcast i16* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %8) #8
  store i16 -21846, i16* %6, align 2
  store i32 0, i32* %2, align 4
  %9 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %1, i64 0, i32 8
  %10 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %9, align 8
  %11 = tail call i32 %10(%struct._cms_io_handler* %1) #8
  %12 = add i32 %11, -8
  %13 = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %1, i16* nonnull %5) #8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %61, label %15

15:                                               ; preds = %4
  %16 = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %1, i16* nonnull %6) #8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %61, label %18

18:                                               ; preds = %15
  %19 = load i16, i16* %5, align 2
  %20 = load i16, i16* %6, align 2
  %21 = icmp eq i16 %19, %20
  br i1 %21, label %22, label %61

22:                                               ; preds = %18
  %23 = zext i16 %19 to i32
  %24 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %25 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %24, align 8
  %26 = call i8* @_cmsCalloc(%struct._cmsContext_struct* %25, i32 %23, i32 8) #8
  %27 = bitcast i8* %26 to %struct._cms_curve_struct**
  %28 = icmp eq i8* %26, null
  br i1 %28, label %61, label %29

29:                                               ; preds = %22
  %30 = load i16, i16* %5, align 2
  %31 = zext i16 %30 to i32
  %32 = call fastcc i32 @ReadPositionTable(%struct._cms_typehandler_struct* %0, %struct._cms_io_handler* %1, i32 %31, i32 %12, i8* nonnull %26, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32, i32)* nonnull @ReadMPECurve)
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %39, label %34

34:                                               ; preds = %29
  %35 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %24, align 8
  %36 = load i16, i16* %5, align 2
  %37 = zext i16 %36 to i32
  %38 = call %struct._cmsStage_struct* @cmsStageAllocToneCurves(%struct._cmsContext_struct* %35, i32 %37, %struct._cms_curve_struct** nonnull %27) #8
  br label %39

39:                                               ; preds = %29, %34
  %40 = phi %struct._cmsStage_struct* [ %38, %34 ], [ null, %29 ]
  %41 = load i16, i16* %5, align 2
  %42 = icmp eq i16 %41, 0
  br i1 %42, label %56, label %43

43:                                               ; preds = %39, %51
  %44 = phi i16 [ %52, %51 ], [ %41, %39 ]
  %45 = phi i64 [ %53, %51 ], [ 0, %39 ]
  %46 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %27, i64 %45
  %47 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %46, align 8
  %48 = icmp eq %struct._cms_curve_struct* %47, null
  br i1 %48, label %51, label %49

49:                                               ; preds = %43
  call void @cmsFreeToneCurve(%struct._cms_curve_struct* nonnull %47) #8
  %50 = load i16, i16* %5, align 2
  br label %51

51:                                               ; preds = %43, %49
  %52 = phi i16 [ %44, %43 ], [ %50, %49 ]
  %53 = add nuw nsw i64 %45, 1
  %54 = zext i16 %52 to i64
  %55 = icmp ult i64 %53, %54
  br i1 %55, label %43, label %56

56:                                               ; preds = %51, %39
  %57 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %24, align 8
  call void @_cmsFree(%struct._cmsContext_struct* %57, i8* nonnull %26) #8
  %58 = icmp ne %struct._cmsStage_struct* %40, null
  %59 = zext i1 %58 to i32
  store i32 %59, i32* %2, align 4
  %60 = bitcast %struct._cmsStage_struct* %40 to i8*
  br label %61

61:                                               ; preds = %22, %18, %15, %4, %56
  %62 = phi i8* [ %60, %56 ], [ null, %4 ], [ null, %15 ], [ null, %18 ], [ null, %22 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %7) #8
  ret i8* %62
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @Type_MPEcurve_Write(%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8* nocapture readonly, i32) #0 {
  %5 = getelementptr inbounds i8, i8* %2, i64 48
  %6 = bitcast i8* %5 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %1, i64 0, i32 8
  %9 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %8, align 8
  %10 = tail call i32 %9(%struct._cms_io_handler* %1) #8
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %2, i64 16
  %13 = bitcast i8* %12 to i32*
  %14 = load i32, i32* %13, align 8
  %15 = trunc i32 %14 to i16
  %16 = tail call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %1, i16 zeroext %15) #8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %28, label %18

18:                                               ; preds = %4
  %19 = load i32, i32* %13, align 8
  %20 = trunc i32 %19 to i16
  %21 = tail call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %1, i16 zeroext %20) #8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %28, label %23

23:                                               ; preds = %18
  %24 = load i32, i32* %13, align 8
  %25 = tail call fastcc i32 @WritePositionTable(%struct._cms_typehandler_struct* %0, %struct._cms_io_handler* %1, i32 %24, i32 %11, i8* %7, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32, i32)* nonnull @WriteMPECurve)
  %26 = icmp ne i32 %25, 0
  %27 = zext i1 %26 to i32
  br label %28

28:                                               ; preds = %23, %18, %4
  %29 = phi i32 [ 0, %4 ], [ 0, %18 ], [ %27, %23 ]
  ret i32 %29
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @GenericMPEdup(%struct._cms_typehandler_struct* nocapture readnone, i8*, i32) #0 {
  %4 = bitcast i8* %1 to %struct._cmsStage_struct*
  %5 = tail call %struct._cmsStage_struct* @cmsStageDup(%struct._cmsStage_struct* %4) #8
  %6 = bitcast %struct._cmsStage_struct* %5 to i8*
  ret i8* %6
}

; Function Attrs: nounwind ssp uwtable
define internal void @GenericMPEfree(%struct._cms_typehandler_struct* nocapture readnone, i8*) #0 {
  %3 = bitcast i8* %1 to %struct._cmsStage_struct*
  tail call void @cmsStageFree(%struct._cmsStage_struct* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_MPEmatrix_Read(%struct._cms_typehandler_struct* nocapture readonly, %struct._cms_io_handler*, i32* nocapture, i32) #0 {
  %5 = alloca i16, align 2
  %6 = alloca i16, align 2
  %7 = alloca float, align 4
  %8 = alloca float, align 4
  %9 = bitcast i16* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %9) #8
  store i16 -21846, i16* %5, align 2
  %10 = bitcast i16* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %10) #8
  store i16 -21846, i16* %6, align 2
  %11 = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %1, i16* nonnull %5) #8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %89, label %13

13:                                               ; preds = %4
  %14 = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %1, i16* nonnull %6) #8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %89, label %16

16:                                               ; preds = %13
  %17 = load i16, i16* %5, align 2
  %18 = zext i16 %17 to i32
  %19 = icmp ugt i16 %17, 15
  br i1 %19, label %89, label %20

20:                                               ; preds = %16
  %21 = load i16, i16* %6, align 2
  %22 = icmp ugt i16 %21, 15
  br i1 %22, label %89, label %23

23:                                               ; preds = %20
  %24 = zext i16 %21 to i32
  %25 = mul nuw i32 %24, %18
  %26 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %27 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %26, align 8
  %28 = call i8* @_cmsCalloc(%struct._cmsContext_struct* %27, i32 %25, i32 8) #8
  %29 = bitcast i8* %28 to double*
  %30 = icmp eq i8* %28, null
  br i1 %30, label %89, label %31

31:                                               ; preds = %23
  %32 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %26, align 8
  %33 = load i16, i16* %6, align 2
  %34 = zext i16 %33 to i32
  %35 = call i8* @_cmsCalloc(%struct._cmsContext_struct* %32, i32 %34, i32 8) #8
  %36 = bitcast i8* %35 to double*
  %37 = icmp eq i8* %35, null
  br i1 %37, label %43, label %38

38:                                               ; preds = %31
  %39 = icmp eq i32 %25, 0
  br i1 %39, label %45, label %40

40:                                               ; preds = %38
  %41 = bitcast float* %7 to i8*
  %42 = zext i32 %25 to i64
  br label %50

43:                                               ; preds = %31
  %44 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %26, align 8
  call void @_cmsFree(%struct._cmsContext_struct* %44, i8* nonnull %28) #8
  br label %89

45:                                               ; preds = %57, %38
  %46 = load i16, i16* %6, align 2
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %80, label %48

48:                                               ; preds = %45
  %49 = bitcast float* %8 to i8*
  br label %63

50:                                               ; preds = %57, %40
  %51 = phi i64 [ 0, %40 ], [ %61, %57 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %41) #8
  store float 0xFFFFFFFFE0000000, float* %7, align 4
  %52 = call i32 @_cmsReadFloat32Number(%struct._cms_io_handler* %1, float* nonnull %7) #8
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %57

54:                                               ; preds = %50
  %55 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %26, align 8
  call void @_cmsFree(%struct._cmsContext_struct* %55, i8* nonnull %28) #8
  %56 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %26, align 8
  call void @_cmsFree(%struct._cmsContext_struct* %56, i8* nonnull %35) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %41) #8
  br label %89

57:                                               ; preds = %50
  %58 = load float, float* %7, align 4
  %59 = fpext float %58 to double
  %60 = getelementptr inbounds double, double* %29, i64 %51
  store double %59, double* %60, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %41) #8
  %61 = add nuw nsw i64 %51, 1
  %62 = icmp eq i64 %61, %42
  br i1 %62, label %45, label %50

63:                                               ; preds = %48, %70
  %64 = phi i64 [ 0, %48 ], [ %74, %70 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %49) #8
  store float 0xFFFFFFFFE0000000, float* %8, align 4
  %65 = call i32 @_cmsReadFloat32Number(%struct._cms_io_handler* %1, float* nonnull %8) #8
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %70

67:                                               ; preds = %63
  %68 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %26, align 8
  call void @_cmsFree(%struct._cmsContext_struct* %68, i8* nonnull %28) #8
  %69 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %26, align 8
  call void @_cmsFree(%struct._cmsContext_struct* %69, i8* nonnull %35) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %49) #8
  br label %89

70:                                               ; preds = %63
  %71 = load float, float* %8, align 4
  %72 = fpext float %71 to double
  %73 = getelementptr inbounds double, double* %36, i64 %64
  store double %72, double* %73, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %49) #8
  %74 = add nuw nsw i64 %64, 1
  %75 = load i16, i16* %6, align 2
  %76 = zext i16 %75 to i64
  %77 = icmp ult i64 %74, %76
  br i1 %77, label %63, label %78

78:                                               ; preds = %70
  %79 = zext i16 %75 to i32
  br label %80

80:                                               ; preds = %45, %78
  %81 = phi i32 [ %79, %78 ], [ 0, %45 ]
  %82 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %26, align 8
  %83 = load i16, i16* %5, align 2
  %84 = zext i16 %83 to i32
  %85 = call %struct._cmsStage_struct* @cmsStageAllocMatrix(%struct._cmsContext_struct* %82, i32 %81, i32 %84, double* nonnull %29, double* nonnull %36) #8
  %86 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %26, align 8
  call void @_cmsFree(%struct._cmsContext_struct* %86, i8* nonnull %28) #8
  %87 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %26, align 8
  call void @_cmsFree(%struct._cmsContext_struct* %87, i8* nonnull %35) #8
  store i32 1, i32* %2, align 4
  %88 = bitcast %struct._cmsStage_struct* %85 to i8*
  br label %89

89:                                               ; preds = %67, %54, %23, %20, %16, %13, %4, %80, %43
  %90 = phi i8* [ null, %43 ], [ null, %54 ], [ null, %67 ], [ %88, %80 ], [ null, %4 ], [ null, %13 ], [ null, %16 ], [ null, %20 ], [ null, %23 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %10) #8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %9) #8
  ret i8* %90
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @Type_MPEmatrix_Write(%struct._cms_typehandler_struct* nocapture readnone, %struct._cms_io_handler*, i8* nocapture readonly, i32) #0 {
  %5 = getelementptr inbounds i8, i8* %2, i64 48
  %6 = bitcast i8* %5 to %struct._cmsStageMatrixData**
  %7 = load %struct._cmsStageMatrixData*, %struct._cmsStageMatrixData** %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 16
  %9 = bitcast i8* %8 to i32*
  %10 = load i32, i32* %9, align 8
  %11 = trunc i32 %10 to i16
  %12 = tail call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %1, i16 zeroext %11) #8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %65, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds i8, i8* %2, i64 20
  %16 = bitcast i8* %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = trunc i32 %17 to i16
  %19 = tail call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %1, i16 zeroext %18) #8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %65, label %21

21:                                               ; preds = %14
  %22 = load i32, i32* %9, align 8
  %23 = load i32, i32* %16, align 4
  %24 = mul i32 %23, %22
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %33, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %struct._cmsStageMatrixData, %struct._cmsStageMatrixData* %7, i64 0, i32 0
  %28 = zext i32 %24 to i64
  br label %38

29:                                               ; preds = %38
  %30 = icmp eq i64 %46, %28
  br i1 %30, label %31, label %38

31:                                               ; preds = %29
  %32 = load i32, i32* %16, align 4
  br label %33

33:                                               ; preds = %31, %21
  %34 = phi i32 [ %32, %31 ], [ %23, %21 ]
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %65, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %struct._cmsStageMatrixData, %struct._cmsStageMatrixData* %7, i64 0, i32 1
  br label %47

38:                                               ; preds = %29, %26
  %39 = phi i64 [ 0, %26 ], [ %46, %29 ]
  %40 = load double*, double** %27, align 8
  %41 = getelementptr inbounds double, double* %40, i64 %39
  %42 = load double, double* %41, align 8
  %43 = fptrunc double %42 to float
  %44 = tail call i32 @_cmsWriteFloat32Number(%struct._cms_io_handler* %1, float %43) #8
  %45 = icmp eq i32 %44, 0
  %46 = add nuw nsw i64 %39, 1
  br i1 %45, label %65, label %29

47:                                               ; preds = %36, %60
  %48 = phi i64 [ 0, %36 ], [ %61, %60 ]
  %49 = load double*, double** %37, align 8
  %50 = icmp eq double* %49, null
  br i1 %50, label %51, label %54

51:                                               ; preds = %47
  %52 = tail call i32 @_cmsWriteFloat32Number(%struct._cms_io_handler* %1, float 0.000000e+00) #8
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %65, label %60

54:                                               ; preds = %47
  %55 = getelementptr inbounds double, double* %49, i64 %48
  %56 = load double, double* %55, align 8
  %57 = fptrunc double %56 to float
  %58 = tail call i32 @_cmsWriteFloat32Number(%struct._cms_io_handler* %1, float %57) #8
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %65, label %60

60:                                               ; preds = %51, %54
  %61 = add nuw nsw i64 %48, 1
  %62 = load i32, i32* %16, align 4
  %63 = zext i32 %62 to i64
  %64 = icmp ult i64 %61, %63
  br i1 %64, label %47, label %65

65:                                               ; preds = %38, %51, %54, %60, %33, %14, %4
  %66 = phi i32 [ 0, %4 ], [ 0, %14 ], [ 1, %33 ], [ 0, %51 ], [ 0, %54 ], [ 1, %60 ], [ 0, %38 ]
  ret i32 %66
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @Type_MPEclut_Read(%struct._cms_typehandler_struct* nocapture readonly, %struct._cms_io_handler*, i32* nocapture, i32) #0 {
  %5 = alloca i16, align 2
  %6 = alloca i16, align 2
  %7 = alloca [16 x i8], align 16
  %8 = alloca [8 x i32], align 16
  %9 = bitcast i16* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %9) #8
  store i16 -21846, i16* %5, align 2
  %10 = bitcast i16* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %10) #8
  store i16 -21846, i16* %6, align 2
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #8
  %12 = bitcast [8 x i32]* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #8
  %13 = getelementptr inbounds [8 x i32], [8 x i32]* %8, i64 0, i64 0
  %14 = bitcast [8 x i32]* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %14, i8 -86, i64 32, i1 false)
  %15 = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %1, i16* nonnull %5) #8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %80, label %17

17:                                               ; preds = %4
  %18 = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %1, i16* nonnull %6) #8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %80, label %20

20:                                               ; preds = %17
  %21 = load i16, i16* %5, align 2
  %22 = icmp eq i16 %21, 0
  %23 = load i16, i16* %6, align 2
  %24 = icmp eq i16 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %78, label %26

26:                                               ; preds = %20
  %27 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %1, i64 0, i32 5
  %28 = load i32 (%struct._cms_io_handler*, i8*, i32, i32)*, i32 (%struct._cms_io_handler*, i8*, i32, i32)** %27, align 8
  %29 = call i32 %28(%struct._cms_io_handler* %1, i8* nonnull %11, i32 1, i32 16) #8
  %30 = icmp eq i32 %29, 16
  br i1 %30, label %31, label %78

31:                                               ; preds = %26
  %32 = load i16, i16* %5, align 2
  %33 = zext i16 %32 to i32
  %34 = icmp ult i32 %33, 8
  %35 = select i1 %34, i32 %33, i32 8
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %49, label %37

37:                                               ; preds = %31
  %38 = zext i32 %35 to i64
  br label %39

39:                                               ; preds = %37, %44
  %40 = phi i64 [ 0, %37 ], [ %47, %44 ]
  %41 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i64 0, i64 %40
  %42 = load i8, i8* %41, align 1
  %43 = icmp eq i8 %42, 1
  br i1 %43, label %78, label %44

44:                                               ; preds = %39
  %45 = zext i8 %42 to i32
  %46 = getelementptr inbounds [8 x i32], [8 x i32]* %8, i64 0, i64 %40
  store i32 %45, i32* %46, align 4
  %47 = add nuw nsw i64 %40, 1
  %48 = icmp ult i64 %47, %38
  br i1 %48, label %39, label %49

49:                                               ; preds = %44, %31
  %50 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %51 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %50, align 8
  %52 = load i16, i16* %6, align 2
  %53 = zext i16 %52 to i32
  %54 = call %struct._cmsStage_struct* @cmsStageAllocCLutFloatGranular(%struct._cmsContext_struct* %51, i32* nonnull %13, i32 %33, i32 %53, float* null) #8
  %55 = icmp eq %struct._cmsStage_struct* %54, null
  br i1 %55, label %78, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %struct._cmsStage_struct, %struct._cmsStage_struct* %54, i64 0, i32 8
  %58 = bitcast i8** %57 to %struct._cmsStageCLutData**
  %59 = load %struct._cmsStageCLutData*, %struct._cmsStageCLutData** %58, align 8
  %60 = getelementptr inbounds %struct._cmsStageCLutData, %struct._cmsStageCLutData* %59, i64 0, i32 2
  %61 = load i32, i32* %60, align 8
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %76, label %63

63:                                               ; preds = %56
  %64 = bitcast %struct._cmsStageCLutData* %59 to float**
  br label %69

65:                                               ; preds = %69
  %66 = load i32, i32* %60, align 8
  %67 = zext i32 %66 to i64
  %68 = icmp ult i64 %75, %67
  br i1 %68, label %69, label %76

69:                                               ; preds = %63, %65
  %70 = phi i64 [ 0, %63 ], [ %75, %65 ]
  %71 = load float*, float** %64, align 8
  %72 = getelementptr inbounds float, float* %71, i64 %70
  %73 = call i32 @_cmsReadFloat32Number(%struct._cms_io_handler* %1, float* %72) #8
  %74 = icmp eq i32 %73, 0
  %75 = add nuw nsw i64 %70, 1
  br i1 %74, label %79, label %65

76:                                               ; preds = %65, %56
  store i32 1, i32* %2, align 4
  %77 = bitcast %struct._cmsStage_struct* %54 to i8*
  br label %80

78:                                               ; preds = %39, %20, %26, %49
  store i32 0, i32* %2, align 4
  br label %80

79:                                               ; preds = %69
  store i32 0, i32* %2, align 4
  call void @cmsStageFree(%struct._cmsStage_struct* nonnull %54) #8
  br label %80

80:                                               ; preds = %78, %79, %17, %4, %76
  %81 = phi i8* [ %77, %76 ], [ null, %4 ], [ null, %17 ], [ null, %79 ], [ null, %78 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %10) #8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %9) #8
  ret i8* %81
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @Type_MPEclut_Write(%struct._cms_typehandler_struct* nocapture readnone, %struct._cms_io_handler*, i8* nocapture readonly, i32) #0 {
  %5 = alloca [16 x i8], align 16
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8
  %7 = getelementptr inbounds i8, i8* %2, i64 48
  %8 = bitcast i8* %7 to %struct._cmsStageCLutData**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 16, i1 false)
  %9 = load %struct._cmsStageCLutData*, %struct._cmsStageCLutData** %8, align 8
  %10 = getelementptr inbounds i8, i8* %2, i64 16
  %11 = bitcast i8* %10 to i32*
  %12 = load i32, i32* %11, align 8
  %13 = icmp ugt i32 %12, 8
  br i1 %13, label %105, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %struct._cmsStageCLutData, %struct._cmsStageCLutData* %9, i64 0, i32 3
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %105, label %18

18:                                               ; preds = %14
  %19 = trunc i32 %12 to i16
  %20 = tail call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %1, i16 zeroext %19) #8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %105, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds i8, i8* %2, i64 20
  %24 = bitcast i8* %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = trunc i32 %25 to i16
  %27 = tail call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %1, i16 zeroext %26) #8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %105, label %29

29:                                               ; preds = %22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 0, i64 16, i1 false)
  %30 = load i32, i32* %11, align 8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %83, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %struct._cmsStageCLutData, %struct._cmsStageCLutData* %9, i64 0, i32 1
  %34 = zext i32 %30 to i64
  %35 = add nsw i64 %34, -1
  %36 = and i64 %34, 3
  %37 = icmp ult i64 %35, 3
  br i1 %37, label %69, label %38

38:                                               ; preds = %32
  %39 = sub nsw i64 %34, %36
  br label %40

40:                                               ; preds = %40, %38
  %41 = phi i64 [ 0, %38 ], [ %66, %40 ]
  %42 = phi i64 [ %39, %38 ], [ %67, %40 ]
  %43 = load %struct._cms_interp_struc*, %struct._cms_interp_struc** %33, align 8
  %44 = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %43, i64 0, i32 4, i64 %41
  %45 = load i32, i32* %44, align 4
  %46 = trunc i32 %45 to i8
  %47 = getelementptr inbounds [16 x i8], [16 x i8]* %5, i64 0, i64 %41
  store i8 %46, i8* %47, align 4
  %48 = or i64 %41, 1
  %49 = load %struct._cms_interp_struc*, %struct._cms_interp_struc** %33, align 8
  %50 = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %49, i64 0, i32 4, i64 %48
  %51 = load i32, i32* %50, align 4
  %52 = trunc i32 %51 to i8
  %53 = getelementptr inbounds [16 x i8], [16 x i8]* %5, i64 0, i64 %48
  store i8 %52, i8* %53, align 1
  %54 = or i64 %41, 2
  %55 = load %struct._cms_interp_struc*, %struct._cms_interp_struc** %33, align 8
  %56 = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %55, i64 0, i32 4, i64 %54
  %57 = load i32, i32* %56, align 4
  %58 = trunc i32 %57 to i8
  %59 = getelementptr inbounds [16 x i8], [16 x i8]* %5, i64 0, i64 %54
  store i8 %58, i8* %59, align 2
  %60 = or i64 %41, 3
  %61 = load %struct._cms_interp_struc*, %struct._cms_interp_struc** %33, align 8
  %62 = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %61, i64 0, i32 4, i64 %60
  %63 = load i32, i32* %62, align 4
  %64 = trunc i32 %63 to i8
  %65 = getelementptr inbounds [16 x i8], [16 x i8]* %5, i64 0, i64 %60
  store i8 %64, i8* %65, align 1
  %66 = add nuw nsw i64 %41, 4
  %67 = add i64 %42, -4
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %40

69:                                               ; preds = %40, %32
  %70 = phi i64 [ 0, %32 ], [ %66, %40 ]
  %71 = icmp eq i64 %36, 0
  br i1 %71, label %83, label %72

72:                                               ; preds = %69, %72
  %73 = phi i64 [ %80, %72 ], [ %70, %69 ]
  %74 = phi i64 [ %81, %72 ], [ %36, %69 ]
  %75 = load %struct._cms_interp_struc*, %struct._cms_interp_struc** %33, align 8
  %76 = getelementptr inbounds %struct._cms_interp_struc, %struct._cms_interp_struc* %75, i64 0, i32 4, i64 %73
  %77 = load i32, i32* %76, align 4
  %78 = trunc i32 %77 to i8
  %79 = getelementptr inbounds [16 x i8], [16 x i8]* %5, i64 0, i64 %73
  store i8 %78, i8* %79, align 1
  %80 = add nuw nsw i64 %73, 1
  %81 = add i64 %74, -1
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %83, label %72, !llvm.loop !13

83:                                               ; preds = %69, %72, %29
  %84 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %1, i64 0, i32 9
  %85 = load i32 (%struct._cms_io_handler*, i32, i8*)*, i32 (%struct._cms_io_handler*, i32, i8*)** %84, align 8
  %86 = call i32 %85(%struct._cms_io_handler* %1, i32 16, i8* nonnull %6) #8
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %105, label %88

88:                                               ; preds = %83
  %89 = bitcast %struct._cmsStageCLutData* %9 to float**
  %90 = getelementptr inbounds %struct._cmsStageCLutData, %struct._cmsStageCLutData* %9, i64 0, i32 2
  %91 = load i32, i32* %90, align 8
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %105, label %97

93:                                               ; preds = %97
  %94 = load i32, i32* %90, align 8
  %95 = zext i32 %94 to i64
  %96 = icmp ult i64 %104, %95
  br i1 %96, label %97, label %105

97:                                               ; preds = %88, %93
  %98 = phi i64 [ %104, %93 ], [ 0, %88 ]
  %99 = load float*, float** %89, align 8
  %100 = getelementptr inbounds float, float* %99, i64 %98
  %101 = load float, float* %100, align 4
  %102 = call i32 @_cmsWriteFloat32Number(%struct._cms_io_handler* %1, float %101) #8
  %103 = icmp eq i32 %102, 0
  %104 = add nuw nsw i64 %98, 1
  br i1 %103, label %105, label %93

105:                                              ; preds = %97, %93, %88, %83, %22, %18, %14, %4
  %106 = phi i32 [ 0, %4 ], [ 0, %14 ], [ 0, %18 ], [ 0, %22 ], [ 0, %83 ], [ 1, %88 ], [ 0, %97 ], [ 1, %93 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8
  ret i32 %106
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ReadMPECurve(%struct._cms_typehandler_struct* nocapture readonly, %struct._cms_io_handler*, i8* nocapture, i32, i32) #0 {
  %6 = alloca i32, align 4
  %7 = alloca i16, align 2
  %8 = alloca i16, align 2
  %9 = alloca float, align 4
  %10 = alloca i32, align 4
  %11 = alloca [5 x i8], align 1
  %12 = bitcast i8* %2 to %struct._cms_curve_struct**
  %13 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #8
  store i32 -1431655766, i32* %6, align 4
  %14 = bitcast i16* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %14) #8
  store i16 -21846, i16* %7, align 2
  %15 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* nonnull %6) #8
  %16 = icmp ne i32 %15, 0
  %17 = load i32, i32* %6, align 4
  %18 = icmp eq i32 %17, 1668641382
  %19 = and i1 %16, %18
  br i1 %19, label %20, label %196

20:                                               ; preds = %5
  %21 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* null) #8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %196, label %23

23:                                               ; preds = %20
  %24 = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %1, i16* nonnull %7) #8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %196, label %26

26:                                               ; preds = %23
  %27 = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %1, i16* null) #8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %196, label %29

29:                                               ; preds = %26
  %30 = load i16, i16* %7, align 2
  %31 = icmp eq i16 %30, 0
  br i1 %31, label %196, label %32

32:                                               ; preds = %29
  %33 = zext i16 %30 to i32
  %34 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 5
  %35 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %34, align 8
  %36 = call i8* @_cmsCalloc(%struct._cmsContext_struct* %35, i32 %33, i32 112) #8
  %37 = bitcast i8* %36 to %struct.cmsCurveSegment*
  %38 = icmp eq i8* %36, null
  br i1 %38, label %196, label %39

39:                                               ; preds = %32
  %40 = load i16, i16* %7, align 2
  %41 = icmp eq i16 %40, 1
  br i1 %41, label %59, label %42

42:                                               ; preds = %39, %49
  %43 = phi i64 [ %51, %49 ], [ 0, %39 ]
  %44 = phi float [ %50, %49 ], [ 0xC480F0CF00000000, %39 ]
  %45 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %37, i64 %43, i32 0
  store float %44, float* %45, align 8
  %46 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %37, i64 %43, i32 1
  %47 = call i32 @_cmsReadFloat32Number(%struct._cms_io_handler* %1, float* %46) #8
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %176, label %49

49:                                               ; preds = %42
  %50 = load float, float* %46, align 4
  %51 = add nuw nsw i64 %43, 1
  %52 = load i16, i16* %7, align 2
  %53 = zext i16 %52 to i32
  %54 = add nsw i32 %53, -1
  %55 = zext i32 %54 to i64
  %56 = icmp ult i64 %51, %55
  br i1 %56, label %42, label %57

57:                                               ; preds = %49
  %58 = sext i32 %54 to i64
  br label %59

59:                                               ; preds = %57, %39
  %60 = phi float [ 0xC480F0CF00000000, %39 ], [ %50, %57 ]
  %61 = phi i16 [ 1, %39 ], [ %52, %57 ]
  %62 = phi i64 [ 0, %39 ], [ %58, %57 ]
  %63 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %37, i64 %62, i32 0
  store float %60, float* %63, align 8
  %64 = zext i16 %61 to i64
  %65 = add nsw i64 %64, -1
  %66 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %37, i64 %65, i32 1
  store float 0x4480F0CF00000000, float* %66, align 4
  %67 = icmp eq i16 %61, 0
  br i1 %67, label %153, label %68

68:                                               ; preds = %59
  %69 = bitcast i32* %10 to i8*
  %70 = bitcast i16* %8 to i8*
  %71 = bitcast float* %9 to i8*
  br label %72

72:                                               ; preds = %146, %68
  %73 = phi i64 [ 0, %68 ], [ %147, %146 ]
  %74 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* nonnull %6) #8
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %176, label %76

76:                                               ; preds = %72
  %77 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* null) #8
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %176, label %79

79:                                               ; preds = %76
  %80 = load i32, i32* %6, align 4
  switch i32 %80, label %143 [
    i32 1885434470, label %81
    i32 1935764838, label %111
  ]

81:                                               ; preds = %79
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %70) #8
  store i16 -21846, i16* %8, align 2
  %82 = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %1, i16* nonnull %8) #8
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %109, label %84

84:                                               ; preds = %81
  %85 = call i32 @_cmsReadUInt16Number(%struct._cms_io_handler* %1, i16* null) #8
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %109, label %87

87:                                               ; preds = %84
  %88 = load i16, i16* %8, align 2
  %89 = zext i16 %88 to i32
  %90 = add nuw nsw i32 %89, 6
  %91 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %37, i64 %73, i32 2
  store i32 %90, i32* %91, align 8
  %92 = icmp ugt i16 %88, 2
  br i1 %92, label %109, label %93

93:                                               ; preds = %87, %98
  %94 = phi i64 [ %102, %98 ], [ 0, %87 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %71) #8
  store float 0xFFFFFFFFE0000000, float* %9, align 4
  %95 = call i32 @_cmsReadFloat32Number(%struct._cms_io_handler* %1, float* nonnull %9) #8
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %93
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %71) #8
  br label %109

98:                                               ; preds = %93
  %99 = load float, float* %9, align 4
  %100 = fpext float %99 to double
  %101 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %37, i64 %73, i32 3, i64 %94
  store double %100, double* %101, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %71) #8
  %102 = add nuw nsw i64 %94, 1
  %103 = load i16, i16* %8, align 2
  %104 = zext i16 %103 to i64
  %105 = getelementptr inbounds [3 x i32], [3 x i32]* @__const.WriteSegmentedCurve.ParamsByType, i64 0, i64 %104
  %106 = load i32, i32* %105, align 4
  %107 = zext i32 %106 to i64
  %108 = icmp ult i64 %102, %107
  br i1 %108, label %93, label %110

109:                                              ; preds = %87, %84, %81, %97
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %70) #8
  br label %176

110:                                              ; preds = %98
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %70) #8
  br label %146

111:                                              ; preds = %79
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %69) #8
  store i32 -1431655766, i32* %10, align 4
  %112 = call i32 @_cmsReadUInt32Number(%struct._cms_io_handler* %1, i32* nonnull %10) #8
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %141, label %114

114:                                              ; preds = %111
  %115 = load i32, i32* %10, align 4
  %116 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %37, i64 %73, i32 4
  store i32 %115, i32* %116, align 8
  %117 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %34, align 8
  %118 = load i32, i32* %10, align 4
  %119 = call i8* @_cmsCalloc(%struct._cmsContext_struct* %117, i32 %118, i32 4) #8
  %120 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %37, i64 %73, i32 5
  %121 = bitcast float** %120 to i8**
  store i8* %119, i8** %121, align 8
  %122 = icmp eq i8* %119, null
  br i1 %122, label %141, label %123

123:                                              ; preds = %114
  %124 = load i32, i32* %10, align 4
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %142, label %126

126:                                              ; preds = %123
  %127 = bitcast i8* %119 to float*
  %128 = call i32 @_cmsReadFloat32Number(%struct._cms_io_handler* %1, float* nonnull %127) #8
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %141, label %130

130:                                              ; preds = %126, %135
  %131 = phi i64 [ %140, %135 ], [ 1, %126 ]
  %132 = load i32, i32* %10, align 4
  %133 = zext i32 %132 to i64
  %134 = icmp ult i64 %131, %133
  br i1 %134, label %135, label %142

135:                                              ; preds = %130
  %136 = load float*, float** %120, align 8
  %137 = getelementptr inbounds float, float* %136, i64 %131
  %138 = call i32 @_cmsReadFloat32Number(%struct._cms_io_handler* %1, float* %137) #8
  %139 = icmp eq i32 %138, 0
  %140 = add nuw nsw i64 %131, 1
  br i1 %139, label %141, label %130

141:                                              ; preds = %114, %111, %126, %135
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %69) #8
  br label %176

142:                                              ; preds = %130, %123
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %69) #8
  br label %146

143:                                              ; preds = %79
  %144 = getelementptr inbounds [5 x i8], [5 x i8]* %11, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %144) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %144, i8 -86, i64 5, i1 false) #8
  call void @_cmsTagSignature2String(i8* nonnull %144, i32 %80) #8
  %145 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %34, align 8
  call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %145, i32 8, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.25, i64 0, i64 0), i8* nonnull %144) #8
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %144) #8
  br label %176

146:                                              ; preds = %142, %110
  %147 = add nuw nsw i64 %73, 1
  %148 = load i16, i16* %7, align 2
  %149 = zext i16 %148 to i64
  %150 = icmp ult i64 %147, %149
  br i1 %150, label %72, label %151

151:                                              ; preds = %146
  %152 = zext i16 %148 to i32
  br label %153

153:                                              ; preds = %151, %59
  %154 = phi i32 [ %152, %151 ], [ 0, %59 ]
  %155 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %34, align 8
  %156 = call %struct._cms_curve_struct* @cmsBuildSegmentedToneCurve(%struct._cmsContext_struct* %155, i32 %154, %struct.cmsCurveSegment* nonnull %37) #8
  %157 = load i16, i16* %7, align 2
  %158 = icmp eq i16 %157, 0
  br i1 %158, label %174, label %159

159:                                              ; preds = %153, %169
  %160 = phi i16 [ %170, %169 ], [ %157, %153 ]
  %161 = phi i64 [ %171, %169 ], [ 0, %153 ]
  %162 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %37, i64 %161, i32 5
  %163 = load float*, float** %162, align 8
  %164 = icmp eq float* %163, null
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %34, align 8
  %167 = bitcast float* %163 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %166, i8* nonnull %167) #8
  %168 = load i16, i16* %7, align 2
  br label %169

169:                                              ; preds = %165, %159
  %170 = phi i16 [ %160, %159 ], [ %168, %165 ]
  %171 = add nuw nsw i64 %161, 1
  %172 = zext i16 %170 to i64
  %173 = icmp ult i64 %171, %172
  br i1 %173, label %159, label %174

174:                                              ; preds = %169, %153
  %175 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %34, align 8
  call void @_cmsFree(%struct._cmsContext_struct* %175, i8* nonnull %36) #8
  br label %196

176:                                              ; preds = %42, %76, %72, %143, %141, %109
  %177 = load i16, i16* %7, align 2
  %178 = icmp eq i16 %177, 0
  br i1 %178, label %194, label %179

179:                                              ; preds = %176, %189
  %180 = phi i16 [ %190, %189 ], [ %177, %176 ]
  %181 = phi i64 [ %191, %189 ], [ 0, %176 ]
  %182 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %37, i64 %181, i32 5
  %183 = load float*, float** %182, align 8
  %184 = icmp eq float* %183, null
  br i1 %184, label %189, label %185

185:                                              ; preds = %179
  %186 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %34, align 8
  %187 = bitcast float* %183 to i8*
  call void @_cmsFree(%struct._cmsContext_struct* %186, i8* nonnull %187) #8
  %188 = load i16, i16* %7, align 2
  br label %189

189:                                              ; preds = %185, %179
  %190 = phi i16 [ %180, %179 ], [ %188, %185 ]
  %191 = add nuw nsw i64 %181, 1
  %192 = zext i16 %190 to i64
  %193 = icmp ult i64 %191, %192
  br i1 %193, label %179, label %194

194:                                              ; preds = %189, %176
  %195 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %34, align 8
  call void @_cmsFree(%struct._cmsContext_struct* %195, i8* nonnull %36) #8
  br label %196

196:                                              ; preds = %5, %20, %23, %26, %29, %32, %174, %194
  %197 = phi %struct._cms_curve_struct* [ null, %194 ], [ %156, %174 ], [ null, %5 ], [ null, %20 ], [ null, %23 ], [ null, %26 ], [ null, %29 ], [ null, %32 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %14) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #8
  %198 = zext i32 %3 to i64
  %199 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %12, i64 %198
  store %struct._cms_curve_struct* %197, %struct._cms_curve_struct** %199, align 8
  %200 = icmp ne %struct._cms_curve_struct* %197, null
  %201 = zext i1 %200 to i32
  ret i32 %201
}

declare i32 @_cmsReadFloat32Number(%struct._cms_io_handler*, float*) local_unnamed_addr #1

declare %struct._cms_curve_struct* @cmsBuildSegmentedToneCurve(%struct._cmsContext_struct*, i32, %struct.cmsCurveSegment*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @WritePositionTable(%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i32, i32, i8*, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32, i32)* nocapture) unnamed_addr #0 {
  %7 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %1, i64 0, i32 1
  %8 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %7, align 8
  %9 = tail call i8* @_cmsCalloc(%struct._cmsContext_struct* %8, i32 %2, i32 4) #8
  %10 = bitcast i8* %9 to i32*
  %11 = icmp eq i8* %9, null
  br i1 %11, label %92, label %12

12:                                               ; preds = %6
  %13 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %7, align 8
  %14 = tail call i8* @_cmsCalloc(%struct._cmsContext_struct* %13, i32 %2, i32 4) #8
  %15 = bitcast i8* %14 to i32*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %88, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %1, i64 0, i32 8
  %19 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %18, align 8
  %20 = tail call i32 %19(%struct._cms_io_handler* %1) #8
  %21 = icmp eq i32 %2, 0
  br i1 %21, label %22, label %32

22:                                               ; preds = %17
  %23 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %18, align 8
  %24 = tail call i32 %23(%struct._cms_io_handler* %1) #8
  br label %57

25:                                               ; preds = %36
  %26 = icmp eq i32 %39, %2
  br i1 %26, label %27, label %32

27:                                               ; preds = %25
  %28 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %18, align 8
  %29 = tail call i32 %28(%struct._cms_io_handler* %1) #8
  br i1 %21, label %57, label %30

30:                                               ; preds = %27
  %31 = zext i32 %2 to i64
  br label %40

32:                                               ; preds = %17, %25
  %33 = phi i32 [ %39, %25 ], [ 0, %17 ]
  %34 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 0) #8
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %84, label %36

36:                                               ; preds = %32
  %37 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 0) #8
  %38 = icmp eq i32 %37, 0
  %39 = add nuw i32 %33, 1
  br i1 %38, label %84, label %25

40:                                               ; preds = %48, %30
  %41 = phi i64 [ 0, %30 ], [ %53, %48 ]
  %42 = phi i32 [ %29, %30 ], [ %55, %48 ]
  %43 = sub i32 %42, %3
  %44 = getelementptr inbounds i32, i32* %10, i64 %41
  store i32 %43, i32* %44, align 4
  %45 = trunc i64 %41 to i32
  %46 = tail call i32 %5(%struct._cms_typehandler_struct* %0, %struct._cms_io_handler* %1, i8* %4, i32 %45, i32 0) #8, !callees !14
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %84, label %48

48:                                               ; preds = %40
  %49 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %18, align 8
  %50 = tail call i32 %49(%struct._cms_io_handler* %1) #8
  %51 = sub i32 %50, %42
  %52 = getelementptr inbounds i32, i32* %15, i64 %41
  store i32 %51, i32* %52, align 4
  %53 = add nuw nsw i64 %41, 1
  %54 = load i32 (%struct._cms_io_handler*)*, i32 (%struct._cms_io_handler*)** %18, align 8
  %55 = tail call i32 %54(%struct._cms_io_handler* %1) #8
  %56 = icmp eq i64 %53, %31
  br i1 %56, label %57, label %40

57:                                               ; preds = %48, %22, %27
  %58 = phi i32 [ %29, %27 ], [ %24, %22 ], [ %55, %48 ]
  %59 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %1, i64 0, i32 6
  %60 = load i32 (%struct._cms_io_handler*, i32)*, i32 (%struct._cms_io_handler*, i32)** %59, align 8
  %61 = tail call i32 %60(%struct._cms_io_handler* %1, i32 %20) #8
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %84, label %63

63:                                               ; preds = %57
  br i1 %21, label %80, label %64

64:                                               ; preds = %63
  %65 = zext i32 %2 to i64
  br label %68

66:                                               ; preds = %74
  %67 = icmp eq i64 %79, %65
  br i1 %67, label %80, label %68

68:                                               ; preds = %66, %64
  %69 = phi i64 [ 0, %64 ], [ %79, %66 ]
  %70 = getelementptr inbounds i32, i32* %10, i64 %69
  %71 = load i32, i32* %70, align 4
  %72 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %71) #8
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %84, label %74

74:                                               ; preds = %68
  %75 = getelementptr inbounds i32, i32* %15, i64 %69
  %76 = load i32, i32* %75, align 4
  %77 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %76) #8
  %78 = icmp eq i32 %77, 0
  %79 = add nuw nsw i64 %69, 1
  br i1 %78, label %84, label %66

80:                                               ; preds = %66, %63
  %81 = load i32 (%struct._cms_io_handler*, i32)*, i32 (%struct._cms_io_handler*, i32)** %59, align 8
  %82 = tail call i32 %81(%struct._cms_io_handler* %1, i32 %58) #8
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %36, %32, %40, %74, %68, %80, %57
  br label %85

85:                                               ; preds = %80, %84
  %86 = phi i32 [ 0, %84 ], [ 1, %80 ]
  %87 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %7, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %87, i8* nonnull %9) #8
  br label %88

88:                                               ; preds = %85, %12
  %89 = phi i8* [ %9, %12 ], [ %14, %85 ]
  %90 = phi i32 [ 0, %12 ], [ %86, %85 ]
  %91 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %7, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %91, i8* nonnull %89) #8
  br label %92

92:                                               ; preds = %88, %6
  %93 = phi i32 [ 0, %6 ], [ %90, %88 ]
  ret i32 %93
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @WriteMPECurve(%struct._cms_typehandler_struct* nocapture readnone, %struct._cms_io_handler*, i8* nocapture readonly, i32, i32) #0 {
  %6 = getelementptr inbounds i8, i8* %2, i64 8
  %7 = bitcast i8* %6 to %struct._cms_curve_struct***
  %8 = load %struct._cms_curve_struct**, %struct._cms_curve_struct*** %7, align 8
  %9 = zext i32 %3 to i64
  %10 = getelementptr inbounds %struct._cms_curve_struct*, %struct._cms_curve_struct** %8, i64 %9
  %11 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %10, align 8
  %12 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %11, i64 0, i32 2
  %13 = load %struct.cmsCurveSegment*, %struct.cmsCurveSegment** %12, align 8
  %14 = getelementptr inbounds %struct._cms_curve_struct, %struct._cms_curve_struct* %11, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 1668641382) #8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %119, label %18

18:                                               ; preds = %5
  %19 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 0) #8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %119, label %21

21:                                               ; preds = %18
  %22 = trunc i32 %15 to i16
  %23 = tail call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %1, i16 zeroext %22) #8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %119, label %25

25:                                               ; preds = %21
  %26 = tail call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %1, i16 zeroext 0) #8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %119, label %28

28:                                               ; preds = %25
  %29 = add i32 %15, -1
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %35, label %31

31:                                               ; preds = %28
  %32 = zext i32 %29 to i64
  br label %38

33:                                               ; preds = %38
  %34 = icmp eq i64 %44, %32
  br i1 %34, label %35, label %38

35:                                               ; preds = %33, %28
  %36 = load i32, i32* %14, align 8
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %119, label %45

38:                                               ; preds = %33, %31
  %39 = phi i64 [ 0, %31 ], [ %44, %33 ]
  %40 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %13, i64 %39, i32 1
  %41 = load float, float* %40, align 4
  %42 = tail call i32 @_cmsWriteFloat32Number(%struct._cms_io_handler* %1, float %41) #8
  %43 = icmp eq i32 %42, 0
  %44 = add nuw nsw i64 %39, 1
  br i1 %43, label %119, label %33

45:                                               ; preds = %35, %114
  %46 = phi i64 [ %115, %114 ], [ 0, %35 ]
  %47 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %13, i64 %46, i32 2
  %48 = load i32, i32* %47, align 8
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %82

50:                                               ; preds = %45
  %51 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 1935764838) #8
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %119, label %53

53:                                               ; preds = %50
  %54 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 0) #8
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %119, label %56

56:                                               ; preds = %53
  %57 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %13, i64 %46, i32 4
  %58 = load i32, i32* %57, align 8
  %59 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 %58) #8
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %119, label %61

61:                                               ; preds = %56
  %62 = load %struct.cmsCurveSegment*, %struct.cmsCurveSegment** %12, align 8
  %63 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %62, i64 %46, i32 4
  %64 = load i32, i32* %63, align 8
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %114, label %66

66:                                               ; preds = %61
  %67 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %13, i64 %46, i32 5
  br label %74

68:                                               ; preds = %74
  %69 = load %struct.cmsCurveSegment*, %struct.cmsCurveSegment** %12, align 8
  %70 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %69, i64 %46, i32 4
  %71 = load i32, i32* %70, align 8
  %72 = zext i32 %71 to i64
  %73 = icmp ult i64 %81, %72
  br i1 %73, label %74, label %114

74:                                               ; preds = %68, %66
  %75 = phi i64 [ 0, %66 ], [ %81, %68 ]
  %76 = load float*, float** %67, align 8
  %77 = getelementptr inbounds float, float* %76, i64 %75
  %78 = load float, float* %77, align 4
  %79 = tail call i32 @_cmsWriteFloat32Number(%struct._cms_io_handler* %1, float %78) #8
  %80 = icmp eq i32 %79, 0
  %81 = add nuw nsw i64 %75, 1
  br i1 %80, label %119, label %68

82:                                               ; preds = %45
  %83 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 1885434470) #8
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %119, label %85

85:                                               ; preds = %82
  %86 = tail call i32 @_cmsWriteUInt32Number(%struct._cms_io_handler* %1, i32 0) #8
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %119, label %88

88:                                               ; preds = %85
  %89 = load i32, i32* %47, align 8
  %90 = add nsw i32 %89, -6
  %91 = icmp ugt i32 %90, 2
  br i1 %91, label %119, label %92

92:                                               ; preds = %88
  %93 = trunc i32 %90 to i16
  %94 = tail call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %1, i16 zeroext %93) #8
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %119, label %96

96:                                               ; preds = %92
  %97 = tail call i32 @_cmsWriteUInt16Number(%struct._cms_io_handler* %1, i16 zeroext 0) #8
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %119, label %99

99:                                               ; preds = %96
  %100 = sext i32 %90 to i64
  %101 = getelementptr inbounds [3 x i32], [3 x i32]* @__const.WriteSegmentedCurve.ParamsByType, i64 0, i64 %100
  br label %106

102:                                              ; preds = %106
  %103 = load i32, i32* %101, align 4
  %104 = zext i32 %103 to i64
  %105 = icmp ult i64 %113, %104
  br i1 %105, label %106, label %114

106:                                              ; preds = %102, %99
  %107 = phi i64 [ 0, %99 ], [ %113, %102 ]
  %108 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %13, i64 %46, i32 3, i64 %107
  %109 = load double, double* %108, align 8
  %110 = fptrunc double %109 to float
  %111 = tail call i32 @_cmsWriteFloat32Number(%struct._cms_io_handler* %1, float %110) #8
  %112 = icmp eq i32 %111, 0
  %113 = add nuw nsw i64 %107, 1
  br i1 %112, label %119, label %102

114:                                              ; preds = %102, %68, %61
  %115 = add nuw nsw i64 %46, 1
  %116 = load i32, i32* %14, align 8
  %117 = zext i32 %116 to i64
  %118 = icmp ult i64 %115, %117
  br i1 %118, label %45, label %119

119:                                              ; preds = %38, %50, %53, %56, %82, %85, %88, %92, %96, %114, %106, %74, %5, %18, %21, %25, %35
  %120 = phi i32 [ 0, %25 ], [ 0, %21 ], [ 0, %18 ], [ 0, %5 ], [ 1, %35 ], [ 0, %74 ], [ 0, %106 ], [ 0, %96 ], [ 0, %92 ], [ 0, %88 ], [ 0, %85 ], [ 0, %82 ], [ 0, %56 ], [ 0, %53 ], [ 0, %50 ], [ 1, %114 ], [ 0, %38 ]
  ret i32 %120
}

declare i32 @_cmsWriteFloat32Number(%struct._cms_io_handler*, float) local_unnamed_addr #1

declare %struct._cmsStage_struct* @cmsStageDup(%struct._cmsStage_struct*) local_unnamed_addr #1

declare %struct._cmsStage_struct* @cmsStageAllocCLutFloatGranular(%struct._cmsContext_struct*, i32*, i32, i32, float*) local_unnamed_addr #1

declare i32 @cmsPipelineStageCount(%struct._cmsPipeline_struct*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal i32 @ReadSeqID(%struct._cms_typehandler_struct* nocapture readonly, %struct._cms_io_handler*, i8* nocapture readonly, i32, i32) #0 {
  %6 = getelementptr inbounds i8, i8* %2, i64 16
  %7 = bitcast i8* %6 to %struct.cmsPSEQDESC**
  %8 = load %struct.cmsPSEQDESC*, %struct.cmsPSEQDESC** %7, align 8
  %9 = zext i32 %3 to i64
  %10 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %1, i64 0, i32 5
  %11 = load i32 (%struct._cms_io_handler*, i8*, i32, i32)*, i32 (%struct._cms_io_handler*, i8*, i32, i32)** %10, align 8
  %12 = getelementptr inbounds %struct.cmsPSEQDESC, %struct.cmsPSEQDESC* %8, i64 %9, i32 4
  %13 = bitcast %union.cmsProfileID* %12 to i8*
  %14 = tail call i32 %11(%struct._cms_io_handler* %1, i8* %13, i32 16, i32 1) #8
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %21

16:                                               ; preds = %5
  %17 = getelementptr inbounds %struct.cmsPSEQDESC, %struct.cmsPSEQDESC* %8, i64 %9, i32 7
  %18 = tail call fastcc i32 @ReadEmbeddedText(%struct._cms_typehandler_struct* %0, %struct._cms_io_handler* %1, %struct._cms_MLU_struct** %17, i32 %4)
  %19 = icmp ne i32 %18, 0
  %20 = zext i1 %19 to i32
  br label %21

21:                                               ; preds = %16, %5
  %22 = phi i32 [ 0, %5 ], [ %20, %16 ]
  ret i32 %22
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @WriteSeqID(%struct._cms_typehandler_struct* nocapture readonly, %struct._cms_io_handler*, i8* nocapture readonly, i32, i32) #0 {
  %6 = getelementptr inbounds %struct._cms_io_handler, %struct._cms_io_handler* %1, i64 0, i32 9
  %7 = load i32 (%struct._cms_io_handler*, i32, i8*)*, i32 (%struct._cms_io_handler*, i32, i8*)** %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 16
  %9 = bitcast i8* %8 to %struct.cmsPSEQDESC**
  %10 = load %struct.cmsPSEQDESC*, %struct.cmsPSEQDESC** %9, align 8
  %11 = zext i32 %3 to i64
  %12 = getelementptr inbounds %struct.cmsPSEQDESC, %struct.cmsPSEQDESC* %10, i64 %11, i32 4
  %13 = bitcast %union.cmsProfileID* %12 to i8*
  %14 = tail call i32 %7(%struct._cms_io_handler* %1, i32 16, i8* %13) #8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %39, label %16

16:                                               ; preds = %5
  %17 = load %struct.cmsPSEQDESC*, %struct.cmsPSEQDESC** %9, align 8
  %18 = getelementptr inbounds %struct.cmsPSEQDESC, %struct.cmsPSEQDESC* %17, i64 %11, i32 7
  %19 = load %struct._cms_MLU_struct*, %struct._cms_MLU_struct** %18, align 8
  %20 = getelementptr inbounds %struct._cms_typehandler_struct, %struct._cms_typehandler_struct* %0, i64 0, i32 6
  %21 = load i32, i32* %20, align 8
  %22 = icmp ult i32 %21, 67108864
  br i1 %22, label %23, label %29

23:                                               ; preds = %16
  %24 = tail call i32 @_cmsWriteTypeBase(%struct._cms_io_handler* %1, i32 1684370275) #8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %38, label %26

26:                                               ; preds = %23
  %27 = bitcast %struct._cms_MLU_struct* %19 to i8*
  %28 = tail call i32 @Type_Text_Description_Write(%struct._cms_typehandler_struct* %0, %struct._cms_io_handler* %1, i8* %27, i32 1) #8
  br label %35

29:                                               ; preds = %16
  %30 = tail call i32 @_cmsWriteTypeBase(%struct._cms_io_handler* %1, i32 1835824483) #8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %38, label %32

32:                                               ; preds = %29
  %33 = bitcast %struct._cms_MLU_struct* %19 to i8*
  %34 = tail call i32 @Type_MLU_Write(%struct._cms_typehandler_struct* %0, %struct._cms_io_handler* %1, i8* %33, i32 1) #8
  br label %35

35:                                               ; preds = %26, %32
  %36 = phi i32 [ %28, %26 ], [ %34, %32 ]
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %29, %23, %35
  br label %39

39:                                               ; preds = %38, %35, %5
  %40 = phi i32 [ 0, %5 ], [ 0, %38 ], [ 1, %35 ]
  ret i32 %40
}

declare i8* @cmsDictAlloc(%struct._cmsContext_struct*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @AllocArray(%struct._cmsContext_struct*, %struct._cmsDICarray* nocapture, i32, i32) unnamed_addr #0 {
  %5 = bitcast %struct._cmsDICarray* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 96, i1 false)
  %6 = tail call i8* @_cmsCalloc(%struct._cmsContext_struct* %0, i32 %2, i32 4) #8
  %7 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %1, i64 0, i32 0, i32 1
  %8 = bitcast i32** %7 to i8**
  store i8* %6, i8** %8, align 8
  %9 = icmp eq i8* %6, null
  %10 = bitcast i8* %6 to i32*
  br i1 %9, label %66, label %11

11:                                               ; preds = %4
  %12 = tail call i8* @_cmsCalloc(%struct._cmsContext_struct* %0, i32 %2, i32 4) #8
  %13 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %1, i64 0, i32 0, i32 2
  %14 = bitcast i32** %13 to i8**
  store i8* %12, i8** %14, align 8
  %15 = icmp eq i8* %12, null
  br i1 %15, label %16, label %18

16:                                               ; preds = %11
  %17 = load i8*, i8** %8, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %0, i8* %17) #8
  br label %63

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %1, i64 0, i32 0, i32 0
  store %struct._cmsContext_struct* %0, %struct._cmsContext_struct** %19, align 8
  %20 = tail call i8* @_cmsCalloc(%struct._cmsContext_struct* %0, i32 %2, i32 4) #8
  %21 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %1, i64 0, i32 1, i32 1
  %22 = bitcast i32** %21 to i8**
  store i8* %20, i8** %22, align 8
  %23 = icmp eq i8* %20, null
  br i1 %23, label %63, label %24

24:                                               ; preds = %18
  %25 = tail call i8* @_cmsCalloc(%struct._cmsContext_struct* %0, i32 %2, i32 4) #8
  %26 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %1, i64 0, i32 1, i32 2
  %27 = bitcast i32** %26 to i8**
  store i8* %25, i8** %27, align 8
  %28 = icmp eq i8* %25, null
  br i1 %28, label %29, label %31

29:                                               ; preds = %24
  %30 = load i8*, i8** %22, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %0, i8* %30) #8
  br label %63

31:                                               ; preds = %24
  %32 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %1, i64 0, i32 1, i32 0
  store %struct._cmsContext_struct* %0, %struct._cmsContext_struct** %32, align 8
  %33 = icmp ugt i32 %3, 16
  br i1 %33, label %34, label %136

34:                                               ; preds = %31
  %35 = tail call i8* @_cmsCalloc(%struct._cmsContext_struct* %0, i32 %2, i32 4) #8
  %36 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %1, i64 0, i32 2, i32 1
  %37 = bitcast i32** %36 to i8**
  store i8* %35, i8** %37, align 8
  %38 = icmp eq i8* %35, null
  br i1 %38, label %63, label %39

39:                                               ; preds = %34
  %40 = tail call i8* @_cmsCalloc(%struct._cmsContext_struct* %0, i32 %2, i32 4) #8
  %41 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %1, i64 0, i32 2, i32 2
  %42 = bitcast i32** %41 to i8**
  store i8* %40, i8** %42, align 8
  %43 = icmp eq i8* %40, null
  br i1 %43, label %44, label %46

44:                                               ; preds = %39
  %45 = load i8*, i8** %37, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %0, i8* %45) #8
  br label %63

46:                                               ; preds = %39
  %47 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %1, i64 0, i32 2, i32 0
  store %struct._cmsContext_struct* %0, %struct._cmsContext_struct** %47, align 8
  %48 = icmp ugt i32 %3, 24
  br i1 %48, label %49, label %136

49:                                               ; preds = %46
  %50 = tail call i8* @_cmsCalloc(%struct._cmsContext_struct* %0, i32 %2, i32 4) #8
  %51 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %1, i64 0, i32 3, i32 1
  %52 = bitcast i32** %51 to i8**
  store i8* %50, i8** %52, align 8
  %53 = icmp eq i8* %50, null
  br i1 %53, label %63, label %54

54:                                               ; preds = %49
  %55 = tail call i8* @_cmsCalloc(%struct._cmsContext_struct* %0, i32 %2, i32 4) #8
  %56 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %1, i64 0, i32 3, i32 2
  %57 = bitcast i32** %56 to i8**
  store i8* %55, i8** %57, align 8
  %58 = icmp eq i8* %55, null
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  %60 = load i8*, i8** %52, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %0, i8* %60) #8
  br label %63

61:                                               ; preds = %54
  %62 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %1, i64 0, i32 3, i32 0
  store %struct._cmsContext_struct* %0, %struct._cmsContext_struct** %62, align 8
  br label %136

63:                                               ; preds = %16, %29, %18, %44, %34, %59, %49
  %64 = load i32*, i32** %7, align 8
  %65 = bitcast i32* %64 to i8*
  br label %66

66:                                               ; preds = %63, %4
  %67 = phi i8* [ %65, %63 ], [ %6, %4 ]
  %68 = phi i32* [ %64, %63 ], [ %10, %4 ]
  %69 = icmp eq i32* %68, null
  br i1 %69, label %82, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %1, i64 0, i32 0, i32 0
  %72 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %71, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %72, i8* nonnull %67) #8
  %73 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %1, i64 0, i32 0, i32 2
  %74 = load i32*, i32** %73, align 8
  %75 = icmp eq i32* %74, null
  br i1 %75, label %80, label %76

76:                                               ; preds = %70
  %77 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %1, i64 0, i32 0, i32 0
  %78 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %77, align 8
  %79 = bitcast i32* %74 to i8*
  tail call void @_cmsFree(%struct._cmsContext_struct* %78, i8* nonnull %79) #8
  br label %80

80:                                               ; preds = %70, %76
  %81 = bitcast i32** %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 16, i1 false) #8
  br label %82

82:                                               ; preds = %80, %66
  %83 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %1, i64 0, i32 1, i32 1
  %84 = load i32*, i32** %83, align 8
  %85 = icmp eq i32* %84, null
  br i1 %85, label %100, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %1, i64 0, i32 1
  %88 = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %87, i64 0, i32 0
  %89 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %88, align 8
  %90 = bitcast i32* %84 to i8*
  tail call void @_cmsFree(%struct._cmsContext_struct* %89, i8* nonnull %90) #8
  %91 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %1, i64 0, i32 1, i32 2
  %92 = load i32*, i32** %91, align 8
  %93 = icmp eq i32* %92, null
  br i1 %93, label %98, label %94

94:                                               ; preds = %86
  %95 = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %87, i64 0, i32 0
  %96 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %95, align 8
  %97 = bitcast i32* %92 to i8*
  tail call void @_cmsFree(%struct._cmsContext_struct* %96, i8* nonnull %97) #8
  br label %98

98:                                               ; preds = %86, %94
  %99 = bitcast i32** %83 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %99, i8 0, i64 16, i1 false) #8
  br label %100

100:                                              ; preds = %98, %82
  %101 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %1, i64 0, i32 2, i32 1
  %102 = load i32*, i32** %101, align 8
  %103 = icmp eq i32* %102, null
  br i1 %103, label %118, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %1, i64 0, i32 2
  %106 = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %105, i64 0, i32 0
  %107 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %106, align 8
  %108 = bitcast i32* %102 to i8*
  tail call void @_cmsFree(%struct._cmsContext_struct* %107, i8* nonnull %108) #8
  %109 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %1, i64 0, i32 2, i32 2
  %110 = load i32*, i32** %109, align 8
  %111 = icmp eq i32* %110, null
  br i1 %111, label %116, label %112

112:                                              ; preds = %104
  %113 = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %105, i64 0, i32 0
  %114 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %113, align 8
  %115 = bitcast i32* %110 to i8*
  tail call void @_cmsFree(%struct._cmsContext_struct* %114, i8* nonnull %115) #8
  br label %116

116:                                              ; preds = %104, %112
  %117 = bitcast i32** %101 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %117, i8 0, i64 16, i1 false) #8
  br label %118

118:                                              ; preds = %116, %100
  %119 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %1, i64 0, i32 3, i32 1
  %120 = load i32*, i32** %119, align 8
  %121 = icmp eq i32* %120, null
  br i1 %121, label %136, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %1, i64 0, i32 3
  %124 = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %123, i64 0, i32 0
  %125 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %124, align 8
  %126 = bitcast i32* %120 to i8*
  tail call void @_cmsFree(%struct._cmsContext_struct* %125, i8* nonnull %126) #8
  %127 = getelementptr inbounds %struct._cmsDICarray, %struct._cmsDICarray* %1, i64 0, i32 3, i32 2
  %128 = load i32*, i32** %127, align 8
  %129 = icmp eq i32* %128, null
  br i1 %129, label %134, label %130

130:                                              ; preds = %122
  %131 = getelementptr inbounds %struct._cmsDICelem, %struct._cmsDICelem* %123, i64 0, i32 0
  %132 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %131, align 8
  %133 = bitcast i32* %128 to i8*
  tail call void @_cmsFree(%struct._cmsContext_struct* %132, i8* nonnull %133) #8
  br label %134

134:                                              ; preds = %122, %130
  %135 = bitcast i32** %119 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %135, i8 0, i64 16, i1 false) #8
  br label %136

136:                                              ; preds = %31, %134, %118, %61, %46
  %137 = phi i32 [ 1, %61 ], [ 1, %46 ], [ 0, %118 ], [ 0, %134 ], [ 1, %31 ]
  ret i32 %137
}

declare i32 @cmsDictAddEntry(i8*, i32*, i32*, %struct._cms_MLU_struct*, %struct._cms_MLU_struct*) local_unnamed_addr #1

declare void @cmsDictFree(i8*) local_unnamed_addr #1

declare %struct._cmsDICTentry_struct* @cmsDictGetEntryList(i8*) local_unnamed_addr #1

declare %struct._cmsDICTentry_struct* @cmsDictNextEntry(%struct._cmsDICTentry_struct*) local_unnamed_addr #1

declare i8* @cmsDictDup(i8*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare double @pow(double, double) local_unnamed_addr #5

declare void @cmsFreeToneCurveTriple(%struct._cms_curve_struct**) local_unnamed_addr #1

declare i32 @cmsGetToneCurveParametricType(%struct._cms_curve_struct*) local_unnamed_addr #1

declare float @cmsEvalToneCurveFloat(%struct._cms_curve_struct*, float) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @DecideLUTtypeA2B(double, i8* nocapture readonly) #6 {
  %3 = fcmp olt double %0, 4.000000e+00
  br i1 %3, label %4, label %10

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 64
  %6 = bitcast i8* %5 to i32*
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = select i1 %8, i32 1835430962, i32 1835430961
  br label %10

10:                                               ; preds = %2, %4
  %11 = phi i32 [ %9, %4 ], [ 1832993312, %2 ]
  ret i32 %11
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @DecideLUTtypeB2A(double, i8* nocapture readonly) #6 {
  %3 = fcmp olt double %0, 4.000000e+00
  br i1 %3, label %4, label %10

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 64
  %6 = bitcast i8* %5 to i32*
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = select i1 %8, i32 1835430962, i32 1835430961
  br label %10

10:                                               ; preds = %2, %4
  %11 = phi i32 [ %9, %4 ], [ 1833058592, %2 ]
  ret i32 %11
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @DecideXYZtype(double, i8* nocapture readnone) #7 {
  ret i32 1482250784
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @DecideCurveType(double, i8* nocapture readonly) #6 {
  %3 = fcmp olt double %0, 4.000000e+00
  br i1 %3, label %19, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 8
  %6 = bitcast i8* %5 to i32*
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %19

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 16
  %11 = bitcast i8* %10 to %struct.cmsCurveSegment**
  %12 = load %struct.cmsCurveSegment*, %struct.cmsCurveSegment** %11, align 8
  %13 = getelementptr inbounds %struct.cmsCurveSegment, %struct.cmsCurveSegment* %12, i64 0, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = icmp slt i32 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %9
  %17 = icmp sgt i32 %14, 5
  %18 = select i1 %17, i32 1668641398, i32 1885434465
  br label %19

19:                                               ; preds = %16, %9, %4, %2
  %20 = phi i32 [ 1668641398, %2 ], [ 1668641398, %4 ], [ 1668641398, %9 ], [ %18, %16 ]
  ret i32 %20
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @DecideTextType(double, i8* nocapture readnone) #7 {
  %3 = fcmp ult double %0, 4.000000e+00
  %4 = select i1 %3, i32 1952807028, i32 1835824483
  ret i32 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @DecideTextDescType(double, i8* nocapture readnone) #7 {
  %3 = fcmp ult double %0, 4.000000e+00
  %4 = select i1 %3, i32 1684370275, i32 1835824483
  ret i32 %4
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = !{!5}
!5 = distinct !{!5, !6}
!6 = distinct !{!6, !"LVerDomain"}
!7 = !{!8}
!8 = distinct !{!8, !6}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.isvectorized", i32 1}
!11 = distinct !{!11, !10}
!12 = !{i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32, i32)* @ReadMPECurve, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32, i32)* @ReadMPEElem, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32, i32)* @ReadSeqID}
!13 = distinct !{!13, !3}
!14 = !{i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32, i32)* @WriteMPECurve, i32 (%struct._cms_typehandler_struct*, %struct._cms_io_handler*, i8*, i32, i32)* @WriteSeqID}
