; ModuleID = '../../ui/gfx/image/image_skia_rep_default.cc'
source_filename = "../../ui/gfx/image/image_skia_rep_default.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%"class.cc::DisplayItemList" = type <{ %"class.base::RefCountedThreadSafe.14", [4 x i8], %"class.cc::RTree", %"class.cc::DiscardableImageMap", %"class.cc::PaintOpBuffer", %"class.std::__1::vector.71", %"class.std::__1::vector.78", %"class.std::__1::vector.85", i32, [4 x i8] }>
%"class.base::RefCountedThreadSafe.14" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.cc::RTree" = type <{ i64, %"struct.cc::RTree<unsigned long>::Branch", %"class.std::__1::vector", i8, [7 x i8] }>
%"struct.cc::RTree<unsigned long>::Branch" = type { %"struct.cc::RTree<unsigned long>::Node"*, i64, %"class.gfx::Rect" }
%"struct.cc::RTree<unsigned long>::Node" = type opaque
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::RTree<unsigned long>::Node"*, %"struct.cc::RTree<unsigned long>::Node"*, %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.cc::RTree<unsigned long>::Node"* }
%"class.cc::DiscardableImageMap" = type { %"class.base::flat_map", %"class.std::__1::vector.25", %"class.base::flat_map.39", i8, i8, [6 x i8], %"class.cc::RTree.49", %"class.std::__1::vector.63" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.18" }
%"class.std::__1::vector.18" = type { %"class.std::__1::__vector_base.19" }
%"class.std::__1::__vector_base.19" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.20" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"*, %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"*, %"class.std::__1::__compressed_pair.34" }
%"struct.cc::DiscardableImageMap::AnimatedImageMetadata" = type { i32, i32, %"class.std::__1::vector.27", i32, i32 }
%"class.std::__1::vector.27" = type { %"class.std::__1::__vector_base.28" }
%"class.std::__1::__vector_base.28" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.29" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"struct.cc::FrameMetadata"* }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"* }
%"class.base::flat_map.39" = type { %"class.base::internal::flat_tree.40" }
%"class.base::internal::flat_tree.40" = type { %"class.std::__1::vector.41" }
%"class.std::__1::vector.41" = type { %"class.std::__1::__vector_base.42" }
%"class.std::__1::__vector_base.42" = type { %"struct.std::__1::pair.43"*, %"struct.std::__1::pair.43"*, %"class.std::__1::__compressed_pair.44" }
%"struct.std::__1::pair.43" = type { i32, i32 }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"struct.std::__1::pair.43"* }
%"class.cc::RTree.49" = type <{ i64, %"struct.cc::RTree<cc::DrawImage>::Branch", %"class.std::__1::vector.55", i8, [7 x i8] }>
%"struct.cc::RTree<cc::DrawImage>::Branch" = type { %"struct.cc::RTree<cc::DrawImage>::Node"*, %"class.cc::DrawImage", %"class.gfx::Rect" }
%"struct.cc::RTree<cc::DrawImage>::Node" = type opaque
%"class.cc::DrawImage" = type <{ %"class.cc::PaintImage", i8, [3 x i8], %struct.SkIRect, i32, %struct.SkSize, i8, [7 x i8], %"class.absl::optional", %"class.absl::optional.50", float, [4 x i8] }>
%"class.cc::PaintImage" = type { %class.sk_sp, %class.sk_sp.7, %"class.gfx::Rect", i32, %class.sk_sp.9, %class.sk_sp.10, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp, %class.scoped_refptr }
%class.sk_sp.7 = type { %"class.cc::PaintOpBuffer"* }
%class.sk_sp.9 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type opaque
%class.sk_sp.10 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type opaque
%class.sk_sp = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.1, i32, i32 }
%class.sk_sp.1 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.scoped_refptr = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkSize = type { float, float }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i64 }
%"class.absl::optional.50" = type { %"class.absl::optional_internal::optional_data.51" }
%"class.absl::optional_internal::optional_data.51" = type { %"class.absl::optional_internal::optional_data_base.52" }
%"class.absl::optional_internal::optional_data_base.52" = type { %"class.absl::optional_internal::optional_data_dtor_base.53" }
%"class.absl::optional_internal::optional_data_dtor_base.53" = type { i8, %union.anon.54 }
%union.anon.54 = type { %"class.gfx::ColorSpace" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.std::__1::vector.55" = type { %"class.std::__1::__vector_base.56" }
%"class.std::__1::__vector_base.56" = type { %"struct.cc::RTree<cc::DrawImage>::Node"*, %"struct.cc::RTree<cc::DrawImage>::Node"*, %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"struct.cc::RTree<cc::DrawImage>::Node"* }
%"class.std::__1::vector.63" = type { %"class.std::__1::__vector_base.64" }
%"class.std::__1::__vector_base.64" = type { %"struct.std::__1::pair.65"*, %"struct.std::__1::pair.65"*, %"class.std::__1::__compressed_pair.66" }
%"struct.std::__1::pair.65" = type opaque
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.std::__1::pair.65"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.std::__1::vector.71" = type { %"class.std::__1::__vector_base.72" }
%"class.std::__1::__vector_base.72" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.gfx::Rect"* }
%"class.std::__1::vector.78" = type { %"class.std::__1::__vector_base.79" }
%"class.std::__1::__vector_base.79" = type { i64*, i64*, %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { i64* }
%"class.std::__1::vector.85" = type { %"class.std::__1::__vector_base.86" }
%"class.std::__1::__vector_base.86" = type { %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"class.std::__1::__compressed_pair.87" }
%"struct.cc::DisplayItemList::PairedBeginInfo" = type { i64, i64 }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"struct.cc::DisplayItemList::PairedBeginInfo"* }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.97 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.98 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%struct.SkRect = type { float, float, float, float }
%"class.gfx::ImageSkiaRep" = type <{ %"class.cc::PaintImage", %class.sk_sp.7, i32, %"class.gfx::Size", [4 x i8], %class.SkBitmap, float, [4 x i8] }>
%class.SkBitmap = type { %class.sk_sp.11, %class.SkPixmap, %class.sk_sp.12 }
%class.sk_sp.11 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%class.sk_sp.12 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%struct.SkSamplingOptions = type { i8, %struct.SkCubicResampler, i32, i32 }
%struct.SkCubicResampler = type { float, float }
%"class.cc::RecordPaintCanvas" = type { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, %"class.absl::optional.92", %struct.SkRect }
%"class.absl::optional.92" = type { %"class.absl::optional_internal::optional_data.93" }
%"class.absl::optional_internal::optional_data.93" = type { %"class.absl::optional_internal::optional_data_base.94" }
%"class.absl::optional_internal::optional_data_base.94" = type { %"class.absl::optional_internal::optional_data_dtor_base.95" }
%"class.absl::optional_internal::optional_data_dtor_base.95" = type { i8, %union.anon.96 }
%union.anon.96 = type { %class.SkNoDrawCanvas }
%class.SkNoDrawCanvas = type { %class.SkCanvasVirtualEnforcer }
%class.SkCanvasVirtualEnforcer = type { %class.SkCanvas }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.97, [384 x i64], %class.sk_sp.98, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.99", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.103" }
%"class.cc::PaintFlags" = type <{ %class.sk_sp.113, %class.sk_sp.114, %class.sk_sp.144, %class.sk_sp.145, %class.sk_sp.146, %class.sk_sp.147, i32, float, float, i32, %union.anon.148, [4 x i8] }>
%class.sk_sp.113 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.sk_sp.114 = type { %"class.cc::PaintShader"* }
%"class.cc::PaintShader" = type <{ %class.SkRefCnt.base, i8, [3 x i8], i32, float, float, i32, i32, i32, i8, [3 x i8], %"class.absl::optional.115", %struct.SkPoint, %struct.SkRect, %struct.SkPoint, %struct.SkPoint, float, float, %"class.cc::PaintImage", %class.sk_sp.7, i32, %"class.absl::optional.120", %"class.std::__1::vector.125", %"class.std::__1::vector.132", %class.sk_sp.139, %class.sk_sp, i32, [4 x i8] }>
%"class.absl::optional.115" = type { %"class.absl::optional_internal::optional_data.116" }
%"class.absl::optional_internal::optional_data.116" = type { %"class.absl::optional_internal::optional_data_base.117" }
%"class.absl::optional_internal::optional_data_base.117" = type { %"class.absl::optional_internal::optional_data_dtor_base.118" }
%"class.absl::optional_internal::optional_data_dtor_base.118" = type { i8, %union.anon.119 }
%union.anon.119 = type { %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkPoint = type { float, float }
%"class.absl::optional.120" = type { %"class.absl::optional_internal::optional_data.121" }
%"class.absl::optional_internal::optional_data.121" = type { %"class.absl::optional_internal::optional_data_base.122" }
%"class.absl::optional_internal::optional_data_base.122" = type { %"class.absl::optional_internal::optional_data_dtor_base.123" }
%"class.absl::optional_internal::optional_data_dtor_base.123" = type { i8, %union.anon.124 }
%union.anon.124 = type { %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector.125" = type { %"class.std::__1::__vector_base.126" }
%"class.std::__1::__vector_base.126" = type { i32*, i32*, %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { i32* }
%"class.std::__1::vector.132" = type { %"class.std::__1::__vector_base.133" }
%"class.std::__1::__vector_base.133" = type { float*, float*, %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { float* }
%class.sk_sp.139 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.140", [7 x i8] }>
%"struct.std::__1::atomic.140" = type { %"struct.std::__1::__atomic_base.141" }
%"struct.std::__1::__atomic_base.141" = type { %"struct.std::__1::__cxx_atomic_impl.142" }
%"struct.std::__1::__cxx_atomic_impl.142" = type { %"struct.std::__1::__cxx_atomic_base_impl.143" }
%"struct.std::__1::__cxx_atomic_base_impl.143" = type { i8 }
%class.sk_sp.144 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.145 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.146 = type { %class.SkDrawLooper* }
%class.SkDrawLooper = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.147 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type opaque
%union.anon.148 = type { i32 }

$_ZZN7logging15CheckOpValueStrI11SkColorTypeEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS2_14remove_pointerIS4_E4typeEEE5valueEPcE4typeES6_ENUlRNS2_13basic_ostreamIcNS2_11char_traitsIcEEEEPKvE_8__invokeESH_SJ_ = comdat any

@.str = private unnamed_addr constant [40 x i8] c"bitmap_.colorType() == kN32_SkColorType\00", align 1
@.str.1 = private unnamed_addr constant [45 x i8] c"../../ui/gfx/image/image_skia_rep_default.cc\00", align 1
@__const._ZNK3gfx12ImageSkiaRep14GetPaintRecordEv.record_canvas = private unnamed_addr constant { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, { { { { i8, [7 x i8], { { { { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.97, [384 x i64], %class.sk_sp.98, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.99", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.103" } } } } } } } }, %struct.SkRect } { %"class.cc::PaintCanvas" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %"class.printing::MetafileSkia"* inttoptr (i64 -6148914691236517206 to %"class.printing::MetafileSkia"*), %"class.paint_preview::PaintPreviewTracker"* inttoptr (i64 -6148914691236517206 to %"class.paint_preview::PaintPreviewTracker"*) }, %"class.cc::DisplayItemList"* inttoptr (i64 -6148914691236517206 to %"class.cc::DisplayItemList"*), { { { { i8, [7 x i8], { { { { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.97, [384 x i64], %class.sk_sp.98, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.99", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.103" } } } } } } } } { { { { i8, [7 x i8], { { { { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.97, [384 x i64], %class.sk_sp.98, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.99", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.103" } } } } } } } { { { i8, [7 x i8], { { { { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.97, [384 x i64], %class.sk_sp.98, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.99", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.103" } } } } } } { { i8, [7 x i8], { { { { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.97, [384 x i64], %class.sk_sp.98, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.99", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.103" } } } } } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { { { { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.97, [384 x i64], %class.sk_sp.98, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.99", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.103" } } } } { { { { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.97, [384 x i64], %class.sk_sp.98, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.99", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.103" } } } { { { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.97, [384 x i64], %class.sk_sp.98, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.99", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.103" } } { { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.97, [384 x i64], %class.sk_sp.98, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.99", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.103" } { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %class.SkDeque { i8* inttoptr (i64 -6148914691236517206 to i8*), i8* inttoptr (i64 -6148914691236517206 to i8*), %"struct.SkDeque::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDeque::Block"*), %"struct.SkDeque::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDeque::Block"*), i64 -6148914691236517206, i8* inttoptr (i64 -6148914691236517206 to i8*), i32 -1431655766, i32 -1431655766 }, %"class.SkCanvas::MCRec"* inttoptr (i64 -6148914691236517206 to %"class.SkCanvas::MCRec"*), %class.sk_sp.97 { %class.SkMarkerStack* inttoptr (i64 -6148914691236517206 to %class.SkMarkerStack*) }, [384 x i64] [i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206], %class.sk_sp.98 { %class.SkBaseDevice* inttoptr (i64 -6148914691236517206 to %class.SkBaseDevice*) }, %class.SkSurfaceProps { i32 -1431655766, i32 -1431655766 }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::unique_ptr.99" { %"class.std::__1::__compressed_pair.100" { %"struct.std::__1::__compressed_pair_elem.101" { %class.SkRasterHandleAllocator* inttoptr (i64 -6148914691236517206 to %class.SkRasterHandleAllocator*) } } }, %class.SkSurface_Base* inttoptr (i64 -6148914691236517206 to %class.SkSurface_Base*), %struct.SkIRect { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 }, %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.std::__1::unique_ptr.103" { %"class.std::__1::__compressed_pair.104" { %"struct.std::__1::__compressed_pair_elem.105" { %class.SkGlyphRunBuilder* inttoptr (i64 -6148914691236517206 to %class.SkGlyphRunBuilder*) } } } } } } } } } } }, %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, align 8
@__const._ZNK3gfx12ImageSkiaRep9GetBitmapEv.canvas = private unnamed_addr constant { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.97, [384 x i64], %class.sk_sp.98, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.99", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.103" } { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %class.SkDeque { i8* inttoptr (i64 -6148914691236517206 to i8*), i8* inttoptr (i64 -6148914691236517206 to i8*), %"struct.SkDeque::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDeque::Block"*), %"struct.SkDeque::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDeque::Block"*), i64 -6148914691236517206, i8* inttoptr (i64 -6148914691236517206 to i8*), i32 -1431655766, i32 -1431655766 }, %"class.SkCanvas::MCRec"* inttoptr (i64 -6148914691236517206 to %"class.SkCanvas::MCRec"*), %class.sk_sp.97 { %class.SkMarkerStack* inttoptr (i64 -6148914691236517206 to %class.SkMarkerStack*) }, [384 x i64] [i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206], %class.sk_sp.98 { %class.SkBaseDevice* inttoptr (i64 -6148914691236517206 to %class.SkBaseDevice*) }, %class.SkSurfaceProps { i32 -1431655766, i32 -1431655766 }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::unique_ptr.99" { %"class.std::__1::__compressed_pair.100" { %"struct.std::__1::__compressed_pair_elem.101" { %class.SkRasterHandleAllocator* inttoptr (i64 -6148914691236517206 to %class.SkRasterHandleAllocator*) } } }, %class.SkSurface_Base* inttoptr (i64 -6148914691236517206 to %class.SkSurface_Base*), %struct.SkIRect { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 }, %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.std::__1::unique_ptr.103" { %"class.std::__1::__compressed_pair.104" { %"struct.std::__1::__compressed_pair_elem.105" { %class.SkGlyphRunBuilder* inttoptr (i64 -6148914691236517206 to %class.SkGlyphRunBuilder*) } } } }, align 8

@_ZN3gfx12ImageSkiaRepC1Ev = hidden unnamed_addr alias void (%"class.gfx::ImageSkiaRep"*), void (%"class.gfx::ImageSkiaRep"*)* @_ZN3gfx12ImageSkiaRepC2Ev
@_ZN3gfx12ImageSkiaRepC1ERKNS_4SizeEf = hidden unnamed_addr alias void (%"class.gfx::ImageSkiaRep"*, %"class.gfx::Size"*, float), void (%"class.gfx::ImageSkiaRep"*, %"class.gfx::Size"*, float)* @_ZN3gfx12ImageSkiaRepC2ERKNS_4SizeEf
@_ZN3gfx12ImageSkiaRepC1ERK8SkBitmapf = hidden unnamed_addr alias void (%"class.gfx::ImageSkiaRep"*, %class.SkBitmap*, float), void (%"class.gfx::ImageSkiaRep"*, %class.SkBitmap*, float)* @_ZN3gfx12ImageSkiaRepC2ERK8SkBitmapf
@_ZN3gfx12ImageSkiaRepC1E5sk_spIN2cc13PaintOpBufferEERKNS_4SizeEf = hidden unnamed_addr alias void (%"class.gfx::ImageSkiaRep"*, %class.sk_sp.7*, %"class.gfx::Size"*, float), void (%"class.gfx::ImageSkiaRep"*, %class.sk_sp.7*, %"class.gfx::Size"*, float)* @_ZN3gfx12ImageSkiaRepC2E5sk_spIN2cc13PaintOpBufferEERKNS_4SizeEf
@_ZN3gfx12ImageSkiaRepC1ERKS0_ = hidden unnamed_addr alias void (%"class.gfx::ImageSkiaRep"*, %"class.gfx::ImageSkiaRep"*), void (%"class.gfx::ImageSkiaRep"*, %"class.gfx::ImageSkiaRep"*)* @_ZN3gfx12ImageSkiaRepC2ERKS0_
@_ZN3gfx12ImageSkiaRepD1Ev = hidden unnamed_addr alias void (%"class.gfx::ImageSkiaRep"*), void (%"class.gfx::ImageSkiaRep"*)* @_ZN3gfx12ImageSkiaRepD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx12ImageSkiaRepC2Ev(%"class.gfx::ImageSkiaRep"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %0, i64 0, i32 0
  tail call void @_ZN2cc10PaintImageC1Ev(%"class.cc::PaintImage"* %2) #8
  %3 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %0, i64 0, i32 1, i32 0
  store %"class.cc::PaintOpBuffer"* null, %"class.cc::PaintOpBuffer"** %3, align 8
  %4 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %0, i64 0, i32 2
  store i32 1, i32* %4, align 8
  %5 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %0, i64 0, i32 3, i32 0
  store i32 0, i32* %5, align 4
  %6 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %0, i64 0, i32 3, i32 1
  store i32 0, i32* %6, align 4
  %7 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %0, i64 0, i32 5
  tail call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* %7) #8
  %8 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %0, i64 0, i32 6
  store float 0.000000e+00, float* %8, align 8
  ret void
}

declare void @_ZN2cc10PaintImageC1Ev(%"class.cc::PaintImage"*) unnamed_addr #1

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx12ImageSkiaRepC2ERKNS_4SizeEf(%"class.gfx::ImageSkiaRep"*, %"class.gfx::Size"* nocapture readonly dereferenceable(8), float) unnamed_addr #0 align 2 {
  %4 = alloca %"class.cc::PaintImage", align 8
  %5 = alloca %class.SkBitmap, align 8
  %6 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %0, i64 0, i32 0
  tail call void @_ZN2cc10PaintImageC1Ev(%"class.cc::PaintImage"* %6) #8
  %7 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %0, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %0, i64 0, i32 3, i32 0
  %9 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %0, i64 0, i32 3, i32 1
  %10 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %0, i64 0, i32 5
  %11 = bitcast %"class.cc::PaintOpBuffer"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 20, i1 false)
  tail call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* %10) #8
  %12 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %0, i64 0, i32 6
  store float %2, float* %12, align 8
  %13 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = sitofp i32 %14 to float
  %16 = fcmp oeq float %2, 0.000000e+00
  %17 = select i1 %16, float 1.000000e+00, float %2
  %18 = fmul float %17, %15
  %19 = fptosi float %18 to i32
  %20 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = sitofp i32 %21 to float
  %23 = fmul float %17, %22
  %24 = fptosi float %23 to i32
  tail call void @_ZN8SkBitmap14allocN32PixelsEiib(%class.SkBitmap* %10, i32 %19, i32 %24, i1 zeroext false) #8
  tail call void @_ZNK8SkBitmap10eraseColorEj(%class.SkBitmap* %10, i32 -65536) #8
  tail call void @_ZN8SkBitmap12setImmutableEv(%class.SkBitmap* %10) #8
  %25 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %0, i64 0, i32 5, i32 1, i32 2, i32 1, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %0, i64 0, i32 5, i32 1, i32 2, i32 1, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = icmp sgt i32 %26, 0
  %30 = select i1 %29, i32 %26, i32 0
  store i32 %30, i32* %8, align 4
  %31 = icmp sgt i32 %28, 0
  %32 = select i1 %31, i32 %28, i32 0
  store i32 %32, i32* %9, align 4
  %33 = bitcast %"class.cc::PaintImage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %33) #8
  call void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap* nonnull %5, %class.SkBitmap* dereferenceable(56) %10) #8
  call void @_ZN2cc10PaintImage16CreateFromBitmapE8SkBitmap(%"class.cc::PaintImage"* nonnull sret %4, %class.SkBitmap* nonnull %5) #8
  %34 = call dereferenceable(104) %"class.cc::PaintImage"* @_ZN2cc10PaintImageaSEOS0_(%"class.cc::PaintImage"* %6, %"class.cc::PaintImage"* nonnull dereferenceable(104) %4) #8
  call void @_ZN2cc10PaintImageD1Ev(%"class.cc::PaintImage"* nonnull %4) #8
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %33) #8
  ret void
}

declare void @_ZN8SkBitmap14allocN32PixelsEiib(%class.SkBitmap*, i32, i32, i1 zeroext) local_unnamed_addr #1

declare void @_ZNK8SkBitmap10eraseColorEj(%class.SkBitmap*, i32) local_unnamed_addr #1

declare void @_ZN8SkBitmap12setImmutableEv(%class.SkBitmap*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN2cc10PaintImage16CreateFromBitmapE8SkBitmap(%"class.cc::PaintImage"* sret, %class.SkBitmap*) local_unnamed_addr #1

declare void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) unnamed_addr #1

declare dereferenceable(104) %"class.cc::PaintImage"* @_ZN2cc10PaintImageaSEOS0_(%"class.cc::PaintImage"*, %"class.cc::PaintImage"* dereferenceable(104)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2cc10PaintImageD1Ev(%"class.cc::PaintImage"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx12ImageSkiaRepC2ERK8SkBitmapf(%"class.gfx::ImageSkiaRep"*, %class.SkBitmap* dereferenceable(56), float) unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.cc::PaintImage", align 8
  %10 = alloca %class.SkBitmap, align 8
  %11 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %0, i64 0, i32 0
  tail call void @_ZN2cc10PaintImageC1Ev(%"class.cc::PaintImage"* %11) #8
  %12 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %0, i64 0, i32 1, i32 0
  store %"class.cc::PaintOpBuffer"* null, %"class.cc::PaintOpBuffer"** %12, align 8
  %13 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %0, i64 0, i32 2
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %0, i64 0, i32 3, i32 0
  %19 = icmp sgt i32 %15, 0
  %20 = select i1 %19, i32 %15, i32 0
  store i32 %20, i32* %18, align 4
  %21 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %0, i64 0, i32 3, i32 1
  %22 = icmp sgt i32 %17, 0
  %23 = select i1 %22, i32 %17, i32 0
  store i32 %23, i32* %21, align 4
  %24 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %0, i64 0, i32 5
  tail call void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap* %24, %class.SkBitmap* dereferenceable(56) %1) #8
  %25 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %0, i64 0, i32 6
  store float %2, float* %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #8
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %27, align 8
  %28 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #8
  %29 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %0, i64 0, i32 5, i32 1, i32 2, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  store i32 %30, i32* %6, align 4
  %31 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %31) #8
  store i32 6, i32* %7, align 4
  %32 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32)
  %33 = icmp eq i32 %30, 6
  br i1 %33, label %34, label %36

34:                                               ; preds = %3
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* null, i8** %35, align 8
  br label %41

36:                                               ; preds = %3
  %37 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %28, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrI11SkColorTypeEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS2_14remove_pointerIS4_E4typeEEE5valueEPcE4typeES6_ENUlRNS2_13basic_ostreamIcNS2_11char_traitsIcEEEEPKvE_8__invokeESH_SJ_) #8
  %38 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %31, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrI11SkColorTypeEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS2_14remove_pointerIS4_E4typeEEE5valueEPcE4typeES6_ENUlRNS2_13basic_ostreamIcNS2_11char_traitsIcEEEEPKvE_8__invokeESH_SJ_) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0), i8* %37, i8* %38) #8
  %39 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %40 = load i8*, i8** %39, align 8
  br label %41

41:                                               ; preds = %34, %36
  %42 = phi i8* [ %40, %36 ], [ null, %34 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32)
  store i8* %42, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %31) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #8
  %43 = icmp eq i8* %42, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %41
  %45 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1, i64 0, i64 0), i32 36, %"class.logging::CheckOpResult"* nonnull %5) #8
  %46 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #8
  br label %47

47:                                               ; preds = %41, %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #8
  call void @_ZN8SkBitmap12setImmutableEv(%class.SkBitmap* %24) #8
  %48 = bitcast %"class.cc::PaintImage"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %48) #8
  call void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap* nonnull %10, %class.SkBitmap* dereferenceable(56) %1) #8
  call void @_ZN2cc10PaintImage16CreateFromBitmapE8SkBitmap(%"class.cc::PaintImage"* nonnull sret %9, %class.SkBitmap* nonnull %10) #8
  %49 = call dereferenceable(104) %"class.cc::PaintImage"* @_ZN2cc10PaintImageaSEOS0_(%"class.cc::PaintImage"* %11, %"class.cc::PaintImage"* nonnull dereferenceable(104) %9) #8
  call void @_ZN2cc10PaintImageD1Ev(%"class.cc::PaintImage"* nonnull %9) #8
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %10) #8
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %48) #8
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx12ImageSkiaRepC2E5sk_spIN2cc13PaintOpBufferEERKNS_4SizeEf(%"class.gfx::ImageSkiaRep"*, %class.sk_sp.7* nocapture, %"class.gfx::Size"* nocapture readonly dereferenceable(8), float) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %0, i64 0, i32 0
  tail call void @_ZN2cc10PaintImageC1Ev(%"class.cc::PaintImage"* %5) #8
  %6 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %class.sk_sp.7, %class.sk_sp.7* %1, i64 0, i32 0
  %8 = bitcast %class.sk_sp.7* %1 to i64*
  %9 = load i64, i64* %8, align 8
  store %"class.cc::PaintOpBuffer"* null, %"class.cc::PaintOpBuffer"** %7, align 8
  %10 = bitcast %class.sk_sp.7* %6 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %0, i64 0, i32 2
  store i32 1, i32* %11, align 8
  %12 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %0, i64 0, i32 3
  %13 = bitcast %"class.gfx::Size"* %2 to i64*
  %14 = bitcast %"class.gfx::Size"* %12 to i64*
  %15 = load i64, i64* %13, align 4
  store i64 %15, i64* %14, align 4
  %16 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %0, i64 0, i32 5
  tail call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* %16) #8
  %17 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %0, i64 0, i32 6
  store float %3, float* %17, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx12ImageSkiaRepC2ERKS0_(%"class.gfx::ImageSkiaRep"*, %"class.gfx::ImageSkiaRep"* dereferenceable(192)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %1, i64 0, i32 0
  tail call void @_ZN2cc10PaintImageC1ERKS0_(%"class.cc::PaintImage"* %3, %"class.cc::PaintImage"* dereferenceable(104) %4) #8
  %5 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %0, i64 0, i32 1, i32 0
  %6 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %1, i64 0, i32 1, i32 0
  %7 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %6, align 8
  %8 = icmp eq %"class.cc::PaintOpBuffer"* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %7, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw add i32* %10, i32 1 monotonic
  br label %12

12:                                               ; preds = %2, %9
  store %"class.cc::PaintOpBuffer"* %7, %"class.cc::PaintOpBuffer"** %5, align 8
  %13 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %0, i64 0, i32 2
  %14 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %1, i64 0, i32 2
  %15 = load i32, i32* %14, align 8
  store i32 %15, i32* %13, align 8
  %16 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %0, i64 0, i32 3
  %17 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %1, i64 0, i32 3
  %18 = bitcast %"class.gfx::Size"* %17 to i64*
  %19 = bitcast %"class.gfx::Size"* %16 to i64*
  %20 = load i64, i64* %18, align 4
  store i64 %20, i64* %19, align 4
  %21 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %0, i64 0, i32 5
  %22 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %1, i64 0, i32 5
  tail call void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap* %21, %class.SkBitmap* dereferenceable(56) %22) #8
  %23 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %0, i64 0, i32 6
  %24 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %1, i64 0, i32 6
  %25 = bitcast float* %24 to i32*
  %26 = load i32, i32* %25, align 8
  %27 = bitcast float* %23 to i32*
  store i32 %26, i32* %27, align 8
  ret void
}

declare void @_ZN2cc10PaintImageC1ERKS0_(%"class.cc::PaintImage"*, %"class.cc::PaintImage"* dereferenceable(104)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx12ImageSkiaRepD2Ev(%"class.gfx::ImageSkiaRep"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %0, i64 0, i32 5
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %2) #8
  %3 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %3, align 8
  %5 = icmp eq %"class.cc::PaintOpBuffer"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.cc::PaintOpBuffer"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.cc::PaintOpBuffer"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #8
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %0, i64 0, i32 0
  tail call void @_ZN2cc10PaintImageD1Ev(%"class.cc::PaintImage"* %17) #8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK3gfx12ImageSkiaRep8GetWidthEv(%"class.gfx::ImageSkiaRep"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %0, i64 0, i32 3, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = sitofp i32 %3 to float
  %5 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %0, i64 0, i32 6
  %6 = load float, float* %5, align 8
  %7 = fcmp oeq float %6, 0.000000e+00
  %8 = select i1 %7, float 1.000000e+00, float %6
  %9 = fdiv float %4, %8
  %10 = fptosi float %9 to i32
  ret i32 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK3gfx12ImageSkiaRep9GetHeightEv(%"class.gfx::ImageSkiaRep"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %0, i64 0, i32 3, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = sitofp i32 %3 to float
  %5 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %0, i64 0, i32 6
  %6 = load float, float* %5, align 8
  %7 = fcmp oeq float %6, 0.000000e+00
  %8 = select i1 %7, float 1.000000e+00, float %6
  %9 = fdiv float %4, %8
  %10 = fptosi float %9 to i32
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3gfx12ImageSkiaRep14GetPaintRecordEv(%class.sk_sp.7* noalias nocapture sret, %"class.gfx::ImageSkiaRep"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %struct.SkSamplingOptions, align 4
  %4 = alloca %"class.cc::RecordPaintCanvas", align 8
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = bitcast { <2 x float>, <2 x float> }* %5 to %struct.SkRect*
  %7 = alloca %class.sk_sp.7, align 8
  %8 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %1, i64 0, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %18, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %1, i64 0, i32 1
  %13 = getelementptr inbounds %class.sk_sp.7, %class.sk_sp.7* %12, i64 0, i32 0
  %14 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %13, align 8
  %15 = icmp eq %"class.cc::PaintOpBuffer"* %14, null
  br i1 %15, label %31, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %class.sk_sp.7, %class.sk_sp.7* %0, i64 0, i32 0
  br label %23

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %1, i64 0, i32 1, i32 0
  %20 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %19, align 8
  %21 = getelementptr inbounds %class.sk_sp.7, %class.sk_sp.7* %0, i64 0, i32 0
  %22 = icmp eq %"class.cc::PaintOpBuffer"* %20, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %16, %18
  %24 = phi %"class.cc::PaintOpBuffer"** [ %17, %16 ], [ %21, %18 ]
  %25 = phi %"class.cc::PaintOpBuffer"* [ %14, %16 ], [ %20, %18 ]
  %26 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %25, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw add i32* %26, i32 1 monotonic
  br label %28

28:                                               ; preds = %18, %23
  %29 = phi %"class.cc::PaintOpBuffer"** [ %21, %18 ], [ %24, %23 ]
  %30 = phi %"class.cc::PaintOpBuffer"* [ null, %18 ], [ %25, %23 ]
  store %"class.cc::PaintOpBuffer"* %30, %"class.cc::PaintOpBuffer"** %29, align 8
  br label %100

31:                                               ; preds = %11
  %32 = tail call i8* @_Znwm(i64 640) #9
  %33 = bitcast i8* %32 to %"class.cc::DisplayItemList"*
  tail call void @_ZN2cc15DisplayItemListC1ENS0_9UsageHintE(%"class.cc::DisplayItemList"* nonnull %33, i32 1) #8
  %34 = bitcast i8* %32 to i32*
  %35 = atomicrmw add i32* %34, i32 1 monotonic
  %36 = bitcast %"class.cc::RecordPaintCanvas"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 3288, i8* nonnull %36) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %36, i8* align 8 bitcast ({ %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, { { { { i8, [7 x i8], { { { { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.97, [384 x i64], %class.sk_sp.98, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.99", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.103" } } } } } } } }, %struct.SkRect }* @__const._ZNK3gfx12ImageSkiaRep14GetPaintRecordEv.record_canvas to i8*), i64 3288, i1 false)
  %37 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #8
  %38 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %1, i64 0, i32 3, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %1, i64 0, i32 3, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = sitofp i32 %39 to float
  %43 = insertelement <2 x float> undef, float %42, i32 0
  %44 = sitofp i32 %41 to float
  %45 = insertelement <2 x float> %43, float %44, i32 1
  %46 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  store <2 x float> zeroinitializer, <2 x float>* %46, align 8
  %47 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  store <2 x float> %45, <2 x float>* %47, align 8
  call void @_ZN2cc17RecordPaintCanvasC1EPNS_15DisplayItemListERK6SkRect(%"class.cc::RecordPaintCanvas"* nonnull %4, %"class.cc::DisplayItemList"* nonnull %33, %struct.SkRect* nonnull dereferenceable(16) %6) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #8
  %48 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %4, i64 0, i32 0
  %49 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %1, i64 0, i32 0
  %50 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %50) #8
  %51 = bitcast %"class.cc::RecordPaintCanvas"* %4 to void (%"class.cc::PaintCanvas"*, %"class.cc::PaintImage"*, float, float, %struct.SkSamplingOptions*, %"class.cc::PaintFlags"*)***
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %50, i8 0, i64 20, i1 false) #8
  %52 = load void (%"class.cc::PaintCanvas"*, %"class.cc::PaintImage"*, float, float, %struct.SkSamplingOptions*, %"class.cc::PaintFlags"*)**, void (%"class.cc::PaintCanvas"*, %"class.cc::PaintImage"*, float, float, %struct.SkSamplingOptions*, %"class.cc::PaintFlags"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, %"class.cc::PaintImage"*, float, float, %struct.SkSamplingOptions*, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, %"class.cc::PaintImage"*, float, float, %struct.SkSamplingOptions*, %"class.cc::PaintFlags"*)** %52, i64 35
  %54 = load void (%"class.cc::PaintCanvas"*, %"class.cc::PaintImage"*, float, float, %struct.SkSamplingOptions*, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, %"class.cc::PaintImage"*, float, float, %struct.SkSamplingOptions*, %"class.cc::PaintFlags"*)** %53, align 8
  call void %54(%"class.cc::PaintCanvas"* nonnull %48, %"class.cc::PaintImage"* dereferenceable(104) %49, float 0.000000e+00, float 0.000000e+00, %struct.SkSamplingOptions* nonnull dereferenceable(20) %3, %"class.cc::PaintFlags"* null) #8
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %50) #8
  call void @_ZN2cc15DisplayItemList19EndPaintOfPairedEndEv(%"class.cc::DisplayItemList"* nonnull %33) #8
  call void @_ZN2cc15DisplayItemList8FinalizeEv(%"class.cc::DisplayItemList"* nonnull %33) #8
  %55 = bitcast %class.sk_sp.7* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #8
  call void @_ZN2cc15DisplayItemList15ReleaseAsRecordEv(%class.sk_sp.7* nonnull sret %7, %"class.cc::DisplayItemList"* nonnull %33) #8
  %56 = getelementptr inbounds %class.sk_sp.7, %class.sk_sp.7* %7, i64 0, i32 0
  %57 = bitcast %class.sk_sp.7* %7 to i64*
  %58 = load i64, i64* %57, align 8
  store %"class.cc::PaintOpBuffer"* null, %"class.cc::PaintOpBuffer"** %56, align 8
  %59 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %13, align 8
  %60 = bitcast %class.sk_sp.7* %12 to i64*
  store i64 %58, i64* %60, align 8
  %61 = icmp eq %"class.cc::PaintOpBuffer"* %59, null
  br i1 %61, label %62, label %64

62:                                               ; preds = %31
  %63 = inttoptr i64 %58 to %"class.cc::PaintOpBuffer"*
  br label %89

64:                                               ; preds = %31
  %65 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %59, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = atomicrmw add i32* %65, i32 -1 acq_rel
  %67 = icmp eq i32 %66, 1
  br i1 %67, label %68, label %74

68:                                               ; preds = %64
  %69 = bitcast %"class.cc::PaintOpBuffer"* %59 to %class.SkRefCntBase*
  %70 = bitcast %"class.cc::PaintOpBuffer"* %59 to void (%class.SkRefCntBase*)***
  %71 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %70, align 8
  %72 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %71, i64 2
  %73 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %72, align 8
  call void %73(%class.SkRefCntBase* nonnull %69) #8
  br label %74

74:                                               ; preds = %64, %68
  %75 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %56, align 8
  %76 = icmp eq %"class.cc::PaintOpBuffer"* %75, null
  br i1 %76, label %87, label %77

77:                                               ; preds = %74
  %78 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %75, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = atomicrmw add i32* %78, i32 -1 acq_rel
  %80 = icmp eq i32 %79, 1
  br i1 %80, label %81, label %87

81:                                               ; preds = %77
  %82 = bitcast %"class.cc::PaintOpBuffer"* %75 to %class.SkRefCntBase*
  %83 = bitcast %"class.cc::PaintOpBuffer"* %75 to void (%class.SkRefCntBase*)***
  %84 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %83, align 8
  %85 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %84, i64 2
  %86 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %85, align 8
  call void %86(%class.SkRefCntBase* nonnull %82) #8
  br label %87

87:                                               ; preds = %81, %77, %74
  %88 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %13, align 8
  br label %89

89:                                               ; preds = %87, %62
  %90 = phi %"class.cc::PaintOpBuffer"* [ %88, %87 ], [ %63, %62 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #8
  %91 = getelementptr inbounds %class.sk_sp.7, %class.sk_sp.7* %0, i64 0, i32 0
  %92 = icmp eq %"class.cc::PaintOpBuffer"* %90, null
  br i1 %92, label %96, label %93

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %90, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = atomicrmw add i32* %94, i32 1 monotonic
  br label %96

96:                                               ; preds = %93, %89
  store %"class.cc::PaintOpBuffer"* %90, %"class.cc::PaintOpBuffer"** %91, align 8
  call void @_ZN2cc17RecordPaintCanvasD1Ev(%"class.cc::RecordPaintCanvas"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 3288, i8* nonnull %36) #8
  %97 = atomicrmw sub i32* %34, i32 1 acq_rel
  %98 = icmp eq i32 %97, 1
  br i1 %98, label %99, label %100

99:                                               ; preds = %96
  call void @_ZN2cc15DisplayItemListD1Ev(%"class.cc::DisplayItemList"* nonnull %33) #8
  call void @_ZdlPv(i8* nonnull %32) #9
  br label %100

100:                                              ; preds = %99, %96, %28
  ret void
}

declare void @_ZN2cc17RecordPaintCanvasC1EPNS_15DisplayItemListERK6SkRect(%"class.cc::RecordPaintCanvas"*, %"class.cc::DisplayItemList"*, %struct.SkRect* dereferenceable(16)) unnamed_addr #1

declare void @_ZN2cc15DisplayItemList19EndPaintOfPairedEndEv(%"class.cc::DisplayItemList"*) local_unnamed_addr #1

declare void @_ZN2cc15DisplayItemList8FinalizeEv(%"class.cc::DisplayItemList"*) local_unnamed_addr #1

declare void @_ZN2cc15DisplayItemList15ReleaseAsRecordEv(%class.sk_sp.7* sret, %"class.cc::DisplayItemList"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2cc17RecordPaintCanvasD1Ev(%"class.cc::RecordPaintCanvas"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(56) %class.SkBitmap* @_ZNK3gfx12ImageSkiaRep9GetBitmapEv(%"class.gfx::ImageSkiaRep"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.SkCanvas, align 8
  %3 = alloca %class.SkSurfaceProps, align 4
  %4 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 1
  br i1 %6, label %7, label %24

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %0, i64 0, i32 5
  %9 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %8, i64 0, i32 0, i32 0
  %10 = load %class.SkPixelRef*, %class.SkPixelRef** %9, align 8
  %11 = icmp eq %class.SkPixelRef* %10, null
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %0, i64 0, i32 1, i32 0
  %14 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %13, align 8
  %15 = icmp eq %"class.cc::PaintOpBuffer"* %14, null
  br i1 %15, label %24, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %0, i64 0, i32 3, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %0, i64 0, i32 3, i32 1
  %20 = load i32, i32* %19, align 4
  tail call void @_ZN8SkBitmap14allocN32PixelsEiib(%class.SkBitmap* %8, i32 %18, i32 %20, i1 zeroext false) #8
  tail call void @_ZNK8SkBitmap10eraseColorEj(%class.SkBitmap* %8, i32 0) #8
  %21 = bitcast %class.SkCanvas* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 3232, i8* nonnull %21) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 bitcast ({ i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.97, [384 x i64], %class.sk_sp.98, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.99", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.103" }* @__const._ZNK3gfx12ImageSkiaRep9GetBitmapEv.canvas to i8*), i64 3232, i1 false)
  %22 = bitcast %class.SkSurfaceProps* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #8
  call void @_ZN4skia20LegacyDisplayGlobals17GetSkSurfacePropsEv(%class.SkSurfaceProps* nonnull sret %3) #8
  call void @_ZN8SkCanvasC1ERK8SkBitmapRK14SkSurfaceProps(%class.SkCanvas* nonnull %2, %class.SkBitmap* dereferenceable(56) %8, %class.SkSurfaceProps* nonnull dereferenceable(8) %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #8
  %23 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %13, align 8
  call void @_ZNK2cc13PaintOpBuffer8PlaybackEP8SkCanvas(%"class.cc::PaintOpBuffer"* %23, %class.SkCanvas* nonnull %2) #8
  call void @_ZN8SkBitmap12setImmutableEv(%class.SkBitmap* %8) #8
  call void @_ZN8SkCanvasD1Ev(%class.SkCanvas* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 3232, i8* nonnull %21) #8
  br label %24

24:                                               ; preds = %12, %16, %7, %1
  %25 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %0, i64 0, i32 5
  ret %class.SkBitmap* %25
}

declare void @_ZN4skia20LegacyDisplayGlobals17GetSkSurfacePropsEv(%class.SkSurfaceProps* sret) local_unnamed_addr #1

declare void @_ZN8SkCanvasC1ERK8SkBitmapRK14SkSurfaceProps(%class.SkCanvas*, %class.SkBitmap* dereferenceable(56), %class.SkSurfaceProps* dereferenceable(8)) unnamed_addr #1

declare void @_ZNK2cc13PaintOpBuffer8PlaybackEP8SkCanvas(%"class.cc::PaintOpBuffer"*, %class.SkCanvas*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN8SkCanvasD1Ev(%class.SkCanvas*) unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrI11SkColorTypeEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS2_14remove_pointerIS4_E4typeEEE5valueEPcE4typeES6_ENUlRNS2_13basic_ostreamIcNS2_11char_traitsIcEEEEPKvE_8__invokeESH_SJ_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #5 comdat align 2 {
  %3 = bitcast i8* %1 to i32*
  %4 = load i32, i32* %3, align 4
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %0, i32 %4) #8
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN2cc15DisplayItemListC1ENS0_9UsageHintE(%"class.cc::DisplayItemList"*, i32) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2cc15DisplayItemListD1Ev(%"class.cc::DisplayItemList"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
