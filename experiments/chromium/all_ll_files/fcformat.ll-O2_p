; ModuleID = '../../third_party/fontconfig/src/src/fcformat.c'
source_filename = "../../third_party/fontconfig/src/src/fcformat.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct._FcPattern = type { i32, i32, i64, %struct._FcRef }
%struct._FcRef = type { i32 }
%struct._FcFormatContext = type { i8*, i8*, i32, i8*, i32 }
%struct._FcStrBuf = type { i8*, i32, i32, i32, i32, [128 x i8] }
%struct._FcLangSet = type opaque
%struct._FcValue = type { i32, %union.anon }
%union.anon = type { i8* }
%struct._FcPatternIter = type { i8*, i8* }
%struct._FcObjectSet = type { i32, i32, i8** }
%struct._FcStrSet = type { %struct._FcRef, i32, i32, i8**, i32 }
%struct._FcStrList = type { %struct._FcStrSet*, i32 }
%struct._FcValueList = type { %struct._FcValueList*, %struct._FcValue, i32 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

@.str = private unnamed_addr constant [34 x i8] c"format ended while expecting '%c'\00", align 1
@.str.1 = private unnamed_addr constant [20 x i8] c"expected '%c' at %d\00", align 1
@stderr = external local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.2 = private unnamed_addr constant [35 x i8] c"Fontconfig: Pattern format error: \00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c".\0A\00", align 1
@.str.4 = private unnamed_addr constant [8 x i8] c"unparse\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"fccat\00", align 1
@.str.6 = private unnamed_addr constant [68 x i8] c"\22%{file|basename|cescape}\22 %{index} \22%{-file{%{=unparse|cescape}}}\22\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"fcmatch\00", align 1
@.str.8 = private unnamed_addr constant [102 x i8] c"%{file:-<unknown filename>|basename}: \22%{family[0]:-<unknown family>}\22 \22%{style[0]:-<unknown style>}\22\00", align 1
@.str.9 = private unnamed_addr constant [7 x i8] c"fclist\00", align 1
@.str.10 = private unnamed_addr constant [41 x i8] c"%{?file{%{file}: }}%{-file{%{=unparse}}}\00", align 1
@.str.11 = private unnamed_addr constant [7 x i8] c"pkgkit\00", align 1
@.str.12 = private unnamed_addr constant [104 x i8] c"%{[]family{font(%{family|downcase|delete( )})\0A}}%{[]lang{font(:lang=%{lang|downcase|translate(_,-)})\0A}}\00", align 1
@.str.13 = private unnamed_addr constant [21 x i8] c"unknown builtin \22%s\22\00", align 1
@.str.14 = private unnamed_addr constant [26 x i8] c"expected identifier at %d\00", align 1
@.str.15 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.16 = private unnamed_addr constant [35 x i8] c"expected non-negative number at %d\00", align 1
@.str.17 = private unnamed_addr constant [30 x i8] c"expected character data at %d\00", align 1
@.str.18 = private unnamed_addr constant [9 x i8] c"downcase\00", align 1
@.str.19 = private unnamed_addr constant [9 x i8] c"basename\00", align 1
@.str.20 = private unnamed_addr constant [8 x i8] c"dirname\00", align 1
@.str.21 = private unnamed_addr constant [8 x i8] c"cescape\00", align 1
@.str.22 = private unnamed_addr constant [9 x i8] c"shescape\00", align 1
@.str.23 = private unnamed_addr constant [10 x i8] c"xmlescape\00", align 1
@.str.24 = private unnamed_addr constant [7 x i8] c"delete\00", align 1
@.str.25 = private unnamed_addr constant [7 x i8] c"escape\00", align 1
@.str.26 = private unnamed_addr constant [10 x i8] c"translate\00", align 1
@.str.27 = private unnamed_addr constant [23 x i8] c"unknown converter \22%s\22\00", align 1
@.str.28 = private unnamed_addr constant [5 x i8] c"'\5C''\00", align 1
@.str.29 = private unnamed_addr constant [6 x i8] c"&amp;\00", align 1
@.str.30 = private unnamed_addr constant [5 x i8] c"&lt;\00", align 1
@.str.31 = private unnamed_addr constant [5 x i8] c"&gt;\00", align 1

@FcPatternFormat = hidden alias i8* (%struct._FcPattern*, i8*), i8* (%struct._FcPattern*, i8*)* @IA__FcPatternFormat

; Function Attrs: nounwind ssp uwtable
define hidden i8* @IA__FcPatternFormat(%struct._FcPattern*, i8*) #0 {
  %3 = alloca %struct._FcFormatContext, align 8
  %4 = alloca [1024 x i8], align 16
  %5 = alloca %struct._FcStrBuf, align 8
  %6 = alloca [7168 x i8], align 16
  %7 = bitcast %struct._FcStrBuf* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %7) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 152, i1 false)
  %8 = getelementptr inbounds [7168 x i8], [7168 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 7168, i8* nonnull %8) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 7168, i1 false)
  %9 = icmp eq %struct._FcPattern* %0, null
  br i1 %9, label %10, label %12

10:                                               ; preds = %2
  %11 = tail call %struct._FcPattern* @IA__FcPatternCreate() #5
  br label %12

12:                                               ; preds = %2, %10
  %13 = phi %struct._FcPattern* [ %0, %2 ], [ %11, %10 ]
  %14 = phi %struct._FcPattern* [ null, %2 ], [ %11, %10 ]
  call void @FcStrBufInit(%struct._FcStrBuf* nonnull %5, i8* nonnull %8, i32 7168) #5
  %15 = bitcast %struct._FcFormatContext* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 40, i1 false) #5
  %16 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %16) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %16, i8 -86, i64 1024, i1 false) #5
  %17 = getelementptr inbounds %struct._FcFormatContext, %struct._FcFormatContext* %3, i64 0, i32 1
  store i8* %1, i8** %17, align 8
  %18 = getelementptr inbounds %struct._FcFormatContext, %struct._FcFormatContext* %3, i64 0, i32 0
  store i8* %1, i8** %18, align 8
  %19 = call i64 @strlen(i8* %1) #9
  %20 = trunc i64 %19 to i32
  %21 = getelementptr inbounds %struct._FcFormatContext, %struct._FcFormatContext* %3, i64 0, i32 2
  store i32 %20, i32* %21, align 8
  %22 = icmp slt i32 %20, 1024
  br i1 %22, label %23, label %26

23:                                               ; preds = %12
  %24 = getelementptr inbounds %struct._FcFormatContext, %struct._FcFormatContext* %3, i64 0, i32 3
  store i8* %16, i8** %24, align 8
  %25 = getelementptr inbounds %struct._FcFormatContext, %struct._FcFormatContext* %3, i64 0, i32 4
  store i32 0, i32* %25, align 8
  br label %34

26:                                               ; preds = %12
  %27 = shl i64 %19, 32
  %28 = add i64 %27, 4294967296
  %29 = ashr exact i64 %28, 32
  %30 = call noalias i8* @malloc(i64 %29) #5
  %31 = getelementptr inbounds %struct._FcFormatContext, %struct._FcFormatContext* %3, i64 0, i32 3
  store i8* %30, i8** %31, align 8
  %32 = getelementptr inbounds %struct._FcFormatContext, %struct._FcFormatContext* %3, i64 0, i32 4
  store i32 1, i32* %32, align 8
  %33 = icmp eq i8* %30, null
  br i1 %33, label %42, label %34

34:                                               ; preds = %26, %23
  %35 = phi i32* [ %25, %23 ], [ %32, %26 ]
  %36 = phi i8** [ %24, %23 ], [ %31, %26 ]
  %37 = call fastcc i32 @interpret_expr(%struct._FcFormatContext* nonnull %3, %struct._FcPattern* %13, %struct._FcStrBuf* nonnull %5, i8 zeroext 0) #5
  %38 = load i32, i32* %35, align 8
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %34
  %41 = load i8*, i8** %36, align 8
  call void @free(i8* %41) #5
  br label %42

42:                                               ; preds = %26, %34, %40
  %43 = phi i32 [ 0, %26 ], [ %37, %34 ], [ %37, %40 ]
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %16) #5
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #5
  %44 = icmp eq %struct._FcPattern* %14, null
  br i1 %44, label %46, label %45

45:                                               ; preds = %42
  call void @IA__FcPatternDestroy(%struct._FcPattern* nonnull %14) #5
  br label %46

46:                                               ; preds = %42, %45
  %47 = icmp eq i32 %43, 0
  br i1 %47, label %50, label %48

48:                                               ; preds = %46
  %49 = call i8* @FcStrBufDone(%struct._FcStrBuf* nonnull %5) #5
  br label %51

50:                                               ; preds = %46
  call void @FcStrBufDestroy(%struct._FcStrBuf* nonnull %5) #5
  br label %51

51:                                               ; preds = %50, %48
  %52 = phi i8* [ %49, %48 ], [ null, %50 ]
  call void @llvm.lifetime.end.p0i8(i64 7168, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %7) #5
  ret i8* %52
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare hidden %struct._FcPattern* @IA__FcPatternCreate() local_unnamed_addr #2

declare hidden void @FcStrBufInit(%struct._FcStrBuf*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @FcPatternFormatToBuf(%struct._FcPattern*, i8*, %struct._FcStrBuf*) unnamed_addr #0 {
  %4 = alloca %struct._FcFormatContext, align 8
  %5 = alloca [1024 x i8], align 16
  %6 = bitcast %struct._FcFormatContext* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 40, i1 false)
  %7 = getelementptr inbounds [1024 x i8], [1024 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %7) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 1024, i1 false)
  %8 = getelementptr inbounds %struct._FcFormatContext, %struct._FcFormatContext* %4, i64 0, i32 1
  store i8* %1, i8** %8, align 8
  %9 = getelementptr inbounds %struct._FcFormatContext, %struct._FcFormatContext* %4, i64 0, i32 0
  store i8* %1, i8** %9, align 8
  %10 = tail call i64 @strlen(i8* %1) #9
  %11 = trunc i64 %10 to i32
  %12 = getelementptr inbounds %struct._FcFormatContext, %struct._FcFormatContext* %4, i64 0, i32 2
  store i32 %11, i32* %12, align 8
  %13 = icmp slt i32 %11, 1024
  br i1 %13, label %14, label %17

14:                                               ; preds = %3
  %15 = getelementptr inbounds %struct._FcFormatContext, %struct._FcFormatContext* %4, i64 0, i32 3
  store i8* %7, i8** %15, align 8
  %16 = getelementptr inbounds %struct._FcFormatContext, %struct._FcFormatContext* %4, i64 0, i32 4
  store i32 0, i32* %16, align 8
  br label %25

17:                                               ; preds = %3
  %18 = shl i64 %10, 32
  %19 = add i64 %18, 4294967296
  %20 = ashr exact i64 %19, 32
  %21 = tail call noalias i8* @malloc(i64 %20) #5
  %22 = getelementptr inbounds %struct._FcFormatContext, %struct._FcFormatContext* %4, i64 0, i32 3
  store i8* %21, i8** %22, align 8
  %23 = getelementptr inbounds %struct._FcFormatContext, %struct._FcFormatContext* %4, i64 0, i32 4
  store i32 1, i32* %23, align 8
  %24 = icmp eq i8* %21, null
  br i1 %24, label %33, label %25

25:                                               ; preds = %14, %17
  %26 = phi i32* [ %16, %14 ], [ %23, %17 ]
  %27 = phi i8** [ %15, %14 ], [ %22, %17 ]
  %28 = call fastcc i32 @interpret_expr(%struct._FcFormatContext* nonnull %4, %struct._FcPattern* %0, %struct._FcStrBuf* %2, i8 zeroext 0)
  %29 = load i32, i32* %26, align 8
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %25
  %32 = load i8*, i8** %27, align 8
  call void @free(i8* %32) #5
  br label %33

33:                                               ; preds = %31, %25, %17
  %34 = phi i32 [ 0, %17 ], [ %28, %25 ], [ %28, %31 ]
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %7) #5
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #5
  ret i32 %34
}

declare hidden void @IA__FcPatternDestroy(%struct._FcPattern*) local_unnamed_addr #2

declare hidden i8* @FcStrBufDone(%struct._FcStrBuf*) local_unnamed_addr #2

declare hidden void @FcStrBufDestroy(%struct._FcStrBuf*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @interpret_expr(%struct._FcFormatContext*, %struct._FcPattern*, %struct._FcStrBuf*, i8 zeroext) unnamed_addr #0 {
  %5 = alloca %struct._FcLangSet*, align 8
  %6 = alloca %struct._FcValue, align 8
  %7 = alloca %struct._FcValue, align 8
  %8 = alloca %struct._FcFormatContext, align 16
  %9 = alloca %struct._FcFormatContext, align 16
  %10 = alloca [1024 x i8], align 16
  %11 = alloca %struct._FcPatternIter, align 8
  %12 = alloca [64 x i8], align 16
  %13 = alloca %struct._FcPatternIter, align 8
  %14 = alloca %struct._FcStrBuf, align 8
  %15 = alloca [8192 x i8], align 16
  %16 = getelementptr inbounds %struct._FcFormatContext, %struct._FcFormatContext* %0, i64 0, i32 1
  %17 = load i8*, i8** %16, align 8
  %18 = load i8, i8* %17, align 1
  %19 = icmp eq i8 %18, 0
  %20 = icmp eq i8 %18, %3
  %21 = or i1 %19, %20
  br i1 %21, label %1319, label %22

22:                                               ; preds = %4
  %23 = getelementptr inbounds %struct._FcStrBuf, %struct._FcStrBuf* %2, i64 0, i32 3
  %24 = getelementptr inbounds %struct._FcFormatContext, %struct._FcFormatContext* %0, i64 0, i32 3
  %25 = bitcast %struct._FcLangSet** %5 to i8*
  %26 = bitcast %struct._FcValue* %6 to i8*
  %27 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %6, i64 0, i32 0
  %28 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %6, i64 0, i32 1, i32 0
  %29 = getelementptr inbounds %struct._FcFormatContext, %struct._FcFormatContext* %0, i64 0, i32 0
  %30 = getelementptr inbounds %struct._FcFormatContext, %struct._FcFormatContext* %0, i64 0, i32 2
  %31 = bitcast %struct._FcPatternIter* %11 to i8*
  %32 = getelementptr inbounds [64 x i8], [64 x i8]* %12, i64 0, i64 0
  %33 = bitcast %struct._FcValue* %7 to i8*
  %34 = bitcast %struct._FcFormatContext* %9 to i8*
  %35 = getelementptr inbounds [1024 x i8], [1024 x i8]* %10, i64 0, i64 0
  %36 = getelementptr inbounds %struct._FcFormatContext, %struct._FcFormatContext* %9, i64 0, i32 2
  %37 = getelementptr inbounds %struct._FcFormatContext, %struct._FcFormatContext* %9, i64 0, i32 3
  %38 = getelementptr inbounds %struct._FcFormatContext, %struct._FcFormatContext* %9, i64 0, i32 4
  %39 = bitcast %struct._FcFormatContext* %8 to i8*
  %40 = getelementptr inbounds %struct._FcFormatContext, %struct._FcFormatContext* %8, i64 0, i32 2
  %41 = getelementptr inbounds %struct._FcFormatContext, %struct._FcFormatContext* %8, i64 0, i32 3
  %42 = getelementptr inbounds %struct._FcFormatContext, %struct._FcFormatContext* %8, i64 0, i32 4
  %43 = bitcast %struct._FcPatternIter* %13 to i8*
  %44 = bitcast i8** %16 to i64*
  %45 = bitcast %struct._FcFormatContext* %0 to i64*
  %46 = bitcast %struct._FcStrBuf* %14 to i8*
  %47 = getelementptr inbounds [8192 x i8], [8192 x i8]* %15, i64 0, i64 0
  %48 = getelementptr inbounds %struct._FcStrBuf, %struct._FcStrBuf* %2, i64 0, i32 2
  %49 = getelementptr inbounds %struct._FcStrBuf, %struct._FcStrBuf* %2, i64 0, i32 0
  %50 = getelementptr inbounds %struct._FcStrBuf, %struct._FcStrBuf* %14, i64 0, i32 0
  %51 = bitcast %struct._FcFormatContext* %9 to <2 x i8*>*
  %52 = bitcast %struct._FcFormatContext* %8 to <2 x i8*>*
  br label %53

53:                                               ; preds = %22, %74
  %54 = phi i8 [ %18, %22 ], [ %76, %74 ]
  %55 = phi i8* [ %17, %22 ], [ %75, %74 ]
  switch i8 %54, label %1315 [
    i8 92, label %56
    i8 37, label %80
  ]

56:                                               ; preds = %53
  %57 = getelementptr inbounds i8, i8* %55, i64 1
  store i8* %57, i8** %16, align 8
  %58 = load i8, i8* %57, align 1
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %74, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds i8, i8* %55, i64 2
  store i8* %61, i8** %16, align 8
  %62 = load i8, i8* %57, align 1
  %63 = sext i8 %62 to i32
  switch i32 %63, label %70 [
    i32 97, label %71
    i32 98, label %64
    i32 102, label %65
    i32 110, label %66
    i32 114, label %67
    i32 116, label %68
    i32 118, label %69
  ]

64:                                               ; preds = %60
  br label %71

65:                                               ; preds = %60
  br label %71

66:                                               ; preds = %60
  br label %71

67:                                               ; preds = %60
  br label %71

68:                                               ; preds = %60
  br label %71

69:                                               ; preds = %60
  br label %71

70:                                               ; preds = %60
  br label %71

71:                                               ; preds = %60, %64, %65, %66, %67, %68, %69, %70
  %72 = phi i8 [ %62, %70 ], [ 11, %69 ], [ 9, %68 ], [ 13, %67 ], [ 10, %66 ], [ 12, %65 ], [ 8, %64 ], [ 7, %60 ]
  %73 = call i32 @FcStrBufChar(%struct._FcStrBuf* %2, i8 zeroext %72) #5
  br label %74

74:                                               ; preds = %84, %1301, %71, %56, %1315
  %75 = load i8*, i8** %16, align 8
  %76 = load i8, i8* %75, align 1
  %77 = icmp eq i8 %76, 0
  %78 = icmp eq i8 %76, %3
  %79 = or i1 %77, %78
  br i1 %79, label %1319, label %53

80:                                               ; preds = %53
  %81 = getelementptr inbounds i8, i8* %55, i64 1
  store i8* %81, i8** %16, align 8
  %82 = load i8, i8* %81, align 1
  %83 = icmp eq i8 %82, 37
  br i1 %83, label %84, label %87

84:                                               ; preds = %80
  %85 = getelementptr inbounds i8, i8* %55, i64 2
  store i8* %85, i8** %16, align 8
  %86 = call i32 @FcStrBufChar(%struct._FcStrBuf* %2, i8 zeroext 37) #5
  br label %74

87:                                               ; preds = %80
  %88 = call i64 @strtol(i8* %81, i8** %16, i32 10) #5
  %89 = trunc i64 %88 to i32
  %90 = load i8*, i8** %16, align 8
  %91 = load i8, i8* %90, align 1
  %92 = icmp eq i8 %91, 123
  br i1 %92, label %105, label %93

93:                                               ; preds = %87
  %94 = load i8*, i8** %29, align 8
  %95 = load i32, i32* %30, align 8
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds i8, i8* %94, i64 %96
  %98 = icmp eq i8* %90, %97
  br i1 %98, label %99, label %100

99:                                               ; preds = %93
  call void (i8*, ...) @message(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i32 123) #5
  br label %1319

100:                                              ; preds = %93
  %101 = ptrtoint i8* %90 to i64
  %102 = ptrtoint i8* %94 to i64
  %103 = add i64 %101, 1
  %104 = sub i64 %103, %102
  call void (i8*, ...) @message(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i32 123, i64 %104) #5
  br label %1319

105:                                              ; preds = %87
  %106 = getelementptr inbounds i8, i8* %90, i64 1
  store i8* %106, i8** %16, align 8
  %107 = load i32, i32* %23, align 8
  %108 = load i8, i8* %106, align 1
  switch i8 %108, label %581 [
    i8 61, label %109
    i8 123, label %159
    i8 43, label %181
    i8 45, label %242
    i8 63, label %293
    i8 35, label %392
    i8 91, label %423
  ]

109:                                              ; preds = %105
  %110 = getelementptr inbounds i8, i8* %90, i64 2
  store i8* %110, i8** %16, align 8
  %111 = call fastcc i32 @read_word(%struct._FcFormatContext* %0) #5
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %1319, label %113

113:                                              ; preds = %109
  %114 = load i8*, i8** %24, align 8
  %115 = call i32 @strcmp(i8* %114, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i64 0, i64 0)) #9
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %122

117:                                              ; preds = %113
  %118 = call i8* @IA__FcNameUnparse(%struct._FcPattern* %1) #5
  %119 = icmp eq i8* %118, null
  br i1 %119, label %1319, label %120

120:                                              ; preds = %117
  %121 = call i32 @FcStrBufString(%struct._FcStrBuf* %2, i8* nonnull %118) #5
  call void @IA__FcStrFree(i8* nonnull %118) #5
  br label %762

122:                                              ; preds = %113
  %123 = call i32 @strcmp(i8* %114, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0)) #9
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %127

125:                                              ; preds = %122
  %126 = call fastcc i32 @FcPatternFormatToBuf(%struct._FcPattern* %1, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.6, i64 0, i64 0), %struct._FcStrBuf* %2) #5
  br label %152

127:                                              ; preds = %122
  %128 = call i32 @strcmp(i8* %114, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0)) #9
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %132

130:                                              ; preds = %127
  %131 = call fastcc i32 @FcPatternFormatToBuf(%struct._FcPattern* %1, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @.str.8, i64 0, i64 0), %struct._FcStrBuf* %2) #5
  br label %152

132:                                              ; preds = %127
  %133 = call i32 @strcmp(i8* %114, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i64 0, i64 0)) #9
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %142

135:                                              ; preds = %132
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %39) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %39, i8 -86, i64 40, i1 false) #5
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %35) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %35, i8 -86, i64 1024, i1 false) #5
  store <2 x i8*> <i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.10, i64 0, i64 0)>, <2 x i8*>* %52, align 16
  store i32 40, i32* %40, align 16
  store i8* %35, i8** %41, align 8
  store i32 0, i32* %42, align 16
  %136 = call fastcc i32 @interpret_expr(%struct._FcFormatContext* nonnull %8, %struct._FcPattern* %1, %struct._FcStrBuf* %2, i8 zeroext 0) #5
  %137 = load i32, i32* %42, align 16
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %141, label %139

139:                                              ; preds = %135
  %140 = load i8*, i8** %41, align 8
  call void @free(i8* %140) #5
  br label %141

141:                                              ; preds = %135, %139
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %35) #5
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %39) #5
  br label %152

142:                                              ; preds = %132
  %143 = call i32 @strcmp(i8* %114, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11, i64 0, i64 0)) #9
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %157

145:                                              ; preds = %142
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %34) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %34, i8 -86, i64 40, i1 false) #5
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %35) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %35, i8 -86, i64 1024, i1 false) #5
  store <2 x i8*> <i8* getelementptr inbounds ([104 x i8], [104 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([104 x i8], [104 x i8]* @.str.12, i64 0, i64 0)>, <2 x i8*>* %51, align 16
  store i32 103, i32* %36, align 16
  store i8* %35, i8** %37, align 8
  store i32 0, i32* %38, align 16
  %146 = call fastcc i32 @interpret_expr(%struct._FcFormatContext* nonnull %9, %struct._FcPattern* %1, %struct._FcStrBuf* %2, i8 zeroext 0) #5
  %147 = load i32, i32* %38, align 16
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %151, label %149

149:                                              ; preds = %145
  %150 = load i8*, i8** %37, align 8
  call void @free(i8* %150) #5
  br label %151

151:                                              ; preds = %145, %149
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %35) #5
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %34) #5
  br label %152

152:                                              ; preds = %151, %141, %130, %125
  %153 = phi i32 [ %126, %125 ], [ %131, %130 ], [ %136, %141 ], [ %146, %151 ]
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %762

155:                                              ; preds = %152
  %156 = load i8*, i8** %24, align 8
  br label %157

157:                                              ; preds = %142, %155
  %158 = phi i8* [ %156, %155 ], [ %114, %142 ]
  call void (i8*, ...) @message(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13, i64 0, i64 0), i8* %158) #5
  br label %1319

159:                                              ; preds = %105
  %160 = getelementptr inbounds i8, i8* %90, i64 2
  store i8* %160, i8** %16, align 8
  %161 = call fastcc i32 @interpret_expr(%struct._FcFormatContext* %0, %struct._FcPattern* %1, %struct._FcStrBuf* %2, i8 zeroext 125) #5
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %1319, label %163

163:                                              ; preds = %159
  %164 = load i8*, i8** %16, align 8
  %165 = load i8, i8* %164, align 1
  %166 = icmp eq i8 %165, 125
  br i1 %166, label %167, label %169

167:                                              ; preds = %163
  %168 = getelementptr inbounds i8, i8* %164, i64 1
  store i8* %168, i8** %16, align 8
  br label %762

169:                                              ; preds = %163
  %170 = load i8*, i8** %29, align 8
  %171 = load i32, i32* %30, align 8
  %172 = sext i32 %171 to i64
  %173 = getelementptr inbounds i8, i8* %170, i64 %172
  %174 = icmp eq i8* %164, %173
  br i1 %174, label %175, label %176

175:                                              ; preds = %169
  call void (i8*, ...) @message(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i32 125) #5
  br label %1319

176:                                              ; preds = %169
  %177 = ptrtoint i8* %164 to i64
  %178 = ptrtoint i8* %170 to i64
  %179 = add i64 %177, 1
  %180 = sub i64 %179, %178
  call void (i8*, ...) @message(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i32 125, i64 %180) #5
  br label %1319

181:                                              ; preds = %105
  %182 = getelementptr inbounds i8, i8* %90, i64 2
  store i8* %182, i8** %16, align 8
  %183 = call %struct._FcObjectSet* @IA__FcObjectSetCreate() #5
  %184 = icmp eq %struct._FcObjectSet* %183, null
  br i1 %184, label %1319, label %185

185:                                              ; preds = %181
  %186 = call fastcc i32 @read_word(%struct._FcFormatContext* %0) #5
  %187 = icmp eq i32 %186, 0
  br i1 %187, label %192, label %188

188:                                              ; preds = %185, %197
  %189 = load i8*, i8** %24, align 8
  %190 = call i32 @IA__FcObjectSetAdd(%struct._FcObjectSet* nonnull %183, i8* %189) #5
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %193

192:                                              ; preds = %185, %197, %188
  call void @IA__FcObjectSetDestroy(%struct._FcObjectSet* nonnull %183) #5
  br label %1319

193:                                              ; preds = %188
  %194 = load i8*, i8** %16, align 8
  %195 = load i8, i8* %194, align 1
  %196 = icmp eq i8 %195, 44
  br i1 %196, label %197, label %201

197:                                              ; preds = %193
  %198 = getelementptr inbounds i8, i8* %194, i64 1
  store i8* %198, i8** %16, align 8
  %199 = call fastcc i32 @read_word(%struct._FcFormatContext* %0) #5
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %192, label %188

201:                                              ; preds = %193
  %202 = call %struct._FcPattern* @IA__FcPatternFilter(%struct._FcPattern* %1, %struct._FcObjectSet* nonnull %183) #5
  call void @IA__FcObjectSetDestroy(%struct._FcObjectSet* nonnull %183) #5
  %203 = icmp eq %struct._FcPattern* %202, null
  br i1 %203, label %1319, label %204

204:                                              ; preds = %201
  %205 = load i8*, i8** %16, align 8
  %206 = load i8, i8* %205, align 1
  %207 = icmp eq i8 %206, 123
  br i1 %207, label %220, label %208

208:                                              ; preds = %204
  %209 = load i8*, i8** %29, align 8
  %210 = load i32, i32* %30, align 8
  %211 = sext i32 %210 to i64
  %212 = getelementptr inbounds i8, i8* %209, i64 %211
  %213 = icmp eq i8* %205, %212
  br i1 %213, label %214, label %215

214:                                              ; preds = %208
  call void (i8*, ...) @message(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i32 123) #5
  br label %1319

215:                                              ; preds = %208
  %216 = ptrtoint i8* %205 to i64
  %217 = ptrtoint i8* %209 to i64
  %218 = add i64 %216, 1
  %219 = sub i64 %218, %217
  call void (i8*, ...) @message(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i32 123, i64 %219) #5
  br label %1319

220:                                              ; preds = %204
  %221 = getelementptr inbounds i8, i8* %205, i64 1
  store i8* %221, i8** %16, align 8
  %222 = call fastcc i32 @interpret_expr(%struct._FcFormatContext* %0, %struct._FcPattern* nonnull %202, %struct._FcStrBuf* %2, i8 zeroext 125) #5
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %1319, label %224

224:                                              ; preds = %220
  %225 = load i8*, i8** %16, align 8
  %226 = load i8, i8* %225, align 1
  %227 = icmp eq i8 %226, 125
  br i1 %227, label %240, label %228

228:                                              ; preds = %224
  %229 = load i8*, i8** %29, align 8
  %230 = load i32, i32* %30, align 8
  %231 = sext i32 %230 to i64
  %232 = getelementptr inbounds i8, i8* %229, i64 %231
  %233 = icmp eq i8* %225, %232
  br i1 %233, label %234, label %235

234:                                              ; preds = %228
  call void (i8*, ...) @message(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i32 125) #5
  br label %1319

235:                                              ; preds = %228
  %236 = ptrtoint i8* %225 to i64
  %237 = ptrtoint i8* %229 to i64
  %238 = add i64 %236, 1
  %239 = sub i64 %238, %237
  call void (i8*, ...) @message(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i32 125, i64 %239) #5
  br label %1319

240:                                              ; preds = %224
  %241 = getelementptr inbounds i8, i8* %225, i64 1
  store i8* %241, i8** %16, align 8
  call void @IA__FcPatternDestroy(%struct._FcPattern* nonnull %202) #5
  br label %762

242:                                              ; preds = %105
  %243 = getelementptr inbounds i8, i8* %90, i64 2
  store i8* %243, i8** %16, align 8
  %244 = call %struct._FcPattern* @IA__FcPatternDuplicate(%struct._FcPattern* %1) #5
  %245 = icmp eq %struct._FcPattern* %244, null
  br i1 %245, label %1319, label %246

246:                                              ; preds = %242
  %247 = call fastcc i32 @read_word(%struct._FcFormatContext* %0) #5
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %249, label %250

249:                                              ; preds = %246, %255
  call void @IA__FcPatternDestroy(%struct._FcPattern* nonnull %244) #5
  br label %1319

250:                                              ; preds = %246, %255
  %251 = load i8*, i8** %24, align 8
  %252 = call i32 @IA__FcPatternDel(%struct._FcPattern* nonnull %244, i8* %251) #5
  %253 = load i8*, i8** %16, align 8
  %254 = load i8, i8* %253, align 1
  switch i8 %254, label %259 [
    i8 44, label %255
    i8 123, label %271
  ]

255:                                              ; preds = %250
  %256 = getelementptr inbounds i8, i8* %253, i64 1
  store i8* %256, i8** %16, align 8
  %257 = call fastcc i32 @read_word(%struct._FcFormatContext* %0) #5
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %249, label %250

259:                                              ; preds = %250
  %260 = load i8*, i8** %29, align 8
  %261 = load i32, i32* %30, align 8
  %262 = sext i32 %261 to i64
  %263 = getelementptr inbounds i8, i8* %260, i64 %262
  %264 = icmp eq i8* %253, %263
  br i1 %264, label %265, label %266

265:                                              ; preds = %259
  call void (i8*, ...) @message(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i32 123) #5
  br label %1319

266:                                              ; preds = %259
  %267 = ptrtoint i8* %253 to i64
  %268 = ptrtoint i8* %260 to i64
  %269 = add i64 %267, 1
  %270 = sub i64 %269, %268
  call void (i8*, ...) @message(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i32 123, i64 %270) #5
  br label %1319

271:                                              ; preds = %250
  %272 = getelementptr inbounds i8, i8* %253, i64 1
  store i8* %272, i8** %16, align 8
  %273 = call fastcc i32 @interpret_expr(%struct._FcFormatContext* %0, %struct._FcPattern* nonnull %244, %struct._FcStrBuf* %2, i8 zeroext 125) #5
  %274 = icmp eq i32 %273, 0
  br i1 %274, label %1319, label %275

275:                                              ; preds = %271
  %276 = load i8*, i8** %16, align 8
  %277 = load i8, i8* %276, align 1
  %278 = icmp eq i8 %277, 125
  br i1 %278, label %291, label %279

279:                                              ; preds = %275
  %280 = load i8*, i8** %29, align 8
  %281 = load i32, i32* %30, align 8
  %282 = sext i32 %281 to i64
  %283 = getelementptr inbounds i8, i8* %280, i64 %282
  %284 = icmp eq i8* %276, %283
  br i1 %284, label %285, label %286

285:                                              ; preds = %279
  call void (i8*, ...) @message(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i32 125) #5
  br label %1319

286:                                              ; preds = %279
  %287 = ptrtoint i8* %276 to i64
  %288 = ptrtoint i8* %280 to i64
  %289 = add i64 %287, 1
  %290 = sub i64 %289, %288
  call void (i8*, ...) @message(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i32 125, i64 %290) #5
  br label %1319

291:                                              ; preds = %275
  %292 = getelementptr inbounds i8, i8* %276, i64 1
  store i8* %292, i8** %16, align 8
  call void @IA__FcPatternDestroy(%struct._FcPattern* nonnull %244) #5
  br label %762

293:                                              ; preds = %105
  %294 = getelementptr inbounds i8, i8* %90, i64 2
  br label %295

295:                                              ; preds = %315, %293
  %296 = phi i8* [ %294, %293 ], [ %321, %315 ]
  %297 = phi i32 [ 1, %293 ], [ %320, %315 ]
  store i8* %296, i8** %16, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 16, i1 false)
  %298 = load i8, i8* %296, align 1
  %299 = icmp eq i8 %298, 33
  br i1 %299, label %300, label %302

300:                                              ; preds = %295
  %301 = getelementptr inbounds i8, i8* %296, i64 1
  store i8* %301, i8** %16, align 8
  br label %302

302:                                              ; preds = %300, %295
  %303 = phi i32 [ 1, %300 ], [ 0, %295 ]
  %304 = call fastcc i32 @read_word(%struct._FcFormatContext* %0) #5
  %305 = icmp eq i32 %304, 0
  br i1 %305, label %314, label %306

306:                                              ; preds = %302
  %307 = icmp eq i32 %297, 0
  br i1 %307, label %315, label %308

308:                                              ; preds = %306
  %309 = load i8*, i8** %24, align 8
  %310 = call i32 @IA__FcPatternGet(%struct._FcPattern* %1, i8* %309, i32 0, %struct._FcValue* nonnull %7) #5
  %311 = icmp eq i32 %310, 0
  %312 = zext i1 %311 to i32
  %313 = icmp ne i32 %303, %312
  br label %315

314:                                              ; preds = %302
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #5
  br label %1319

315:                                              ; preds = %306, %308
  %316 = phi i1 [ false, %306 ], [ %313, %308 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #5
  %317 = load i8*, i8** %16, align 8
  %318 = load i8, i8* %317, align 1
  %319 = icmp eq i8 %318, 44
  %320 = zext i1 %316 to i32
  %321 = getelementptr inbounds i8, i8* %317, i64 1
  br i1 %319, label %295, label %322

322:                                              ; preds = %315
  br i1 %316, label %323, label %363

323:                                              ; preds = %322
  %324 = icmp eq i8 %318, 123
  br i1 %324, label %337, label %325

325:                                              ; preds = %323
  %326 = load i8*, i8** %29, align 8
  %327 = load i32, i32* %30, align 8
  %328 = sext i32 %327 to i64
  %329 = getelementptr inbounds i8, i8* %326, i64 %328
  %330 = icmp eq i8* %317, %329
  br i1 %330, label %331, label %332

331:                                              ; preds = %325
  call void (i8*, ...) @message(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i32 123) #5
  br label %1319

332:                                              ; preds = %325
  %333 = ptrtoint i8* %317 to i64
  %334 = ptrtoint i8* %326 to i64
  %335 = add i64 %333, 1
  %336 = sub i64 %335, %334
  call void (i8*, ...) @message(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i32 123, i64 %336) #5
  br label %1319

337:                                              ; preds = %323
  store i8* %321, i8** %16, align 8
  %338 = call fastcc i32 @interpret_expr(%struct._FcFormatContext* %0, %struct._FcPattern* %1, %struct._FcStrBuf* %2, i8 zeroext 125) #5
  %339 = icmp eq i32 %338, 0
  br i1 %339, label %1319, label %340

340:                                              ; preds = %337
  %341 = load i8*, i8** %16, align 8
  %342 = load i8, i8* %341, align 1
  %343 = icmp eq i8 %342, 125
  br i1 %343, label %356, label %344

344:                                              ; preds = %340
  %345 = load i8*, i8** %29, align 8
  %346 = load i32, i32* %30, align 8
  %347 = sext i32 %346 to i64
  %348 = getelementptr inbounds i8, i8* %345, i64 %347
  %349 = icmp eq i8* %341, %348
  br i1 %349, label %350, label %351

350:                                              ; preds = %344
  call void (i8*, ...) @message(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i32 125) #5
  br label %1319

351:                                              ; preds = %344
  %352 = ptrtoint i8* %341 to i64
  %353 = ptrtoint i8* %345 to i64
  %354 = add i64 %352, 1
  %355 = sub i64 %354, %353
  call void (i8*, ...) @message(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i32 125, i64 %355) #5
  br label %1319

356:                                              ; preds = %340
  %357 = getelementptr inbounds i8, i8* %341, i64 1
  store i8* %357, i8** %16, align 8
  %358 = load i8, i8* %357, align 1
  %359 = icmp eq i8 %358, 123
  br i1 %359, label %360, label %762

360:                                              ; preds = %356
  %361 = call fastcc i32 @skip_subexpr(%struct._FcFormatContext* %0) #5
  %362 = icmp eq i32 %361, 0
  br i1 %362, label %1319, label %762

363:                                              ; preds = %322
  %364 = call fastcc i32 @skip_subexpr(%struct._FcFormatContext* %0) #5
  %365 = icmp eq i32 %364, 0
  br i1 %365, label %1319, label %366

366:                                              ; preds = %363
  %367 = load i8*, i8** %16, align 8
  %368 = load i8, i8* %367, align 1
  %369 = icmp eq i8 %368, 123
  br i1 %369, label %370, label %762

370:                                              ; preds = %366
  %371 = getelementptr inbounds i8, i8* %367, i64 1
  store i8* %371, i8** %16, align 8
  %372 = call fastcc i32 @interpret_expr(%struct._FcFormatContext* %0, %struct._FcPattern* %1, %struct._FcStrBuf* %2, i8 zeroext 125) #5
  %373 = icmp eq i32 %372, 0
  br i1 %373, label %1319, label %374

374:                                              ; preds = %370
  %375 = load i8*, i8** %16, align 8
  %376 = load i8, i8* %375, align 1
  %377 = icmp eq i8 %376, 125
  br i1 %377, label %390, label %378

378:                                              ; preds = %374
  %379 = load i8*, i8** %29, align 8
  %380 = load i32, i32* %30, align 8
  %381 = sext i32 %380 to i64
  %382 = getelementptr inbounds i8, i8* %379, i64 %381
  %383 = icmp eq i8* %375, %382
  br i1 %383, label %384, label %385

384:                                              ; preds = %378
  call void (i8*, ...) @message(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i32 125) #5
  br label %1319

385:                                              ; preds = %378
  %386 = ptrtoint i8* %375 to i64
  %387 = ptrtoint i8* %379 to i64
  %388 = add i64 %386, 1
  %389 = sub i64 %388, %387
  call void (i8*, ...) @message(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i32 125, i64 %389) #5
  br label %1319

390:                                              ; preds = %374
  %391 = getelementptr inbounds i8, i8* %375, i64 1
  store i8* %391, i8** %16, align 8
  br label %762

392:                                              ; preds = %105
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 16, i1 false) #5
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %32) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %32, i8 -86, i64 64, i1 false) #5
  %393 = load i8, i8* %106, align 1
  %394 = icmp eq i8 %393, 35
  br i1 %394, label %407, label %395

395:                                              ; preds = %392
  %396 = load i8*, i8** %29, align 8
  %397 = load i32, i32* %30, align 8
  %398 = sext i32 %397 to i64
  %399 = getelementptr inbounds i8, i8* %396, i64 %398
  %400 = icmp eq i8* %106, %399
  br i1 %400, label %401, label %402

401:                                              ; preds = %395
  call void (i8*, ...) @message(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i32 35) #5
  br label %421

402:                                              ; preds = %395
  %403 = ptrtoint i8* %106 to i64
  %404 = ptrtoint i8* %396 to i64
  %405 = add i64 %403, 1
  %406 = sub i64 %405, %404
  call void (i8*, ...) @message(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i32 35, i64 %406) #5
  br label %421

407:                                              ; preds = %392
  %408 = getelementptr inbounds i8, i8* %90, i64 2
  store i8* %408, i8** %16, align 8
  %409 = call fastcc i32 @read_word(%struct._FcFormatContext* %0) #5
  %410 = icmp eq i32 %409, 0
  br i1 %410, label %421, label %411

411:                                              ; preds = %407
  %412 = load i8*, i8** %24, align 8
  %413 = call i32 @IA__FcPatternFindIter(%struct._FcPattern* %1, %struct._FcPatternIter* nonnull %11, i8* %412) #5
  %414 = icmp eq i32 %413, 0
  br i1 %414, label %417, label %415

415:                                              ; preds = %411
  %416 = call i32 @IA__FcPatternIterValueCount(%struct._FcPattern* %1, %struct._FcPatternIter* nonnull %11) #5
  br label %417

417:                                              ; preds = %415, %411
  %418 = phi i32 [ %416, %415 ], [ 0, %411 ]
  %419 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %32, i64 64, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15, i64 0, i64 0), i32 %418) #5
  %420 = call i32 @FcStrBufString(%struct._FcStrBuf* %2, i8* nonnull %32) #5
  br label %421

421:                                              ; preds = %417, %407, %402, %401
  %422 = phi i32 [ 1, %417 ], [ 0, %407 ], [ 0, %401 ], [ 0, %402 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %32) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #5
  br label %759

423:                                              ; preds = %105
  %424 = getelementptr inbounds i8, i8* %90, i64 2
  store i8* %424, i8** %16, align 8
  %425 = load i8, i8* %424, align 1
  %426 = icmp eq i8 %425, 93
  br i1 %426, label %440, label %427

427:                                              ; preds = %423
  %428 = getelementptr inbounds i8, i8* %90, i64 2
  %429 = load i8*, i8** %29, align 8
  %430 = load i32, i32* %30, align 8
  %431 = sext i32 %430 to i64
  %432 = getelementptr inbounds i8, i8* %429, i64 %431
  %433 = icmp eq i8* %428, %432
  br i1 %433, label %434, label %435

434:                                              ; preds = %427
  call void (i8*, ...) @message(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i32 93) #5
  br label %1319

435:                                              ; preds = %427
  %436 = ptrtoint i8* %428 to i64
  %437 = ptrtoint i8* %429 to i64
  %438 = add i64 %436, 1
  %439 = sub i64 %438, %437
  call void (i8*, ...) @message(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i32 93, i64 %439) #5
  br label %1319

440:                                              ; preds = %423
  %441 = getelementptr inbounds i8, i8* %90, i64 3
  store i8* %441, i8** %16, align 8
  %442 = call %struct._FcObjectSet* @IA__FcObjectSetCreate() #5
  %443 = icmp eq %struct._FcObjectSet* %442, null
  br i1 %443, label %1319, label %444

444:                                              ; preds = %440
  %445 = call fastcc i32 @read_word(%struct._FcFormatContext* %0) #5
  %446 = icmp eq i32 %445, 0
  br i1 %446, label %451, label %447

447:                                              ; preds = %444, %456
  %448 = load i8*, i8** %24, align 8
  %449 = call i32 @IA__FcObjectSetAdd(%struct._FcObjectSet* nonnull %442, i8* %448) #5
  %450 = icmp eq i32 %449, 0
  br i1 %450, label %451, label %452

451:                                              ; preds = %444, %456, %447
  call void @IA__FcObjectSetDestroy(%struct._FcObjectSet* nonnull %442) #5
  br label %1319

452:                                              ; preds = %447
  %453 = load i8*, i8** %16, align 8
  %454 = load i8, i8* %453, align 1
  %455 = icmp eq i8 %454, 44
  br i1 %455, label %456, label %460

456:                                              ; preds = %452
  %457 = getelementptr inbounds i8, i8* %453, i64 1
  store i8* %457, i8** %16, align 8
  %458 = call fastcc i32 @read_word(%struct._FcFormatContext* %0) #5
  %459 = icmp eq i32 %458, 0
  br i1 %459, label %451, label %447

460:                                              ; preds = %452
  %461 = getelementptr inbounds %struct._FcObjectSet, %struct._FcObjectSet* %442, i64 0, i32 0
  %462 = load i32, i32* %461, align 8
  %463 = icmp eq i32 %462, 1
  br i1 %463, label %464, label %480

464:                                              ; preds = %460
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #5
  store %struct._FcLangSet* inttoptr (i64 -6148914691236517206 to %struct._FcLangSet*), %struct._FcLangSet** %5, align 8
  %465 = getelementptr inbounds %struct._FcObjectSet, %struct._FcObjectSet* %442, i64 0, i32 2
  %466 = load i8**, i8*** %465, align 8
  %467 = load i8*, i8** %466, align 8
  %468 = call i32 @IA__FcPatternGetLangSet(%struct._FcPattern* %1, i8* %467, i32 0, %struct._FcLangSet** nonnull %5) #5
  %469 = icmp eq i32 %468, 0
  br i1 %469, label %470, label %477

470:                                              ; preds = %464
  %471 = load %struct._FcLangSet*, %struct._FcLangSet** %5, align 8
  %472 = call %struct._FcStrSet* @IA__FcLangSetGetLangs(%struct._FcLangSet* %471) #5
  %473 = icmp eq %struct._FcStrSet* %472, null
  br i1 %473, label %479, label %474

474:                                              ; preds = %470
  %475 = call %struct._FcStrList* @IA__FcStrListCreate(%struct._FcStrSet* nonnull %472) #5
  %476 = icmp eq %struct._FcStrList* %475, null
  br i1 %476, label %479, label %477

477:                                              ; preds = %474, %464
  %478 = phi %struct._FcStrList* [ %475, %474 ], [ null, %464 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #5
  br label %480

479:                                              ; preds = %470, %474
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #5
  br label %579

480:                                              ; preds = %477, %460
  %481 = phi %struct._FcStrList* [ null, %460 ], [ %478, %477 ]
  %482 = call %struct._FcPattern* @IA__FcPatternDuplicate(%struct._FcPattern* %1) #5
  %483 = icmp eq %struct._FcPattern* %482, null
  br i1 %483, label %575, label %484

484:                                              ; preds = %480
  %485 = load i8*, i8** %16, align 8
  %486 = icmp eq %struct._FcStrList* %481, null
  %487 = getelementptr inbounds %struct._FcObjectSet, %struct._FcObjectSet* %442, i64 0, i32 2
  %488 = getelementptr inbounds i8, i8* %485, i64 1
  br label %489

489:                                              ; preds = %565, %484
  %490 = phi i32 [ 0, %484 ], [ %567, %565 ]
  br i1 %486, label %491, label %494

491:                                              ; preds = %489
  %492 = load i32, i32* %461, align 8
  %493 = icmp sgt i32 %492, 0
  br i1 %493, label %504, label %568

494:                                              ; preds = %489
  %495 = load i8**, i8*** %487, align 8
  %496 = load i8*, i8** %495, align 8
  %497 = call i32 @IA__FcPatternDel(%struct._FcPattern* nonnull %482, i8* %496) #5
  %498 = call i8* @IA__FcStrListNext(%struct._FcStrList* nonnull %481) #5
  %499 = icmp eq i8* %498, null
  br i1 %499, label %568, label %500

500:                                              ; preds = %494
  %501 = load i8**, i8*** %487, align 8
  %502 = load i8*, i8** %501, align 8
  %503 = call i32 @IA__FcPatternAddString(%struct._FcPattern* nonnull %482, i8* %502, i8* nonnull %498) #5
  br label %531

504:                                              ; preds = %491, %523
  %505 = phi i64 [ %525, %523 ], [ 0, %491 ]
  %506 = phi i32 [ %524, %523 ], [ 1, %491 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 16, i1 false)
  %507 = load i8**, i8*** %487, align 8
  %508 = getelementptr inbounds i8*, i8** %507, i64 %505
  %509 = load i8*, i8** %508, align 8
  %510 = call i32 @IA__FcPatternDel(%struct._FcPattern* nonnull %482, i8* %509) #5
  %511 = load i8**, i8*** %487, align 8
  %512 = getelementptr inbounds i8*, i8** %511, i64 %505
  %513 = load i8*, i8** %512, align 8
  %514 = call i32 @IA__FcPatternGet(%struct._FcPattern* %1, i8* %513, i32 %490, %struct._FcValue* nonnull %6) #5
  %515 = icmp eq i32 %514, 0
  br i1 %515, label %516, label %523

516:                                              ; preds = %504
  %517 = load i8**, i8*** %487, align 8
  %518 = getelementptr inbounds i8*, i8** %517, i64 %505
  %519 = load i8*, i8** %518, align 8
  %520 = load i32, i32* %27, align 8
  %521 = load i8*, i8** %28, align 8
  %522 = call i32 @IA__FcPatternAdd(%struct._FcPattern* nonnull %482, i8* %519, i32 %520, i8* %521, i32 0) #5
  br label %523

523:                                              ; preds = %516, %504
  %524 = phi i32 [ 0, %516 ], [ %506, %504 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #5
  %525 = add nuw nsw i64 %505, 1
  %526 = load i32, i32* %461, align 8
  %527 = sext i32 %526 to i64
  %528 = icmp slt i64 %525, %527
  br i1 %528, label %504, label %529

529:                                              ; preds = %523
  %530 = icmp eq i32 %524, 0
  br i1 %530, label %531, label %568

531:                                              ; preds = %529, %500
  store i8* %485, i8** %16, align 8
  %532 = load i8, i8* %485, align 1
  %533 = icmp eq i8 %532, 123
  br i1 %533, label %546, label %534

534:                                              ; preds = %531
  %535 = load i8*, i8** %29, align 8
  %536 = load i32, i32* %30, align 8
  %537 = sext i32 %536 to i64
  %538 = getelementptr inbounds i8, i8* %535, i64 %537
  %539 = icmp eq i8* %485, %538
  br i1 %539, label %540, label %541

540:                                              ; preds = %534
  call void (i8*, ...) @message(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i32 123) #5
  br label %573

541:                                              ; preds = %534
  %542 = ptrtoint i8* %485 to i64
  %543 = ptrtoint i8* %535 to i64
  %544 = add i64 %542, 1
  %545 = sub i64 %544, %543
  call void (i8*, ...) @message(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i32 123, i64 %545) #5
  br label %573

546:                                              ; preds = %531
  store i8* %488, i8** %16, align 8
  %547 = call fastcc i32 @interpret_expr(%struct._FcFormatContext* %0, %struct._FcPattern* nonnull %482, %struct._FcStrBuf* %2, i8 zeroext 125) #5
  %548 = icmp eq i32 %547, 0
  br i1 %548, label %573, label %549

549:                                              ; preds = %546
  %550 = load i8*, i8** %16, align 8
  %551 = load i8, i8* %550, align 1
  %552 = icmp eq i8 %551, 125
  br i1 %552, label %565, label %553

553:                                              ; preds = %549
  %554 = load i8*, i8** %29, align 8
  %555 = load i32, i32* %30, align 8
  %556 = sext i32 %555 to i64
  %557 = getelementptr inbounds i8, i8* %554, i64 %556
  %558 = icmp eq i8* %550, %557
  br i1 %558, label %559, label %560

559:                                              ; preds = %553
  call void (i8*, ...) @message(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i32 125) #5
  br label %573

560:                                              ; preds = %553
  %561 = ptrtoint i8* %550 to i64
  %562 = ptrtoint i8* %554 to i64
  %563 = add i64 %561, 1
  %564 = sub i64 %563, %562
  call void (i8*, ...) @message(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i32 125, i64 %564) #5
  br label %573

565:                                              ; preds = %549
  %566 = getelementptr inbounds i8, i8* %550, i64 1
  store i8* %566, i8** %16, align 8
  %567 = add nuw nsw i32 %490, 1
  br label %489

568:                                              ; preds = %491, %529, %494
  %569 = load i8*, i8** %16, align 8
  %570 = icmp eq i8* %569, %485
  br i1 %570, label %571, label %573

571:                                              ; preds = %568
  %572 = call fastcc i32 @skip_subexpr(%struct._FcFormatContext* %0) #5
  br label %573

573:                                              ; preds = %546, %560, %559, %541, %540, %571, %568
  %574 = phi i32 [ 1, %571 ], [ 1, %568 ], [ 0, %540 ], [ 0, %541 ], [ 0, %559 ], [ 0, %560 ], [ 0, %546 ]
  call void @IA__FcPatternDestroy(%struct._FcPattern* nonnull %482) #5
  br label %575

575:                                              ; preds = %573, %480
  %576 = phi i32 [ %574, %573 ], [ 1, %480 ]
  %577 = icmp eq %struct._FcStrList* %481, null
  br i1 %577, label %579, label %578

578:                                              ; preds = %575
  call void @IA__FcStrListDone(%struct._FcStrList* nonnull %481) #5
  br label %579

579:                                              ; preds = %479, %578, %575
  %580 = phi i32 [ 1, %479 ], [ %576, %578 ], [ %576, %575 ]
  call void @IA__FcObjectSetDestroy(%struct._FcObjectSet* nonnull %442) #5
  br label %759

581:                                              ; preds = %105
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 16, i1 false) #5
  %582 = load i8, i8* %106, align 1
  %583 = icmp eq i8 %582, 58
  br i1 %583, label %584, label %586

584:                                              ; preds = %581
  %585 = getelementptr inbounds i8, i8* %90, i64 2
  store i8* %585, i8** %16, align 8
  br label %586

586:                                              ; preds = %584, %581
  %587 = phi i1 [ false, %584 ], [ true, %581 ]
  %588 = call fastcc i32 @read_word(%struct._FcFormatContext* %0) #5
  %589 = icmp eq i32 %588, 0
  br i1 %589, label %757, label %590

590:                                              ; preds = %586
  %591 = load i8*, i8** %16, align 8
  %592 = load i8, i8* %591, align 1
  %593 = icmp eq i8 %592, 91
  br i1 %593, label %594, label %624

594:                                              ; preds = %590
  %595 = getelementptr inbounds i8, i8* %591, i64 1
  store i8* %595, i8** %16, align 8
  %596 = call i64 @strtol(i8* %595, i8** %16, i32 10) #5
  %597 = trunc i64 %596 to i32
  %598 = icmp slt i32 %597, 0
  %599 = load i8*, i8** %16, align 8
  br i1 %598, label %600, label %606

600:                                              ; preds = %594
  %601 = getelementptr inbounds i8, i8* %599, i64 -1
  %602 = load i64, i64* %45, align 8
  %603 = ptrtoint i8* %601 to i64
  %604 = add i64 %603, 1
  %605 = sub i64 %604, %602
  call void (i8*, ...) @message(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.16, i64 0, i64 0), i64 %605) #5
  br label %757

606:                                              ; preds = %594
  %607 = load i8, i8* %599, align 1
  %608 = icmp eq i8 %607, 93
  br i1 %608, label %621, label %609

609:                                              ; preds = %606
  %610 = load i8*, i8** %29, align 8
  %611 = load i32, i32* %30, align 8
  %612 = sext i32 %611 to i64
  %613 = getelementptr inbounds i8, i8* %610, i64 %612
  %614 = icmp eq i8* %599, %613
  br i1 %614, label %615, label %616

615:                                              ; preds = %609
  call void (i8*, ...) @message(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i32 93) #5
  br label %757

616:                                              ; preds = %609
  %617 = ptrtoint i8* %599 to i64
  %618 = ptrtoint i8* %610 to i64
  %619 = add i64 %617, 1
  %620 = sub i64 %619, %618
  call void (i8*, ...) @message(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i32 93, i64 %620) #5
  br label %757

621:                                              ; preds = %606
  %622 = getelementptr inbounds i8, i8* %599, i64 1
  store i8* %622, i8** %16, align 8
  %623 = load i8, i8* %622, align 1
  br label %624

624:                                              ; preds = %621, %590
  %625 = phi i8 [ %623, %621 ], [ %592, %590 ]
  %626 = phi i8* [ %622, %621 ], [ %591, %590 ]
  %627 = phi i32 [ %597, %621 ], [ -1, %590 ]
  %628 = icmp eq i8 %625, 61
  br i1 %628, label %629, label %632

629:                                              ; preds = %624
  %630 = getelementptr inbounds i8, i8* %626, i64 1
  store i8* %630, i8** %16, align 8
  %631 = load i8, i8* %630, align 1
  br label %632

632:                                              ; preds = %629, %624
  %633 = phi i8 [ %631, %629 ], [ %625, %624 ]
  %634 = phi i8* [ %630, %629 ], [ %626, %624 ]
  %635 = phi i1 [ false, %629 ], [ true, %624 ]
  %636 = icmp eq i8 %633, 58
  br i1 %636, label %639, label %637

637:                                              ; preds = %632
  %638 = load i8*, i8** %24, align 8
  br label %700

639:                                              ; preds = %632
  %640 = getelementptr inbounds i8, i8* %634, i64 1
  store i8* %640, i8** %16, align 8
  %641 = load i8*, i8** %24, align 8
  %642 = call i64 @strlen(i8* %641) #9
  %643 = getelementptr inbounds i8, i8* %641, i64 1
  %644 = getelementptr inbounds i8, i8* %643, i64 %642
  store i8* %644, i8** %24, align 8
  %645 = load i8, i8* %640, align 1
  %646 = icmp eq i8 %645, 45
  br i1 %646, label %659, label %647

647:                                              ; preds = %639
  %648 = load i8*, i8** %29, align 8
  %649 = load i32, i32* %30, align 8
  %650 = sext i32 %649 to i64
  %651 = getelementptr inbounds i8, i8* %648, i64 %650
  %652 = icmp eq i8* %640, %651
  br i1 %652, label %653, label %654

653:                                              ; preds = %647
  call void (i8*, ...) @message(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i32 45) #5
  br label %698

654:                                              ; preds = %647
  %655 = ptrtoint i8* %640 to i64
  %656 = ptrtoint i8* %648 to i64
  %657 = add i64 %655, 1
  %658 = sub i64 %657, %656
  call void (i8*, ...) @message(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i32 45, i64 %658) #5
  br label %698

659:                                              ; preds = %639
  %660 = getelementptr inbounds i8, i8* %634, i64 2
  store i8* %660, i8** %16, align 8
  br label %661

661:                                              ; preds = %685, %659
  %662 = phi i8* [ %660, %659 ], [ %687, %685 ]
  %663 = phi i8* [ %644, %659 ], [ %686, %685 ]
  %664 = load i8, i8* %662, align 1
  switch i8 %664, label %665 [
    i8 0, label %690
    i8 125, label %690
    i8 124, label %690
  ]

665:                                              ; preds = %661
  %666 = icmp eq i8 %664, 92
  %667 = getelementptr inbounds i8, i8* %662, i64 1
  store i8* %667, i8** %16, align 8
  br i1 %666, label %668, label %688

668:                                              ; preds = %665
  %669 = load i8, i8* %667, align 1
  %670 = icmp eq i8 %669, 0
  br i1 %670, label %685, label %671

671:                                              ; preds = %668
  %672 = getelementptr inbounds i8, i8* %662, i64 2
  store i8* %672, i8** %16, align 8
  %673 = load i8, i8* %667, align 1
  %674 = sext i8 %673 to i32
  switch i32 %674, label %681 [
    i32 97, label %682
    i32 98, label %675
    i32 102, label %676
    i32 110, label %677
    i32 114, label %678
    i32 116, label %679
    i32 118, label %680
  ]

675:                                              ; preds = %671
  br label %682

676:                                              ; preds = %671
  br label %682

677:                                              ; preds = %671
  br label %682

678:                                              ; preds = %671
  br label %682

679:                                              ; preds = %671
  br label %682

680:                                              ; preds = %671
  br label %682

681:                                              ; preds = %671
  br label %682

682:                                              ; preds = %671, %675, %676, %677, %678, %679, %680, %681, %688
  %683 = phi i8 [ %689, %688 ], [ %673, %681 ], [ 11, %680 ], [ 9, %679 ], [ 13, %678 ], [ 10, %677 ], [ 12, %676 ], [ 8, %675 ], [ 7, %671 ]
  %684 = getelementptr inbounds i8, i8* %663, i64 1
  store i8 %683, i8* %663, align 1
  br label %685

685:                                              ; preds = %682, %668
  %686 = phi i8* [ %663, %668 ], [ %684, %682 ]
  %687 = load i8*, i8** %16, align 8
  br label %661

688:                                              ; preds = %665
  %689 = load i8, i8* %662, align 1
  br label %682

690:                                              ; preds = %661, %661, %661
  store i8 0, i8* %663, align 1
  %691 = load i8*, i8** %24, align 8
  %692 = icmp eq i8* %663, %691
  br i1 %692, label %693, label %699

693:                                              ; preds = %690
  %694 = load i64, i64* %44, align 8
  %695 = load i64, i64* %45, align 8
  %696 = add i64 %694, 1
  %697 = sub i64 %696, %695
  call void (i8*, ...) @message(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.17, i64 0, i64 0), i64 %697) #5
  br label %698

698:                                              ; preds = %693, %654, %653
  store i8* %641, i8** %24, align 8
  br label %757

699:                                              ; preds = %690
  store i8* %641, i8** %24, align 8
  br label %700

700:                                              ; preds = %699, %637
  %701 = phi i8* [ %641, %699 ], [ %638, %637 ]
  %702 = phi i8* [ %691, %699 ], [ null, %637 ]
  %703 = call i32 @IA__FcPatternFindIter(%struct._FcPattern* %1, %struct._FcPatternIter* nonnull %13, i8* %701) #5
  %704 = icmp ne i32 %703, 0
  %705 = icmp ne i8* %702, null
  %706 = or i1 %705, %704
  br i1 %706, label %707, label %757

707:                                              ; preds = %700
  br i1 %587, label %710, label %708

708:                                              ; preds = %707
  %709 = call i32 @FcStrBufChar(%struct._FcStrBuf* %2, i8 zeroext 58) #5
  br label %710

710:                                              ; preds = %708, %707
  br i1 %635, label %715, label %711

711:                                              ; preds = %710
  %712 = load i8*, i8** %24, align 8
  %713 = call i32 @FcStrBufString(%struct._FcStrBuf* %2, i8* %712) #5
  %714 = call i32 @FcStrBufChar(%struct._FcStrBuf* %2, i8 zeroext 61) #5
  br label %715

715:                                              ; preds = %711, %710
  %716 = call %struct._FcValueList* @FcPatternIterGetValues(%struct._FcPattern* %1, %struct._FcPatternIter* nonnull %13) #5
  %717 = icmp eq i32 %627, -1
  br i1 %717, label %749, label %718

718:                                              ; preds = %715
  %719 = icmp ne %struct._FcValueList* %716, null
  %720 = icmp sgt i32 %627, 0
  %721 = and i1 %720, %719
  br i1 %721, label %722, label %739

722:                                              ; preds = %718, %722
  %723 = phi %struct._FcValueList* [ %734, %722 ], [ %716, %718 ]
  %724 = phi i32 [ %735, %722 ], [ %627, %718 ]
  %725 = getelementptr inbounds %struct._FcValueList, %struct._FcValueList* %723, i64 0, i32 0
  %726 = load %struct._FcValueList*, %struct._FcValueList** %725, align 8
  %727 = ptrtoint %struct._FcValueList* %726 to i64
  %728 = and i64 %727, 1
  %729 = icmp eq i64 %728, 0
  %730 = ptrtoint %struct._FcValueList* %723 to i64
  %731 = and i64 %727, -2
  %732 = add nsw i64 %731, %730
  %733 = inttoptr i64 %732 to %struct._FcValueList*
  %734 = select i1 %729, %struct._FcValueList* %726, %struct._FcValueList* %733
  %735 = add nsw i32 %724, -1
  %736 = icmp ne %struct._FcValueList* %734, null
  %737 = icmp sgt i32 %735, 0
  %738 = and i1 %737, %736
  br i1 %738, label %722, label %739

739:                                              ; preds = %722, %718
  %740 = phi i32 [ %627, %718 ], [ %735, %722 ]
  %741 = phi %struct._FcValueList* [ %716, %718 ], [ %734, %722 ]
  %742 = phi i1 [ %719, %718 ], [ %736, %722 ]
  %743 = icmp eq i32 %740, 0
  %744 = and i1 %743, %742
  br i1 %744, label %745, label %753

745:                                              ; preds = %739
  %746 = getelementptr inbounds %struct._FcValueList, %struct._FcValueList* %741, i64 0, i32 1
  %747 = call i32 @FcNameUnparseValue(%struct._FcStrBuf* %2, %struct._FcValue* %746, i8* null) #5
  %748 = icmp eq i32 %747, 0
  br i1 %748, label %757, label %756

749:                                              ; preds = %715
  %750 = icmp eq %struct._FcValueList* %716, null
  br i1 %750, label %753, label %751

751:                                              ; preds = %749
  %752 = call i32 @FcNameUnparseValueList(%struct._FcStrBuf* %2, %struct._FcValueList* nonnull %716, i8* null) #5
  br label %756

753:                                              ; preds = %749, %739
  br i1 %705, label %754, label %756

754:                                              ; preds = %753
  %755 = call i32 @FcStrBufString(%struct._FcStrBuf* %2, i8* nonnull %702) #5
  br label %756

756:                                              ; preds = %754, %753, %751, %745
  br label %757

757:                                              ; preds = %756, %745, %700, %698, %616, %615, %600, %586
  %758 = phi i32 [ 0, %600 ], [ 0, %586 ], [ 0, %745 ], [ 1, %756 ], [ 1, %700 ], [ 0, %698 ], [ 0, %615 ], [ 0, %616 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #5
  br label %759

759:                                              ; preds = %579, %757, %421
  %760 = phi i32 [ %758, %757 ], [ %422, %421 ], [ %580, %579 ]
  %761 = icmp eq i32 %760, 0
  br i1 %761, label %1319, label %762

762:                                              ; preds = %167, %360, %390, %356, %366, %291, %240, %152, %120, %759
  %763 = sext i32 %107 to i64
  br label %764

764:                                              ; preds = %1249, %762
  %765 = load i8*, i8** %16, align 8
  %766 = load i8, i8* %765, align 1
  %767 = icmp eq i8 %766, 124
  br i1 %767, label %768, label %1252

768:                                              ; preds = %764
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %46) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 152, i1 false) #5
  call void @llvm.lifetime.start.p0i8(i64 8192, i8* nonnull %47) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %47, i8 -86, i64 8192, i1 false) #5
  %769 = load i8, i8* %765, align 1
  %770 = icmp eq i8 %769, 124
  br i1 %770, label %783, label %771

771:                                              ; preds = %768
  %772 = load i8*, i8** %29, align 8
  %773 = load i32, i32* %30, align 8
  %774 = sext i32 %773 to i64
  %775 = getelementptr inbounds i8, i8* %772, i64 %774
  %776 = icmp eq i8* %765, %775
  br i1 %776, label %777, label %778

777:                                              ; preds = %771
  call void (i8*, ...) @message(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i32 124) #5
  br label %1248

778:                                              ; preds = %771
  %779 = ptrtoint i8* %765 to i64
  %780 = ptrtoint i8* %772 to i64
  %781 = add i64 %779, 1
  %782 = sub i64 %781, %780
  call void (i8*, ...) @message(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i32 124, i64 %782) #5
  br label %1248

783:                                              ; preds = %768
  %784 = getelementptr inbounds i8, i8* %765, i64 1
  store i8* %784, i8** %16, align 8
  %785 = call fastcc i32 @read_word(%struct._FcFormatContext* %0) #5
  %786 = icmp eq i32 %785, 0
  br i1 %786, label %1248, label %787

787:                                              ; preds = %783
  %788 = call i32 @FcStrBufChar(%struct._FcStrBuf* %2, i8 zeroext 0) #5
  %789 = load i32, i32* %48, align 4
  %790 = icmp eq i32 %789, 0
  br i1 %790, label %791, label %1248

791:                                              ; preds = %787
  %792 = load i8*, i8** %49, align 8
  %793 = getelementptr inbounds i8, i8* %792, i64 %763
  store i32 %107, i32* %23, align 8
  %794 = load i8*, i8** %24, align 8
  %795 = call i32 @strcmp(i8* %794, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.18, i64 0, i64 0)) #9
  %796 = icmp eq i32 %795, 0
  br i1 %796, label %797, label %799

797:                                              ; preds = %791
  %798 = call i8* @IA__FcStrDowncase(i8* %793) #5
  br label %809

799:                                              ; preds = %791
  %800 = call i32 @strcmp(i8* %794, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.19, i64 0, i64 0)) #9
  %801 = icmp eq i32 %800, 0
  br i1 %801, label %802, label %804

802:                                              ; preds = %799
  %803 = call i8* @IA__FcStrBasename(i8* %793) #5
  br label %809

804:                                              ; preds = %799
  %805 = call i32 @strcmp(i8* %794, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #9
  %806 = icmp eq i32 %805, 0
  br i1 %806, label %807, label %814

807:                                              ; preds = %804
  %808 = call i8* @IA__FcStrDirname(i8* %793) #5
  br label %809

809:                                              ; preds = %807, %802, %797
  %810 = phi i8* [ %808, %807 ], [ %803, %802 ], [ %798, %797 ]
  %811 = icmp eq i8* %810, null
  br i1 %811, label %1248, label %812

812:                                              ; preds = %809
  %813 = call i32 @FcStrBufString(%struct._FcStrBuf* %2, i8* nonnull %810) #5
  call void @IA__FcStrFree(i8* nonnull %810) #5
  br label %1249

814:                                              ; preds = %804
  call void @FcStrBufInit(%struct._FcStrBuf* nonnull %14, i8* nonnull %47, i32 8192) #5
  %815 = load i8*, i8** %24, align 8
  %816 = call i32 @strcmp(i8* %815, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21, i64 0, i64 0)) #9
  %817 = icmp eq i32 %816, 0
  br i1 %817, label %818, label %828

818:                                              ; preds = %814, %824
  %819 = phi i8* [ %826, %824 ], [ %793, %814 ]
  %820 = load i8, i8* %819, align 1
  switch i8 %820, label %824 [
    i8 0, label %1240
    i8 92, label %821
    i8 34, label %821
  ]

821:                                              ; preds = %818, %818
  %822 = call i32 @FcStrBufChar(%struct._FcStrBuf* nonnull %14, i8 zeroext 92) #5
  %823 = load i8, i8* %819, align 1
  br label %824

824:                                              ; preds = %821, %818
  %825 = phi i8 [ %820, %818 ], [ %823, %821 ]
  %826 = getelementptr inbounds i8, i8* %819, i64 1
  %827 = call i32 @FcStrBufChar(%struct._FcStrBuf* nonnull %14, i8 zeroext %825) #5
  br label %818

828:                                              ; preds = %814
  %829 = call i32 @strcmp(i8* %815, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.22, i64 0, i64 0)) #9
  %830 = icmp eq i32 %829, 0
  br i1 %830, label %831, label %844

831:                                              ; preds = %828
  %832 = call i32 @FcStrBufChar(%struct._FcStrBuf* nonnull %14, i8 zeroext 39) #5
  br label %833

833:                                              ; preds = %840, %831
  %834 = phi i8* [ %793, %831 ], [ %841, %840 ]
  %835 = load i8, i8* %834, align 1
  switch i8 %835, label %838 [
    i8 0, label %842
    i8 39, label %836
  ]

836:                                              ; preds = %833
  %837 = call i32 @FcStrBufString(%struct._FcStrBuf* nonnull %14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i64 0, i64 0)) #5
  br label %840

838:                                              ; preds = %833
  %839 = call i32 @FcStrBufChar(%struct._FcStrBuf* nonnull %14, i8 zeroext %835) #5
  br label %840

840:                                              ; preds = %838, %836
  %841 = getelementptr inbounds i8, i8* %834, i64 1
  br label %833

842:                                              ; preds = %833
  %843 = call i32 @FcStrBufChar(%struct._FcStrBuf* nonnull %14, i8 zeroext 39) #5
  br label %1240

844:                                              ; preds = %828
  %845 = call i32 @strcmp(i8* %815, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23, i64 0, i64 0)) #9
  %846 = icmp eq i32 %845, 0
  br i1 %846, label %847, label %860

847:                                              ; preds = %844, %858
  %848 = phi i8* [ %859, %858 ], [ %793, %844 ]
  %849 = load i8, i8* %848, align 1
  switch i8 %849, label %856 [
    i8 0, label %1240
    i8 38, label %850
    i8 60, label %852
    i8 62, label %854
  ]

850:                                              ; preds = %847
  %851 = call i32 @FcStrBufString(%struct._FcStrBuf* nonnull %14, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i64 0, i64 0)) #5
  br label %858

852:                                              ; preds = %847
  %853 = call i32 @FcStrBufString(%struct._FcStrBuf* nonnull %14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.30, i64 0, i64 0)) #5
  br label %858

854:                                              ; preds = %847
  %855 = call i32 @FcStrBufString(%struct._FcStrBuf* nonnull %14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.31, i64 0, i64 0)) #5
  br label %858

856:                                              ; preds = %847
  %857 = call i32 @FcStrBufChar(%struct._FcStrBuf* nonnull %14, i8 zeroext %849) #5
  br label %858

858:                                              ; preds = %856, %854, %852, %850
  %859 = getelementptr inbounds i8, i8* %848, i64 1
  br label %847

860:                                              ; preds = %844
  %861 = call i32 @strcmp(i8* %815, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.24, i64 0, i64 0)) #9
  %862 = icmp eq i32 %861, 0
  br i1 %862, label %863, label %959

863:                                              ; preds = %860
  %864 = load i8*, i8** %16, align 8
  %865 = load i8, i8* %864, align 1
  %866 = icmp eq i8 %865, 40
  br i1 %866, label %879, label %867

867:                                              ; preds = %863
  %868 = load i8*, i8** %29, align 8
  %869 = load i32, i32* %30, align 8
  %870 = sext i32 %869 to i64
  %871 = getelementptr inbounds i8, i8* %868, i64 %870
  %872 = icmp eq i8* %864, %871
  br i1 %872, label %873, label %874

873:                                              ; preds = %867
  call void (i8*, ...) @message(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i32 40) #5
  br label %1244

874:                                              ; preds = %867
  %875 = ptrtoint i8* %864 to i64
  %876 = ptrtoint i8* %868 to i64
  %877 = add i64 %875, 1
  %878 = sub i64 %877, %876
  call void (i8*, ...) @message(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i32 40, i64 %878) #5
  br label %1244

879:                                              ; preds = %863
  %880 = getelementptr inbounds i8, i8* %864, i64 1
  store i8* %880, i8** %16, align 8
  br label %881

881:                                              ; preds = %905, %879
  %882 = phi i8* [ %880, %879 ], [ %907, %905 ]
  %883 = phi i8* [ %815, %879 ], [ %906, %905 ]
  %884 = load i8, i8* %882, align 1
  switch i8 %884, label %885 [
    i8 0, label %910
    i8 125, label %910
    i8 41, label %910
  ]

885:                                              ; preds = %881
  %886 = icmp eq i8 %884, 92
  %887 = getelementptr inbounds i8, i8* %882, i64 1
  store i8* %887, i8** %16, align 8
  br i1 %886, label %888, label %908

888:                                              ; preds = %885
  %889 = load i8, i8* %887, align 1
  %890 = icmp eq i8 %889, 0
  br i1 %890, label %905, label %891

891:                                              ; preds = %888
  %892 = getelementptr inbounds i8, i8* %882, i64 2
  store i8* %892, i8** %16, align 8
  %893 = load i8, i8* %887, align 1
  %894 = sext i8 %893 to i32
  switch i32 %894, label %901 [
    i32 97, label %902
    i32 98, label %895
    i32 102, label %896
    i32 110, label %897
    i32 114, label %898
    i32 116, label %899
    i32 118, label %900
  ]

895:                                              ; preds = %891
  br label %902

896:                                              ; preds = %891
  br label %902

897:                                              ; preds = %891
  br label %902

898:                                              ; preds = %891
  br label %902

899:                                              ; preds = %891
  br label %902

900:                                              ; preds = %891
  br label %902

901:                                              ; preds = %891
  br label %902

902:                                              ; preds = %891, %895, %896, %897, %898, %899, %900, %901, %908
  %903 = phi i8 [ %909, %908 ], [ %893, %901 ], [ 11, %900 ], [ 9, %899 ], [ 13, %898 ], [ 10, %897 ], [ 12, %896 ], [ 8, %895 ], [ 7, %891 ]
  %904 = getelementptr inbounds i8, i8* %883, i64 1
  store i8 %903, i8* %883, align 1
  br label %905

905:                                              ; preds = %902, %888
  %906 = phi i8* [ %883, %888 ], [ %904, %902 ]
  %907 = load i8*, i8** %16, align 8
  br label %881

908:                                              ; preds = %885
  %909 = load i8, i8* %882, align 1
  br label %902

910:                                              ; preds = %881, %881, %881
  store i8 0, i8* %883, align 1
  %911 = load i8*, i8** %24, align 8
  %912 = icmp eq i8* %883, %911
  br i1 %912, label %913, label %918

913:                                              ; preds = %910
  %914 = load i64, i64* %44, align 8
  %915 = load i64, i64* %45, align 8
  %916 = add i64 %914, 1
  %917 = sub i64 %916, %915
  call void (i8*, ...) @message(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.17, i64 0, i64 0), i64 %917) #5
  br label %1244

918:                                              ; preds = %910
  %919 = load i8*, i8** %16, align 8
  %920 = load i8, i8* %919, align 1
  %921 = icmp eq i8 %920, 41
  br i1 %921, label %934, label %922

922:                                              ; preds = %918
  %923 = load i8*, i8** %29, align 8
  %924 = load i32, i32* %30, align 8
  %925 = sext i32 %924 to i64
  %926 = getelementptr inbounds i8, i8* %923, i64 %925
  %927 = icmp eq i8* %919, %926
  br i1 %927, label %928, label %929

928:                                              ; preds = %922
  call void (i8*, ...) @message(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i32 41) #5
  br label %1244

929:                                              ; preds = %922
  %930 = ptrtoint i8* %919 to i64
  %931 = ptrtoint i8* %923 to i64
  %932 = add i64 %930, 1
  %933 = sub i64 %932, %931
  call void (i8*, ...) @message(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i32 41, i64 %933) #5
  br label %1244

934:                                              ; preds = %918
  %935 = getelementptr inbounds i8, i8* %919, i64 1
  store i8* %935, i8** %16, align 8
  %936 = load i8, i8* %793, align 1
  %937 = icmp eq i8 %936, 0
  br i1 %937, label %1240, label %938

938:                                              ; preds = %934
  %939 = call i8* @strpbrk(i8* %793, i8* %911) #9
  %940 = icmp eq i8* %939, null
  br i1 %940, label %941, label %944

941:                                              ; preds = %955, %938
  %942 = phi i8* [ %793, %938 ], [ %952, %955 ]
  %943 = call i32 @FcStrBufString(%struct._FcStrBuf* nonnull %14, i8* %942) #5
  br label %1240

944:                                              ; preds = %938, %955
  %945 = phi i8* [ %957, %955 ], [ %939, %938 ]
  %946 = phi i8* [ %952, %955 ], [ %793, %938 ]
  %947 = ptrtoint i8* %945 to i64
  %948 = ptrtoint i8* %946 to i64
  %949 = sub i64 %947, %948
  %950 = trunc i64 %949 to i32
  %951 = call i32 @FcStrBufData(%struct._FcStrBuf* nonnull %14, i8* %946, i32 %950) #5
  %952 = getelementptr inbounds i8, i8* %945, i64 1
  %953 = load i8, i8* %952, align 1
  %954 = icmp eq i8 %953, 0
  br i1 %954, label %1240, label %955

955:                                              ; preds = %944
  %956 = load i8*, i8** %24, align 8
  %957 = call i8* @strpbrk(i8* %952, i8* %956) #9
  %958 = icmp eq i8* %957, null
  br i1 %958, label %941, label %944

959:                                              ; preds = %860
  %960 = call i32 @strcmp(i8* %815, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.25, i64 0, i64 0)) #9
  %961 = icmp eq i32 %960, 0
  br i1 %961, label %962, label %1063

962:                                              ; preds = %959
  %963 = load i8*, i8** %16, align 8
  %964 = load i8, i8* %963, align 1
  %965 = icmp eq i8 %964, 40
  br i1 %965, label %978, label %966

966:                                              ; preds = %962
  %967 = load i8*, i8** %29, align 8
  %968 = load i32, i32* %30, align 8
  %969 = sext i32 %968 to i64
  %970 = getelementptr inbounds i8, i8* %967, i64 %969
  %971 = icmp eq i8* %963, %970
  br i1 %971, label %972, label %973

972:                                              ; preds = %966
  call void (i8*, ...) @message(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i32 40) #5
  br label %1244

973:                                              ; preds = %966
  %974 = ptrtoint i8* %963 to i64
  %975 = ptrtoint i8* %967 to i64
  %976 = add i64 %974, 1
  %977 = sub i64 %976, %975
  call void (i8*, ...) @message(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i32 40, i64 %977) #5
  br label %1244

978:                                              ; preds = %962
  %979 = getelementptr inbounds i8, i8* %963, i64 1
  store i8* %979, i8** %16, align 8
  br label %980

980:                                              ; preds = %1004, %978
  %981 = phi i8* [ %979, %978 ], [ %1006, %1004 ]
  %982 = phi i8* [ %815, %978 ], [ %1005, %1004 ]
  %983 = load i8, i8* %981, align 1
  switch i8 %983, label %984 [
    i8 0, label %1009
    i8 125, label %1009
    i8 41, label %1009
  ]

984:                                              ; preds = %980
  %985 = icmp eq i8 %983, 92
  %986 = getelementptr inbounds i8, i8* %981, i64 1
  store i8* %986, i8** %16, align 8
  br i1 %985, label %987, label %1007

987:                                              ; preds = %984
  %988 = load i8, i8* %986, align 1
  %989 = icmp eq i8 %988, 0
  br i1 %989, label %1004, label %990

990:                                              ; preds = %987
  %991 = getelementptr inbounds i8, i8* %981, i64 2
  store i8* %991, i8** %16, align 8
  %992 = load i8, i8* %986, align 1
  %993 = sext i8 %992 to i32
  switch i32 %993, label %1000 [
    i32 97, label %1001
    i32 98, label %994
    i32 102, label %995
    i32 110, label %996
    i32 114, label %997
    i32 116, label %998
    i32 118, label %999
  ]

994:                                              ; preds = %990
  br label %1001

995:                                              ; preds = %990
  br label %1001

996:                                              ; preds = %990
  br label %1001

997:                                              ; preds = %990
  br label %1001

998:                                              ; preds = %990
  br label %1001

999:                                              ; preds = %990
  br label %1001

1000:                                             ; preds = %990
  br label %1001

1001:                                             ; preds = %990, %994, %995, %996, %997, %998, %999, %1000, %1007
  %1002 = phi i8 [ %1008, %1007 ], [ %992, %1000 ], [ 11, %999 ], [ 9, %998 ], [ 13, %997 ], [ 10, %996 ], [ 12, %995 ], [ 8, %994 ], [ 7, %990 ]
  %1003 = getelementptr inbounds i8, i8* %982, i64 1
  store i8 %1002, i8* %982, align 1
  br label %1004

1004:                                             ; preds = %1001, %987
  %1005 = phi i8* [ %982, %987 ], [ %1003, %1001 ]
  %1006 = load i8*, i8** %16, align 8
  br label %980

1007:                                             ; preds = %984
  %1008 = load i8, i8* %981, align 1
  br label %1001

1009:                                             ; preds = %980, %980, %980
  store i8 0, i8* %982, align 1
  %1010 = load i8*, i8** %24, align 8
  %1011 = icmp eq i8* %982, %1010
  br i1 %1011, label %1012, label %1017

1012:                                             ; preds = %1009
  %1013 = load i64, i64* %44, align 8
  %1014 = load i64, i64* %45, align 8
  %1015 = add i64 %1013, 1
  %1016 = sub i64 %1015, %1014
  call void (i8*, ...) @message(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.17, i64 0, i64 0), i64 %1016) #5
  br label %1244

1017:                                             ; preds = %1009
  %1018 = load i8*, i8** %16, align 8
  %1019 = load i8, i8* %1018, align 1
  %1020 = icmp eq i8 %1019, 41
  br i1 %1020, label %1033, label %1021

1021:                                             ; preds = %1017
  %1022 = load i8*, i8** %29, align 8
  %1023 = load i32, i32* %30, align 8
  %1024 = sext i32 %1023 to i64
  %1025 = getelementptr inbounds i8, i8* %1022, i64 %1024
  %1026 = icmp eq i8* %1018, %1025
  br i1 %1026, label %1027, label %1028

1027:                                             ; preds = %1021
  call void (i8*, ...) @message(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i32 41) #5
  br label %1244

1028:                                             ; preds = %1021
  %1029 = ptrtoint i8* %1018 to i64
  %1030 = ptrtoint i8* %1022 to i64
  %1031 = add i64 %1029, 1
  %1032 = sub i64 %1031, %1030
  call void (i8*, ...) @message(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i32 41, i64 %1032) #5
  br label %1244

1033:                                             ; preds = %1017
  %1034 = getelementptr inbounds i8, i8* %1018, i64 1
  store i8* %1034, i8** %16, align 8
  %1035 = load i8, i8* %793, align 1
  %1036 = icmp eq i8 %1035, 0
  br i1 %1036, label %1240, label %1037

1037:                                             ; preds = %1033
  %1038 = call i8* @strpbrk(i8* %793, i8* %1010) #9
  %1039 = icmp eq i8* %1038, null
  br i1 %1039, label %1040, label %1043

1040:                                             ; preds = %1059, %1037
  %1041 = phi i8* [ %793, %1037 ], [ %1056, %1059 ]
  %1042 = call i32 @FcStrBufString(%struct._FcStrBuf* nonnull %14, i8* %1041) #5
  br label %1240

1043:                                             ; preds = %1037, %1059
  %1044 = phi i8* [ %1061, %1059 ], [ %1038, %1037 ]
  %1045 = phi i8* [ %1056, %1059 ], [ %793, %1037 ]
  %1046 = ptrtoint i8* %1044 to i64
  %1047 = ptrtoint i8* %1045 to i64
  %1048 = sub i64 %1046, %1047
  %1049 = trunc i64 %1048 to i32
  %1050 = call i32 @FcStrBufData(%struct._FcStrBuf* nonnull %14, i8* %1045, i32 %1049) #5
  %1051 = load i8*, i8** %24, align 8
  %1052 = load i8, i8* %1051, align 1
  %1053 = call i32 @FcStrBufChar(%struct._FcStrBuf* nonnull %14, i8 zeroext %1052) #5
  %1054 = load i8, i8* %1044, align 1
  %1055 = call i32 @FcStrBufChar(%struct._FcStrBuf* nonnull %14, i8 zeroext %1054) #5
  %1056 = getelementptr inbounds i8, i8* %1044, i64 1
  %1057 = load i8, i8* %1056, align 1
  %1058 = icmp eq i8 %1057, 0
  br i1 %1058, label %1240, label %1059

1059:                                             ; preds = %1043
  %1060 = load i8*, i8** %24, align 8
  %1061 = call i8* @strpbrk(i8* %1056, i8* %1060) #9
  %1062 = icmp eq i8* %1061, null
  br i1 %1062, label %1040, label %1043

1063:                                             ; preds = %959
  %1064 = call i32 @strcmp(i8* %815, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #9
  %1065 = icmp eq i32 %1064, 0
  br i1 %1065, label %1066, label %1244

1066:                                             ; preds = %1063
  %1067 = load i8*, i8** %16, align 8
  %1068 = load i8, i8* %1067, align 1
  %1069 = icmp eq i8 %1068, 40
  br i1 %1069, label %1082, label %1070

1070:                                             ; preds = %1066
  %1071 = load i8*, i8** %29, align 8
  %1072 = load i32, i32* %30, align 8
  %1073 = sext i32 %1072 to i64
  %1074 = getelementptr inbounds i8, i8* %1071, i64 %1073
  %1075 = icmp eq i8* %1067, %1074
  br i1 %1075, label %1076, label %1077

1076:                                             ; preds = %1070
  call void (i8*, ...) @message(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i32 40) #5
  br label %1244

1077:                                             ; preds = %1070
  %1078 = ptrtoint i8* %1067 to i64
  %1079 = ptrtoint i8* %1071 to i64
  %1080 = add i64 %1078, 1
  %1081 = sub i64 %1080, %1079
  call void (i8*, ...) @message(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i32 40, i64 %1081) #5
  br label %1244

1082:                                             ; preds = %1066
  %1083 = getelementptr inbounds i8, i8* %1067, i64 1
  store i8* %1083, i8** %16, align 8
  br label %1084

1084:                                             ; preds = %1108, %1082
  %1085 = phi i8* [ %1083, %1082 ], [ %1110, %1108 ]
  %1086 = phi i8* [ %815, %1082 ], [ %1109, %1108 ]
  %1087 = load i8, i8* %1085, align 1
  switch i8 %1087, label %1088 [
    i8 0, label %1113
    i8 125, label %1113
    i8 44, label %1113
  ]

1088:                                             ; preds = %1084
  %1089 = icmp eq i8 %1087, 92
  %1090 = getelementptr inbounds i8, i8* %1085, i64 1
  store i8* %1090, i8** %16, align 8
  br i1 %1089, label %1091, label %1111

1091:                                             ; preds = %1088
  %1092 = load i8, i8* %1090, align 1
  %1093 = icmp eq i8 %1092, 0
  br i1 %1093, label %1108, label %1094

1094:                                             ; preds = %1091
  %1095 = getelementptr inbounds i8, i8* %1085, i64 2
  store i8* %1095, i8** %16, align 8
  %1096 = load i8, i8* %1090, align 1
  %1097 = sext i8 %1096 to i32
  switch i32 %1097, label %1104 [
    i32 97, label %1105
    i32 98, label %1098
    i32 102, label %1099
    i32 110, label %1100
    i32 114, label %1101
    i32 116, label %1102
    i32 118, label %1103
  ]

1098:                                             ; preds = %1094
  br label %1105

1099:                                             ; preds = %1094
  br label %1105

1100:                                             ; preds = %1094
  br label %1105

1101:                                             ; preds = %1094
  br label %1105

1102:                                             ; preds = %1094
  br label %1105

1103:                                             ; preds = %1094
  br label %1105

1104:                                             ; preds = %1094
  br label %1105

1105:                                             ; preds = %1094, %1098, %1099, %1100, %1101, %1102, %1103, %1104, %1111
  %1106 = phi i8 [ %1112, %1111 ], [ %1096, %1104 ], [ 11, %1103 ], [ 9, %1102 ], [ 13, %1101 ], [ 10, %1100 ], [ 12, %1099 ], [ 8, %1098 ], [ 7, %1094 ]
  %1107 = getelementptr inbounds i8, i8* %1086, i64 1
  store i8 %1106, i8* %1086, align 1
  br label %1108

1108:                                             ; preds = %1105, %1091
  %1109 = phi i8* [ %1086, %1091 ], [ %1107, %1105 ]
  %1110 = load i8*, i8** %16, align 8
  br label %1084

1111:                                             ; preds = %1088
  %1112 = load i8, i8* %1085, align 1
  br label %1105

1113:                                             ; preds = %1084, %1084, %1084
  store i8 0, i8* %1086, align 1
  %1114 = load i8*, i8** %24, align 8
  %1115 = icmp eq i8* %1086, %1114
  br i1 %1115, label %1116, label %1121

1116:                                             ; preds = %1113
  %1117 = load i64, i64* %44, align 8
  %1118 = load i64, i64* %45, align 8
  %1119 = add i64 %1117, 1
  %1120 = sub i64 %1119, %1118
  call void (i8*, ...) @message(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.17, i64 0, i64 0), i64 %1120) #5
  br label %1244

1121:                                             ; preds = %1113
  %1122 = load i8*, i8** %16, align 8
  %1123 = load i8, i8* %1122, align 1
  %1124 = icmp eq i8 %1123, 44
  br i1 %1124, label %1137, label %1125

1125:                                             ; preds = %1121
  %1126 = load i8*, i8** %29, align 8
  %1127 = load i32, i32* %30, align 8
  %1128 = sext i32 %1127 to i64
  %1129 = getelementptr inbounds i8, i8* %1126, i64 %1128
  %1130 = icmp eq i8* %1122, %1129
  br i1 %1130, label %1131, label %1132

1131:                                             ; preds = %1125
  call void (i8*, ...) @message(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i32 44) #5
  br label %1244

1132:                                             ; preds = %1125
  %1133 = ptrtoint i8* %1122 to i64
  %1134 = ptrtoint i8* %1126 to i64
  %1135 = add i64 %1133, 1
  %1136 = sub i64 %1135, %1134
  call void (i8*, ...) @message(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i32 44, i64 %1136) #5
  br label %1244

1137:                                             ; preds = %1121
  %1138 = getelementptr inbounds i8, i8* %1122, i64 1
  store i8* %1138, i8** %16, align 8
  %1139 = call i64 @strlen(i8* %1114) #9
  %1140 = shl i64 %1139, 32
  %1141 = ashr exact i64 %1140, 32
  %1142 = getelementptr inbounds i8, i8* %1114, i64 1
  %1143 = getelementptr inbounds i8, i8* %1142, i64 %1141
  store i8* %1143, i8** %24, align 8
  br label %1144

1144:                                             ; preds = %1168, %1137
  %1145 = phi i8* [ %1138, %1137 ], [ %1170, %1168 ]
  %1146 = phi i8* [ %1143, %1137 ], [ %1169, %1168 ]
  %1147 = load i8, i8* %1145, align 1
  switch i8 %1147, label %1148 [
    i8 0, label %1173
    i8 125, label %1173
    i8 41, label %1173
  ]

1148:                                             ; preds = %1144
  %1149 = icmp eq i8 %1147, 92
  %1150 = getelementptr inbounds i8, i8* %1145, i64 1
  store i8* %1150, i8** %16, align 8
  br i1 %1149, label %1151, label %1171

1151:                                             ; preds = %1148
  %1152 = load i8, i8* %1150, align 1
  %1153 = icmp eq i8 %1152, 0
  br i1 %1153, label %1168, label %1154

1154:                                             ; preds = %1151
  %1155 = getelementptr inbounds i8, i8* %1145, i64 2
  store i8* %1155, i8** %16, align 8
  %1156 = load i8, i8* %1150, align 1
  %1157 = sext i8 %1156 to i32
  switch i32 %1157, label %1164 [
    i32 97, label %1165
    i32 98, label %1158
    i32 102, label %1159
    i32 110, label %1160
    i32 114, label %1161
    i32 116, label %1162
    i32 118, label %1163
  ]

1158:                                             ; preds = %1154
  br label %1165

1159:                                             ; preds = %1154
  br label %1165

1160:                                             ; preds = %1154
  br label %1165

1161:                                             ; preds = %1154
  br label %1165

1162:                                             ; preds = %1154
  br label %1165

1163:                                             ; preds = %1154
  br label %1165

1164:                                             ; preds = %1154
  br label %1165

1165:                                             ; preds = %1154, %1158, %1159, %1160, %1161, %1162, %1163, %1164, %1171
  %1166 = phi i8 [ %1172, %1171 ], [ %1156, %1164 ], [ 11, %1163 ], [ 9, %1162 ], [ 13, %1161 ], [ 10, %1160 ], [ 12, %1159 ], [ 8, %1158 ], [ 7, %1154 ]
  %1167 = getelementptr inbounds i8, i8* %1146, i64 1
  store i8 %1166, i8* %1146, align 1
  br label %1168

1168:                                             ; preds = %1165, %1151
  %1169 = phi i8* [ %1146, %1151 ], [ %1167, %1165 ]
  %1170 = load i8*, i8** %16, align 8
  br label %1144

1171:                                             ; preds = %1148
  %1172 = load i8, i8* %1145, align 1
  br label %1165

1173:                                             ; preds = %1144, %1144, %1144
  store i8 0, i8* %1146, align 1
  %1174 = load i8*, i8** %24, align 8
  %1175 = icmp eq i8* %1146, %1174
  br i1 %1175, label %1176, label %1181

1176:                                             ; preds = %1173
  %1177 = load i64, i64* %44, align 8
  %1178 = load i64, i64* %45, align 8
  %1179 = add i64 %1177, 1
  %1180 = sub i64 %1179, %1178
  call void (i8*, ...) @message(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.17, i64 0, i64 0), i64 %1180) #5
  store i8* %1114, i8** %24, align 8
  br label %1244

1181:                                             ; preds = %1173
  store i8* %1114, i8** %24, align 8
  %1182 = call i64 @strlen(i8* %1143) #9
  %1183 = trunc i64 %1182 to i32
  %1184 = shl i64 %1182, 32
  %1185 = add i64 %1184, -4294967296
  %1186 = ashr exact i64 %1185, 32
  %1187 = getelementptr inbounds i8, i8* %1143, i64 %1186
  %1188 = load i8, i8* %1187, align 1
  %1189 = load i8*, i8** %16, align 8
  %1190 = load i8, i8* %1189, align 1
  %1191 = icmp eq i8 %1190, 41
  br i1 %1191, label %1204, label %1192

1192:                                             ; preds = %1181
  %1193 = load i8*, i8** %29, align 8
  %1194 = load i32, i32* %30, align 8
  %1195 = sext i32 %1194 to i64
  %1196 = getelementptr inbounds i8, i8* %1193, i64 %1195
  %1197 = icmp eq i8* %1189, %1196
  br i1 %1197, label %1198, label %1199

1198:                                             ; preds = %1192
  call void (i8*, ...) @message(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i32 41) #5
  br label %1244

1199:                                             ; preds = %1192
  %1200 = ptrtoint i8* %1189 to i64
  %1201 = ptrtoint i8* %1193 to i64
  %1202 = add i64 %1200, 1
  %1203 = sub i64 %1202, %1201
  call void (i8*, ...) @message(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i32 41, i64 %1203) #5
  br label %1244

1204:                                             ; preds = %1181
  %1205 = getelementptr inbounds i8, i8* %1189, i64 1
  store i8* %1205, i8** %16, align 8
  %1206 = load i8, i8* %793, align 1
  %1207 = icmp eq i8 %1206, 0
  br i1 %1207, label %1240, label %1208

1208:                                             ; preds = %1204
  %1209 = ptrtoint i8* %1114 to i64
  br label %1210

1210:                                             ; preds = %1234, %1208
  %1211 = phi i8* [ %793, %1208 ], [ %1237, %1234 ]
  %1212 = call i8* @strpbrk(i8* %1211, i8* %1114) #9
  %1213 = icmp eq i8* %1212, null
  br i1 %1213, label %1232, label %1214

1214:                                             ; preds = %1210
  %1215 = ptrtoint i8* %1212 to i64
  %1216 = ptrtoint i8* %1211 to i64
  %1217 = sub i64 %1215, %1216
  %1218 = trunc i64 %1217 to i32
  %1219 = call i32 @FcStrBufData(%struct._FcStrBuf* nonnull %14, i8* %1211, i32 %1218) #5
  %1220 = load i8, i8* %1212, align 1
  %1221 = zext i8 %1220 to i32
  %1222 = call i8* @strchr(i8* %1114, i32 %1221) #9
  %1223 = ptrtoint i8* %1222 to i64
  %1224 = sub i64 %1223, %1209
  %1225 = trunc i64 %1224 to i32
  %1226 = icmp slt i32 %1225, %1183
  br i1 %1226, label %1227, label %1234

1227:                                             ; preds = %1214
  %1228 = shl i64 %1224, 32
  %1229 = ashr exact i64 %1228, 32
  %1230 = getelementptr inbounds i8, i8* %1143, i64 %1229
  %1231 = load i8, i8* %1230, align 1
  br label %1234

1232:                                             ; preds = %1210
  %1233 = call i32 @FcStrBufString(%struct._FcStrBuf* nonnull %14, i8* %1211) #5
  br label %1240

1234:                                             ; preds = %1227, %1214
  %1235 = phi i8 [ %1231, %1227 ], [ %1188, %1214 ]
  %1236 = call i32 @FcStrBufChar(%struct._FcStrBuf* nonnull %14, i8 zeroext %1235) #5
  %1237 = getelementptr inbounds i8, i8* %1212, i64 1
  %1238 = load i8, i8* %1237, align 1
  %1239 = icmp eq i8 %1238, 0
  br i1 %1239, label %1240, label %1210

1240:                                             ; preds = %1234, %1043, %944, %847, %818, %1232, %1204, %1040, %1033, %941, %934, %842
  %1241 = call i32 @FcStrBufChar(%struct._FcStrBuf* nonnull %14, i8 zeroext 0) #5
  %1242 = load i8*, i8** %50, align 8
  %1243 = call i32 @FcStrBufString(%struct._FcStrBuf* %2, i8* %1242) #5
  br label %1246

1244:                                             ; preds = %1199, %1198, %1176, %1132, %1131, %1116, %1077, %1076, %1063, %1028, %1027, %1012, %973, %972, %929, %928, %913, %874, %873
  %1245 = load i8*, i8** %24, align 8
  call void (i8*, ...) @message(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.27, i64 0, i64 0), i8* %1245) #5
  br label %1246

1246:                                             ; preds = %1244, %1240
  %1247 = phi i32 [ 0, %1244 ], [ 1, %1240 ]
  call void @FcStrBufDestroy(%struct._FcStrBuf* nonnull %14) #5
  br label %1249

1248:                                             ; preds = %809, %787, %783, %778, %777
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %47) #5
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %46) #5
  br label %1319

1249:                                             ; preds = %1246, %812
  %1250 = phi i32 [ 1, %812 ], [ %1247, %1246 ]
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %47) #5
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %46) #5
  %1251 = icmp eq i32 %1250, 0
  br i1 %1251, label %1319, label %764

1252:                                             ; preds = %764
  %1253 = load i32, i32* %48, align 4
  %1254 = icmp eq i32 %1253, 0
  br i1 %1254, label %1255, label %1319

1255:                                             ; preds = %1252
  %1256 = load i32, i32* %23, align 8
  %1257 = sub nsw i32 %1256, %107
  %1258 = sub i32 0, %89
  %1259 = icmp slt i32 %1257, %1258
  br i1 %1259, label %1260, label %1265

1260:                                             ; preds = %1255, %1260
  %1261 = phi i32 [ %1262, %1260 ], [ %1257, %1255 ]
  %1262 = add i32 %1261, 1
  %1263 = call i32 @FcStrBufChar(%struct._FcStrBuf* %2, i8 zeroext 32) #5
  %1264 = icmp eq i32 %1262, %1258
  br i1 %1264, label %1294, label %1260

1265:                                             ; preds = %1255
  %1266 = icmp slt i32 %1257, %89
  br i1 %1266, label %1267, label %1294

1267:                                             ; preds = %1265, %1267
  %1268 = phi i32 [ %1269, %1267 ], [ %1257, %1265 ]
  %1269 = add i32 %1268, 1
  %1270 = call i32 @FcStrBufChar(%struct._FcStrBuf* %2, i8 zeroext 32) #5
  %1271 = icmp eq i32 %1269, %89
  br i1 %1271, label %1272, label %1267

1272:                                             ; preds = %1267
  %1273 = load i32, i32* %48, align 4
  %1274 = icmp eq i32 %1273, 0
  br i1 %1274, label %1275, label %1319

1275:                                             ; preds = %1272
  %1276 = load i8*, i8** %49, align 8
  %1277 = load i32, i32* %23, align 8
  %1278 = sext i32 %1277 to i64
  %1279 = getelementptr inbounds i8, i8* %1276, i64 %1278
  %1280 = sext i32 %1257 to i64
  %1281 = sub nsw i64 0, %1280
  %1282 = getelementptr inbounds i8, i8* %1279, i64 %1281
  %1283 = shl i64 %88, 32
  %1284 = ashr exact i64 %1283, 32
  %1285 = sub nsw i64 0, %1284
  %1286 = getelementptr inbounds i8, i8* %1279, i64 %1285
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %1282, i8* align 1 %1286, i64 %1280, i1 false) #5
  %1287 = load i8*, i8** %49, align 8
  %1288 = load i32, i32* %23, align 8
  %1289 = sext i32 %1288 to i64
  %1290 = getelementptr inbounds i8, i8* %1287, i64 %1289
  %1291 = getelementptr inbounds i8, i8* %1290, i64 %1285
  %1292 = sub nsw i32 %89, %1257
  %1293 = sext i32 %1292 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %1291, i8 32, i64 %1293, i1 false) #5
  br label %1294

1294:                                             ; preds = %1260, %1265, %1275
  %1295 = load i32, i32* %48, align 4
  %1296 = icmp eq i32 %1295, 0
  br i1 %1296, label %1297, label %1319

1297:                                             ; preds = %1294
  %1298 = load i8*, i8** %16, align 8
  %1299 = load i8, i8* %1298, align 1
  %1300 = icmp eq i8 %1299, 125
  br i1 %1300, label %1301, label %1303

1301:                                             ; preds = %1297
  %1302 = getelementptr inbounds i8, i8* %1298, i64 1
  store i8* %1302, i8** %16, align 8
  br label %74

1303:                                             ; preds = %1297
  %1304 = load i8*, i8** %29, align 8
  %1305 = load i32, i32* %30, align 8
  %1306 = sext i32 %1305 to i64
  %1307 = getelementptr inbounds i8, i8* %1304, i64 %1306
  %1308 = icmp eq i8* %1298, %1307
  br i1 %1308, label %1309, label %1310

1309:                                             ; preds = %1303
  call void (i8*, ...) @message(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i32 125) #5
  br label %1319

1310:                                             ; preds = %1303
  %1311 = ptrtoint i8* %1298 to i64
  %1312 = ptrtoint i8* %1304 to i64
  %1313 = add i64 %1311, 1
  %1314 = sub i64 %1313, %1312
  call void (i8*, ...) @message(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i32 125, i64 %1314) #5
  br label %1319

1315:                                             ; preds = %53
  %1316 = getelementptr inbounds i8, i8* %55, i64 1
  store i8* %1316, i8** %16, align 8
  %1317 = load i8, i8* %55, align 1
  %1318 = call i32 @FcStrBufChar(%struct._FcStrBuf* %2, i8 zeroext %1317) #5
  br label %74

1319:                                             ; preds = %74, %759, %109, %117, %159, %181, %201, %242, %360, %363, %440, %220, %271, %337, %370, %1252, %1272, %1294, %1249, %1310, %1309, %176, %175, %4, %1248, %435, %434, %385, %384, %351, %350, %332, %331, %286, %285, %266, %265, %235, %234, %215, %214, %451, %314, %249, %192, %157, %100, %99
  %1320 = phi i32 [ 0, %99 ], [ 0, %100 ], [ 0, %157 ], [ 0, %192 ], [ 0, %249 ], [ 0, %314 ], [ 0, %451 ], [ 0, %214 ], [ 0, %215 ], [ 0, %234 ], [ 0, %235 ], [ 0, %265 ], [ 0, %266 ], [ 0, %285 ], [ 0, %286 ], [ 0, %331 ], [ 0, %332 ], [ 0, %350 ], [ 0, %351 ], [ 0, %384 ], [ 0, %385 ], [ 0, %434 ], [ 0, %435 ], [ 0, %1248 ], [ 1, %4 ], [ 0, %175 ], [ 0, %176 ], [ 0, %1309 ], [ 0, %1310 ], [ 0, %1249 ], [ 1, %74 ], [ 0, %759 ], [ 0, %109 ], [ 0, %117 ], [ 0, %159 ], [ 0, %181 ], [ 0, %201 ], [ 0, %242 ], [ 0, %360 ], [ 0, %363 ], [ 0, %440 ], [ 0, %220 ], [ 0, %271 ], [ 0, %337 ], [ 0, %370 ], [ 0, %1252 ], [ 0, %1272 ], [ 0, %1294 ]
  ret i32 %1320
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #4

declare hidden i32 @FcStrBufChar(%struct._FcStrBuf*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i64 @strtol(i8* readonly, i8** nocapture, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal void @message(i8* nocapture readonly, ...) unnamed_addr #0 {
  %2 = alloca [1 x %struct.__va_list_tag], align 16
  %3 = bitcast [1 x %struct.__va_list_tag]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #5
  %4 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %2, i64 0, i64 0
  %5 = bitcast [1 x %struct.__va_list_tag]* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %3)
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %7 = call i64 @fwrite(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.2, i64 0, i64 0), i64 34, i64 1, %struct._IO_FILE* %6) #10
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %9 = call i32 @vfprintf(%struct._IO_FILE* %8, i8* %0, %struct.__va_list_tag* nonnull %4) #10
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %11 = call i64 @fwrite(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %10) #10
  call void @llvm.va_end(i8* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #5
  ret void
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #5

; Function Attrs: nofree nounwind
declare i32 @vfprintf(%struct._IO_FILE* nocapture, i8* nocapture readonly, %struct.__va_list_tag*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #5

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @read_word(%struct._FcFormatContext* nocapture) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct._FcFormatContext, %struct._FcFormatContext* %0, i64 0, i32 3
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %struct._FcFormatContext, %struct._FcFormatContext* %0, i64 0, i32 1
  br label %5

5:                                                ; preds = %26, %1
  %6 = phi i8* [ %28, %26 ], [ %3, %1 ]
  br label %7

7:                                                ; preds = %5, %10
  %8 = load i8*, i8** %4, align 8
  %9 = load i8, i8* %8, align 1
  switch i8 %9, label %29 [
    i8 0, label %45
    i8 92, label %10
  ]

10:                                               ; preds = %7
  %11 = getelementptr inbounds i8, i8* %8, i64 1
  store i8* %11, i8** %4, align 8
  %12 = load i8, i8* %11, align 1
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %7, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds i8, i8* %8, i64 1
  %16 = getelementptr inbounds i8, i8* %8, i64 2
  store i8* %16, i8** %4, align 8
  %17 = load i8, i8* %15, align 1
  %18 = sext i8 %17 to i32
  switch i32 %18, label %25 [
    i32 97, label %26
    i32 98, label %19
    i32 102, label %20
    i32 110, label %21
    i32 114, label %22
    i32 116, label %23
    i32 118, label %24
  ]

19:                                               ; preds = %14
  br label %26

20:                                               ; preds = %14
  br label %26

21:                                               ; preds = %14
  br label %26

22:                                               ; preds = %14
  br label %26

23:                                               ; preds = %14
  br label %26

24:                                               ; preds = %14
  br label %26

25:                                               ; preds = %14
  br label %26

26:                                               ; preds = %25, %24, %23, %22, %21, %20, %19, %14, %42
  %27 = phi i8 [ %44, %42 ], [ %17, %25 ], [ 11, %24 ], [ 9, %23 ], [ 13, %22 ], [ 10, %21 ], [ 12, %20 ], [ 8, %19 ], [ 7, %14 ]
  %28 = getelementptr inbounds i8, i8* %6, i64 1
  store i8 %27, i8* %6, align 1
  br label %5

29:                                               ; preds = %7
  %30 = icmp ult i8 %9, 48
  br i1 %30, label %45, label %31

31:                                               ; preds = %29
  %32 = icmp ult i8 %9, 58
  br i1 %32, label %42, label %33

33:                                               ; preds = %31
  %34 = icmp ult i8 %9, 65
  br i1 %34, label %45, label %35

35:                                               ; preds = %33
  %36 = icmp ult i8 %9, 91
  br i1 %36, label %42, label %37

37:                                               ; preds = %35
  %38 = icmp ugt i8 %9, 96
  %39 = add i8 %9, -123
  %40 = icmp ugt i8 %39, 3
  %41 = and i1 %38, %40
  br i1 %41, label %42, label %45

42:                                               ; preds = %37, %35, %31
  %43 = getelementptr inbounds i8, i8* %8, i64 1
  store i8* %43, i8** %4, align 8
  %44 = load i8, i8* %8, align 1
  br label %26

45:                                               ; preds = %37, %33, %29, %7
  store i8 0, i8* %6, align 1
  %46 = load i8*, i8** %2, align 8
  %47 = icmp eq i8* %6, %46
  br i1 %47, label %48, label %55

48:                                               ; preds = %45
  %49 = bitcast i8** %4 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %struct._FcFormatContext* %0 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = add i64 %50, 1
  %54 = sub i64 %53, %52
  tail call void (i8*, ...) @message(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.14, i64 0, i64 0), i64 %54)
  br label %55

55:                                               ; preds = %45, %48
  %56 = phi i32 [ 0, %48 ], [ 1, %45 ]
  ret i32 %56
}

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #6

declare hidden i8* @IA__FcNameUnparse(%struct._FcPattern*) local_unnamed_addr #2

declare hidden i32 @FcStrBufString(%struct._FcStrBuf*, i8*) local_unnamed_addr #2

declare hidden void @IA__FcStrFree(i8*) local_unnamed_addr #2

declare hidden %struct._FcObjectSet* @IA__FcObjectSetCreate() local_unnamed_addr #2

declare hidden i32 @IA__FcObjectSetAdd(%struct._FcObjectSet*, i8*) local_unnamed_addr #2

declare hidden void @IA__FcObjectSetDestroy(%struct._FcObjectSet*) local_unnamed_addr #2

declare hidden %struct._FcPattern* @IA__FcPatternFilter(%struct._FcPattern*, %struct._FcObjectSet*) local_unnamed_addr #2

declare hidden %struct._FcPattern* @IA__FcPatternDuplicate(%struct._FcPattern*) local_unnamed_addr #2

declare hidden i32 @IA__FcPatternDel(%struct._FcPattern*, i8*) local_unnamed_addr #2

declare hidden i32 @IA__FcPatternGet(%struct._FcPattern*, i8*, i32, %struct._FcValue*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @skip_subexpr(%struct._FcFormatContext* nocapture) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct._FcFormatContext, %struct._FcFormatContext* %0, i64 0, i32 1
  %3 = load i8*, i8** %2, align 8
  %4 = load i8, i8* %3, align 1
  %5 = icmp eq i8 %4, 123
  br i1 %5, label %20, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct._FcFormatContext, %struct._FcFormatContext* %0, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %struct._FcFormatContext, %struct._FcFormatContext* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds i8, i8* %8, i64 %11
  %13 = icmp eq i8* %3, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %6
  tail call void (i8*, ...) @message(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i32 123) #5
  br label %56

15:                                               ; preds = %6
  %16 = ptrtoint i8* %3 to i64
  %17 = ptrtoint i8* %8 to i64
  %18 = add i64 %16, 1
  %19 = sub i64 %18, %17
  tail call void (i8*, ...) @message(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i32 123, i64 %19) #5
  br label %56

20:                                               ; preds = %1
  %21 = getelementptr inbounds i8, i8* %3, i64 1
  store i8* %21, i8** %2, align 8
  br label %22

22:                                               ; preds = %36, %20
  %23 = phi i8* [ %21, %20 ], [ %37, %36 ]
  %24 = load i8, i8* %23, align 1
  switch i8 %24, label %38 [
    i8 37, label %31
    i8 92, label %25
    i8 125, label %40
    i8 0, label %42
  ]

25:                                               ; preds = %22
  %26 = getelementptr inbounds i8, i8* %23, i64 1
  store i8* %26, i8** %2, align 8
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %36, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds i8, i8* %23, i64 2
  store i8* %30, i8** %2, align 8
  br label %36

31:                                               ; preds = %22
  %32 = tail call fastcc i32 @skip_percent(%struct._FcFormatContext* %0) #5
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %56, label %34

34:                                               ; preds = %31
  %35 = load i8*, i8** %2, align 8
  br label %36

36:                                               ; preds = %34, %25, %29, %38
  %37 = phi i8* [ %35, %34 ], [ %26, %25 ], [ %30, %29 ], [ %39, %38 ]
  br label %22

38:                                               ; preds = %22
  %39 = getelementptr inbounds i8, i8* %23, i64 1
  store i8* %39, i8** %2, align 8
  br label %36

40:                                               ; preds = %22
  %41 = getelementptr inbounds i8, i8* %23, i64 1
  store i8* %41, i8** %2, align 8
  br label %56

42:                                               ; preds = %22
  %43 = getelementptr inbounds %struct._FcFormatContext, %struct._FcFormatContext* %0, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = getelementptr inbounds %struct._FcFormatContext, %struct._FcFormatContext* %0, i64 0, i32 2
  %46 = load i32, i32* %45, align 8
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds i8, i8* %44, i64 %47
  %49 = icmp eq i8* %23, %48
  br i1 %49, label %50, label %51

50:                                               ; preds = %42
  tail call void (i8*, ...) @message(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i32 125) #5
  br label %56

51:                                               ; preds = %42
  %52 = ptrtoint i8* %23 to i64
  %53 = ptrtoint i8* %44 to i64
  %54 = add i64 %52, 1
  %55 = sub i64 %54, %53
  tail call void (i8*, ...) @message(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i32 125, i64 %55) #5
  br label %56

56:                                               ; preds = %31, %51, %50, %40, %15, %14
  %57 = phi i32 [ 0, %14 ], [ 0, %15 ], [ 1, %40 ], [ 0, %50 ], [ 0, %51 ], [ 0, %31 ]
  ret i32 %57
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @skip_percent(%struct._FcFormatContext* nocapture) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct._FcFormatContext, %struct._FcFormatContext* %0, i64 0, i32 1
  %3 = load i8*, i8** %2, align 8
  %4 = load i8, i8* %3, align 1
  %5 = icmp eq i8 %4, 37
  br i1 %5, label %20, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct._FcFormatContext, %struct._FcFormatContext* %0, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %struct._FcFormatContext, %struct._FcFormatContext* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds i8, i8* %8, i64 %11
  %13 = icmp eq i8* %3, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %6
  tail call void (i8*, ...) @message(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i32 37) #5
  br label %76

15:                                               ; preds = %6
  %16 = ptrtoint i8* %3 to i64
  %17 = ptrtoint i8* %8 to i64
  %18 = add i64 %16, 1
  %19 = sub i64 %18, %17
  tail call void (i8*, ...) @message(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i32 37, i64 %19) #5
  br label %76

20:                                               ; preds = %1
  %21 = getelementptr inbounds i8, i8* %3, i64 1
  store i8* %21, i8** %2, align 8
  %22 = tail call i64 @strtol(i8* %21, i8** %2, i32 10) #5
  %23 = load i8*, i8** %2, align 8
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, 123
  br i1 %25, label %40, label %26

26:                                               ; preds = %20
  %27 = getelementptr inbounds %struct._FcFormatContext, %struct._FcFormatContext* %0, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %struct._FcFormatContext, %struct._FcFormatContext* %0, i64 0, i32 2
  %30 = load i32, i32* %29, align 8
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds i8, i8* %28, i64 %31
  %33 = icmp eq i8* %23, %32
  br i1 %33, label %34, label %35

34:                                               ; preds = %26
  tail call void (i8*, ...) @message(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i32 123) #5
  br label %76

35:                                               ; preds = %26
  %36 = ptrtoint i8* %23 to i64
  %37 = ptrtoint i8* %28 to i64
  %38 = add i64 %36, 1
  %39 = sub i64 %38, %37
  tail call void (i8*, ...) @message(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i32 123, i64 %39) #5
  br label %76

40:                                               ; preds = %20
  %41 = getelementptr inbounds i8, i8* %23, i64 1
  store i8* %41, i8** %2, align 8
  br label %42

42:                                               ; preds = %56, %40
  %43 = phi i8* [ %41, %40 ], [ %57, %56 ]
  %44 = load i8, i8* %43, align 1
  switch i8 %44, label %58 [
    i8 123, label %51
    i8 92, label %45
    i8 125, label %60
    i8 0, label %62
  ]

45:                                               ; preds = %42
  %46 = getelementptr inbounds i8, i8* %43, i64 1
  store i8* %46, i8** %2, align 8
  %47 = load i8, i8* %46, align 1
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %56, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds i8, i8* %43, i64 2
  store i8* %50, i8** %2, align 8
  br label %56

51:                                               ; preds = %42
  %52 = tail call fastcc i32 @skip_subexpr(%struct._FcFormatContext* %0)
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %76, label %54

54:                                               ; preds = %51
  %55 = load i8*, i8** %2, align 8
  br label %56

56:                                               ; preds = %54, %49, %45, %58
  %57 = phi i8* [ %55, %54 ], [ %50, %49 ], [ %46, %45 ], [ %59, %58 ]
  br label %42

58:                                               ; preds = %42
  %59 = getelementptr inbounds i8, i8* %43, i64 1
  store i8* %59, i8** %2, align 8
  br label %56

60:                                               ; preds = %42
  %61 = getelementptr inbounds i8, i8* %43, i64 1
  store i8* %61, i8** %2, align 8
  br label %76

62:                                               ; preds = %42
  %63 = getelementptr inbounds %struct._FcFormatContext, %struct._FcFormatContext* %0, i64 0, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = getelementptr inbounds %struct._FcFormatContext, %struct._FcFormatContext* %0, i64 0, i32 2
  %66 = load i32, i32* %65, align 8
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds i8, i8* %64, i64 %67
  %69 = icmp eq i8* %43, %68
  br i1 %69, label %70, label %71

70:                                               ; preds = %62
  tail call void (i8*, ...) @message(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i32 125) #5
  br label %76

71:                                               ; preds = %62
  %72 = ptrtoint i8* %43 to i64
  %73 = ptrtoint i8* %64 to i64
  %74 = add i64 %72, 1
  %75 = sub i64 %74, %73
  tail call void (i8*, ...) @message(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i32 125, i64 %75) #5
  br label %76

76:                                               ; preds = %51, %35, %34, %15, %14, %71, %70, %60
  %77 = phi i32 [ 1, %60 ], [ 0, %70 ], [ 0, %71 ], [ 0, %14 ], [ 0, %15 ], [ 0, %34 ], [ 0, %35 ], [ 0, %51 ]
  ret i32 %77
}

declare hidden i32 @IA__FcPatternFindIter(%struct._FcPattern*, %struct._FcPatternIter*, i8*) local_unnamed_addr #2

declare hidden i32 @IA__FcPatternIterValueCount(%struct._FcPattern*, %struct._FcPatternIter*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @snprintf(i8* nocapture, i64, i8* nocapture readonly, ...) local_unnamed_addr #4

declare hidden i32 @IA__FcPatternGetLangSet(%struct._FcPattern*, i8*, i32, %struct._FcLangSet**) local_unnamed_addr #2

declare hidden %struct._FcStrSet* @IA__FcLangSetGetLangs(%struct._FcLangSet*) local_unnamed_addr #2

declare hidden %struct._FcStrList* @IA__FcStrListCreate(%struct._FcStrSet*) local_unnamed_addr #2

declare hidden i8* @IA__FcStrListNext(%struct._FcStrList*) local_unnamed_addr #2

declare hidden i32 @IA__FcPatternAddString(%struct._FcPattern*, i8*, i8*) local_unnamed_addr #2

declare hidden i32 @IA__FcPatternAdd(%struct._FcPattern*, i8*, i32, i8*, i32) local_unnamed_addr #2

declare hidden void @IA__FcStrListDone(%struct._FcStrList*) local_unnamed_addr #2

declare hidden %struct._FcValueList* @FcPatternIterGetValues(%struct._FcPattern*, %struct._FcPatternIter*) local_unnamed_addr #2

declare hidden i32 @FcNameUnparseValue(%struct._FcStrBuf*, %struct._FcValue*, i8*) local_unnamed_addr #2

declare hidden i32 @FcNameUnparseValueList(%struct._FcStrBuf*, %struct._FcValueList*, i8*) local_unnamed_addr #2

declare hidden i8* @IA__FcStrDowncase(i8*) local_unnamed_addr #2

declare hidden i8* @IA__FcStrBasename(i8*) local_unnamed_addr #2

declare hidden i8* @IA__FcStrDirname(i8*) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i8* @strpbrk(i8*, i8* nocapture) local_unnamed_addr #6

declare hidden i32 @FcStrBufData(%struct._FcStrBuf*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i8* @strchr(i8*, i32) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nofree nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind }
attributes #9 = { nounwind readonly }
attributes #10 = { cold }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
